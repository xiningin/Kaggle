{"cell_type":{"68913bc8":"code","ea9eb0fb":"code","0250fcc6":"code","9ca770a0":"code","b5a03412":"code","d9f1af33":"code","312c43c3":"code","a06cefbc":"code","11e638c8":"code","849b3bb3":"code","340a35d8":"code","ad15bafe":"code","7dd441b4":"code","86db2d81":"code","87a9a10b":"code","620923bf":"code","ba6c5c72":"code","1615e18f":"code","84266c1b":"code","cb84bc56":"markdown","bfbaf12b":"markdown","ad8c6d62":"markdown"},"source":{"68913bc8":"import os\nimport cv2\nimport pydicom\nimport numpy as np\nimport pandas as pd\nfrom matplotlib import pyplot as plt\nfrom tqdm.notebook import tqdm","ea9eb0fb":"BASE_PATH = '..\/input\/osic-pulmonary-fibrosis-progression-lungs-mask\/mask_clear\/mask_clear\/'","0250fcc6":"mask = np.zeros((1024, 1024))\ncount = 0\nfor k in tqdm(os.listdir(BASE_PATH)):\n    ldir = os.listdir(os.path.join(BASE_PATH, k))\n    norm = max([int(p[:-4]) for p in os.listdir(os.path.join(BASE_PATH, k))])\n    for p in ldir:\n        coeff = int(p[:-4]) \/ norm\n        if coeff > 0.2 and coeff < 0.8:\n            mask += cv2.resize(cv2.imread(os.path.join(BASE_PATH, k, p), 0), (1024, 1024)) \/ 255.\n            count += 1\nmask = mask \/ count","9ca770a0":"maskap = cv2.bilateralFilter(mask.astype('float32'),9,25,25)\nmaskap = (maskap - maskap.min()) \/ (maskap.max() - maskap.min())","b5a03412":"if not os.path.exists('mask'):\n    os.mkdir('mask') ","d9f1af33":"plt.figure(figsize=(10,10))\n\nplt.imshow(maskap)","312c43c3":"plt.figure(figsize=(10,10))\n\nplt.imshow(maskap > 0.35);","a06cefbc":"maska = (maskap > 0.35).astype('uint8') \nmaska_r, maska_l = maska.copy(), maska.copy()\n\nmaska_r[:, :512] = 0\nmaska_l[:, 512:] = 0","11e638c8":"plt.figure(figsize=(10,10))\n\nplt.imshow(maska_r, alpha=0.5)\nplt.imshow(maska_l, alpha=0.5)","849b3bb3":"cv2.imwrite('mask\/left_mask_asymetric.jpg', maska_l)\ncv2.imwrite('mask\/right_mask_asymetric.jpg', maska_r)","340a35d8":"masks = (maskap + maskap[:, ::-1] +\n         maskap[::-1, ::-1] + maskap[::-1, :]) \/ 4.","ad15bafe":"plt.figure(figsize=(10,10))\n\nplt.imshow(masks);","7dd441b4":"plt.figure(figsize=(10,10))\n\nplt.imshow(masks > 0.5)","86db2d81":"masks = (masks > 0.5).astype(float)","87a9a10b":"masks_r, masks_l = masks.copy(), masks.copy()\n\nmasks_r[:, :512] = 0\nmasks_l[:, 512:] = 0","620923bf":"plt.figure(figsize=(10,10))\n\nplt.imshow(masks_r, alpha=0.5)\nplt.imshow(masks_l, alpha=0.5)","ba6c5c72":"cv2.imwrite('mask\/left_mask_simetric.jpg', masks_l)\ncv2.imwrite('mask\/right_mask_simetric.jpg', masks_r)","1615e18f":"import zipfile\n\ndef zip_and_remove(path):\n    ziph = zipfile.ZipFile(f'{path}.zip', 'w', zipfile.ZIP_DEFLATED)\n    \n    for root, dirs, files in os.walk(path):\n        for file in files:\n            file_path = os.path.join(root, file)\n            ziph.write(file_path)\n            os.remove(file_path)\n    \n    ziph.close()","84266c1b":"zip_and_remove('mask') ","cb84bc56":"## Save in zip","bfbaf12b":"## Symetric Mask","ad8c6d62":"## Asymetric Mask"}}