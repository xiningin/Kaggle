{"cell_type":{"666b80db":"code","bcdfb427":"code","93d1de54":"code","80242483":"code","f3ed9903":"code","2b836f83":"code","bbf337c0":"code","b9a95c1d":"code","b8917d16":"code","641d8df8":"code","2691edc3":"code","c50b8fab":"code","dd50e7fb":"code","8322344a":"code","4520eeeb":"code","cf7c25b7":"code","1221835b":"code","36ec1fbe":"code","b8521fd6":"code","73efb046":"code","ad60ee38":"code","117ef9dc":"code","0a349380":"code","9b8f55b6":"code","de7db3ee":"code","a802d8f8":"code","d8cc3c14":"code","181a704d":"code","c536e873":"code","ac05a0ab":"code","705bff60":"code","5c80ad1a":"code","c1de10f4":"markdown","044206bf":"markdown","715756dd":"markdown","89eea701":"markdown","7dd1bba3":"markdown","afecfe84":"markdown","3f5ce655":"markdown","20cc6c29":"markdown","b7144896":"markdown","fdb5d465":"markdown","0f93ee00":"markdown","dd8339bb":"markdown","a2d0432a":"markdown"},"source":{"666b80db":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bcdfb427":"#import files to data frame and merge it\n\ndfm2016 = pd.read_csv(\"..\/input\/sao-paulo-traffic-violations\/infracoes_m_2016.csv\", sep = \",\")\ndfe2016 = pd.read_csv(\"..\/input\/sao-paulo-traffic-violations\/infracoes_e_2016.csv\", sep = \",\")\n\ndfm2017 = pd.read_csv(\"..\/input\/sao-paulo-traffic-violations\/infracoes_m_2017.CSV\", sep = \",\")\ndfe2017 = pd.read_csv(\"..\/input\/sao-paulo-traffic-violations\/infracoes_e_2017.csv\", sep = \",\")\n\ndfm2018 = pd.read_csv(\"..\/input\/sao-paulo-traffic-violations\/infracoes_m_2018.csv\", sep = \",\")\ndfe2018 = pd.read_csv(\"..\/input\/sao-paulo-traffic-violations\/infracoes_e_2018.csv\", sep = \",\")\n\n\n\ndf = dfe2017.append(dfm2017)\ndf = df.append(dfe2018)\ndf = df.append(dfm2018)\ndf = df.append(dfm2016)\ndf = df.append(dfe2016)\n\ndf.sample(5)\n","93d1de54":"\nsorted(list(df.columns))","80242483":"df.nunique()","f3ed9903":"#library\n\nimport matplotlib.pyplot as plt\n\nimport seaborn as sns\n\nimport plotly.offline as plotly\nimport plotly.graph_objs as go","2b836f83":"df['enquadramento'].value_counts().head(10)","bbf337c0":"#df['enquadramento'].value_counts().head(10).plot.bar()\nbar_chart7 = go.Bar(x=df['enquadramento'].value_counts().index, y=df['enquadramento'].value_counts().head(10))\nplotly.iplot([bar_chart7])","b9a95c1d":"bar_chart = go.Bar(x=df['tipo_infracao'].value_counts().index, y=df['tipo_infracao'].value_counts())\nplotly.iplot([bar_chart])","b8917d16":"#Hour of violations\n#bar_chart3 = go.Bar(x=df['hora'].value_counts().index, y=df['hora'].value_counts())\n#plotly.iplot([bar_chart3])\n\nbar_chart3 = go.Figure(go.Bar(x=df['hora'].value_counts().index, y=df['hora'].value_counts()))\nbar_chart3.update_layout(barmode = 'stack', xaxis={'categoryorder':'array', 'categoryarray':['00:00','01:00','02:00','03:00','04:00', '05:00', '06:00','07:00','08:00', '09:00','10:00','11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00']})\n#plotly.iplot([bar_chart2])\nbar_chart3.show()","641d8df8":"#histogram weekday\n#week days analysis\n#sns.countplot(x='dia_semana', data=df)\n\nbar_chart2 = go.Figure(go.Bar(x=df['dia_semana'].value_counts().index, y=df['dia_semana'].value_counts()))\nbar_chart2.update_layout(barmode = 'stack',  xaxis={'categoryorder':'array', 'categoryarray':['dom','seg','ter','qua','qui', 'sex', 's\u00e1b']})\n#plotly.iplot([bar_chart2])\nbar_chart2.show()","2691edc3":"#histogram month day\n#sns.countplot(x='dia', data=df)\nbar_chart4 = go.Bar(x=df['dia'].value_counts().index, y=df['dia'].value_counts())\nplotly.iplot([bar_chart4])","c50b8fab":"#month\nbar_chart5 = go.Figure(go.Bar(x=df['mes'].value_counts().index, y=df['mes'].value_counts()))\nbar_chart5.update_layout(barmode = 'stack', xaxis={'categoryorder':'array', 'categoryarray':['jan','fev','mar','abr','mai', 'jun', 'jul', 'ago', 'set', 'out', 'nov', 'dez']})\n#plotly.iplot([bar_chart2])\nbar_chart5.show()","dd50e7fb":"#histogram year\n\nbar_chart6 = go.Bar(x=df['ano'].value_counts().index, y=df['ano'].value_counts())\nplotly.iplot([bar_chart6])","8322344a":"pie_chart = go.Pie(labels=df['Tipo ve\u00edculo'].value_counts().index, values=df['Tipo ve\u00edculo'].value_counts())\nplotly.iplot([pie_chart])","4520eeeb":"pie_chart = go.Pie(labels=df['autuacao'].value_counts().index, values=df['autuacao'].value_counts())\nplotly.iplot([pie_chart])","cf7c25b7":"#\ndfv = df.query(\"enquadramento == 'Transitar Em Velocidade Superior A Maxima Permitida Em Ate 20%'\")\ndfv = dfv.append(df.query(\"enquadramento == 'Transitar Em Velocidade Superior A Maxima Permitida Em Mais De 20% Ate 50%'\"))\ndfv = dfv.append(df.query(\"enquadramento == 'Transitar Em Velocidade Superior A Maxima Permitida Em Mais De 50%'\"))\n","1221835b":"#df['enquadramento'].value_counts().head(10).plot.bar()\nbar_chart7 = go.Bar(x=dfv['enquadramento'].value_counts().index, y=dfv['enquadramento'].value_counts().head(10))\nplotly.iplot([bar_chart7])","36ec1fbe":"bar_chart = go.Bar(x=dfv['tipo_infracao'].value_counts().index, y=dfv['tipo_infracao'].value_counts())\nplotly.iplot([bar_chart])","b8521fd6":"\n\nbar_chart3 = go.Figure(go.Bar(x=dfv['hora'].value_counts().index, y=dfv['hora'].value_counts(normalize = True)))\nbar_chart3.update_layout(barmode = 'stack', xaxis={'categoryorder':'array', 'categoryarray':['00:00','01:00','02:00','03:00','04:00', '05:00', '06:00','07:00','08:00', '09:00','10:00','11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00']})\n#plotly.iplot([bar_chart2])\nbar_chart3.show()","73efb046":"\n\nbar_chart2 = go.Figure(go.Bar(x=dfv['dia_semana'].value_counts().index, y=dfv['dia_semana'].value_counts(normalize = True)))\nbar_chart2.update_layout(barmode = 'stack',  xaxis={'categoryorder':'array', 'categoryarray':['dom','seg','ter','qua','qui', 'sex', 's\u00e1b']})\n#plotly.iplot([bar_chart2])\nbar_chart2.show()","ad60ee38":"#histogram month day\n#sns.countplot(x='dia', data=df)\nbar_chart4 = go.Bar(x=dfv['dia'].value_counts().index, y=dfv['dia'].value_counts(normalize = True))\nplotly.iplot([bar_chart4])","117ef9dc":"#month\nbar_chart5 = go.Figure(go.Bar(x=dfv['mes'].value_counts().index, y=dfv['mes'].value_counts(normalize = True)))\nbar_chart5.update_layout(barmode = 'stack', xaxis={'categoryorder':'array', 'categoryarray':['jan','fev','mar','abr','mai', 'jun', 'jul', 'ago', 'set', 'out', 'nov', 'dez']})\n#plotly.iplot([bar_chart2])\nbar_chart5.show()","0a349380":"#histogram year\n\nbar_chart6 = go.Bar(x=dfv['ano'].value_counts().index, y=dfv['ano'].value_counts())\nplotly.iplot([bar_chart6])","9b8f55b6":"pie_chart = go.Pie(labels=dfv['Tipo ve\u00edculo'].value_counts().index, values=dfv['Tipo ve\u00edculo'].value_counts())\nplotly.iplot([pie_chart])","de7db3ee":"#df['local'].value_counts().head(10).plot.bar()\nbar_chart7 = go.Bar(x=dfv['local'].value_counts().index, y=dfv['local'].value_counts(normalize = True).head(10))\nplotly.iplot([bar_chart7])","a802d8f8":"dfvwe = dfv.query(\"dia_semana == 'dom'\")\ndfvwe = dfvwe.append(dfv.query(\"dia_semana == 's\u00e1b'\"))\n","d8cc3c14":"bar_chart3 = go.Figure(go.Bar(x=dfvwe['hora'].value_counts().index, y=dfvwe['hora'].value_counts(normalize = True)))\nbar_chart3.update_layout(barmode = 'stack', xaxis={'categoryorder':'array', 'categoryarray':['00:00','01:00','02:00','03:00','04:00', '05:00', '06:00','07:00','08:00', '09:00','10:00','11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00']})\n#plotly.iplot([bar_chart2])\nbar_chart3.show()","181a704d":"bar_chart2 = go.Figure(go.Bar(x=dfvwe['dia_semana'].value_counts().index, y=dfvwe['dia_semana'].value_counts(normalize = True)))\nbar_chart2.update_layout(barmode = 'stack',  xaxis={'categoryorder':'array', 'categoryarray':['dom','seg','ter','qua','qui', 'sex', 's\u00e1b']})\n#plotly.iplot([bar_chart2])\nbar_chart2.show()","c536e873":"#month\nbar_chart5 = go.Figure(go.Bar(x=dfvwe['mes'].value_counts().index, y=dfvwe['mes'].value_counts(normalize = True)))\nbar_chart5.update_layout(barmode = 'stack', xaxis={'categoryorder':'array', 'categoryarray':['jan','fev','mar','abr','mai', 'jun', 'jul', 'ago', 'set', 'out', 'nov', 'dez']})\n#plotly.iplot([bar_chart2])\nbar_chart5.show()","ac05a0ab":"bar_chart6 = go.Bar(x=dfvwe['ano'].value_counts().index, y=dfvwe['ano'].value_counts())\nplotly.iplot([bar_chart6])","705bff60":"pie_chart = go.Pie(labels=dfvwe['Tipo ve\u00edculo'].value_counts().index, values=dfvwe['Tipo ve\u00edculo'].value_counts())\nplotly.iplot([pie_chart])","5c80ad1a":"#df['local'].value_counts().head(10).plot.bar()\nbar_chart7 = go.Bar(x=dfvwe['local'].value_counts().index, y=dfvwe['local'].value_counts(normalize = True).head(10))\nplotly.iplot([bar_chart7])","c1de10f4":"**Check source of registry of speed violations**","044206bf":"**Verify the weekdays of distribution speed violations**","715756dd":"**Define a sub dataset with velocity infractions**","89eea701":"**Import files of violtions** \ninfracoes_m_2017.CSV = manual fines applied by enforcement agent\ninfracoes_e_2017.csv = automatic fines applied by enforcement equipment","7dd1bba3":"With this analysis is possible to verify, some kind of information.\n\"enquadramento\" means the type of fines applied, for 2 years of information 250 diferent types of violations.","afecfe84":"# **Source of traffic violations**\n**Eletr\u00f4nicas = Fines apllied by eletronic equipments (radars), \nManual = Fines applied by traffic agent**","3f5ce655":"# **Zoom in speed violations on weekend, that reprensents almost 40% of violations**","20cc6c29":"**Government agencies that apply fines in S\u00e3o Paulo city.**\n**DSV** - Traffic Engeenier Department\n**PM** - Militar Police (S\u00e3o Paulo State)\n**SPTrans** - Transportantion Department\n**GCM** - Civil Policy (S\u00e3o Paulo municipality)","b7144896":"# **Analys of velocity violation**","fdb5d465":"**Check the time distribution speed violation**","0f93ee00":"**List imported fields**","dd8339bb":"# **Explore Dataset**","a2d0432a":"# **Top 10 types of traffic violations**"}}