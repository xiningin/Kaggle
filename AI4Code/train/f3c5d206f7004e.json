{"cell_type":{"7ad7ffba":"code","604985ae":"code","4f33e413":"code","10818e05":"code","70e2fcc4":"code","6a056b74":"code","3b622b63":"code","1a1aa536":"code","81b8fdb7":"code","a9ba831a":"code","dba4ac08":"code","66707a63":"code","d07a7bef":"code","ccf6aa1f":"code","476f1ff4":"code","0060bf21":"code","ab3a78d7":"code","ce27db34":"code","711aa0c7":"code","779c49fe":"code","163f9347":"code","e67d90eb":"code","29012c91":"code","cdaeb7b1":"code","9ef3935b":"code","a6fbeb66":"code","b09e8ff9":"code","157b3e6c":"code","6932b2a9":"code","836a9ee0":"code","cd4cbde9":"code","9ba74b03":"code","c22615c4":"code","25725602":"code","b95135b6":"code","655c3ba5":"code","64abd63e":"code","1404948d":"code","151cc3b2":"code","9da77174":"code","2ff1e49f":"code","682c2ac7":"code","87d93850":"code","d74c39dc":"code","2a8efc24":"code","4de59902":"code","d872c580":"code","220b2cdd":"code","ace3b9ca":"code","81e6ddfc":"code","c76cf153":"code","0ff41da7":"code","b4c594c3":"code","178ab92f":"code","b9545e3c":"code","8e3b507c":"code","c6c8bea3":"code","8bd6caeb":"code","8cdf5c89":"code","ef6b372b":"code","1b46d0da":"code","4bc3e2e5":"code","4852825f":"code","cf11ff25":"code","f9a75c60":"code","a3647318":"code","8bb353fb":"code","1bfff22e":"code","8e859868":"code","3ad06740":"code","1e8b2d06":"code","ccd0a2a4":"code","dbb0876a":"code","339460b7":"code","dd69902e":"code","55e958ac":"code","c9cfa148":"code","22f1a58e":"code","8cc5f085":"code","7ab4f016":"markdown","6e716756":"markdown","9e7123f8":"markdown","4dc07eb7":"markdown","e08d64c4":"markdown","8ee4e6a6":"markdown","c8d6851c":"markdown","46f1f459":"markdown","20c35beb":"markdown","8bdceb5a":"markdown","5353d1e9":"markdown","bb335f09":"markdown","92877b57":"markdown"},"source":{"7ad7ffba":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","604985ae":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\nimport math\nfrom pandas.plotting import scatter_matrix","4f33e413":"data = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')","10818e05":"test_data = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","70e2fcc4":"data.head()","6a056b74":"data.shape","3b622b63":"# Save test predictions to file\n#output = pd.DataFrame({'PassengerId': data.PassengerId,'Survived': preds})\n#output.to_csv('submission.csv', index=False)","1a1aa536":"copy_data = data","81b8fdb7":"copy_test_data = test_data","a9ba831a":"data.info()","dba4ac08":"classes = data.Pclass.unique()\nclasses.sort()\nlen(classes)","66707a63":"classes","d07a7bef":"data.describe()","ccf6aa1f":"print(\"Number of Passengers is equal to \" + str(len(data)))","476f1ff4":"data.groupby('Pclass').size()","0060bf21":"data.groupby('Sex').size()","ab3a78d7":"data.groupby('Survived').size()","ce27db34":"data.columns","711aa0c7":"dataset = data[['Sex', 'Age', 'SibSp','Parch', 'Ticket', 'Fare', 'Cabin', 'Embarked']]","779c49fe":"dataset.plot(kind='box', subplots=True, layout=(2,2), sharex=False, sharey=False)\nplt.show()","163f9347":"scatter_matrix(dataset)\nplt.show()","e67d90eb":"sns.set_theme(style=\"darkgrid\")\nsns.countplot(x= \"Survived\", hue=\"Sex\", order=[1, 0], data = data).set(xticklabels=[\"Survived\", \"Not Survived\"])\nplt.xlabel(\"Survivors vs Non-Survivors Comparison\")\nplt.ylabel(\"Number of Passengers\")\nplt.title(\"Comparison\")\nplt.legend(labels=[\"Male\", \"Female\"])\nplt.show()","29012c91":"sns.set_theme(style=\"whitegrid\")\nsns.countplot(x= \"Survived\", hue=\"Pclass\", data = data).set(xticklabels=[\"Survived\", \"Not Survived\"])\nplt.xlabel(\"Survivors vs Non-Survivors Comparison\")\nplt.ylabel(\"Number of Passengers\")\nplt.title(\"Comparison\")\nplt.legend(title='Passenger Class', loc='upper right', labels=[\"First Class\", \"Second Class\", \"Third Class\"])\nplt.show()","cdaeb7b1":"dataset.hist(figsize=(15,7.5))\nplt.show()","9ef3935b":"data[\"Age\"].hist(figsize=(10,5))\nplt.show()","a6fbeb66":"data[\"Fare\"].plot.hist(figsize=(10,5), bins = 40)\nplt.show()","b09e8ff9":"data.isnull()","157b3e6c":"data.isnull().sum()","6932b2a9":"sns.heatmap(data.isnull(), yticklabels = False, cmap = \"plasma\")\nplt.show()","836a9ee0":"sns.set_theme(style=\"darkgrid\")\nsns.boxplot(x= \"Pclass\", y=\"Age\", data = data)\nplt.show()","cd4cbde9":"data.head()","9ba74b03":"data.drop(\"Cabin\", axis =1, inplace =True)","c22615c4":"data.head()","25725602":"len(data.columns)","b95135b6":"sex = pd.get_dummies(data[\"Sex\"], drop_first = True)\nsex.head(5)","655c3ba5":"embarked = pd.get_dummies(data[\"Embarked\"], drop_first = True)\nembarked.head(5)","64abd63e":"Pcl= pd.get_dummies(data[\"Pclass\"], drop_first = True)\nPcl.head(5)","1404948d":"data.head()","151cc3b2":"len(data.columns)","9da77174":"data = pd.concat([data, sex, embarked, Pcl], axis = 1)\ndata.head()","2ff1e49f":"len(data.columns)","682c2ac7":"data.drop([\"Sex\", \"Pclass\", \"PassengerId\", \"Embarked\", \"Name\"], axis =1, inplace = True)","87d93850":"data.drop([\"Ticket\"], axis =1, inplace = True)","d74c39dc":"len(data.columns)","2a8efc24":"data=data.fillna(data.mean())","4de59902":"sns.heatmap(data.isnull(), yticklabels = False, cmap = \"plasma\")\nplt.show()","d872c580":"data.head(5)","220b2cdd":"data.shape","ace3b9ca":"X = data.drop(\"Survived\", axis = 1)\ny = data[\"Survived\"]","81e6ddfc":"from sklearn.linear_model import LogisticRegression","c76cf153":"from sklearn.model_selection import train_test_split","0ff41da7":"X_train, X_test, y_train, y_test = train_test_split(X, y, random_state = 1, test_size = 0.587)","b4c594c3":"model = LogisticRegression(solver='liblinear')\nmodel_2 = LogisticRegression(solver='liblinear')","178ab92f":"model.fit(X_train, y_train)","b9545e3c":"preds = model.predict(X_test)","8e3b507c":"from sklearn.metrics import classification_report","c6c8bea3":"classification_report(y_test,preds)","8bd6caeb":"from sklearn.metrics import confusion_matrix","8cdf5c89":"confusion_matrix(y_test, preds)","ef6b372b":"from sklearn.metrics import accuracy_score","1b46d0da":"accuracy_score(y_test, preds)","4bc3e2e5":"test_data.isnull().sum()","4852825f":"test_data = test_data.drop(\"Cabin\", axis = 1)","cf11ff25":"sns.heatmap(test_data.isnull(), yticklabels = False, cmap = \"plasma\")\nplt.show()","f9a75c60":"tsex = pd.get_dummies(test_data[\"Sex\"], drop_first = True)\ntembarked = pd.get_dummies(test_data[\"Embarked\"], drop_first = True)\ntPcl= pd.get_dummies(test_data[\"Pclass\"], drop_first = True)","a3647318":"test_data = pd.concat([test_data, tsex, tembarked, tPcl], axis = 1)\ntest_data.head()","8bb353fb":"test_data.drop([\"Sex\", \"Pclass\", \"PassengerId\", \"Embarked\", \"Name\", \"Ticket\"], axis =1, inplace = True)","1bfff22e":"test_data.head()","8e859868":"test_data.isnull().sum()","3ad06740":"test_data=test_data.fillna(data.mean())\ntest_data.isnull().sum()","1e8b2d06":"test_data.shape","ccd0a2a4":"X_2 = data.drop(\"Survived\", axis = 1)\ny_2 = data[\"Survived\"]\nX_test_2 = test_data","dbb0876a":"model_2.fit(X_2, y_2)\npreds2 = model_2.predict(X_test_2)","339460b7":"output = pd.DataFrame({'PassengerId': copy_test_data.PassengerId, 'Survived': preds2})\noutput.to_csv('submission2.csv', index=False)","dd69902e":"sub = pd.read_csv('.\/submission2.csv')","55e958ac":"sub.shape","c9cfa148":"sub.describe()","22f1a58e":"sub.head()","8cc5f085":"sub.info()","7ab4f016":"The first 5 rows of the data are","6e716756":"All set, let us now import all the required libraries","9e7123f8":"All Null Values have been dropped!","4dc07eb7":"Ok, so it has 891 rows and 12 columns","e08d64c4":"So three different classes","8ee4e6a6":"Applying Logistic Regression","c8d6851c":"Data Analysis","46f1f459":"Data Wrangling","20c35beb":"Let us import the data set into the data variable","8bdceb5a":"Let us now describe the data","5353d1e9":"Let us see the different types of passenger classes in this dataset","bb335f09":"Let us take a look at the shape of the data set","92877b57":"Now let us take a look at some information regarding this dataset"}}