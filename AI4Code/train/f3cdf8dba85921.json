{"cell_type":{"c2567799":"code","235cb0f4":"code","cf0eed63":"code","ee02ec47":"code","a297934e":"code","c8d56663":"code","40737910":"code","0806d430":"code","770c79a3":"code","703fa610":"code","c8529eb5":"code","82ea135f":"code","bd219034":"code","b6d4ed63":"code","fc9f55ff":"code","45467fa2":"code","5df25e0c":"code","c081602c":"code","643a2bbe":"code","9ebd317b":"code","eaf368fa":"code","21aaaf8a":"code","4694cb5b":"code","8c47345b":"code","1395c097":"code","1fd5b1c5":"code","3665f6ee":"code","b57897de":"code","fc697eaa":"code","cfcc101c":"code","94f97f94":"code","1cb00641":"code","5de70690":"code","94c4b030":"code","fdde9a9c":"markdown","42867695":"markdown","374cd2bf":"markdown","325fb679":"markdown","32b24f7d":"markdown","1722902e":"markdown","060f8042":"markdown","85e27f17":"markdown","0127ad83":"markdown","d7a93f72":"markdown","83e839c1":"markdown","b7bc2837":"markdown","edd2e081":"markdown","e12ff9c1":"markdown","9504430b":"markdown"},"source":{"c2567799":"!pip install dexplot -q\n!pip install altair -q\n!pip install datasist -q","235cb0f4":"import warnings\nwarnings.filterwarnings('ignore')\n\n# for some basic operations\nimport numpy as np \nimport pandas as pd \n\n# for visualizations\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom pandas import plotting\nfrom pandas_profiling import ProfileReport\nfrom pandas.plotting import parallel_coordinates\nimport datasist as ds\n\n# for interactive visualizations\n\nimport plotly\nimport plotly.offline as py\nfrom plotly.offline import init_notebook_mode, iplot\nimport plotly.graph_objs as go\nfrom plotly import tools\ninit_notebook_mode(connected = True)\nimport plotly.figure_factory as ff\nimport dexplot as dxp\n\n# for animated visualizations\n\nimport plotly_express as px\nimport altair as alt\nalt.data_transformers.disable_max_rows()\n\n# for providing path\n\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# for modelling\n\nimport sklearn\nimport imblearn\n\n# for model explanation\nimport shap \nimport eli5","cf0eed63":"df = pd.read_csv('\/kaggle\/input\/ecommerce-data\/ecommerce.csv')","ee02ec47":"df.head()","a297934e":"df.columns = df.columns.str.strip().str.lower().str.replace(' ', '_').str.replace('(', '').str.replace(')', '')","c8d56663":"df.info()","40737910":"ds.structdata.describe(df)","0806d430":"df = ds.feature_engineering.fill_missing_cats(df)\ndf = ds.feature_engineering.fill_missing_num(df)","770c79a3":"ds.structdata.display_missing(df)","703fa610":"df['sales'] = df['sales'].str.replace('[^\\d\\.]', '').astype(float)\ndf['profit'] = df['profit'].str.replace('[^\\d\\.]', '').astype(float)\ndf.drop(df.index[535],inplace=True)\ndf['shipping_cost'] = df['shipping_cost'].str.replace('$', '').astype(float)","c8529eb5":"fig, ax = plt.subplots(1,1, figsize=(15,6))\ndf_ship_mode=df.ship_mode.value_counts().sort_values(ascending=False).to_frame()\nax=sns.barplot(data=df_ship_mode,x=df_ship_mode.index,y='ship_mode',palette=\"winter\")\nax.set_title('Ship Mode Distribution')\n\nax.set_xlabel('Mode of Shipping')\nax.set_ylabel('Count')\nax.set_xticklabels(ax.get_xticklabels(),rotation=90)\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), '1.0f'), \n                   (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   xytext = (0, 9), \n                   textcoords = 'offset points')\nfor s in ['top', 'left', 'right', 'bottom']:\n    ax.spines[s].set_visible(False)","82ea135f":"dxp.count('product_category',data = df,figsize=(10,5),cmap='viridis',title='Count for Product Category')","bd219034":"dxp.bar('ship_mode','sales',data = df,figsize=(10,5),aggfunc='median',split='product_category',title='Sales for Product Category')","b6d4ed63":"dxp.bar('product_category','sales',data = df,figsize=(10,5),aggfunc='mean',split='order_priority',title='Sales for Product Category')","fc9f55ff":"fig, ax = plt.subplots(1,1, figsize=(15,6))\ndf_prod=df['product'].value_counts().sort_values(ascending=False).to_frame()[:20]\nax=sns.barplot(data=df_prod,x=df_prod.index,y='product',palette=\"winter_r\")\nax.set_title('Product Sold in Online Sale')\n\nax.set_xlabel('Mode of Shipping')\nax.set_ylabel('Count')\nax.set_xticklabels(ax.get_xticklabels(),rotation=90)\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), '1.0f'), \n                   (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   xytext = (0, 9), \n                   textcoords = 'offset points')\nfor s in ['top', 'left', 'right', 'bottom']:\n    ax.spines[s].set_visible(False)","45467fa2":"grpcount = pd.DataFrame(df.groupby('country')['sales'].sum()).reset_index()\ngrpcount_ = grpcount.sort_values(by = 'sales', ascending = False)\n\nfig = px.bar(grpcount_.iloc[:20],\n             x = 'country', y = 'sales', title = 'Top 20 Countries based Sales')\nfig.show()","5df25e0c":"fig = px.choropleth(df, locations=\"country\", color=\"sales\", hover_name=\"country\", animation_frame=\"months\", range_color=[20,80],title = 'Animation Plot for World Sales')\nfig.show()","c081602c":"grpcount = pd.DataFrame(df.groupby('state')['sales'].sum()).reset_index()\ngrpcount_ = grpcount.sort_values(by = 'sales', ascending = False)\n\nfig = px.bar(grpcount_.iloc[:20], \n             x = 'state', y = 'sales', title = 'Top 20 states based Sales')\nfig.update_traces(texttemplate='%{text:.2s}', textposition='outside')\nfig.update_layout(uniformtext_minsize=8, uniformtext_mode='hide')\nfig.show()","643a2bbe":"grpcount = pd.DataFrame(df.groupby('customer_name')['sales'].sum()).reset_index()\ngrpcount_ = grpcount.sort_values(by = 'sales', ascending = False)\n\nfig = px.bar(grpcount_.iloc[:20], \n             x = 'customer_name', y = 'sales', title = 'Top 20 Customers')\nfig.show()","9ebd317b":"fig = px.pie(df, values='profit', names='region', title='Reigon wise Profit Earned')\nfig.show()","eaf368fa":"fig = px.sunburst(df, path=['country', 'state'], values='profit',color='product_category', hover_data=['country'],title = 'Sunburst')\nfig.show()","21aaaf8a":"fig = px.bar(df.groupby(['ship_mode']).count())\n\nfig.show()","4694cb5b":"dxp.bar(x='region', y='sales', data=df, aggfunc='mean', split='segment',figsize=(15,5))","8c47345b":"df.drop(df.index[321],inplace=True)\ndf['order_date'] = pd.to_datetime(df['order_date'])\ndf['ship_date'] = pd.to_datetime(df['ship_date'])\ndf['quantity'] = pd.to_numeric(df['quantity'])\n    \n\ndf['lapsdays'] = (df['ship_date'] - df['order_date']).dt.days","1395c097":"dxp.bar(x='ship_mode', y='lapsdays', data=df, aggfunc='mean', split='order_priority',figsize=(15,5))","1fd5b1c5":"grpcount = pd.DataFrame(df.groupby('segment')['lapsdays'].sum()).reset_index()\ngrpcount_ = grpcount.sort_values(by = 'lapsdays', ascending = False)\n\nlabels = ['Consumer', 'Corporate','Home Office']\nsize = grpcount_['segment'].value_counts()\ncolors = ['green', 'lightskyblue','lightblue']\nexplode = [0, 0.1,0.1]\n\nplt.rcParams['figure.figsize'] = (8, 8)\nplt.pie(size, colors = colors, explode = explode, labels = labels, shadow = True, autopct = '%.2f%%')\nplt.title('Segment Pie to Laps Days', fontsize = 20)\nplt.axis('off')\nplt.legend()\nplt.show()","3665f6ee":"plt.figure(figsize=(12,8))\nsns.kdeplot(df['sales'][df.order_priority == 'Medium'], shade=False)\nsns.kdeplot(df['sales'][df.order_priority == 'Critical'], shade=True)\nsns.kdeplot(df['sales'][df.order_priority == 'High'], shade=False)\nplt.legend(['Medium', 'Critical','High'])\nplt.title('Sales Distribution ')\nplt.show()","b57897de":"plt.figure(figsize=(12,8))\nsns.kdeplot(df['profit'][df.region == 'Central'], shade=True)\nsns.kdeplot(df['profit'][df.region == 'North'], shade=False)\nsns.kdeplot(df['profit'][df.region == 'South'], shade=True)\nsns.kdeplot(df['profit'][df.region == 'East'], shade=False)\nsns.kdeplot(df['profit'][df.region == 'West'], shade=True)\n\nplt.legend(['Central', 'North','South','East','West'])\nplt.title('Profit Distribution ')\nplt.show()","fc697eaa":"dxp.line(x='segment', y='profit', data=df, aggfunc='mean', orientation='v',figsize=(15,5),title='Line Plot for Profit Earned Segment wise')","cfcc101c":"dxp.line(x='ship_mode', y='quantity', data=df, aggfunc='mean', split='segment',figsize=(15,5),title = 'Line Plot for Quantity vs Ship mode and Segment')","94f97f94":"f,ax=plt.subplots(1,2,figsize=(20,10))\nsns.boxenplot(\"ship_mode\",\"profit\", hue=\"segment\", data=df,ax=ax[0])\nax[0].set_title('Segment and Profit vs Ship mode')\nsns.boxenplot(\"ship_mode\",\"sales\", hue=\"segment\", data=df,ax=ax[1])\nax[1].set_title('Segment and Sales vs Ship model')\nplt.show()\n","1cb00641":"axes = sns.relplot(x=\"months\", y=\"sales\", hue=\"product_category\",\n                size=\"quantity\", data=df,palette='winter', sizes=(100, 300),alpha=0.5,aspect=2)\naxes.set(xlabel='Months',title=\"Months wise Sales\")\n\naxes.set_xticklabels();","5de70690":"dxp.scatter(x='sales', y='profit', data=df, split='product_category', col='segment', col_order=['Consumer','Corporate'],title = 'Scatter for Profit and Sales')","94c4b030":"fig, ax = plt.subplots(1,1, figsize=(15,6))\nXP=df.city.value_counts().sort_values(ascending=False).to_frame()[:10]\nax=sns.barplot(data=XP,x=XP.index,y='city')\nax.set_title('Top Cities with Most Online Customers')\n\nax.set_xlabel('City')\nax.set_ylabel('Counts')\nax.set_xticklabels(ax.get_xticklabels(),rotation=90)\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), '1.0f'), \n                   (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   xytext = (0, 9), \n                   textcoords = 'offset points')\nfor s in ['top', 'left', 'right', 'bottom']:\n    ax.spines[s].set_visible(False)","fdde9a9c":"<div class=\"alert alert-success\">  \n<h3><strong>Missing Values Info<\/strong><\/h3>\n<\/div>","42867695":"<div class=\"alert alert-success\">  \n<h3><strong>Basic Data Crunches found<\/strong><\/h3>\n<\/div>","374cd2bf":"<div class=\"alert alert-warning\">\n  <h3>Its Fun performing insights on this Data, Great Learning so far! Will continue to update this space. Thanks!!!! \ud83e\udd17\ud83d\ude00<\/h3>\n<\/div>","325fb679":"<div class=\"alert alert-info\">\n  <p>United States got most of online shoppers followed by Ausses and France \ud83e\uddd0<\/p>\n<\/div>","32b24f7d":"<div class=\"alert alert-info\">\n  <p>This seems informative  Sports wear grabs a whopping sales \ud83c\udfc3\u200d\u2642\ufe0f\ud83c\udfc3\u200d\u2642\ufe0f  <\/p>\n<\/div>","1722902e":"<div class=\"alert alert-info\">\n  <p>Wow!!!! Standard class shipments counts are High as compared to others. This is obivious behaviour that most of shoppers adapt for standard devlivery instead of paid<\/p>\n<\/div>","060f8042":"<div class=\"alert alert-info\">\n<p>Its obvious that Standard class has most sales as compared to other \u2714\ud83e\udd14 <\/p>\n<\/div>","85e27f17":"<div class=\"alert alert-info\">\n  <p>California got most of online shoppers followed by England and NY \ud83e\uddd0<\/p>\n<\/div>","0127ad83":"<div class=\"alert alert-success\">  \n<h3><strong>Imports<\/strong><\/h3>\n<\/div>","d7a93f72":"<div class=\"alert alert-info\">\n  <p>Fashion has most sales in online shopping\ud83d\udc31\u200d\ud83d\ude80  <\/p>\n<\/div>","83e839c1":"<div class=\"alert alert-info\">\n  <p>Shipments got delayed for almost all segments of customers \ud83d\ude2a<\/p>\n<\/div>","b7bc2837":"<div class=\"alert alert-info\">\n    \n  <p>Sunburst for Profit earned in countries and their respective cities \ud83e\udd11<\/p>\n<\/div>","edd2e081":"<div class=\"alert alert-info\">\n  <p>Its good analysis that central region has higher profit in online sales of products\ud83d\udc31\u200d\ud83c\udfcd <\/p>\n<\/div>","e12ff9c1":"<img src = \"https:\/\/cdn.dnaindia.com\/sites\/default\/files\/styles\/full\/public\/2018\/03\/30\/666686-online-shopping-tt.jpg\" width=\"700\" height=\"700\">\n\n<div class=\"alert alert-success\" role=\"alert\">\n  <h4 class=\"alert-heading\">Hi!<\/h4>\n  <p>This Notebook is dedicated to performing Exploratory data Analysis of Online Shopping Data which i found on Google Datasets.<\/p>\n  <hr>\n  <p class=\"mb-0\">Objective here to show EDA that is nice, tidy and informative.<\/p>\n<\/div>","9504430b":"<div class=\"alert alert-info\">\n<p>Hmm Fashion Category has topped for most shopped one !!! Interesting\ud83d\ude09  <\/p>\n<\/div>"}}