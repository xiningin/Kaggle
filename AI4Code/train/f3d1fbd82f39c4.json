{"cell_type":{"ff42614b":"code","8ed2214c":"code","8a88cb19":"code","51e9f65a":"code","67fffb42":"code","1a3e502b":"code","886d487b":"code","a6f9bbf3":"code","f55b7a20":"code","e6c591de":"code","e2e5491b":"code","f5755795":"code","bed58918":"code","6670965b":"code","fb06a167":"code","7b1aa819":"code","cb110124":"code","692c88db":"code","c8f7b08f":"code","cc9119bb":"code","377e0f61":"code","68a72f07":"code","bb7e6f44":"code","e7058058":"code","58d3355e":"code","b3eea638":"code","06226734":"code","7e8eb33b":"code","9a92f153":"code","10741fb5":"code","27aef8ae":"code","6423b0ae":"code","659df9b5":"code","4697d335":"code","078f0a74":"code","e8bad081":"code","b59d54c5":"code","106d10e9":"code","9a9333d1":"code","55a6d36d":"code","200e176a":"code","b8800147":"code","8c78f335":"code","decc0ccc":"code","2ca3f41c":"code","e2fc5ce2":"code","ac72b24f":"code","70cbadc2":"code","b3e5a017":"code","c794db15":"code","5119f7fe":"code","fac57f2d":"code","a5d8adc3":"code","a326ff8e":"code","ef7bb504":"code","7e4ee3a5":"code","920c52c3":"code","a802de46":"code","248dc6fb":"code","ffd81e40":"code","54ac6b4d":"code","341de27f":"code","ecb8a16a":"code","0eb1e903":"code","6e2a21f6":"code","d515ca26":"code","bdc81cff":"code","b636ffac":"code","dacefff9":"code","9a62cb2d":"code","bdd20a2f":"code","7c8c449c":"code","8a178626":"code","02c8f616":"code","b08655b6":"code","9df8b291":"code","21a34d42":"code","079229ef":"code","40cb2dc9":"code","ddbde4c3":"code","ebbbf90d":"code","9838400a":"code","c6d4df65":"code","f33110e2":"code","148cf099":"code","6d33c6d3":"code","20f4df14":"code","58edd480":"code","9f8a202b":"code","a8ea8537":"code","ae8adb2f":"code","582d8898":"code","0d3c9fe6":"code","bd988f38":"code","f2036662":"code","f8628706":"code","c6321e6c":"code","804c71c2":"code","f7e33cc7":"code","9e83a654":"code","83cda2ba":"code","effc7b37":"code","acb0a8be":"code","2d2c1427":"code","b0fb002d":"code","bfe74ebb":"code","13c307ce":"code","66e0d6a4":"code","957b91c1":"markdown","942b7d16":"markdown","a08562da":"markdown","51474791":"markdown","cbfe82b2":"markdown","121c0af8":"markdown","22cba8cc":"markdown","ccff76f1":"markdown","1dc3c955":"markdown","f636e90c":"markdown","b2a3c45e":"markdown","115895fa":"markdown","1fdbd1a5":"markdown","35fbaee8":"markdown","0ff0b59b":"markdown","5311384b":"markdown","b13047ee":"markdown","99dd4303":"markdown","f782babf":"markdown"},"source":{"ff42614b":"#Import Libary\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.preprocessing import StandardScaler \nfrom sklearn.model_selection import train_test_split\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import confusion_matrix, accuracy_score","8ed2214c":"#Import Dataset\nloan_dataset = pd.read_csv(\"..\/input\/loan-predication\/train_u6lujuX_CVtuZ9i (1).csv\")","8a88cb19":"loan_dataset.head()","51e9f65a":"# Number of missing values in each column\nloan_dataset.isnull().sum()","67fffb42":"#Show data distribution before filling in missing data","1a3e502b":"loan_dataset['Gender'].value_counts()","886d487b":"loan_dataset['Married'].value_counts()","a6f9bbf3":"loan_dataset['Dependents'].value_counts()","f55b7a20":"loan_dataset['Self_Employed'].value_counts()","e6c591de":"loan_dataset['Credit_History'].value_counts()","e2e5491b":"# Married\n# Depend on CoapplicantIncome features\n# CoapplicantIncome features != 0 -->  Mostly {Married == Yes}\nloan_dataset[(loan_dataset['Married'] != 'Yes') & (loan_dataset['Married'] != 'No')]","f5755795":"loan_dataset.loc[(loan_dataset['CoapplicantIncome'] != 0.0) \n                 & (loan_dataset['Married'] != 'Yes') & (loan_dataset['Married'] != 'No'), 'Married'] = 'Yes'\nloan_dataset['Married'].fillna(value='No', inplace=True)","bed58918":"#The other columns, I will divide the data into three parts according to the living area {Semiurban, Urban, Rural}\n#\u0650And I will do some data analysis to predict the missing data","6670965b":"#[1] Semiurban\nfeatures = ['Property_Area', 'Gender', 'Married', 'Dependents', 'Self_Employed', 'ApplicantIncome', 'CoapplicantIncome', 'LoanAmount']\ndata = loan_dataset[features][loan_dataset['Property_Area'] == 'Semiurban']\ndata.isnull().sum()","fb06a167":"data = data.dropna()\ndata.isnull().sum()","7b1aa819":"data.head()","cb110124":"data[['Gender', 'Married', 'Property_Area', 'Self_Employed']].groupby(by=['Gender'], as_index=False).count()","692c88db":"# Gender { 1 for Male , 0 for Female }\ndata['Gender'] = data['Gender'].map({'Male': 1, 'Female': 0})\ndata['Married'] = data['Married'].map({'Yes': 1, 'No': 0})\ndata['Self_Employed'] = data['Self_Employed'].map({'Yes': 1, 'No': 0})","c8f7b08f":"# Percent male married for this region\nmale = int(data[(data['Married'] == 1) & (data['Gender'] == 1)].count()[0]) \/ int(data[data['Gender'] == 1].count()[0])\n# Percent female married for this region\nfemale = int(data[(data['Married'] == 1) & (data['Gender'] == 0)].count()[0]) \/ int(data[data['Gender'] == 0].count()[0])\nprint('Percent male married', male)\nprint('Percent female married', female)","cc9119bb":"data['ApplicantIncome'][data['Gender'] == 1].mean()","377e0f61":"data['ApplicantIncome'][data['Gender'] == 0].mean()","68a72f07":"loan_dataset.loc[((loan_dataset['Married'] == 'Yes') & (loan_dataset['ApplicantIncome'] > 5472)\n              & (loan_dataset['Gender'] != 'Male') & (loan_dataset['Gender'] != 'Female') \n              & (loan_dataset['Property_Area'] == 'Semiurban')),'Gender'] = 'Male'\n\nloan_dataset.loc[((loan_dataset['Married'] == 'No') & (loan_dataset['ApplicantIncome'] < 4793)\n              & (loan_dataset['Gender'] != 'Male') & (loan_dataset['Gender'] != 'Female') \n              & (loan_dataset['Property_Area'] == 'Semiurban')),'Gender'] = 'Female'","bb7e6f44":"# Percent Dependents = '0' for [ Male ]\npm = data['Dependents'][(data['Gender'] == 1) & (data['Dependents'] == '0')].count() \/ data[data['Gender'] == 1].count()\n# Percent Dependents = '0' for [ Female ]\npf = data['Dependents'][(data['Gender'] == 0) & (data['Dependents'] == '0')].count() \/ data[data['Gender'] == 0].count()\nprint('Percent male Dependents   = 0   -->',    pm[0])\nprint('Percent female Dependents = 0   -->',  pf[0])","e7058058":"loan_dataset.loc[((loan_dataset['Dependents'] == '0') & (loan_dataset['ApplicantIncome'] < 4793)\n              & (loan_dataset['Gender'] != 'Male') & (loan_dataset['Gender'] != 'Female') \n              & (loan_dataset['Property_Area'] == 'Semiurban')),'Gender'] = 'Female'","58d3355e":"#Finally because count of male more than female , fill male\nloan_dataset.loc[((loan_dataset['Gender'] != 'Male') & (loan_dataset['Gender'] != 'Female') \n                  & (loan_dataset['Property_Area'] == 'Semiurban')),'Gender']  =  'Male'","b3eea638":"#Percent male Dependents   = 0   --> 0.5220125786163522\n#Percent female Dependents = 0   --> 0.7708333333333334\n\nloan_dataset.loc[((loan_dataset['Married'] == 'Yes')  & (loan_dataset['Gender'] == 'Female') \n                & (loan_dataset['Dependents'] != '0') & (loan_dataset['Dependents'] != '1')\n                & (loan_dataset['Dependents'] != '2') & (loan_dataset['Dependents'] != '3+')  \n                & (loan_dataset['Property_Area'] == 'Semiurban')), 'Dependents'] = '1'\n                \nloan_dataset.loc[((loan_dataset['Married'] == 'No')   & (loan_dataset['Gender'] == 'Female')\n                & (loan_dataset['Dependents'] != '0') & (loan_dataset['Dependents'] != '1')\n                & (loan_dataset['Dependents'] != '2') & (loan_dataset['Dependents'] != '3+')   \n                & (loan_dataset['Property_Area'] == 'Semiurban')), 'Dependents'] = '0' ","06226734":"# Percent Male not married dependents == 0\nx = (data['Gender'] == 1) & (data['Married'] == 0)\ndata[ x & (data['Dependents'] == '0')].count()[0] \/ data[x].count()[0]","7e8eb33b":"loan_dataset.loc[((loan_dataset['Married'] == 'No')   & (loan_dataset['Gender'] == 'Male')\n                & (loan_dataset['Dependents'] != '0') & (loan_dataset['Dependents'] != '1')\n                & (loan_dataset['Dependents'] != '2') & (loan_dataset['Dependents'] != '3+')    \n                & (loan_dataset['Property_Area'] == 'Semiurban')), 'Dependents'] = '0'","9a92f153":"x = (data['Gender'] == 1) & (data['Married'] == 1)\ndata[ x & (data['Dependents'] == '3+')]","10741fb5":"x = (data['Gender'] == 1) & (data['Married'] == 1)\ndata['LoanAmount'][ x & (data['Dependents'] == '3+')].mean() + data['LoanAmount'][ x & (data['Dependents'] == '3+')].std() \/ 2  ","27aef8ae":"x = (data['Gender'] == 1) & (data['Married'] == 1)\ndata['LoanAmount'][ x & (data['Dependents'] == '2')].mean() + data['LoanAmount'][ x & (data['Dependents'] == '2')].std() \/ 2  ","6423b0ae":"x = (data['Gender'] == 1) & (data['Married'] == 1)\ndata['LoanAmount'][ x & (data['Dependents'] == '1')].mean() + data['LoanAmount'][ x & (data['Dependents'] == '1')].std() \/ 2 ","659df9b5":"loan_dataset.loc[((loan_dataset['Married'] == 'Yes')    & (loan_dataset['Gender'] == 'Male')\n                & (loan_dataset['Dependents'] != '0')   & (loan_dataset['Dependents'] != '1')\n                & (loan_dataset['Dependents'] != '2')   & (loan_dataset['Dependents'] != '3+')    \n                & (loan_dataset['LoanAmount'] >= 200.0) & (loan_dataset['Property_Area'] == 'Semiurban')), 'Dependents'] = '3+'\n\nloan_dataset.loc[((loan_dataset['Married'] == 'Yes')    & (loan_dataset['Gender'] == 'Male')\n                & (loan_dataset['Dependents'] != '0')   & (loan_dataset['Dependents'] != '1')\n                & (loan_dataset['Dependents'] != '2')   & (loan_dataset['Dependents'] != '3+')    \n                & (loan_dataset['LoanAmount'] < 100.0)  & (loan_dataset['Property_Area'] == 'Semiurban')), 'Dependents'] = '2'\n\nloan_dataset.loc[((loan_dataset['Married'] == 'Yes')    & (loan_dataset['Gender'] == 'Male')\n                & (loan_dataset['Dependents'] != '0')   & (loan_dataset['Dependents'] != '1')\n                & (loan_dataset['Dependents'] != '2')   & (loan_dataset['Dependents'] != '3+')    \n                & (loan_dataset['Property_Area'] == 'Semiurban')), 'Dependents'] = '2'    ","4697d335":"data[(data['Dependents'] == '2') & (data['Self_Employed'] == 1)]","078f0a74":"#Female percent No Self_Employed\ndata[(data['Gender'] == 0) & (data['Self_Employed'] == 0)].count()[0] \/ data[(data['Gender'] == 0)].count()[0]","e8bad081":"loan_dataset.loc[((loan_dataset['Gender'] == 'Female') &\n                  (loan_dataset['Self_Employed'] != 'Yes') & (loan_dataset['Self_Employed'] != 'No') &\n                  (loan_dataset['Property_Area'] == 'Semiurban')), 'Self_Employed'] = 'No'","b59d54c5":"x = (data['Gender'] == 1) & (data['Self_Employed'] == 1)\ndata['ApplicantIncome'][x].mean() + data['ApplicantIncome'][x].std() \/ 2  ","106d10e9":"loan_dataset.loc[((loan_dataset['Gender'] == 'Male') & (loan_dataset['ApplicantIncome'] >= 11500) &\n                  (loan_dataset['Self_Employed'] != 'Yes') & (loan_dataset['Self_Employed'] != 'No')\n                    & (loan_dataset['Property_Area'] == 'Semiurban')), 'Self_Employed'] = 'Yes'\n\nloan_dataset.loc[((loan_dataset['Gender'] == 'Male') &\n                  (loan_dataset['Self_Employed'] != 'Yes') & (loan_dataset['Self_Employed'] != 'No')\n                    & (loan_dataset['Property_Area'] == 'Semiurban')), 'Self_Employed'] = 'No'","9a9333d1":"#[2] Urban\nfeatures = ['Property_Area', 'Gender', 'Married', 'Dependents', 'Self_Employed', 'ApplicantIncome', 'CoapplicantIncome', 'LoanAmount']\ndata = loan_dataset[features][loan_dataset['Property_Area'] == 'Urban']\ndata.isnull().sum()","55a6d36d":"data = data.dropna()\ndata.isnull().sum()","200e176a":"data.head()","b8800147":"data[['Gender', 'Married', 'Property_Area', 'Self_Employed']].groupby(by=['Gender'], as_index=False).count()","8c78f335":"data['Gender'] = data['Gender'].map({'Male': 1, 'Female': 0})\ndata['Married'] = data['Married'].map({'Yes': 1, 'No': 0})\ndata['Self_Employed'] = data['Self_Employed'].map({'Yes': 1, 'No': 0})","decc0ccc":"# Percent male married for this region\nmale = int(data[(data['Married'] == 1) & (data['Gender'] == 1)].count()[0]) \/ int(data[data['Gender'] == 1].count()[0])\n# Percent female married for this region\nfemale = int(data[(data['Married'] == 1) & (data['Gender'] == 0)].count()[0]) \/ int(data[data['Gender'] == 0].count()[0])\nprint('Percent male married', male)\nprint('Percent female married', female)","2ca3f41c":"data['ApplicantIncome'][data['Gender'] == 1].mean() + data['ApplicantIncome'][data['Gender'] == 1].std()\/2","e2fc5ce2":"data['ApplicantIncome'][data['Gender'] == 0].mean() + data['ApplicantIncome'][data['Gender'] == 1].std()\/2","ac72b24f":"# Percent Dependents = '0' for [ Male ]\npm = data['Dependents'][(data['Gender'] == 1) & (data['Dependents'] == '0')].count() \/ data[data['Gender'] == 1].count()\n# Percent Dependents = '0' for [ Female ]\npf = data['Dependents'][(data['Gender'] == 0) & (data['Dependents'] == '0')].count() \/ data[data['Gender'] == 0].count()\nprint('Percent male Dependents   = 0   -->',    pm[0])\nprint('Percent female Dependents = 0   -->',  pf[0])","70cbadc2":"loan_dataset.loc[((loan_dataset['Married'] == 'Yes') & (loan_dataset['Dependents'] != '0') \n           & (loan_dataset['Gender'] != 'Male') & (loan_dataset['Gender'] != 'Female') \n           & (loan_dataset['Property_Area'] == 'Urban')),'Gender'] = 'Male'\n\nloan_dataset.loc[((loan_dataset['Married'] == 'No') & (loan_dataset['Dependents'] == '0') \n           & (loan_dataset['Gender'] != 'Male') & (loan_dataset['Gender'] != 'Female') \n           & (loan_dataset['Property_Area'] == 'Urban')),'Gender'] = 'Female'","b3e5a017":"# Percent male Dependents   = 0   --> 0.5034965034965035\n# Percent female Dependents = 0   --> 0.7142857142857143\n\n# Female -->\nloan_dataset.loc[((loan_dataset['Married'] == 'Yes')  & (loan_dataset['Gender'] == 'Female')\n                & (loan_dataset['Dependents'] != '0') & (loan_dataset['Dependents'] != '1')\n                & (loan_dataset['Dependents'] != '2') & (loan_dataset['Dependents'] != '3+')    \n                & (loan_dataset['Property_Area'] == 'Urban')), 'Dependents'] = '1'\n\nloan_dataset.loc[((loan_dataset['Married'] == 'No')   & (loan_dataset['Gender'] == 'Female')\n                & (loan_dataset['Dependents'] != '0') & (loan_dataset['Dependents'] != '1')\n                & (loan_dataset['Dependents'] != '2') & (loan_dataset['Dependents'] != '3+')    \n                & (loan_dataset['Property_Area'] == 'Urban')), 'Dependents'] = '0' ","c794db15":"# Percent Male not married dependents == 0\nx = (data['Gender'] == 1) & (data['Married'] == 0)\ndata[ x & (data['Dependents'] == '0')].count()[0] \/ data[x].count()[0]","5119f7fe":"loan_dataset.loc[((loan_dataset['Married'] == 'No')   & (loan_dataset['Gender'] == 'Male')\n                & (loan_dataset['Dependents'] != '0') & (loan_dataset['Dependents'] != '1')\n                & (loan_dataset['Dependents'] != '2') & (loan_dataset['Dependents'] != '3+')    \n                & (loan_dataset['Property_Area'] == 'Urban')), 'Dependents'] = '0'","fac57f2d":"x = (data['Gender'] == 1) & (data['Married'] == 1)\ndata['LoanAmount'][ x & (data['Dependents'] == '3+')].mean() + data['LoanAmount'][ x & (data['Dependents'] == '3+')].std() \/ 2  ","a5d8adc3":"x = (data['Gender'] == 1) & (data['Married'] == 1)\ndata['LoanAmount'][ x & (data['Dependents'] == '2')].mean() + data['LoanAmount'][ x & (data['Dependents'] == '2')].std() \/ 2  ","a326ff8e":"x = (data['Gender'] == 1) & (data['Married'] == 1)\ndata['LoanAmount'][ x & (data['Dependents'] == '1')].mean() + data['LoanAmount'][ x & (data['Dependents'] == '1')].std() \/ 2  ","ef7bb504":"loan_dataset.loc[((loan_dataset['Married'] == 'Yes')   & (loan_dataset['Gender'] == 'Male')\n                & (loan_dataset['Dependents'] != '0')  & (loan_dataset['Dependents'] != '1')\n                & (loan_dataset['Dependents'] != '2')  & (loan_dataset['Dependents'] != '3+')    \n                & (loan_dataset['LoanAmount'] < 175)   & (loan_dataset['Property_Area'] == 'Urban')), 'Dependents'] = '3+'\n\nloan_dataset.loc[((loan_dataset['Married'] == 'Yes')   & (loan_dataset['Gender'] == 'Male')\n                & (loan_dataset['Dependents'] != '0')  & (loan_dataset['Dependents'] != '1')\n                & (loan_dataset['Dependents'] != '2')  & (loan_dataset['Dependents'] != '3+')    \n                & (loan_dataset['LoanAmount'] < 250.0) & (loan_dataset['Property_Area'] == 'Urban')), 'Dependents'] = '2'\n\nloan_dataset.loc[((loan_dataset['Married'] == 'Yes')   & (loan_dataset['Gender'] == 'Male')\n                & (loan_dataset['Dependents'] != '0')  & (loan_dataset['Dependents'] != '1')\n                & (loan_dataset['Dependents'] != '2')  & (loan_dataset['Dependents'] != '3+')    \n                & (loan_dataset['Property_Area'] == 'Urban')), 'Dependents'] = '1'    ","7e4ee3a5":"data[(data['Dependents'] == '2') & (data['Self_Employed'] == 1)]","920c52c3":"# Female percent No Self_Employed\ndata[(data['Gender'] == 0) & (data['Self_Employed'] == 0)].count()[0] \/ data[(data['Gender'] == 0)].count()[0]","a802de46":"# Female\nloan_dataset.loc[((loan_dataset['Gender'] == 'Female')    &  (loan_dataset['Self_Employed'] != 'Yes') &\n                  (loan_dataset['Self_Employed'] != 'No') & (loan_dataset['Property_Area'] == 'Urban')), 'Self_Employed'] = 'No'","248dc6fb":"# Male\nx = (data['Gender'] == 1) & (data['Self_Employed'] == 1)\ndata['ApplicantIncome'][x].mean() + data['ApplicantIncome'][x].std() \/ 2  ","ffd81e40":"loan_dataset.loc[((loan_dataset['Gender'] == 'Male') & (loan_dataset['ApplicantIncome'] >= 10500)\n                  & (loan_dataset['Self_Employed'] != 'Yes') & (loan_dataset['Self_Employed'] != 'No')\n                  &  (loan_dataset['Property_Area'] == 'Urban')), 'Self_Employed'] = 'Yes'\n\nloan_dataset.loc[((loan_dataset['Gender'] == 'Male')\n                  & (loan_dataset['Self_Employed'] != 'Yes') & (loan_dataset['Self_Employed'] != 'No') \n                  &  (loan_dataset['Property_Area'] == 'Urban')), 'Self_Employed'] = 'No'","54ac6b4d":"#[3] Rural\nfeatures = ['Property_Area', 'Gender', 'Married', 'Dependents', 'Self_Employed', 'ApplicantIncome', 'CoapplicantIncome', 'LoanAmount']\ndata = loan_dataset[features][loan_dataset['Property_Area'] == 'Rural']\ndata.isnull().sum()","341de27f":"data = data.dropna()\ndata.isnull().sum()","ecb8a16a":"data.head()","0eb1e903":"data[['Gender', 'Married', 'Property_Area', 'Self_Employed']].groupby(by=['Gender'], as_index=False).count()","6e2a21f6":"data['Gender'] = data['Gender'].map({'Male': 1, 'Female': 0})\ndata['Married'] = data['Married'].map({'Yes': 1, 'No': 0})\ndata['Self_Employed'] = data['Self_Employed'].map({'Yes': 1, 'No': 0})","d515ca26":"# Percent male married for this region\nmale = int(data[(data['Married'] == 1) & (data['Gender'] == 1)].count()[0]) \/ int(data[data['Gender'] == 1].count()[0])\n# Percent female married for this region\nfemale = int(data[(data['Married'] == 1) & (data['Gender'] == 0)].count()[0]) \/ int(data[data['Gender'] == 0].count()[0])\nprint('Percent male married', male)\nprint('Percent female married', female)","bdc81cff":"loan_dataset.loc[((loan_dataset['Married'] == 'Yes')  & (loan_dataset['Dependents'] != '0') \n             &  (loan_dataset['Gender'] != 'Male')    & (loan_dataset['Gender'] != 'Female') \n             & (loan_dataset['Property_Area'] == 'Rural')),'Gender'] = 'Male'\n\nloan_dataset.loc[((loan_dataset['Married'] == 'No')   & (loan_dataset['Dependents'] == '0') \n            & (loan_dataset['Gender'] != 'Male')      & (loan_dataset['Gender'] != 'Female') \n            & (loan_dataset['Property_Area'] == 'Rural')), 'Gender'] = 'Female'","b636ffac":"data['ApplicantIncome'][data['Gender'] == 1].mean() + data['ApplicantIncome'][data['Gender'] == 1].std()\/2","dacefff9":"data['ApplicantIncome'][data['Gender'] == 0].mean() + data['ApplicantIncome'][data['Gender'] == 1].std()\/2","9a62cb2d":"loan_dataset.loc[((loan_dataset['Married'] == 'Yes') & (loan_dataset['ApplicantIncome'] > 9500)\n              & (loan_dataset['Gender'] != 'Male')   & (loan_dataset['Gender'] != 'Female') \n              & (loan_dataset['Property_Area'] == 'Rural')),'Gender'] = 'Male'\n\nloan_dataset.loc[((loan_dataset['Married'] == 'No')  & (loan_dataset['ApplicantIncome'] < 8500)\n              & (loan_dataset['Gender'] != 'Male')   & (loan_dataset['Gender'] != 'Female') \n              & (loan_dataset['Property_Area'] == 'Rural')),'Gender'] = 'Female'","bdd20a2f":"# Percent Dependents = '0' for [ Male ]\npm = data['Dependents'][(data['Gender'] == 1) & (data['Dependents'] == '0')].count() \/ data[data['Gender'] == 1].count()\n# Percent Dependents = '0' for [ Female ]\npf = data['Dependents'][(data['Gender'] == 0) & (data['Dependents'] == '0')].count() \/ data[data['Gender'] == 0].count()\nprint('Percent male Dependents   = 0   -->',    pm[0])\nprint('Percent female Dependents = 0   -->',  pf[0])","7c8c449c":"loan_dataset.loc[((loan_dataset['Married'] == 'Yes') & (loan_dataset['Dependents'] != '0') \n           & (loan_dataset['Gender'] != 'Male')      & (loan_dataset['Gender'] != 'Female') \n           & (loan_dataset['Property_Area'] == 'Rural')),'Gender'] = 'Male'\n\nloan_dataset.loc[((loan_dataset['Married'] == 'No') & (loan_dataset['Dependents'] == '0') \n           & (loan_dataset['Gender'] != 'Male')     & (loan_dataset['Gender'] != 'Female')\n           & (loan_dataset['Property_Area'] == 'Rural')),'Gender'] = 'Female'\n\nloan_dataset.loc[((loan_dataset['Gender'] != 'Male') & (loan_dataset['Gender'] != 'Female')\n                  & (loan_dataset['Property_Area'] == 'Rural')), 'Gender'] = 'Female'","8a178626":"# Percent male Dependents   = 0   --> 0.5746268656716418\n# Percent female Dependents = 0   --> 0.8695652173913043\n\n# Female -->\nloan_dataset.loc[((loan_dataset['Married'] == 'Yes')  & (loan_dataset['Gender'] == 'Female')\n                & (loan_dataset['Dependents'] != '0') & (loan_dataset['Dependents'] != '1')\n                & (loan_dataset['Dependents'] != '2') & (loan_dataset['Dependents'] != '3+')    \n                & (loan_dataset['Property_Area'] == 'Urban')), 'Dependents'] = '1'\n\nloan_dataset.loc[((loan_dataset['Married'] == 'No')   & (loan_dataset['Gender'] == 'Female')\n                & (loan_dataset['Dependents'] != '0') & (loan_dataset['Dependents'] != '1')\n                & (loan_dataset['Dependents'] != '2') & (loan_dataset['Dependents'] != '3+')    \n                & (loan_dataset['Property_Area'] == 'Rural')), 'Dependents'] = '0' ","02c8f616":"# Percent Male not married dependents == 0\nx = (data['Gender'] == 1) & (data['Married'] == 0)\ndata[ x & (data['Dependents'] == '0')].count()[0] \/ data[x].count()[0]","b08655b6":"loan_dataset.loc[((loan_dataset['Married'] == 'No')   & (loan_dataset['Gender'] == 'Male')\n                & (loan_dataset['Dependents'] != '0') & (loan_dataset['Dependents'] != '1')\n                & (loan_dataset['Dependents'] != '2') & (loan_dataset['Dependents'] != '3+')    \n                & (loan_dataset['Property_Area'] == 'Rural')), 'Dependents'] = '0'","9df8b291":"x = (data['Gender'] == 1) & (data['Married'] == 1)\ndata['LoanAmount'][ x & (data['Dependents'] == '3+')].mean() + data['LoanAmount'][ x & (data['Dependents'] == '3+')].std() \/ 2 ","21a34d42":"x = (data['Gender'] == 1) & (data['Married'] == 1)\ndata['LoanAmount'][ x & (data['Dependents'] == '2')].mean() + data['LoanAmount'][ x & (data['Dependents'] == '3+')].std() \/ 2  ","079229ef":"x = (data['Gender'] == 1) & (data['Married'] == 1)\ndata['LoanAmount'][ x & (data['Dependents'] == '1')].mean() + data['LoanAmount'][ x & (data['Dependents'] == '3+')].std() \/ 2 ","40cb2dc9":"loan_dataset.loc[((loan_dataset['Married'] == 'Yes')   & (loan_dataset['Gender'] == 'Male')\n                & (loan_dataset['Dependents'] != '0')  & (loan_dataset['Dependents'] != '1')\n                & (loan_dataset['Dependents'] != '2')  & (loan_dataset['Dependents'] != '3+') \n                & (loan_dataset['LoanAmount'] > 150)   & (loan_dataset['Property_Area'] == 'Rural')), 'Dependents'] = '3+'\n\nloan_dataset.loc[((loan_dataset['Married'] == 'Yes')   & (loan_dataset['Gender'] == 'Male')\n                & (loan_dataset['Dependents'] != '0')  & (loan_dataset['Dependents'] != '1')\n                & (loan_dataset['Dependents'] != '2')  & (loan_dataset['Dependents'] != '3+')    \n                & (loan_dataset['LoanAmount'] > 230.0) & (loan_dataset['Property_Area'] == 'Rural')), 'Dependents'] = '2'\n\nloan_dataset.loc[((loan_dataset['Married'] == 'Yes')   & (loan_dataset['Gender'] == 'Male')\n                & (loan_dataset['Dependents'] != '0')  & (loan_dataset['Dependents'] != '1')\n                & (loan_dataset['Dependents'] != '2')  & (loan_dataset['Dependents'] != '3+')    \n                & (loan_dataset['Property_Area'] == 'Rural')), 'Dependents'] = '1'    ","ddbde4c3":"# Female percent No Self_Employed\ndata[(data['Gender'] == 0) & (data['Self_Employed'] == 0)].count()[0] \/ data[(data['Gender'] == 0)].count()[0]","ebbbf90d":"# Female\nloan_dataset.loc[((loan_dataset['Gender'] == 'Female')& (loan_dataset['Self_Employed'] != 'Yes') &\n                  (loan_dataset['Self_Employed'] != 'No') & (loan_dataset['Property_Area'] == 'Rural')), 'Self_Employed'] = 'No'","9838400a":"# Male\nx = (data['Gender'] == 1) & (data['Self_Employed'] == 1)\ndata['ApplicantIncome'][x].mean() + data['ApplicantIncome'][x].std() \/ 2  ","c6d4df65":"loan_dataset.loc[((loan_dataset['Gender'] == 'Male') & (loan_dataset['ApplicantIncome'] >= 9000)&\n                  (loan_dataset['Self_Employed'] != 'Yes') & (loan_dataset['Self_Employed'] != 'No')\n                    & (loan_dataset['Property_Area'] == 'Rural')), 'Self_Employed'] = 'Yes'\nloan_dataset.loc[((loan_dataset['Gender'] == 'Male')&\n                  (loan_dataset['Self_Employed'] != 'Yes') & (loan_dataset['Self_Employed'] != 'No')\n                    & (loan_dataset['Property_Area'] == 'Rural')), 'Self_Employed'] = 'No'","f33110e2":"loan_dataset.isnull().sum()","148cf099":"loan_dataset.describe()","6d33c6d3":"# LoanAmount use mean to fill missing data\ni = int(loan_dataset['LoanAmount'].dropna().mean())\nloan_dataset['LoanAmount'].fillna(i, inplace=True)","20f4df14":"# Loan_Amount_Term use median to fill missing data because large frequency data in dataset\nj = loan_dataset['Loan_Amount_Term'].dropna().median()\nloan_dataset['Loan_Amount_Term'].fillna(j, inplace=True)","58edd480":"# Credit_History \n# I need correlation between data to fill Credit_History\n\n# Convert categorical data to numerical data\nloan_dataset['Loan_Status'] = loan_dataset['Loan_Status'].map({'Y': 1, 'N': 0}).astype(int)\nloan_dataset['Dependents'] = loan_dataset['Dependents'].map({'0': 0, '1': 1, '2': 2, '3+': 4}).astype(int)\nloan_dataset['Married'] = loan_dataset['Married'].map({'Yes': 1, 'No': 0}).astype(int)\nloan_dataset['Gender'] = loan_dataset['Gender'].map({'Male': 1, 'Female': 0}).astype(int)\nloan_dataset['Self_Employed'] = loan_dataset['Self_Employed'].map({'Yes': 1, 'No': 0}).astype(int)\nloan_dataset['Property_Area'] = loan_dataset['Property_Area'].map({'Semiurban': 0, 'Urban': 1, 'Rural': 2}).astype(int)\nloan_dataset['Education'] = loan_dataset['Education'].map({'Graduate': 1, 'Not Graduate' : 0}).astype(int)","9f8a202b":"loan_dataset.head()","a8ea8537":"loan_dataset[loan_dataset['Credit_History'] == 1]","ae8adb2f":"corr = loan_dataset.corr()\nplt.figure(figsize=(12, 12))\nsns.heatmap(data=corr, square=True, annot=True, annot_kws={'size': 10}, fmt='.2f', cmap='YlGn_r')","582d8898":"# Most Effect on [Credit_History] --> [Loan_Status]\nloan_dataset.loc[(loan_dataset['Loan_Status'] == 1) & (loan_dataset['Credit_History'] != 1) &\n                 (loan_dataset['Credit_History'] != 0), 'Credit_History'] = 1\nloan_dataset.loc[(loan_dataset['Loan_Status'] == 0) & (loan_dataset['Credit_History'] != 1) &\n                 (loan_dataset['Credit_History'] != 0), 'Credit_History'] = 0","0d3c9fe6":"loan_dataset.isnull().sum()","bd988f38":"#Show data distribution after filling in missing data","f2036662":"loan_dataset['Gender'].value_counts()","f8628706":"loan_dataset['Married'].value_counts()","c6321e6c":"loan_dataset['Dependents'].value_counts()","804c71c2":"loan_dataset['Self_Employed'].value_counts()","f7e33cc7":"loan_dataset['Credit_History'].value_counts()","9e83a654":"#Compare Between data distribution Befor filling and After Filling\n\n#{{Befor filling}}  ||   {{After filling}}\n\n#[Gender]           ||  [Gender] \n\n#Male -->   489     ||  1 -->   496  \n\n#Female --> 112     ||  0 --> 118  \n\n########################################################\n\n#[Married]         ||  [Married]        \n                  \n#Yes -->   398     ||  1 -->   398   \n                  \n#No -->   213      ||  0 -->   215   \n\n########################################################\n\n#[Dependents]     ||  [Dependents]\n                 \n#0 -->   345      ||  0 -->   351 \n                 \n#1 -->   102      ||  1 -->   103  \n                 \n#2 -->   101      ||  2 -->   104 \n                 \n#3+ -->   51      ||  4 -->   56 \n\n########################################################\n\n#[Self_Employed]  ||  [Self_Employed]\n                 \n#No -->   500    ||  0 -->   530 \n                 \n#Yes -->   82    ||  1 -->   84 \n\n########################################################\n\n#[Credit_History] ||  [Credit_History]\n                 \n#1.0 -->   475    ||  1.0 -->   512\n                 \n#0.0 -->   89     ||  0.0 -->   102\n\n","83cda2ba":"X = loan_dataset.drop(columns=['Loan_ID', 'Loan_Status'], axis=1)\ny = loan_dataset['Loan_Status']","effc7b37":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, stratify=y, random_state=0)","acb0a8be":"X_train.head()","2d2c1427":"X_train = X_train.iloc[:, :].values\nX_test = X_test.iloc[:, :].values","b0fb002d":"sc = StandardScaler()\nX_train[:, 5:9] = sc.fit_transform(X_train[:, 5:9])\nX_test[:, 5:9] = sc.transform(X_test[:, 5:9])","bfe74ebb":"classifier = SVC(kernel='rbf')\nclassifier.fit(X_train, y_train)","13c307ce":"# Accuracy Score on training data\ny_pred_train = classifier.predict(X_train)\ntrain_accuracy = accuracy_score(y_true=y_train, y_pred=y_pred_train)\nprint('Accuracy on training data', train_accuracy)","66e0d6a4":"# Accuracy Score on test data\ny_pred_test = classifier.predict(X_test)\ntest_accuracy = accuracy_score(y_true=y_test, y_pred=y_pred_test)\nprint('Accuracy on training data', test_accuracy)","957b91c1":"**Separating the data and label**","942b7d16":"####################################################################################################################\n\n--> Semiurban","a08562da":"####################################################################################################################\n\n--> Rural","51474791":"*****Fill Missing Data*****","cbfe82b2":"Fill Gender","121c0af8":"Fill Dependents","22cba8cc":"Fill Self_Employed","ccff76f1":"**Train Test Split**","1dc3c955":"**Data Preprocessing**","f636e90c":"####################################################################################################################\n\n--> Urban\n","b2a3c45e":"###################################################################################################################\n\nI will Fill other features depend on all data ,use mean and median to fill some features and correlation between features to fill other mising data","115895fa":"Fill Dependents","1fdbd1a5":"Fill Gender","35fbaee8":"Fill Self_Employed","0ff0b59b":"**Build The Model:**\n\n**Kernel Support Vector Machine Model**","5311384b":"Fill Dependents","b13047ee":"**Feature Scaling**","99dd4303":"Fill Gender","f782babf":"Fill Self_Employed"}}