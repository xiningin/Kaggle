{"cell_type":{"c909d764":"code","f2110f5d":"code","932e7839":"code","bd32f8f6":"code","0c45ba7d":"code","1fef1b41":"code","64d4fb90":"code","910e863d":"code","dfc6b18f":"code","d70215d1":"code","46e0c2d3":"code","19ffd905":"code","67bc7fea":"markdown","d1c02268":"markdown","ae8e5e89":"markdown","2f97ca50":"markdown"},"source":{"c909d764":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f2110f5d":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as pex\n\n%matplotlib inline","932e7839":"df = pd.read_csv('\/kaggle\/input\/body-performance-data\/bodyPerformance.csv')","bd32f8f6":"df.head()","0c45ba7d":"fig, axes = plt.subplots(ncols = 3, figsize=(10,4))\ncats = ['body fat_%','diastolic','systolic']\n\nfor i in range(len(cats)):\n    data = df.groupby('gender')[cats[i]].median()\n    \n    axes[i].bar('Male',data.loc['M'], color='#942de3')\n    axes[i].bar('Female',data.loc['F'], color='#2f91ed')\n    \n    axes[i].set_ylabel('Median ' + cats[i])\n\nfig.suptitle('Medians of Various Metrics Across Genders')\nfig.tight_layout()\nplt.show()","1fef1b41":"fig, axes = plt.subplots(ncols = 4, figsize=(15,6))\ncats = ['gripForce','sit and bend forward_cm','sit-ups counts','broad jump_cm']\nfor i in range(len(cats)):\n    sns.boxplot(x='gender',y=cats[i],data=df,palette='coolwarm',ax=axes[i],hue='class')\naxes[0].set_ylim(0,75)\naxes[1].set_ylim(-30,50)\nfig.tight_layout()\nplt.show()","64d4fb90":"sns.scatterplot(x='height_cm',y='weight_kg',data=df,hue='class',palette='coolwarm')\nplt.xlim(135,195)\nplt.show()","910e863d":"plt.figure(figsize=(10,8))\nsns.heatmap(df.corr(),annot=True,cmap='coolwarm')\nplt.show()","dfc6b18f":"pex.scatter_3d(data_frame=df,x='height_cm',y='weight_kg',z='body fat_%',color='class')","d70215d1":"# Explore 2D histograms of correlated features identified in the heatmap above.\nfor tup in [('broad jump_cm','gripForce'),('broad jump_cm','body fat_%'), ('sit-ups counts','body fat_%')]:\n    fig = pex.density_heatmap(df,x=tup[0],y=tup[1],width=500, height=500)\n    fig.show()","46e0c2d3":"pex.density_heatmap(df,x='sit-ups counts',y='broad jump_cm',facet_row='gender',facet_col='class',color_continuous_scale='viridis')","19ffd905":"fig = pex.scatter(df, x=\"diastolic\", y=\"systolic\", color=\"height_cm\", size='weight_kg')\nfig.show(width=300,height=100)","67bc7fea":"## Imports, Loading DataFrame","d1c02268":"## Plotly Visualizations","ae8e5e89":"## Matplotlib and Seaborn Visualizations","2f97ca50":"# Body Performance Data Exploratory Data Analysis\n\nVisualize the data with various plots using Matplotlib, Seaborn, and Plotly to gain more insights from the data.\n\nHow to use this:\n- Glean various insights in the data between features and the output class\n- Learn some functionality and techniques with Matplotlib, Seaborn, and Plotly"}}