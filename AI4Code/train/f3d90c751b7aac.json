{"cell_type":{"1329ebf7":"code","81763a54":"code","9b8a6da5":"code","64aa64b2":"code","93b2c18e":"code","5f94fb05":"code","00aa753e":"code","57fae7a0":"code","63ded7e8":"code","453b4abf":"code","bc6a209d":"code","f76a8a1d":"code","abdd1dc0":"code","f5dc4f01":"code","c13da670":"code","15bac67c":"code","e12d788d":"code","0d697853":"code","f1c754ba":"code","36f25eaf":"code","55981c9a":"code","4bd8703a":"code","59716ef1":"code","d7ecc039":"code","f1208307":"code","eacf4237":"code","2f859021":"code","5e6e7ff5":"code","47efc720":"code","4cabb92a":"code","1bc00e39":"code","db137831":"code","831eb8e7":"code","75c23d1e":"code","21c29697":"code","b3a9859b":"code","2e2a1fc0":"code","86c116c2":"code","2ab47651":"code","c01eb669":"code","750f3e26":"code","a4c4fb10":"code","bab07c51":"code","5368ac82":"code","dadf6e85":"code","acd1e3af":"code","0cdc158d":"markdown","37067e8d":"markdown","fb83e315":"markdown","c0f101eb":"markdown","21ae27e3":"markdown","dbbc57ca":"markdown","ed62cc37":"markdown","1b9871ab":"markdown","bcdc3063":"markdown","ac27d345":"markdown","b99fdd29":"markdown","03199051":"markdown","0a7526f1":"markdown","ccf36c55":"markdown","48f55248":"markdown","5265f6b2":"markdown","00393e35":"markdown","1049984f":"markdown","f3543b15":"markdown"},"source":{"1329ebf7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","81763a54":"import matplotlib.pyplot as plt\nimport seaborn as sns\nfrom matplotlib import style\n\nstyle.use('fivethirtyeight')\nfont = {'family' : 'sans-serif',\n        'weight' : 'bold',\n        'size' : 20}\nplt.rc('font', **font)\nplt.rcParams['figure.figsize'] = (15, 8)\n\nfrom scipy import stats","9b8a6da5":"df1 = pd.read_csv('\/kaggle\/input\/world-happiness-report-2021\/world-happiness-report-2021.csv')\ndf2 = pd.read_csv('\/kaggle\/input\/world-happiness-report-2021\/world-happiness-report.csv')","64aa64b2":"print('shape of df1: ', df1.shape)\nprint('shape of df2: ', df2.shape)","93b2c18e":"df1.head()","5f94fb05":"hle = df1['Healthy life expectancy'].values\nladder = df1['Ladder score'].values\ncountries = df1['Country name'].values","00aa753e":"from sklearn.linear_model import LinearRegression\n\nlr = LinearRegression()\nlr.fit(hle.reshape(-1, 1), ladder.reshape(-1, 1))\npredictions = lr.predict(hle.reshape(-1, 1))","57fae7a0":"print(lr.coef_, lr.intercept_)","63ded7e8":"plt.scatter(hle, ladder, s = 20, color = 'indigo')\nplt.xlabel('Healthy Life Expectancy')\nplt.ylabel('Subjective Well Being')\nplt.plot(hle, predictions, color = 'green', linewidth = 4)\nplt.title('Trend of High Life Expectancy vs Subjective Well Being')\n\nfor num, country in enumerate(countries):\n    if country == 'India':\n        plt.annotate(country, (hle[num], ladder[num]), color = 'black', arrowprops = dict(arrowstyle=\"simple\", color = 'maroon'),\n                     xytext=(hle[num]+0.05, ladder[num]+1.0))","453b4abf":"annotate_country = ['India', 'Pakistan', 'Bangladesh', 'China', 'Sri Lanka', 'Afghanistan', 'Myanmar', 'Bhutan', 'Nepal']\n#separate_color = df1[df1['Country name'].isin(annotate_country)]['Healthy life expectancy'].values\n\nplt.scatter(hle, ladder, s = 20, color = 'indigo')\nplt.xlabel('Healthy Life Expectancy')\nplt.ylabel('Subjective Well Being')\nplt.plot(hle, predictions, color = 'green', linewidth = 4)\nplt.title('Trend of High Life Expectancy vs Subjective Well Being')\n\nfor num, country in enumerate(countries):\n    if country in annotate_country:\n        plt.annotate(country, (hle[num], ladder[num]), color = 'black', arrowprops = dict(arrowstyle=\"simple\", color = 'maroon'),\n                     xytext=(hle[num]+0.05, ladder[num]+1.0))","bc6a209d":"df1.head()","f76a8a1d":"def EvalCdf(sample, x):\n    count = 0\n    for i in sample:\n        if i <= x:\n            count += 1\n    return count \/ len(sample)\n\ndef PlotCDF(df, variable, colorcdf, coloraxv, labelcdf, labelaxv):\n    sample = df[variable].values\n    sample.sort()\n    cdf = [EvalCdf(sample, x) for x in sample]\n    plt.plot(sample, cdf, color = colorcdf, drawstyle = 'steps', label = labelcdf)\n    plt.axvline(np.median(sample), ls = ':', color = coloraxv, label = 'Median: {}'.format(labelaxv))\n    plt.legend(shadow = True, framealpha = 0.9, title = 'Label Description')","abdd1dc0":"western_europe = df1[df1['Regional indicator'] == 'Western Europe']\nsouth_asia = df1[df1['Regional indicator'] == 'South Asia']","f5dc4f01":"PlotCDF(western_europe, 'Ladder score', 'blue', 'black', 'Western Europe', 'Ladder score for WE')\nPlotCDF(south_asia, 'Ladder score', 'maroon', 'indigo', 'South Asia', 'Ladder score for SA')\nplt.xlabel('Ladder Score')\nplt.ylabel('CDF')","c13da670":"PlotCDF(western_europe, 'Social support', 'blue', 'black', 'Western Europe', 'Social Support for WE')\nPlotCDF(south_asia, 'Social support', 'maroon', 'indigo', 'South Asia', 'Social Support for SA')\nplt.xlabel('Social Support')\nplt.ylabel('CDF')","15bac67c":"PlotCDF(western_europe, 'Logged GDP per capita', 'blue', 'black', 'Western Europe', 'Logged GDP per capita for WE')\nPlotCDF(south_asia, 'Logged GDP per capita', 'maroon', 'indigo', 'South Asia', 'Logged GDP per capita for SA')\nplt.xlabel('Logged GDP per capita')\nplt.ylabel('CDF')","e12d788d":"PlotCDF(western_europe, 'Healthy life expectancy', 'blue', 'black', 'Western Europe', 'Healthy life expectancy for WE')\nPlotCDF(south_asia, 'Healthy life expectancy', 'maroon', 'indigo', 'South Asia', 'Healthy life expectancy for SA')\nplt.xlabel('Healthy life expectancy')\nplt.ylabel('CDF')","0d697853":"PlotCDF(western_europe, 'Freedom to make life choices', 'blue', 'black', 'Western Europe', 'Freedom to make life choices for WE')\nPlotCDF(south_asia, 'Freedom to make life choices', 'maroon', 'indigo', 'South Asia', 'Freedom to make life choices for SA')\nplt.xlabel('Freedom to make life choices')\nplt.ylabel('CDF')","f1c754ba":"PlotCDF(western_europe, 'Generosity', 'blue', 'black', 'Western Europe', 'Generosity for WE')\nPlotCDF(south_asia, 'Generosity', 'maroon', 'indigo', 'South Asia', 'Generosity for SA')\nplt.xlabel('Generosity')\nplt.ylabel('CDF')","36f25eaf":"PlotCDF(western_europe, 'Perceptions of corruption', 'blue', 'black', 'Western Europe', 'Perception of corruption for WE')\nPlotCDF(south_asia, 'Perceptions of corruption', 'maroon', 'indigo', 'South Asia', 'Perception of corruption for SA')\nplt.xlabel('Perceptions of corruption')\nplt.ylabel('CDF')","55981c9a":"features = ['Ladder score', 'Logged GDP per capita', 'Social support', 'Healthy life expectancy',\n            'Freedom to make life choices', 'Generosity', 'Perceptions of corruption']","4bd8703a":"def CohenEffectSize(group1, group2):\n    mean1 = np.median(group1)\n    mean2 = np.median(group2)\n    \n    diff = mean1 - mean2\n    \n    var1 = np.var(group1)\n    var2 = np.var(group2)\n    \n    n1 = len(group1)\n    n2 = len(group2)\n    \n    pooled_var = (n1 * var1 + n2 * var2) \/ (n1 + n2)\n    \n    d = diff \/ np.sqrt(pooled_var)\n    \n    return d","59716ef1":"for feat in features:\n    we = western_europe[feat].values\n    sa = south_asia[feat].values\n    print(\"Effect size (difference between population means) for {} is: {}\".format(feat, np.median(we) - np.median(sa)))\n    print(\"Cohen's d for {} is: \".format(feat), CohenEffectSize(we, sa), '\\n')","d7ecc039":"for feat in features:\n    we = western_europe[feat].values\n    sa = south_asia[feat].values\n    print(\"IQR of West European countries for {} is {}\".format(feat, [np.percentile(we, 25), np.percentile(we, 75)]))\n    print(\"IQR of South Asian countries for {} is {}\".format(feat, [np.percentile(sa, 25), np.percentile(sa, 75)]), '\\n')","f1208307":"for feat in features:\n    we = western_europe[feat].values\n    sa = south_asia[feat].values\n    print(\"Mode of West European countries for {} is {}\".format(feat, stats.mode(we)[0][0]))\n    print(\"Mode of South Asian countries for {} is {}\".format(feat, stats.mode(sa)[0][0]), '\\n')","eacf4237":"df1[features].corr()","2f859021":"df1['Rank3'] = df1.index.map(lambda x: 1 if x <= 9\n                                    else 3 if x >= 139\n                                    else 2)","5e6e7ff5":"def trend_plot(df, xaxis, yaxis):\n    \n    x, y = df[xaxis].values, df[yaxis].values\n    \n    lr.fit(x.reshape(-1, 1), y.reshape(-1, 1))\n    predictions = lr.predict(x.reshape(-1, 1))\n    \n    sns.scatterplot(x = x, y = y, s = 100, palette = 'coolwarm', hue = df1['Rank3'])\n    plt.axvline(np.mean(x), ls = ':', color = 'maroon', label = 'Mean of {}'.format(xaxis))\n    plt.axhline(np.mean(y), ls = '--', color = 'black', label = 'Mean of {}'.format(yaxis))\n    plt.xlabel(xaxis)\n    plt.ylabel(yaxis)\n    plt.plot(x, predictions, color = 'green', linewidth = 4)\n    plt.title('Trend of {} vs {}'.format(xaxis, yaxis))\n    plt.legend(shadow = True, framealpha = 0.01)\n    \n    for num, country in enumerate(countries):\n        if country == 'India':\n            plt.annotate(country, (x[num], y[num]), color = 'black', arrowprops = dict(arrowstyle=\"simple\", color = 'maroon'),\n                         xytext=(x[num]+0.05, y[num]+1.0))","47efc720":"trend_plot(df1, 'Healthy life expectancy', 'Ladder score')","4cabb92a":"trend_plot(df1, 'Logged GDP per capita', 'Ladder score')","1bc00e39":"trend_plot(df1, 'Social support', 'Ladder score')","db137831":"trend_plot(df1, 'Freedom to make life choices', 'Ladder score')","831eb8e7":"trend_plot(df1, 'Perceptions of corruption', 'Ladder score')","75c23d1e":"sa = df1[df1['Regional indicator'] == 'South Asia']['Country name'].values\nwe = df1[df1['Regional indicator'] == 'Western Europe']['Country name'].values","21c29697":"SA = df2[df2['Country name'].isin(sa)]\nWE = df2[df2['Country name'].isin(we)]","b3a9859b":"y1 = SA[SA['year'] == 2008]\ny2 = SA[SA['year'] == 2019]\n\ndef sandwich(xaxis):\n    countries = y1['Country name'].values\n    \n    x1 = y1[xaxis].values\n    x2 = y2[xaxis].values\n    \n    plt.plot(x1, countries, 'o', color = 'purple', label = '2008', markersize = 20)\n    plt.plot(x2, countries, 's', color = 'indigo', label = '2019', markersize = 20)\n    plt.hlines(countries, x1, x2, color = 'maroon')\n    plt.xlabel('{}'.format(xaxis))\n    plt.ylabel('Countries')\n    plt.title('Trends in {}'.format(xaxis))\n    plt.legend()","2e2a1fc0":"sandwich('Life Ladder')","86c116c2":"sandwich('Log GDP per capita')","2ab47651":"sandwich('Social support')","c01eb669":"sandwich('Healthy life expectancy at birth')","750f3e26":"sandwich('Freedom to make life choices')","a4c4fb10":"sandwich('Generosity')","bab07c51":"sandwich('Perceptions of corruption')","5368ac82":"ls = df1['Ladder score'].values\nss = df1['Social support'].values\ncountries = df1['Country name'].values\n\nplt.scatter(ss, ls, s = 100, color = 'maroon')\nplt.xlim(0, np.mean(ss))\nplt.ylim(0, np.mean(ls))\n\nfor num, country in enumerate(countries):\n    if country == 'India':\n        plt.annotate(country, (ss[num], ls[num]), color = 'black', arrowprops = dict(arrowstyle=\"simple\", color = 'forestgreen'),\n                     xytext=(ss[num]+0.05, ls[num]-1.0))","dadf6e85":"SA = SA.pivot('Country name', 'year', 'Life Ladder')\nsns.heatmap(SA, annot = True, cmap=\"YlGnBu\")","acd1e3af":"WE = WE.pivot('Country name', 'year', 'Life Ladder')\nsns.heatmap(WE, annot = True, cmap=\"YlGnBu\")","0cdc158d":"# Cohen's d","37067e8d":"# Region wise comparison","fb83e315":"***The effect size is indded large in all but 'Generosity' and 'Perception of corruption', however, a small effect size is indeed a trouble for 'Perception of corruption' as it indicated that South Asian countries espouse more corrupt percetion of their leaders which is not a good indicator.***","c0f101eb":"## A Warm up exercise","21ae27e3":"I use the cumulative distribution function (CDF) for comparing the distribution of various parameters characterized by their regional indicators","dbbc57ca":"***In this section, I demonstrate whether Western European countries have outperformed their South Asian counterparts***","ed62cc37":"# Reporting other statistics","1b9871ab":"> *Even though much of what I have done till now is verily self explanatory, nonetheless, the generous reader may not find much assistance in form of long paragraphs and explanations, because the notebook is under construction and a range of different things are to be introduced. However, I think it provides the beginner with some premises to begin the research with. As I go along, I'll keep writing explanations for most of what I have done yet.*","bcdc3063":"***I use Cohen's d to evaluate the effect sizes of different variables***","ac27d345":"# Relationship between variables","b99fdd29":"Cohen's d is parameter used to demonstrate whether an effect size between 2 distributions is 'small', 'medium', or 'large'. For more information, visit the following website;\n\n[About Cohen's d](http:\/\/www.simplypsychology.org\/effect-size.html#:~:text=Cohen%20suggested%20that%20d%20%3D%200.2,if%20it%20is%20statistically%20significant.)","03199051":"***From the above comparison, it is quite clear that Western Europe has indeed outperformed South Asia on all paramters but 'Generosity'.*** ","0a7526f1":"India has performed miserably in the 'Ladder score' and the 'Social support' parameters; let's look closely at the countries among which it is featuring","ccf36c55":"# 1. IQR","48f55248":"## ---------------------------------- UNDER CONSTRUCTION ------------------------------------","5265f6b2":"# Sandwiches","00393e35":"***I report a couple of other statistics, namely the 'mode', and the 'IQR' for the same set of 7 variables (features).***","1049984f":"In the above warm-up exercise, I depicted where does India and its immediate neighbors stand wrt the \"Healthy Life Expectancy\" vs the \"Subjective Well Being\" (Ladder score) trend","f3543b15":"# 2. Mode"}}