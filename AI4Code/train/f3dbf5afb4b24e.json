{"cell_type":{"c45968a6":"code","7f035326":"code","9f73a654":"code","7cd82a53":"code","959016fd":"code","570219f8":"code","26acf40c":"code","78c77508":"code","7d79d90e":"code","950b9a24":"code","24c7e547":"code","4c321b74":"code","b9006546":"code","047e40bd":"code","498e2c38":"code","42d2c042":"code","7cbbde46":"code","60884e01":"code","b2fc7ef8":"code","9669f1cf":"code","7f60952d":"markdown","c1218f4f":"markdown","b51e1c43":"markdown","f045a0e5":"markdown","4ad04709":"markdown","4dbff25d":"markdown","f6630c71":"markdown"},"source":{"c45968a6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nimport sympy as sp\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","7f035326":"submission=pd.read_csv('\/kaggle\/input\/covid19-global-forecasting-week-1\/submission.csv')\nsubmission.head()","9f73a654":"test=pd.read_csv('\/kaggle\/input\/covid19-global-forecasting-week-1\/test.csv')\ntest.head()","7cd82a53":"train=pd.read_csv('\/kaggle\/input\/covid19-global-forecasting-week-1\/train.csv')\ntrain.head()","959016fd":"train.info()","570219f8":"submission.info()","26acf40c":"test.info()","78c77508":"train['ConfirmedCases'].value_counts()","7d79d90e":"train['Fatalities'].value_counts()","950b9a24":"x=train.groupby('Country\/Region')['Country\/Region','ConfirmedCases','Fatalities'].mean()\nx\n","24c7e547":"train.iloc[700:4600,1:9]\n","4c321b74":"sns.regplot(train['Fatalities'],train['ConfirmedCases'])\nplt.ylim(0,)","b9006546":"train.mean()","047e40bd":"f=(train['ConfirmedCases']-train['ConfirmedCases'].mean())\/train['ConfirmedCases'].std()\nprint(f)\nf.plot()\n\n","498e2c38":"v=(train['Fatalities']-train['Fatalities'].mean())\/train['Fatalities'].std()\nprint(v)\nv.plot()","42d2c042":"x.plot.pie(y='ConfirmedCases',figsize=(10,20))\n","7cbbde46":"x.plot.line(subplots=True)","60884e01":"x.plot.kde(bw_method=0.3,subplots=True)","b2fc7ef8":"x.plot.hist(bins=12,alpha=0.5,subplots=True)","9669f1cf":"x.plot.bar(figsize=(35,35))","7f60952d":"PLOTTING DIFFERENT CHARTS ","c1218f4f":"GROUPING CASES AND FATALITIES WITH COUNTRIES ","b51e1c43":"REGRESSION PLOT OF CASES AND FATALITIES","f045a0e5":"INFORMATION ABOUT THE DATASET","4ad04709":"COUNTS FOR THE CASES AND FATALITIES","4dbff25d":"MEAN","f6630c71":"NORMALISING THE DATA OF CASES AND FATALITIES IN RANGE(-1,1)"}}