{"cell_type":{"675243d0":"code","b14ca8da":"code","04dcd39f":"code","88db5ee2":"code","4dd9c94b":"code","c6a648ae":"code","f179fc2f":"code","3c1c4704":"code","6f801af8":"code","8ec2393d":"code","34ce23d1":"code","558cbd4f":"code","329b1f4f":"code","5d2f56ef":"code","9fe414a8":"code","aaa64d9b":"code","32622724":"code","fcd6b558":"code","e5aac655":"code","a7a4d662":"code","c664e954":"code","7e17274c":"code","0b3b430d":"code","8658f74d":"code","1a7dd22c":"code","21cc5068":"code","84a9087d":"code","00a49443":"code","10ba6ce6":"code","379d1454":"code","aae0f7cb":"code","4cf2466f":"code","9dc6ccbf":"code","a66e4c9c":"code","b425868b":"code","cef7bdf4":"code","d8498a1a":"code","a078bb70":"code","f24a99e6":"code","3154f47b":"code","c9aeb164":"code","5706cc6e":"markdown","71ba7fb6":"markdown","d0b74627":"markdown","0bdfe2a0":"markdown","4e8146c2":"markdown","07a12ea1":"markdown","347d88c3":"markdown","4ab19c6f":"markdown","0d3060be":"markdown","d872233b":"markdown","140889f2":"markdown","f7d2d92b":"markdown","7990d76c":"markdown","71c0c4c6":"markdown","47cd5b26":"markdown","18afe915":"markdown","9280b251":"markdown","72c5ea33":"markdown","40aa6b38":"markdown","d25fc490":"markdown","6dbdb289":"markdown"},"source":{"675243d0":"%matplotlib inline\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sn\nimport re as re\nfrom random import randint\nfrom sklearn.preprocessing import OneHotEncoder, LabelEncoder\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.svm import SVC","b14ca8da":"train = pd.read_csv('..\/input\/titanic\/train.csv')\ntrain.head(3)","04dcd39f":"test = pd.read_csv('..\/input\/titanic\/test.csv')\ntest.head(3)","88db5ee2":"ntrain = train.shape[0]\nntest = test.shape[0]\n\ny_train = train['Survived'].values\npassengerId = test['PassengerId']\n\ndataset = pd.concat((train, test))","4dd9c94b":"dataset.info()","c6a648ae":"dataset.describe(include='all')","f179fc2f":"dataset[['Pclass', 'Survived']].groupby(['Pclass'], as_index=False).mean()","3c1c4704":"pd.crosstab(dataset.Pclass, dataset.Survived, margins=True)","6f801af8":"dataset[[\"Sex\", \"Survived\"]].groupby(['Sex'], as_index=False).mean()","8ec2393d":"dataset['FamilySize'] = dataset['SibSp'] + dataset['Parch'] + 1\ndataset[['FamilySize', 'Survived']].groupby(['FamilySize'], as_index=False).mean()","34ce23d1":"dataset['IsAlone'] = 0\ndataset.loc[dataset['FamilySize'] == 1, 'IsAlone'] = 1\ndataset[['IsAlone', 'Survived']].groupby(['IsAlone'], as_index=False).mean()","558cbd4f":"dataset['Fare'] = dataset['Fare'].fillna(dataset['Fare'].median())\ndataset['Fgroup'] = pd.qcut(dataset['Fare'], 10, labels=range(10))\ndataset[['Fgroup', 'Survived']].groupby(['Fgroup'], as_index=False).mean()","329b1f4f":"def get_title(name):\n    title_search = re.search(' ([A-Za-z]+)\\.', name)\n    if title_search:\n        return title_search.group(1)\n    return ''\n\n\ndataset['Title'] = dataset['Name'].apply(get_title)\npd.crosstab(dataset['Title'], dataset['Sex'])","5d2f56ef":"dataset[['Title', 'Survived']].groupby(['Title'], as_index=False).mean()","9fe414a8":"def get_initial_name(name):\n    initial_search = re.search('([A-Za-z]+)', name)\n    if initial_search:\n        return initial_search.group(1)\n    return ''\n\n\ndataset['LastName'] = dataset['Name'].apply(get_initial_name)\ndataset['NumName'] = dataset['LastName'].factorize()[0]\n    \ndataset[['NumName', 'Survived']].groupby(['NumName'], as_index=False).mean()","aaa64d9b":"print('Oldest Passenger was', dataset['Age'].max(), 'Years')\nprint('Youngest Passenger was', dataset['Age'].min(), 'Years')\nprint('Average Age on the ship was', int(dataset['Age'].mean()), 'Years')","32622724":"dataset.groupby('Title').agg({'Age': ['mean', 'count']})","fcd6b558":"dataset = dataset.reset_index(drop=True)\ndataset['Age'] = dataset.groupby('Title')['Age'].apply(lambda x: x.fillna(x.mean()))","e5aac655":"dataset['Title'] = dataset['Title'].replace(['Capt', 'Col', 'Countess', 'Don', 'Dona' , 'Dr', 'Jonkheer', 'Lady', \n                                             'Major', 'Master',  'Miss'  ,'Mlle', 'Mme', 'Mr', 'Mrs', 'Ms', 'Rev', 'Sir'], \n                                            ['Sacrificed', 'Respected', 'Nobles', 'Mr', 'Mrs', 'Respected', 'Mr', 'Nobles', \n                                             'Respected', 'Kids', 'Miss', 'Nobles', 'Nobles', 'Mr', 'Mrs', 'Nobles', 'Sacrificed', 'Nobles'])\ndataset['Title'] = dataset['Title'].replace(['Kids', 'Miss', 'Mr', 'Mrs', 'Nobles', 'Respected', 'Sacrificed'], [4, 4, 2, 5, 6, 3, 1])","a7a4d662":"dataset['TempAgroup'] = pd.qcut(dataset['Age'], 10)\n\ndataset[['TempAgroup', 'Survived']].groupby(['TempAgroup'], as_index=False).mean()","c664e954":"dataset['Agroup'] = pd.qcut(dataset['Age'], 10, labels=range(10))\ndataset[['Agroup', 'Survived']].groupby(['Agroup'], as_index=False).mean()","7e17274c":"pd.crosstab(dataset.Pclass, dataset.Agroup, margins=True)","0b3b430d":"dataset['Gclass'] = 0\ndataset.loc[((dataset['Sex'] == 'male') & (dataset['Pclass'] == 1)), 'Gclass'] = 1\ndataset.loc[((dataset['Sex'] == 'male') & (dataset['Pclass'] == 2)), 'Gclass'] = 2\ndataset.loc[((dataset['Sex'] == 'male') & (dataset['Pclass'] == 3)), 'Gclass'] = 2\ndataset.loc[((dataset['Sex'] == 'female') & (dataset['Pclass'] == 1)), 'Gclass'] = 3\ndataset.loc[((dataset['Sex'] == 'female') & (dataset['Pclass'] == 2)), 'Gclass'] = 4\ndataset.loc[((dataset['Sex'] == 'female') & (dataset['Pclass'] == 3)), 'Gclass'] = 5\ndataset.loc[(dataset['Age'] < 1), 'Gclass'] = 6","8658f74d":"dataset['Sex'] = dataset['Sex'].map( {'female': 0, 'male': 1} ).astype(int)","1a7dd22c":"dataset['Priority'] = 0\ndataset.loc[(dataset['Title'] == 6), 'Priority'] = 1\ndataset.loc[(dataset['Gclass'] == 3), 'Priority'] = 2\ndataset.loc[(dataset['Gclass'] == 6), 'Priority'] = 3\ndataset.loc[(dataset['Pclass'] == 1) & (dataset['Age'] <= 17), 'Priority'] = 4\ndataset.loc[(dataset['Pclass'] == 2) & (dataset['Age'] <= 17), 'Priority'] = 5\ndataset.loc[(dataset['Pclass'] == 3) & (dataset['Sex'] == 1), 'Priority'] = 6\ndataset.loc[(dataset['Fgroup'] == 9), 'Priority'] = 7","21cc5068":"dataset['FH'] = 0\ndataset.loc[(dataset['Gclass'] == 1), 'FH'] = 0\ndataset.loc[(dataset['Gclass'] == 2), 'FH'] = 0\ndataset.loc[(dataset['Gclass'] == 3), 'FH'] = 1\ndataset.loc[(dataset['Gclass'] == 4) & (dataset['FamilySize'] == 2), 'FH'] = 2\ndataset.loc[(dataset['Gclass'] == 4) & (dataset['FamilySize'] == 3), 'FH'] = 3\ndataset.loc[(dataset['Gclass'] == 4) & (dataset['FamilySize'] == 4), 'FH'] = 4\ndataset.loc[(dataset['Gclass'] == 4) & (dataset['FamilySize'] == 1) & (dataset['Pclass'] == 1), 'FH'] = 5\ndataset.loc[(dataset['Gclass'] == 4) & (dataset['FamilySize'] == 1) & (dataset['Pclass'] == 2), 'FH'] = 6\ndataset.loc[(dataset['Gclass'] == 4) & (dataset['Fgroup'] == 3), 'FH'] = 7\ndataset.loc[(dataset['Gclass'] == 4) & (dataset['Fgroup'] >= 5), 'FH'] = 8","84a9087d":"dataset['MH'] = 0\ndataset.loc[(dataset['Sex'] == 1), 'MH'] = 0\ndataset.loc[(dataset['Gclass'] == 1), 'MH'] = 1\ndataset.loc[(dataset['Gclass'] == 1) & (dataset['FamilySize'] == 2), 'MH'] = 2\ndataset.loc[(dataset['Gclass'] == 1) & (dataset['FamilySize'] == 3), 'MH'] = 3\ndataset.loc[(dataset['Gclass'] == 1) & (dataset['FamilySize'] == 4), 'MH'] = 4\ndataset.loc[(dataset['Gclass'] == 1) & (dataset['FamilySize'] == 1) & (dataset['Pclass'] == 1), 'MH'] = 5\ndataset.loc[(dataset['Gclass'] == 1) & (dataset['FamilySize'] == 1) & (dataset['Pclass'] == 2), 'MH'] = 6\ndataset.loc[(dataset['Gclass'] == 1) & (dataset['Fgroup'] == 3), 'MH'] = 7\ndataset.loc[(dataset['Gclass'] == 1) & (dataset['Fgroup'] >= 5), 'MH'] = 8","00a49443":"dataset['FL'] = 0\ndataset.loc[(dataset['Gclass'] != 5), 'FL'] = 0\ndataset.loc[(dataset['Gclass'] == 5) & (dataset['Fgroup'] < 5), 'FL'] = 1\ndataset.loc[(dataset['Gclass'] == 5) & (dataset['Fgroup'] != 3), 'FL'] = 2\ndataset.loc[(dataset['Gclass'] == 5) & (dataset['FH'] == 1), 'FL'] = 3\ndataset.loc[(dataset['Gclass'] == 5) & (dataset['FamilySize'] < 2), 'FL'] = 4\ndataset.loc[(dataset['Gclass'] == 5) & (dataset['FamilySize'] > 4), 'FL'] = 5\ndataset.loc[(dataset['Gclass'] == 5) & (dataset['FamilySize'] == 1) & (dataset['Pclass'] == 3), 'FL'] = 6","10ba6ce6":"dataset['ML'] = 0\ndataset.loc[(dataset['Gclass'] == 2) & (dataset['Fgroup'] < 5), 'ML'] = 1\ndataset.loc[(dataset['Gclass'] == 2) & (dataset['Fgroup'] != 3), 'ML'] = 2\ndataset.loc[(dataset['Gclass'] == 2) & (dataset['MH'] < 7), 'ML'] = 3\ndataset.loc[(dataset['Gclass'] == 2) & (dataset['FamilySize'] < 2), 'ML'] = 4\ndataset.loc[(dataset['Gclass'] == 2) & (dataset['FamilySize'] > 4), 'ML'] = 5\ndataset.loc[(dataset['Gclass'] == 2) & (dataset['FamilySize'] == 1) & (dataset['Pclass'] == 3), 'ML'] = 6\ndataset.loc[(dataset['Gclass'] == 3) & (dataset['Fgroup'] < 5), 'ML'] = 1\ndataset.loc[(dataset['Gclass'] == 3) & (dataset['Fgroup'] != 3), 'ML'] = 2\ndataset.loc[(dataset['Gclass'] == 3) & (dataset['MH'] < 7), 'ML'] = 3\ndataset.loc[(dataset['Gclass'] == 3) & (dataset['FamilySize'] < 2), 'ML'] = 4\ndataset.loc[(dataset['Gclass'] == 3) & (dataset['FamilySize'] > 4), 'ML'] = 5\ndataset.loc[(dataset['Gclass'] == 3) & (dataset['FamilySize'] == 1) & (dataset['Pclass'] == 3), 'ML'] = 6","379d1454":"dataset.columns","aae0f7cb":"dfl = pd.DataFrame()\ngood_columns = ['Priority', 'Gclass', 'Title','NumName', 'FL','IsAlone','ML', 'FH', 'MH', 'Fgroup', 'FamilySize']\ndfl[good_columns] = dataset[good_columns]","4cf2466f":"corrMatrix = pd.concat([dfl[:ntrain], train['Survived']], axis=1).corr()\nfig, ax = plt.subplots(figsize=(10,10))     \nsn.heatmap(corrMatrix, annot=True, linewidths=.5, ax=ax)\nplt.show()","9dc6ccbf":"dfl = pd.DataFrame()\ngood_columns = ['Priority', 'Gclass', 'Title','NumName', 'FL','IsAlone','ML', 'FH', 'MH', 'Fgroup', 'FamilySize']\ndfl[good_columns] = dataset[good_columns]","a66e4c9c":"corrMatrix = pd.concat([dfl[:ntrain], train['Survived']], axis=1).corr()\nfig, ax = plt.subplots(figsize=(10,10))     \nsn.heatmap(corrMatrix, annot=True, linewidths=.5, ax=ax)\nplt.show()","b425868b":"dfh = dfl.copy()\ndfl_enc = dfl.apply(LabelEncoder().fit_transform)\none_hot_cols = dfh.columns.tolist()\ndfh_enc = pd.get_dummies(dfh, columns=one_hot_cols)\n","cef7bdf4":"X_train = dfh_enc[:ntrain]\nX_test = dfh_enc[ntrain:]","d8498a1a":"scaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","a078bb70":"model = SVC(probability=True, gamma=0.001, C=10)\nscores = cross_val_score(model, X_train, y_train, cv=7)\nprint(\"Accuracy: %0.2f (+\/- %0.2f)\" % (scores.mean(), scores.std() * 2))","f24a99e6":"model = SVC(probability=True, gamma=0.001, C=10)\nmodel.fit(X_train, y_train)\npredictions = model.predict(X_test)","3154f47b":"output = pd.DataFrame({'PassengerId': passengerId, 'Survived': predictions})\noutput","c9aeb164":"output.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","5706cc6e":"# Data Cleaning","71ba7fb6":"This is my first work of machine learning. the notebook is written in python","d0b74627":"Pclass 1 and 2 have similar values for survived","0bdfe2a0":"## Age","4e8146c2":"### Mapping Gender class","07a12ea1":"# Feature Engineering","347d88c3":"## Pclass","4ab19c6f":"# Introduction","0d3060be":"### Load in the train datasets","d872233b":"### Mapping MH\nMale Higher Survival Group","140889f2":"## Sex","f7d2d92b":"### Mapping FH\nFemale Higher Survival Group","7990d76c":"### Load in the test datasets","71c0c4c6":"### Mapping FH\nFemale Higher Survival Group","47cd5b26":"### Mapping Sex","18afe915":"# Prediction","9280b251":"## Fare","72c5ea33":"## Name","40aa6b38":"### Mapping Priority\n1. Nobles \n2. Women in Pclass 1 \n3. Babies under 1 \n4. Kids under 17 in Pclass 1\n5. Kids under 17 in Pclass 2 \n6. Women in Pclass 3","d25fc490":"### Mapping FL\nFemale Lower Surival Group","6dbdb289":"## SibSp and Parch"}}