{"cell_type":{"97e21c88":"code","25245331":"code","0c710b88":"code","464f66c4":"code","aeec0f1d":"code","d9708422":"code","016a048b":"code","bd27e929":"code","847d47fd":"code","1907303c":"code","9f7305da":"code","8b1082c7":"code","4ea195c7":"code","68d253af":"code","8aedbe48":"code","702b2dba":"code","846971fc":"code","ea0d0367":"code","548525c5":"code","a6dc24dc":"code","abf7eb7c":"code","bd2769e5":"code","a55830d2":"code","6c7bf6a7":"markdown","0535993a":"markdown","b9c4e368":"markdown","88ee8679":"markdown","079cd3cc":"markdown","a2606fc4":"markdown","fd9c0b83":"markdown","c419b93e":"markdown","bdf3d0f5":"markdown","d5eb10e6":"markdown","d05452ef":"markdown","d2ae5568":"markdown","f554d1de":"markdown","b1848b47":"markdown","eaafbd39":"markdown","313c62e7":"markdown","b46a7614":"markdown","c864dc8b":"markdown"},"source":{"97e21c88":"import pandas as pd\nimport os","25245331":"files = [file for file in os.listdir('..\/input\/sales-analysis-2019')]\n\nall_months_data = pd.DataFrame()\n\nfor file in files:\n    df = pd.read_csv('..\/input\/sales-analysis-2019\/'+file)\n    all_months_data = pd.concat([all_months_data,df])\n\nall_months_data.to_csv(\"all_data.csv\", index = False)","0c710b88":"all_data = pd.read_csv('.\/all_data.csv')\nall_data.head()","464f66c4":"all_data = all_data.dropna(how = 'all')","aeec0f1d":"all_data = all_data[all_data['Order Date'].str[0:2] != 'Or']","d9708422":"all_data['Quantity Ordered'] = pd.to_numeric(all_data['Quantity Ordered'])\nall_data['Price Each'] = pd.to_numeric(all_data['Price Each'])","016a048b":"all_data['Month'] = pd.to_numeric(all_data['Order Date'].str[0:2])\nall_data.head()","bd27e929":"all_data['Sales'] = all_data['Quantity Ordered']*all_data['Price Each']\nall_data.head()","847d47fd":"def get_city(address):\n    return address.split(', ')[1]\ndef get_state(address):\n    return address.split(', ')[2].split(' ')[0]\n\nall_data['City'] = all_data['Purchase Address'].apply(lambda x: f\"{get_city(x)} ({get_state(x)})\")\n\nall_data.head()","1907303c":"results = all_data.groupby('Month').sum()\nresults","9f7305da":"import matplotlib.pyplot as plt\n%matplotlib inline\nmonths = range(1,13)\nplt.bar(months, results['Sales'])\nplt.title(\"Month-wise Total Sales\")\nplt.xticks(months)\nplt.ylabel('Sales in Million (USD)')\nplt.xlabel('Month')","8b1082c7":"citywise_sales = all_data.groupby('City').sum()\ncitywise_sales","4ea195c7":"cities = [city for city, df in all_data.groupby('City')]\nplt.bar(cities, citywise_sales['Sales'])\nplt.title(\"City-wise Total Sales\")\nplt.xticks(cities, rotation = 'vertical', size = 9)\nplt.ylabel('Sales in Million (USD)')\nplt.xlabel('City')","68d253af":"all_data.head()","8aedbe48":"all_data['Order Date'] = pd.to_datetime(all_data['Order Date'])","702b2dba":"all_data['Hour'] = all_data['Order Date'].dt.hour\nall_data['Minute'] = all_data['Order Date'].dt.minute","846971fc":"all_data.head()","ea0d0367":"hours = [hour for hour, df in all_data.groupby('Hour')]\nplt.plot(hours, all_data.groupby('Hour').count())\nplt.ylabel('Number of Orders')\nplt.xlabel('Hour')\nplt.xticks(hours)\nplt.grid()","548525c5":"df = all_data[all_data['Order ID'].duplicated(keep=False)]\n\ndf['Grouped'] = df.groupby('Order ID')['Product'].transform(lambda x: ','.join(x))\n\ndf = df[['Order ID','Grouped']].drop_duplicates()\n\ndf.head()\n","a6dc24dc":"df.groupby('Grouped').count().sort_values('Order ID', ascending= False).head(5)","abf7eb7c":"all_data[['Product','Quantity Ordered']].groupby('Product').sum().sort_values('Quantity Ordered', ascending= False).head(5)","bd2769e5":"product_group = all_data.groupby('Product')\nquantity_ordered = product_group.sum()['Quantity Ordered']\nproducts = [product for product, df in product_group]\n\nplt.bar(products, quantity_ordered)\nplt.xlabel('Products')\nplt.xticks(products, rotation='vertical',size=8)\nplt.show()","a55830d2":"prices = all_data.groupby('Product').mean()['Price Each']\n\nfig, ax1 = plt.subplots()\n\nax2 = ax1.twinx()\nax1.bar(products, quantity_ordered, color='g')\nax2.plot(products, prices, 'b-')\n\nax1.set_xlabel('Product Name')\nax1.set_ylabel('Quantity Ordered', color='g')\nax2.set_ylabel('Price($)', color='b')\nax1.set_xticklabels(products, rotation='vertical', size=8)\n","6c7bf6a7":"#### Read in updated dataframe","0535993a":"### Question 2: What US City had the highest number of sales?","b9c4e368":"### Augment data with additional columns","88ee8679":"#### 11AM and 6PM will be a nice time to show ads","079cd3cc":"### Question 4: What products are most often sold together?","a2606fc4":"### Question 3: What time should we display advertisements to maximize customer's likelihood of buying a product?","fd9c0b83":"3. Convert columns to the correct type","c419b93e":"#### Task 3: Add a sales column","bdf3d0f5":"1. Drop rows with NaN","d5eb10e6":"AAA batteries were sold the most because they are used in all other electronics devices.\nand also because they are cheap, to prove this hypothesis, we are gonna overlay the prices of individual products on top of the above chart","d05452ef":"#### Task 2: Add Month Column","d2ae5568":"### Question 5: What product sold the most and why?","f554d1de":"# SALES ANALYSIS\n\nWe will be doing exploratory data analysis of a sales info dataset.\n\n### Importing necessary libraries","b1848b47":"### Question 1: What was the best month for sales? How much was earned that month?","eaafbd39":"#### Task 4: Add a city column","313c62e7":"## Clean up the data!","b46a7614":"2. Find 'Or' in Order Date and remove it","c864dc8b":"#### Task #1 : Merge the 12 months of sales data in one csv file."}}