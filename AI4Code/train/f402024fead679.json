{"cell_type":{"67e22471":"code","81b5cc94":"code","e968d1fb":"code","02906c4c":"code","65e45206":"code","ff1582ae":"code","827abafe":"code","81d6f4b4":"code","6049c147":"code","bec6d0e3":"code","bf86418e":"code","cc327d5d":"code","2fca66df":"code","e277f206":"markdown","d4fd3ea4":"markdown","b2cad156":"markdown","b9997398":"markdown","5cfadef3":"markdown","394a624e":"markdown","4b4b9a2b":"markdown","a8cc5878":"markdown","14f01c81":"markdown","2c5b4c71":"markdown"},"source":{"67e22471":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom pandas import Series,DataFrame\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","81b5cc94":"data_train=pd.read_csv('..\/input\/Static_Feature_Total(re).csv')","e968d1fb":"data_train.info()","02906c4c":"import matplotlib.pyplot as plt\nfig=plt.figure()\nfig.set(alpha=0.2)\n\nplt.subplot2grid((2,3),(0,0))\ndata_train.Is_Malware.value_counts().plot(kind='bar')\nplt.title(u\"malware(1 is malware)\")\n\nplt.subplot2grid((2,3),(0,1))\ndata_train.Shell_Protection.value_counts().plot(kind=\"bar\")\nplt.title(u\"shell_protection\")\n\n","65e45206":"dummies_Shell_Protection=pd.get_dummies(data_train['Shell_Protection'],prefix='Shell_Protection')\ndf=pd.concat([data_train,dummies_Shell_Protection],axis=1)\ndf.drop(['Shell_Protection'],axis=1,inplace=True)","ff1582ae":"import sklearn.preprocessing as preprocessing\nscaler = preprocessing.StandardScaler()\n#APK_Size_scale_param = scaler.fit(df['APK_Size'])\ndf['APK_Size_scaled']=scaler.fit_transform(np.array(df['APK_Size']).reshape(-1,1))","827abafe":"\u6211\u4eec\u5212\u5206\u7279\u5f81\u548c\u6807\u7b7e\uff0c\u5f00\u59cb\u8bad\u7ec3\u5427","81d6f4b4":"from xgboost import XGBClassifier#XGboost\u5927\u6cd5\u597d\nfrom sklearn.ensemble import BaggingRegressor#\nfrom sklearn.model_selection import cross_val_score\n\nfor u in df.columns:#\u628a\u5e03\u5c14\u503c\u8f6c\u6362\u4e3a0\uff0c1\n    if df[u].dtype==bool:\n        df[u]=df[u].astype('int')\ntrain_df=df.filter(regex='Is_Malware|APK_Size_scaled|Reflection_Code|Native_Code|Declared_Permission_count|Activity_Count|Broadcast_Receiver_Count|Service_Count|Content_Provider_Count|READ_PHONE_STATE|READ_EXTERNAL_STORAGE|SYSTEM_ALERT_WINDOW|GET_TASKS|WRITE_SETTINGS|BIND_DEVICE_ADMIN|INTERNET|BLUETOOTH|CAMERA|READ_LOGS|ACCESS_FINE_LOCATION|READ_FRAME_BUFFER|BRICK|INSTALL_PACKAGES|MOUNT_FORMAT_FILESYSTEMS|RECEIVE_BOOT_COMPLETED|WRITE_EXTERNAL_STORAGE|CALL_PHONE|READ_CALL_LOG|WRITE_CALL_LOG|ADD_VOICEMAIL|USE_SIP|PROCESS_OUTGOING_CALLS|SEND_SMS|RECEIVE_SMS|READ_SMS|RECEIVE_WAP_PUSH|RECEIVE_MMS|ACCESS_COARSE_LOCATION|RECORD_AUDIO|READ_CONTACTS|WRITE_CONTACTS|GET_ACCOUNTS|READ_CALENDAR|WRITE_CALENDAR|Shell_Protection_.*')\n#\u63d0\u53d6\u4e00\u4e9b\u6211\u4eec\u9700\u8981\u7684\u7279\u5f81\u8fdb\u5165train_df\u4e2d\n\ncols=list(train_df)\ncols.insert(0, cols.pop(cols.index('Is_Malware')))\ntrain_df = df.loc[:, cols]\ntrain_np=train_df.as_matrix()\nx,y=train_np[:,1:],train_np[:,0]\n#\u628atrain_df\u5212\u5206\u4e3a\u7279\u5f81\u5e93\u548c\u6807\u7b7e\u5e93\n","6049c147":"params = [3,4,5,6,7,8,9,10]\ntest_scores = []\nfor param in params:\n    clf = XGBClassifier(max_depth=param)\n    test_score = np.sqrt(-cross_val_score(clf,x,y, cv=10, scoring='neg_mean_squared_error'))\n    test_scores.append(np.mean(test_score))","bec6d0e3":"import matplotlib.pyplot as plt\n%matplotlib inline\nplt.plot(params, test_scores)\nplt.title(\"n_estimator vs CV Error\");","bf86418e":"clf = XGBClassifier(max_depth=10)\nclf.fit(x,y)","cc327d5d":"clf.predict(x)","2fca66df":"from sklearn.externals import joblib\nos.chdir(\"..\/input\")\njoblib.dump(clf, \"train_model.m\")","e277f206":"\u9884\u6d4b","d4fd3ea4":"\u62df\u5408\u6a21\u578b","b2cad156":"\u6211\u4eec\u53d1\u73b0apk_size\u8fd9\u4e00\u5217\u6570\u636e\u592a\u5927\u4e86\uff0c\u4e3a\u4e86\u9632\u6b62\u5f71\u54cd\u8bad\u7ec3\uff0c\u6211\u4eec\u505a\u4e2a\u6807\u51c6\u5316\uff0c\u7528\u7684\u662fpreprocessing\u7684standardScaler\u65b9\u6cd5","b9997398":"\u753b\u5f20\u56fe\u6211\u4eec\u770b\u4e00\u4e0b\u8868\u73b0","5cfadef3":"\u6211\u4eec\u5148\u770b\u770b\u8bad\u7ec3\u96c6\u957f\u4ec0\u4e48\u6837\uff0c\u7136\u540e\u518d\u505a\u4e00\u4e9b\u6570\u636e\u5de5\u7a0b\uff0c\u6700\u540e\u5f00\u59cb\u6211\u4eec\u7684\u8bad\u7ec3","394a624e":"\u7ed9\u8bad\u7ec3\u96c6\u4e2d\u7684\u7c7b\u522b\u7279\u5f81Shell_Protection\uff0c\u6211\u4eec\u505a\u4e2a\u72ec\u70ed\u7f16\u7801\uff0c\u7528\u7684\u662fpandas\u91cc\u7684get_dummies\u7f16\u7801\u65b9\u6cd5","4b4b9a2b":"\u753b\u4e2a\u56fe\u770b\u770b\u8bad\u7ec3\u96c6\u6570\u636e\u7684\u5206\u5e03\u60c5\u51b5\uff0c\u4f46\u662f\u56e0\u4e3akaggle\u9884\u89c8\u754c\u9762\u90fd\u753b\u597d\u4e86\uff0c\u7b49\u4f1a\u513f\u76f4\u63a5\u590d\u5236\u5c31\u53ef\u4ee5\u4e86\uff0c\u6211\u4e5f\u5077\u4e86\u4e2a\u61d2\u53ea\u753b\u4e86\u4e00\u70b9\u70b9","a8cc5878":"\u63a5\u4e0b\u6765\u505a\u4e2a\u7b80\u5355\u7684\u4ea4\u53c9\u9a8c\u8bc1\uff0c\u8c03\u6574\u4e00\u4e0bxgbclassifier\u91cc\u7684max_depth\uff08\u6811\u7684\u6700\u5927\u6df1\u5ea6\uff09\u8fd9\u4e00\u53c2\u6570","14f01c81":"\u5bfc\u5165\u8bad\u7ec3\u96c6","2c5b4c71":"\u5bfc\u51fa\u6a21\u578b"}}