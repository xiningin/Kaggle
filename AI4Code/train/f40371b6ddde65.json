{"cell_type":{"83ca578d":"code","c311e41f":"code","15ca3bb2":"code","0ac6f0aa":"code","e281c80a":"code","ec3848d3":"code","d04a5d63":"code","c8672ffb":"code","597eed3f":"markdown","5143f3db":"markdown","af282888":"markdown","3ea81f76":"markdown","da21c829":"markdown"},"source":{"83ca578d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c311e41f":"import matplotlib.pyplot as plt\n","15ca3bb2":"dataset=pd.read_csv('\/kaggle\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')\nX=dataset.iloc[:,[3,4]].values","0ac6f0aa":"print(X)","e281c80a":"import scipy.cluster.hierarchy as sch\ndendogram=sch.dendrogram(sch.linkage(X,method='ward'))\nplt.title('Dendrogram')\nplt.xlabel('Clusters')\nplt.ylabel('Euclidean Distance')\nplt.show()","ec3848d3":"from sklearn.cluster import AgglomerativeClustering\nhc=AgglomerativeClustering(n_clusters=5,linkage='ward',affinity='euclidean')\ny_hc=hc.fit_predict(X)","d04a5d63":"print(y_hc)","c8672ffb":"plt.scatter(X[y_hc == 0, 0], X[y_hc == 0, 1], s = 100, c = 'red', label = 'Cluster 1')\nplt.scatter(X[y_hc == 1, 0], X[y_hc == 1, 1], s = 100, c = 'blue', label = 'Cluster 2')\nplt.scatter(X[y_hc == 2, 0], X[y_hc == 2, 1], s = 100, c = 'green', label = 'Cluster 3')\nplt.scatter(X[y_hc == 3, 0], X[y_hc == 3, 1], s = 100, c = 'cyan', label = 'Cluster 4')\nplt.scatter(X[y_hc == 4, 0], X[y_hc == 4, 1], s = 100, c = 'magenta', label = 'Cluster 5')\nplt.title('Clusters of customers')\nplt.xlabel('Annual Income (k$)')\nplt.ylabel('Spending Score (1-100)')\nplt.legend()\nplt.show()","597eed3f":"**From the dedrogram we found the optimal no of clusters is 5**","5143f3db":"# Training  the cluster model on the dataset","af282888":"# Visualising the clusters\n","3ea81f76":"# Using the dendrogram to find the optimal number of clusters","da21c829":"# Importing the dataset"}}