{"cell_type":{"c5e970af":"code","bb67fd55":"code","c4092eb3":"code","54a809b5":"code","cc52164f":"code","137fd3cd":"code","b2cee4e3":"code","eef569c3":"code","478e6915":"markdown","bba24a3a":"markdown","7a6c9b01":"markdown","02a46ca6":"markdown","30709ff9":"markdown","00db5aa2":"markdown"},"source":{"c5e970af":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom glob import glob\nimport albumentations as A\nimport cv2\nfrom PIL import Image \nimport matplotlib.patches as patches","bb67fd55":"BASE_DIR = '..\/input\/seti-breakthrough-listen\/'\ntrain_path = '..\/input\/seti-breakthrough-listen\/train'\ntest_path = '..\/input\/seti-breakthrough-listen\/test'\ntrain = pd.read_csv(f'{BASE_DIR}train_labels.csv')\nsam = pd.read_csv(f'{BASE_DIR}sample_submission.csv')\ntrain['file_name'] = train['id'].apply(lambda a: a+'.npy')\ntrain['dir_name'] = train['id'].apply(lambda a: a[0])","c4092eb3":"df = train[train['target'] == 1].loc[16878]\ndf = train[train['target'] == 1].iloc[0]\ntarget = df['target']\ncadence_snippet_name = os.path.join(train_path,str(df['dir_name']),str(df['file_name']))\n\narr = np.load(cadence_snippet_name)\nfig, ax = plt.subplots(6, 1, figsize=(16, 10))\nplt.suptitle(f\"ID: {os.path.basename(cadence_snippet_name)} TARGET: {target}\", fontsize=18)\nfor i in range(6):\n    ax[i].imshow(arr[i].astype(float), interpolation='nearest', aspect='auto')\n    ax[i].text(5, 100, [\"ON\", \"OFF\"][i % 2], bbox={'facecolor': 'white'})\n    plt.xticks([])\n    if(i==0):\n        rect = patches.Rectangle((87, 5), 10, 264, linewidth=1, edgecolor='r', facecolor='none')\n        ax[0].add_patch(rect)\n    if(i==2):\n        rect = patches.Rectangle((105, 5), 15, 264, linewidth=1, edgecolor='r', facecolor='none')\n        ax[2].add_patch(rect)\n    if(i==4):\n        rect = patches.Rectangle((136, 5), 30, 264, linewidth=1, edgecolor='r', facecolor='none')\n        ax[4].add_patch(rect)\n\nfig.show()\n# df","54a809b5":"df = train[train['id'] == 'e1f7c0159caa'].iloc[0]\ntarget = df['target']\ncadence_snippet_name = os.path.join(train_path,str(df['dir_name']),str(df['file_name']))\n\narr = np.load(cadence_snippet_name)\nfig, ax = plt.subplots(6, 1, figsize=(16, 10))\nplt.suptitle(f\"Easier to detect\", fontsize=18)\nfor i in range(6):\n    ax[i].imshow(arr[i].astype(float), interpolation='nearest', aspect='auto')\n    ax[i].text(5, 100, [\"ON\", \"OFF\"][i % 2], bbox={'facecolor': 'white'})\n    plt.xticks([])\n    if(i==0):\n        rect = patches.Rectangle((105, 225), 7, 44, linewidth=1, edgecolor='r', facecolor='none')\n        ax[0].add_patch(rect)\n    if(i==2):\n        rect = patches.Rectangle((95, 5), 10, 264, linewidth=1, edgecolor='r', facecolor='none')\n        ax[2].add_patch(rect)\n    if(i==4):\n        rect = patches.Rectangle((83, 5), 9, 264, linewidth=1, edgecolor='r', facecolor='none')\n        ax[4].add_patch(rect)\n\nfig.show()","cc52164f":"df = train[train['id'] == '7072ba75fac0'].iloc[0]\ntarget = df['target']\ncadence_snippet_name = os.path.join(train_path,str(df['dir_name']),str(df['file_name']))\n\narr = np.load(cadence_snippet_name)\nfig, ax = plt.subplots(6, 1, figsize=(16, 10))\nplt.suptitle(f\"Harder to detect\", fontsize=18)\nfor i in range(6):\n    ax[i].imshow(arr[i].astype(float), interpolation='nearest', aspect='auto')\n    ax[i].text(5, 100, [\"ON\", \"OFF\"][i % 2], bbox={'facecolor': 'white'})\n    plt.xticks([])\n    if(i==2):\n        rect = patches.Rectangle((125, 5), 20, 264, linewidth=1, edgecolor='r', facecolor='none')\n        ax[2].add_patch(rect)\n    if(i==4):\n        rect = patches.Rectangle((162, 5), 30, 264, linewidth=1, edgecolor='r', facecolor='none')\n        ax[4].add_patch(rect)\n\nfig.show()","137fd3cd":"plt.title('Distribution of the target variable')\nsns.countplot(x=train['target'])","b2cee4e3":"df = train[train['target'] == 1].loc[16878]\ndf = train[train['target'] == 1].iloc[2]\ntarget = df['target']\ncadence_snippet_name = os.path.join(train_path,str(df['dir_name']),str(df['file_name']))\n\narr = np.load(cadence_snippet_name)\nfig, ax = plt.subplots(6, 1, figsize=(16, 10))\nplt.suptitle(f\"Alien signals present\", fontsize=18)\nfor i in range(6):\n    ax[i].imshow(arr[i].astype(float), interpolation='nearest', aspect='auto')\n    ax[i].text(5, 100, [\"ON\", \"OFF\"][i % 2], bbox={'facecolor': 'white'})\n    plt.xticks([])\n    if(i==0):\n        rect = patches.Rectangle((229, 5), 10, 264, linewidth=1, edgecolor='r', facecolor='none')\n        ax[0].add_patch(rect)\n    if(i==2):\n        rect = patches.Rectangle((239, 5), 10, 264, linewidth=1, edgecolor='r', facecolor='none')\n        ax[2].add_patch(rect)\n    if(i==4):\n        rect = patches.Rectangle((253, 5), 10, 264, linewidth=1, edgecolor='r', facecolor='none')\n        ax[4].add_patch(rect)\n\nfig.show()","eef569c3":"df = train[train['target'] == 0].head(10).iloc[8]\ntarget = df['target']\ncadence_snippet_name = os.path.join(train_path,str(df['dir_name']),str(df['file_name']))\n\narr = np.load(cadence_snippet_name)\nfig, ax = plt.subplots(6, 1, figsize=(16, 10))\nplt.suptitle(f\"Alien signals not present\", fontsize=18)\nfor i in range(6):\n    ax[i].imshow(arr[i].astype(float), interpolation='nearest', aspect='auto')\n    ax[i].text(5, 100, [\"ON\", \"OFF\"][i % 2], bbox={'facecolor': 'white'})\n    plt.xticks([])\nfig.show()","478e6915":"<b>Lets break this cadence snippet down:-<\/b>\n\n<b>Firstly,<\/b><br>\nThe individual plots signify a cadence, and the combination of the 6 plots is called a cadence snippet\n\n<b>Secondly,<\/b><br>\nWhat is the purpose of the ON and OFF in the snippet?<br>\n* The human technology gives off radio signals. We refer to these human-generated signals as \u201cradio frequency interference\u201d, or RFI. This creates issues for the Breakthrough Listen.\n* To deal with this, the Listen team intersperses scans of the target stars with scans of other regions of sky. Any signal that appears in both sets of scans probably isn\u2019t coming from the direction of the target star.<br>\n\n<b>Third,<\/b><br> The curve you see highlighted in red signifies the candidate signatures of extraterrestrial technology. It\u2019s a curved line because the relative motion of the Earth and the spacecraft imparts a Doppler drift, causing the frequency to change over time. It is not necessary that it will always be diagonal.\n\n<br>\nWe\u2019ve taken tens of thousands of cadence snippets, which we\u2019re calling the haystack, and we\u2019ve hidden needles among them. Some of these needles should be easy to detect, even with classical detection algorithms. Others are hidden in noisy regions of the spectrum and will be harder, even though they might be relatively obvious on visual inspection:\n<b> Example of this:-","bba24a3a":"<b>Here it might feel like there are technosignatures present, but there isn't any, why?<\/b><br>\nEven though we can see some diagonals, those are actually radio frequency interference (RIFs).<br>\nA good way to understand it is that, there is no difference between the images even when we change the locations, Which means that signals are not coming from the sky, but rather  from earthly devices like radios etc.\n\nIt is highly recommended to check the competitions [Description](https:\/\/www.kaggle.com\/c\/seti-breakthrough-listen\/overview\/description), and [Data Understanding](https:\/\/www.kaggle.com\/c\/seti-breakthrough-listen\/overview\/data-information) sections, to understand the cadence images better.","7a6c9b01":"As we can see that there is a huge imbalance in the the training dataset.\n<br><br>\n<b>About the generation of the candidate signatures of extraterrestrial technology:-<\/b><br>\nIt obviously is not actual technosignatures, as if they were, it would mean that scientists have already discovered aliens. <br>\nThe organizers have taken tens of thousands of cadence snippets, which we\u2019re calling the haystack, and they\u2019ve hidden needles among them. \n* Some of these needles are similar to the signals created by man made interplanetary spacecraft and should be easy to detect, even with classical detection algorithms. \n* Other are hidden in noisy regions of the spectrum and will be harder, even though they might be relatively obvious on visual inspection\n<br><br>\n\n<h3>Some ways to approach the problem may be approaches from computer vision that are promising, as well as digital signal processing, anomaly detection, and more.<\/h3>","02a46ca6":"<h2> Thank you for reading, If you found this notebook helpful, do upvote<\/h2>","30709ff9":"Look at this [thread](https:\/\/www.kaggle.com\/c\/seti-breakthrough-listen\/discussion\/237980)<br>\n\n<b> Some other nuances:- <\/b>\n* Not all of the \u201cneedle\u201d signals look like diagonal lines\n* All of the \u201cneedle\u201d signals may not be present for the entirety of all three \u201cA\u201d observations\n\nWhat they do have in common is that they are only present in some or all of the \u201cA\u201d observations (panels 1, 3, and 5 in the cadence snippets).","00db5aa2":"# SETI Breakthrough Listen - E.T. Signal Search\n\nIn this competition we are tasked with looking for technosignature signals in cadence snippets taken from the Green Bank Telescope (GBT) to help in the search for candidate signatures of extraterrestrial technology - so-called technosignatures.<br>\n<h3>A cooler way to put it is that we are looking for aliens. <\/h3>\n\n![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcTEZ3m0SFpeTux8e4sV_TLFEqufMkeeBqtl7g&usqp=CAU)\n<br>\n<br>\nWe are provided with 50165 cadence snippets in the train set, and we are suposed to create a Algrotihm with them to detect these technosignatures. <b>The cadence snippets looks like this:-<\/b>"}}