{"cell_type":{"28c7051c":"code","1ef46158":"code","1efe9926":"code","22108add":"code","fea9889a":"code","94f70c80":"code","0ff30093":"code","ac296e9a":"code","9a92b64a":"code","968c0527":"code","11480ffd":"code","9f6b1e7e":"code","bc0e076e":"code","7364d89a":"code","d1f60446":"code","1399b634":"code","902cba87":"code","62d38d46":"code","2478ea76":"code","bbaa7387":"code","628b85b0":"code","74be84f3":"code","4086f9f3":"code","21a7a439":"code","57acb7fc":"code","c9bbb6e9":"code","95829445":"code","00d4f922":"markdown","9692ee20":"markdown","b1d35d1d":"markdown","1f99b574":"markdown"},"source":{"28c7051c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.offline as py\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1ef46158":"df = pd.read_csv('..\/input\/moscow-schools-winners-of-educational-olympiads\/moscow schools - winners.csv', encoding='utf8')\ndf.head()","1efe9926":"df.isnull().sum()","22108add":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.ShortName)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Reds', background_color=\"blue\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","fea9889a":"#Code from Gabriel Preda\n#plt.style.use('dark_background')\ndef plot_count(feature, title, df, size=1):\n    f, ax = plt.subplots(1,1, figsize=(4*size,4))\n    total = float(len(df))\n    g = sns.countplot(df[feature], order = df[feature].value_counts().index[:20], palette='Blues')\n    g.set_title(\"Number and percentage of {}\".format(title))\n    if(size > 2):\n        plt.xticks(rotation=90, size=8)\n    for p in ax.patches:\n        height = p.get_height()\n        ax.text(p.get_x()+p.get_width()\/2.,\n                height + 3,\n                '{:1.2f}%'.format(100*height\/total),\n                ha=\"center\") \n    plt.show()","94f70c80":"plot_count(\"ShortName\", \"Short name of educational institution\", df,4)","0ff30093":"plot_count(\"OlympiadType\", \"Olympiad type - moscow one or all-russian\", df,4)","ac296e9a":"plot_count(\"Status\", \"School participation final status\", df,4)","9a92b64a":"plot_count(\"Year\", \"School academic year\", df,4)","968c0527":"plot_count(\"Subject\", \"School subject of an Olympiad\", df,4)","11480ffd":"plot_count(\"Stage\", \"Stage of olympiad - 3 (regional) or 4 (final)\", df,4)","9f6b1e7e":"plot_count(\"Class\", \"School year (ordinal one - from 1 to 12 max)\", df,4)","bc0e076e":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/parts-of-speech\n\nplt.figure(figsize=(10,5))\nsns.countplot(y=\"OlympiadType\",data=df,\n             facecolor=(0,0,0,0),linewidth=5,\n             edgecolor=sns.color_palette(\"RdBu\"))\nplt.title('Olympiad type - Moscow one or all-russian',\n         fontsize=15);","7364d89a":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/parts-of-speech\n\nplt.figure(figsize=(10,5))\nsns.countplot(y=\"Status\",data=df,\n             facecolor=(0,0,0,0),linewidth=5,\n             edgecolor=sns.color_palette(\"rainbow\"))\nplt.title('School participation final status',\n         fontsize=15);","d1f60446":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/parts-of-speech\n\nplt.figure(figsize=(10,5))\nsns.countplot(y=\"Stage\",data=df,\n             facecolor=(0,0,0,0),linewidth=5,\n             edgecolor=sns.color_palette(\"Reds\"))\nplt.title('Stage of olympiad - 3 (regional) or 4 (final)',\n         fontsize=15);","1399b634":"fig = px.bar(df, x= \"ShortName\", y= \"Status\", color_discrete_sequence=['crimson'], title=\"Moscow Educational Olympiads\")\nfig.show()","902cba87":"#Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\ncolor = plt.cm.RdGy(np.linspace(0,1,20))\ndf[\"ShortName\"].value_counts().sort_values(ascending=False).head(10).plot.pie(y=\"Status\",colors=color,autopct=\"%0.1f%%\")\nplt.title(\"Moscow Educational Olympiads\")\nplt.axis(\"off\")\nplt.show()","62d38d46":"import plotly.offline as pyo\nimport plotly.graph_objs as go\nlowerdf = df.groupby('Subject').size()\/df['OlympiadType'].count()*100\nlabels = lowerdf.index\nvalues = lowerdf.values\n\n# Use `hole` to create a donut-like pie chart\nfig = go.Figure(data=[go.Pie(labels=labels, values=values,marker_colors = px.colors.sequential.speed, hole=.6)])\nfig.show()","2478ea76":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.Subject)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Blues', background_color=\"red\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","bbaa7387":"# Count Plot\nplt.style.use(\"classic\")\nplt.figure(figsize=(10, 8))\nsns.countplot(df['Subject'], palette='RdBu')\nplt.xlabel(\"Subject\")\nplt.ylabel(\"Count\")\nplt.title(\"Olympiads Subject\")\nplt.xticks(rotation=45, fontsize=8)\nplt.show()","628b85b0":"import plotly.express as px\n\nfig = px.scatter(df, x=\"Year\", y=\"Status\", color=\"ShortName\", title=\"Moscow Educational Olympiads\")\nfig.show()","74be84f3":"fig = go.Figure();\nfig.add_trace(go.Scatter(x = df['ShortName'].head(10),y = df['Status'],\n                    mode='lines+markers',\n                    name='total_quarantine'));\n\nfig.update_traces(mode='lines+markers', marker_line_width=2, marker_size=10, marker_color='red');\n\nfig.update_layout(autosize=False, width=1000,height=700,title=\"Moscow Educational Olympiads\", legend_orientation=\"h\");\n\nfig.show();","4086f9f3":"# 3D Scatter Plot\nfig = px.scatter_3d(df, x='ShortName', y='Subject', z='Status',title=\"Moscow Educational Olympiads\", template=\"plotly_dark\")\nfig.show()","21a7a439":"from sklearn.preprocessing import LabelEncoder\n\n#fill in mean for floats\nfor c in df.columns:\n    if df[c].dtype=='float16' or  df[c].dtype=='float32' or  df[c].dtype=='float64':\n        df[c].fillna(df[c].mean())\n\n#fill in -999 for categoricals\ndf = df.fillna(-999)\n# Label Encoding\nfor f in df.columns:\n    if df[f].dtype=='object': \n        lbl = LabelEncoder()\n        lbl.fit(list(df[f].values))\n        df[f] = lbl.transform(list(df[f].values))\n        \nprint('Labelling done.')","57acb7fc":"df = pd.get_dummies(df)","c9bbb6e9":"fig = px.treemap(df, path=['Subject'], values='Class',\n                  color='Class', hover_data=['Subject'],title=\"Moscow Educational Olympiads\",\n                  color_continuous_scale='RdBu')\nfig.show()","95829445":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Mar\u00edlia Prata, not a DS. Stick around, I will be right back. @mpwolke' )","00d4f922":"#Label Encoding","9692ee20":"<iframe width=\"717\" height=\"538\" src=\"https:\/\/www.youtube.com\/embed\/CZd8sDquNYw\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>","b1d35d1d":"#Russian \"janitor\" saves Physics Bowl - The Big Bang theory","1f99b574":"![](https:\/\/images.slideplayer.com\/15\/4752275\/slides\/slide_3.jpg)slideplayer.com"}}