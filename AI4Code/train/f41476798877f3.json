{"cell_type":{"0edb3e91":"code","c04f27f4":"markdown"},"source":{"0edb3e91":"def extract_additional_features(pet_id, mode='train'):\n    \n    sentiment_filename = f'..\/input\/petfinder-adoption-prediction\/{mode}_sentiment\/{pet_id}.json'\n    try:\n        sentiment_file = pet_parser.open_json_file(sentiment_filename)\n        df_sentiment = pet_parser.parse_sentiment_file(sentiment_file)\n        df_sentiment['PetID'] = pet_id\n    except FileNotFoundError:\n        df_sentiment = []\n\n    dfs_metadata = []\n    for ind in range(1,200):\n        metadata_filename = '..\/input\/petfinder-adoption-prediction\/{}_metadata\/{}-{}.json'.format(mode, pet_id, ind)\n        try:\n            metadata_file = pet_parser.open_json_file(metadata_filename)\n            df_metadata = pet_parser.parse_metadata_file(metadata_file)\n            df_metadata['PetID'] = pet_id\n            dfs_metadata.append(df_metadata)\n        except FileNotFoundError:\n            break\n    if dfs_metadata:\n        dfs_metadata = pd.concat(dfs_metadata, ignore_index=True, sort=False)\n    dfs = [df_sentiment, dfs_metadata]\n    return dfs","c04f27f4":"# Efficient Sentiment and Metadata extractor\nSome of you (like me :D) might have forked [BaselineModeling](https:\/\/www.kaggle.com\/wrosinski\/baselinemodeling) or any other kernel which origins from that kernel. This kernel loads metadata\/sentiments by utilizing the class `PetFinderParser` through the function `extract_additional_features`. Depending on how many CPU cores available, this might take up to 30 min which is quite slow. Most of the slowdown is caused by a sorting function in `extract_additional_features`. I replaced it without sorting which gives a speed up by at least a factor of 5. Feel free to use it :). "}}