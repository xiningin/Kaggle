{"cell_type":{"17583e8c":"code","48a9b260":"code","e056b63c":"code","49c877c9":"code","906e5ca3":"code","ea17191f":"code","b32a662e":"code","887cb4a0":"code","ee097941":"code","248b213a":"code","a5922270":"code","de21ef1a":"code","88e768b5":"code","9c0972ec":"code","c8144e10":"code","33f982a7":"code","233ffaf5":"code","95313eaa":"code","c2387fe6":"code","7c9ea45b":"code","ae303eee":"code","84f07039":"code","ca397601":"code","5a4b9f64":"code","e171c22a":"code","fcfc40d2":"code","534ac615":"markdown","9a5d1dae":"markdown","90393fd6":"markdown","a53df168":"markdown","b1459c52":"markdown","45dbe317":"markdown","be6fb6f2":"markdown","15cf3cf6":"markdown","02e5656a":"markdown","7f950f96":"markdown","7078e5f8":"markdown","706d6182":"markdown"},"source":{"17583e8c":"import numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set(color_codes = True)\n# sns.set_palette(\"deep\")\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')","48a9b260":"train = pd.read_csv('..\/input\/uberdrives\/My Uber Drives - 2016.csv')\ntrain.head()","e056b63c":"print(\"No. of rows in the data    :\",train.shape[0])\nprint(\"No. of columns in the data :\",train.shape[1])","49c877c9":"train.info()","906e5ca3":"train.describe().T","ea17191f":"sns.heatmap(train.isnull(),cmap = 'viridis')\nplt.show()\nprint(train.isnull().sum())\nprint('')\nprint('Percentage of Null Value in Purpose column :',train['PURPOSE*'].isnull().sum()\/len(train['PURPOSE*'])*100,'%')","b32a662e":"train.drop('PURPOSE*',axis = 1, inplace = True)","887cb4a0":"train.dropna(inplace=True)","ee097941":"train['Start'] = pd.to_datetime(train['START_DATE*'])\ntrain['End'] = pd.to_datetime(train['END_DATE*'])","248b213a":"dmap = {0:'Mon',1:'Tue',2:'Wed',3:'Thu',4:'Fri',5:'Sat',6:'Sun'}\n\ntrain['s_month'] = train['Start'].apply(lambda x : x.month)\ntrain['s_day'] = train['Start'].apply(lambda x : x.dayofweek)\n\n\ntrain['s_day'] = train['s_day'].map(dmap)","a5922270":"train.drop('START_DATE*',axis = 1,inplace = True)\ntrain.drop('END_DATE*',axis = 1,inplace = True)","de21ef1a":"train.head(10)","88e768b5":"train['Time_travelled'] = train['End'] - train['Start'] \ntrain['Time_travelled'] = train['Time_travelled'].apply(lambda x: x.days\/(24*60) +x.seconds\/60)","9c0972ec":"train.head()","c8144e10":"train['Time_travelled'].describe()","33f982a7":"plt.figure(figsize = (40,10))\nsns.distplot(train['Time_travelled']);","233ffaf5":"sns.boxplot(train['Time_travelled'])","95313eaa":"plt.figure(figsize=(30,15))\nsns.distplot(train['MILES*']);","c2387fe6":"print(train['START*'].nunique())\nprint(train['STOP*'].nunique())","7c9ea45b":"print(train['MILES*'].min())\nprint(train['MILES*'].max())\nprint(train['MILES*'].sort_values())","ae303eee":"# plt.figure(figsize=(15,30))\nsns.stripplot(train['CATEGORY*'],train['MILES*'],jitter = True)","84f07039":"plt.figure(figsize=(30,30))\nsns.boxplot(train['CATEGORY*'],train['MILES*'])","ca397601":"# train = (train[train['MILES*'] != 310.3])","5a4b9f64":"print(train.shape)\ntrain","e171c22a":"plt.figure(figsize=(30,30))\nsns.boxplot(train['CATEGORY*'],train['MILES*'])\nplt.show()\n\nplt.figure(figsize=(30,30))\nsns.boxplot(train['MILES*'])\nplt.show()\n","fcfc40d2":"# plt.figure(figsize=(40,10))\n# sns.stripplot(train['START*'],train['MILES*'],jitter = True);","534ac615":"# **Importing Libraries**","9a5d1dae":"# **EDA(Null Values and Dropping Columns)**","90393fd6":"**Dropping rest of the null Values**","a53df168":"# **EDA : Start And Stop Time Analysis**","b1459c52":"# **Import Dataset**","45dbe317":"**Convering Start and Stop Time to Date Time Object**","be6fb6f2":"--------------------------","15cf3cf6":"Since 43% of values is null we can drop that column","02e5656a":"**Checking for Null Values in data**","7f950f96":"**Creating a new Column for Time Travelled**","7078e5f8":"**Droping Purpose Column**","706d6182":"*Only miles is numeric column"}}