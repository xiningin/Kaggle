{"cell_type":{"154fe234":"code","b99592e5":"code","bbebbbf7":"code","b2ac49bd":"code","d8edfb57":"code","7c1a0abe":"code","be798392":"code","fd3f413d":"code","ae0ce347":"code","52d2508f":"code","4ac7db32":"code","bdf98b83":"code","d1790872":"code","e187822e":"code","0940a197":"code","5dec7a66":"code","0e38d484":"code","0da3972a":"code","b680cb9d":"code","7d10abf5":"code","1435a4b0":"code","e8c2a7f3":"code","5e64e15e":"code","11936cdc":"code","48ccf803":"code","ea47ec21":"code","8e456c49":"code","42ebdf84":"code","4cbf49bc":"code","210935cd":"code","ee9df1c7":"code","ee08f137":"code","d356283c":"code","df0e7a97":"code","c09f92c6":"code","b36cdd18":"code","8ee1733e":"code","3354eddf":"code","7895a923":"code","5f504ffc":"code","2b9aa7c9":"code","208d2574":"code","2440a743":"code","877766cc":"code","ca0c11f5":"code","5696fd36":"code","00556926":"code","4d8ae847":"code","b6582a22":"code","262feaee":"code","54d88f4b":"code","ede11fe9":"code","a15c27af":"code","a948c237":"code","f3509592":"code","19518bdd":"code","3dce3f55":"code","50033336":"code","9f5672f3":"code","fb5304fe":"code","d4782d30":"code","9dd82339":"code","5316cba9":"code","48194401":"code","a90263b1":"code","5d35138b":"code","3c40c56a":"code","1faf3df2":"code","dfd0820a":"code","c0cf21a2":"code","b1b50d3f":"code","12f3cf97":"code","0515c0ed":"code","cc0a39aa":"code","491bb4a3":"code","5c6304a0":"code","652a4ae3":"code","c2f0d26b":"code","a33f60f3":"code","e1bfaadb":"code","51e1b8d8":"code","b2845fa2":"code","a133f476":"code","bc001d65":"code","544ceab6":"code","ccf10005":"code","bc0a1b67":"code","acf78890":"code","6b0d97a6":"code","8b3ac287":"code","2f56534b":"code","113170c2":"code","c75c7fe5":"code","59ebc2c5":"code","5b064242":"code","7efb6529":"code","5aca8873":"code","46deaa57":"code","ed34b315":"code","4e154a6e":"code","35cd3ecd":"code","a26b49c1":"code","8306af38":"code","b506ac35":"code","21560c6f":"code","28a2d2b9":"code","62e0eaa5":"markdown","6651da28":"markdown","3b754925":"markdown","01783eb4":"markdown","fa5afcc2":"markdown","da134e6f":"markdown","5573db0c":"markdown","a311adc4":"markdown","41b8f8e0":"markdown","f8926699":"markdown","9cfcdb83":"markdown","2e6a6dd1":"markdown","129bae0a":"markdown","5820bc18":"markdown"},"source":{"154fe234":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","b99592e5":"import pandas as pd\ndf = pd.read_csv(\"..\/input\/mnmnmnmn\/EXL_EQ_2020_Train_datasets.csv\")\ndf2 = df.copy()","bbebbbf7":"df.drop('var30',axis=1,inplace=True)\ndf.drop('cust_id',axis=1,inplace=True)\ndf2.drop('var30',axis=1,inplace=True)\ndf2.drop('cust_id',axis=1,inplace=True)","b2ac49bd":"def iqr(v):\n    return np.subtract(*np.percentile(df[v],[75,25]))\ndef iqr2(v):\n    return np.subtract(*np.percentile(df2[v],[75,25]))","d8edfb57":"def appiqr(v):\n    return df.loc[(df[v]<np.percentile(df[v],75)+2*iqr(v))&(df[v]>np.percentile(df[v],25)-2*iqr(v))]\ndef appiqr2(v):\n    return df2.loc[(df2[v]<np.percentile(df2[v],75)+2*iqr2(v))&(df2[v]>np.percentile(df2[v],25)-2*iqr2(v))]","7c1a0abe":"r=[]\nl =[1,2,4,5,7,8,9,10,11,12,13,14,15,16,21,22,23,24,25,26,27,28,29,31]\nfor i in l:\n    v = 'var'+str(i)\n    if(appiqr(v).shape[0]>0):\n        print(v,appiqr(v).shape[0])","be798392":"df['var3'] = df['var3'].astype('category')\ndf['var6'] = df['var6'].astype('category')\ndf['var16'] = df['var16'].astype('category')\ndf['var32'] = df['var32'].astype('category')\ndf['var33'] = df['var33'].astype('category')\ndf['var34'] = df['var34'].astype('category')\ndf['var35'] = df['var35'].astype('category')\ndf['var40'] = df['var40'].astype('category')\ndf['self_service_platform'] = df['self_service_platform'].astype('category')","fd3f413d":"df2['var3'] = df2['var3'].astype('category')\ndf2['var6'] = df2['var6'].astype('category')\ndf2['var16'] = df2['var16'].astype('category')\ndf2['var32'] = df2['var32'].astype('category')\ndf2['var33'] = df2['var33'].astype('category')\ndf2['var34'] = df2['var34'].astype('category')\ndf2['var35'] = df2['var35'].astype('category')\ndf2['var40'] = df2['var40'].astype('category')\ndf2['self_service_platform'] = df2['self_service_platform'].astype('category')","ae0ce347":"# print(df.dtypes)","52d2508f":"df.drop('var38',axis=1, inplace=True)\ndf2.drop('var38',axis=1, inplace=True)","4ac7db32":"df.head(1)","bdf98b83":"#var24,var36,var37,\n#var39: prediction\n#var37: prediction\n#var24: considering continuous","d1790872":"appiqr2('var24').shape[0]","e187822e":"df['var24'] = df['var24'].fillna(df['var24'].mean())\ndf2['var24'] = df2['var24'].fillna(df2['var24'].mean())","0940a197":"df['var39']=df['var39'].fillna('Single Housing')\ndf2['var39']=df2['var39'].fillna('Single Housing')","5dec7a66":"df['var39'] = df['var39'].astype('category')\ndf2['var39'] = df2['var39'].astype('category')","0e38d484":"df = pd.get_dummies(df,prefix=['var3'],columns=['var3'])\ndf = pd.get_dummies(df,prefix=['var6'],columns=['var6'])\ndf = pd.get_dummies(df,prefix=['var16'],columns=['var16'])\ndf = pd.get_dummies(df,prefix=['var32'],columns=['var32'])\ndf = pd.get_dummies(df,prefix=['var33'],columns=['var33'])\ndf = pd.get_dummies(df,prefix=['var34'],columns=['var34'])\ndf = pd.get_dummies(df,prefix=['var35'],columns=['var35'])\ndf = pd.get_dummies(df,prefix=['var39'],columns=['var39'])\ndf = pd.get_dummies(df,prefix=['var40'],columns=['var40'])\ndf = pd.get_dummies(df,prefix=['self_service_platform'],columns=['self_service_platform'])\n\n# df2 = pd.get_dummies(df2,prefix=['var3'],columns=['var3'])\n# df2 = pd.get_dummies(df2,prefix=['var6'],columns=['var6'])\n# df2 = pd.get_dummies(df2,prefix=['var16'],columns=['var16'])\n# df2 = pd.get_dummies(df2,prefix=['var32'],columns=['var32'])\n# df2 = pd.get_dummies(df2,prefix=['var33'],columns=['var33'])\n# df2 = pd.get_dummies(df2,prefix=['var34'],columns=['var34'])\n# df2 = pd.get_dummies(df2,prefix=['var35'],columns=['var35'])\n# df2 = pd.get_dummies(df2,prefix=['var39'],columns=['var39'])\n# df2 = pd.get_dummies(df2,prefix=['var40'],columns=['var40'])\n# df2 = pd.get_dummies(df2,prefix=['self_service_platform'],columns=['self_service_platform'])","0da3972a":"df.columns","b680cb9d":"import xgboost as xgb","7d10abf5":"# df['var36']","1435a4b0":"df.columns","e8c2a7f3":"df1 = df.dropna()\n#df1 = pd.get_dummies(df1,prefix=['var36'],columns=['var36'])","5e64e15e":"df1.columns","11936cdc":"df1 = df1.drop('var36',axis=1)","48ccf803":"from sklearn.preprocessing import LabelEncoder\ndf1['var37'] = LabelEncoder().fit_transform(df1['var37'])","ea47ec21":"# df.columns","8e456c49":"# j = 0\n# for i in df1.dtypes:\n#     print(df1.dtypes.index[j],i)\n#     j+=1","42ebdf84":"# for i in df1.dtypes:\n#     print(i)","4cbf49bc":"df1.columns","210935cd":"X = df1[['var1', 'var2', 'var4', 'var5', 'var7', 'var8', 'var9',\n       'var10', 'var11', 'var12', 'var13', 'var14', 'var15', 'var21', 'var22',\n       'var23', 'var24', 'var25', 'var26', 'var27', 'var28', 'var29', 'var31',\n       'var3_0', 'var3_1', 'var3_2', 'var3_3', 'var3_4', 'var6_0',\n       'var6_1', 'var6_2', 'var6_3', 'var6_4', 'var6_5', 'var6_6', 'var6_7',\n       'var6_8', 'var6_9', 'var16_0', 'var16_1', 'var32_0', 'var32_1',\n       'var33_entertainment_channel1', 'var33_entertainment_channel2',\n       'var33_movie_channel1', 'var33_news_channel1', 'var33_news_channel2',\n       'var33_other', 'var34_Active', 'var34_Cancelled', 'var34_Inactive',\n       'var34_Never', 'var34_Pending', 'var35_CreditCard',\n       'var35_Electronic Transfer', 'var35_Standard', 'var39_Commercial',\n       'var39_Exclude mapping', 'var39_Multi Housing', 'var39_Other',\n       'var39_Single Housing', 'var40_N', 'var40_Y',\n       'self_service_platform_Desktop', 'self_service_platform_Mobile App',\n       'self_service_platform_Mobile Web', 'self_service_platform_STB']]\ny = df1['var37']","ee9df1c7":"from sklearn.model_selection import train_test_split\nX_train, X_test, Y_train, Y_test = train_test_split(X, y, test_size=0.2)","ee08f137":"D_train = xgb.DMatrix(X_train, label=Y_train)\nD_test = xgb.DMatrix(X_test, label=Y_test)","d356283c":"param = {\n    'eta': 0.3, \n    'max_depth': 3,  \n    'objective': 'multi:softprob',  \n    'num_class': 3} \n\nsteps = 20  # The number of training iterations","df0e7a97":"model = xgb.train(param, D_train, steps)","c09f92c6":"import numpy as np\nfrom sklearn.metrics import precision_score, recall_score, accuracy_score\n\npreds = model.predict(D_test)\nbest_preds = np.asarray([np.argmax(line) for line in preds])\n\nprint(\"Precision = {}\".format(precision_score(Y_test, best_preds, average='macro')))\nprint(\"Recall = {}\".format(recall_score(Y_test, best_preds, average='macro')))\nprint(\"Accuracy = {}\".format(accuracy_score(Y_test, best_preds)))","b36cdd18":"df.loc[df['var37'].isna()]","8ee1733e":"ct = df.loc[df['var37'].isna()][X.columns]\nD_test = xgb.DMatrix(ct, label=Y_test)\npreds = model.predict(D_test)\nbest_preds = np.asarray([np.argmax(line) for line in preds])","3354eddf":"# df.var37.iloc[]\nind = np.array(df.loc[df['var37'].isna()].index)","7895a923":"\ndf.var37.iloc[ind]","5f504ffc":"k = []\nfor i in range(len(best_preds)):\n    if(i==0):\n        k.append('N')\n    else:\n        k.append('Y')","2b9aa7c9":"# df.var37.iloc[df.loc[df['var37'].isna().index] \ndf.var37.iloc[df.loc[df['var37'].isna()].index] = np.array(k)","208d2574":"df['var37'].value_counts()","2440a743":"df = pd.get_dummies(df,prefix=['var37'],columns=['var37'])","877766cc":"# for i in range(len(df.dtypes)):\n#     print(df.dtypes.index[i],df.dtypes[i])","ca0c11f5":"df['var36']=df['var36'].fillna('video\/internet')","5696fd36":"def isvideo(arr):\n    if \"video\" in arr:\n        return 1\n    else:\n        return 0\ndef isinternet(arr):\n    if \"internet\" in arr:\n        return 1\n    else:\n        return 0\ndef isvoice(arr):\n    if \"voice\" in arr:\n        return 1\n    else:\n        return 0\ndef ishomesecurity(arr):\n    if 'homesecurity' in arr:\n        return 1\n    else:\n        return 0","00556926":"df['var36'] = df['var36'].str.lower()","4d8ae847":"df['video'] = df['var36'].apply(lambda x: isvideo(str(x).split('\/')))\ndf['internet'] = df['var36'].apply(lambda x: isinternet(str(x).split('\/')))\ndf['voice'] = df['var36'].apply(lambda x: isvoice(str(x).split('\/')))\ndf['homesecurity'] = df['var36'].apply(lambda x: ishomesecurity(str(x).split('\/')))","b6582a22":"df = df.drop('var36',axis=1)","262feaee":"# for i in range(len(df.dtypes)):\n#     print(df.dtypes.index[i],df.dtypes[i])","54d88f4b":"# for i in df.isnull().sum():\n#     if(i>0):\n#         break\n#         print(1)","ede11fe9":"X = df[['var1', 'var2', 'var4', 'var5', 'var7', 'var8', 'var9',\n       'var10', 'var11', 'var12', 'var13', 'var14', 'var15', 'var21', 'var22',\n       'var23', 'var24', 'var25', 'var26', 'var27', 'var28', 'var29', 'var31',\n       'var3_0', 'var3_1', 'var3_2', 'var3_3', 'var3_4', 'var6_0', 'var6_1',\n       'var6_2', 'var6_3', 'var6_4', 'var6_5', 'var6_6', 'var6_7', 'var6_8',\n       'var6_9', 'var16_0', 'var16_1', 'var32_0', 'var32_1',\n       'var33_entertainment_channel1', 'var33_entertainment_channel2',\n       'var33_movie_channel1', 'var33_news_channel1', 'var33_news_channel2',\n       'var33_other', 'var34_Active', 'var34_Cancelled', 'var34_Inactive',\n       'var34_Never', 'var34_Pending', 'var35_CreditCard',\n       'var35_Electronic Transfer', 'var35_Standard', 'var39_Commercial',\n       'var39_Exclude mapping', 'var39_Multi Housing', 'var39_Other',\n       'var39_Single Housing', 'var40_N', 'var40_Y',\n       'var37_N', 'var37_Y', 'video', 'internet', 'voice', 'homesecurity']]","a15c27af":"df2.columns","a948c237":"g = df2.copy()","f3509592":"# from sklearn.preprocessing import MultiLabelBinarizer\n y = g['self_service_platform']\n# mlb = MultiLabelBinarizer()\n# #y = mlb.fit_transform(y)","19518bdd":"def mlb(s):\n    if s=='Desktop':\n        return 0\n    if s=='Mobile App':\n        return 1\n    if s=='Mobile Web':\n        return 2\n    if s=='STB':\n        return 3","3dce3f55":"y = y.apply(lambda x: mlb(str(x)))","50033336":"X_train1, X_test1, y_train1, y_test1 = train_test_split(X, y, random_state=42, stratify=y)","9f5672f3":"import xgboost as xgb\ndtrain = xgb.DMatrix(data=X_train1, label=y_train1)\ndtest = xgb.DMatrix(data=X_test1)","fb5304fe":"from sklearn.metrics import classification_report\nparams = {\n    'max_depth': 7,\n    'objective': 'multi:softmax',  # error evaluation for multiclass training\n    'num_class': 4,\n    'n_gpus': 0\n}\nbst = xgb.train(params, dtrain)\npred = bst.predict(dtest)\nprint(classification_report(y_test1, pred))","d4782d30":"p = pd.read_csv('..\/input\/mamamama\/EXL_EQ_2020_Test_Datasets.csv')","9dd82339":"p.drop(['cust_id','var38','var30'],axis=1,inplace =True)","5316cba9":"p['var3'] = p['var3'].astype('category')\np['var6'] = p['var6'].astype('category')\np['var16'] = p['var16'].astype('category')\np['var32'] = p['var32'].astype('category')\np['var33'] = p['var33'].astype('category')\np['var34'] = p['var34'].astype('category')\np['var35'] = p['var35'].astype('category')\np['var37'] = p['var37'].astype('category')\np['var39'] = p['var39'].astype('category')\np['var40'] = p['var40'].astype('category')","48194401":"p = pd.get_dummies(p,prefix=['var3'],columns=['var3'])\np = pd.get_dummies(p,prefix=['var6'],columns=['var6'])\np = pd.get_dummies(p,prefix=['var16'],columns=['var16'])\np = pd.get_dummies(p,prefix=['var32'],columns=['var32'])\np = pd.get_dummies(p,prefix=['var33'],columns=['var33'])\np = pd.get_dummies(p,prefix=['var34'],columns=['var34'])\np = pd.get_dummies(p,prefix=['var35'],columns=['var35'])\np = pd.get_dummies(p,prefix=['var39'],columns=['var39'])\np = pd.get_dummies(p,prefix=['var40'],columns=['var40'])\np = pd.get_dummies(p,prefix=['var37'],columns=['var37'])","a90263b1":"p['video'] = p['var36'].apply(lambda x: isvideo(str(x).split('\/')))\np['internet'] = p['var36'].apply(lambda x: isinternet(str(x).split('\/')))\np['voice'] = p['var36'].apply(lambda x: isvoice(str(x).split('\/')))\np['homesecurity'] = p['var36'].apply(lambda x: ishomesecurity(str(x).split('\/')))","5d35138b":"p = p.drop('var36',axis=1)","3c40c56a":"p.columns","1faf3df2":"dtest1 = xgb.DMatrix(data=p)\npred = bst.predict(dtest1)","dfd0820a":"pred = pd.DataFrame(pred)\npred[0] = pred[0]+1\npred.to_excel('pushkin.xlsx')","c0cf21a2":"pred[0].value_counts()","b1b50d3f":"df","12f3cf97":"#sum(df.isnull().sum())","0515c0ed":"cont_l = [1,2,4,5,7,8,9,10,11,12,13,14,15,16,21,22,23,24,25,26,27,28,29,31]","cc0a39aa":"contl = []\nfor i in cont_l:\n    contl.append('var'+str(i))","491bb4a3":"import seaborn as sns\nimport matplotlib.pyplot as plt \nplt.figure(figsize=(20,10))\nsns.heatmap(df2[contl].corr(),annot=True)","5c6304a0":"df2","652a4ae3":"plt.figure(figsize=(20,10))\nd = sns.distplot(df2['var1']\/365)\nplt.xticks(np.arange(min(df2['var1']\/365), max(df2['var1']\/365)+1, 3))","c2f0d26b":"g = ['var3', 'var6','var16', 'var32', 'var33', 'var34', 'var35','var36', 'var37','var39', 'var40']","a33f60f3":"import pandas as pd\nv = pd.read_csv(\"..\/input\/variables101\/EXL_EQ_2020_Train_datasets.csv\")\ndictv = {}\nfor i in v.index:\n    dictv[v['Feature'][i]]=v['Description'][i]","e1bfaadb":"g.append('self_service_platform')","51e1b8d8":"def box(i):\n    for j in g:\n        plt.rcParams.update({'font.size': 10})\n        plt.figure(figsize=(15,6))\n        plt.xticks(rotation=90)\n        ax = sns.boxplot(x=j, y=i,data=df2)\n        plt.title(i+'\/'+j)\n        plt.xlabel(dictv[j])\n        plt.ylabel(dictv[i])","b2845fa2":"box('var1')","a133f476":"box('var2')","bc001d65":"box('var4')","544ceab6":"box('var5')","ccf10005":"box('var7')","bc0a1b67":"box('var8')","acf78890":"box('var9')","6b0d97a6":"box('var10')","8b3ac287":"box('var11')","2f56534b":"box('var12')","113170c2":"box('var13')","c75c7fe5":"box('var14')","59ebc2c5":"box('var15')","5b064242":"contl = ['var1',\n 'var2',\n 'var4',\n 'var5',\n 'var7',\n 'var8',\n 'var9',\n 'var10',\n 'var11',\n 'var12',\n 'var13',\n 'var14',\n 'var15',\n 'var21',\n 'var22',\n 'var23',\n 'var24',\n 'var25',\n 'var26',\n 'var27',\n 'var28',\n 'var29',\n 'var31']","7efb6529":"box('var21')","5aca8873":"box('var22')","46deaa57":"box('var23')","ed34b315":"box('var24')","4e154a6e":"box('var25')","35cd3ecd":"box('var26')","a26b49c1":"box('var27')","8306af38":"box('var28')","b506ac35":"box('var29')","21560c6f":"box('var31')","28a2d2b9":"v","62e0eaa5":"1. More the number of wireless equipment, more the tenure\n2. Higher the social position, higher the tenure and the increase is approximately exponential.\n3. Customer subscribed for spanish video have much higher tenure than others.\n4. Tenure is more if there is an active offer thus mostly number of inactive offers are from new members.\n5. t","6651da28":"1. Family income is an important point. Tenure, total duration of news channel, number of tickets,%trades delinquent, digital equipments owned by the customer factors depend on the income.\n2. ","3b754925":"# dropping var38","01783eb4":"# Data Analysis","fa5afcc2":"# var36, var37 and var39 are left","da134e6f":"# Correlation between continuous columns","5573db0c":"# converting categorical to columns","a311adc4":"> continuous = 1,2,4,57,8,9,10,11,12,13,14,15,16,21,22,23,24,25,2627,28,29,31","41b8f8e0":"# Filling 37 by making a model ","f8926699":"This gives us the following conclusions\n1. Account tenure depends on the wealth conditions of the family and tenure for which video product is subscribed.\n2. Internet connect status = 1 is related to the number of ticket raised by customer and number of on demand videos watched\n3. Number of videos watched is correlated to video tickets raised\n4. Number of emails opened depends on the number of times internet connect status is 1.\n5. Number of tickets raised is related to the number of times the email is opened\n6. count of emails opened is corelated to the bumber of nigital devices owned by the customer\n7. More the Median home value in the area of housingunit, more the total duration of news channel watched \n8. More the Median home value in the area of housing unit, more the tenure for which video product is subscribed\n9. More the Median home value in the area of housing unit more tickets raised\n10. More the Median home value in the area of housing unit more the % trades delinquent by 90 or more days\n11. More the likelihood to use credit card, more the tenure for which video product is subscribed.\n12. more No. of digital video recorders, more the no. of tickets raised related to video product.\n13. more the tenure for which video is purchased, more the % of trades delinquent.\n14. more the likelihood of using a credit card, more the % trades delinquent\n15. More the family income, more the likelihood of using a credit card.","9cfcdb83":"# categorical final: = var3, var6,var16, var32, var33, var34, var35,var36, var37 var 39, var40","2e6a6dd1":"# filling var 24","129bae0a":"# filling 39","5820bc18":"# Variation of continuous variables with categorical"}}