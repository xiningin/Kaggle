{"cell_type":{"39c22a64":"code","33233d2d":"code","aee33f23":"code","b2bcec35":"code","c9955f35":"code","9206d71e":"markdown","893203a9":"markdown","fa2fb1ed":"markdown"},"source":{"39c22a64":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        with open(os.path.join(dirname, filename)) as f:\n            line_count = 0\n            id_set = set()\n            for l in f.readlines():\n                line_count += 1\n                if filename == \"CISI.REL\":\n                    id_set.add(l.lstrip(\" \").split(\" \")[0])\n                elif l.startswith(\".I \"):\n                    id_set.add(l.split(\" \")[1].strip())\n            print(f\"{filename} : {len(id_set)} items, over {line_count} lines.\")\n\n# Any results you write to the current directory are saved as output.","33233d2d":"with open('\/kaggle\/input\/cisi-a-dataset-for-information-retrieval\/CISI.ALL') as f:\n    lines = \"\"\n    for l in f.readlines():\n        lines += \"\\n\" + l.strip() if l.startswith(\".\") else \" \" + l.strip()\n    lines = lines.lstrip(\"\\n\").split(\"\\n\")\n    \n# print n lines\nn = 5\nfor l in lines[:n]:\n    print(l)","aee33f23":"doc_set = {}\ndoc_id = \"\"\ndoc_text = \"\"\nfor l in lines:\n    if l.startswith(\".I\"):\n        doc_id = l.split(\" \")[1].strip()\n    elif l.startswith(\".X\"):\n        doc_set[doc_id] = doc_text.lstrip(\" \")\n        doc_id = \"\"\n        doc_text = \"\"\n    else:\n        doc_text += l.strip()[3:] + \" \" # The first 3 characters of a line can be ignored.\n\n# Print something to see the dictionary structure, etc.\nprint(f\"Number of documents = {len(doc_set)}\" + \".\\n\")\nprint(doc_set[\"3\"]) # note that the dictionary indexes are strings, not numbers. \n        ","b2bcec35":"with open('\/kaggle\/input\/cisi-a-dataset-for-information-retrieval\/CISI.QRY') as f:\n    lines = \"\"\n    for l in f.readlines():\n        lines += \"\\n\" + l.strip() if l.startswith(\".\") else \" \" + l.strip()\n    lines = lines.lstrip(\"\\n\").split(\"\\n\")\n    \nqry_set = {}\nqry_id = \"\"\nfor l in merged.split(\"\\n\"):\n    if l.startswith(\".I\"):\n        qry_id = l.split(\" \")[1].strip()\n    elif l.startswith(\".W\"):\n        qry_set[qry_id] = l.strip()[3:]\n        qry_id = \"\"\n    \n# Print something to see the dictionary structure, etc.\nprint(f\"Number of queries = {len(qry_set)}\" + \".\\n\")\nprint(qry_set[\"3\"]) # note that the dictionary indexes are strings, not numbers. ","c9955f35":"rel_set = {}\nwith open('\/kaggle\/input\/cisi-a-dataset-for-information-retrieval\/CISI.REL') as f:\n    for l in f.readlines():\n        qry_id = l.lstrip(\" \").strip(\"\\n\").split(\"\\t\")[0].split(\" \")[0]\n        doc_id = l.lstrip(\" \").strip(\"\\n\").split(\"\\t\")[0].split(\" \")[-1]\n        if qry_id in rel_set:\n            rel_set[qry_id].append(doc_id)\n        else:\n            rel_set[qry_id] = []\n            rel_set[qry_id].append(doc_id)\n        if qry_id == \"7\":\n            print(l.strip(\"\\n\"))\n    \n# Print something to see the dictionary structure, etc.\nprint(f\"\\nNumber of mappings = {len(rel_set)}\" + \".\\n\")\nprint(rel_set[\"7\"]) # note that the dictionary indexes are strings, not numbers. ","9206d71e":"## Repeat with QUERY.","893203a9":"## Do the same with query => document MAPPING.","fa2fb1ed":"## Put each DOCUMENT into a dictionary."}}