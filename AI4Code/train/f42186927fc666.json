{"cell_type":{"a2e3b266":"code","7976bf12":"code","fd73f16c":"code","ffdca252":"code","968d6a0c":"code","29b4edce":"code","1e41dcb0":"code","e98d16aa":"code","303337a6":"code","e5a57302":"code","5072274e":"code","60e6db71":"code","ca578447":"code","4522fe3b":"code","81931c00":"code","3c8d4bc8":"code","8ccd6800":"code","bff10ffb":"code","b2c80fb3":"code","7e1353e7":"code","dce54829":"code","f1fd6def":"code","8f6b89fc":"code","fa4359b0":"markdown","ff94eac3":"markdown","70f4436a":"markdown","15b97546":"markdown","29d47e7f":"markdown","6b18c414":"markdown","dcb078af":"markdown","969b729b":"markdown","74e238eb":"markdown","eebe5bdf":"markdown","417a87c1":"markdown","207001ae":"markdown","78652b55":"markdown","30d01a3c":"markdown","6ae8d3b1":"markdown","dbe4e326":"markdown","092fbc19":"markdown","65134a53":"markdown","30ed05ff":"markdown","c5fdf180":"markdown","9b015863":"markdown","455f0503":"markdown","1b256c57":"markdown"},"source":{"a2e3b266":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline\nsns.set()","7976bf12":"df_train = pd.read_csv(\"..\/input\/train_set.csv\", index_col=\"Id\", low_memory=False)\ndf_test = pd.read_csv(\"..\/input\/test_set.csv\", index_col=\"Id\", low_memory=False)","fd73f16c":"# \u9069\u5207\u306a\u578b\u306b\u5909\u63db\ndf_train.GIS_LAST_MOD_DTTM = df_train.GIS_LAST_MOD_DTTM.astype(\"str\")\ndf_train.USECODE = df_train.USECODE.astype(\"str\")\ndf_train.CMPLX_NUM = df_train.CMPLX_NUM.astype(\"str\")\ndf_train.ZIPCODE = df_train.ZIPCODE.astype(\"str\")\ndf_train.CENSUS_TRACT = df_train.CENSUS_TRACT.astype(\"str\")\ndf_train.BLDG_NUM = df_train.BLDG_NUM.astype(\"str\")\n\n# \u6642\u9593\u9818\u57df\u306b\u76f4\u3059\ndf_train.SALEDATE = pd.to_datetime(df_train.SALEDATE)\ndf_train[\"SALEDATE_YEAR\"] = df_train.SALEDATE.dt.year\ndf_train[\"SALEDATE_month\"] = df_train.SALEDATE.dt.month\n\n# \u524d\u534a\u306e\u307f\u53d6\u308a\u51fa\u3059\ndf_train.NATIONALGRID = df_train.NATIONALGRID[df_train.NATIONALGRID.notnull()].apply(lambda x : x[:-12])\n\n# train\u30c7\u30fc\u30bf\u306e\u578b\u3092\u53d6\u5f97\nlist_dtypes = list(df_train.dtypes.unique())\nprint(list_dtypes)\n\n# \u4e0d\u5fc5\u8981\u306a\u5909\u6570\u3092\u524a\u9664\ndel_col = [\"X\", \"Y\", \"CITY\", \"STATE\", \"CMPLX_NUM\", \"FULLADDRESS\",\\\n           \"SQUARE\", \"CENSUS_BLOCK\"] # X, Y\u306f\u307b\u3068\u3093\u3069Long, Lati\u3068\u307b\u307c\u540c\u3058\u3001City, STATE\u306f\u540c\u3058\u5185\u5bb9\ndf_train.drop(del_col, axis=1, inplace=True)\ndf_test.drop(del_col, axis=1, inplace=True)\n\n\n# \u6570\u5024\u578b\u3068datetime\u578b\u306e\u307f\u3092\u96c6\u3081\u308b\ndf_train_num = df_train.select_dtypes(include=[\"float64\", \"int64\"])\n# \u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3092\u96c6\u3081\u308b\ndf_train_cat = df_train.select_dtypes(include=[\"object\"])","ffdca252":"th_price = 2.4e+6\nfig, ax = plt.subplots(1,2, figsize=(15,4))\n\ndf_train_num.PRICE[df_train_num.PRICE < th_price].hist(bins=50, ax=ax[0])\nax[0].set_title(\"Price (Low Threthold)\", fontsize=15)\n\ndf_train_num.PRICE[df_train_num.PRICE >= th_price].hist(bins=50, ax=ax[1])\nax[1].set_title(\"Price (High Threthold)\", fontsize=15);","968d6a0c":"# \u4e0b\u5c64\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u53d6\u5f97\nidx_low = df_train.PRICE.index[df_train.PRICE < th_price]\ndf_train_num_low = df_train.iloc[idx_low, :]","29b4edce":"# \u6570\u5024\u578b\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\ndf_train_num_low.hist(figsize=(20, 20), bins=30, xlabelsize=10, ylabelsize=10);","1e41dcb0":"# PRICE\u3068\u4ed6\u306e\u5909\u6570\u306e\u95a2\u4fc2\nfor i in range(0, len(df_train_num.columns), 4):\n    sns.pairplot(height=5, data=df_train_num_low, x_vars=df_train_num.columns[i:i+4], y_vars=[\"PRICE\"])","e98d16aa":"df_train_cat_low = df_train_cat.iloc[idx_low, :]\ndf_train_cat_low.nunique().sort_values()","303337a6":"# \u30e6\u30cb\u30fc\u30af\u306a\u8981\u7d20\u306e\u6570\ndf_train_cat_count = df_train_cat_low.nunique()\n\nlist_cat = df_train_cat_count.index[df_train_cat_count < 25].values\nprint(\"\u30e6\u30cb\u30fc\u30af\u306a\u8981\u7d20\u304c\u591a\u3059\u304e\u308b\u5909\u6570 {0}\".format(df_train_cat_count.index[df_train_cat_count > 25].values))","e5a57302":"# \u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\nfig, axes = plt.subplots(round(len(list_cat) \/ 3), 3, figsize=(20, 40))\n\nfor i, ax in enumerate(fig.axes):\n    if i < len(list_cat):\n        ax.set_xticklabels(ax.xaxis.get_majorticklabels(), rotation=90, fontsize=20)\n        ax.set_xlabel(ax.get_xlabel, fontsize=20)\n        sns.countplot(x=list_cat[i], alpha=0.7, data=df_train_cat_low, ax=ax)\n\nfig.tight_layout()","5072274e":"df_train.loc[:,[\"GIS_LAST_MOD_DTTM\", \"SOURCE\"]].drop_duplicates()","60e6db71":"fig, axes = plt.subplots(len(list_cat), 1, figsize=(14, 60))\n\nfor i, ax in enumerate(fig.axes):\n    if i < len(list_cat):\n        sns.boxplot(x=list_cat[i], y=df_train_num_low.PRICE, data=df_train_cat_low, ax=ax)\n        \nfig.tight_layout()","ca578447":"# \u5916\u308c\u5024\u306e\u9664\u53bb\ndf_train_num_fil = df_train_num.copy()\n\ndf_train_num_fil.drop(df_train_num_fil.index[df_train_num_fil.YR_RMDL < 250], axis=0, inplace=True)\ndf_train_num_fil.drop(df_train_num_fil.index[df_train_num_fil.STORIES > 10], axis=0, inplace=True)\ndf_train_num_fil.drop(df_train_num_fil.index[df_train_num_fil.KITCHENS > 10 ], axis=0, inplace=True)\ndf_train_num_fil.drop(df_train_num_fil.index[(df_train_num_fil.LANDAREA == 0) |\\\n                                             (df_train_num_fil.LANDAREA > 25000)], axis=0, inplace=True)\ndf_train_num_fil.drop(df_train_num_fil.index[df_train_num_fil.PRICE > th_price], axis=0, inplace=True)\ndf_train_num_fil.drop(df_train_num_fil.index[df_train_num_fil.LIVING_GBA > 4000], axis=0, inplace=True)","4522fe3b":"# \u6570\u5024\u578b\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\ndf_train_num_fil.hist(figsize=(20, 20), bins=30, xlabelsize=10, ylabelsize=10);","81931c00":"# PRICE\u3068\u4ed6\u306e\u5909\u6570\u306e\u95a2\u4fc2\nfor i in range(0, len(df_train_num_fil.columns), 4):\n    sns.pairplot(height=5, data=df_train_num_fil, x_vars=df_train_num_fil.columns[i:i+4], y_vars=[\"PRICE\"])","3c8d4bc8":"df_train_num_fil.corr()[\"PRICE\"].abs().sort_values(ascending=False)","8ccd6800":"corr = df_train_num_fil.drop(\"PRICE\", axis=1).corr()\nplt.figure(figsize=(15, 15))\n\nsns.heatmap(corr[(corr >= 0.5) | (corr <= -0.5)], \n            cmap='viridis', vmax=1.0, vmin=-1.0, linewidths=0.1,\n            annot=True, annot_kws={\"size\": 18}, square=True);","bff10ffb":"idx_high = df_train.PRICE.index[df_train.PRICE > th_price]\ndf_train_num_high = df_train_num.iloc[idx_high, :]\ndf_train_cat_high = df_train_cat.iloc[idx_high, :]","b2c80fb3":"# PRICE\u3068\u4ed6\u306e\u5909\u6570\u306e\u95a2\u4fc2\nfor i in range(0, len(df_train_num_high.columns), 4):\n    sns.pairplot(height=5, data=df_train_num_high, x_vars=df_train_num_high.columns[i:i+4], y_vars=[\"PRICE\"])","7e1353e7":"# \u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\nfig, axes = plt.subplots(round(len(list_cat) \/ 3), 3, figsize=(20, 40))\n\nfor i, ax in enumerate(fig.axes):\n    if i < len(list_cat):\n        ax.set_xticklabels(ax.xaxis.get_majorticklabels(), rotation=90, fontsize=20)\n        ax.set_xlabel(ax.get_xlabel, fontsize=20)\n        sns.countplot(x=list_cat[i], alpha=0.7, data=df_train_cat_high, ax=ax)\n\nfig.tight_layout()","dce54829":"fig, axes = plt.subplots(len(list_cat), 1, figsize=(14, 60))\n\nfor i, ax in enumerate(fig.axes):\n    if i < len(list_cat):\n        sns.boxplot(x=list_cat[i], y=df_train_num_high.PRICE, data=df_train_cat_high, ax=ax)\n        \nfig.tight_layout()","f1fd6def":"df_train_cond = df_train.query('SOURCE==\"Condominium\"')\ndf_train.columns[df_train_cond.isnull().sum() > 10000]","8f6b89fc":"df_train_resi = df_train.query('SOURCE==\"Residential\"')\ndf_train.columns[df_train_resi.isnull().sum() > 10000]","fa4359b0":"# \u9ad8\u4fa1\u683c\u5c64\u306e\u5206\u6790","ff94eac3":"# SOURCE\u3067\u5206\u3051\u308b","70f4436a":"# \u524d\u51e6\u7406\u5f8c\u306e\u89e3\u6790","15b97546":"\u21d2\u3000BATH_RM, BEDRM, ROOMS, NUM_UNITS, SALE_NUM\u3092\u843d\u3068\u3059","29d47e7f":"## \u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306ePRICE\u3068\u306e\u95a2\u4fc2","6b18c414":"## \u6570\u5024\u30c7\u30fc\u30bf\u306ePRICE\u3068\u306e\u95a2\u4fc2\u6027","dcb078af":"## \u6570\u5024\u30c7\u30fc\u30bf\u306ePRICE\u3068\u306e\u95a2\u4fc2\u6027","969b729b":"## \u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u5206\u6790","74e238eb":"## \u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306ePRICE\u3068\u306e\u95a2\u4fc2","eebe5bdf":"# \u4e0b\u5c64\u30c7\u30fc\u30bf\u306e\u89e3\u6790","417a87c1":"## \u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0","207001ae":"\u6570\u5024\n- BATH_RM\n- BEDRM\n- ROOMS\n- NUM_UNITS\n- SALE_NUM\n\n\u30ab\u30c6\u30b4\u30ea\u5909\u6570\n- GIS_LAST_MOD_DTTM\n- CMPLX_NUM\n- FULLADDRESS\n- SQUARE\n- CENSUS_BLOCK","78652b55":"- LIVING_GBA\u3068BATH_RM, BEDRM, ROOMS\u306f\u76f8\u95a2\u304c\u5f37\u3044\n- GBA\u3082BATH_RM, BEDRM, ROOMS\u3068\u76f8\u95a2\u304c\u5f37\u3044\n- FIRERPLACES\u3001LONGITUDE\u3001HF_BATHRMS\u3001STORIES\u306f\u72ec\u7acb\n- LANDAREA\u306fROOMS\u3068BEDRM\u3068\u76f8\u95a2\u304c\u5f37\u3044\n- YR_RMDL\u306f\u72ec\u7acb\n- EYB\u3068AYB\u306f\u5f37\u3044\u76f8\u95a2\n- SALEDATE_YEAR\u3068SALE_NUM\u306f\u5f37\u3044\u76f8\u95a2\n- LATITUDE\u306f\u72ec\u7acb\n- KITCHENS\u3068NUM_UNITS\u306f\u5f37\u3044\u76f8\u95a2","30d01a3c":"GIS_LAST_MOD_DTTM\u3068SOURCE\u306f\u540c\u3058\u3053\u3068\u3092\u8868\u3059\n\n\n\u21d2\u3000SOURCE\u306e\u307f\u3092\u6b8b\u3059","6ae8d3b1":"\u95be\u5024:2.4e+6\u3067\u304d\u308c\u3044\u306b\u5206\u5e03\u3092\u5206\u3051\u308c\u308b","dbe4e326":"## \u6570\u5024\u30c7\u30fc\u30bf\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0","092fbc19":"# PRICE\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0","65134a53":"- YR_RMDL <250\u306b\u5916\u308c\u5024\n- STORIES >200\u306b\u5916\u308c\u5024\n- KITCHENS >40\u306b\u5916\u308c\u5024\n- LANDAREA =0\u306f\u9593\u9055\u3044","30ed05ff":"## \u6570\u5024\u30c7\u30fc\u30bf\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0","c5fdf180":"# \u6570\u5024\u30c7\u30fc\u30bf\u306e\u76f8\u95a2\u5206\u6790","9b015863":"# \u5fc5\u8981\u3068\u3057\u306a\u3044\u5909\u6570","455f0503":"## \u6570\u5024\u30c7\u30fc\u30bf\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0","1b256c57":"- CMPLX_NUM, FULLADDRESS, SQUARE, CENSUS_BLOCK\u306f\u591a\u3059\u304e\u308b\uff082000\u4ee5\u4e0a\uff09\u306e\u3067\u843d\u3068\u3059\n- NATIONALGRID\u306f\u524d\u534a\u306e2 word\u3067\u30ab\u30c6\u30b4\u30ea\u5206\u3051\u308b\u3000\u21d2\u30002\u3064\u306e\u30e6\u30cb\u30fc\u30af\u306a\u5909\u6570\u306b\u306a\u3063\u305f"}}