{"cell_type":{"962ad2bd":"code","2c7762ed":"code","68d84c36":"code","d3e9ce68":"code","08011446":"code","018f6a18":"code","82ae7340":"code","0c0ce4bf":"code","d144aefc":"code","decfc7b9":"code","dee7de13":"code","e294f81a":"code","039efb49":"code","bf8a4a3b":"code","18274a53":"code","9f042645":"code","3174d621":"code","b8eed510":"code","ca50f697":"code","0be55aee":"code","7d358781":"code","dc5f0e64":"code","65dfe0e9":"code","8603c944":"code","88a0eee9":"code","2069dea3":"markdown","e899ac29":"markdown","1506ad39":"markdown","d1e3161c":"markdown","70695e0c":"markdown","1e38963b":"markdown","86d79ffb":"markdown","91b06798":"markdown","a5335dad":"markdown","650a9aee":"markdown","225d602b":"markdown","a1c8b8f9":"markdown","4d976d69":"markdown","3eb9393c":"markdown"},"source":{"962ad2bd":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","2c7762ed":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","68d84c36":"df = pd.read_csv('\/kaggle\/input\/loan_train_data.csv')","d3e9ce68":"df.head(3)","08011446":"pip install pycaret","018f6a18":"# import the classification module\nfrom pycaret import classification","82ae7340":"#setup the environment\nclassification_setup = classification.setup(data= df, target = 'Personal Loan' )","0c0ce4bf":"# build the decision tree model\nclassification_dt = classification.create_model('dt')","d144aefc":"# build the xgboost model\nclassification_xgb = classification.create_model('xgboost')","decfc7b9":"\n#build and tune the catboost model\ntune_catboost = classification.tune_model('catboost')","dee7de13":"# ensemble boosting\nboosting = classification.ensemble_model(classification_dt, method='Boosting')","e294f81a":"# Ensemble: Blending\nblender = classification.blend_models(estimator_list=[classification_dt,classification_xgb])","039efb49":"# compare performance of different classification models\nclassification.compare_models()","bf8a4a3b":"# AUC-ROC plot\nclassification.plot_model(classification_dt, plot='auc')\n","18274a53":"\n# Decision Boundary\nclassification.plot_model(classification_dt, plot = 'boundary')","9f042645":"# Precision Recall Curve\nclassification.plot_model(classification_dt, plot = 'pr')","3174d621":"# Validation Curve\nclassification.plot_model(classification_dt, plot = 'vc')","b8eed510":"# evaluate model\n\nclassification.evaluate_model(classification_dt)","ca50f697":"classification.interpret_model(classification_xgb)","0be55aee":"# interpret model : Correlation\nclassification.interpret_model(classification_xgb, plot = 'correlation')","7d358781":"# read the test data\ntest = pd.read_csv('\/kaggle\/input\/loan_test_data.csv')","dc5f0e64":"predictions = classification.predict_model(classification_dt, data = test)","65dfe0e9":"# view the predictions\npredictions","8603c944":"# Save the model\nclassification.save_model(classification_dt, 'decision_tree_1')","88a0eee9":"# Load model\ndt_model = classification.load_model(model_name='decision_tree_1')","2069dea3":"## Hyperparameter Tuning","e899ac29":"The very first step before we start our machine learning project in PyCaret is to set up the environment. It\u2019s just a two-step process:\n\n 1. **Importing a Module:** Depending upon the type of problem you are going to solve, you first need to import the module. In the first version of PyCaret, 6 different modules are available \u2013 regression, classification, clustering, natural language processing (NLP), anomaly detection, and associate mining rule. In this article, we will solve a classification problem and hence we will import the classification module\n 2. **Initializing the Setup:** In this step, PyCaret performs some basic preprocessing tasks, like ignoring the IDs and Date Columns, imputing the missing values, encoding the categorical variables, and splitting the dataset into the train-test split for the rest of the modeling steps. When you run the setup function, it will first confirm the data types, and then if you press enter, it will create the environment for you to go ahead1. ","1506ad39":"## Compare Models","d1e3161c":"## Building Ensemble Models Using PyCaret","70695e0c":"**PyCaret** is an open-source, machine learning library in Python that helps you from data preparation to model deployment. It is easy to use and you can do almost every data science project task with just one line of code.\n\n","1e38963b":"## Interpret Our Model\n","86d79ffb":"I\u2019ve found PyCaret extremely handy. Here are two primary reasons why:\n\n* PyCaret, being a low-code library, makes you more productive. You can spend less time on coding and can do more experiments\n* It is an easy to use machine learning library that will help you perform end-to-end machine learning experiments, whether that\u2019s imputing missing values, encoding categorical data, feature engineering, hyperparameter tuning, or building ensemble models","91b06798":"## Install PyCaret ","a5335dad":"## Training a Model using PyCaret","650a9aee":"The very first step before we start our machine learning project in PyCaret is to set up the environment. It\u2019s just a two-step process:\n\n1. **Importing a Module:** Depending upon the type of problem you are going to solve, you first need to import the module. In the first version of PyCaret, 6 different modules are available \u2013 regression, classification, clustering, natural language processing (NLP), anomaly detection, and associate mining rule. In this article, we will solve a classification problem and hence we will import the classification module\n2. **Initializing the Setup:** In this step, PyCaret performs some basic preprocessing tasks, like ignoring the IDs and Date Columns, imputing the missing values, encoding the categorical variables, and splitting the dataset into the train-test split for the rest of the modeling steps. When you run the setup function, it will first confirm the data types, and then if you press enter, it will create the environment for you to go ahead","225d602b":"## Save and Load the Model","a1c8b8f9":"## Evaluate Our Model","4d976d69":"## Make Predictions","3eb9393c":"## Analyze the results\n1. Plot Model Results\n2. Interpret Results"}}