{"cell_type":{"7056daeb":"code","9db1d834":"code","a947533f":"code","e5839d73":"code","aef3c24c":"code","3a9c530c":"code","45dae817":"code","d77b2602":"code","9e9c48e8":"code","04b61f70":"code","8946ec14":"code","4bafe470":"code","0f8a8b04":"code","c5111fe6":"code","3a3e9acc":"code","a6a4cf86":"code","c21b074b":"markdown","72c577b7":"markdown","beba6073":"markdown","82be71e1":"markdown","6af384dd":"markdown"},"source":{"7056daeb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9db1d834":"def prepare_country_stats(oecd_bli, gdp_per_capita):\n    oecd_bli = oecd_bli[oecd_bli[\"INEQUALITY\"]==\"TOT\"]\n    oecd_bli = oecd_bli.pivot(index=\"Country\", columns=\"Indicator\", values=\"Value\")\n    gdp_per_capita.rename(columns={\"2015\": \"GDP per capita\"}, inplace=True)\n    gdp_per_capita.set_index(\"Country\", inplace=True)\n    full_country_stats = pd.merge(left=oecd_bli, right=gdp_per_capita,\n                                  left_index=True, right_index=True)\n    full_country_stats.sort_values(by=\"GDP per capita\", inplace=True)\n    remove_indices = [0, 1, 6, 8, 33, 34, 35]\n    keep_indices = list(set(range(36)) - set(remove_indices))\n    return full_country_stats[[\"GDP per capita\", 'Life satisfaction']].iloc[keep_indices]","a947533f":"import matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport sklearn.linear_model\n\n# Load the data\noecd_bli = pd.read_csv(\"\/kaggle\/input\/life-satisfaction-dataset\/oecd_bli_2015.csv\", thousands=',')\ngdp_per_capita = pd.read_csv(\"\/kaggle\/input\/life-satisfaction-dataset\/gdp_per_capita.csv\",thousands=',',delimiter='\\t',\n                             encoding='latin1', na_values=\"n\/a\")\noecd_bli.head()","e5839d73":"gdp_per_capita.head()","aef3c24c":"# Prepare the data\ncountry_stats = prepare_country_stats(oecd_bli, gdp_per_capita)\nX = np.c_[country_stats[\"GDP per capita\"]]\ny = np.c_[country_stats[\"Life satisfaction\"]]","3a9c530c":"X","45dae817":"y","d77b2602":"# Visualize the data\ncountry_stats.plot(kind='scatter', x=\"GDP per capita\", y='Life satisfaction')\nplt.show()","9e9c48e8":"# Select a linear model\nmodel = sklearn.linear_model.LinearRegression()\nmodel","04b61f70":"# Train the model\nmodel.fit(X, y)","8946ec14":"X_new = [[22587]]  # Cyprus' GDP per capita\nprint(model.predict(X_new)) # outputs [[ 5.96242338]]","4bafe470":"X_new = [[55589]]  # Cyprus' GDP per capita\nprint(model.predict(X_new)) # outputs [[ 5.96242338]]","0f8a8b04":"import sklearn.neighbors\n# Select a linear model\nmodelknn = sklearn.neighbors.KNeighborsRegressor(n_neighbors=3)\nmodelknn","c5111fe6":"modelknn.fit(X,y)","3a3e9acc":"X_knn = [[22587]]  # Cyprus' GDP per capita\nprint(model.predict(X_knn)) # outputs [[5.96242338]]","a6a4cf86":"X_knn = [[55589]]  # Cyprus' GDP per capita\nprint(model.predict(X_knn)) # outputs [[7.58333132]]","c21b074b":"## Prediction","72c577b7":"## Prepare the Data","beba6073":"## Select a KNN","82be71e1":"## Select a Linear Model","6af384dd":"## Visualize the Data"}}