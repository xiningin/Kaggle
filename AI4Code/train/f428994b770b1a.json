{"cell_type":{"2d71e4a0":"code","8565e9d0":"code","0151e20b":"code","2257a4e3":"code","cb41282c":"code","2609df39":"code","7c4432f6":"code","e2862bee":"code","5584d788":"code","77d84e9f":"code","30c881bd":"code","90f06b69":"code","f84cfc9a":"markdown"},"source":{"2d71e4a0":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport scaleogram as scg\nimport matplotlib.pyplot as plt\n\nXtr = pd.read_csv(\"..\/input\/X_train.csv\") # row_id series_id measurement_number orientation_X orientation_Y orientation_Z orientation_W \nytr = pd.read_csv(\"..\/input\/y_train.csv\") #series_id group_id surface\nXtr.head(1)\nytr.head(1)\n","8565e9d0":"def plot_serie(df, id):\n    surface = ytr[ytr.series_id==id].surface.values[0]\n    fig = plt.figure(figsize=(16, 4))\n    ax = plt.subplot(1, 3, 1)\n    for orient in [ 'X', 'Y', 'Z', 'W']:\n        X = df[df.series_id==id]['orientation_'+orient].values\n        plt.plot(X - np.mean(X), label='o'+orient)\n    plt.legend(); plt.title(\"Orientation (%s)\" %(surface)); \n    \n    plt.subplot(1, 3, 2)\n    for orient in ['X', 'Y', 'Z']:\n        X = df[df.series_id==id]['angular_velocity_'+orient].values\n        plt.plot(X,label=orient)\n    plt.legend(); plt.title(\"Angular velocity (%s)\" %(surface))\n\n    plt.subplot(1, 3, 3)\n    for orient in ['X', 'Y', 'Z']:\n        X = df[df.series_id==id]['linear_acceleration_'+orient].values\n        plt.plot(X,label=orient)\n    plt.legend(); plt.title(\"Linear acceleration (%s)\" %(surface))\n\n    fig = plt.figure(figsize=(18,9))\n    for i, orient in enumerate(['X', 'Y', 'Z', 'W']):\n        ax=plt.subplot(4, 3, 1+3*i)\n        X = df[df.series_id==id]['orientation_'+orient].values\n        scales = scg.periods2scales(10**np.linspace(np.log10(1), np.log10(60), 50))\n        scg.cws(X-X.mean(), scales=scales, ax=ax, yscale='log', cscale='log', clim=(1e-6, 1e-4))\n        i == 0 and ax.set_title('Orientation (%s)'%(surface))\n    for i, orient in enumerate(['X', 'Y', 'Z']):\n        ax=plt.subplot(4, 3, 2+3*i)\n        X = df[df.series_id==id]['angular_velocity_'+orient].values\n        scales = scg.periods2scales(10**np.linspace(np.log10(1), np.log10(60), 50))\n        scg.cws(X-X.mean(), scales=scales, ax=ax, yscale='log', clim=(0, 0.1))\n        i == 0 and ax.set_title('Angular Velocity (%s)'%(surface))\n    for i, orient in enumerate(['X', 'Y', 'Z']):\n        ax=plt.subplot(4, 3, 3+3*i)\n        scales = scg.periods2scales(10**np.linspace(np.log10(1), np.log10(60), 50))\n        X = df[df.series_id==id]['linear_acceleration_'+orient].values\n        scg.cws(X-X.mean(), scales=scales, ax=ax, yscale='log', clim=(0,3))\n        i ==0 and ax.set_title('Linear Acceleration (%s)' %(surface))\n    \nplot_serie(Xtr,0)\n    ","0151e20b":"plot_serie(Xtr,1)\n","2257a4e3":"plot_serie(Xtr,2)\n","cb41282c":"plot_serie(Xtr,3)\n","2609df39":"plot_serie(Xtr,4)","7c4432f6":"plot_serie(Xtr,5)\n","e2862bee":"plot_serie(Xtr,6)\n","5584d788":"plot_serie(Xtr,7)\n","77d84e9f":"plot_serie(Xtr,8)\n","30c881bd":"plot_serie(Xtr,9)\n","90f06b69":"plot_serie(Xtr,10)\n","f84cfc9a":"# A starter view of robots moves with continuous wavelet transform \n\nVibration caused by motors, ooching, woobling from the soil surface, and so one, are prone to frequency analysis.\n\nContinuous wavelet transform is an excellent tool for booth visual analysis and production of features for the next block in the chain.\n\nThe next few examples show instructive patterns. The input signal needs some more processing and spectrograms may be combined to produce usefull cross-spectra, which I won't put here otherwise it would be too easy ;-)"}}