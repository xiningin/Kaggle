{"cell_type":{"a7da0398":"code","9dd6104c":"code","560254ed":"code","03d48e61":"code","5189b256":"code","3eb626b4":"code","ba5be576":"code","d176637a":"code","800c531f":"code","46bf7481":"code","e121ef90":"code","45d90986":"code","6aa3e217":"code","e94d951c":"code","1f158d20":"code","d60ba7e6":"markdown","35d8c817":"markdown","26b9cc63":"markdown","cfff0fbb":"markdown","ed3433e6":"markdown","bb9cde0b":"markdown"},"source":{"a7da0398":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9dd6104c":"import pandas as pd\nimport numpy as np\nfrom sklearn.linear_model import LinearRegression\nimport statsmodels.api as sm","560254ed":"df = pd.read_csv ('..\/input\/taxas-de-crescimento-piscicultura\/txcrescimento_SC.csv',sep=';')\nlist(df.columns.values)","03d48e61":"df['index'] = df.index","5189b256":"df['txcrescimento2013'] = round(np.log2(df['soma 2013']),3)\ndf['txcrescimento2014'] = round(np.log2(df['soma 2014']),3)\ndf['txcrescimento2015'] = round(np.log2(df['soma 2015']),3)\ndf['txcrescimento2016'] = round(np.log2(df['soma 2016']),3)\ndf['txcrescimento2017'] = round(np.log2(df['soma 2017']),3)\ndf['txcrescimento2018'] = round(np.log2(df['soma 2018']),3)\ndf['txcrescimento2019'] = round(np.log2(df['soma 2019']),3)\ndf","3eb626b4":"#Y = np.array([df.txcrescimento2013])\n#Y\n","ba5be576":"df.shape\nn=df.shape[0]\nprint(\"H\u00e1 \",n, \"registros\/munic\u00edpios na tabela.\")","d176637a":"X = np.array([[1,2,3,4,5,6,7]])\nX=X.T\nX","800c531f":"y0=df.loc[[0],['txcrescimento2013','txcrescimento2014','txcrescimento2015','txcrescimento2016','txcrescimento2017','txcrescimento2018','txcrescimento2019']]\ny0=y0.T\ny0=np.array(y0)\ny0","46bf7481":"# \u00e9 necess\u00e1rio adicionar uma constante a matriz X\nX_sm = sm.add_constant(X)\n","e121ef90":"# OLS vem de Ordinary Least Squares e o m\u00e9todo fit ir\u00e1 treinar o modelo\nresults = sm.OLS(y0, X_sm).fit()\n","45d90986":"# mostrando as estat\u00edsticas do modelo\nresults.summary()\n","6aa3e217":"# mostrando as previs\u00f5es para o mesmo conjunto passado\nresults.predict(X_sm)","e94d951c":"df.set_index('C\u00f3d.',inplace=True)\ndf","1f158d20":"for df.iloc['C\u00f3d'], row in df.iterrows():\n    y0=df.loc[[0],['txcrescimento2013','txcrescimento2014','txcrescimento2015','txcrescimento2016','txcrescimento2017','txcrescimento2018','txcrescimento2019']]\n    y0=y0.T\n    y0=np.array(y0)","d60ba7e6":"Importa\u00e7\u00e3o das Bibliotecas","35d8c817":"Cria\u00e7\u00e3o de um array com a vari\u00e1vel predita(taxa de crescimento) e transposi\u00e7\u00e3o","26b9cc63":"Verifica\u00e7\u00e3o do n\u00famero de munic\u00edpios \/ registros na tabela","cfff0fbb":"C\u00e1lculo do ln da soma","ed3433e6":"Leitura do arquivo .csv","bb9cde0b":"Cria\u00e7\u00e3o de um array com a vari\u00e1vel preditora (tempo) e transposi\u00e7\u00e3o"}}