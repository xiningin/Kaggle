{"cell_type":{"40fb097b":"code","dbfa3647":"code","caaba7d2":"code","9a02b239":"code","ea1a215a":"code","97d1cdc5":"code","51239dc0":"code","286a84f9":"code","1a8cf1f0":"code","8f0dcc39":"code","6b69e1f3":"code","965be399":"code","4796ec27":"code","9deec797":"code","36e1e7c6":"code","f4b4ea90":"code","8864cde2":"code","2994bcbc":"code","730946c0":"code","19358fe1":"code","2c64e9f7":"code","b467c468":"code","32a19882":"code","4cb8f2ae":"code","3daf0716":"code","f10934a1":"code","e29dade2":"code","a6b92008":"code","303ee402":"code","47b1b75a":"code","68e6f559":"code","108cedee":"code","2404a451":"code","51503675":"code","b5048411":"code","022df48d":"code","b3a3e9b4":"code","a9da5b56":"code","d16c17aa":"code","996abc01":"code","16959e91":"code","1f0ef7ec":"code","a2004b90":"code","68dcc12f":"code","f0a7745c":"code","48e91c93":"code","680378b7":"code","46e8cb34":"code","0eac1a12":"code","6f8f3cb2":"code","c805d911":"code","bbdfdf26":"code","5b2c2f8b":"code","39bb0c00":"code","b0ceb389":"code","d6b16442":"code","e3af087c":"code","e4d67c08":"code","8dc99859":"code","ae87aeb8":"code","35058b4e":"markdown","fcda04f6":"markdown","a2fcd165":"markdown","a8fb36e8":"markdown","ccd84ee2":"markdown","7de72e46":"markdown","19536c35":"markdown","16570c95":"markdown","e8083200":"markdown","2600425f":"markdown","280d5c3e":"markdown","e8f26e0b":"markdown","88f1da7e":"markdown","06b361fa":"markdown","7efaa2e6":"markdown","0cbafe5c":"markdown","a31a5227":"markdown","80aeb329":"markdown","8057bef6":"markdown","8fe3f403":"markdown","0598212b":"markdown","a34f3ef0":"markdown","e789cd11":"markdown","5e36ae16":"markdown"},"source":{"40fb097b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","dbfa3647":"data=pd.read_csv('..\/input\/data.csv')","caaba7d2":"data.info()","9a02b239":"data.corr()","ea1a215a":"f,ax=plt.subplots(figsize=(18,18))\nsns.heatmap(data.corr(),annot=True,linewidths=.5,fmt='.1f',ax=ax)\nplt.show()","97d1cdc5":"data.head(10)","51239dc0":"data.columns","286a84f9":"data.Age.plot(kind='line',color='b',label='Age',linewidth=1,alpha=0.5,grid=True,linestyle=':')\ndata.Potential.plot(color='r',label='Potential',linewidth=1,alpha=0.5,grid=True,linestyle=\"-.\")\nplt.legend(loc='upper right')\nplt.xlabel('x axis')\nplt.ylabel('y axis')\nplt.title('Line Plot')\nplt.show()","1a8cf1f0":"data.plot(kind='scatter',x='Age',y='Potential',alpha=0.5,color='blue')\nplt.xlabel('Age')\nplt.ylabel(\"Potential\")\nplt.title('Age Potential Scatter Plot')\nplt.show()","8f0dcc39":"data.Age.plot(kind='hist',bins=50,figsize=(12,12))\nplt.show()","6b69e1f3":"data.Age.plot(kind='hist',bins=50)\nplt.clf()","965be399":"dictionary = {'Name' : 'Messi','Position' : 'RF'}\nprint(dictionary.keys())\nprint(dictionary.values())","4796ec27":"dictionary['Name'] = \"Barcelona\"    \nprint(dictionary)\ndictionary['country'] = \"Argentina\"       \nprint(dictionary)\ndel dictionary['Name']             \nprint(dictionary)\nprint('country' in dictionary)       \ndictionary.clear()                  \nprint(dictionary)","9deec797":"print(dictionary) ","36e1e7c6":"data=pd.read_csv('..\/input\/data.csv')","f4b4ea90":"series = data['Potential']\nprint(type(series))\ndata_frame=data[['Potential']]\nprint(type(data_frame))","8864cde2":"print(3>2)\nprint(3!=2)\n\nprint(True and False)\nprint(True or False)","2994bcbc":"x =data['Potential']>90\n\ndata[x]","730946c0":"data[np.logical_and(data['Potential']>90,data['Age']<20)]","19358fe1":"data[(data['Potential']>90) & (data['Age']<20)]","2c64e9f7":"i = 0\nwhile i != 5 :\n    print('i is: ',i)\n    i +=1 \nprint(i,' is equal to 5')","b467c468":"lis = [1,2,3,4,5]\nfor i in lis:\n    print('i is: ',i)\nprint('')\n\nfor index, value in enumerate(lis):\n    print(index,\" : \",value)\nprint('')\n\ndictionary = {'spain':'madrid','france':'paris'}\nfor key,value in dictionary.items():\n    print(key,\" : \",value)\nprint('')\n\nfor index,value in data[['Potential']][0:1].iterrows():\n    print(index,\" : \",value)","32a19882":"def tuble_ex():\n    t=(1,2,3)\n    return t\na,b,c=tuble_ex()\nprint(a,b,c)","4cb8f2ae":"x=2\ndef f():\n    x=3\n    return x\nprint(x)\nprint(f())","3daf0716":"x=5\ndef f():\n    y=2*x\n    return y\nprint(f())","f10934a1":"import builtins\ndir(builtins)","e29dade2":"def square():\n    def add():\n        x=2\n        y=3\n        z=x+y\n        return z\n    return add()**2\nprint(square())","a6b92008":"def f(a,b=1,c=2):\n    y=a+b+c\n    return y\nprint(f(5))\nprint(f(5,4,3))","303ee402":"def f(*args):\n    for i in args:\n        print(i)\nf(1)\nprint(\"\")\nf(1,2,3,4)\n\ndef f(**kwargs):\n    for key, value in kwargs.items():\n        print (key,\" \",value)\nf(country='spain',capital='madrid',population=123456)","47b1b75a":"square=lambda x:x**2\nprint(square(4))\ntot=lambda x,y,z: x+y+z\nprint(tot(1,2,3))","68e6f559":"number_list = [1,2,3]\ny = map(lambda x:x**2,number_list)\nprint(list(y))","108cedee":"name=\"ronaldo\"\nit = iter(name)\nprint(next(it))\nprint(*it)","2404a451":"list1=[1,2,3,4]\nlist2=[5,6,7,8]\nz=zip(list1,list2)\nprint(z)\nz_list=list(z)\nprint(z_list)","51503675":"un_zip = zip(*z_list)\nun_list1,un_list2 = list(un_zip)\nprint(un_list1)\nprint(un_list2)\nprint(type(un_list2))","b5048411":"num1=[1,2,3]\nnum2=[i+1 for i in num1 ]\nprint(num2)","022df48d":"num1=[5,10,15]\nnum2=[i**2 if i==10 else i-5 if i<7 else i+5 for i in num1]\nprint(num2)","b3a3e9b4":"Agemean=sum(data.Age)\/len(data.Age)\ndata[\"Age_level\"]=[\"Elderly\" if i>Agemean else \"Young\" for i in data.Age]\nprint(Agemean)\ndata.loc[:10,[\"Age_level\",\"Age\"]]","a9da5b56":"data=pd.read_csv('..\/input\/data.csv')\ndata.head()","d16c17aa":"data.tail()","996abc01":"data.columns","16959e91":"data.shape","1f0ef7ec":"data.info()","a2004b90":"print(data['Name'].value_counts(dropna=False))","68dcc12f":"data.describe()","f0a7745c":"data.boxplot(column='Age',by='Potential',figsize=(12,12))","48e91c93":"data_new = data.head()\ndata_new","680378b7":"melted=pd.melt(frame=data_new,id_vars='Name',value_vars=[\"Age\",\"Potential\"])\nmelted","46e8cb34":"melted.pivot(index = \"Name\",columns=\"variable\",values=\"value\")","0eac1a12":"data1=data.head()\ndata2=data.tail()\nconc_data_row=pd.concat([data1,data2],axis=0,ignore_index=True)\nconc_data_row","6f8f3cb2":"data1=data[\"Age\"].head()\ndata2=data[\"Potential\"].head()\nconc_data_col=pd.concat([data1,data2],axis=1)\nconc_data_col","c805d911":"data.dtypes","bbdfdf26":"data[\"Name\"]=data[\"Name\"].astype(\"category\")\ndata[\"Age\"]=data[\"Age\"].astype(\"float\")","5b2c2f8b":"data.dtypes","39bb0c00":"data.info()","b0ceb389":"data[\"Age\"].value_counts(dropna=False)","d6b16442":"data1=data\ndata1[\"Age\"].dropna(inplace=True)","e3af087c":"assert 1==1","e4d67c08":"assert data[\"Age\"].notnull().all()","8dc99859":"data[\"Age\"].fillna(\"empty\",inplace=True)","ae87aeb8":"assert data[\"Age\"].notnull().all()","35058b4e":"ITERATORS","fcda04f6":"*DICTIONARY","a2fcd165":"SCOPE","a8fb36e8":"zip(): zip lists","ccd84ee2":"TIDY DATA","7de72e46":"EXPLORATORY DATA ANALYSIS","19536c35":"**DATA SCIENTIST**","16570c95":"LAMBDA FUNCTION","e8083200":"* MATPLOTLIB","2600425f":"**3.CLEANING DATA**","280d5c3e":"ANONYMOUS FUNCT\u0130ON","e8f26e0b":"CONCATENATING DATA","88f1da7e":"* WHILE and FOR LOOPS","06b361fa":"USER DEFINED FUNCTION","7efaa2e6":"LIST COMPREHENS\u0130ON","0cbafe5c":"DATA TYPES","a31a5227":"DEFAULT and FLEXIBLE ARGUMENTS","80aeb329":"2. PYTHON DATA SCIENCE TOOLBOX","8057bef6":"* PANDAS","8fe3f403":"PIVOTING DATA","0598212b":"1. INTRODUCTION TO PYTHON","a34f3ef0":"NESTED FUNCTION","e789cd11":"MISSING DATA and TESTING WITH ASSERT","5e36ae16":"DIAGNOSE DATA for CLEANING"}}