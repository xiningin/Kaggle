{"cell_type":{"5203f604":"code","d16381c6":"code","19a207d2":"code","0d257af7":"code","734b08da":"code","aaa2d254":"code","1384c0e6":"code","b6c50a16":"code","38f60e6c":"code","bfd0cb38":"code","f3e08e76":"code","4572c57c":"markdown","2f368d21":"markdown","bc6f0815":"markdown","8a7ea517":"markdown","a9ad4344":"markdown","2ac5459b":"markdown","635f7a81":"markdown","3fe3aefe":"markdown","42473621":"markdown","285fdac9":"markdown","ffedc9b3":"markdown","a3b51f05":"markdown","1f7aa528":"markdown","359c9651":"markdown","9456da87":"markdown","8baf9ba3":"markdown","33c36e58":"markdown","2f1ff640":"markdown","da4cbead":"markdown","f2a8717d":"markdown","caab1148":"markdown"},"source":{"5203f604":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\ndigimon=pd.read_csv('\/kaggle\/input\/digidb\/DigiDB_digimonlist.csv')\nmoveslist=pd.read_csv('\/kaggle\/input\/digidb\/DigiDB_movelist.csv')\nsupportlist=pd.read_csv('\/kaggle\/input\/digidb\/DigiDB_supportlist.csv')","d16381c6":"moveslist['Best ratio']=round(moveslist['Power']\/moveslist['SP Cost'],1)\nmoveslist.sort_values('Best ratio',ascending=False).head(3)","19a207d2":"digimon.sort_values('Lv50 Atk',ascending=False).head(3)","0d257af7":"digimon.sort_values('Lv50 Def',ascending=False).head(3)","734b08da":"def Check(msg,ind):\n    mean=digimon[msg].mean()\n    i = digimon[msg][ind]\n    if i<mean:    \n        return 'Weak'\n    elif i>mean:\n        return 'Strong'\n    else:\n        return 'Mean'    \nlv50=['Lv 50 HP','Lv50 SP','Lv50 Atk','Lv50 Def','Lv50 Int','Lv50 Spd']\nlv={}\nfor i in lv50:\n    lv[i]=[]\n    for j in range(249):\n        t=Check(i,j)\n        lv[i].append(t)\ntemp_digi=pd.DataFrame(lv)\ntemp_digi['Attribute']=digimon['Attribute'].copy()\nstats_dig={'Attribute':[]}\nfor i in temp_digi['Attribute'].unique():\n    stats_dig['Attribute'].append(i)\ntemp_dic={}\nfor i in lv50:\n    temp_dic[i]=[0,0]\n    stats_dig[i]=[]\n    for k in stats_dig['Attribute']:\n        for j,l in zip(temp_digi['Attribute'],temp_digi[i]):\n            if k!=j:\n                continue\n            if l=='Weak':\n                temp_dic[i][0]=temp_dic[i][0]+1\n            else:\n                temp_dic[i][1]=temp_dic[i][1]+1\n        if temp_dic[i][0]\/1.2<temp_dic[i][1]:\n            stats_dig[i].append('Great')\n        if temp_dic[i][0]\/1.2>temp_dic[i][1]:\n            stats_dig[i].append('Weak')\n        if temp_dic[i][0]\/1.2==temp_dic[i][1]:\n            stats_dig[i].append('MID')\ndf_stats=pd.DataFrame(stats_dig)\ndf_stats    ","aaa2d254":"tatype=pd.DataFrame()\ntatype['Attribute']=digimon['Attribute'].copy()\ntatype['Type']=digimon['Type'].copy()\ntatype['Stage']=digimon['Stage'].copy()\ntatype.drop_duplicates(inplace=True,ignore_index=True)\n\nxsubject=['Ultra','Mega','Ultimate','Armor','Champion','Rookie','In-Training','Baby']\n\ntemp=tatype.groupby('Type').Stage.value_counts()\ntemp_list=[]\nfor i in range(tatype['Type'].nunique()):\n    temp_list.append([])\n    for j in range(len(xsubject)):\n        temp_list[i].append(0)\n        \ndef asi(xstr,i,ind):\n    for j in range(len(xstr)):\n            if xstr[j]==temp.index[i][1]:\n                temp_list[ind][j]=temp[i]\n        \nfor i in range(len(temp)):\n    if temp.index[i][0]=='Data':\n        asi(xsubject,i,0)\n\n    if temp.index[i][0]=='Free':\n        asi(xsubject,i,1)\n\n    if temp.index[i][0]=='Vaccine':\n        asi(xsubject,i,2)\n\n    if temp.index[i][0]=='Virus':\n        asi(xsubject,i,3)\n\n        \nplo_df=pd.DataFrame({'Data':temp_list[0],'Free':temp_list[1],'Vaccine':temp_list[2],'Virus':temp_list[3]},index=xsubject)\nplo_df.plot.bar(rot=0,stacked=True,figsize=(9,3))","1384c0e6":"temp_list=[]\ntemp=tatype.groupby('Attribute').Stage.value_counts()\n\nfor i in range(tatype['Attribute'].nunique()):\n    temp_list.append([])\n    for j in range(len(xsubject)):\n        temp_list[i].append(0)\n\n        \nfor i in range(len(temp)):\n    if temp.index[i][0]=='Dark':\n        asi(xsubject,i,0)\n\n    if temp.index[i][0]=='Earth':\n        asi(xsubject,i,1)\n\n    if temp.index[i][0]=='Electric':\n        asi(xsubject,i,2)\n\n    if temp.index[i][0]=='Fire':\n        asi(xsubject,i,3)\n    \n    if temp.index[i][0]=='Light':\n        asi(xsubject,i,4)\n    \n    if temp.index[i][0]=='Neutral':\n        asi(xsubject,i,5)\n        \n    if temp.index[i][0]=='Plant':\n        asi(xsubject,i,6)\n    \n    if temp.index[i][0]=='Water':\n        asi(xsubject,i,7)\n    \n    if temp.index[i][0]=='Wind':\n        asi(xsubject,i,8)\n\nplo_df=pd.DataFrame({'Dark':temp_list[0],'Earth':temp_list[1],'Electric':temp_list[2],'Fire':temp_list[3],'Light':temp_list[4],'Neutral':temp_list[5],'Plant':temp_list[6],'Water':temp_list[7],'Wind':temp_list[8]},index=xsubject)\nplo_df.plot.bar(rot=0,stacked=True,figsize=(9,5))","b6c50a16":"digimon['HP\/SP']=round(digimon['Lv 50 HP']\/digimon['Lv50 SP'],2)\nx=[]\nfor i in range(len(digimon['HP\/SP'])):\n    x.append(i)\ny=digimon['HP\/SP']\n\nplt.axhline(y=digimon['HP\/SP'].mean(),color='r',linestyle='-',label=\"Mean\")\nplt.scatter(x,y)\nplt.xlabel('Digimon')\nplt.ylabel('HP per SP')\nplt.title('Digimon HP per SP ratio Chart')\n\nplt.show()\n\n","38f60e6c":"digimon.sort_values(by='HP\/SP',ascending=False).head()","bfd0cb38":"digimon.sort_values(by='HP\/SP',ascending=True).head()","f3e08e76":"moveslist['Attack Type']='None'\nmoveslist['Accuracy Rate']='100%'\nmoveslist['Attack Count']='1'\ntem_l=[]\nfor i in range(len(moveslist['Description'])):\n    if 'all foe' in moveslist['Description'][i] or 'to all' in moveslist['Description'][i]:\n        moveslist.loc[[i],['Attack Type']]='all foe'\n    if 'one foe' in moveslist['Description'][i]:\n        moveslist.loc[[i],['Attack Type']]='one foe'\n    \n    if 'accuracy' in moveslist['Description'][i]:\n        w=moveslist['Description'][i]\n        for j in range(len(w)):\n            if 'a'==w[j] and 'c'==w[j+1] and 'c'==w[j+2]:\n                l=w[j-5:j-1]\n                moveslist.loc[[i],['Accuracy Rate']]=l\n                \n    if moveslist['Description'][i][0].isnumeric():\n        l=moveslist['Description'][i].split()\n        moveslist.loc[[i],['Attack Count']]=l[0]\n    if 'penetrating' in moveslist['Description'][i]:\n        tem_l.append(i)\n        tem_l.append(moveslist['Description'][i])\n\nmoveslist=moveslist.reindex(columns=['Move','SP Cost','Type','Power','Attack Type','Attack Count','Accuracy Rate','Inheritable','Best ratio','Description'])        \n\nmoveslist.head()\n            \n        ","4572c57c":"# Task 4:Are different Types and Attribute evenly represented across Stages ?","2f368d21":"#### Note : Trade-off is bit more complicated work with less detail but Try compare values to mean value","bc6f0815":"# Tasks is listing:\n###   [   Task 1 : Which set of moves will get Best ratio of SP Cost ?](#-Task-1:-which-set-of-moves-will-get-Best-ratio-of-SP-Cost-?)\n###   [   Task 2 : Which Team of 3 digimon have the Highest Attack? Deffense?](#-Task-2:-Which-Team-of-3-digimon-have-the-Highest-Attack?-Deffense?)\n### [   Task 3 : Are some Attribute over- and under- represented ?](Task-3:Are-some-Attribute-over--and-under--represented-?)\n### [   Task 4 : Are different Types and Attribute evenly represented across Stages ?](#-Task-4:Are-different-Types-and-Attribute-evenly-represented-across-Stages-?)\n### [   Task 5: What is Trade-off between HP and SP ?](#-Task-5:-What-is-Trade-off-between-HP-and-SP-?)\n### [   Task 6: NLP analysis reveal of Moves ](#-Task-6:-NLP-analysis-reveal-of-Moves-)","8a7ea517":"#### Note : It not a detail summited chart that to overcome with top values & below values table is below","a9ad4344":"### Above Table represent Best of Deffense team\n#### Note : This Result only for overall Digimon","2ac5459b":"# Task 1: Which set of moves will get Best ratio of SP Cost ?","635f7a81":"### Above Table represent Profitable Trade-off","3fe3aefe":"### Types are Across Stage below","42473621":"# Task 3:Are some Attribute over- and under- represented ?","285fdac9":"#### Note : Moves description is more cluster of move but more common characteristics in moves to preferred add in list.   Also supports doesn't have much common characteristics","ffedc9b3":"### Note: Ratio is represent How much Power per a SP\n#### Ex: 1kg of sugar for 0.4 Dollar, then how you calculate to find 250g of sugar is cost that why we using ratio between two values ","a3b51f05":"#### Note :  I just divide two parts to across Stages","1f7aa528":"### Attributes are across Stages below","359c9651":"# Task 5: What is Trade-off between HP and SP ?","9456da87":"# Task 2: Which Team of 3 digimon have the Highest Attack? Deffense?","8baf9ba3":"# Task 6: NLP analysis reveal of Moves ","33c36e58":"#### Note : I just changed Type To Attribute from Author Question because type is too simple and not more detail over- & under ,Attribute like Features and various type","2f1ff640":"### Above Table represent Best Attack Team\n#### Note: This Result only for overall Digimon","da4cbead":"### Above Table represent How preform in different catgories,Maybe a Attribute refers power level","f2a8717d":"### Above Chart Represented How values are differene from mean","caab1148":"### Above Table represent less profit Trade-off"}}