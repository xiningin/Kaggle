{"cell_type":{"26058d57":"code","9d433a27":"code","6cf4fd25":"code","16613140":"code","767c4c38":"code","6074dd27":"code","d1586574":"code","f0366998":"code","dae0d2a6":"code","f327bf20":"code","6303657a":"code","0bda97c0":"code","5446007f":"code","57f168de":"code","51e0a2f1":"code","1cc59a8c":"code","5db2352a":"code","84df5139":"code","eb05b559":"code","34630acd":"code","31fcc1be":"code","a7197328":"code","38f776ca":"code","74eeb316":"code","2895c7cc":"code","c8059c18":"code","97164cc6":"code","700e7d1d":"code","b4b3deb9":"code","e937d34d":"code","b411e025":"code","f863b31f":"code","f8938194":"markdown"},"source":{"26058d57":"import numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","9d433a27":"df_apps=pd.read_csv(\"..\/input\/google-play-store-apps\/googleplaystore.csv\")\ndf_reviews=pd.read_csv(\"..\/input\/google-play-store-apps\/googleplaystore_user_reviews.csv\")","6cf4fd25":"df_apps.head()","16613140":"df_apps.columns=[\"app\",\"category\",\"rating\",\"reviews\",\"size\",\"installs\",\"type\",\"price\",\"content_rating\",\"genres\",\"last_updated\",\"current_ver\",\"android_ver\"]","767c4c38":"df_apps.drop([\"size\",\"last_updated\",\"current_ver\",\"android_ver\"],axis=1,inplace=True)","6074dd27":"df_apps.isnull().sum()","d1586574":"df_apps[df_apps.rating >5]","f0366998":"df_apps.drop([10472],inplace=True)","dae0d2a6":"def impute_median(series):\n    return series.fillna(series.median())","f327bf20":"df_apps.rating =df_apps[\"rating\"].transform(impute_median)","6303657a":"print(df_apps[\"type\"].mode())","0bda97c0":"df_apps[\"type\"].fillna(str(df_apps[\"type\"].mode().values[0]),inplace=True)","5446007f":"df_apps[\"price\"]=df_apps[\"price\"].apply(lambda x:str(x).replace('$','')if '$' in str(x) else str(x))\ndf_apps[\"price\"]=df_apps[\"price\"].apply(lambda x: float(x))\ndf_apps[\"reviews\"]=pd.to_numeric(df_apps[\"reviews\"],errors=\"coerce\")","57f168de":"df_apps[\"installs\"]=df_apps[\"installs\"].apply(lambda x: str(x).replace('+','') if '+' in str(x) else str(x))\ndf_apps[\"installs\"]=df_apps[\"installs\"].apply(lambda x: str(x).replace(',','') if ',' in str(x) else str(x))\ndf_apps[\"installs\"]=df_apps[\"installs\"].apply(lambda x: float(x))","51e0a2f1":"df_apps.head()","1cc59a8c":"df_apps.tail()","5db2352a":"df_apps.isnull().sum()","84df5139":"df_apps.content_rating.unique()","eb05b559":"df_apps['content_rating'] = df_apps['content_rating'].map({'Everyone': 'child','Teen':'everyone','Everyone 10+':'teenager','Mature 17+':'adults','Adults only 18+':'adults','Unrated':'unrated'})","34630acd":"df_apps.shape","31fcc1be":"df_apps.info()","a7197328":"df_apps.describe()","38f776ca":"df_apps = df_apps.sort_values(by=[\"installs\"], ascending=False)\ndf_apps['rank']=tuple(zip(df_apps.installs))\ndf_apps['rank']=df_apps.groupby('installs',sort=False)['rank'].apply(lambda x : pd.Series(pd.factorize(x)[0])).values\ndf_apps.head()","74eeb316":"df_apps.drop([\"rank\"],axis=1,inplace=True)","2895c7cc":"df_apps.reset_index(inplace=True,drop=True)\ndf_apps.head(10)","c8059c18":"df_apps[df_apps.content_rating=='unrated']","97164cc6":"#create a new dataframe\ndata=pd.DataFrame(df_apps.iloc[:,3:5])\ndata.head(3)","700e7d1d":"labels = df_apps.content_rating.value_counts().index\ncolors = ['pink','r','g','orange','black']\nexplode = [0,0,0,0,0]\nsizes = df_apps.content_rating.value_counts().values\n\n# visual \nplt.figure(0,figsize = (6,7))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%')\nplt.title('Apps According to Content Rating',color = 'blue',fontsize = 15)\nplt.show()","b4b3deb9":"labels = df_apps.type.value_counts().index\ncolors = [\"g\",\"r\"]\nexplode = [0,0]\nsizes = df_apps.type.value_counts().values\n\n# visual \nplt.figure(0,figsize = (6,7))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%')\nplt.title('Apps According to Type',color = 'blue',fontsize = 15)\nplt.show()","e937d34d":"df_apps.head(2)","b411e025":"xcat = df_apps.app[df_apps.category == 'SOCIAL']\nplt.subplots(figsize=(10,10))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=512,\n                          height=384\n                         ).generate(\" \".join(xcat))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('graph.png')\n\nplt.show()","f863b31f":"labels = df_apps.category.value_counts().index\ncolors = [\"black\",\"gray\",\"silver\",\"whitesmoke\",\"rosybrown\",\n          \"firebrick\",\"red\",\"darksalmon\",\"sienna\",\"sandybrown\",\n          \"bisque\",\"tan\",\"moccasin\",\"floralwhite\",\"gold\",\n          \"darkkhaki\",\"olivedrab\",\"palegreen\",\"lightseagreen\",\"darkcyan\",\n          \"deepskyblue\",\"lime\",\"tomato\",\"mediumpurple\",\"maroon\",\n          \"coral\",\"olive\",\"yellowgreen\",\"violet\",\"crimson\",\n          \"pink\",\"seashell\",\"azure\"]\nexplode = [0,0,0,0,0,\n           0,0,0,0,0,\n           0,0,0,0,0,\n           0,0,0,0,0,\n           0,0,0,0,0,\n           0,0,0,0,0,\n           0,0,0]\nsizes = df_apps.category.value_counts().values\n\n# visual \nplt.figure(0,figsize = (18,18))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%')\nplt.title('Apps According to Category',color = 'blue',fontsize = 15)\nplt.show()","f8938194":"<h1>Data Analysis of Google App's Rating<\/h1>"}}