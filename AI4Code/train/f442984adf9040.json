{"cell_type":{"08a0d5e6":"code","6e222004":"code","70975b6a":"code","1ff5a711":"code","b889f5aa":"code","927b37a9":"code","46bd06aa":"code","b226b7f7":"code","f31d037b":"code","0f0557e4":"code","182871cd":"code","80065697":"code","509ecfe5":"code","d54af42d":"code","d121204a":"code","c2ebe156":"code","553de5b1":"code","9e20f7bc":"code","bd6bd7ad":"code","a384f7c7":"code","fbfc859b":"code","a29ca1c2":"code","868f53de":"code","84b99b25":"code","a53f51e6":"code","966540d5":"code","f4411446":"code","0de134f0":"code","cbe0935a":"code","597e3a78":"markdown","505efca2":"markdown","58b0c082":"markdown","b251a450":"markdown","130460d3":"markdown","2db52c54":"markdown","ebc34a19":"markdown","97c068af":"markdown","0f9ad829":"markdown","a1ebfe9f":"markdown","2be4de8e":"markdown","576c317a":"markdown","da0297f3":"markdown","d996929d":"markdown","d8b5db5d":"markdown","c3974438":"markdown","fe7e7b04":"markdown","7758f262":"markdown","245102ac":"markdown","e597f920":"markdown","904a3efb":"markdown","b980087f":"markdown","ceb3a6ea":"markdown","d85bdd48":"markdown","06864f53":"markdown","4eabd57e":"markdown","0965ea02":"markdown","ddc0e9ce":"markdown","9f3b434a":"markdown","e2ecb434":"markdown","53bb8130":"markdown","72274689":"markdown","6ffc4f59":"markdown","bd607693":"markdown","d1ac4ef1":"markdown","718ff3e7":"markdown","8b1ca92a":"markdown","703f6998":"markdown","02058a4c":"markdown","e3e73cc6":"markdown","21507c48":"markdown"},"source":{"08a0d5e6":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","6e222004":"import warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\nplt.style.use(\"seaborn-whitegrid\")\nplt.rc(\"figure\", autolayout=True)\nplt.rc(\"axes\", labelweight=\"bold\", labelsize=\"large\", titleweight=\"bold\", titlesize=14, titlepad=10)","70975b6a":"def num_plot(df, col):\n    fig, ax = plt.subplots(2, 1, sharex=True, figsize=(8,5),gridspec_kw={\"height_ratios\": (.2, .8)})\n    ax[0].set_title(col + 'distribution',fontsize=18)\n    sns.boxplot(x=col, data=df, ax=ax[0])\n    ax[0].set(yticks=[])\n    sns.histplot(x=col, data=df, ax=ax[1])\n    ax[1].set_xlabel(col, fontsize=16)\n    plt.tight_layout()\n    plt.show()","1ff5a711":"def plot_features_obj(df,string):\n    fig, ax = plt.subplots(2,4, figsize=(18,9), sharey=True)\n    fig.suptitle('TOP 100 songs musical attributes by Release Year', fontsize=40)\n    g=sns.barplot(ax=ax[0,0], x=string, y= 'energy', data=df,ci=False, palette='rocket')\n    g.bar_label(g.containers[0], fmt='%.1f', fontsize=10)\n    ax[0,0].set_title('energy')\n    ax[0,0].set_xlabel('')\n    ax[0,0].set_ylabel('')\n    ax[0,0].tick_params(axis='y',labelsize=17)\n    \n    g=sns.barplot(ax=ax[0,1], x=string, y= 'danceability', data=df,ci=False, palette='crest_r')\n    g.bar_label(g.containers[0], fmt='%.1f', fontsize=10)\n    ax[0,1].set_title('danceability')\n    ax[0,1].set_ylabel('')\n    ax[0,1].set_xlabel('')\n    \n    g=sns.barplot(ax=ax[0,2], x=string, y= 'liveness', data=df,ci=False, palette='magma')\n    g.bar_label(g.containers[0], fmt='%.1f', fontsize=10)\n    g.bar_label(g.containers[0], fmt='%.1f', fontsize=10)\n    ax[0,2].set_title('liveness')\n    ax[0,2].set_ylabel('')\n    ax[0,2].set_xlabel('')\n    \n    g=sns.barplot(ax=ax[0,3], x=string, y= 'valance', data=df,ci=False, palette='flare_r')\n    g.bar_label(g.containers[0], fmt='%.1f', fontsize=10)\n    ax[0,3].set_title('valance')\n    ax[0,3].set_ylabel('')\n    ax[0,3].set_xlabel('')\n    \n    g=sns.barplot(ax=ax[1,0], x=string, y= 'acousticness', data=df,ci=False, palette='mako')\n    g.bar_label(g.containers[0], fmt='%.1f', fontsize=10)\n    ax[1,0].set_title('acousticness')\n    ax[1,0].set_ylabel('')\n    ax[1,0].set_xlabel('')\n    ax[1,0].tick_params(axis='y',labelsize=17)\n    \n    g=sns.barplot(ax=ax[1,1], x=string, y= 'speechiness', data=df,ci=False, palette='cubehelix')\n    g.bar_label(g.containers[0], fmt='%.1f', fontsize=10)\n    ax[1,1].set_title('speechiness')\n    ax[1,1].set_ylabel('')\n    ax[1,1].set_xlabel('')\n\n    \n    g=sns.barplot(ax=ax[1,2], x=string, y= 'popularity', data=df,ci=False, palette='YlOrBr_r')\n    g.bar_label(g.containers[0], fmt='%.1f', fontsize=10)\n    ax[1,2].set_title('popularity')\n    ax[1,2].set_ylabel('')\n    ax[1,2].set_xlabel('')\n    \n    ax=ax[1,3].axis('off')\n    plt.tight_layout()\n    plt.show()","b889f5aa":"def plot_features(df, text, ax):\n    ax.set_title('Musical Attributes densities of songs by ' + text)\n    sns.kdeplot(x= 'energy', data=df, label='energy',ax=ax)\n    sns.kdeplot(x= 'danceability', data=df, label='danceability',ax=ax)\n    sns.kdeplot(x= 'liveness', data=df, label='liveness',ax=ax)\n    sns.kdeplot(x= 'valance', data=df, label='valance',ax=ax)\n    sns.kdeplot(x= 'acousticness', data=df, label='acousticness',ax=ax)\n    sns.kdeplot(x= 'speechiness', data=df, label='speechiness',ax=ax)\n    ax.set_xlabel('')\n    ax.legend(fontsize=10, fancybox=True, shadow=True, frameon=True)\n    \n    plt.legend()","927b37a9":"df = pd.read_csv('\/kaggle\/input\/top-100-most-streamed-songs-on-spotify\/Top 100 most Streamed - Sheet1.csv')","46bd06aa":"df.head()","b226b7f7":"df.info()","f31d037b":"df.describe()","0f0557e4":"plt.figure(figsize=(9,6))\nplt.title('Correlation Matrix', fontsize=25)\nsns.heatmap(df.corr(), cmap='RdBu', annot=True)\nplt.show()","182871cd":"num_plot(df,'year')","80065697":"df[df['year'] < 2010]","509ecfe5":"df_clean = df.loc[df['year'] > 2010]","d54af42d":"df_clean['year']","d121204a":"plt.figure(figsize=(10,5))\ng=sns.barplot(x='year', y= 'beats.per.minute', data=df_clean,ci=False, palette='mako')\ng.bar_label(g.containers[0], fmt='%.0f',fontsize=14)\nplt.ylabel('BPM', fontsize=14)\nplt.xticks(fontsize=18)\nplt.xlabel('Release Year', fontsize=18)\nplt.title('BPM vs Release Year', fontsize=20)\nplt.show()","c2ebe156":"plt.figure(figsize=(10,5))\ng=sns.barplot(x='year', y= 'length', data=df_clean, ci=False, palette='viridis')\ng.bar_label(g.containers[0], fmt='%.1f', fontsize=14)\nplt.ylabel('Length (minutes)', fontsize=14)\nplt.xticks(fontsize=18)\nplt.xlabel('Release Year', fontsize=18)\nplt.title('Length vs Release Year', fontsize=20)\nplt.show()","553de5b1":"plt.figure(figsize=(10,5))\ng=sns.barplot(x='year', y= 'loudness.dB', data=df_clean, ci=False, palette='Reds_r')\ng.bar_label(g.containers[0], fmt='%.1f', fontsize=14)\nplt.ylabel('Length (minutes)', fontsize=14)\nplt.xticks(fontsize=18)\nplt.xlabel('Release Year', fontsize=18)\nplt.title('Loudness vs Release Year', fontsize=20)\nplt.show()","9e20f7bc":"df_clean.head()","bd6bd7ad":"plot_features_obj(df_clean,'year')","a384f7c7":"df_feat = df_clean.drop(['year','artist','top genre','title','loudness.dB','length','beats.per.minute'], axis=1)","fbfc859b":"df_mean = pd.DataFrame(df_feat.mean().sort_values(ascending=False).reset_index())\ndf_mean.rename(columns={ df_mean.columns[1]: \"value\" }, inplace = True)","a29ca1c2":"plt.figure(figsize=(8,5))\nplt.title('Musical attributes mean values', fontsize=25)\ng = sns.barplot(x='index', y='value', data=df_mean, palette='Reds_r')\ng.bar_label(g.containers[0], fmt='%.1f', fontsize=16)\nplt.xlabel('')\nplt.xticks(fontsize=12)\nplt.ylabel('Value', fontsize=18)\nplt.yticks(fontsize=15)\nplt.show()","868f53de":"df['artist'].value_counts()","84b99b25":"df['artist'].nunique()","a53f51e6":"plt.figure(figsize=(8,5.5))\nplt.title('No. of distinct songs in TOP100 by distinct artist ', fontsize=18)\ng = sns.countplot(df['artist'].value_counts(ascending=True).values)\ng.bar_label(g.containers[0], fmt='%.0f', fontsize=16)\nplt.ylabel('No. artists', fontsize=20)\nplt.xticks(fontsize=12)\nplt.xlabel('No. songs ', fontsize=18)\nplt.yticks(fontsize=15)\nplt.show()","966540d5":"df_art = df['artist'].value_counts()","f4411446":"top_art = df_art[df_art > 1]\ntop_art","0de134f0":"plt.figure(figsize=(10,6))\nplt.title('No. different songs in TOP100 by artist')\ng=sns.barplot(top_art.index, top_art, palette='mako')\ng.bar_label(g.containers[0], fmt='%.0f', fontsize=16)\nplt.xticks(rotation=90)\nplt.yticks([])\nplt.ylabel('No.Songs')\nplt.show()","cbe0935a":"_, ax = plt.subplots(2,2, figsize=(16,7))\nplot_features(df,'all artists',ax[0,0])\nplot_features(df[df['artist']== 'Post Malone'],'Post Malone',ax[0,1])\nplot_features(df[df['artist']== 'Ed Sheeran'],'Ed Sheeran',ax[1,0])\nplot_features(df[df['artist']== 'The Weeknd'],'The Weeknd',ax[1,1])\nplt.show()","597e3a78":"# Song duration by release year","505efca2":"# Musical attributes by release year","58b0c082":"**There is no clear trend in the loudness. We can see that the loudness of TOP songs in 2021 quite descreased compared to top songs in 2019 and 2020.**","b251a450":"# Song loudness by release year","130460d3":"**There is a quite negative trend for what concerns songs length during the years.**","2db52c54":"Is there a relationship between the numerical musical features and the release year?","ebc34a19":"**We can see a small increasing trend for BPM between the years 2013 and 2020. In 2021 we can see a quite low BPM compared to the other years.**","97c068af":"In the following, musical numerical features will be analyzed and compared to the release year of the songs.","0f9ad829":"From the correlation matrix we can say:\n\n- High positive correlation between loudness and energy (+0.73)\n- High negative correlation between acousticness and energy (-0.71)\n- Fairly high positive correlation between valance and danceability (+0.48)\n- Failry high negative correlation between loudness and acousticness (-0.54)","a1ebfe9f":"First, we create a dataframe including the musical features only.","2be4de8e":"First, the year column will be analyzed. The conclusions that will be made about years and their impact on the musical features will be confined to these 100 songs. This means that possible trends related to the release year of the songs could not be true for all songs released during that year but just by analyzing this dataset. Nonetheless, it is still intersting to see if some patterns or insigths can be found by just looking at this data.","576c317a":"# BPM by release year","da0297f3":"**We can see that post Malone has 7 songs in top 10, Ed Sheeran has 5, then both The Weekend and Imagine Draongs have 4. The other artists in this top artist dataframe has either 3 or 2 songs**","d996929d":"# Are there artists with multiple songs than one song in the 100 chart?","d8b5db5d":"# Release year ","c3974438":"- acousticness: [0\u20131] Confidence measure of whether the track is acoustic.\n- danceability: [0\u20131] Describes how suitable a track is for dancing based on musical attributes including tempo, rhythm, stability, beat strength, and overall regularity.\n- energy: [0\u20131] Perceptual measure of intensity and activity. Energetic tracks feel fast, loud, and noisy (e.g. death metal: high energy, Bach prelude: low energy).\n- instrumentalness: [0\u20131] Predicts whether a track contains no vocals (values above 0.5 represent instrumental tracks whereas rap songs would have a score close to 0).\n- liveness: [0\u20131] Detects the presence of an audience in the recording.\n- loudness: [-60\u20130 dB] The average volume across an entire track.\n- speechiness: [0\u20131] Detects the presence of spoken words in a track (values above 0.66 describe tracks that are probably made entirely of spoken words, 0.33\u20130.66 describe tracks that may contain both music and speech, and values below 0.33 most likely represent music and other non-speech-like tracks).\n- valence: [0\u20131] Describes the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry).\n- tempo: [0\u2013300 BPM] The speed or pace of a given piece, as derived from the estimated average beat duration.","fe7e7b04":"# Spotify TOP 100 Streamed Songs Analysis and Visualization Project","7758f262":"In the dataset there are 64 different artists","245102ac":"# Mean musical attributes","e597f920":"## This notebook is still a WIP, I will see what I can do next !! Thanks for reading :)!","904a3efb":"## Dataframe info","b980087f":"# TOP artists analysis","ceb3a6ea":"## Custom function definition:","d85bdd48":"# Songs by artist analysis","06864f53":"We can see that each song is characterized by different numerical features. They will be anaylzed to see if TOP songs have some of these features in common.","4eabd57e":"# Correlation Matrix","0965ea02":"# Which are the artists with more than one song in the top 100?","ddc0e9ce":"According to these plots, the TOP 100 spotify songs are characterized by:\n- Quite high popularity, danceability, energy and valance\n- Quite low values of liveness, acousticness and speechiness.<br>","9f3b434a":"<img src=\"https:\/\/i.imgur.com\/YZUmkNb.png\">","e2ecb434":"# Main Results Dashboard:","53bb8130":"There are 4 'old' songs (in tersm of release data). In particular, two of them are remastered of original songs (Bohemian Rhapsody and Wonderwall).","72274689":"Let's analyze the songs by TOP 3 artists (in terms of number of songs in the TOP 100 list).","6ffc4f59":"We can see that danceability and speechiness in songs increased during the years.<br>\nValance as well has a small increasing trend by years and liveness and acousticness have a very wide range of values for the year 2021, and the mean looks quite high comparing to other years.","bd607693":"# Exploratory Data Analysis","d1ac4ef1":"- According to these results the TOP 100 spotify songs are characterized by:\n    - Quite high popularity, danceability, energy and valance\n    - Quite low values of liveness, acousticness and speechiness.<br>\n- Among the 64 artists in the dataset:\n    - 45 artists have just one song in the top 100. \n    - In pa Ed Sheeran has 5 distinct songs in the top 100.\n    - Post Malone has 7 distinct songs in the top 100.\n    - The Weeknd and Imagine Dragons have 4 distinct songs in the top 100.\n- Therea re some similarities between Ed Sheeran and Post Malone songs, with very low values of speechiness and other values similar to the other artists. <br>In case of The Weeknd, we can see very low values of liveness compared to the other artists in the dataset.","718ff3e7":"These 4 songs will be removed from the dataset, in order to improve the readability of the next plots.","8b1ca92a":"**From these plots, we can see some similarities between Ed Sheeran and Post Malone songs, with very low values of speechiness and other values similar to the other artists.<br> In case of The Weeknd, we can see very low values of liveness compared to the other artists in the dataset.**","703f6998":"<img src=\"https:\/\/i.imgur.com\/olHiv7G.png\">","02058a4c":"**The following notebook is about the analysis of Spotify TOP 100 streamed songs in order to find interesting patterns between these top songs.**","e3e73cc6":"There are some outliers, identified by a release year prior to 2010.","21507c48":"**We can see that 45 artists out of 64 just have just one song in the top 100, while 2 have 5 and 7 songs respecitvely.**"}}