{"cell_type":{"f062d1bf":"code","4547e0dc":"code","56acf6cb":"code","95993671":"code","5f6520f9":"code","5defd92e":"code","75d9bd06":"code","026aeb1c":"code","479177bb":"code","eba6b0f6":"code","6ef995ad":"code","6d1e20cf":"code","111d28c9":"code","880f9b12":"code","c263008b":"code","8f3ef741":"code","6c4cf96b":"code","6e08d05c":"code","d051eb30":"code","2ce3abf2":"code","08ee25e6":"code","13838945":"code","e00601e9":"code","3b86c5e4":"code","ec121997":"code","910d81a3":"code","451f0bc0":"code","e37a391c":"code","f61f818f":"markdown","915ca0f3":"markdown","1e136e71":"markdown","27c76ad4":"markdown","6baad130":"markdown","8abb3af0":"markdown"},"source":{"f062d1bf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4547e0dc":"df=pd.read_csv(\"..\/input\/gufhtugu-publications-dataset-challenge\/GP Orders - 5.csv\")","56acf6cb":"df.head()","95993671":"df.shape","5f6520f9":"df.tail()","5defd92e":"df.describe()","75d9bd06":"df.dtypes","026aeb1c":"df.corr()","479177bb":"df.isnull()","eba6b0f6":"df.columns","6ef995ad":"df.columns = ['order_no', 'order_status', 'book_name', 'order_date', 'city', 'payment_method', 'Items', 'weight']","6d1e20cf":"df.head()","111d28c9":"df.info()","880f9b12":"df['order_status'].unique()","c263008b":"df['book_name'].unique()","8f3ef741":"df['city'].unique()","6c4cf96b":"df.isnull().sum()","6e08d05c":"df.dropna(inplace=True)","d051eb30":"df.isnull().sum()","2ce3abf2":"df.order_no.value_counts()","08ee25e6":"df.order_status.value_counts()","13838945":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","e00601e9":"df.order_status.value_counts().to_frame().style.bar()","3b86c5e4":"sns.countplot(x='order_status',data=df)","ec121997":"from itertools import chain\nlens = df['book_name'].str.split('\/').map(len)\ndf = pd.DataFrame({'order_no': np.repeat(df['order_no'], lens),'order_status': np.repeat(df['order_status'], lens),\n                    'book_name': chainer(df['book_name']),'order_date': np.repeat(df['order_date'], lens),'city': np.repeat(df['city'], lens)})\ndf.reset_index(inplace=True,drop=True)\ndf","910d81a3":"sns.countplot(x='book_name',data=df)","451f0bc0":"df.book_name.explode().value_counts()[:10].plot.bar()\n","e37a391c":"df.city.value_counts()[:10].plot.bar()","f61f818f":"# last five values of data","915ca0f3":"# See the rows and columns","1e136e71":"# checking the null values","27c76ad4":"# Top selling books","6baad130":"# changing the column name","8abb3af0":"# city wise selling books"}}