{"cell_type":{"fb2e3347":"code","d723d1e7":"code","9a2475b4":"code","4d14ab0c":"code","e772da3e":"code","a6828617":"code","db70a8f3":"code","9ac9c7c1":"code","7b7abc2a":"code","79acffef":"code","7945cccc":"code","160a33ff":"code","dff625fc":"code","f2fec996":"code","6ef0dff9":"code","58371da5":"code","1fda43ed":"code","b497a0a0":"code","5b9a0f21":"code","2fb60f50":"code","41bdb99c":"code","b5c0a613":"code","3714d12b":"code","36e6f425":"code","46897361":"markdown","640eb377":"markdown","038cad65":"markdown","6a46b570":"markdown","a10f1753":"markdown","66d74be7":"markdown","a64638ed":"markdown","5ddb7ade":"markdown","6fabd094":"markdown","17815983":"markdown","7fcce4b9":"markdown"},"source":{"fb2e3347":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d723d1e7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn import tree\nfrom ipykernel import kernelapp as app\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom matplotlib import rcParams","9a2475b4":"#loading the csv\ndf=pd.read_csv(\"\/kaggle\/input\/crop-prediction\/AgrcultureDataset.csv\",encoding = \"ISO-8859-1\")\ndf.dtypes","4d14ab0c":"#indian agricultural production dataset\ndf.head()","e772da3e":"#converting production to numeric type\ndf['Production']=pd.to_numeric(df['Production'],errors='coerce')","a6828617":"#grouping area and production for each year by mean\ndata=df.groupby(['Crop_Year'])['Area','Production'].mean()\ndata=data.reset_index(level=0, inplace=False)\ndata","db70a8f3":"#calulation cpi(  )\n\n\ndata['CPI']=data['Production']\/data['Area']\ndata.head()","9ac9c7c1":"data.describe()","7b7abc2a":"#boxplot plotting\nimport seaborn as sns\nsns.boxplot(x=data['CPI'])","79acffef":"data = data[np.isfinite(data['CPI'])]\ndata=data[data.CPI >43]\ndata=data[data.CPI <51]\ndata.set_index('Crop_Year')\ndata","7945cccc":"#plotting histogram\ndata.hist()","160a33ff":"corrmat = data.corr()\nf, ax = plt.subplots(figsize=(12, 9))\nsns.heatmap(corrmat, vmax=.8, square=True);","dff625fc":"#scatterplot\nsns.set()\ncols = ['Crop_Year', 'Area', 'Production', 'CPI']\nsns.pairplot(data[cols], size = 2.5)\nplt.show();","f2fec996":"#comparison of production and area for each year\nx_axis=data.Crop_Year\ny_axis=data.Area\n\ny1_axis=data.Production\n\nplt.plot(x_axis,y_axis)\nplt.plot(x_axis,y1_axis,color='r')\n\nplt.title(\"Production and area \")\nplt.legend([\"Production \",\"Area\"])\nplt.show()","6ef0dff9":"#plotting of production\nx_axis=data.Crop_Year\ny1_axis=data.Production\n\n\n\nplt.plot(x_axis,y1_axis)\n\nplt.title(\"Year vs Production \")\nplt.legend([\"Year \",\"Production\"])\nplt.show()","58371da5":"#importing random forest regressor\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import train_test_split\n# from sklearn.cross_validation import train_test_split","1fda43ed":"#splitting and fitting of the model\nx=data.iloc[:,0:1].values\ny=data.iloc[:,3].values\nregressor=RandomForestRegressor(n_estimators=12,random_state=0,n_jobs=1,verbose=13)\n\nregressor.fit(x,y)","b497a0a0":"#predicting for the test values\ny_pred=regressor.predict(x)\ny_pred","5b9a0f21":"#random forest steps plotting\nx_grid=np.arange(min(x),max(x),0.001)\nx_grid=x_grid.reshape(len(x_grid),1)\nplt.scatter(x,y,color='r')\nplt.plot(x_grid,regressor.predict(x_grid),color='b')\na=plt.show()\na","2fb60f50":"sns.distplot(data['CPI'], hist=True, kde=True, \n             bins=int(180\/5), color = 'darkblue',\n             kde_kws={'linewidth': 4})","41bdb99c":"sns.distplot(data['Area'], hist=True, kde=True, \n             bins=int(180\/5), color = 'darkblue', \n             hist_kws={'edgecolor':'black'},\n             kde_kws={'linewidth': 4})","b5c0a613":"sns.distplot(data['Production'], hist=True, kde=True, \n             bins=int(180\/5), color = 'darkblue', \n             hist_kws={'edgecolor':'black'},\n             kde_kws={'linewidth': 4})\n\n\n\n","3714d12b":"sns.distplot(data['Crop_Year'], hist=True, kde=True, \n             bins=int(180\/5), color = 'darkblue', \n             hist_kws={'edgecolor':'black'},\n             kde_kws={'linewidth': 4})","36e6f425":"#actual and predicted values\ndm = pd.DataFrame({'Actual': y, 'Predicted': y_pred}).reset_index()\nx_axis=dm.index\ny_axis=dm.Actual\ny1_axis=dm.Predicted\nplt.plot(x_axis,y_axis)\nplt.plot(x_axis,y1_axis)\nplt.title(\"Actual vs Predicted\")\nplt.legend([\"actual \",\"predicted\"])\nb=plt.show()\nb","46897361":"# discriptive analysis","640eb377":"# plotting histogram","038cad65":"\n#  DENSITY PLOTS","6a46b570":"# regression model","a10f1753":"# Data preparation and encoding","66d74be7":"# Box plots","a64638ed":"# My tasks to do\n\n\n                           # Get Descriptive stats\n                           # Perform correlations\n                           # histograms\n                           # box plots\n                           # scatter plots\n                           # density plots\n                           # linear regression model\n\n","5ddb7ade":"# Scatter plots ","6fabd094":"# importing libraries  ","17815983":"#  Data Importing","7fcce4b9":"# Applying random forest"}}