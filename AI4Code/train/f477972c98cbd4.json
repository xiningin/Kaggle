{"cell_type":{"2946cdf4":"code","6d5217ff":"code","718282e8":"code","97f7fffc":"code","3803670b":"code","40f66b5f":"code","1fc395a2":"code","c29d5dcc":"code","efaa4c1d":"code","aeef2d3d":"code","265aa202":"code","4b711451":"code","d98e92af":"code","750a5c93":"code","8f414482":"code","de982121":"code","dabc52b3":"code","d5c63e72":"code","fcc8f37a":"code","4993c76a":"code","12e1fff5":"code","4e137900":"code","8510fac6":"code","d9eea42d":"code","5e471c70":"code","19702c85":"code","fd9f3e1c":"code","65f1f0f5":"code","434f91f8":"code","51a5a254":"code","b6f65d56":"code","c8f47869":"code","a1fa9653":"code","f438c3b1":"code","60c73ad0":"code","14dfc858":"code","088f4235":"code","4c409966":"code","d1f8f066":"code","83c8753e":"code","c144a20f":"code","70e518e6":"code","4dadf2e1":"code","0a0c6009":"code","96c2740a":"code","c75bf0a0":"code","a052c690":"code","6e759de6":"code","772e62c4":"markdown","2173a182":"markdown","9bcebe21":"markdown","c9c6bac5":"markdown","f2acdf36":"markdown","1d881785":"markdown","5f4ff3c9":"markdown","5138a53c":"markdown","f48be722":"markdown","78702c3c":"markdown","4ee7ebf3":"markdown","ab725215":"markdown","5e30fca6":"markdown","b81ff821":"markdown","6c19f96e":"markdown","5d766345":"markdown","ffcad884":"markdown","49ec94ce":"markdown","d4aa32fa":"markdown","e37032c1":"markdown","4088cab9":"markdown","39149d3a":"markdown","f8ed481f":"markdown","7d17b277":"markdown","b3adb47a":"markdown","419be9cd":"markdown","eabbf46a":"markdown","45084952":"markdown","30307f9c":"markdown","521c309e":"markdown","b4af6b56":"markdown","8af0fd5b":"markdown","4cc81a94":"markdown","8f2fcaae":"markdown","9f1c590a":"markdown","29e63e04":"markdown","1f64a3bf":"markdown","c20d7b9a":"markdown","18453c94":"markdown","fd605593":"markdown"},"source":{"2946cdf4":"#Gerekli K\u00fct\u00fcphanelerin Y\u00fcklenmesi Yap\u0131l\u0131yor\n\nimport numpy as np # Lineer cebir i\u015flemleri i\u00e7in\nimport pandas as pd # Veri i\u015fleme\n\n#G\u00f6rselle\u015ftirme\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n#Makine \u00d6\u011frenmesi\nfrom sklearn.preprocessing import LabelEncoder, MinMaxScaler, StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import KFold\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nfrom sklearn.metrics import accuracy_score, confusion_matrix,classification_report\n\n#Sistem\nimport os\nimport warnings\n\n#Uyar\u0131lar devre d\u0131\u015f\u0131 b\u0131ral\u0131l\u0131yor\nwarnings.filterwarnings('ignore')\nprint(os.listdir(\"..\/input\"))\n","6d5217ff":"dataset_raw=pd.read_csv(\"..\/input\/add.csv\")\ndataset_raw.head(5)","718282e8":"#Unnamed: 0 s\u00fctununu veri setinden \u00e7\u0131kart\u0131l\u0131r\ndataset_raw.drop('Unnamed: 0',inplace=True, axis=1)\n#0, 1, 2, 3 ve 1558 ba\u015fl\u0131kl\u0131 s\u00fctunlar s\u0131ras\u0131yla height, width, ratio, local ve target\n#olarak de\u011fi\u015ftirilir\ndataset_raw.rename(columns={'0':'height', '1':'width', '2':'ratio(width\/height)','3':'local', '1558':'target'}, inplace=True)\n\ndataset_raw.head(5)","97f7fffc":"#??? i\u00e7eren de\u011ferler 'nan' ile doldurulur\ndataset=dataset_raw.applymap(lambda x:np.nan if isinstance(x,str) and '?' in x else x)\n\n#eksik bilgi i\u00e7eren \u00f6zellikler bulunur\n\nresults=dataset.iloc[:,:].isnull().sum()","3803670b":"null_columns=[]\nfor index, value in results.iteritems():\n    if value !=0:\n        print(\"{} : {}\".format(index, value))\n        null_columns.append(index)","40f66b5f":"#Yukar\u0131daki h\u00fccrede elde edilen sonu\u00e7lar\u0131 daha basit\u00e7e elde ediliyor.\nprint(results[results>0])","1fc395a2":"dataset[null_columns].info()","c29d5dcc":"label_encoder=LabelEncoder()\ndataset['target']=label_encoder.fit_transform(dataset['target'])\ndataset[null_columns]=dataset[null_columns].astype('float')\ndataset[null_columns].info()","efaa4c1d":"print(\"0-->{} ve 1-->{}\".format(label_encoder.inverse_transform([0])[0],\n                                label_encoder.inverse_transform([1])[0]))","aeef2d3d":"#T\u00fcm eksik sat\u0131rlar\u0131 g\u00f6stermek yerine, birka\u00e7 eksik sat\u0131r\u0131 g\u00f6r\u00fcnt\u00fcleyelim\n#10, 24 ve 72 sat\u0131rlar\u0131 eksik bilgiler i\u00e7ermektedir.\n#Bu sat\u0131rlar\u0131 g\u00f6relim.\ndataset.iloc[[10,24,72]]","265aa202":"# height, width ve ratio s\u00fct\u00fcnlar\u0131nda yer alan eksik bilgiler s\u00fct\u00fcnun ortalamas\u0131 ile doldurulur\ndataset.iloc[:,0:3]=dataset.iloc[:,0:3].fillna(dataset.iloc[:,0:3].dropna().mean())\n\n# local s\u00fct\u00fcnundaki eksik bilgiler en cok olan kategori ile doldurulur\ndataset['local']=dataset['local'].fillna(dataset['local'].dropna().mode()[0])","4b711451":"#T\u00fcm eksik bilgiler doldurulmu\u015ftur\n#Eksik bilgiler doldurulduktan sonra 10, 24 ve 72 numaral\u0131 sat\u0131rlar\u0131 g\u00f6relim\ndataset.iloc[[10,24,72]]","d98e92af":"dataset[null_columns].info()","750a5c93":"from yellowbrick.features import Rank1D\n\nchecked_X=dataset[null_columns]\nchecked_y=dataset['target']\n\nfig, ax=plt.subplots(figsize=(15,8))\nrank1D=Rank1D(features=null_columns, \n              algorithm=\"shapiro\",\n             ax=ax)\n\nrank1D.fit(checked_X, checked_y)\nrank1D.transform(checked_X)\n\nplt.figure(figsize=(5,8))\nrank1D.poof(title=\"ben\")","8f414482":"from yellowbrick.features import RadViz\n\nfig, ax=plt.subplots(figsize=(15,8))\nradViz=RadViz(classes=['ad', 'nonad'], \n              features=null_columns,\n             ax=ax\n             )\nradViz.fit(checked_X, checked_y)\nradViz.transform(checked_X)\n\nradViz.poof()","de982121":"from yellowbrick.features import ParallelCoordinates\nfig, ax=plt.subplots(1, figsize=(15,8))\nparallelCoordinates=ParallelCoordinates(classes=['ad', 'nonad'],\n                                       features=null_columns, \n                                        sample=0.5, \n                                        shuffle=True,\n                                        normalize=\"standard\",\n                                       ax=ax)\n\nparallelCoordinates.fit(checked_X, checked_y)\nparallelCoordinates.transform(checked_X)\n\n\nparallelCoordinates.poof()","dabc52b3":"# ad ve nonad s\u0131n\u0131flar\u0131n\u0131n da\u011f\u0131l\u0131m\u0131\nprint(dataset['target'].value_counts())\nsns.countplot(dataset['target'])","d5c63e72":"def draw_multivarient_plot(dataset, rows, cols, plot_type):\n    column_names=dataset.columns.values\n    number_of_column=len(column_names)\n    fig, axarr=plt.subplots(rows,cols, figsize=(16,10))\n\n    counter=0\n    for i in range(rows):\n        for j in range(cols):\n             \n            if counter>(number_of_column-1):\n                break\n            if 'violin' in plot_type:\n                sns.violinplot(x='target', y=column_names[counter],data=dataset, ax=axarr[i][j])\n            elif 'box'in plot_type :\n                sns.boxplot(x='target', y=column_names[counter],data=dataset, ax=axarr[i][j])\n            elif 'point' in plot_type:\n                sns.pointplot(x='target',y=column_names[counter],data=dataset, ax=axarr[i][j])\n            elif 'bar' in plot_type:\n                sns.barplot(x='target',y=column_names[counter],data=dataset, ax=axarr[i][j])\n                \n            counter+=1","fcc8f37a":"columns_for_visualization=null_columns + ['target']\nprint(columns_for_visualization)\ndraw_multivarient_plot(dataset[columns_for_visualization],rows=2,cols=3,plot_type=\"box\")","4993c76a":"draw_multivarient_plot(dataset[columns_for_visualization],rows=2,cols=3,plot_type=\"violin\")","12e1fff5":"draw_multivarient_plot(dataset[columns_for_visualization],rows=2,cols=3,plot_type=\"point\")","4e137900":"# \u00f6zelliklerin birbirleriyle olan ili\u015fkisini korelasyon matrisi kullanarak g\u00f6sterebiliriz. \ncorr=dataset[columns_for_visualization].corr()\nfig, ax = plt.subplots(figsize=(12,12))\nsns.heatmap(corr,annot=True,linewidths=.5, ax=ax)","8510fac6":"# \u00f6zelliklerin birbirleriyle olan ili\u015fkisini pairplot kullanarak g\u00f6sterebiliriz. \nsns.pairplot(dataset[columns_for_visualization], hue=\"target\", markers=[\"o\", \"s\"])","d9eea42d":"def get_models():\n    models=[]\n    models.append(('LDA', LinearDiscriminantAnalysis()))\n    models.append((\"LR\",LogisticRegression()))\n    models.append((\"NB\",GaussianNB()))\n    models.append((\"KNN\",KNeighborsClassifier(n_neighbors = 3)))\n    models.append((\"DT\",DecisionTreeClassifier()))\n    models.append((\"SVM rbf\",SVC()))\n    models.append((\"SVM linear\",SVC(kernel='linear')))\n    \n    return models","5e471c70":"def cross_validation_scores_for_various_ml_models(X_cv, y_cv):\n    print(\"\u00c7apraz Do\u011frulama Ba\u015far\u0131 Oranlar\u0131\".upper())\n    models=get_models()\n    results=[]\n    names= []\n\n    for name, model in models:\n        kfold=KFold(n_splits=5,shuffle=True, random_state=22)\n        cv_result=cross_val_score(model,X_cv, y_cv, cv=kfold,scoring=\"accuracy\")\n        names.append(name)\n        results.append(cv_result)\n        print(\"{} modelinin \u00e7apraz do\u011frulamas\u0131 yap\u0131ld\u0131, ba\u015far\u0131 oran\u0131:{:0.2f}\".format(name, cv_result.mean()))\n\ndef cross_validate(dataset, target_name):\n    X=dataset.drop(target_name, axis=1)\n    y=dataset[target_name]\n\n    X=StandardScaler().fit_transform(X)\n    \n    #labelEncoder=LabelEncoder()\n    #y=labelEncoder.fit_transform(y)\n\n    cross_validation_scores_for_various_ml_models(X, y)","19702c85":"cross_validate(dataset=dataset, target_name=\"target\")","fd9f3e1c":"def SVM_GridSearch(dataset, target_name):\n    X=dataset.drop(target_name, axis=1)\n    X=StandardScaler().fit_transform(X)\n    \n    y=dataset[target_name]\n    X_train, X_test, y_train, y_test=train_test_split(X, y, test_size=0.3, random_state=42)\n    best_score=0\n    gammas=[0.001, 0.01, 0.1, 1, 10, 100]\n    Cs=[0.001, 0.01, 0.1, 1, 10, 100]\n    kernels=['rbf', 'linear']\n    \n    for gamma in gammas:\n        for C in Cs:\n            for kernel in kernels:\n                svm=SVC(kernel=kernel,gamma=gamma, C=C)\n                svm.fit(X_train, y_train)\n\n\n                score=svm.score(X_test, y_test)\n\n                if score>best_score:\n                    y_pred=svm.predict(X_test)\n                    best_score=score\n                    best_params={'kernel':kernel, 'C':C, 'gamma':gamma}\n        \n    print(\"best score:\",best_score)\n    print(\"best params:\",best_params)\n    print(\"classification reports:\\n\",classification_report(y_test, y_pred))","65f1f0f5":"# bu i\u015flem 10 dakkika kadar s\u00fcrmektedir\n#SVM_GridSearch(dataset=dataset, target_name='target')\n# Elde edilen en iyi parametreler;\n# best params: {'kernel': 'linear', 'C': 0.01, 'gamma': 0.001}","434f91f8":"def SVC_use_best_params(X, y):\n    X_train, X_test, y_train, y_test=train_test_split(X, y, test_size=0.3, random_state=42)\n\n    svm=SVC(kernel='linear',gamma= 0.001, C=0.01)\n    svm.fit(X_train, y_train)\n    \n    score=svm.score(X_test, y_test)\n    y_pred=svm.predict(X_test)\n    \n    print(\"Ba\u015far\u0131 oran\u0131:{:.2f}\".format(score))\n    print(\"classification reports:\\n\",classification_report(y_test, y_pred))","51a5a254":"X=dataset.drop('target', axis=1)\nX=StandardScaler().fit_transform(X)\n    \ny=dataset['target']\n\nSVC_use_best_params(X, y)\n","b6f65d56":"from yellowbrick.classifier import ROCAUC","c8f47869":"X_train, X_test, y_train, y_test=train_test_split(X, y, test_size=0.3, random_state=42)\n\nprint(X_train.shape,X_test.shape)\nprint(y_train.shape, y_test.shape)","a1fa9653":"fig, ax=plt.subplots(1,1,figsize=(12,8))\n\nbest_clf=SVC(kernel='linear',gamma= 0.001, C=0.01)\n\nroc_auc=ROCAUC(best_clf, ax=ax)\n\nroc_auc=ROCAUC(best_clf, ax=ax)\nroc_auc.fit(X_train, y_train)\n\n\"\"\"\nBu k\u0131s\u0131smda sebebini anlayamad\u0131\u011f\u0131m bir hata veriyor. Bu nedenle pasif hale getirdim\n\"\"\"\n#roc_auc.score(X_test, y_test)\n\nroc_auc.poof()","f438c3b1":"import mglearn","60c73ad0":"mglearn.plots.plot_pca_illustration()","14dfc858":"from sklearn.decomposition import PCA\n\npca=PCA(n_components=2)\npca.fit(X)\n\nX_pca=pca.transform(X)\nprint(\"PCA d\u00f6n\u00fc\u015f\u00fcm\u00fc yap\u0131ld\u0131\")","088f4235":"print(\"Verinin orijinal boyutu:{}\".format(X.shape))\nprint(\"D\u00f6n\u00fc\u015f\u00fcmden sonraki boyutu:{}\".format(X_pca.shape))","4c409966":"plt.figure(figsize=(8,8))\nplt.scatter(X_pca[:,0],X_pca[:,1], c=y,s=60)\nplt.gca().set_aspect('equal')\nplt.xlabel(\"Birinci Temel Bile\u015fen\")\nplt.ylabel(\"\u0130kinci Temel Bile\u015fen\")\nplt.show()","d1f8f066":"SVC_use_best_params(X_pca, y)","83c8753e":"pca=PCA()\npca.fit(X)\nplt.figure(1, figsize=(12,8))\nplt.clf()\nplt.axes([.2, .2, .7, .7])\nplt.plot(pca.explained_variance_, linewidth=2)\nplt.axis('tight')\nplt.xlabel('Bile\u015fen Say\u0131s\u0131')\nplt.ylabel('Orijinal Veriyle Temsil Fark\u0131')\nplt.show()","c144a20f":"pca=PCA(n_components=200)\npca.fit(X)\nX_pca=pca.transform(X)\nprint(\"PCA d\u00f6n\u00fc\u015f\u00fcm\u00fc ger\u00e7ekle\u015ftirildi\")","70e518e6":"print(\"Verinin orijinal boyutu:{}\".format(X.shape))\nprint(\"D\u00f6n\u00fc\u015f\u00fcmden sonraki boyutu:{}\".format(X_pca.shape))","4dadf2e1":"SVC_use_best_params(X_pca, y)","0a0c6009":"from sklearn.pipeline import Pipeline","96c2740a":"pca=PCA(n_components=200)\nclf=SVC(kernel='linear',gamma= 0.001, C=0.01)\npipeline=Pipeline([(\"pca\",pca), (\"svm\", clf)])\nprint(\"Pipeline  olu\u015fturuldu...\")","c75bf0a0":"pipeline.fit(X_train, y_train)\nprint(\"Pipeline e\u011fitildi...\")","a052c690":"y_pred=pipeline.predict(X_test)\nprint(\"Pipeline ile test verileri \u00fczerinde tahmin yap\u0131ld\u0131...\")","6e759de6":"print(\"Ba\u015far\u0131 oran\u0131:{:.2f}\".format(accuracy_score(y_test, y_pred)))","772e62c4":"<a class=\"anchor\" id=\"5.5.\"><\/a>**5.5. En \u0130yi Sonu\u00e7 Veren SVC Parametrelerinin Elde Edilmesi**<=======> [\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)","2173a182":"<a class=\"anchor\" id=\"5.4.\"><\/a>**5.4. Yard\u0131mc\u0131 Fonksiyon: SVM_GridSearch()**<=======> [\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)","9bcebe21":"**Yapaca\u011f\u0131n\u0131z yorumlar i\u00e7in \u015fimdiden te\u015fekk\u00fcr ederim. \u00c7al\u0131\u015fmay\u0131 be\u011fenirseniz oylamay\u0131 unutmay\u0131n l\u00fctfen. Sorulara elimden geldi\u011fi kadar\u0131yla cevap vermeye \u00e7al\u0131\u015faca\u011f\u0131m. \u00c7al\u0131\u015fmada; sorulara ve geri bildirimlere g\u00f6re d\u00fczeltme ve ekleme yapaca\u011f\u0131m.**\n\n**Yapaca\u011f\u0131n\u0131z yorumlar, \u00e7al\u0131\u015fman\u0131n daha iyi ve anla\u015f\u0131l\u0131r olmas\u0131n\u0131 sa\u011flayacakt\u0131r. **","c9c6bac5":"<a class=\"anchor\" id=\"4.6.\"><\/a>**4.9. \u00d6zelliklerin Birbirleriyle Olan Korelasyonu**<=======> [\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)","f2acdf36":"[\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)\n\n# <a class=\"anchor\" id=\"1.\"><\/a>**1. \u00c7al\u0131\u015fman\u0131n \u00d6zeti** \n\nBu \u00e7al\u0131\u015fmada web sayfalar\u0131ndaki reklam ve reklam olmayan resimlerin s\u0131n\u0131fland\u0131r\u0131lmas\u0131 **meta verilere** g\u00f6re yap\u0131lm\u0131\u015ft\u0131r. \u00c7al\u0131\u015fman\u0131n \u00f6zeti \u015f\u00f6yledir:\n1. Veri setinin y\u00fcklenmesi\n1. \u00d6n i\u015flemlerin yap\u0131lmas\u0131\n1. Veri setinin g\u00f6rselle\u015ftirilmesi\n1. Normalizasyon yap\u0131lmas\u0131\n1. Farkl\u0131 s\u0131n\u0131fland\u0131r\u0131c\u0131lara g\u00f6re \u00e7apraz do\u011frulama sonu\u00e7lar\u0131n\u0131n elde edilmesi\n1. \u00c7apraz do\u011frulamas\u0131 en iyi sonucun optimizasyonun yap\u0131lmas\u0131\n1. PCA veri boyutunun azalt\u0131lmas\u0131\n1. PCA ile azalt\u0131lan veriler \u00fczerinde s\u0131n\u0131fland\u0131rma yap\u0131lmas\u0131\n1. Pipeline ile makine ak\u0131\u015f\u0131n\u0131n otomatikle\u015ftirilmesi\n1. Modelin daha sonra kullan\u0131m\u0131 i\u00e7in kaydedilmesi ve yeniden y\u00fcklenmesi i\u015flemleri\n\n","1d881785":"<a class=\"anchor\" id=\"3.3.\"><\/a>**3.3. Eksik Bilgiler Dolduruluyor** <=======> [\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)\n\nEksik bilgiler i\u00e7eren \u00f6zellik s\u00fctunlar\u0131ndaki eksik bilgileri doldural\u0131m. Eksik bilgilerin doldurulmas\u0131 \u015f\u00f6yle yap\u0131lacakt\u0131r:\n* **height, width** ve **ratio(width\/height)** \u00f6zellikleri, noktal\u0131 de\u011ferler i\u00e7erdi\u011fi i\u00e7in, ilgili s\u00fctunun ortalamas\u0131 ile doldurulacakt\u0131r. \n* **local** \u00f6zelli\u011fi kategorik de\u011fer i\u00e7erdi\u011fi i\u00e7in en s\u0131k olan de\u011ferle doldurulacakt\u0131r.","5f4ff3c9":"# <a class=\"anchor\" id=\"0.\"><\/a>**\u0130\u00e7indekiler**\n\n* [1. \u00c7al\u0131\u015fman\u0131n \u00d6zeti](#1.)\n* [2. Veri Seti Hakk\u0131nda Teknik ve Ba\u011flamsa De\u011ferlendirme](#2.)\n* [3. Eksik Bilgilerin Doldurulmas\u0131 \u0130\u00e7in Yap\u0131lan \u0130\u015flemler](#3.)\n* * [3.1. Baz\u0131 S\u00fct\u00fcnlar\u0131n Yeniden Adland\u0131r\u0131lmas\u0131](#3.1.)\n* * [3.1. ??? De\u011ferlerinin nan De\u011feriyle De\u011fi\u015ftirilmesi](#3.2.)\n* * [3.2. Eksik Bilgiler Dolduruluyor](#3.3.)\n* [4. Veri Setinin Grafiklerle \u0130ncelenmesi](#4.)\n* * [4.1. height, width, ratio ve local \u00d6zelliklerinin \u00d6nem S\u0131ras\u0131](#4.1e1.)\n* * [4.2. RadViz G\u00f6rselle\u015ftirmesi](#4.1e2.)\n* * [4.3. Paralel Kordinatlar](#4.1e3.)\n* * [4.4. S\u0131n\u0131f Da\u011f\u0131l\u0131mlar\u0131](#4.1.)\n* * [4.5. Yard\u0131mc\u0131 Fonksiyon:draw_multivarient_plot()](#4.2.)\n* * [4.6. Box Plot](#4.3.)\n* * [4.7. Violin Plot](#4.4.)\n* * [4.8. Point Plot](#4.5.)\n* * 4.9. [\u00d6zelliklerin Birbirleriyle Olan Korelasyonu](#4.6.)\n* * [4.10. \u00d6zelliklerin Birbirleriyle Olan \u0130li\u015fkileriinin Pair Plot \u0130le G\u00f6sterimi](#4.7.)\n* [5. Makine \u00d6\u011frenmesi Modellerinin Kullan\u0131lmas\u0131](#5.)\n* * [5.1. Kullan\u0131lacak Makine \u00d6\u011frenmesi Modelleri](#5.1.)\n* * [5.2. Yard\u0131mc\u0131 Fonksiyonlar:cross_validation_scores-for_various_ml_models()](#5.2.)\n* * [5.3. \u00c7apraz Do\u011frulama Sonu\u00e7lar\u0131](#5.3.)\n* * [5.4. Yard\u0131mc\u0131 Fonksiyon:SVM_GridSearch()](#5.4.)\n* * [5.6. En \u0130yi Sonu\u00e7 Veren SVC Parametrelerinin Elde Edilmesi](#5.5.)\n* * [5.7. En \u0130yi SVC Parametrelerine G\u00f6re Elde Edilen Sonu\u00e7lar](#5.6.)\n* * [5.8. ROC ve AUC](#5.7.)\n* [6. Denetimsiz \u00d6\u011frenme](#6.)\n* * [6.1. Temel Bile\u015fen Analizi(PCA)](#6.1.)\n* * [6.2. PCA D\u00f6n\u00fc\u015f\u00fcm\u00fcn\u00fcn Ger\u00e7ekle\u015ftirilmesi](#6.2.)\n* * [6.3. PCA De\u011ferlerinin G\u00f6rselle\u015ftirilmesi](#6.3.)\n* * [6.4. Sadece \u0130ki PCA Bile\u015feniyle Elde Edilen Sonu\u00e7lar](#6.4.)\n* * [6.5. Optimum PCA Bile\u015fen Say\u0131s\u0131n\u0131n Belirlenmesi](#6.5.)\n* * [6.6. Optimum PCA Bile\u015fen Say\u0131s\u0131na G\u00f6re Sonu\u00e7lar](#6.6.)\n* [7. Makine \u00d6\u011frenmesi \u0130\u015f Ak\u0131\u015f\u0131n\u0131n Otomatikle\u015ftirilmesi](#7.)\n* [8. Makine \u00d6\u011frenmesi Modelinin Kaydedilmesi ve Y\u00fcklenmesi](#8.)","5138a53c":"[\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)\n\n# <a class=\"anchor\" id=\"4.\"><\/a>**4. Veri Setinin Grafiklerle \u0130ncelenmesl**  \n\nBu b\u00f6l\u00fcmde, veri setinin grafiklerle incelenmesi yap\u0131lacakt\u0131r.  Yap\u0131lacak i\u015flemler \u015f\u00f6yledir:\n* height, width, ratio ve local \u00f6zelliklerinin \u00f6nem dereceleri g\u00f6sterilecektir\n* RadViz ile d\u00f6rt \u00f6zelli\u011fin hedef de\u011fi\u015fkene g\u00f6re da\u011f\u0131l\u0131m\u0131 tekbir grafikte g\u00f6sterilecektir\n* Paralel koordinat grafi\u011fiyle yine, d\u00f6rt \u00f6zelli\u011fin hedef de\u011fi\u015fkene g\u00f6re da\u011f\u0131l\u0131m\u0131 tekbir grafikte g\u00f6sterilecektir. \n* ad ve nonad olan \u00f6rnek say\u0131s\u0131n\u0131n g\u00f6sterilmesi i\u00e7in countplot kullan\u0131lacakt\u0131r\n* height, width, ratio ve local \u00f6zelliklerinin ad ve nonad s\u0131n\u0131flar\u0131 ile ili\u015fkisi i\u00e7in violin, boxplot ve pointplot kullan\u0131lacakt\u0131r\n* height, width, ratio ve local \u00f6zelliklerinin bir birleri ile olan ili\u015fkisi i\u00e7in pairplot kullan\u0131lacakt\u0131r. ","f48be722":"<a class=\"anchor\" id=\"5.1.\"><\/a>**5.1. Kullan\u0131lacak Makine \u00d6\u011frenmesi Modelleri**<=======> [\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)","78702c3c":"<a class=\"anchor\" id=\"7.\"><\/a>**7. Makine \u00d6\u011frenmesi \u0130\u015f Ak\u0131\u015f\u0131n\u0131n Otomatikle\u015ftirilmesi**\n\nBu k\u0131sma Pipeline anlat\u0131m\u0131 ve kodlamas\u0131 gelecek...","4ee7ebf3":"Veri setindeki \u00f6zelliklerin kalite ile ili\u015fkilerini yorumlamak i\u00e7in kullan\u0131labilecek grafik t\u00fcrleri \u015f\u00f6yledir: Keman Grafi\u011fi (Violin Plot), Kutu Grafi\u011fi (Box Plot), Nokta Grafi\u011fi (Point Plot) ve Bar Grafi\u011fi (Bar Plot)","ab725215":"<a class=\"anchor\" id=\"6.5.\"><\/a>**6.5. Optimum PCA Bile\u015fen Say\u0131s\u0131n\u0131n Belirlenmesi** <=====>[\u0130\u00e7indekiler Men\u00fcs\u00fcneGit](#0.)","5e30fca6":"<a class=\"anchor\" id=\"6.4.\"><\/a>**6.4. Sadece \u0130ki PCA Bile\u015feniyle Elde Edilen Sonu\u00e7lar**<=====>[\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)","b81ff821":"<a class=\"anchor\" id=\"3.1.\"><\/a>**3.1. Baz\u0131 S\u00fct\u00fcnlar\u0131n Yeninden Adland\u0131r\u0131lmas\u0131** <=======> [\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)\n\nVeri setinde yer alan baz\u0131 \u00f6zellik s\u00fct\u00fcnlar\u0131n\u0131n adlar\u0131 daha anlaml\u0131 isimlerle de\u011fi\u015ftiriliyor. Yeni adland\u0131rmalar yukar\u0131da bahsedilen makalede yer alan bilgilere g\u00f6re yap\u0131lm\u0131\u015ft\u0131r. ","6c19f96e":"<a class=\"anchor\" id=\"5.7.\"><\/a>**5.7. ROC ve AUC**<=======> [\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)\n\nROCAUC (Receiver Operating Characteristic\/Area Under the Curve) grafi\u011fi, s\u0131n\u0131fland\u0131r\u0131c\u0131n\u0131n duyarl\u0131l\u0131\u011f\u0131 ve \u00f6zg\u00fcll\u00fc\u011f\u00fc aras\u0131ndaki fark\u0131n g\u00f6r\u00fcnmesini sa\u011flar.","5d766345":"<a class=\"anchor\" id=\"6.3.\"><\/a>**6.3. PCA De\u011ferlerinin G\u00f6rselle\u015ftirilmesi**<=====>[\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)","ffcad884":"<a class=\"anchor\" id=\"6.1.\"><\/a>**6.1. Temel Bile\u015fen Analizi**<======>[\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)\n\nTemel Bile\u015fen Analizi(Principle Component Analiysis(PCA)) verinin daha az boyutta temsil edilmesini sa\u011flayan bir y\u00f6ntemdir. Bu y\u00f6nteme g\u00f6re veri yeni bile\u015fenlere d\u00f6n\u00fc\u015ft\u00fcr\u00fcl\u00fcr ve en \u00f6nemli bile\u015fenler secilerek verinin boyutu azalt\u0131l\u0131r. ","49ec94ce":"[\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)\n\n# <a class=\"anchor\" id=\"5.\"><\/a>**5. Makine \u00d6\u011frenmesi Modellerinin Kullan\u0131lmas\u0131** ","d4aa32fa":"<a class=\"anchor\" id=\"3.2.\"><\/a>**3.2.  ??? De\u011ferlerinin nan De\u011feriyle De\u011fi\u015ftirilmesi** <=======> [\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)\n\nheight, width ve ratio s\u00fctunlar\u0131ndaki olmayan bilgiler  '???' i\u015faretiyle doldurulmu\u015ftur. '???' i\u015fareti, eksik de\u011fer oldu\u011funu g\u00f6stermektedir. Bu s\u00fctunlardaki \"???\" de\u011ferlerini nan de\u011ferleri ile de\u011fi\u015ftirelim ve ne kadar eksik de\u011fer oldu\u011funu bulal\u0131m.\n","e37032c1":"<a class=\"anchor\" id=\"8.\"><\/a>**8. Makine \u00d6\u011frenmesi Modelinin Kaydedilmesi ve Y\u00fcklenmesi**\n\nBu k\u0131sma Serialization anlat\u0131m\u0131 ve kodlamas\u0131 gelecek...","4088cab9":"<a class=\"anchor\" id=\"4.3.\"><\/a>**4.6. Box Plot**<=======> [\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)","39149d3a":"<a class=\"anchor\" id=\"4.1e2.\"><\/a>**4.2. RadViz G\u00f6rselle\u015ftirmesi** <=======> [\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)\n\nRadViz, her \u00f6zellik boyutunu bir dairenin \u00e7evresine e\u015fit olarak \u00e7izen, ard\u0131ndan dairenin i\u00e7 taraf\u0131ndaki noktalar\u0131 \u00e7izen, b\u00f6ylece merkezdeki de\u011ferlerini merkezden her bir yaya normalle\u015ftiren \u00e7ok de\u011fi\u015fkenli bir veri g\u00f6rselle\u015ftirme algoritmas\u0131d\u0131r. Bu mekanizma, g\u00f6rselle\u015ftirmenin boyutsall\u0131\u011f\u0131n\u0131 b\u00fcy\u00fck \u00f6l\u00e7\u00fcde geni\u015fleterek, bir daireye kolayca s\u0131\u011facak kadar \u00e7ok boyuta izin verir.\n\nVeri bilimcileri, s\u0131n\u0131flar aras\u0131ndaki ayr\u0131m\u0131 tespit etmek i\u00e7in bu y\u00f6ntemi kullan\u0131r. \u00d6rne\u011fin. \u00f6zellik setinden \u00f6\u011frenilebilecek bir \u015fey var m\u0131,  yoksa \u00f6zellik uzay\u0131 g\u00fcr\u00fclt\u00fcl\u00fc m\u00fc, gibi sorular\u0131n cevab\u0131n\u0131 bulmak i\u00e7in kullan\u0131labilir. ","f8ed481f":"<a class=\"anchor\" id=\"4.2\"><\/a>**4.5. Yard\u0131mc\u0131 Fonksiyon:draw_multivarient_plot()** <=======> [\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)","7d17b277":"<a class=\"anchor\" id=\"6.6.\"><\/a>**6.6. Optimum PCA Bile\u015fen Say\u0131s\u0131na G\u00f6re Sonu\u00e7lar** <=====>[\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)\n\nYukardaki \u015fekilde 200 ve daha fazla PCA bile\u015feninin veriyi ayn\u0131 \u00f6l\u00e7\u00fcde temsil etti\u011fi g\u00f6r\u00fclebiliyor. \u015eimdi 200 PCA bile\u015feni kullanarak s\u0131n\u0131fland\u0131rma i\u015flemi yapal\u0131m. ","b3adb47a":"<a class=\"anchor\" id=\"4.7.\"><\/a>**4.10. \u00d6zelliklerin Birbiryle Olan \u0130li\u015fkilerinin Pair Plot ile G\u00f6sterimi**<=======> [\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)","419be9cd":"<a class=\"anchor\" id=\"4.1e1.\"><\/a>**4.1. height, width, ratio ve local \u00d6zelliklerinin \u00d6nem S\u0131ras\u0131** <=======> [\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)","eabbf46a":"<a class=\"anchor\" id=\"4.5.\"><\/a>**4.8. Point Plot**  <=======> [\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)","45084952":"<a class=\"anchor\" id=\"5.3.\"><\/a>**5.3. \u00c7apraz Do\u011frulama Sonu\u00e7lar\u0131**<=======> [\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)","30307f9c":"<a class=\"anchor\" id=\"5.2.\"><\/a>**5.2. Yard\u0131mc\u0131 Fonksiyonlar: cross_validation_scores_for_various_ml_models()**<=======> [\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)","521c309e":"[\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)\n\n# <a class=\"anchor\" id=\"6.\"><\/a>**6. G\u00f6zetimisiz \u00d6\u011frenme** \nYukar\u0131da yapt\u0131\u011f\u0131m\u0131z s\u0131n\u0131fland\u0131rma i\u015flemi, g\u00f6zetimli makine \u00f6\u011frenmesi yakla\u015f\u0131m\u0131d\u0131r. G\u00f6zetimli \u00f6\u011frenmede veri seti 'veri' ve '\u00e7\u0131kt\u0131' olmak \u00fczere iki ana b\u00f6l\u00fcme ayr\u0131l\u0131r. Veri, veri setindeki \u00f6rne\u011fin de\u011ferlerini tutarken '\u00e7\u0131kt\u0131' \u00f6rne\u011fin ait oldu\u011fu s\u0131n\u0131f\u0131(s\u0131n\u0131fland\u0131rma i\u00e7in) veya hedef de\u011feri(regresyon i\u00e7in) tutar. G\u00f6zetimsiz \u00f6\u011frenmede veri seti sadece veri b\u00f6l\u00fcm\u00fcnden olu\u015fur.\n\nG\u00f6zetimsiz \u00f6\u011frenme genelde ikiye ayr\u0131l\u0131r: verinin d\u00f6n\u00fc\u015ft\u00fcr\u00fclmesi ve k\u00fcmeleme. Bu \u00e7al\u0131\u015fmada g\u00f6zetimsiz \u00f6\u011frenme kullan\u0131larak verinin d\u00f6n\u00fc\u015ft\u00fcr\u00fclmesi ger\u00e7ekle\u015ftirilecektir. G\u00f6zetimsiz d\u00f6n\u00fc\u015ft\u00fcrme y\u00f6ntemleri verinin bilgisayarlar ve insanlar taraf\u0131ndan daha kolay yorumlanmas\u0131n\u0131 sa\u011flar.\n\nEn yayg\u0131n g\u00f6zetimli d\u00f6n\u00fc\u015f\u00fcm uygulamalar\u0131 veri boyutunun azalt\u0131lmas\u0131d\u0131r. Boyut azaltma i\u015fleminde \u00e7ok boyutlu veri daha az boyutla temsil edilir. \n","b4af6b56":"<a class=\"anchor\" id=\"6.2.\"><\/a>**6.2. PCA D\u00f6n\u00fc\u015f\u00fcm\u00fcn\u00fcn Ger\u00e7ekle\u015ftirilmesi**<=====>[\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)","8af0fd5b":"<a class=\"anchor\" id=\"5.6.\"><\/a>**5.6. En \u0130yi SVC Parametrelerine G\u00f6re Elde Edilen Sonu\u00e7lar**<=======> [\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)","4cc81a94":"Veri setindeki 10, 24 ve 72 sat\u0131rlarnda eksik bilgiler vard\u0131. Bu bilgiler ortalama ile doldurulmu\u015ftur. Null de\u011fer i\u00e7eren s\u00fct\u00fcnlar\u0131 kontrol edelim\n","8f2fcaae":"[\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)\n\n# <a class=\"anchor\" id=\"3.\"><\/a>**3. Eksik Bilgilerin Doldurulmas\u0131 \u0130\u00e7in Yap\u0131lan \u0130\u015flemler** \n\nVeri setinde eksik bilgi sadece d\u00f6rt \u00f6zellik s\u00fct\u00fcnunda vard\u0131r; height, width, ratio ve local. \u00d6nce eksik bilgi i\u00e7eren s\u00fct\u00fcnlar\u0131 tespit edelim ve sonra eksik bilgileri doldural\u0131m. ","9f1c590a":"[\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)\n\n# <a class=\"anchor\" id=\"2.\"><\/a>**2. Veri Seti Hakk\u0131nda Teknik ve Ba\u011flamsal De\u011ferlendirme**  \n\n* Veri seti 1558 \u00f6zellik s\u00fctunundan olu\u015fmaktad\u0131r. \n* 'Unnamed:0' ba\u015fl\u0131kl\u0131 s\u00fctun veri setindeki \u00f6rnekleri numaraland\u0131rmaktad\u0131r. Makine \u00f6\u011frenmesi modeli i\u00e7in bir anlam\u0131 olmad\u0131\u011f\u0131 i\u00e7in \u00e7\u0131kart\u0131lacakt\u0131r.\n\n* '0', '1' ve '2' ba\u015fl\u0131kl\u0131 s\u00fctunlarda web sayfas\u0131ndaki resmin y\u00fcksekli\u011fi, geni\u015fli\u011fi ve oran\u0131(geni\u015flik\/y\u00fckseklik) verilmektedir. \n* '3' ba\u015fl\u0131kl\u0131 s\u00fctun, web sayfas\u0131n\u0131n domaini ile resmin domain'inin  ayn\u0131 olup olmamas\u0131na g\u00f6steriyor; 1-->ayn\u0131 domain, 0--> farkl\u0131 domain \n* 1558 numaral\u0131 s\u00fctun, \u00f6zellik verkt\u00f6r\u00fcn\u00fcn ait oldu\u011fu s\u0131n\u0131f\u0131 belirtmektedir. **ad**(reklam resmi) ve **nonad** (reklam olmayan resim) olmak \u00fczere iki s\u0131n\u0131f vard\u0131r. \n* 4-1557 aras\u0131ndaki s\u00fctunlar, g\u00f6r\u00fcnt\u00fcye ait \u00f6zellik de\u011ferleridir. 4-1557 aras\u0131ndaki s\u00fctunlar\u0131n nas\u0131l elde eldildi\u011fini Kushmerick taraf\u0131ndan yap\u0131lan \"Learning to Remove Internet Advertisiment\" ba\u015fl\u0131kl\u0131 bildiride yer almaktad\u0131r. Bildirinde yer alan bilgilere g\u00f6re \u00f6zellik vekt\u00f6r\u00fc 'A' etiketi aras\u0131nda resimlere ait **caption**(ba\u015fl\u0131k), **alt**(resmi tan\u0131t\u0131c\u0131 metin), **url_base**(web sayfas\u0131na ait url) ve **url_dest**(t\u0131kland\u0131\u011f\u0131nda gidilecek url)  bilgilerinden t\u00fcretilmi\u015ftir.  A\u015fa\u011f\u0131daki \u015fekilde 'A' etiketi i\u00e7erisindeki resim bilgileri yer almaktad\u0131r. Tablo resimde yer alan url bilgilerine g\u00f6re olu\u015fturulmu\u015ftur.\n[![image](https:\/\/i.hizliresim.com\/j64vD9.png)](https:\/\/hizliresim.com\/j64vD9)\n\nYukar\u0131daki resimde yer alan etiketlerden t\u00fcretilen \u00fc\u00e7 \u00f6rnek a\u015fa\u011f\u0131daki tabloda yer almaktad\u0131r.\n[![image](https:\/\/i.hizliresim.com\/Z3LAmA.png)](https:\/\/hizliresim.com\/Z3LAmA)\nKaynak:http:\/\/www.sc.ehu.es\/ccwbayes\/docencia\/mmcc\/docs\/lecturas-clasificacion\/abstracts-resumir\/kushmerick99learning.pdf","29e63e04":"Yukar\u0131daki \u00e7izim, sentetik iki boyutlu veri k\u00fcmesi \u00fczerinde basit bir \u00f6rnek g\u00f6stermektedir. \u0130lk \u00e7izim, noktalar\u0131 ay\u0131rt etmek i\u00e7in renklendirilmi\u015f orijinal veri noktalar\u0131n\u0131 g\u00f6sterir. Algoritma, \u00f6nce \"Bile\u015fen 1\" olarak etiketlenen maksimum varyans\u0131n y\u00f6n\u00fcn\u00fc bularak ilerler. Bu, verilerin \u00e7o\u011funu i\u00e7eren ya da ba\u015fka bir deyi\u015fle, \u00f6zelliklerin birbiriyle en fazla ili\u015fkili oldu\u011fu y\u00f6n\u00fc ifade eder.\n\nDaha sonra algoritma, ortogonal (sa\u011f a\u00e7\u0131da) iken ilk y\u00f6ne en fazla bilgiyi i\u00e7eren y\u00f6n\u00fc bulur. \u0130ki boyutta, do\u011fru bir a\u00e7\u0131da olan tek bir olas\u0131 y\u00f6nelim vard\u0131r, fakat y\u00fcksek boyutlu bo\u015fluklarda (sonsuz) bir\u00e7ok ortogonal y\u00f6n olacakt\u0131r.\n\n**Kaynak:** Introduction to Machine Learning with Python_ A Guide for Data Scientists-O'Reilly Media (2016)","1f64a3bf":"<a class=\"anchor\" id=\"4.4.\"><\/a>**4.7. Violin Plot** <=======> [\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)","c20d7b9a":"\u00d6ncelikle; **height, width, ratio(width\/height) **ve** local** \u00f6zelliklerinin de\u011fi\u015fken tipleri say\u0131sal de\u011ferlere d\u00f6n\u00fc\u015ft\u00fcr\u00fclmelidir","18453c94":"<a class=\"anchor\" id=\"4.1e3.\"><\/a>**4.3. Paralel Kordinatlar**   <=======> [\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)\n\nParalel koordinatlar, her bir \u00f6zellik i\u00e7in dikey eksenin yatay olarak kopyaland\u0131\u011f\u0131 \u00e7ok boyutlu \u00f6zellik g\u00f6rselle\u015ftirme tekni\u011fidir. \u00d6rnekler, her dikey eksenden, bu \u00f6zellik i\u00e7in de\u011ferlerini temsil eden konuma \u00e7izilen tek bir sat\u0131r segmenti olarak g\u00f6r\u00fcnt\u00fclenir. Bu, bir\u00e7ok boyutun ayn\u0131 anda g\u00f6rselle\u015ftirilmesine izin verir; Asl\u0131nda sonsuz yatay alan (\u00f6rne\u011fin bir kayd\u0131rma penceresi) verildi\u011finde, teknik olarak sonsuz say\u0131da boyut g\u00f6r\u00fcnt\u00fclenebilir!\n\nVeri bilimcileri, benzer s\u0131n\u0131flara sahip \u00f6rneklerin k\u00fcmelerini tespit etmek ve y\u00fcksek varyansa veya farkl\u0131 da\u011f\u0131l\u0131mlara sahip \u00f6zelliklere dikkat \u00e7ekmek i\u00e7in bu y\u00f6ntemi kullan\u0131r.\n\n","fd605593":"<a class=\"anchor\" id=\"4.1.\"><\/a>**4.4. S\u0131n\u0131f Da\u011f\u0131l\u0131mlar\u0131**<=======> [\u0130\u00e7indekiler Men\u00fcs\u00fcne Git](#0.)"}}