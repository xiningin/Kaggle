{"cell_type":{"943f2a51":"code","c17c2723":"code","d7654633":"code","ad54c904":"code","84bc66f3":"code","e322a8fb":"markdown","ab02b2af":"markdown","6a8e724b":"markdown","3e1b14be":"markdown"},"source":{"943f2a51":"import pandas as pd\nimport numpy as np\nimport statsmodels.api as sm\n\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots","c17c2723":"df = pd.read_csv('..\/input\/hw-sales\/hw_sales.csv')\nbq = df.groupby('quarter number')['sales amount'].sum().reset_index()\n\ndf.info()","d7654633":"## defining the model for prediction\n\nmodel = sm.OLS(bq['sales amount'],sm.add_constant(bq['quarter number'])).fit()\nregline = model.fittedvalues\n\n## forecasting\n\nX_new = sm.add_constant([19,20,21,22,23])\npredicted = model.predict([X_new])\n\nmodel2 = sm.OLS(df['sales amount'],sm.add_constant(df['quarter number'])).fit()\n\n## plotting the results\n\nfig = px.bar(\n    df, x='quarter number', y='sales amount',\n    barmode='group', opacity=.9,\n    template='simple_white', color='item',\n    title='Sales amount by quarter')\n\nfig.add_trace(\n    go.Scatter(\n    mode='markers',\n    marker_size=8,\n    marker_line_color='black',\n    marker_line_width=.85,\n    name='overall sales',\n    text='overall sales',\n    hovertemplate='<br>Sales: %{y} <br>Quarter: %{x}',\n    x=bq['quarter number'],\n    y=bq['sales amount'])\n)\n\nfig.add_trace(\n    go.Scatter(\n    mode='lines',\n    name='trendline',\n    x=bq['quarter number'],\n    y=regline,\n    line=dict(color='brown'))\n)\n\nfig.add_trace(\n    go.Scatter(\n    name='forecast',\n    x=[19,20,21,22,23],\n    y=predicted[0],\n    mode='lines',\n    line=dict(dash='dot'),\n    text='Forecast',\n    hovertemplate='<br>Sales: %{y} <br>Quarter: %{x}',\n    line_color='green')\n)\n\nfig.update_traces(\n    marker_line_color='darkblue'\n)\n\nfig.update_layout(\n    xaxis=dict(\n    showgrid=True,\n    nticks=30),\n    width=900,\n    height=400,\n    paper_bgcolor='rgb(248, 248, 255)',\n    plot_bgcolor='rgb(248, 248, 255)'\n)\n\nfig.show()","ad54c904":"pen = df[df.item=='pen']\npencil = df[df.item=='pencil']\n\nm3 = sm.OLS(pen['sales amount'],sm.add_constant(pen['quarter number'])).fit()\npen_forecast = m3.predict([X_new])\n\nm4 = sm.OLS(pencil['sales amount'],sm.add_constant(pencil['quarter number'])).fit()\npencil_forecast = m4.predict([X_new])\n\nfig = px.scatter(\n    df, x='quarter number', trendline='ols',\n    template='simple_white',y='sales amount', color='item'\n)\nfig.update_traces(\n    marker_size=8,\n    marker_line_width=1.15,\n    marker_line_color='black'\n)\nfig.add_trace(\n    go.Scatter(\n    name='forecast',\n    x=[19,20,21,22,23],\n    y=pen_forecast[0],\n    mode='lines',\n    line=dict(dash='dot'),\n    hovertext='Forecast',\n    hovertemplate='<br>Sales: %{y} <br>Qaurter: %{x}',\n    line_color='green')\n)\nfig.add_trace(\n    go.Scatter(\n    name='forecast',\n    x=[19,20,21,22,23],\n    y=pencil_forecast[0],\n    mode='lines',\n    line=dict(dash='dot'),\n    hovertext='Forecast',\n    hovertemplate='<br>Sales: %{y} <br>Quarter: %{x}',\n    line_color='green')\n)\nfig.update_layout(\n    xaxis=dict(\n    showgrid=True,\n    nticks=15),\n    height=300,\n    width=600,\n    paper_bgcolor='rgb(248, 248, 255)',\n    plot_bgcolor='rgb(248, 248, 255)'\n)\nfig.show()","84bc66f3":"results = px.get_trendline_results(fig)\nresults.at[0,'px_fit_results'].summary(), results.at[0,'px_fit_results'].params","e322a8fb":"### Data Load","ab02b2af":"$\\implies$ Pen sales are growing faster and can override pencils in future!","6a8e724b":"## Trends in Sales and Forecasting\n----","3e1b14be":"### Some of descriptive metrics"}}