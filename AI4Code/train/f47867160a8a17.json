{"cell_type":{"93ee94d0":"code","7d4f32bc":"code","5c92b5b6":"code","15ad1f39":"code","7c88fa65":"code","e06656d6":"code","d9dd3a53":"code","f4921b06":"code","c13556f4":"code","88abfc91":"code","d71aae15":"markdown","1e08d066":"markdown","cbc9ba02":"markdown","9c802937":"markdown","77974e96":"markdown"},"source":{"93ee94d0":"import pandas as pd\nimport matplotlib.pyplot as plt","7d4f32bc":"def DataForModel(url,ds,y):\n    data = pd.read_csv(url)\n    df   = pd.DataFrame({\"ds\":[],\"y\":[]})\n    df[\"ds\"] = data.iloc[:,ds]\n    df[\"y\"]  = data.iloc[:,y]\n    return df","5c92b5b6":"from fbprophet import Prophet\nfrom sklearn.metrics import r2_score\n\nclass Fbprophet(object):\n    def fit(self,data):\n        \n        self.data  = data\n        self.model = Prophet(weekly_seasonality=False)\n        self.model.fit(self.data)\n    \n    def forecast(self,periods,freq):\n        \n        self.future = self.model.make_future_dataframe(periods=periods,freq=freq)\n        self.df_forecast = self.model.predict(self.future)\n        \n    def plot(self,xlabel=\"Years\",ylabel=\"Values\"):\n        \n        self.model.plot(self.df_forecast,xlabel=xlabel,ylabel=ylabel,figsize=(9,4))\n        self.model.plot_components(self.df_forecast,figsize=(9,6))\n        \n    def R2(self):\n        return r2_score(df.y, self.df_forecast.yhat[:len(df)])","15ad1f39":"df = DataForModel('https:\/\/vincentarelbundock.github.io\/Rdatasets\/csv\/forecast\/gas.csv',ds=1,y=2)\ndf.head()","7c88fa65":"df[\"ds\"]=pd.date_range(start=\"01\/01\/1956\",periods=len(df),freq=\"M\")\ndf.head()","e06656d6":"model = Fbprophet()\nmodel.fit(df)","d9dd3a53":"model.forecast(12,\"M\")\nmodel.plot()","f4921b06":"model.df_forecast[[\"ds\",\"yhat_lower\",\"yhat_upper\",\"yhat\"]].tail(12).style.background_gradient(\"Blues\")","c13556f4":"model.R2()","88abfc91":"model.df_forecast[\"yhat\"][len(df):].plot(marker=\"s\",markersize=10,color=\"tab:blue\",markerfacecolor=\"black\",figsize=(14,6))\nplt.fill_between(x=list(range(476,488)), y1=model.df_forecast[\"yhat_lower\"][len(df):], y2=model.df_forecast[\"yhat_upper\"][len(df):],\n                color=\"silver\")\nplt.legend([\"forecast\",\"Bound\"],loc=\"upper left\")\nplt.title(\"Forecasting of Next Year\")\nplt.xticks(list(range(476,488)),[\"Sep\",\"Oct\",\"Nov\",\"Dec\",\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\"])\nplt.grid()\nplt.show()","d71aae15":"<center><img src=\"https:\/\/miro.medium.com\/max\/2812\/1*_HbrAW-tMRBli6ASD5Bttw.png\"><\/center>","1e08d066":"<h1><center>The Prophet Forecasting Model<\/center><\/h1>\nThe Prophet uses a decomposable time series model with three main model components: trend, seasonality, and holidays. They are combined in the following equation:\n\n* y(t)= g(t) + s(t) + h(t) + \u03b5t\n* g(t): piecewise linear or logistic growth curve for modeling non-periodic changes in time series\n* s(t): periodic changes (e.g. weekly\/yearly seasonality)\n* h(t): effects of holidays (user provided) with irregular schedules\n* \u03b5t: error term accounts for any unusual changes not accommodated by the model\n\nUsing time as a regressor, Prophet is trying to fit several linear and non linear functions of time as components. Modeling seasonality as an additive component is the same approach taken by exponential smoothing in Holt-Winters technique . Prophet is framing the forecasting problem as a curve-fitting exercise rather than looking explicitly at the time based dependence of each observation within a time series.","cbc9ba02":"## Seasonality, Holiday Effects, And Regressors\n\n<center><img src=\"https:\/\/miro.medium.com\/max\/624\/1*cnpHt71qOxrUeWkqGYDuFg.png\"><\/center>","9c802937":"## Peformance of model (measurment: R2 score)","77974e96":"## Data description\n\n### Australian monthly gas production\n#### Description\nAustralian monthly gas production: 1956\u20131995.\n\n#### Usage\ngas\n#### Format\nTime series data\n\n#### Source\nAustralian Bureau of Statistics."}}