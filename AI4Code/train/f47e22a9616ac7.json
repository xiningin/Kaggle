{"cell_type":{"554b1a7b":"code","e1674e0b":"code","74650a32":"code","db655c5b":"code","b0d8cf46":"code","54e714bc":"code","3907d9f5":"code","2fa6ef95":"code","12707542":"code","d17e40c3":"code","9450595d":"code","7dc39b4a":"code","81495356":"code","4b01cce8":"code","c50e7469":"code","32ae795d":"code","2b6d59be":"code","7b949d05":"code","b6bde0e6":"code","ac6df7b6":"code","7f30654b":"code","b3bd4b5b":"code","7af98536":"code","7602669b":"code","08acb064":"code","2d5169f2":"code","1796e3b0":"code","dd026ad2":"code","b54757fe":"code","4acecccf":"code","b9520e3f":"code","f8b27375":"code","e8301faa":"code","4f4c3429":"code","96092174":"code","40f47cd9":"markdown"},"source":{"554b1a7b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e1674e0b":"df = pd.read_csv('..\/input\/telco-customer-churn\/WA_Fn-UseC_-Telco-Customer-Churn.csv')","74650a32":"df.head()","db655c5b":"df.info()","b0d8cf46":"sum(df.duplicated())","54e714bc":"df['MultipleLines'].value_counts() #MultipleLines_NPS  || ","3907d9f5":"df.describe()","2fa6ef95":"df[df['TotalCharges'].str.contains(' ', case=True, regex=True)]","12707542":"df_total_charges = df.drop(df[df['TotalCharges'].str.contains(' ', case=True, regex=True)].index) ","d17e40c3":"df_total_charges.shape","9450595d":"df_total_charges['TotalCharges'] = df_total_charges['TotalCharges'].astype('float64')","7dc39b4a":"df_total_charges.hist()","81495356":"df_total_charges.describe()","4b01cce8":"df['TotalCharges'].replace(to_replace=r' ', value=df_total_charges['TotalCharges'].mean(), regex=True,inplace=True) ","c50e7469":"df['TotalCharges'] = df['TotalCharges'].astype('float64')","32ae795d":"type(df['TotalCharges'][0])","2b6d59be":"df_total_charges.shape","7b949d05":"type(df['TotalCharges'][0])","b6bde0e6":"df['TotalCharges'].unique()","ac6df7b6":"sum(df['TotalCharges'].str.contains(\"az-AZ\",regex=True))","7f30654b":"float('5124')","b3bd4b5b":"df.columns","7af98536":"df['Partner'].value_counts()  #Done","7602669b":"df['Dependents'].value_counts()   # Done","08acb064":"df['PhoneService'].value_counts()  # Done","2d5169f2":"df['MultipleLines'].value_counts()   ","1796e3b0":"# InternetService\ndf['InternetService'].value_counts()   \n","dd026ad2":"df['OnlineSecurity'].value_counts()   \n","b54757fe":"#OnlineBackup\ndf['OnlineBackup'].value_counts()   ","4acecccf":"df['DeviceProtection'].value_counts()   ","b9520e3f":"# TechSupport\n\ndf['TechSupport'].value_counts()   ","f8b27375":"# StreamingTV\ndf['StreamingTV'].value_counts()   \n","e8301faa":"# StreamingMovies\n\ndf['StreamingMovies'].value_counts()   \n","4f4c3429":"sum(df[['StreamingMovies','StreamingTV','TechSupport','DeviceProtection','OnlineBackup','OnlineSecurity']])","96092174":"df.str.contains('No internet service')","40f47cd9":"### Questions\n\n- why "}}