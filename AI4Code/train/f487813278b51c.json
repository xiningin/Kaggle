{"cell_type":{"3b18fdb3":"code","26fb12dd":"code","2a69218d":"code","3c60704f":"code","4efee50e":"code","113348c7":"code","c9fc9127":"code","aa02d8c5":"code","c08673e0":"code","406823b4":"code","d567fd5a":"code","53c4a7b5":"code","afcea385":"code","0dbc8a6e":"code","9b10b605":"code","33fe013b":"code","5236a146":"code","24ec9b6d":"code","4a7c7cf3":"code","ac62db86":"code","cb436206":"code","4677db23":"code","5e124139":"code","06d1b695":"markdown","c8a486c0":"markdown","84d62d3c":"markdown","37a72535":"markdown","28de1d5d":"markdown","e30e07b4":"markdown","f2dfbacd":"markdown","3d81fd72":"markdown","3c8a39b1":"markdown","d9b0fa40":"markdown","8165e148":"markdown","12d724f8":"markdown","83d51469":"markdown","0e9bccb7":"markdown","3550857d":"markdown","607323ad":"markdown","fea030f7":"markdown","9ef68c5f":"markdown"},"source":{"3b18fdb3":"import pandas as pd #Manipulating data\nimport numpy as np #For Math operations \nimport seaborn as sns #For visualization purpose\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom sklearn.model_selection import train_test_split # For Spliting data to training and testing data\nfrom sklearn.preprocessing import MinMaxScaler # MinMaxScaler For fitting the data to the model, it optimize model\nimport tensorflow as tf\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Activation,Dropout\nfrom tensorflow.keras.callbacks import EarlyStopping\nfrom tensorflow.keras.layers import Dropout\nfrom sklearn.metrics import classification_report,confusion_matrix #For model evaluation metrics\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n\n","26fb12dd":"#Importing the data\ncancer_data=pd.read_csv('\/kaggle\/input\/breast-cancer-dataset-uci-ml\/cancer_classification.csv')","2a69218d":"cancer_data.head(5)","3c60704f":"cancer_data.info()","4efee50e":"cancer_data.describe().transpose()","113348c7":"sns.countplot(x='benign_0__mal_1',data=cancer_data)","c9fc9127":"cancer_data['benign_0__mal_1'].value_counts()","aa02d8c5":"#Let's see how features correlates to another\nsns.heatmap(cancer_data.corr())","c08673e0":"cancer_data.corr()['benign_0__mal_1'].sort_values()","406823b4":"cancer_data.corr()['benign_0__mal_1'].sort_values().plot(kind='bar')","d567fd5a":"cancer_data.corr()['benign_0__mal_1'][:-1].sort_values().plot(kind='bar')","53c4a7b5":"X = cancer_data.drop('benign_0__mal_1',axis=1).values\ny = cancer_data['benign_0__mal_1'].values","afcea385":"X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.25,random_state=101)","0dbc8a6e":"scaler=MinMaxScaler()","9b10b605":"scaler.fit(X_train)","33fe013b":"X_train=scaler.transform(X_train)\nX_test=scaler.transform(X_test)","5236a146":"model=Sequential()\n\nmodel.add(Dense(units=30, activation='relu'))\nmodel.add(Dropout(0.5))\n\nmodel.add(Dense(units=15, activation='relu'))\nmodel.add(Dropout(0.5))\n\nmodel.add(Dense(units=1,activation='sigmoid'))\nmodel.compile(loss='binary_crossentropy', optimizer='adam')\n\n","24ec9b6d":"early_stop = EarlyStopping(monitor='val_loss', mode='min', verbose=1, patience=25)","4a7c7cf3":"model.fit(X_train,\n          y=y_train,\n          epochs=600,\n          validation_data=(X_test,y_test),\n          verbose=1,\n          callbacks=[early_stop]\n         \n         )","ac62db86":"model.summary()","cb436206":"model_loss = pd.DataFrame(model.history.history)\nmodel_loss.plot()","4677db23":"predictions = model.predict_classes(X_test)","5e124139":"print('Model Classification Report')\nprint(classification_report(y_test,predictions))\n\nprint('*'*57)\nprint('Confusion Matrix')\nprint(confusion_matrix(y_test,predictions))","06d1b695":"The model achieved accuracy of 0.98 percent. From Confusion matrix, the model predicted True Positives:54, True Negative:86, False Positive: 1, False Negative:2","c8a486c0":"# BREAST CANCER PREDICTIONS WITH TENSORFLOW","84d62d3c":"Thanks to Early Stopping, model stopped training on epochs of 128.","37a72535":"# Performing Model Evaluation","28de1d5d":"As seen on plot above, our model worked well on training data. Let's now evaluate the model on testing data","e30e07b4":"As we splited the data, let's now scale them to optimize model training","f2dfbacd":"Few Notes on the model:\n\n* For best practice, consider having input layers units that are nearly equal to columns or shape of training data. In our case it is 30.\n* We will use early stopping to avoid overfitting on the model and Dropout to optimize our performance. Dropout is for sleeping half of neurons after each layer. Half if for our case, you can choose any value you want, best between 0.4 to 0.8.\n* For classification problems, as always, we often use sigmoid function in last layer.","3d81fd72":"Let's plot the feature under prediction to count its classes, 0 or 1. ","3c8a39b1":"In this notebook, we will go use wisconsin (diagnostic) dataset to predict the breast cancer. We will be predicting wether the people has cancer or not(benign or malign), or technically classifying given data into these two classes. \n\nWe will have the following parts:\n\n* Importing relevant libraries and data\n* Performing Exploratory Data Analysis (EDA)\n* Creating the Model \n* Performing Model Evaluation\n\n\nLet's get started! ","d9b0fa40":"# Importing Relevant libraries and data","8165e148":"# Creating the Model","12d724f8":"From the correlation above, we see that most features are in negative to the begign_0__mal_1. Let's cutt off features ","83d51469":"The above plot reveals that 357 values are for malignant and 212 for benign.","0e9bccb7":"*Thanks for going with me to the end of this notebook!!*","3550857d":"Note: We do not fit testing data. This would result in error as we can not fit the data that the model has not seen yet. We just only transform all for consistency purpose, but only fitting to the training data only. ","607323ad":"It's now time to split the data into training and testing by Train test Split","fea030f7":"A quick look out to the structure of the data that we are going to work with by the following methods. As you may see, our main target feature is benign_0__mal_1.","9ef68c5f":"# Performing Exploratory Data Analysis"}}