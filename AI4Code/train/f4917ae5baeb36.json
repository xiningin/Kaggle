{"cell_type":{"b8bd7386":"code","7e49ae66":"code","a4802a0e":"code","ca3bb70b":"code","f3f424d7":"code","6a7e0196":"code","32c6f1fb":"code","0363acc8":"code","7e155dc6":"code","0abafab8":"code","b68490c7":"code","5cf976b0":"code","b3a40e1f":"code","8d190981":"code","70baf5c8":"code","a2833966":"code","32dea086":"code","20c512fc":"code","fe4b08c7":"code","daeaadc9":"code","cc5dc4dd":"code","09557e79":"markdown","97ecbda4":"markdown","c03a8d50":"markdown"},"source":{"b8bd7386":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7e49ae66":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns","a4802a0e":"train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"..\/input\/titanic\/train.csv\")","ca3bb70b":"train.head()","f3f424d7":"sex = {'male':0, 'female':1}\ntrain.Sex = train.Sex.map(sex)\ntest.Sex = test.Sex.map(sex)","6a7e0196":"train.Sex.isnull().sum()","32c6f1fb":"train.Embarked.unique()","0363acc8":"embarked = {'S':0, 'C':1, 'Q':2}\ntrain.Embarked  = train.Embarked.map(embarked)\ntest.Embarked  = test.Embarked.map(embarked)","7e155dc6":"train.isnull().sum()","0abafab8":"test.isnull().sum()","b68490c7":"sns.countplot('Embarked', data=train)","5cf976b0":"train.Embarked = train.Embarked.fillna(0)","b3a40e1f":"train['Title'] = train['Name'].str.extract(' ([A-Za-z]+)\\.', expand=False)\ntest['Title'] = test['Name'].str.extract(' ([A-Za-z]+)\\.', expand=False)","8d190981":"train['Title'].value_counts()","70baf5c8":"title_mapping = {\"Mr\": 0, \"Miss\": 1, \"Mrs\": 2, \n                 \"Master\": 3, \"Dr\": 3, \"Rev\": 3, \"Col\": 3, \"Major\": 3, \"Mlle\": 3,\"Countess\": 3,\n                 \"Ms\": 3, \"Lady\": 3, \"Jonkheer\": 3, \"Don\": 3, \"Dona\" : 3, \"Mme\": 3,\"Capt\": 3,\"Sir\": 3 }\n\ntrain['Title'] = train['Title'].map(title_mapping)\ntest['Title'] = test['Title'].map(title_mapping)","a2833966":"train[\"Age\"].fillna(train.groupby(\"Title\")[\"Age\"].transform(\"median\"), inplace=True)\ntest[\"Age\"].fillna(test.groupby(\"Title\")[\"Age\"].transform(\"median\"), inplace=True)","32dea086":"import tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nfrom tensorflow.keras import Sequential\nfrom tensorflow.keras.layers import Dense","20c512fc":"y_train = train['Survived']\nx_train = train.drop(['PassengerId','Cabin','Survived','Name','Ticket'],axis=1)\n\ny_test = test['Survived']\nx_test = test.drop(['PassengerId','Cabin','Survived','Name','Ticket'],axis=1)","fe4b08c7":"model = Sequential()\nmodel.add(Dense(10, input_shape=(8,),activation='sigmoid'))\nmodel.add(Dense(5, activation='sigmoid'))\nmodel.add(Dense(1, activation='sigmoid'))\nmodel.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])","daeaadc9":"model.fit(x_train, y_train, epochs=50)","cc5dc4dd":"model.evaluate(x_test, y_test)","09557e79":"\uacb0\uce21\uce58 \ud655\uc778","97ecbda4":"* Survived: 0 = No, 1 = Yes\n* pclass: Ticket class 1 = 1st, 2 = 2nd, 3 = 3rd\n* sibsp: # of siblings \/ spouses aboard the Titanic\n* parch: # of parents \/ children aboard the Titanic\n* ticket: Ticket number\n* cabin: Cabin number\n* embarked: Port of Embarkation C = Cherbourg, Q = Queenstown, S = Southampton","c03a8d50":"## \ubd84\uc11d\uc6a9\ub370\uc774\ud130\uad6c\ucd95_\uc815\uc544\uc601"}}