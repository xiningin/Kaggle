{"cell_type":{"6c4171fc":"code","6bde35bf":"code","236ec746":"code","249e4d67":"code","d3a2713f":"code","14bf263f":"code","1e994038":"code","01cfadeb":"code","b9b27803":"code","b20aba22":"code","143326e5":"code","33c4dfce":"code","2836f0f2":"code","bfca0cc2":"code","20dc365f":"code","cce696f0":"code","7bc39ecf":"code","5ec36e40":"code","b3b565c0":"code","9f7e6a98":"code","798fced0":"code","5390604f":"code","2e615e16":"code","e8261132":"code","a720011d":"code","958eb066":"code","d2886143":"code","64c3cdf4":"code","60a6f08d":"code","bdd6fde6":"code","f92eb72a":"code","5271dc80":"code","252b0d59":"code","33bcab4b":"code","68a7704e":"code","f2d1dc5e":"code","20908738":"code","c9012494":"code","29c8d2db":"code","5ebea9ca":"code","f88440b4":"code","8bf56a25":"code","12b09031":"code","e80bf7af":"code","ae5cf16f":"code","5a954028":"code","1ea9e867":"code","6c2b270d":"code","0364397e":"code","244129a2":"code","184e8097":"code","17316687":"code","2a464f9d":"code","c0d7dd8e":"code","8a95a87a":"code","7e6c1526":"code","23bbea2f":"code","f3532d53":"code","de21178b":"code","0856aecc":"code","7443f923":"code","ce8bd631":"code","7231e470":"code","da135d0c":"code","6c277085":"code","eafdf0ed":"code","4749f4ea":"code","3de9b6c4":"code","aed573d8":"code","96748c12":"code","d3d17cb5":"code","e71142f4":"code","8b84d3cc":"code","78d26998":"code","826e9fbf":"code","5be02631":"code","8b493667":"code","3af6b98a":"code","0468817a":"code","a845ac9a":"code","cbd9402e":"code","467e3320":"code","8ef2e693":"code","012947f3":"code","83950882":"code","d8ec93f4":"code","79f1eb7c":"code","9580b0be":"code","a0242903":"markdown","7eb1d1be":"markdown","a564f8ea":"markdown","dcd4aaa1":"markdown","d4cbdc61":"markdown","cdae9367":"markdown","6187a8ff":"markdown","487f8d94":"markdown","959f4128":"markdown","23d171c7":"markdown","0834a06e":"markdown","b3e035f4":"markdown","27cf03dd":"markdown","42698af2":"markdown","954d47ea":"markdown","cb438379":"markdown","e35d70a2":"markdown","f4f5c96b":"markdown","ebb990d2":"markdown","978d2636":"markdown","f7df8cfa":"markdown","21e89a70":"markdown","433757d9":"markdown","e450b570":"markdown","e1c3ae52":"markdown","b8387369":"markdown","a5150b55":"markdown","4743eeff":"markdown","76953b3c":"markdown","499aae40":"markdown","324cff8f":"markdown","4fb2096e":"markdown","e4c19ff2":"markdown","9771434f":"markdown","78178d82":"markdown","c89591af":"markdown","dd331781":"markdown","31701eca":"markdown","53c87313":"markdown","dd1512b2":"markdown","39ce050f":"markdown","50b52cff":"markdown","d87aba0c":"markdown","cfc6a7a4":"markdown","7ac3c6ae":"markdown","60970f98":"markdown","4b10a429":"markdown","0856a85c":"markdown","83379219":"markdown","ec9b2154":"markdown","72662e0e":"markdown","5c1a690b":"markdown","42489ece":"markdown","ddd6edc4":"markdown","81bc4e07":"markdown","b9ff3330":"markdown","60316398":"markdown","79459851":"markdown","36a23a95":"markdown","bedb0ad9":"markdown","d4264592":"markdown","c6021b20":"markdown"},"source":{"6c4171fc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6bde35bf":"import numpy as np                                                 # Implements multi-dimensional array and matrices\nimport pandas as pd                                                # For data manipulation and analysis\nimport pandas_profiling                                            # For simple Exploratory data analysis\nimport matplotlib.pyplot as plt                                    # Plotting library for Python programming language and it's numerical mathematics extension NumPy\nimport seaborn as sns                                              # Provides a high level interface for drawing attractive and informative statistical graphics\n%matplotlib inline\nsns.set()\n\nfrom subprocess import check_output","236ec746":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","249e4d67":"titanic_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")     # Importing the titanic dataset using pd.read_csv\ntitanic_data.head()","d3a2713f":"titanic_data.rename(columns={'Pclass':'Ticket_Class'},inplace=True)\ntitanic_data.head()","14bf263f":"titanic_data.shape           ","1e994038":"titanic_data.columns         ","01cfadeb":"titanic_data.info()     ","b9b27803":"titanic_data.describe()","b20aba22":"titanic_data.hist(bins=20,figsize=(18, 16))","143326e5":"# !pip install pandas==0.25     # will not work on kaggle use your jupyter notebook at local system","33c4dfce":"# profile = pandas_profiling.ProfileReport(titanic_data)\n# profile.to_file(outputfile=\"titanic_before_preprocessing.html\")","2836f0f2":"titanic_data.isnull().sum()","bfca0cc2":"a=titanic_data['Embarked'].mode()[0]\na","20dc365f":"titanic_data.Embarked = titanic_data.Embarked.fillna(titanic_data['Embarked'].mode()[0]) # replacing the missing entries of Embarked with the mode","cce696f0":"median_age = titanic_data.Age.median()                                              \ntitanic_data.Age.fillna(median_age, inplace = True)                                         # replacing the missing entries of the column Age with the median","7bc39ecf":"titanic_data.drop('Cabin', axis = 1,inplace = True)                                 # dropping the column Cabin as there are too many missing entries","5ec36e40":"titanic_data.drop(['PassengerId','Name','Ticket'],axis=1,inplace=True)","b3b565c0":"titanic_data['FamilySize'] = titanic_data['SibSp'] + titanic_data['Parch']+1","9f7e6a98":"titanic_data['People_Class'] = titanic_data.apply(lambda x: 'child' if x['Age'] < 15 else x['Sex'],axis=1)","798fced0":"titanic_data['People_Class'].unique()","5390604f":"titanic_data[titanic_data.Age<15].head()   #displaying only the child class","2e615e16":"titanic_data[titanic_data.Age>15].head()","e8261132":"titanic_data['People_Class']=titanic_data['People_Class'].map({'male':'Man','female':'Woman','child':'Children'})\ntitanic_data.head()","a720011d":"titanic_data[titanic_data.Age<15].head() ","958eb066":"titanic_age_groups = pd.cut(titanic_data[\"Age\"], bins=[0, 15, 25, 40, 60, 80]).value_counts().sort_index()\ntitanic_age_groups","d2886143":"titanic_data[\"Age\"].describe()","64c3cdf4":"titanic_data.loc[titanic_data[\"Age\"].argmin()]","60a6f08d":"titanic_sibsp = titanic_data[\"SibSp\"].value_counts()\ntitanic_sibsp","bdd6fde6":"titanic_parch = titanic_data[\"Parch\"].value_counts()\ntitanic_parch","f92eb72a":"titanic_fare_groups = pd.cut(titanic_data[\"Fare\"], bins=[0, 30, 60, 150, 550]).value_counts().sort_index()\ntitanic_fare_groups","5271dc80":"titanic_embarked = titanic_data[\"Embarked\"].value_counts()\ntitanic_embarked.index = [\"Southampton\", \"Cherbourg\", \"Queenstown\"]\ntitanic_embarked","252b0d59":"titanic_survived = titanic_data[\"Survived\"].value_counts(sort=False)\ntitanic_survived.index = [\"Not Survived\", \"Survived\"]\ntitanic_survived","33bcab4b":"def get_survival_ratio(passengers_df):\n    return passengers_df[\"Survived\"].sum()\/passengers_df[\"Survived\"].count()","68a7704e":"survival_ratio = get_survival_ratio(titanic_data)\nsurvival_ratio","f2d1dc5e":"sns.countplot(x='Survived', data=titanic_data).set_title('Count plot for Survived')","20908738":"as_fig = sns.FacetGrid(titanic_data,hue='People_Class',aspect=5)\n\nas_fig.map(sns.kdeplot,'Age',shade=True)\n\noldest = titanic_data['Age'].max()\n\nas_fig.set(xlim=(0,oldest))\n\nas_fig.add_legend()\nplt.title('Age distribution using FacetGrid')","c9012494":"titanic_data.groupby(['Survived','People_Class'])['Survived'].count()","29c8d2db":"sns.factorplot('People_Class', hue='Survived', kind='count', data=titanic_data);\nplt.title('Factor plot for man woman and children')","5ebea9ca":"print(\"% of women survived: \" , titanic_data[titanic_data.People_Class == 'Woman']['Survived'].sum()\/titanic_data[titanic_data.People_Class == 'Woman']['Survived'].count())\nprint(\"% of men survived:   \" , titanic_data[titanic_data.People_Class == 'Man']['Survived'].sum()\/titanic_data[titanic_data.People_Class == 'Man']['Survived'].count())\nprint(\"% of child survived:   \" , titanic_data[titanic_data.People_Class == 'Children']['Survived'].sum()\/titanic_data[titanic_data.People_Class == 'Children']['Survived'].count())","f88440b4":"f,ax = plt.subplots(1,3,figsize=(20,7))\ntitanic_data['Survived'][titanic_data['People_Class'] == 'Man'].value_counts().plot.pie(explode=[0,0.2],autopct='%1.1f%%',ax=ax[0],shadow=True)\ntitanic_data['Survived'][titanic_data['People_Class'] == 'Woman'].value_counts().plot.pie(explode=[0,0.2],autopct='%1.1f%%',ax=ax[1],shadow=True)\ntitanic_data['Survived'][titanic_data['People_Class'] == 'Children'].value_counts().plot.pie(explode=[0,0.2],autopct='%1.1f%%',ax=ax[2],shadow=True)\nax[0].set_title('Survived (Man)')\nax[1].set_title('Survived (Woman)')\nax[2].set_title('Survived (Children)')","8bf56a25":"titanic_data['Survived'][titanic_data['People_Class'] == 'Man'].value_counts()       #count of men survived and died","12b09031":"titanic_data['Survived'][titanic_data['People_Class'] == 'Woman'].value_counts()       #count of men survived and died","e80bf7af":"titanic_data['Survived'][titanic_data['People_Class'] == 'Children'].value_counts()       #count of men survived and died","ae5cf16f":"titanic_data.head()","5a954028":"titanic_data.isnull().sum()","1ea9e867":"titanic_data['Survived'].value_counts()","6c2b270d":"titanic_data['People_Class']=titanic_data['People_Class'].map({'Man':0,'Woman':1,'Children':2})\ntitanic_data['Sex']=titanic_data['Sex'].map({'male':0,'female':1})\ntitanic_data['Embarked']=titanic_data['Embarked'].map({'S':0,'C':1, 'Q':2})","0364397e":"titanic_data.head()","244129a2":"titanic_data = pd.get_dummies(titanic_data, columns = ['People_Class', 'Sex', 'Embarked'])","184e8097":"titanic_data.head()","17316687":"titanic_data.columns","2a464f9d":"from sklearn.model_selection import train_test_split","c0d7dd8e":"X_train, X_valid, y_train, y_valid = train_test_split(titanic_data[['Ticket_Class', 'Age', 'SibSp', 'Parch', 'Fare',\n                                                                    'FamilySize', 'People_Class_0', 'People_Class_1', 'People_Class_2',\n                                                                    'Sex_0', 'Sex_1', 'Embarked_0', 'Embarked_1', 'Embarked_2']], titanic_data['Survived'].ravel(), train_size=0.8, test_size=0.2,\n                                                                    random_state=0)","8a95a87a":"X_train.shape[0] == y_train.shape[0]","7e6c1526":"X_valid.shape[0] == y_valid.shape[0]","23bbea2f":"from sklearn.ensemble import RandomForestClassifier","f3532d53":"# from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import mean_absolute_error\n\n# Function for comparing different approaches\ndef score_dataset(X_train, X_valid, y_train, y_valid):\n    model = RandomForestClassifier(n_estimators=300, max_depth=10,random_state=1)\n    model.fit(X_train, y_train)\n    preds = model.predict(X_valid)\n    return mean_absolute_error(y_valid, preds)","de21178b":"X_train.dtypes","0856aecc":"print(score_dataset(X_train, X_valid, y_train, y_valid))","7443f923":"from sklearn.model_selection import GridSearchCV","ce8bd631":"model = RandomForestClassifier()","7231e470":"parameters = {'n_estimators':[10, 50, 100, 300, 500], \n              'max_depth': [3, 5, 10, 7],\n            'min_samples_split': [2, 5, 10],\n              'random_state': [0, 1, 10, 5]\n             }","da135d0c":"clf = GridSearchCV(model, parameters)","6c277085":"clf.fit(X_train, y_train)","eafdf0ed":"clf.best_params_ ","4749f4ea":"model = RandomForestClassifier(n_estimators=50, min_samples_split=10,max_depth=5,random_state=40)\nmodel.fit(X_train, y_train)","3de9b6c4":"X_test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","aed573d8":"X_test.head()","96748c12":"X_test['People_Class'] = X_test.apply(lambda x: 'child' if x['Age'] < 15 else x['Sex'],axis=1)","d3d17cb5":"X_test['People_Class'].value_counts()","e71142f4":"X_test['People_Class']=X_test['People_Class'].map({'male':0,'female':1,'child':2})\nX_test['Sex']=X_test['Sex'].map({'male':0,'female':1})\nX_test['Embarked']=X_test['Embarked'].map({'S':0,'C':1, 'Q':2})","8b84d3cc":"X_test.rename(columns={'Pclass':'Ticket_Class'},inplace=True)","78d26998":"X_test['FamilySize'] = X_test['SibSp'] + X_test['Parch']+1","826e9fbf":"X_test[['Ticket_Class', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare', 'Embarked',\n       'FamilySize', 'People_Class']]","5be02631":"X_test.drop(labels=['Cabin'], axis=1, inplace=True)","8b493667":"median_age = X_test.Age.median()                                              \nX_test.Age.fillna(median_age, inplace = True)  ","3af6b98a":"median_age = X_test.Fare.median()                                              \nX_test.Fare.fillna(median_age, inplace = True)  ","0468817a":"X_test.isnull().sum()","a845ac9a":"X_test.head()","cbd9402e":"X_test = pd.get_dummies(X_test, columns = ['People_Class', 'Sex', 'Embarked'])","467e3320":"X_test.columns","8ef2e693":"X_test = X_test[['PassengerId','Ticket_Class', 'Sex_0', 'Sex_1', 'Age', 'SibSp', 'Parch', 'Fare', 'Embarked_0', 'Embarked_1',\n       'Embarked_2', 'FamilySize', 'People_Class_0', 'People_Class_1',\n       'People_Class_2']]","012947f3":"# Get test predictions\npreds_test = model.predict(X_test[['Ticket_Class', 'Sex_0', 'Sex_1', 'Age', 'SibSp', 'Parch', 'Fare', 'Embarked_0', 'Embarked_1',\n       'Embarked_2', 'FamilySize', 'People_Class_0', 'People_Class_1',\n       'People_Class_2']])","83950882":"output = pd.DataFrame({'PassengerId': X_test.PassengerId,\n                       'Survived': preds_test})","d8ec93f4":"output.shape","79f1eb7c":"output.columns","9580b0be":"output = pd.DataFrame({'PassengerId': X_test.PassengerId,\n                       'Survived': preds_test})\noutput.to_csv('submission.csv', index=False)","a0242903":"## Random Forest","7eb1d1be":"- The first class tickets ranged enormously in price, from 150 dollars for a simple berth, up to 512 dollars for one of the two Parlour suites. \n\n- Second class tickets were 60 dollars and third class passengers paid between 15 and 40 dollars.","a564f8ea":"The situation is pretty similar in case of passengers travelling with parents or children. \n\n- Most of them (678) travelled alone and 118 travelled with just one parent or children. \n\n- 95 passengers travelled with two and more parents or children.","dcd4aaa1":"**Observations:**\n- __76% of woman__ survived.\n- __57% of children__ also survived.\n- Only __16% of man__ survived.","d4cbdc61":"**Observations:**\n- You can see that __more people died than survived.__ ","cdae9367":"**Observations:**\n- From the above output we can see that __Age__ and __Cabin__ columns contains __maximum null values__. We will see how to deal with them.\n- Since Embarked is having 2 null values so we will fill those values with the mode of the Embarked column","6187a8ff":"### 6.1. What was the demographic structure of Titanic passengers?","487f8d94":"- 83 passengers were children in age 0-15. A little over 200 of passengers were both between 15-25 and 263 of them were 25-40 years old. Almost 128 of all passengers were 40-60 years old. Only 22 of all passengers were above 60 years old. That tells us that Titanic passengers population was quite young.","959f4128":"- Out of 891 passengers only 342 survived and 549 died. The Titanic survival ratio is approximately 0.38, meaning that only 38% of all passengers survived the disaster. That is really small percentage.","23d171c7":"- Using pie plot","0834a06e":"Here, we have done Pandas Profiling before preprocessing our dataset, so we have named the html file as __titanic_before_preprocessing.html__. Take a look at the file and see what useful insight you can develop from it. <br\/>\nNow we will process our data to better understand it.","b3e035f4":"<a id=section1><\/a>\n### 1. Introduction \n\n<center><img src=\"https:\/\/raw.githubusercontent.com\/insaid2018\/Term-2\/master\/images\/titanic-body.jpg\" width=\"600\" height=\"300\" \/><\/center>\n<br> \n\n- The sinking of the RMS Titanic in the early morning of __15 April 1912, four days into the ship's maiden voyage__ from __Southampton to New York City__, was one of the deadliest peacetime maritime disasters in history, __killing__ more \nthan **1,500 people**. \n\n- The largest passenger liner in service at the time, Titanic had an __estimated 2,224 people on board__ when she struck an __iceberg in the North Atlantic__. \n\n- The ship had received __six warnings__ of sea ice but was travelling at near __maximum speed when the lookouts sighted the iceberg__. \n\n<br> \n<center><img src=\"https:\/\/raw.githubusercontent.com\/insaid2018\/Term-2\/master\/images\/source.gif\" width=\"500\" height=\"300\" \/><\/center>\n<br> \n\n- __Unable to turn quickly enough__, the ship suffered a glancing blow that buckled the starboard (right) side and opened __five of sixteen compartments to the sea__. \n\n- The disaster caused widespread outrage over the lack of lifeboats, lax regulations, and the __unequal treatment__ of the three passenger classes __during the evacuation__. \n\n- Inquiries recommended sweeping changes to maritime regulations, leading to the __International Convention for the Safety of Life at Sea (1914)__, which continues to govern maritime safety.\n","27cf03dd":"# Exploratory Data Analysis","42698af2":"On studying Questionnaire 6.4 and 6.5 we observed that an overwhelming percentage of __women & children__ have survived the titanic clash.\n- __76%__ of __woman__ survived.\n- __57%__ of __children__ also survived.\n- Only __16%__ of __man__ survived.<br\/>\nAlso the survival rate for man is very low irrespective of the _class_ he belongs to and the _survival rate is less_ for all the _3rd class passengers._ Almost all women in Ticket_Class 1 and 2 survived and nearly all men in Ticket_Class 2 and 3 died.","954d47ea":"### 5.1 Understanding the Dataset","cb438379":"### 6.3. Who is more likely to survive Men, Women or Children?","e35d70a2":"## Creating the model","f4f5c96b":"### 5.3 Preprocessing","ebb990d2":"- We can see that vast majority of passengers, 644, embarked in Southampton), 168 embarked in Cherbourg and only 77 of passengers embarked Titanic in Queenstown.","978d2636":"**Observations from Pandas Profiling before Data Processing**\n__Dataset info__:\n- Number of variables: 12\n- Number of observations: 891\n- Missing cells: 8.1%\n\n__Variables types__: \n- Numeric = 6\n- Categorical = 4\n- Text (Unique) = 1\n- Rejected = 0\n\n\n\n- **Survived** has two distinct values.\n- The mean of **Age** is found to be **29.7**\n- The maximum **Fare** is found to be **512** with an average of **32.2**\n- The passengers were embarked from 3 ports of which **Southampton** has the highest number of passengers\n","f7df8cfa":"- The dataset consists of the information about people boarding the famous RMS Titanic. Various variables present in the dataset includes data of age, sex, fare, ticket etc. \n- The dataset comprises of __891 observations of 12 columns__. Below is a table showing names of all the columns and their description.","21e89a70":"- You can notice that the youngest passenger was 5 months old (0.42 year old). Let's see who he or she was?","433757d9":"**Observations:**\n- From the above you can see that its __difficult__ to absorb information quickly by looking at __numbers.__ Therefore we will make variety of plots to get clear vision of the scenario.","e450b570":"# Proposed algorithms for Binary Classification","e1c3ae52":"## Pre-process the test data\n- Converting every categorical columns into numbers\n- Removing the text columns such as names","b8387369":"### 4.Data loading and Description","a5150b55":"- Since the column Cabin has lots of missing entries, so we are dropping that column from the data frame","4743eeff":"- In the upcoming sections we will first __understand our dataset__ using various pandas functionalities.\n- Then with the help of __pandas profiling__ we will find which columns of our dataset need preprocessing.\n- In __preprocessing__ we will deal with erronous and missing values of columns. \n- Again we will do __pandas profiling__ to see how preprocessing have transformed our dataset.","76953b3c":"### Creating best model with hyper turned parameters","499aae40":"## Genrating output file","324cff8f":"**Observations:**\n- We can see that there are **missing data** as all features do not contain **equal number of records**.\n- All the **variables** are present in **appropriate data types**.","4fb2096e":"- First of all looking at how __Age is varying with gender.__","e4c19ff2":"- Using Countplot","9771434f":"### Converting categorical features into numeric","78178d82":"## Table of Contents\n\n1. [Introduction](#section1)<br>\n2. [Problem statement](#section2)\n3. [Importing dependencies](#section3)\n4. [Data Loading and Description](#section)\n5. [Data Profiling](#section3)\n    - 5.1   [Understanding the Dataset](#section301)<br\/>\n    - 5.2   [Pre Profiling](#section302)<br\/>\n    - 5.3   [Preprocessing](#section303)<br\/>\n    - 5.4   [Post Profiling](#section304)<br\/>\n6. [Questions](#section6)\n    - 6.1.  [What was the demographic structure of Titanic passengers?](#section601)<br\/>\n    - 6.2.  [What is the survival ratio of Titanic passengers?](#section602)<br\/>\n    - 6.3.  [Who is more likely to survive Man, Woman or Children?](#section603)<br\/>\n    - 6.4.  [What is the rate of survival of man, woman and children on the basis of Ticket Class?](#section604)<br\/>\n    - 6.5.  [How is age related to Ticket_Class?](#section605)<br\/>\n    - 6.6.  [How fare is related to Age, Class and Port of Embarkation?](#section606)<br\/>\n    - 6.7.  [What is the survival rate considering the Embarked variable?](#section607)<br\/>\n    - 6.8.  [Survival rate - Comparing Embarked and Sex.](#section608)<br\/>\n    - 6.9.  [How survival rate vary with Embarked, Sex and Ticket_Class?](#section609)<br\/>\n    - 6.10. [Segment age in bins with size 10.](#section610)<br\/>\n    - 6.11. [Analysing SibSp and Parch variable.](#section611)<br\/>\n    - 6.12. [Segment fare in bins of size 12.](#section612)<br\/>\n    - 6.13. [Draw pair plot to know the joint relationship between 'Fare','Age','Ticket_Class' and 'Survived'](#section613)<br\/>\n    - 6.14. [Establish coorelation between all the features using heatmap.](#section614)<br\/>\n    - 6.15. [Hypothesis: Women and children are more likely to survive](#section615)<br\/>\n7. [Conclusions](#section7)<br\/>  ","c89591af":"**Observations:**\n- In titanic RMS __Children__ of Age __3-8__ yrs are in majority.\n- Maximum __Men and Women__ are of Age __25-35__ yrs. ","dd331781":"## Splitting the dataset","31701eca":"Observations:\n\n- 608 passengers travelled without any siblings or spouse. \n\n- 209 passengers travelled with one child or spouse. \n\n- Only 74 passengers traveled with more than one sibling or spouse.","53c87313":"### 6. Exploratory Data Analysis","dd1512b2":"- Segmenting __Sex__ column as per __Age__, Age less than 15 as __Child__, Age greater than 15 as __Males and Females__ as per their gender.","39ce050f":"**Observations:**\n- Majority of __males died__.\n- __Females__ have high probability to __survive.__","50b52cff":"- Dealing with missing values<br\/>\n    - Dropping\/Replacing missing entries of __Embarked.__\n    - Replacing missing values of __Age__ with median values.\n    - Dropping the column __'Cabin'__ as it has too many _null_ values.\n    - Dropping the column __'PassengerID'__,__'Name'__ and __'Ticket'__","d87aba0c":"### 3.Importing packages                                          ","cfc6a7a4":"**Observations:**\n- The mean of the **Age** of the passengers is found to be **29.7** years with quite large standard deviation of 14.5264. Age distribution is centered around 20-30 years ranging to 80 with quite large number of children aged 0-5. The minimum age is 0.42 years and the maximum age is 80 years. The median value is 28 years.\n\n- On average, Passengers were not travelling with their *parents and children*.\n\n- The maximum fare is found to be **512** dollars. Fare attribute values distribution is strongly positevely skewed with mean 32.2042 and large stadard deviation of 49.6934. Because the distribution is skewed median is much smaller than the mean with value of 14.4542. The range of data is large ranging from 0 to 512. At the same time 75% of the data is lower than 31.\n\n- Ticket_Class distribution shows that almost 500 out of all 891 passengers in the dataset were travelling the third class and 200 passengers were travelling both in first and second class.\n\n- SibSp (number of siblings\/spouses aboard) is similar to Parch distribution but with larger number of passengers travelling with one sibling\/spouse.\n\n- Survived obviously shows only two values but we can also see that number of survivors is much smaller than the number of passengers who died in the disaster.","7ac3c6ae":"To gain insights from data we must look into each aspect of it very carefully. We will start with observing few rows and columns of data both from the starting and from the end","60970f98":"## 7. Conclusion \n\n- With the help of this notebook we learnt how exploratory data analysis can be carried out using Pandas plotting.\n- Also we have seen making use of packages like __matplotlib and seaborn__ to develop better insights about the data.<br\/>\n- We have also seen how __pre-proceesing__ helps in dealing with _missing_ values and irregualities present in the data. We also learnt how to _create new features_ which will in turn help us to better predict the survival. \n- We also make use of __pandas profiling__ feature to generate an html report containing all the information of the various features present in the dataset.\n- We have seen the impact of columns like _Age, Embarked, Fare, SibSp and Parch_ on the rate of survival.\n- The most important inference drawn from all this analysis is, we get to know what are the __features on which survival is highly positively and negatively correlated with.__ \n- This analysis will help us to choose which __machine learning model__ we can apply to predict survival of test dataset. ","4b10a429":"**Observations:**\n- titanic_data has __891 rows__ and __12 columns.__","0856a85c":"<a id=section1><\/a>\n### 2. Problem Statement\n\n- On __April 15, 1912__, the largest passenger liner ever made collided with an __iceberg__ during her maiden voyage. \n\n- When the __Titanic sank it killed 1502 out of 2224 passengers and crew__.\n\n- This __sensational__ tragedy shocked the international community and led to better safety regulations for **ships**. \n\n- One of the reasons that the **shipwreck** resulted in such loss of life was that there were **not enough lifeboats** for the passengers and crew. \n\n- Although there was some element of luck involved in surviving the sinking, some groups of people were more likely to survive than others such as **women, children, and the upper-class.**\n\n<br> \n<center><img src=\"https:\/\/raw.githubusercontent.com\/insaid2018\/Term-2\/master\/images\/anigif_sub-buzz-2417-1580340238-6.gif\" width=\"600\" height=\"360\" \/><\/center>\n<br> \n\n- The **`titanic.csv`** file contains data for **891** of the real Titanic passengers. \n  - Each row represents one person. \n\n  - The columns describe different attributes about the person including whether they survived, their age, their ticket-class, their sex and the fare they paid.\n\n<br> \n\n- The goal of this analysis is to analyse the data set, explore it answering related questions using data visualization and statistical methods. \n\n- There are also some questions we would like to answer with Titanic dataset analysis.\n\n  - What is passengers demographic structure analyzed in terms of attributes?\n\n  - What is the overall passengers survival ratio?\n\n  - Which groups have higher chances for survival?","83379219":"- Using factorplot ","ec9b2154":"###5.3 Preprofiling","72662e0e":"## Checking MAE","5c1a690b":"### 6.15. Hypothesis: Women and children are more likely to survive","42489ece":"## 5. Data Profiling","ddd6edc4":"- Since the columns PassengerID,Name and Ticket does not make any differences to our analysis, so we will drop those columns as well  ","81bc4e07":"## Verifying the genrated dataset shape","b9ff3330":"### Applying one hot encoding to categoricl columns","60316398":"- Creating a new column **FamilySize** by adding **SibSp** and **Parch** and **self**","79459851":"- It was a boy named Assed Alexander Thomas born in Hard\u012bn, Lebanon on 8 November 1911.\n\n- From the above information we can see that the child survived","36a23a95":"- Since male and female does'not look suitable for People_Class so let's change it to Man and Woman respectively ","bedb0ad9":"### 6.2. What is the survival ratio of Titanic passengers?\n\nSurvival ratio metric is defined as the ratio between the number of survived passengers and the overall number of passengers.","d4264592":"- Since Age is having 177 missing entries, so we will fill the entries with the median of the Age column","c6021b20":"| Column Name   | Description                                               |\n| ------------- |:-------------                                            :| \n| PassengerId   | Passenger Identity                                        | \n| Survived      | Whether passenger survived or not: 0 = People died,   1 = People survived                         |  \n| Pclass        | Class of ticket: 1 = First Class, 2 = Second class, 3 = Third class                                         | \n| Name          | Name of passenger                                         |   \n| Sex           | Sex of passenger                                          |\n| Age           | Age of passenger                                          |\n| SibSp         | Number of sibling and\/or spouse travelling with passenger |\n| Parch         | Number of parent and\/or children travelling with passenger|\n| Ticket        | Ticket number                                             |\n| Fare          | Price of ticket                                           |\n| Cabin         | Cabin number                                              |\n| Embarked      | Source of the passenger                                   |"}}