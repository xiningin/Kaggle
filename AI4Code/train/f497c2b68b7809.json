{"cell_type":{"bc25978c":"code","59e4893a":"code","c6965504":"code","fc9c47e1":"code","d76ebeae":"code","031a2eeb":"code","a2f1e6be":"code","44997cc3":"code","69992d31":"markdown","0f473cec":"markdown","8cb6ff38":"markdown","dc0cab03":"markdown","1ce1210b":"markdown","a565c0ae":"markdown","83285cf8":"markdown","ed42041b":"markdown","710c48a0":"markdown","0aed5b01":"markdown","da6a7b82":"markdown"},"source":{"bc25978c":"import pandas as pd \nimport numpy as np \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.ensemble import RandomForestClassifier","59e4893a":"df=pd.read_csv(r'..\/input\/mushroom-classification\/mushrooms.csv')\ndf.describe()","c6965504":"df.head()","fc9c47e1":"\nfor col_name in df.columns:\n    unique,counts=np.unique(df[col_name],return_counts=True)\n    plt.figure(figsize=(12,6))\n    plt.title(col_name)\n    plt.bar(unique,counts)\n    plt.ylabel('Number of ocurrences')\n    plt.xlabel('Possible occurences')\n    plt.show()","d76ebeae":"for col_name in df.columns:\n    if(df[col_name].dtype == 'object'):\n        df[col_name]= df[col_name].astype('category')\n        df[col_name] = df[col_name].cat.codes","031a2eeb":"y=df.pop('class')\nx=df.values\nx_train,x_tst,y_train,y_tst=train_test_split(x,y)","a2f1e6be":"model=MLPClassifier(max_iter=10000).fit(x_train,y_train)\nprint(model.score(x_tst,y_tst))","44997cc3":"x_train,x_tst,y_train,y_tst=train_test_split(x,y)\nmodel=RandomForestClassifier().fit(x_train,y_train)\nprint(model.score(x_tst,y_tst))","69992d31":"# Classification of poisonous and edible mushrooms\n* Objectives \n    \n    * Visualizing the data in the dataset\n    * Building two models for prediction and comparing results\n    \n    * We are going to build the models based on :\n\n        * MLP (Multi layer perceptron)\n        * Random Forest\n    ","0f473cec":"# Building our random forest model","8cb6ff38":"It is your lucky day again you would not die =). The random forest algorithm predicted perfectly","dc0cab03":"Transforming the data from categorical to numerical using pandas.","1ce1210b":"# Preparing the Data","a565c0ae":"**If you enjoyed this notebook please give it a up and feel free to leave a comment any help to make this notebook nicer would be amazing thank you for your attention**","83285cf8":"In this case we changed the values that the model should predict just to make it more fun ","ed42041b":"# Building our MLP model with scikit-learn and showing the score ","710c48a0":"Congratulations in this case you will most likely not die. The MLP algorithm had a perfect prediction. ","0aed5b01":"# Visualizing the data and importing it.","da6a7b82":"Organizing the data to build the model"}}