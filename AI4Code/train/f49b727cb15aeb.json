{"cell_type":{"9d5a807c":"code","f5eb2413":"code","c3f19d83":"code","a852fce9":"code","db96db7c":"code","360c4d9b":"code","c7794a71":"code","83167fdb":"code","92155483":"code","2731a665":"code","2a232e41":"code","8c7898ed":"code","4c8c6192":"code","b55fbc0b":"code","5266570f":"code","d97f712f":"code","55e1343a":"code","7ba9c251":"code","48f25e43":"code","fea738a1":"code","46b21196":"markdown","e029deb3":"markdown","00594c11":"markdown","f923073a":"markdown","20632193":"markdown","344678a9":"markdown","8b6beefa":"markdown","d2c9956a":"markdown","a88d8bf2":"markdown","40de072a":"markdown","5f7493c2":"markdown","bac21d07":"markdown","dcc9f6b1":"markdown","3e51b6ff":"markdown","41bf42b0":"markdown","afe2f460":"markdown","3014476e":"markdown","62cdbff9":"markdown"},"source":{"9d5a807c":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nsns.set_style(\"whitegrid\")\nsns.set(font_scale=1.3)\n","f5eb2413":"multi = pd.read_csv(\"..\/input\/kaggle-survey-2018\/multipleChoiceResponses.csv\", header=1)\ncountries = pd.read_csv(\"..\/input\/countries-classification-by-income\/country_classification.tsv\",\n                       sep=\"\\t\")\n# Add country group: developped or developping\ncountries[\"Group\"] = countries[\"Income group\"].apply(lambda x: \"Developped countries\" if x==\"High income\" else \"Developing countries\")\n\nreplacements = {'Egypt, Arab Rep.':'Egypt','Hong Kong SAR, China':'Hong Kong (S.A.R.)',\n'Iran, Islamic Rep.':'Iran, Islamic Republic of...',\"Korea, Dem. People's Rep.\":'Republic of Korea',\n'Russian Federation':'Russia','Korea, Rep.':'South Korea', 'United Kingdom':'United Kingdom of Great Britain and Northern Ireland',\n'United States':'United States of America','Vietnam':'Viet Nam'}\ncountries['Economy'].replace(replacements, inplace=True)\n\n# Add Group, Income Group and Region to multi choice question\n#First rename column\nmulti.rename(columns={\"In which country do you currently reside?\": \"Country\"}, inplace=True)\nfor k in [\"Group\", \"Income group\", \"Region\"]:\n    group_dict = dict(zip(countries.Economy, countries[k]))\n    group_dict['I do not wish to disclose my location'] = \"Undisclosed location\"\n    group_dict['Other'] = \"Other\"\n    multi[k] = multi[\"Country\"].apply(lambda x: group_dict[x])","c3f19d83":"#regions = multi[\"Region\"].unique().tolist()\nregions = ['North America',\n 'East Asia & Pacific',\n 'South Asia',\n 'Latin America & Caribbean',\n 'Europe & Central Asia',\n 'Sub-Saharan Africa',\n 'Middle East & North Africa']\nincome_group = multi[\"Income group\"].unique().tolist()","a852fce9":"ax = sns.countplot(y=\"Region\", data=multi, order=multi[\"Region\"].value_counts().index,\n                  color=\"darkslateblue\")\nax.set_xlabel(\"Respondents\", labelpad=22)\nax.set_ylabel(\"Region\", labelpad=20)\nax.set_title(\"What region are you from?\", pad=22)\nplt.show()","db96db7c":"multi.rename(columns={\"What is your gender? - Selected Choice\": \"Gender\"}, inplace=True)\n","360c4d9b":"ax = sns.countplot(x=\"Region\", data=multi, hue=\"Gender\", order=multi[\"Region\"].value_counts().index)\nax.set_xlabel(\"Respondents\", labelpad=22)\nax.set_ylabel(\"Count\", labelpad=20)\nax.set_title(\"What is your gender?\", pad=22)\nplt.xticks(rotation=90)\nplt.show()","c7794a71":"multi.rename(columns={'What is your age (# years)?': \"Age\"}, inplace=True)\nage_df = pd.crosstab(multi.Age, multi.Region)*100\/pd.crosstab(multi.Age, multi.Region).sum(axis=0)","83167fdb":"nrows, ncols = 3, 3\nfig = plt.figure(figsize=(13,10))\n#fig.subplots_adjust(hspace=2, wspace=0.3)\nfor i in range(1,8):\n    r = regions[i-1]\n    y = age_df[r]\n    p = np.sort(y.values)[-3]\n    clrs = ['grey' if (x < p) else 'red' for x in y ]\n    ax = fig.add_subplot(nrows, ncols, i)\n    ax = sns.barplot(x=age_df.index, y=y, palette=clrs)\n    ax.set_xlabel(\"Age group\", labelpad=15)\n    ax.set_ylabel(\"Percentage\", labelpad=10)\n    ax.set_title(r, pad=15)\n    plt.xticks(rotation=90)\nplt.tight_layout()\nplt.show()","92155483":"multi.rename(columns={'What is the highest level of formal education that you have attained or plan to attain within the next 2 years?': \"Education\"}, inplace=True)\nmulti[\"Education\"]=multi[\"Education\"].str.replace(\"Some college\/university study without earning a bachelor\u2019s degree\",\"No bachelor's degree\")\nmulti[\"Education\"]=multi[\"Education\"].str.replace(\"No formal education past high school\",\"High school\")\neducation_df = pd.crosstab(multi.Education, multi[\"Region\"])*100\/pd.crosstab(multi.Education, multi[\"Region\"]).sum(axis=0)","2731a665":"nrows, ncols = 3, 3\nfig = plt.figure(figsize=(13,20))\n#fig.subplots_adjust(hspace=2, wspace=0.3)\nfor i in range(1,8):\n    r = regions[i-1]\n    y = education_df[r]\n    p = np.sort(y.values)[-3]\n    clrs = ['grey' if (x < p) else 'red' for x in y ]\n    ax = fig.add_subplot(nrows, ncols, i)\n    ax = sns.barplot(x=education_df.index, y=y, palette=clrs)\n    ax.set_ylim([0, 55])\n    ax.set_xlabel(\"Education\", labelpad=15)\n    ax.set_ylabel(\"Percentage\", labelpad=10)\n    ax.set_title(r, pad=15)\n    plt.xticks(rotation=90)\nplt.tight_layout()\nplt.show()","2a232e41":"multi.rename(columns={'Which best describes your undergraduate major? - Selected Choice': \"Undergraduate major\"}, inplace=True)\nundergrad_major={\"A business discipline \\(accounting, economics, finance, etc.\\)\": \"Business discipline\",\n\"Computer science \\(software engineering, etc.\\)\":\"Computer Science\",\n\"Engineering \\(non-computer focused\\)\":\"Engineering\",\n\"Environmental science or geology\":\"Environmental science\",\n\"Fine arts or performing arts\":\"Fine arts\",\n\"Humanities \\(history, literature, philosophy, etc.\\)\":\"Humanitites\",\n\"Information technology, networking, or system administration\":\"IT\",\n\"Mathematics or statistics\":\"Maths\/Stats\",\n\"Medical or life sciences \\(biology, chemistry, medicine, etc.\\)\":\"Medical\/life sciences\",\n\"Social sciences \\(anthropology, psychology, sociology, etc.\\)\":\"Social sciences\",\n\"Physics or astronomy\":\"Physics\/astro\",\n\"No formal education past high school\":\"High school\",\n\"Some college\/university study without earning a bachelor\u2019s degree\":\"No bachelor's degree\"}\nfor k,v in undergrad_major.items():\n    multi[\"Undergraduate major\"]=multi[\"Undergraduate major\"].str.replace(k,v)\nmajor_df = pd.crosstab(multi[\"Undergraduate major\"], multi[\"Region\"])*100\/pd.crosstab(multi[\"Undergraduate major\"], multi[\"Region\"]).sum(axis=0)","8c7898ed":"nrows, ncols = 3, 3\nfig = plt.figure(figsize=(13,20))\n#fig.subplots_adjust(hspace=2, wspace=0.3)\nfor i in range(1,len(regions)+1):\n    r = regions[i-1]\n    y = major_df[r]\n    p = np.sort(y.values)[-3]\n    clrs = ['grey' if (x < p) else 'red' for x in y ]\n    ax = fig.add_subplot(nrows, ncols, i)\n    ax = sns.barplot(x=major_df.index, y=y, palette=clrs)\n    ax.set_ylim([0, 60])\n    ax.set_xlabel(\"Major\", labelpad=15)\n    ax.set_ylabel(\"Percentage\", labelpad=10)\n    ax.set_title(r, pad=15)\n    plt.xticks(rotation=90)\nplt.tight_layout()\nplt.show()","4c8c6192":"multi.rename(columns={'Select the title most similar to your current role (or most recent title if retired): - Selected Choice': \"Current role\"}, inplace=True)\nrole_df = pd.crosstab(multi[\"Current role\"], multi[\"Region\"])*100\/pd.crosstab(multi[\"Current role\"], multi[\"Region\"]).sum(axis=0)","b55fbc0b":"nrows, ncols = 3, 3\nfig = plt.figure(figsize=(13,20))\n#fig.subplots_adjust(hspace=2, wspace=0.3)\nfor i in range(1,len(regions)+1):\n    r = regions[i-1]\n    y = role_df[r]\n    p = np.sort(y.values)[-3]\n    clrs = ['grey' if (x < p) else 'red' for x in y ]\n    ax = fig.add_subplot(nrows, ncols, i)\n    ax = sns.barplot(x=role_df.index, y=y, palette=clrs)\n    ax.set_ylim([0, 35])\n    ax.set_xlabel(\"Current role\", labelpad=15)\n    ax.set_ylabel(\"Percentage\", labelpad=10)\n    ax.set_title(r, pad=15)\n    plt.xticks(rotation=90)\nplt.tight_layout()\nplt.show()","5266570f":"multi.rename(columns={'What is your current yearly compensation (approximate $USD)?': \"Salary\"}, inplace=True)\nmulti[\"Salary\"]=multi[\"Salary\"].str.replace(\"I do not wish to disclose my approximate yearly compensation\",\"Undisclosed\")\nordered_salary = ['0-10,000','10-20,000','20-30,000','30-40,000','40-50,000','50-60,000',\n'60-70,000','70-80,000','80-90,000','90-100,000','100-125,000','125-150,000',\n '150-200,000','200-250,000','250-300,000','300-400,000','400-500,000','500,000+','Undisclosed']\nsalary_df = pd.crosstab(multi[\"Salary\"], multi[\"Region\"])*100\/pd.crosstab(multi[\"Salary\"], multi[\"Region\"]).sum(axis=0)\nsalary_df=salary_df.reindex(ordered_salary)","d97f712f":"nrows, ncols = 3, 3\nfig = plt.figure(figsize=(13,20))\n#fig.subplots_adjust(hspace=2, wspace=0.3)\nfor i in range(1,len(regions)+1):\n    r = regions[i-1]\n    y = salary_df[r]\n    p = np.sort(y.values)[-3]\n    clrs = ['grey' if (x < p) else 'red' for x in y ]\n    ax = fig.add_subplot(nrows, ncols, i)\n    ax = sns.barplot(x=salary_df.index, y=y, palette=clrs)\n    ax.set_ylim([0, 45])\n    ax.set_xlabel(\"Salary\", labelpad=15)\n    ax.set_ylabel(\"Percentage\", labelpad=10)\n    ax.set_title(r, pad=15)\n    plt.xticks(rotation=90)\nplt.tight_layout()\nplt.show()","55e1343a":"multi_salary = multi[multi[\"Current role\"]==\"Data Scientist\"]\nds_salary_df = pd.crosstab(multi_salary[\"Salary\"], multi_salary[\"Region\"])*100\/pd.crosstab(multi_salary[\"Salary\"], multi_salary[\"Region\"]).sum(axis=0)\nds_salary_df = ds_salary_df.reindex(ordered_salary)","7ba9c251":"nrows, ncols = 3, 3\nfig = plt.figure(figsize=(13,20))\n#fig.subplots_adjust(hspace=2, wspace=0.3)\nfor i in range(1,len(regions)+1):\n    r = regions[i-1]\n    y = ds_salary_df[r]\n    p = np.sort(y.values)[-3]\n    clrs = ['grey' if (x < p) else 'red' for x in y ]\n    ax = fig.add_subplot(nrows, ncols, i)\n    ax = sns.barplot(x=ds_salary_df.index, y=y, palette=clrs)\n    ax.set_ylim([0, 35])\n    ax.set_xlabel(\"Salary\", labelpad=15)\n    ax.set_ylabel(\"Percentage\", labelpad=10)\n    ax.set_title(r, pad=15)\n    plt.xticks(rotation=90)\nplt.tight_layout()\nplt.show()","48f25e43":"multi.rename(columns={'What is the primary tool that you use at work or school to analyze data? (include text response) - Selected Choice': \"Tool\"}, \n             inplace=True)\ntools={'Cloud-based data software & APIs \\(AWS, GCP, Azure, etc.\\)':'Cloud-based',\n       'Basic statistical software \\(Microsoft Excel, Google Sheets, etc.\\)':'Basic SS',\n       'Local or hosted development environments \\(RStudio, JupyterLab, etc.\\)':'Development',\n       'Advanced statistical software \\(SPSS, SAS, etc.\\)':'Advanced SS',\n       'Business intelligence software \\(Salesforce, Tableau, Spotfire, etc.\\)':'BI'}\nfor k,v in tools.items():\n    multi[\"Tool\"]=multi[\"Tool\"].str.replace(k,v)\ntool_df = pd.crosstab(multi[\"Tool\"], multi[\"Region\"])*100\/pd.crosstab(multi[\"Tool\"], multi[\"Region\"]).sum(axis=0)","fea738a1":"nrows, ncols = 3, 3\nfig = plt.figure(figsize=(13,20))\n#fig.subplots_adjust(hspace=2, wspace=0.3)\nfor i in range(1,len(regions)+1):\n    r = regions[i-1]\n    y = tool_df[r]\n    p = np.sort(y.values)[-3]\n    clrs = ['grey' if (x < p) else 'red' for x in y ]\n    ax = fig.add_subplot(nrows, ncols, i)\n    ax = sns.barplot(x=tool_df.index, y=y, palette=clrs)\n    ax.set_ylim([0, 60])\n    ax.set_xlabel(\"Tool\", labelpad=15)\n    ax.set_ylabel(\"Percentage\", labelpad=10)\n    ax.set_title(r, pad=15)\n    plt.xticks(rotation=90)\nplt.tight_layout()\nplt.show()","46b21196":"First, let's look at the kagglers distribution in the different regions","e029deb3":"## Undergraduate major","00594c11":"Let's look at the kagglers in each region of the world. We will group countries by regions used by the World Bank: North America, East Asia & Pacific, South Asia, Latin America & Caribbean, Europe & Central Asia, Sub-Saharan Africa, Middle East & North Africa","f923073a":"Most regions are largely dominated by one country: Brazil in Latin America & Caribbean region,  USA in North America, India in South Asia, China in East Asia & Pacific. Europe & Central Asia is dominated by Russia and western european countries. Middle East & North Africa together with Sub-Saharan Africa are underrepresented","20632193":"Local or hosted development environments are the most popular, followed by basic statistical software.","344678a9":"It looks like data scientists earn much more  in North America.","8b6beefa":"Let's look at the yearly compensations of data scientists in the different regions","d2c9956a":"Data scientist, software engineer and students are the top 3 roles, except for sub-saharan africa where there are more data analysts than software engineer. Students are the dominant group in East Asia, South Asia, and Sub-Saharan Africa, whereas data scientist is leading (not by much) in North America, Latin America, Europe and Middle East & North Africa.","a88d8bf2":"## Age","40de072a":"A Computer science major is the most common major among kagglers, followed by engineering and maths\/stats.  Maths\/stats major takes second place over engineering in Europe\/Central Asia and Subsaharan Africa","5f7493c2":"A Master's degree appears to be the most common degree in the different regions, except for India where more kagglers have or are pursuing a Bachelor's degree. This might be related to the younger age of the kaggling community in India. In Europe & Central Asia, the proportion of Doctoral degree is higher than the Bachelor's degree.  Sub-saharan African is the only region where No formal education past high school make it to the top 3.","bac21d07":"## What tool do they usually use?","dcc9f6b1":"## Gender","3e51b6ff":"## Education","41bf42b0":"## About money","afe2f460":"We see a similar trend for the regions where kagglers between 22-34 are dominating the scene. The exception is for the South Asia region, basically India, where kagglers are much younger.","3014476e":"Well, most people do not want to disclose their yearly compensation. We see a common trend of decreasing proportion of people as compensation increase. The exception is for North America where we see peaks around 100-150000$.","62cdbff9":"## Current role"}}