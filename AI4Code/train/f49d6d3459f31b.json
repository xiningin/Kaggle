{"cell_type":{"05feb7cf":"code","05dc36b3":"code","c4fb4301":"code","ef7b2a33":"code","94bd9356":"code","81c40fe2":"code","4d2d116b":"code","7836f970":"code","11f55bb9":"code","23b87028":"code","1d4d7ffa":"markdown","39a56509":"markdown","f20d420b":"markdown","791097a2":"markdown","7b41dd38":"markdown","58d73d36":"markdown","8409f229":"markdown","54223d58":"markdown","0550a30e":"markdown","eb1fa97f":"markdown","1e2997ad":"markdown","17c651d6":"markdown","16511038":"markdown"},"source":{"05feb7cf":"# Import all the important libraries first. \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom matplotlib import style\nimport pandas as pd\nfrom pandas.plotting import scatter_matrix\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.linear_model import LogisticRegression\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n# import os\n# for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#     for filename in filenames:\n#         print(os.path.join(dirname, filename))\n        \nfruits = pd.read_table('..\/input\/fruits-with-colors-dataset\/fruit_data_with_colors.txt')\n# Check out the data\nfruits.head()\n\n","05dc36b3":"fruits.describe()","c4fb4301":"fruits.isna().sum()","ef7b2a33":"style.use('dark_background')\nfruits.drop(['fruit_label'], axis=1).plot(kind='box', layout=(2,2),figsize=(8,9), subplots=True, sharey = False)\n\nplt.show()","94bd9356":"atts = ['mass','width','height','color_score']\nscatter_matrix(fruits[atts], figsize=(12,12))","81c40fe2":"X = fruits[['mass','width', 'height']]\ny = fruits['fruit_label']\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0)","4d2d116b":"knn = KNeighborsClassifier()\nknn.fit(X_train, y_train)\nknn.score(X_test, y_test)","7836f970":"error_rate = []\nfor i in range(1,20):\n    knn=KNeighborsClassifier(n_neighbors=i)\n    knn.fit(X_train, y_train)\n    pred_i = knn.predict(X_test)\n    error_rate.append(np.mean(pred_i != y_test))\n    \nprint(error_rate)","11f55bb9":"plt.plot(range(1,20), error_rate)\nplt.title('Error Rate vs K value')\nplt.show()","23b87028":"lookup_fruit_name = dict(zip(fruits.fruit_label.unique(), fruits.fruit_name.unique()))\nfruit_prediction = knn.predict([[20, 4.3, 5.3]])\nlookup_fruit_name[fruit_prediction[0]]","1d4d7ffa":"Plot error rate vs K values","39a56509":"Mass is highly correlated with Height and width","f20d420b":"### Further test the accuracy of the model","791097a2":"## Try predicting fruit","7b41dd38":"# Split Training and Testing data","58d73d36":"## Visualize the the distribution if any or all the features","8409f229":"No NULL values. ","54223d58":"We can see that error rate is at its lowest at K=6 after 4(as total classes of fruits are 4 so we need to take k > 4). Default is always 5","0550a30e":"## Check for missing values","eb1fa97f":"# Fit and train using k-NN","1e2997ad":"Mass, Height, Width have a few outliers whereas color_score seems to represent a relatively  Normal Distribution","17c651d6":"# Visualize  the data","16511038":"## Pairwise colleration among features"}}