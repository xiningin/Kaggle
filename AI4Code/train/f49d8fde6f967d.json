{"cell_type":{"ba944a8e":"code","4951cb0d":"code","5d641c62":"code","c2ba9cee":"code","8e219ee8":"code","cf66cfe1":"code","9d148b91":"code","665b27f7":"code","2cec85ad":"code","647da6e5":"code","7ffab453":"code","8d76652c":"code","442cbec2":"code","df6716b6":"code","406ea1b7":"code","d19f5f08":"code","c698f7a5":"code","9f253d17":"code","8fa2867a":"code","39b84253":"code","7aeab2d9":"code","f921b888":"code","f7fe2995":"markdown","d36bf404":"markdown","3611377a":"markdown","5c5cca7a":"markdown","784aefa4":"markdown","b8d47fda":"markdown","f2589a8b":"markdown","534bcc7a":"markdown","df7ea678":"markdown","6542082b":"markdown"},"source":{"ba944a8e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4951cb0d":"import seaborn as sb\nimport matplotlib.pyplot as plt\nimport plotly.express as px","5d641c62":"df=pd.read_csv(\"\/kaggle\/input\/how-much-faster-is-the-tokyo-track\/track OL vs WCh.csv\")\ndf.head()","c2ba9cee":"df.tail()","8e219ee8":"df.shape","cf66cfe1":"df.describe()","9d148b91":"df.dtypes","665b27f7":"df.isnull().sum()","2cec85ad":"df[\"Lane\"]=df[\"Lane\"].fillna(df[\"Lane\"].median())","647da6e5":"df.isnull().sum()","7ffab453":"df[\"Rank\"].unique()","8d76652c":"df[\"Rank\"]=df[\"Rank\"].fillna(33)","442cbec2":"df[\"Rank\"]=df[\"Rank\"].replace(\"\ufffd\",33)","df6716b6":"df.isnull().sum()","406ea1b7":"df[\"Notes\"].unique()","d19f5f08":"df.head()","c698f7a5":"plt.subplot(1,4,1)\nplt.subplots_adjust(left=0,right=2,bottom=1,top=2,wspace=0.2,hspace=0.4)\nlabel_age=['Olympics', 'World Championship']\nplt.title(\"Where\")\nplt.pie(df.groupby(df[\"Where\"]).size(),labels=label_age)\n\nplt.subplot(1,4,2)\nlabel_gen=[2021, 2016, 2015, 2019]\nplt.title(\"Year\")\nplt.pie(df.groupby(df[\"Year\"]).size(),labels=label_gen)\n\nplt.subplot(1,4,3)\nlabel_ed=['Run', 'Hurdles', 'Steeplechase']\nplt.title(\"Event\")\nplt.pie(df.groupby(df[\"Event\"]).size(),labels=label_ed)\n\nplt.subplot(1,4,4)\nlabel_lw=['M', 'F']\nplt.title(\"Sex\")\nplt.pie(df.groupby(df[\"Sex\"]).size(),labels=label_lw)\nplt.show()","9f253d17":"df[\"Rank\"]=df[\"Rank\"].astype(\"int\")","8fa2867a":"plt.subplot(1,2,1)\nplt.subplots_adjust(left=0,right=2,bottom=1,top=2,wspace=0.2,hspace=0.4)\nplt.xticks(rotation = \"vertical\")\nplt.title(\"Event vs Distance\")\nsb.barplot(x=\"Event\" ,y=\"Distance\", data=df)\n\nplt.subplot(1,2,2)\nplt.title(\"Year\")\nsb.countplot(x=\"Year\", data=df)\nplt.show()\n\n","39b84253":"fig = px.box(df, y=\"Distance\")\nfig.show()","7aeab2d9":"fig = px.box(df, y=\"Rank\")\nfig.show()","f921b888":"fig = px.box(df, y=\"Lane\")\nfig.show()","f7fe2995":"## Statistical Descriptive values","d36bf404":"## Visualization","3611377a":"- Not handling nulls of column Notes.","5c5cca7a":"- Raplacing nulls in column Rank by value 33.","784aefa4":"## Size of the data","b8d47fda":"## Reading data","f2589a8b":"## Boxplot","534bcc7a":"## Replace nulls\n- Replace null values with median of column Lane.","df7ea678":"## Data types of Features","6542082b":"## Null values"}}