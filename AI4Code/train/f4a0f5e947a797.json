{"cell_type":{"bbe81197":"code","36d51418":"code","5d6b706a":"code","a9d4a1a7":"code","c9e936e6":"code","9a0362e6":"code","0ede4e2d":"code","b77e4332":"code","86b4d89b":"code","6c3293bf":"code","be026f21":"code","ad359048":"code","98352a40":"code","f7755213":"code","082ec115":"code","87c2a22f":"code","d799a9fd":"code","c6cb39a6":"code","01b02d2d":"code","2f1f0c92":"code","1c6d20ce":"code","94b86fcc":"code","4a2ca38b":"code","46aa4eb3":"code","e77ea7b9":"code","d59bb72f":"code","25461557":"code","dec41262":"code","0827fa15":"code","e51dc7ab":"code","f2326ef9":"code","18dfb9a0":"code","99e08e92":"code","538a37e4":"code","2aea57bb":"markdown","3f27cdc7":"markdown","dffcbfeb":"markdown","3b392aa5":"markdown","d66d6b2c":"markdown","0d76be03":"markdown","aa7fc79e":"markdown","09576b26":"markdown","4c6997bb":"markdown","b156b3d8":"markdown","c1393133":"markdown","a50d6d9b":"markdown","0fd4b951":"markdown","4182b5f3":"markdown","dbee180b":"markdown","e66307c3":"markdown","589606cf":"markdown","e6dc85ad":"markdown","44e86061":"markdown","1e137cf3":"markdown","881cb342":"markdown","fe97b9dd":"markdown","9ba09e50":"markdown","90eb4363":"markdown"},"source":{"bbe81197":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport matplotlib.dates as mdates\nimport seaborn as sns\n\nimport scipy.stats as stats\nfrom scipy.stats import norm\nfrom scipy.special import boxcox1p\n\nimport statsmodels\nimport statsmodels.api as sm\n#print(statsmodels.__version__)\n\nplt.style.use('fivethirtyeight') ","36d51418":"# import japan data\ndfj = pd.read_csv('..\/input\/japan-interest-rates\/MOFJ-INTEREST_RATE_JAPAN.csv', parse_dates=['Date'], index_col = 'Date')\ndfj.tail()","5d6b706a":"dfus = pd.read_csv('..\/input\/fedselectedinterestrates\/FRB_H15.csv')\ndfus = dfus.iloc[5:]\ndfus = dfus.rename(columns = {'Series Description':'Date',\n        'Market yield on U.S. Treasury securities at 1-month   constant maturity, quoted on investment basis':'1M',\n       'Market yield on U.S. Treasury securities at 3-month   constant maturity, quoted on investment basis':'3M',\n       'Market yield on U.S. Treasury securities at 6-month   constant maturity, quoted on investment basis':'6M',\n       'Market yield on U.S. Treasury securities at 1-year   constant maturity, quoted on investment basis':'1Y',\n       'Market yield on U.S. Treasury securities at 2-year   constant maturity, quoted on investment basis':'2Y',\n       'Market yield on U.S. Treasury securities at 3-year   constant maturity, quoted on investment basis':'3Y',\n       'Market yield on U.S. Treasury securities at 5-year   constant maturity, quoted on investment basis':'5Y',\n       'Market yield on U.S. Treasury securities at 7-year   constant maturity, quoted on investment basis':'7Y',\n       'Market yield on U.S. Treasury securities at 10-year   constant maturity, quoted on investment basis':'10Y',\n       'Market yield on U.S. Treasury securities at 20-year   constant maturity, quoted on investment basis':'20Y',\n       'Market yield on U.S. Treasury securities at 30-year   constant maturity, quoted on investment basis':'30Y'})\ndfus['Date']=pd.to_datetime(dfus['Date'])\ndfus = dfus.set_index('Date')\nfor c in dfus.columns:\n    dfus[c] = pd.to_numeric(dfus[c], errors='coerce')\ndfus.tail()","a9d4a1a7":"for c in dfus.columns:\n    dfus = dfus.rename(columns = {c: 'US_'+c})\ndfus.tail()\nfor c in dfj.columns:\n    dfj = dfj.rename(columns = {c: 'JPN_'+c})\ndfj.head()\n\ndf = dfj.join(dfus, how='outer')\n\nfor c in dfus.columns:\n    dfus = dfus.rename(columns = {c: c[3:]})\n\nfor c in dfj.columns:\n    dfj = dfj.rename(columns = {c: c[4:]})\n    \ndf.tail()","c9e936e6":"us_summ = dfus.describe()\nus_summ = us_summ.transpose()\nus_summ","9a0362e6":"j_summ = dfj.describe()\nj_summ = j_summ.transpose()\nj_summ","0ede4e2d":"plt.plot(us_summ['max'])","b77e4332":"fig, ax = plt.subplots(1, 2, figsize=(20,6))\n\nax[0].plot(us_summ['max'], color='red', linestyle = '-.', linewidth=1, label = 'max')\nax[0].plot( us_summ['mean'] + us_summ['std'], color='blue', linestyle = '-.', linewidth=1, label = 'mean + std')\nax[0].plot( us_summ['mean'], color='blue')\nax[0].plot(us_summ['mean'] - us_summ['std'], color='blue', linestyle = '-.', linewidth=1, label = 'mean - std')\nax[0].plot( us_summ['min'], color='red', linestyle = '-.', linewidth=1, label = 'min')\nax[0].fill_between(us_summ.index, us_summ['min'], us_summ['mean'] - us_summ['std'], color='r', alpha=.1)\nax[0].fill_between(us_summ.index, us_summ['mean'] + us_summ['std'], us_summ['max'], color='r', alpha=.1)\nax[0].fill_between(us_summ.index, us_summ['mean'] - us_summ['std'], us_summ['mean'] + us_summ['std'], color='b', alpha=.1)\nax[0].legend(fontsize=12, loc = 'upper left');\nax[0].set_ylim(-2.5, 18)\nax[0].set_xlabel('Bond duration')\nax[0].set_ylabel('Yield [%]')\nax[0].set_title('United States')\n\nax[1].plot(j_summ['max'], color='red', linestyle = '-.', linewidth=1, label = 'max')\nax[1].plot( j_summ['mean'] - j_summ['std'], color='blue', linestyle = '-.', linewidth=1, label = 'mean - std')\nax[1].plot( j_summ['mean'], color='blue')\nax[1].plot(j_summ['mean'] + j_summ['std'], color='blue', linestyle = '-.', linewidth=1, label = 'mean + std')\nax[1].plot( j_summ['min'], color='red', linestyle = '-.', linewidth=1, label = 'min')\nax[1].fill_between(j_summ.index, j_summ['min'], j_summ['mean'] - j_summ['std'], color='r', alpha=.1)\nax[1].fill_between(j_summ.index, j_summ['mean'] + j_summ['std'], j_summ['max'], color='r', alpha=.1)\nax[1].fill_between(j_summ.index, j_summ['mean'] - j_summ['std'], j_summ['mean'] + j_summ['std'], color='b', alpha=.1)\nax[1].legend(fontsize=12);\nax[1].set_ylim(-2.5, 18)\nax[1].set_xlabel('Bond duration')\nax[1].set_ylabel('Yield [%]')\nax[1].set_title('Japan')","86b4d89b":"fig, ax = plt.subplots(4,3,figsize=(24, 12))\nfor i, c in enumerate(dfus.columns):\n    ax[i\/\/3][i%3].plot(dfus[c], label = c )\n    ax[i\/\/3][i%3].legend()\n    ax[i\/\/3][i%3].set_ylabel('Yield [%]')\nfig.delaxes(ax[3][2])","6c3293bf":"fig, ax = plt.subplots(5,3,figsize=(24, 12))\nfor i, c in enumerate(dfj.columns):\n    ax[i\/\/3][i%3].plot(dfj[c], label = c )\n    ax[i\/\/3][i%3].set_ylabel('Yield [%]')\n    ax[i\/\/3][i%3].legend()","be026f21":"f, ax = plt.subplots(1,2, figsize=(18,6))\ncorrmatrixus = dfus.corr()\nsns.heatmap(corrmatrixus, square=True, ax=ax[0])\nax[0].set_title('US')\ncorrmatrixj = dfj.corr()\nsns.heatmap(corrmatrixj, square=True, ax=ax[1])\nax[1].set_title('Japan')","ad359048":"dfus.columns","98352a40":"fig, ax = plt.subplots(2,3, figsize=(24, 12))\nfor i, c in enumerate(['30Y', '20Y', '10Y', '7Y', '5Y', '3Y']):\n    ax[i\/\/3][i%3].plot(dfus['1M'], dfus[c],'r+')\n    ax[i\/\/3][i%3].set_xlabel('Y$_{1M}$')\n    ax[i\/\/3][i%3].set_ylabel('Y$_{'+c+'}$')","f7755213":"fig, ax = plt.subplots(figsize=(18,5))\nax.plot(dfus['1M'])\nax.plot(dfus['30Y'])\nax.set_xlim('2000-01-01', '2020-01-01')\nax.set_ylim(0, 8)","082ec115":"dfj.columns","87c2a22f":"fig, ax = plt.subplots(2,3, figsize=(24, 12))\nfor i, c in enumerate(['1Y', '2Y', '3Y', '4Y', '5Y', '6Y']):\n    ax[i\/\/3][i%3].plot(dfj['30Y'], dfj[c],'k+')\n    ax[i\/\/3][i%3].set_xlabel('Y$_{30Y}$')\n    ax[i\/\/3][i%3].set_ylabel('Y$_{'+c+'}$')","d799a9fd":"fig, ax = plt.subplots(figsize=(18,5))\nax.plot(dfj['2Y'])\nax.plot(dfj['30Y'])\nax.set_xlim('1998-01-01', '2020-01-01')\nax.set_ylim(-0.5, 3)","c6cb39a6":"fig, ax = plt.subplots(figsize=(18,5))\nax.plot(dfj['6Y'])\nax.plot(dfj['30Y'])\nax.set_xlim('1998-01-01', '2020-01-01')\nax.set_ylim(-0.5, 3)","01b02d2d":"f, ax = plt.subplots(figsize=(22,12))\ncorrmatrix = df.corr()\nsns.heatmap(corrmatrix, square=True, ax=ax)\nax.set_title('US and Japan')","2f1f0c92":"fig, ax = plt.subplots(figsize=(18,10.5))\ndiff = dfus['10Y'] - dfus['2Y']\nplt.plot(dfus.index, diff)\nplt.fill_between(dfus.index, 0, diff, where= diff < 0, color='red')\nplt.fill_between(dfus.index, 0, diff, where= diff > 0, color='green')\nplt.ylabel('Yield$_{10Y}$ - Yield$_{2Y}$')","1c6d20ce":"fig, ax = plt.subplots(figsize=(18,10.5))\ndiff = dfus['3M'] - dfus['1M']\nplt.plot(dfus.index, diff)\nplt.fill_between(dfus.index, 0, diff, where= diff < 0, color='red')\nplt.fill_between(dfus.index, 0, diff, where= diff > 0, color='green')\nplt.ylabel('Yield$_{10Y}$ - Yield$_{2Y}$')","94b86fcc":"fig, ax = plt.subplots(figsize=(18,10.5))\ndiff = dfus['2Y'] - dfus['1M']\nplt.plot(dfus.index, diff)\nplt.fill_between(dfus.index, 0, diff, where= diff < 0, color='red')\nplt.fill_between(dfus.index, 0, diff, where= diff > 0, color='green')\nplt.ylabel('Yield$_{10Y}$ - Yield$_{2Y}$')","4a2ca38b":"fig, ax = plt.subplots(figsize=(18,10.5))\ndiff = dfus['30Y'] - dfus['1Y']\nplt.plot(dfus.index, diff)\nplt.fill_between(dfus.index, 0, diff, where= diff < 0, color='red')\nplt.fill_between(dfus.index, 0, diff, where= diff > 0, color='green')\nplt.ylabel('Yield$_{30Y}$ - Yield$_{2Y}$')","46aa4eb3":"## LSTM","e77ea7b9":"import warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\nfrom keras.models import Sequential\nfrom keras.layers import LSTM, Dense, Dropout\nfrom keras import optimizers\nfrom sklearn.preprocessing import MinMaxScaler","d59bb72f":"ts1 = dfus['5Y'].dropna()\nts1_idx = ts1.index\n\n#fig, ax = plt.subplots(1,1,figsize=(24, 12))\n#ax.plot(ts1, label = c )\n#ax.set_ylabel('Yield [%]')\n#ax.legend()","25461557":"ts2 = ts1.values\nscl = MinMaxScaler()\nts2 = ts2.reshape(ts2.shape[0],1)\nts2 = scl.fit_transform(ts2)","dec41262":"plt.plot(ts2)","0827fa15":"def processData(data, lb):\n    X, Y = [], []\n    for i in range(len(data)-lb-1):\n        X.append(data[i:(i+lb)])\n        Y.append(data[i+lb])\n    return np.array(X), np.array(Y)\nX, y = processData(ts2, 6)\nX_train, X_test = X[:int(X.shape[0]*0.80)], X[int(X.shape[0]*0.80):]\ny_train, y_test = y[:int(y.shape[0]*0.80)], y[int(y.shape[0]*0.80):]\nprint('Checking that the split was performed correctly')\nprint(X_train.shape)\nprint(X_test.shape)\nprint(y_train.shape)\nprint(y_test.shape)","e51dc7ab":"model = Sequential()\nmodel.add(LSTM(32, input_shape=(6,1)))\nmodel.add(Dropout(0.25))\nmodel.add(Dense(1))\nadam = optimizers.adam(lr=0.001, clipnorm=1.)\nmodel.compile(optimizer=adam, loss='mse')\nX_train = X_train.reshape((X_train.shape[0], X_train.shape[1], 1))\nX_test = X_test.reshape((X_test.shape[0], X_test.shape[1], 1))\nhistory = model.fit(X_train, y_train, epochs=300, validation_data=(X_test, y_test), shuffle=False)","f2326ef9":"plt.plot(history.history['loss'], label = 'Training')\nplt.plot(history.history['val_loss'], label = 'Validation')\nplt.legend()","18dfb9a0":"model64 = Sequential()\nmodel64.add(LSTM(64, input_shape=(6,1)))\nmodel64.add(Dropout(0.5))\nmodel64.add(Dense(1))\nadam = optimizers.adam(lr=0.001, clipnorm=1.)\nmodel64.compile(optimizer=adam, loss='mse')\nhistory64 = model64.fit(X_train, y_train, epochs=12, validation_data=(X_test, y_test), shuffle=False)","99e08e92":"fig, ax = plt.subplots(1,1,figsize=(24, 12))\nax.plot(history64.history['loss'], label = 'Training')\nax.plot(history64.history['val_loss'], label = 'Validation')\nax.legend()","538a37e4":"Xt32 = model.predict(X_test)\nXt64 = model64.predict(X_test)\n\nfig, ax = plt.subplots(1,1,figsize=(24, 12))\nax.plot( scl.inverse_transform(y_test.reshape(-1,1)), label='Test data')\nax.plot( scl.inverse_transform(Xt32), label ='32L')\nax.plot( scl.inverse_transform(Xt64), label='64L')\nax.set_ylabel('Yield [%]')\nax.legend()","2aea57bb":"Recently (week of August 12th 2019) the US T-bill yield curve inverted - yield on short term government was lower than that on long-term government bonds. This is a well-known sign of an economic downturn.\n\nMotivated by this, I'm going to look at when this occured historically both in the US and Japan. I made the figures large because inversions occur in narrow time-windows and are hard to spot if the axes are too small.","3f27cdc7":"The first time I ran the network losses were computed as nan. To fix this problem I scaled the data. I avoid data snooping by giving only the training set, not the validation set, to the Scaler.","dffcbfeb":"### US","3b392aa5":"### Data Sources","d66d6b2c":"### US - 10 year vs. 2 year","0d76be03":"Some observations:\n1. There was a spike in yields of short and medium (<15Y) duration bonds around 1990.\n2. Since 1995 the yields on short and medium (<15Y) duration bonds have been extremely low.\n3. In the period since 1995 long (>10Y) maturity yields have been higher than short term yields but there is an overall downward trend.","aa7fc79e":"## Import modules & data","09576b26":"### US","4c6997bb":"## Yield curve inversions","b156b3d8":"# Forecasting","c1393133":"Japan Interest Rates: https:\/\/www.quandl.com\/data\/MOFJ-Ministry-of-Finance-Japan\n\nUS Interest Rates: https:\/\/www.federalreserve.gov\/datadownload\/Download.aspx?rel=H15&series=bf17364827e38702b42a58cf8eaa3f78&lastobs=&from=&to=&filetype=csv&label=include&layout=seriescolumn&type=package","a50d6d9b":"### Acknowledgements","0fd4b951":"It seemed odd to me that the validation loss was lower than training loss. I found an answer at this link. In short, it's because Dropout is included in the training loss calculation but it's turned off for computing the validation loss.\n\nhttps:\/\/forums.fast.ai\/t\/validation-loss-lower-than-training-loss\/4581","4182b5f3":"It's interesting to look for correlations between yields on bonds of different duration, and between bonds from the US and Japan.\n\nA look at the Pearson correlation plots shows that for both US and Japan the correlations between bonds of similar duration are strong, with correlations extremely close to 1. \n\nHowever, there does appear to be some interesting structure in the relationships between long and short term debt. \nFor the US, two patterns stand out:\n1. 1M T-bill yields appear to be much more weakly correlated with long term (>5Y) yields than other short-term debt.\n2. yield on 20Y government debt appears have weaker correlations with yields on short debt than other long-term bonds.\n\nThere exists a similar structure in the correlation matrix for Japanese government debt. The correlation between yields on 15Y, 25Y, 30Y and 40Y government debt with short term debt is especially weak.\n\nOf course, summarizing the relationship between two quantities with a single statistic might not tell the whole story, at best, and mislead at worst. Below I show plots of the relationships of interest.","dbee180b":"### Japan","e66307c3":"## Correlations between bonds of different duration","589606cf":"## Aggregate statistics vs. bond duration","e6dc85ad":"### US - 10 year vs. 2 year","44e86061":"Some observations:\n1. In the last few (4-5) years the yields on short-term government debt have been increasing but that trend appear to be reversing within the last year or so.\n2. There was a huge spike in yield on 1M government debt around 2004-2008, presumably associated with the financial crisis.\n3. Bond yields of medium (1Y-10Y) duration had a huge spike in the early 1980s.\n4. The overall trend in yields since the 1980s is downward for medium and long (>1Y) duration bonds.","1e137cf3":"## Time series plots for given bond duration","881cb342":"### Japan","fe97b9dd":"In performing this analysis I drew on the many great resources on Kaggle and elsewhere. Here is a non-exhaustive list:\n\n1. https:\/\/www.kaggle.com\/thebrownviking20\/everything-you-can-do-with-a-time-series\n\n2. \"Time series analysis and its applications\" by R. Shumway\n\n3. https:\/\/www.kaggle.com\/amarpreetsingh\/stock-prediction-lstm-using-keras","9ba09e50":"## Summary statistics","90eb4363":"### US - 2 year vs. 1 month"}}