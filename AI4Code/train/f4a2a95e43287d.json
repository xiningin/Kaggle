{"cell_type":{"c63c49a6":"code","a0ed7ca0":"code","07e1aabc":"code","67eddb58":"code","ad62e3ef":"code","b71bb7a9":"code","7bb082f8":"code","764074f5":"code","ca768142":"code","63751151":"code","cffc91b7":"code","37a5780f":"code","85a9cdc7":"code","c84242d9":"code","e0e12e33":"code","7356ce71":"code","32354e8d":"code","d6e6a873":"code","e9da66bb":"code","ca8367d8":"code","a1c0cc4f":"markdown","841e83a8":"markdown","e01d13ba":"markdown","b1e93107":"markdown","a3572daa":"markdown","c9c1565c":"markdown","3b5d89cc":"markdown","a8c682ed":"markdown","b648edda":"markdown","cc1f51c4":"markdown","337f509c":"markdown","27d46e8d":"markdown","2b131695":"markdown"},"source":{"c63c49a6":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\nfrom fastai.tabular import *\nfrom sklearn.metrics import roc_auc_score\n\n%matplotlib inline","a0ed7ca0":"torch.manual_seed(47)\n\ntorch.backends.cudnn.deterministic = True\ntorch.backends.cudnn.benchmark = False\n\nnp.random.seed(47)","07e1aabc":"data_dir = '..\/input\/'\n!ls {data_dir}","67eddb58":"train_raw = pd.read_csv(f'{data_dir}train.csv')\ntrain_raw.head()","ad62e3ef":"test_raw = pd.read_csv(f'{data_dir}test.csv')\ntest_raw.head()","b71bb7a9":"train_raw.shape, test_raw.shape","7bb082f8":"train_raw.isnull().sum().sum(), test_raw.isnull().sum().sum()","764074f5":"sns.countplot(train_raw.target)\nplt.show()","ca768142":"train_raw.target.value_counts()","63751151":"valid_idx = range(len(train_raw)- 20000, len(train_raw))","cffc91b7":"cont_names = train_raw.columns.tolist()[1:-1]\ncont_names.remove('wheezy-copper-turtle-magic')\n\ncat_names = ['wheezy-copper-turtle-magic']\n\nprocs = [FillMissing, Categorify, Normalize]","37a5780f":"dep_var = 'target'\n\ndata = TabularDataBunch.from_df('.', train_raw, dep_var=dep_var, valid_idx=valid_idx, procs=procs,\n                                cat_names=cat_names, cont_names=cont_names, test_df=test_raw, bs=2048)","85a9cdc7":"learn = tabular_learner(data, layers=[1000, 750, 500, 300], emb_szs={'wheezy-copper-turtle-magic': 200}, metrics=accuracy, ps=0.65, wd=3e-1)","c84242d9":"learn.lr_find()","e0e12e33":"learn.recorder.plot()","7356ce71":"lr = 1e-2\nlearn.fit_one_cycle(26, lr)","32354e8d":"val_preds = learn.get_preds(DatasetType.Valid)\nroc_auc_score(train_raw.iloc[valid_idx].target.values, val_preds[0][:,1].numpy())","d6e6a873":"test_preds = learn.get_preds(DatasetType.Test)","e9da66bb":"sub_df = pd.read_csv(f'{data_dir}sample_submission.csv')\nsub_df.target = test_preds[0][:,1].numpy()\nsub_df.head()","ca8367d8":"sub_df.to_csv('solution.csv', index=False)","a1c0cc4f":"Based on above learning rate finder graph, we can choose `1e-2` as our learning rate.","841e83a8":"So there are no missing values in either training or test set.","e01d13ba":"### Prediction on test data","b1e93107":"Looks like class labels are uniformly distributed in training data.","a3572daa":"### roc_auc_score on validation data","c9c1565c":"Let's find optimal learning rate for our classification task -","3b5d89cc":"### Target distribution","a8c682ed":"### Imports","b648edda":"### Validation set\n\nWe will use 20,000 records from our training set as validation data.","cc1f51c4":"### Databunch\n\nLet's create a databunch instance with our training, validation and test data -","337f509c":"### Learner","27d46e8d":"### Training","2b131695":"### Loading data"}}