{"cell_type":{"71baeb7a":"code","0aaa5a5d":"code","6ddda338":"code","a864ee69":"code","09d58ff6":"code","899499b2":"markdown","324be792":"markdown","8b7763ac":"markdown"},"source":{"71baeb7a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt \n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input\/train.csv'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))        \n       \n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0aaa5a5d":"traindata = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')","6ddda338":"traindata.head()","a864ee69":"traindata['SalePrice'].describe()","09d58ff6":"import pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.feature_selection import VarianceThreshold\nfrom sklearn.linear_model import LinearRegression\n\n\n#Read Data\ntraindata = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntestdata=pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')\n\n#Clean Data \"nan\"\ntestdata['LotArea'] = testdata['LotArea'].fillna(0)\ntestdata['TotalBsmtSF'] = testdata['TotalBsmtSF'].fillna(0)\ntestdata['GrLivArea'] = testdata['GrLivArea'].fillna(0)\n\n#specify feature\ndata=['LotArea','TotalBsmtSF','GrLivArea']\nX_train = traindata.iloc[:, traindata.columns.isin(list(data))]\ny_train= traindata.iloc[:,-1]\nX_test = testdata. iloc[:, testdata.columns.isin(list(data))]\ny_test = testdata. iloc[:, -1]\n\n#Start Linear Regression\nregressor = LinearRegression()\nregressor.fit(X_train, y_train)\nregressor.score(X_train, y_train)\n\n# Predicting the Test set results\ny_pred = regressor.predict(X_test)\ny_pred_arr=np.array(y_pred)[np.newaxis]\nid_arr=np.array(testdata['Id'])[np.newaxis]\nc=np.column_stack((id_arr.T,y_pred_arr.T))\ndf = pd.DataFrame(c)\nprint(df)","899499b2":"relation between YrSold and SalePrice","324be792":"# Create Linear Regression to  predict Sales Prices","8b7763ac":"Summary for SalePrice"}}