{"cell_type":{"0be9444f":"code","abf80a0e":"code","646378f2":"code","87fd0fde":"code","c224f6b8":"code","377b03fc":"code","ba370d19":"code","fb330674":"code","7279c0c5":"markdown","c14d8cc2":"markdown","5dc9117e":"markdown","b060ccf5":"markdown","c1643519":"markdown"},"source":{"0be9444f":"#MursilKhan\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","abf80a0e":"#Training dataset\ndf_train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\n#Test dataset\ndf_test = pd.read_csv(\"..\/input\/titanic\/test.csv\")\ndf_train.head()","646378f2":"df_train.info()\ndf_test.","87fd0fde":"#creating a function to update the datset\ndef update_dataset (dataset):\n    dataset = dataset.filter(['Pclass', 'Sex', 'SibSp', 'Parch', 'Fare', 'Cabin', 'Embarked', 'Survived'])\n    #replacing nan in Cabin column\n    dataset['Cabin'] = dataset[\"Cabin\"].fillna(\"C00\")\n    #replacing missing data in Fare column with the median\n    dataset[\"Fare\"] = dataset[\"Fare\"].fillna(dataset[\"Fare\"].median())\n    #replacing missing data in embarked with most frequent occurring category\n    dataset[\"Embarked\"] = dataset[\"Embarked\"].fillna(dataset[\"Embarked\"].mode())\n    return dataset","c224f6b8":"#updating the training dataset\n#df_train = df_train.filter(['Pclass', 'Sex', 'SibSp', 'Parch', 'Ticket', 'Fare', 'Cabin', 'Embarked', 'Survived'])\ndf_train = update_dataset(df_train)\ndf_train.head()","377b03fc":"#Extracting the matrix of features and dependent variable\nX_train = np.array(df_train.iloc[:, :-1].values)\ny_train = np.array(df_train.iloc[:, -1].values)\nprint(X_train)","ba370d19":"#encoding the categorical data\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder\n#encoder for class column\nclass_trans = ColumnTransformer(transformers = [('encoder', OneHotEncoder(), [0])], remainder = \"passthrough\")\nsex_trans = ColumnTransformer(transformers = [('encoder', OneHotEncoder(), [1])], remainder = \"passthrough\")\ncab_trans = ColumnTransformer(transformers = [('encoder', OneHotEncoder(), [5])], remainder = \"passthrough\")\nemb_trans = ColumnTransformer(transformers = [('encoder', OneHotEncoder(), [6])], remainder = \"passthrough\")\n#transforming the class column\nX_train = np.array(class_trans.fit_transform(X_train))\n#transformer for sex column\nclass_trans = ColumnTransformer(transformers = [('encoder', OneHotEncoder(), [0])], remainder = \"passthrough\")\nclass_trans = ColumnTransformer(transformers = [('encoder', OneHotEncoder(), [0])], remainder = \"passthrough\")\nprint(X_train)","fb330674":"#updating the test dataset\ndf_test= update_dataset(df_test)\ndf_test.head()","7279c0c5":"From the given data, we can observe that:\n* Passenger ID is just a serial number arranged in ascending order.\n* The names of the passenger are irrelevant, hence, dropped from the dataset\n* Age columns has certain missing values that need to be taken care of.\n* Categorical data in the Sex column\n* Categorical data in Embarked column\n* Categorical data in Cabin column\n\n\n*Therefore,* \n* *We skip out the passenger ID column for training our model.*\n* *We OneHotEncode our categorical data columns*\n* *We fill out missing data in Fare with the Median fare*\n* *We fill out the missing data in Embarked category with median as well*","c14d8cc2":"# Data Preprocessing","5dc9117e":"# Importing the datasets","b060ccf5":"# Training the models","c1643519":"#Logistic Regression\nfrom sklearn.linear_model import LogisticRegression\nlr= LogisticRegression(random_state=0)\nlr.fit(X_train, y_train)"}}