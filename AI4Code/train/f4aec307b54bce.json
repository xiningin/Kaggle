{"cell_type":{"6d385600":"code","6c18747e":"code","b0b834cf":"code","ace8659e":"code","bbba61f8":"code","31c2d931":"code","d5682c8a":"code","9d52532e":"code","6a1a3fc9":"code","f2b9574f":"code","e7fde1b1":"code","c15c88ec":"code","a2ea84a9":"code","a1d5a1f4":"code","07145ee5":"code","c32c4cbc":"code","f902fa06":"code","9f93b32e":"code","0ea9b785":"code","27eeed68":"code","81288a34":"code","4b94dabf":"code","31073693":"code","933b1d8c":"code","10bf2d2a":"code","73e767ff":"code","23cc004f":"code","d61d11d9":"code","a08f9faf":"code","08b33815":"code","8b5d50b4":"code","24978bbd":"code","b67642d4":"code","544f7876":"code","aae0ccd8":"code","b7b88549":"code","6210a3a4":"code","9f50ea17":"code","6e638e43":"code","3a096619":"code","fd070695":"code","e40acfc3":"code","f3466531":"code","23b9f5ed":"code","b5037549":"code","c0a0cd96":"code","15b17b7f":"code","c1232bfe":"code","bfdacb2c":"code","8443d362":"code","a5c4ae4a":"code","6d7eee05":"code","d7b9f4f6":"code","6f6f612a":"code","0c1f46fc":"code","f61fdbb2":"code","5caed565":"code","3c96f931":"code","5b1a9024":"code","49574dfb":"code","69d650fd":"code","3608867f":"code","e859b098":"code","24336ade":"code","9dad570b":"code","895f666b":"code","277c9064":"code","fd6d4b72":"code","0f4d2def":"code","721373fe":"code","d51c1264":"code","5b958d23":"markdown","e75554f0":"markdown","b0770aa1":"markdown","4ac40ecd":"markdown","98b8c239":"markdown","0d4c4ac6":"markdown","3c616c32":"markdown","75a802d1":"markdown","8044ffcf":"markdown","1cb3c787":"markdown","a816fe3a":"markdown","1bbc0183":"markdown","0689aa8a":"markdown","8076229d":"markdown","1dadc7a2":"markdown","f37846b4":"markdown","7bd4c5a0":"markdown","5457e579":"markdown","cdb575e9":"markdown","65439ab5":"markdown","19734a22":"markdown","deaf171a":"markdown","1e7dc9db":"markdown","50685bc7":"markdown","a8ff6cad":"markdown","219574f6":"markdown","6cf6b28b":"markdown","3c1e0094":"markdown","519fd66d":"markdown","82564fdc":"markdown","4e2605f2":"markdown","6758b475":"markdown","9a57069e":"markdown","05391914":"markdown","ad12113c":"markdown","2ab93564":"markdown","c2c1afe9":"markdown","9a8d102a":"markdown","cbfe031f":"markdown","ea03bba5":"markdown","c29ccfd0":"markdown","cdf66b8d":"markdown","282a6f0c":"markdown"},"source":{"6d385600":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","6c18747e":"data = pd.read_csv('..\/input\/heart-disease-uci\/heart.csv')\ndata.shape\ndata.info()","b0b834cf":"data.isnull().sum()","ace8659e":"data.nunique()","bbba61f8":"labels_cp = data.cp.value_counts().index\nvalues_cp = data.cp.value_counts().values\nprint(data.cp.describe())\nexplode = [0.05,0.01,0.01,0.01]\nplt.figure(figsize = (7,7))\nplt.pie(values_cp, explode = explode, labels = labels_cp, autopct = '%1.1f%%')\nplt.title(\"Chest Pain Types\")\nplt.show()","31c2d931":"pd.crosstab(data.cp,data.target,normalize=True).plot(kind=\"bar\",figsize=(20,6))\nplt.title('Heart Disease Frequency for CP')\nplt.xlabel('CP')\nplt.ylabel('Frequency')\nplt.show()","d5682c8a":"labels_ca = data.ca.value_counts().index\nvalues_ca = data.ca.value_counts().values\nprint(data.ca.describe())\nexplode = [0,0,0,0,0.1]\nplt.figure(figsize = (7,7))\nplt.pie(values_ca, explode = explode, labels = labels_ca, autopct = '%1.1f%%')\nplt.title(\"number of major vessels (0-3) colored by flourosopy\")\nplt.show()","9d52532e":"pd.crosstab(data.ca,data.target,normalize=True).plot(kind=\"bar\",figsize=(20,6))\nplt.title('Heart Disease Frequency for CA')\nplt.xlabel('CA')\nplt.ylabel('Frequency')\nplt.show()","6a1a3fc9":"labels_thal = data.thal.value_counts().index\nvalues_thal = data.thal.value_counts().values\nprint(data.thal.describe())\nexplode = [0,0,0,0.1]\nplt.figure(figsize = (7,7))\nplt.pie(values_thal, explode = explode, labels = labels_thal, autopct = '%1.1f%%')\nplt.title(\"thalach\")\nplt.show()","f2b9574f":"pd.crosstab(data.thal,data.target,normalize=True).plot(kind=\"bar\",figsize=(20,6))\nplt.title('Heart Disease Frequency for Thalach')\nplt.xlabel('Thalach')\nplt.ylabel('Frequency')\nplt.show()","e7fde1b1":"labels_exang = data.exang.value_counts().index\nlabels_exang = ['No','Yes']\nvalues_exang = data.exang.value_counts().values\nprint(data.exang.describe())\nexplode = [0,0.1]\nplt.figure(figsize = (7,7))\nplt.pie(values_exang, explode = explode, labels = labels_exang, autopct = '%1.1f%%')\nplt.title(\"Exercise Induced Angina\")\nplt.show()","c15c88ec":"pd.crosstab(data.exang,data.target).plot(kind=\"bar\",figsize=(20,6))\nplt.title('Heart Disease Frequency for Exercise Induced Angina')\nplt.xlabel('Exercise Induced Angina')\nplt.ylabel('Frequency')\nplt.show()","a2ea84a9":"labels_slope = data.slope.value_counts().index\nvalues_slope = data.slope.value_counts().values\nprint(data.slope.describe())\nexplode = [0,0,0.1]\nplt.figure(figsize = (7,7))\nplt.pie(values_slope, explode = explode, labels = labels_slope, autopct = '%1.1f%%')\nplt.title(\"the slope of the peak exercise ST segment\")\nplt.show()","a1d5a1f4":"pd.crosstab(data.slope,data.target,normalize=True).plot(kind=\"bar\",figsize=(20,6))\nplt.title('Heart Disease Frequency for Slope')\nplt.xlabel('Slope')\nplt.ylabel('Frequency')\nplt.show()","07145ee5":"labels_fbs = ['fbs < 120 mg\/dl','fbs > 120 mg\/dl']\nvalues_fbs = data.fbs.value_counts().values\nprint(data.fbs.describe())\nexplode = [0,0.1]\nplt.figure(figsize = (7,7))\nplt.pie(values_fbs, explode = explode, labels = labels_fbs, autopct = '%1.1f%%')\nplt.title(\"Fasting Blood Sugar\")\nplt.show()","c32c4cbc":"pd.crosstab(data.fbs,data.target,normalize=True).plot(kind=\"bar\",figsize=(20,6))\nplt.title('Heart Disease Frequency for Fasting Blood Sugar')\nplt.xlabel('Fasting Blood Sugar')\nplt.ylabel('Frequency')\nplt.show()","f902fa06":"labels_restecg = data.restecg.value_counts().index\nvalues_restecg = data.restecg.value_counts().values\nprint(data.restecg.describe())\nexplode = [0.02,0.02,0.05]\nplt.figure(figsize = (7,7))\nplt.pie(values_restecg, explode = explode, labels = labels_restecg, autopct = '%1.1f%%')\nplt.title(\"Resting Electrocardiographic Results\")\nplt.show()","9f93b32e":"pd.crosstab(data.restecg,data.target,normalize=True).plot(kind=\"bar\",figsize=(20,6))\nplt.title('Heart Disease Frequency for Restecg')\nplt.xlabel('Restecg')\nplt.ylabel('Frequency')\nplt.show()","0ea9b785":"pd.crosstab(data.age,data.target,normalize=True).plot(kind=\"bar\",figsize=(20,6))\nplt.title('Heart Disease Frequency for Ages')\nplt.xlabel('Age')\nplt.ylabel('Frequency')\nplt.show()","27eeed68":"pd.crosstab(data.sex,data.target,normalize=True).plot(kind=\"bar\",figsize=(20,6))\nplt.title('Heart Disease Frequency for SEX')\nplt.xlabel('Sex (0 = Female, 1 = Male)' )\nplt.legend([\"Haven't Disease\", \"Have Disease\"])\nplt.ylabel('Frequency')\nplt.show()","81288a34":"pd.crosstab(data.trestbps,data.target,normalize=True).plot(kind=\"bar\",figsize=(20,6))\nplt.title('Heart Disease Frequency for TrestBps')\nplt.xlabel('TrestBps' )\nplt.legend([\"Haven't Disease\", \"Have Disease\"])\nplt.ylabel('Frequency')\nplt.show()","4b94dabf":"pd.crosstab(data.chol,data.target,normalize=True).plot(kind=\"bar\",figsize=(20,6))\nplt.title('Heart Disease Frequency for CHOL')\nplt.xlabel('Chol' )\nplt.legend([\"Haven't Disease\", \"Have Disease\"])\nplt.ylabel('Frequency')\nplt.show()","31073693":"pd.crosstab(data.oldpeak,data.target,normalize=True).plot(kind=\"bar\",figsize=(20,6))\nplt.title('Heart Disease Frequency for OldPeak')\nplt.xlabel('OldPeak' )\nplt.legend([\"Haven't Disease\", \"Have Disease\"])\nplt.ylabel('Frequency')\nplt.show()","933b1d8c":"pd.crosstab(data.thalach,data.target,normalize=True).plot(kind=\"bar\",figsize=(20,6))\nplt.title('Heart Disease Frequency for Thalach')\nplt.xlabel('Thalach')\nplt.legend([\"Haven't Disease\", \"Have Disease\"])\nplt.ylabel('Frequency')\nplt.show()","10bf2d2a":"data['AgeBin'] = 0 #creates a column of 0\ndata.loc[((data['age'] > 28) & (data['age'] < 30)) , 'AgeBin'] = 1\ndata.loc[((data['age'] >= 30) & (data['age'] < 40)) , 'AgeBin'] = 2\ndata.loc[((data['age'] >= 40) & (data['age'] < 50)) , 'AgeBin'] = 3\ndata.loc[((data['age'] >= 50) & (data['age'] < 60)) , 'AgeBin'] = 4\ndata.loc[((data['age'] >= 60) & (data['age'] < 70)) , 'AgeBin'] = 5\ndata.loc[((data['age'] >= 70) & (data['age'] < 78)) , 'AgeBin'] = 6\nplt.figure()\nplt.title('Age --- (29,77)')\ndata.AgeBin.hist()\nplt.show()","73e767ff":"def norm(data):\n    return (data)\/(max(data)-min(data))","23cc004f":"norm(data.chol).plot(kind = 'line', color = 'r',label = 'Target',linewidth=1,alpha = 0.9,grid = True,linestyle = ':')\nnorm(data.trestbps).plot(color = 'g',label = 'Sex',linewidth=1, alpha = 0.4,grid = True,linestyle = '-.')\nnorm(data.thal).plot(color = 'b',label = 'Thalach',linewidth=1, alpha = 0.5,grid = True,linestyle = '-.')\nplt.legend(loc='upper right')     \nplt.xlabel('x axis')            \nplt.ylabel('y axis')\nplt.title('Line Plot')           \nplt.show()","d61d11d9":"data.plot(kind='scatter', x='chol', y='trestbps',alpha = 0.5,color = 'red')\nplt.xlabel('Chol')              # label = name of label\nplt.ylabel('Trestbps')\nplt.title('Chol-TrestBps Scatter Plot')            # title = title of plot\nplt.show()","a08f9faf":"data.plot(kind='scatter', x='chol', y='thal',alpha = 0.5,color = 'blue')\nplt.xlabel('Chol')              # label = name of label\nplt.ylabel('Thalach')\nplt.title('Chol-Thalach Scatter Plot')            # title = title of plot\nplt.show()","08b33815":"data1 = data.loc[:,[\"chol\",\"trestbps\",\"thalach\"]]\ndata1.plot()\n\nplt.show()","8b5d50b4":"data1.plot(subplots = True)\nplt.show()","24978bbd":"plt.figure(figsize=(15,10))\nsns.barplot(x=data.trestbps, y=data.thalach)\nplt.xticks(rotation= 90)\nplt.xlabel('TrestBps')\nplt.ylabel('Thalach')\nplt.title('TrestBps-Thalach')\nplt.show()","b67642d4":"plt.figure(figsize=(15,10))\nax= sns.barplot(x=data.age, y=data.target)\nplt.xlabel('Age')\nplt.ylabel('Target')\nplt.title('Target-Age Seaborn Bar Plot')\nplt.show()","544f7876":"f,ax = plt.subplots(figsize = (9,15))\n\nsns.barplot(x=data.sex,y=data.target,color='blue',alpha = 1.0,label='Sex')\nsns.barplot(x=data.exang,y=data.target,color='red',alpha = 1.0,label='Exang')\nsns.barplot(x=data.fbs,y=data.target,color='green',alpha = 0.5,label='Fbs')\n\nax.legend(loc='best',frameon = True)     # legendlarin gorunurlugu\nax.set(xlabel='Percentage of Features', ylabel='Target',title = \"Features-Target\")\nplt.show()","aae0ccd8":"plt.figure(figsize=(20,10))\nsns.boxplot(x=\"age\", y=\"chol\", hue=\"target\", data=data, palette=\"PRGn\")\nplt.show()","b7b88549":"plt.figure(figsize=(20,10))\nsns.boxplot(x=\"trestbps\", y=\"chol\", hue=\"target\", data=data, palette=\"PRGn\")\nplt.show()","6210a3a4":"plt.figure(figsize=(20,10))\nsns.boxplot(x=\"sex\", y=\"cp\", hue=\"target\", data=data, palette=\"PRGn\")\nplt.show()","9f50ea17":"plt.figure(figsize=(10,7))\nsns.barplot(x=data['age'].index,y=data['target'].values)\nplt.xlabel('Ages')\n\nsns.countplot(x=data.age)\nplt.ylabel('Number of Target People')\nplt.title('Age of target people',color = 'blue',fontsize=15)\nplt.show()\n","6e638e43":"features = ['age','sex','cp','trestbps','chol','fbs','restecg','thalach','exang','oldpeak','slope','ca',\n            'thal','target']\ndata = data[features]\nf,ax = plt.subplots(figsize=(10, 8))\nsns.heatmap(data.corr(), annot=True, linewidths=0.5,linecolor=\"red\", fmt= '.1f',ax=ax)\nplt.show()","3a096619":"sns.jointplot(data.cp, data.target, kind=\"kde\", size=5, color =\"g\")\nplt.show()\n","fd070695":"sns.jointplot(data.thalach, data.target, kind=\"kde\", size=5, color=\"r\")\nplt.show()","e40acfc3":"sns.jointplot(data.slope, data.target, kind=\"kde\", size=5, color=\"b\")\nplt.show()","f3466531":"sns.jointplot(data.restecg, data.target, kind=\"kde\", size=5, color=\"cyan\")\nplt.show()","23b9f5ed":"sns.kdeplot(data.age, data.target, shade=True, cut=3)\nplt.show()","b5037549":"sns.lmplot(x=\"slope\", y=\"target\", data=data)\nplt.show()","c0a0cd96":"sns.lmplot(x=\"cp\", y=\"target\",data=data)\nplt.show()","15b17b7f":"sns.lmplot(x=\"cp\", y=\"slope\",hue=\"target\",data=data,markers=[\"o\", \"x\"])\nplt.show()","c1232bfe":"sns.lmplot(x=\"cp\", y=\"thalach\", hue=\"target\", col=\"slope\",\n               data=data,markers=[\"o\", \"x\"], height=6, aspect=.4, x_jitter=.1)\nplt.show()","bfdacb2c":"sns.lmplot(x=\"cp\", y=\"thalach\", row=\"slope\", col=\"restecg\",hue=\"target\",\n               markers=[\"o\", \"x\"],data=data, height=3)\nplt.show()","8443d362":"ax = sns.pointplot(x=\"cp\", y=\"thalach\", hue=\"target\",data=data,dodge=True)\nplt.show()","a5c4ae4a":"ax = sns.pointplot(x=\"cp\", y=\"slope\", hue=\"target\",data=data,dodge=True,\n                   markers=[\"o\", \"x\"],linestyles=[\"-\", \"--\"])\nplt.show()","6d7eee05":"ax = sns.pointplot(x=\"slope\", y=\"thalach\", hue=\"target\",data=data,dodge=True,\n                   markers=[\"o\", \"x\"],linestyles=[\"-\", \"--\"])\nplt.show()","d7b9f4f6":"sns.swarmplot(x=\"cp\", y=\"thalach\",hue=\"target\", data=data)\nplt.show()","6f6f612a":"sns.swarmplot(x=\"slope\", y=\"thalach\",hue=\"target\", data=data)\nplt.show()","0c1f46fc":"sns.swarmplot(x=\"exang\", y=\"thalach\",hue=\"target\", data=data)\nplt.show()","f61fdbb2":"sns.swarmplot(x=\"restecg\", y=\"thalach\",hue=\"target\", data=data)\nplt.show()","5caed565":"sns.swarmplot(x=\"thal\", y=\"thalach\",hue=\"target\", data=data)\nplt.show()","3c96f931":"plt.figure(figsize=(10,7))\nsns.violinplot(x=\"cp\", y=\"slope\", hue=\"target\",data=data, palette=\"muted\")\nplt.show()","5b1a9024":"sns.violinplot(x=\"cp\", y=\"slope\", hue=\"target\",data=data, palette=\"muted\", split=True)\nplt.show()","49574dfb":"sns.violinplot(x=\"cp\", y=\"thalach\", hue=\"target\",data=data, palette=\"muted\", split=True)\nplt.show()","69d650fd":"sns.violinplot(x=\"slope\", y=\"thalach\", hue=\"target\",data=data, palette=\"muted\", split=True)\nplt.show()","3608867f":"sns.violinplot(x=\"exang\", y=\"restecg\", hue=\"target\",data=data, palette=\"muted\", split=True)\nplt.show()","e859b098":"sns.violinplot(x=\"exang\", y=\"thal\", hue=\"target\",data=data, palette=\"muted\", split=True)\nplt.show()","24336ade":"sns.violinplot(x=\"restecg\", y=\"thal\", hue=\"target\",data=data, palette=\"muted\", split=True)\nplt.show()","9dad570b":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split \nfrom sklearn import metrics\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import f1_score,roc_auc_score,accuracy_score,roc_curve\n\nfeatures = ['age','sex','cp','trestbps','chol','fbs','restecg','thalach','exang',\n            'oldpeak','slope','ca','thal']\ntarget = ['target']\nx = data[features]\ny = data[target]\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state=42)\nmlreg = LinearRegression()\nmlreg.fit(x_train, y_train)\npredictionmlreg = mlreg.predict(x_test)\ntest_set_rmse = (np.sqrt(mean_squared_error(y_test, predictionmlreg)))\nprint(\"Intercept: \\n\", mlreg.intercept_)\nprint(\"Root Mean Square Error \\n\", test_set_rmse)\nrocaucscore=roc_auc_score(y_test.values, predictionmlreg)\nprint('Roc Score: ',rocaucscore)","895f666b":"dtclassifieroptimal = DecisionTreeClassifier(class_weight=None, criterion='entropy', max_depth=4,\n                       max_features=None, max_leaf_nodes=10,\n                       min_impurity_decrease=0.0, min_impurity_split=None,\n                       min_samples_leaf=1, min_samples_split=2,\n                       min_weight_fraction_leaf=0.0, presort=False,\n                       random_state=42, splitter='best')\ndtclassifieroptimal.fit(x_train, y_train)\ndtprediction = dtclassifieroptimal.predict(x_test)\nprint('Accuracy of Decision Tree:', accuracy_score(dtprediction,y_test))\n\nfrom sklearn.metrics import confusion_matrix\ncmdt=confusion_matrix(y_test, dtprediction, labels=None, sample_weight=None)\nfig, (ax1) = plt.subplots(ncols=1, figsize=(5,5))\nsns.heatmap(cmdt, fmt = \"d\",\n            xticklabels=['Have not Disease', 'Have Disease'],\n            yticklabels=['Have not Disease', 'Have Disease'],\n            annot=True,ax=ax1,\n            linewidths=.2,linecolor=\"Purple\", cmap=\"Purples\")\nplt.title('Confusion Matrix in DT', fontsize=14)\nplt.show()\n\nrocaucscore=roc_auc_score(y_test.values, dtprediction)\nprint('Roc Score: ',rocaucscore)","277c9064":"from sklearn.neighbors import KNeighborsClassifier\nknnclassifier=KNeighborsClassifier(n_neighbors=6,algorithm='auto',\n                                    leaf_size=30,metric='manhattan')\nknnclassifier.fit(x_train, y_train)\ntrainaccuracy=knnclassifier.score(x_train, y_train)\ntestaccuracy=knnclassifier.score(x_test, y_test)\nknnprediction=knnclassifier.predict(x_test)\nprint('train accuracy: {}\\ntest accuracy: {}\\n'.format(trainaccuracy,testaccuracy))\n\ncmknn=confusion_matrix(y_test, knnprediction, labels=None, sample_weight=None)\nfig, (ax1) = plt.subplots(ncols=1, figsize=(5,5))\nsns.heatmap(cmknn, fmt=\"d\",\n            xticklabels=['Have not Disease', 'Have Disease'],\n            yticklabels=['Have not Disease', 'Have Disease'],\n            annot=True,ax=ax1,\n            linewidths=.2,linecolor=\"Blue\", cmap=\"Blues\")\nplt.title('Confusion Matrix in KNN', fontsize=14)\nplt.show()","fd6d4b72":"from sklearn.svm import SVC\nsvm = SVC(kernel='rbf',random_state = 42, tol=0.001, shrinking=True, probability=True,\n          C=1.0,  degree=3, gamma='auto', coef0=0.0, cache_size=200, class_weight=None, \n          verbose=False, max_iter=-1)\nsvm.fit(x_train,y_train)\nsvmprediction = svm.predict(x_test)\nprint(\"print accuracy of svm algo: \",svm.score(x_test,y_test))\n\ncmsvm=confusion_matrix(y_test, knnprediction, labels=None, sample_weight=None)\nfig, (ax1) = plt.subplots(ncols=1, figsize=(5,5))\nsns.heatmap(cmknn, fmt=\"d\",\n            xticklabels=['Have not Disease', 'Have Disease'],\n            yticklabels=['Have not Disease', 'Have Disease'],\n            annot=True,ax=ax1,\n            linewidths=.2,linecolor=\"Green\", cmap=\"Greens\")\nplt.title('Confusion Matrix in SVM', fontsize=14)\nplt.show()\n\nrocaucscore=roc_auc_score(y_test.values, svmprediction)\nprint(rocaucscore)","0f4d2def":"from sklearn.naive_bayes import GaussianNB\nnb = GaussianNB()\nnb.fit(x_train,y_train)\nnbprediction = nb.predict(x_test)\nprint(\"print accuracy of naive bayes algo: \",nb.score(x_test,y_test))\ncmnb=confusion_matrix(y_test, nbprediction, labels=None, sample_weight=None)\nfig, (ax1) = plt.subplots(ncols=1, figsize=(5,5))\nsns.heatmap(cmnb, fmt=\"d\",\n            xticklabels=['Have not Disease', 'Have Disease'],\n            yticklabels=['Have not Disease', 'Have Disease'],\n            annot=True,ax=ax1,\n            linewidths=.2,linecolor=\"Orange\", cmap=\"Oranges\")\nplt.title('Confusion Matrix in NaiveBayes', fontsize=14)\nplt.show()\n\nrocaucscore=roc_auc_score(y_test.values, nbprediction)\nprint(rocaucscore)","721373fe":"from sklearn.ensemble import RandomForestClassifier\nrfclassifieroptimal=RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',\n                       max_depth=4, max_features='auto', max_leaf_nodes=None,\n                       min_impurity_decrease=0.0, min_impurity_split=None,\n                       min_samples_leaf=1, min_samples_split=2,\n                       min_weight_fraction_leaf=0.0, n_estimators=200,\n                       n_jobs=None, oob_score=False, random_state=42, verbose=0,\n                       warm_start=False)\nrfclassifieroptimal.fit(x_train, y_train)\nrfprediction = rfclassifieroptimal.predict(x_test)\nprint('Accuracy of Random Forest Classifier:', accuracy_score(rfprediction,y_test))\ncmrf=confusion_matrix(y_test, rfprediction, labels=None, sample_weight=None)\nfig, (ax1) = plt.subplots(ncols=1, figsize=(5,5))\nsns.heatmap(cmrf, fmt=\"d\",\n            xticklabels=['Have not Disease', 'Have Disease'],\n            yticklabels=['Have not Disease', 'Have Disease'],\n            annot=True,ax=ax1,\n            linewidths=.2,linecolor=\"Red\", cmap=\"Reds\")\nplt.title('Confusion Matrix in Random Forest', fontsize=14)\nplt.show()\n\nrocaucscore=roc_auc_score(y_test.values, rfprediction)\nprint(rocaucscore)","d51c1264":"import sklearn.metrics as metrics\n# calculate the fpr and tpr for all thresholds of the classification\ny_pred_proba_DT = dtclassifieroptimal.predict_proba(x_test)[::,1]\nfpr1, tpr1, _ = roc_curve(y_test,  y_pred_proba_DT)\nauc1 = roc_auc_score(y_test, y_pred_proba_DT)\n\ny_pred_proba_KNN = knnclassifier.predict_proba(x_test)[::,1]\nfpr2, tpr2, _ = roc_curve(y_test,  y_pred_proba_KNN)\nauc2 = roc_auc_score(y_test, y_pred_proba_KNN)\n\ny_pred_proba_SVM = svm.predict_proba(x_test)[::,1]\nfpr3, tpr3, _ = roc_curve(y_test,  y_pred_proba_SVM)\nauc3 = roc_auc_score(y_test, y_pred_proba_SVM)\n\ny_pred_proba_NB = nb.predict_proba(x_test)[::,1]\nfpr4, tpr4, _ = roc_curve(y_test,  y_pred_proba_NB)\nauc4 = roc_auc_score(y_test, y_pred_proba_NB)\n\ny_pred_proba_RF = svm.predict_proba(x_test)[::,1]\nfpr5, tpr5, _ = roc_curve(y_test,  y_pred_proba_RF)\nauc5 = roc_auc_score(y_test, y_pred_proba_RF)\n\nplt.figure(figsize=(10,7))\nplt.title('ROC', size=15)\nplt.plot([0, 1], [0, 1], 'k--')\nplt.plot(fpr1,tpr1,label=\"DT, auc=\"+str(round(auc1,2)))\nplt.plot(fpr2,tpr2,label=\"KNearest Neighbor, auc=\"+str(round(auc2,2)))\nplt.plot(fpr3,tpr3,label=\"SVM, auc=\"+str(round(auc3,2)))\nplt.plot(fpr4,tpr4,label=\"NB, auc=\"+str(round(auc4,2)))\nplt.plot(fpr5,tpr5,label=\"RF, auc=\"+str(round(auc5,2)))\nplt.legend(loc='best', title='Models', facecolor='white')\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.box(False)\nplt.show()","5b958d23":"## <a href='#1'>Introduction<\/a>\n* ## Context\n<div>This database contains 76 attributes, but all published experiments refer to using a subset of 14 of them. In particular, the Cleveland database is the only one that has been used by ML researchers to\nthis date. The \"goal\" field refers to the presence of heart disease in the patient. It is integer valued from 0 (no presence) to 4.<\/div>\n* ## Content \n1. age\n2. sex\n3. chest pain type (4 values)\n4. resting blood pressure\n5. serum cholestoral in mg\/dl\n6. fasting blood sugar > 120 mg\/dl\n7. resting electrocardiographic results (values 0,1,2)\n8. maximum heart rate achieved\n9. exercise induced angina\n10. oldpeak = ST depression induced by exercise relative to rest\n11. the slope of the peak exercise ST segment\n12. number of major vessels (0-3) colored by flourosopy\n13. thal: 3 = normal; 6 = fixed defect; 7 = reversable defect\n    \nThe names and social security numbers of the patients were recently removed from the database, replaced with dummy values. One file has been \"processed\", that one containing the Cleveland database. All four unprocessed files also exist in this directory. To see Test Costs (donated by Peter Turney), please see the folder \"Costs\"\n\n* ##Acknowledgements\n1. Creators:\nHungarian Institute of Cardiology. Budapest: Andras Janosi, M.D.\nUniversity Hospital, Zurich, Switzerland: William Steinbrunn, M.D.\nUniversity Hospital, Basel, Switzerland: Matthias Pfisterer, M.D.\nV.A. Medical Center, Long Beach and Cleveland Clinic Foundation: Robert Detrano, M.D., Ph.D.\nDonor: David W. Aha (aha '@' ics.uci.edu) (714) 856-8779\n\n2. Inspiration\nExperiments with the Cleveland database have concentrated on simply attempting to distinguish presence (values 1,2,3,4) from absence (value 0).\n\nSee if you can find any other trends in heart data to predict certain cardiovascular events or find any clear indications of heart health.","e75554f0":"## <a href='#51'>MULTIPLE LINEAR REGRESSION<\/a>","b0770aa1":"## <a href='#411'>JOINT PLOT<\/a>","4ac40ecd":"**SLOPE : The slope of the peak exercise ST segment**","98b8c239":"**EXANG : exercise induced angina (1 = yes; 0 = no)**","0d4c4ac6":"## <a href='#3'>Check and Examination of the Data<\/a>\n## <a href='#31'>Overview the Data<\/a>\nI want to find relation between features. I want to find relation between features. Then, I want to visualize these relations with using seaborn and matplotlib. ","3c616c32":"## <a>Normalization<\/a>\nI define a function called norm to use scaling when needed. In simple terms, if the value is divided by the difference between the maximum value and the minimum value, it will be scaled from 0 to 1.","75a802d1":"**HEART DISEASE FREQUENCY for AGES**","8044ffcf":"## <a href='#54'>SUPPORT VECTOR MACHINE<\/a>","1cb3c787":"## <a href='#4'>DATA VISUALIZATION<\/a>\n## <a href='#41'>PIE PLOT and BAR PLOT<\/a>","a816fe3a":"<h1><center><font size = \"7\">**HEART DISEASE**<\/font><\/center><\/h1>\n<h2><center><font size = \"6\">**DATA VISUALIZATION and PREDICTIVE MODELS**<\/font><\/center><\/h2>\n<a id='0'><font size = \"5\">**CONTENT**<\/font><\/a>\n- <a href='#1'>INTRODUCTION<\/a>\n- <a href='#2'>LOAD PACKAGES and DATA<\/a>\n- <a href='#3'>CHECK and EXAMINATION of the DATA<\/a>\n- <a href='#4'>DATA EXPLORATION and DATA VISUALIZATION<\/a>\n    - <a href='#41'>PIE PLOT and BAR PLOT<\/a> \n    - <a href='#42'>HISTOGRAM<\/a>\n    - <a href='#43'>LINE PLOT<\/a> \n    - <a href='#44'>SCATTER PLOT<\/a> \n    - <a href='#45'>PLOT and SUBPLOT<\/a>\n    - <a href='#46'>BAR PLOT<\/a>\n    - <a href='#47'>SUBPLOT<\/a>\n    - <a href='#48'>BOX PLOT<\/a>\n    - <a href='#49'>BAR PLOT and COUNT PLOT<\/a> \n    - <a href='#410'>HEATMAP<\/a>\n    - <a href='#411'>JOINT PLOT<\/a> \n    - <a href='#412'>LM PLOT<\/a> \n    - <a href='#413'>POINT PLOT<\/a>\n    - <a href='#414'>SWARM PLOT<\/a>\n    - <a href='#415'>VIOLIN PLOT<\/a>\n- <a href='#5'>PREDICTIVE MODELS<\/a>\n    - <a href='#51'>MULTIPLE LINEAR REGRESSION<\/a> \n    - <a href='#52'>DECISION TREE<\/a>\n    - <a href='#53'>K-NEAREST NEIGHBORS<\/a> \n    - <a href='#54'>SUPPORT VECTOR MACHINE<\/a> \n    - <a href='#55'>NAIVE BAYES<\/a>\n    - <a href='#56'>RANDOM FOREST<\/a>\n    - <a href='#57'>COMPARISON of ALGORITHMS<\/a>\n- <a href='#6'>CONCLUCIONS<\/a>\n- <a href='#7'>REFERANCES<\/a>","1bbc0183":"## <a href='#6'>CONCLUSION<\/a>\nIn this study, I did data visualization and algorithm implementation. It is an application about how some tools can be used.","0689aa8a":"## <a href='#413'>POINT PLOT<\/a>","8076229d":"**OLDPEAK : ST depression induced by exercise relative to rest**","1dadc7a2":"**CHOL : Serum cholestoral in mg\/dl**","f37846b4":"## <a href='#45'>PLOT and SUBPLOT<\/a>","7bd4c5a0":"## <a href='#52'>DECISION TREE<\/a>","5457e579":"## <a href='#49'>BAR PLOT and COUNT PLOT<\/a>","cdb575e9":"## <a href='#415'>VIOLIN PLOT<\/a>","65439ab5":"**CA : Number of major vessels (0-3) colored by flourosopy**","19734a22":"## <a href='#414'>SWARM PLOT<\/a>","deaf171a":"## <a href='#55'>NAIVE BAYES<\/a>","1e7dc9db":"**TrestBps : Resting blood pressure (in mm Hg on admission to the hospital)**","50685bc7":"## <a href='#43'>LINE PLOT<\/a>","a8ff6cad":"**THALACH : Maximum heart rate achieved**","219574f6":"## <a href='#46'>BAR PLOT<\/a>","6cf6b28b":"**CHEST PAIN TYPES - CP**\n","3c1e0094":"<div>**RESULT**<\/div>\nMissing value is none but ca and oldpeak could be a problem for me because both of them have 0 values.While oldpeak has 32.7% 0 values, ca has 57.8% 0 values. ca means number of major vessels (0-3) colored by fluoroscopy. If your value of ca is 0, you can't have major vessels colored by fluoroscopy. This situation is not a problem. On the other hand, oldpeak means ST depression induced by exercise relative to rest. This situation is not a problem. As a conclusion, everything looks fine and I have not a problem with dataset. Besides, I have some ideas, firstly I believe that target could have a strong relation with cp,  slope, thalach. As a second, I think target might be having relation with exang, thal, restecg. I will investigate this situation and while I create a model, I will use results of this investigate. ","519fd66d":"**FBS : (fasting blood sugar > 120 mg\/dl) (1 = true; 0 = false)**","82564fdc":"**SEX : (1 = male; 0 = female)**","4e2605f2":"**RESTECG : Resting electrocardiographic results**","6758b475":"## <a href='#2'>Load Packages and Data<\/a>","9a57069e":"## <a href = '#56'>RANDOM FOREST CLASSIFIER<\/a>","05391914":"## <a href='#53'>KNN<\/a>","ad12113c":"## <a href='#42'>HISTOGRAM<\/a>","2ab93564":"## <a href='#48'>BOX PLOT<\/a>","c2c1afe9":"## <a href = '#57'>COMPARISON<\/a>","9a8d102a":"## <a href='#44'>SCATTER PLOT<\/a>","cbfe031f":"## <a href='#412'>LM PLOT<\/a>","ea03bba5":"## <a href='#5'>PREDICTED MODELS<\/a>","c29ccfd0":"## <a href='#47'>SUBPLOT<\/a>","cdf66b8d":"**THAL : 3 = normal; 6 = fixed defect; 7 = reversable defect**","282a6f0c":"## <a href='#410'>HEAT MAP - CORRELATION MATRICE<\/a>"}}