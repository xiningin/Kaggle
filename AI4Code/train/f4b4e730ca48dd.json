{"cell_type":{"43032782":"code","d1a7fdd8":"code","d64c24e3":"code","a3edec8b":"code","2cdd2a01":"code","4fada4e6":"code","7820b4f8":"code","da826cec":"code","aa42e5c1":"code","2c1755cc":"code","1463978f":"code","675f3dda":"code","d427aa44":"code","0c02cce9":"code","9d171354":"code","4382c075":"code","6f91245d":"code","c929e4c6":"code","a08c452e":"code","3dbbd76a":"markdown"},"source":{"43032782":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d1a7fdd8":"%matplotlib inline\ndf = pd.read_csv('\/kaggle\/input\/udemy-courses\/udemy_courses.csv')","d64c24e3":"df.columns","a3edec8b":"df.drop(columns = ['course_id', 'course_title', 'url'],axis= 1,inplace = True)","2cdd2a01":"df.head()","4fada4e6":"df_price = df.groupby(by='subject').sum()[['price']]\ndf_price.reset_index(inplace = True)\ndf_price","7820b4f8":"import matplotlib.pyplot as plt","da826cec":"fig = plt.figure(figsize=(10,8))\nax = fig.add_subplot(111)\nax.bar(x= df_price['subject'],height=df_price['price'], label = 'Price',width = 0.2,color = 'red')\n#df_price.plot(kind = 'bar',ax=ax)\nax.set_ylabel('Net Price ($) of Coures avliable for Subjects')\nax.set_xlabel('Subject')\nax.set_title('Net Price Vs Subject')\nax.legend()","aa42e5c1":"df_sub = df.groupby(by ='subject').sum()[['num_subscribers']]\ndf_sub.reset_index(inplace = True)\ndf_sub.rename(columns = {'num_subscribers':'NumOfSubcribers','subject':'Subject'},inplace =True)\ndf_sub['Subject']","2c1755cc":"fig1 = plt.figure(figsize=(10,8))\nax1 = fig1.add_subplot(111)\nNumSub = round(df_sub['NumOfSubcribers']\/1000)\nax1.bar(x= df_sub['Subject'],height = NumSub,color = 'blue',label = 'Number of Subcribers',width= 0.3)\nax1.set_title('Number of Subcribers Vs Subject')\nax1.set_ylabel('Number of Subscriber in Thousands') \nax1.set_xlabel('Subjects')\nax1.legend()","1463978f":"df['is_paid'].value_counts()","675f3dda":"df.groupby(by = 'is_paid').sum()","d427aa44":"fig2 = plt.figure(figsize=(10,8))\nax2 = fig2.add_subplot(111)\ndf.groupby(by='level').sum()[['num_lectures']].plot(kind = 'bar',\n                                                    title = 'Number of Lectures for different Levels Vs Levels',\n                                                    ax=ax2,\n                                                    width = 0.3,\n                                                    )\nax2.set_xlabel('Levels')\nax2.set_ylabel('Number of Subscribers')\nax2.legend(['Subscribers'])","0c02cce9":"df['RevenueGenrated'] = df['num_subscribers']*df['price']\ndf_rev = df.groupby(by='subject')[['RevenueGenrated']].sum()\ndf_rev.reset_index(inplace = True)\ndf_rev","9d171354":"fig_rev = plt.figure(figsize=(10,8))\nax_rev = fig_rev.add_subplot(111)\nax_rev.bar(x=df_rev['subject'],height = df_rev['RevenueGenrated']\/1000000,width = 0.2,label = 'Subjects')\nax_rev.set_ylabel('Revenue Generated by each subject in millions dollars ',fontsize = 12)\nax_rev.set_xlabel('Subjects',fontsize = 12)\nax_rev.set_title('Revenue Generated by Udemy for each subjects',fontsize = 12)\nax_rev.legend(fontsize = 12)","4382c075":"import plotly\nimport plotly.express as px\nimport plotly.graph_objects as go","6f91245d":"df1=df['subject'].value_counts().reset_index()\nfig=go.Figure(data=[go.Pie(labels=df1['index'],\n                          values=df1['subject'],\n                          hole=.4,\n                          title=\"Share of each Course\")])\nfig.update_layout(title=\"Udemy Course Subjects\")\nfig.show()","c929e4c6":"df['RevenueGenrated'] = df['num_subscribers']*df['price']\ndf_rev = df.groupby(by='subject')[['RevenueGenrated']].sum()\ndf_rev.reset_index(inplace = True)\ndf_rev","a08c452e":"fig_rev = plt.figure(figsize=(10,8))\nax_rev = fig_rev.add_subplot(111)\nax_rev.bar(x=df_rev['subject'],height = df_rev['RevenueGenrated']\/1000000,width = 0.2,label = 'Subjects')\nax_rev.set_ylabel('Revenue Generated by each subject in millions dollars ',fontsize = 12)\nax_rev.set_xlabel('Subjects',fontsize = 12)\nax_rev.set_title('Revenue Generated by Udemy for each subjects',fontsize = 12)\nax_rev.legend(fontsize = 12)","3dbbd76a":"Revenue generated by each subject"}}