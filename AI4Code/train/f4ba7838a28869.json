{"cell_type":{"41781bb1":"code","219c7133":"code","daf880a4":"code","95cab020":"code","84c8eaa5":"code","625bc37e":"code","80d87a83":"code","71bbf027":"code","e919167c":"code","c5cc129a":"code","95f86fda":"code","4df8a957":"code","5bbd4798":"code","f1b4b205":"code","62d5e930":"code","45c130a1":"code","1a4ed9b9":"code","dff2bf6d":"code","2133184b":"code","efbb2e7e":"code","6d68236d":"code","842e53d2":"code","f235b85f":"code","e982046c":"code","b2b7ca11":"code","92bdc71b":"code","13ef4bfb":"code","6635fc8d":"code","2951fe9e":"code","ef855e45":"code","21cb8876":"code","40820a3d":"markdown","ae05a2f6":"markdown","1da72727":"markdown","0a87a54c":"markdown","0a82fbf8":"markdown","80007583":"markdown","94a67d02":"markdown","b6721516":"markdown","8ee95a45":"markdown","cf5df0a0":"markdown","7a87f91c":"markdown","43bde1f4":"markdown","7c50ba87":"markdown","69a068bc":"markdown","7c47ebc9":"markdown","5e6719f5":"markdown","85fea231":"markdown","31b2adb4":"markdown","12a73b44":"markdown","09168efa":"markdown","052762d4":"markdown","acada036":"markdown"},"source":{"41781bb1":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","219c7133":"df = pd.read_csv('..\/input\/used-car-dataset-ford-and-mercedes\/toyota.csv')","daf880a4":"df.head()","95cab020":"df.info()","84c8eaa5":"sns.heatmap(df.isnull())","625bc37e":"df.describe()","80d87a83":"plt.figure(figsize=(10,8))\nsns.heatmap(df.corr(),annot=True)","71bbf027":"models = df.groupby('model').count()[['tax']].sort_values(by='tax',ascending=True).reset_index()\nmodels = models.rename(columns={'tax':'numberOfCars'})","e919167c":"fig = plt.figure(figsize=(15,5))\nsns.barplot(x=models['model'], y=models['numberOfCars'], color='royalblue')\nplt.xticks(rotation=60)","c5cc129a":"perYear = df.groupby('year').count()[['tax']].sort_values(by='tax',ascending=True).reset_index()\nperYear = perYear.rename(columns={'tax':'numberOfCars'})","95f86fda":"plt.figure(figsize=(15,5))\nsns.barplot(x=perYear['year'], y=perYear['numberOfCars'], color='royalblue')","4df8a957":"transmission = df.groupby('transmission').count()[['tax']].sort_values(by='tax').reset_index()\ntransmission = transmission.rename(columns={'tax':'count'})","5bbd4798":"plt.figure(figsize=(15,5))\nsns.barplot(x=transmission['transmission'], y=transmission['count'], color='royalblue')","f1b4b205":"fuel = df.groupby('fuelType').count()[['tax']].sort_values(by='tax').reset_index()\nfuel = fuel.rename(columns={'tax':'count'})","62d5e930":"plt.figure(figsize=(15,5))\nsns.barplot(x=fuel['fuelType'], y=fuel['count'], color='royalblue')","45c130a1":"engine = df.groupby('engineSize').count()[['tax']].sort_values(by='tax').reset_index()\nengine = engine.rename(columns={'tax':'count'})","1a4ed9b9":"plt.figure(figsize=(15,5))\nsns.barplot(x=engine['engineSize'], y=engine['count'], color='royalblue')","dff2bf6d":"plt.figure(figsize=(15,5))\nsns.distplot(df['mileage'])","2133184b":"plt.figure(figsize=(15,5))\nsns.distplot(df['price'])","efbb2e7e":"from sklearn.preprocessing import OneHotEncoder\nenc = OneHotEncoder(handle_unknown='ignore')\ndfEncoded = df","6d68236d":"dfEncoded = pd.get_dummies(dfEncoded, columns=[\"model\"], prefix=[\"Is_a\"] )\ndfEncoded = pd.get_dummies(dfEncoded, columns=[\"fuelType\"], prefix=['Fuel_is'])\ndfEncoded = pd.get_dummies(dfEncoded, columns=[\"transmission\"], prefix=['Transmission_is'])","842e53d2":"dfEncoded.info()","f235b85f":"features = dfEncoded.corr()\ntargetFeature = abs(features[\"price\"])\nrelevant_features = targetFeature[targetFeature>0.075]","e982046c":"dfSelected = dfEncoded[relevant_features.index]","b2b7ca11":"dfSelected","92bdc71b":"data = dfSelected.drop(columns=['price'])\ntarget = dfSelected['price']","13ef4bfb":"from sklearn.preprocessing import StandardScaler\nx = StandardScaler().fit_transform(data)\nscaledData = pd.DataFrame(x, columns=data.columns)\nscaledData['price'] = target","6635fc8d":"x = scaledData.drop(columns=['price'])\ny = scaledData['price']","2951fe9e":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.35)","ef855e45":"from sklearn.linear_model import LinearRegression\nlr = LinearRegression()\nlr.fit(x_train,y_train)\npred = lr.predict(x_test)","21cb8876":"score = lr.score(x_test,y_test)\nprint('R Square Score for Linear Regression : ', score)","40820a3d":"#### Fuel Type","ae05a2f6":"### Normalizing the Data","1da72727":"#### Number of Cars per Model","0a87a54c":"### Encoding Categorical Data","0a82fbf8":"### Importing the libraries","80007583":"### Train and Test Data Split","94a67d02":"### Dataset Description","b6721516":"#### Transmission Type","8ee95a45":"### Importing the Dataset","cf5df0a0":"#### One-Hot Encoding","7a87f91c":"None null values","43bde1f4":"### Linear Regression Model","7c50ba87":"![image.png](attachment:image.png)","69a068bc":"#### Number of Cars per Year","7c47ebc9":"## Toyota Car Prices Prediction\n\nThis notebook will explore the UK Car Prices Dataset, visualizing and exploring these data. My objective is to use Linear Regression to predict the Toyota Car Prices.","5e6719f5":"#### Price Distribuition","85fea231":"### Data Visualization","31b2adb4":"* model : Model of the car\n* year : The year that car was made\n* price : Price (Pounds)\n* Transmission : Type of gear\n* milage : How many miles the car went (1 mile = 1,609344 km)\n* fuelType : Fuel type\n* tax : tax\n* mpg : Miles per gallon (1 galon = 3,78541178 liters)\n* engine size : Size of engine (liters)","12a73b44":"### Feature Selection","09168efa":"#### Mileage Distribuition","052762d4":"#### Engine Size","acada036":"Using one-hot encoding to transform categorical data into binary values"}}