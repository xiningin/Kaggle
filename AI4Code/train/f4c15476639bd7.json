{"cell_type":{"00510ae5":"code","e71f4ac0":"code","3414f7db":"code","0580c7f3":"code","ef445f3c":"code","0465520f":"code","7f2cce18":"code","854a73e2":"code","4d3339ea":"code","ca4c8111":"code","a36bd34f":"markdown","8e0f6797":"markdown","de63afab":"markdown","8e0f56ad":"markdown","ea946fc1":"markdown"},"source":{"00510ae5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns \nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e71f4ac0":"dados = pd.read_csv('..\/input\/latest-covid19-india-statewise-data\/Latest Covid-19 India Status.csv')\ndados.head().style.set_properties(**{'background-color':'black','color': 'white'})","3414f7db":"dados.describe().style.set_properties(**{'background-color':'black','color': 'white'})","0580c7f3":"dados.value_counts()","ef445f3c":"dados1=dados.sort_values(by=\"Deaths\", ascending=False)\ndados2=dados.sort_values(by=\"Total Cases\", ascending=False)\nCasosTotal=dados2.iloc[0:5]\nCasosMorte= dados1.iloc[0:5]","0465520f":"sns.catplot(x=\"State\/UTs\", y=\"Deaths\", kind=\"bar\", data=CasosMorte,aspect=3)","7f2cce18":"sns.catplot(x=\"State\/UTs\", y=\"Discharged\", kind=\"bar\", data=CasosTotal,aspect=3)\n#Altas\nprint(\"N\u00famero de Casos Total nas cidades exibidas:\",CasosTotal[\"Total Cases\"].sum())","854a73e2":"dados3=dados.sort_values(by=\"Active\", ascending=False)\nCasosAtivos=dados3.iloc[0:5]\nsns.catplot(x=\"State\/UTs\", y=\"Active\", kind=\"bar\", data=CasosAtivos,aspect=3)\nCasosAtivos","4d3339ea":"dados4=dados.loc[:,['Active','Discharged','Total Cases']].sum()\nd4 = pd.DataFrame(dados4)\nd4","ca4c8111":"listd4 = [378181, 31993644, 32810845]\nexplode = (0.1, 0.1, 0.1) #explode Recuperados\nlabels = ['Ativos','Recuperados','Casos Totais']\nfig1, ax1 = plt.subplots()\nax1.pie(listd4, explode=explode, labels=labels, autopct='%1.1f%%', shadow=True)\nax1.axis('equal')\nplt.show()","a36bd34f":"# Total de casos, casos ativos e altas","8e0f6797":"# Propor\u00e7\u00e3o Total de morte, altas e casos ativos","de63afab":"# As 6 cidades com maiores casos de mortos na India","8e0f56ad":"# A quantidade de casos recuperados\/ativos\/totais\n### Total de casos ativos de COVID \u00e9 inferior a 1%, que mostra um controle da epidemia no pa\u00eds como um todo","ea946fc1":"# An\u00e1lise Explorat\u00f3ria e Sele\u00e7\u00e3o"}}