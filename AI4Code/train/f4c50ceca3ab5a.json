{"cell_type":{"04444937":"code","36bc88b8":"code","1fa8e197":"code","93aa3765":"code","28ac3e33":"code","5a192740":"code","473e91f2":"code","5662a10b":"code","c34aa85d":"code","9f717adc":"code","38c61c12":"code","70264618":"code","f54e03bc":"code","c7bed25f":"code","bc3f8a94":"code","537605fe":"code","67c7ce18":"code","3cd84dc4":"markdown","4149b598":"markdown","add78437":"markdown","9a56b768":"markdown","ddfd216a":"markdown","7536d933":"markdown","f7d58ddb":"markdown","ed122387":"markdown","a5bac342":"markdown"},"source":{"04444937":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport os\nimport seaborn as sns\nimport math\nimport datetime","36bc88b8":"os.listdir(\"..\/input\/pga-tour-20102018-data\/\")","1fa8e197":"data_2019=pd.read_csv(\"..\/input\/pga-tour-20102018-data\/2019_data.csv\")\ndata_2019.head()","93aa3765":"len(data_2019)","28ac3e33":"data_2019.isnull().sum()","5a192740":"data_2019['year']=data_2019.Date.apply(lambda x:x.split('-')[0])\ndata_2019['month']=data_2019.Date.apply(lambda x:x.split('-')[1])\ndata_2019['day']=data_2019.Date.apply(lambda x:x.split('-')[2])\ndata_2019.head()","473e91f2":"data_2019.Statistic.unique()","5662a10b":"type_stat=pd.DataFrame({'type':data_2019.Statistic.value_counts().sort_values(ascending=False)[:10].index,'value':data_2019.Statistic.value_counts().sort_values(ascending=False)[:10].values})\ntype_stat","c34aa85d":"\nqx = type_stat.plot(kind='pie', figsize=(10,7), y='value', labels=list(type_stat.type),autopct='%1.1f%%', pctdistance=0.9, radius=1.2)\nplt.legend(loc=0, bbox_to_anchor=(1.10,1.0)) \nplt.title('Top 10 Statistic by number', weight='bold', size=14,y=1.08)\nplt.axis('equal')\nplt.ylabel('')\nplt.show()\nplt.clf()\nplt.close()","9f717adc":"DD=data_2019[data_2019.Variable=='Driving Distance - (TOTAL DISTANCE)'].iloc[:,[0,4]]\nDD['Value_new']=DD['Value'].apply(lambda x:''.join(x.split(',')))\nDD.Value_new=DD.Value_new.astype(int)\nDD=DD.drop(columns='Value')\nplt.figure(figsize=(22,15))\nplt.subplot(2,2,1)\nDD.groupby('Player Name')['Value_new'].max().sort_values(ascending=False)[:10].sort_values().plot.barh(color='darkorange')\nplt.title(\"Top 10 player by Total Driving Distance\",size=20)\nplt.xlabel('meters')\nplt.ylabel('')\nplt.subplot(2,2,2)\nDD=data_2019[data_2019.Variable=='Driving Distance - (AVG.)'].iloc[:,[0,4]]\nDD.Value=DD.Value.astype(float)\nDD.groupby('Player Name')['Value'].max().sort_values(ascending=False)[:10].sort_values().plot.barh(color='navy')\nplt.title(\"Top 10 player by Average Driving Distance\",size=20)\nplt.xlabel('meters')\nplt.ylabel('')\nplt.subplot(2,2,3)\nDD=data_2019[data_2019.Variable=='Driving Distance - (ROUNDS)'].iloc[:,[0,4]]\nDD.Value=DD.Value.astype(float)\nDD.groupby('Player Name')['Value'].max().sort_values(ascending=False)[:10].sort_values().plot.barh(color='purple')\nplt.title(\"Top 10 player by Rounds Driving Distance\",size=20)\nplt.xlabel('meters')\nplt.ylabel('')\nplt.subplot(2,2,4)\nDD=data_2019[data_2019.Variable=='Driving Distance - (TOTAL DRIVES)'].iloc[:,[0,4]]\nDD.Value=DD.Value.astype(float)\nDD.groupby('Player Name')['Value'].max().sort_values(ascending=False)[:10].sort_values().plot.barh()\nplt.title(\"Top 10 player by TOTAL DRIVES Driving Distance\",size=20)\nplt.xlabel('meters')\nplt.ylabel('')\n","38c61c12":"DD=data_2019[data_2019.Variable=='Driving Distance - (TOTAL DISTANCE)'].iloc[:,[0,4,6]]\nDD['Value_new']=DD['Value'].apply(lambda x:''.join(x.split(',')))\nDD.Value_new=DD.Value_new.astype(int)\nDD=DD.drop(columns='Value')\nplt.figure(figsize=(22,22))\nfor i in range(len(DD.month.unique())):\n    DD_month=DD[DD.month==DD.month.unique()[i]]\n    plt.subplot(4,2,i+1)\n    DD_month.groupby('Player Name')['Value_new'].max().sort_values(ascending=False)[:10].sort_values().plot(kind='barh')\n    plt.title(\"Top 10 player by Total Driving Distance in month\"+DD.month.unique()[i],size=20)\n    plt.xlabel('meters')\n    plt.ylabel('')","70264618":"TE=data_2019[data_2019.Variable=='Total Eagles - (ROUNDS)'].iloc[:,[0,4]]\nplt.figure(figsize=(22,15))\n\nplt.subplot(1,2,1)\nTE.Value=TE.Value.astype(int)\nTE.groupby('Player Name')['Value'].max().sort_values(ascending=False)[:10].sort_values().plot.barh(color='firebrick')\nplt.title(\"Top 10 player by Total Eagles(Rounds)\",size=20)\nplt.xlabel('counts')\nplt.ylabel('')\n\nplt.subplot(1,2,2)\nTE=data_2019[data_2019.Variable=='Total Eagles - (TOTAL)'].iloc[:,[0,4]]\nTE=TE.dropna(subset=['Value'])\nTE.Value=TE.Value.astype(int)\nTE.groupby('Player Name')['Value'].max().sort_values(ascending=False)[:10].sort_values().plot.barh(color='cyan')\nplt.xticks(np.linspace(0, 20, 5))\nplt.title(\"Top 10 player by Total Eagles(Total)\",size=20)\nplt.xlabel('counts')\nplt.ylabel('')\n\n","f54e03bc":"def TOTAvgRank_DD_DAP_TE_TB(player,month):\n    Ranktype=['Driving Distance - (TOTAL DRIVES)','Driving Accuracy Percentage - (%)','Total Eagles - (TOTAL)','Total Birdies - (TOTAL)']\n    B={}\n    for i in range(len(Ranktype)):\n        A=data_2019[data_2019.Variable==Ranktype[i]]\n        A=A[A.month==month]\n        A.dropna(subset=['Value'])\n        A.Value=A.Value.astype(float)\n        value=A.groupby(['Player Name'])['Value'].agg('mean')\n        rank=A.groupby(['Player Name'])['Value'].agg('mean').rank(method='min',ascending=False)\n        new=pd.DataFrame({'rank':rank,'value':value})\n        B['type'+str(i)]=str(Ranktype[i])\n        B['rank'+str(i)]=str(new[new.index==player].iloc[0,0])+\"\/\"+str(max(rank))\n        B['value'+str(i)]=str(new[new.index==player].iloc[0,1])\n\n    return B\n","c7bed25f":"plt.figure(figsize=(25,35))\nj=1\nfor k in ['01','02','03','04','05','06','07','08']:\n    Aaron=TOTAvgRank_DD_DAP_TE_TB('Aaron Baddeley',str(k))\n    y=[]\n    x=[]\n    n=[]\n    for i in range(4):\n        r1,r2=Aaron['rank'+str(i)].split('\/')\n        R=float(r1)\/float(r2)\n        R=1-R\n        y.append(1.5+R*math.sin(math.pi\/4+i*math.pi\/2))\n        x.append(1.5+R*math.cos(math.pi\/4+i*math.pi\/2))\n        n.append(Aaron['type'+str(i)]+\" rank: \"+Aaron['rank'+str(i)])\n\n    x.append(x[0])\n    y.append(y[0])\n    plt.subplot(4,2,j)\n    plt.plot(x,y, marker='o', markerfacecolor='blue', markersize=12, color='skyblue', linewidth=2)\n    for i, txt in enumerate(n):\n        plt.annotate(txt, (x[i]-0.2, y[i]))\n    plt.xlim(0.5,2.5)\n    plt.ylim(0.5,2.5)\n    plt.fill(x, y,\"coral\")\n    plt.plot( 1.5, 1.5, marker='o', markerfacecolor='blue', markersize=8, linewidth=2)\n    plt.title(\"Aaron Baddeley's performance in month \"+str(k),size=18)\n    j+=1","bc3f8a94":"plt.figure(figsize=(25,35))\nj=1\nfor k in ['01','02','03','04','05','06','07','08']:\n    Sungjae=TOTAvgRank_DD_DAP_TE_TB('Sungjae Im',str(k))\n    y=[]\n    x=[]\n    n=[]\n    for i in range(4):\n        r1,r2=Sungjae['rank'+str(i)].split('\/')\n        R=float(r1)\/float(r2)\n        R=1-R\n        y.append(1.5+R*math.sin(math.pi\/4+i*math.pi\/2))\n        x.append(1.5+R*math.cos(math.pi\/4+i*math.pi\/2))\n        n.append(Sungjae['type'+str(i)]+\" rank: \"+Sungjae['rank'+str(i)])\n\n    x.append(x[0])\n    y.append(y[0])\n    plt.subplot(4,2,j)\n    plt.plot(x,y, marker='o', markerfacecolor='blue', markersize=12, color='skyblue', linewidth=2)\n    for i, txt in enumerate(n):\n        plt.annotate(txt, (x[i]-0.2, y[i]))\n    plt.xlim(0.5,2.5)\n    plt.ylim(0.5,2.5)\n    plt.fill(x, y,\"greenyellow\")\n    plt.plot( 1.5, 1.5, marker='o', markerfacecolor='blue', markersize=8, linewidth=2)\n    plt.title(\"Sungjae Im's performance in month \"+str(k),size=18)\n    j+=1","537605fe":"data_2019[data_2019.Statistic=='Official World Golf Ranking'].Variable.unique()","67c7ce18":"OWGR_TP=data_2019[data_2019.Variable=='Official World Golf Ranking - (TOTAL POINTS)']\nOWGR_TP.Value=OWGR_TP.Value.astype(float)\n\nfig, axes = plt.subplots(1, 2,figsize=(18,8))\n\nOWGR_TP.groupby('Player Name')['Value'].mean().sort_values(ascending=False)[:10].sort_values().plot(kind='barh',color='brown',ax=axes[0])\naxes[0].set_title('Top 10 player by Average of Total Points',size=20)\naxes[0].set_xlabel('points')\naxes[0].set_ylabel('')\n\nOWGE_TP10=OWGR_TP[OWGR_TP['Player Name'].isin(list(OWGR_TP.groupby('Player Name')['Value'].mean().sort_values(ascending=False)[:10].index[:10]))]\nOWGE_TP10.groupby(['Player Name','Date'])['Value'].agg('mean').unstack('Player Name').plot(ax=axes[1])\naxes[1].set_title('Official World Golf Ranking - (TOTAL POINTS)',size=20)\naxes[1].set_ylabel('Total points')\naxes[1].set_xlim([0,30])\nplt.xticks([0,5,10,15,20,25,29], ['2019-01-27','2019-03-03','2019-04-07','2019-05-12','2019-06-16','2019-07-21','2019-08-18'], rotation=0)","3cd84dc4":"<h3 id=\"23\">2.3&nbsp;Visualization&nbsp;for&nbsp;Aaron&nbsp;Baddeley<\/h3>\n","4149b598":"<h3 id=\"22\">2.2&nbsp;Visualization&nbsp;for&nbsp;Total&nbsp;Eagles<\/h3>","add78437":"# 2.Visualization","9a56b768":"This data size is 9,438,053. Variable of 'Player Name' and 'Value' have missing value 478 and 169,727 respectively.\n\nStatistic have 378 types,including 'Driving Distance', 'Driving Accuracy Percentage','Greens in Regulation Percentage'...\n\nIn this data,I focus on the Statistic Driving Distance ,'Driving Accuracy Percentage','Total Eagles',and 'Total Birdies'.\n\nBecause I am not familiarized with Golf,if anyone have suggestion or other important variable about visualization. \n\nPlease give me some comments.","ddfd216a":"* [1.DataOverview](#1.DataOverview)\n* [2.Visualization](#2.Visualization)\n    * [2.1&nbsp;Visualization&nbsp;for&nbsp;Driving&nbsp;Distance](#21)\n    * [2.2&nbsp;Visualization&nbsp;for&nbsp;Total&nbsp;Eagles](#22)\n    * [2.3&nbsp;Visualization&nbsp;for&nbsp;Aaron&nbsp;Baddeley](#23)\n    * [2.4&nbsp;Visualization&nbsp;for&nbsp;Sungjae&nbsp;Im](#24)\n    * [2.5&nbsp;Official&nbsp;World&nbsp;Golf&nbsp;Ranking](#25)","7536d933":"<h3 id=\"21\">2.1&nbsp;Visualization&nbsp;for&nbsp;Driving&nbsp;Distance<\/h3>","f7d58ddb":"# 1.DataOverview","ed122387":"<h3 id=\"24\">2.4&nbsp;Visualization&nbsp;for&nbsp;Sungjae&nbsp;Im<\/h3>","a5bac342":"<h3 id=\"25\">2.5&nbsp;Official&nbsp;World&nbsp;Golf&nbsp;Ranking<\/h3>"}}