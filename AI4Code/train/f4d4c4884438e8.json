{"cell_type":{"974cc864":"code","fecc466e":"code","50fc7f5b":"code","09ef20fd":"code","a95989f7":"code","25308b2e":"code","46b75032":"code","a0ed1550":"code","b6800947":"code","3f9ed7ee":"code","5c3e0a4b":"code","eed88722":"code","6f14b8ff":"code","eeeb3a3b":"code","a4747830":"code","dbb7f8cc":"code","86814781":"code","1c996691":"code","f6975fa2":"code","77ddc444":"code","39fd5aba":"code","347b15f1":"code","baaf1c7e":"code","fa065f08":"code","5a5e3212":"code","cffc97e8":"code","2423cdd6":"code","86a3a306":"code","74714826":"code","d8bcfe95":"code","e9dd5ca8":"code","8881f089":"code","97d81ea2":"code","63409ba5":"code","24121430":"code","01f5801a":"code","10f87c8d":"code","3e81e4a0":"code","90c6e9ff":"code","3f25092b":"code","93918a24":"code","4acd2abf":"code","f7c632df":"markdown","3483ec05":"markdown","ae07dd86":"markdown","fe3d2280":"markdown","09943e6b":"markdown","0b3a42ea":"markdown","97dcb8b9":"markdown","8a6c7eb6":"markdown","3794f684":"markdown","78df5d4e":"markdown","f3fc34b5":"markdown","7934aea2":"markdown","8ef68f95":"markdown","6a47bb21":"markdown"},"source":{"974cc864":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd\nimport matplotlib.pyplot as plt \nimport seaborn as sns\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nfrom collections import Counter\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nfrom sklearn.linear_model import LinearRegression #Linear Regresyon Lib\nfrom sklearn.preprocessing import PolynomialFeatures #Polynomial Linear Reg Lib\nfrom sklearn.tree import DecisionTreeRegressor #Decision Tree Reg Lib\nfrom sklearn.ensemble import RandomForestRegressor #Random Forest Reg Lib\nfrom sklearn.metrics import r2_score #Performance Analysis with R_Square\n\n","fecc466e":"data3c = pd.read_csv(\"\/kaggle\/input\/biomechanical-features-of-orthopedic-patients\/column_3C_weka.csv\") \ndata2c = pd.read_csv(\"\/kaggle\/input\/biomechanical-features-of-orthopedic-patients\/column_2C_weka.csv\") ","50fc7f5b":"data3c.head(10)","09ef20fd":"data2c.head(10)","a95989f7":"data2c.columns","25308b2e":"data2c[\"class\"].value_counts()","46b75032":"data3c[\"class\"].value_counts()","a0ed1550":"data2c.info()\n","b6800947":"data3c.info()","3f9ed7ee":"#Visualize Categorical Variable - Burada sadece Class bu tan\u0131ma uyuyor \nplt.figure(figsize = (9,5))\nvar = data3c[\"class\"]\nvar_values = var.value_counts()\nplt.bar(var_values.index, var_values)\nplt.show()","5c3e0a4b":"data3c.info()","eed88722":"#Visualize Numerical Variable \ndef histogram_plot(variable):\n    var= data3c[variable]\n    \n    plt.figure(figsize =(7,3))\n    plt.hist(var,bins=50,color =\"grey\")\n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"{} distrubiton with Histogram\".format(variable))\n\nnumericVar = [\"pelvic_incidence\",\"pelvic_tilt\",\"lumbar_lordosis_angle\",\"sacral_slope\",\n             \"pelvic_radius\",\"degree_spondylolisthesis\"]    \nfor each in numericVar:\n    histogram_plot(each)\n\n\n","6f14b8ff":"#Pelvic Inc\u0131dence vs Class\ndata3c[[\"pelvic_incidence\",\"class\"]].groupby([\"class\"], as_index = False).mean().sort_values(by=\"pelvic_incidence\",ascending = False)","eeeb3a3b":"#pelvic_tilt vs Class\ndata3c[[\"pelvic_tilt\",\"class\"]].groupby([\"class\"], as_index = False).mean().sort_values(by = \"pelvic_tilt\", ascending = False)","a4747830":"#lumbar lordosis angle vs class\ndata3c[[\"lumbar_lordosis_angle\",\"class\"]].groupby([\"class\"], as_index = False).mean().sort_values(by = 'lumbar_lordosis_angle', ascending = False)","dbb7f8cc":"#sacral_slope vs class\ndata3c[[\"sacral_slope\",\"class\"]].groupby([\"class\"], as_index = False).mean().sort_values(by = 'sacral_slope', ascending = False)","86814781":"#Pelvic Radius vs Class\ndata3c[[\"pelvic_radius\",\"class\"]].groupby([\"class\"], as_index = False).mean().sort_values(by = 'pelvic_radius', ascending = False)","1c996691":"#degree spondyylolisthesis vs class\ndata3c[[\"degree_spondylolisthesis\",\"class\"]].groupby([\"class\"], as_index = False).mean().sort_values(by = 'degree_spondylolisthesis', ascending = False)","f6975fa2":"def detect_outliers(df,features):\n    outlier_indices=[] \n    \n    for c in features:\n        Q1= np.percentile(df[c],25)\n        Q2= np.percentile(df[c],50)\n        Q3= np.percentile(df[c],75)\n        \n        IQR = Q3 - Q1\n        outlier_step = IQR * 1.5\n        outlier_list_col = df[(df[c] < Q1 - outlier_step) | (df[c] > Q3 + outlier_step)].index\n        \n        outlier_indices.extend(outlier_list_col)\n   \n    outlier_indices = Counter(outlier_indices)\n    multiple_outliers = list(i for i,v in outlier_indices.items() if v>2)\n    \n    return multiple_outliers \n\n        \n                                  ","77ddc444":"data3c.loc[detect_outliers(data3c,[\"pelvic_incidence\",\"pelvic_tilt\",\"lumbar_lordosis_angle\",\"sacral_slope\",\"pelvic_radius\",\"degree_spondylolisthesis\"])]","39fd5aba":"data3c.columns[data3c.isnull().any()] #Herhangi null de\u011feri bar\u0131nd\u0131ran bir column yok","347b15f1":"#Oncelikle HeatMap ile Korelasyon Analizi Yapal\u0131m \nlist1 = data3c.iloc[:,:-1] #class hari\u00e7 t\u00fcm s\u00fctunlar\u0131 ald\u0131k \u00c7\u00fcnk\u00fc class object olacagundan heatmap de g\u00f6z\u00fckmez\nsns.heatmap(list1.corr(), annot = True, fmt = \".3f\")\n#Class \u0131 da g\u00f6rmek istersek \n#data3c = data3c.replace({'Spondylolisthesis':0 , 'Normal':1 , 'Hernia':2}) #\u015feklide de yapabilirdik","baaf1c7e":"g = sns.factorplot(x=\"lumbar_lordosis_angle\",y=\"class\", kind = \"bar\", data=data3c, size =6)\ng.set_ylabels(\"Class Type\",size = 14)\nplt.show()  \nprint(\"Ortalama Lumbar Lordoz A\u00e7\u0131s\u0131 : \",data3c.lumbar_lordosis_angle.mean()) #Ortalama lumbar lordosis angle'da yazd\u0131r\u0131ld\u0131\n#Eger sekildeki gibi Object i Y'ye yazarsak yan bar plot c\u0131kar","fa065f08":"#Pelvic Radius ve Class \u0131 kars\u0131last\u0131ral\u0131m \ng = sns.factorplot(x=\"class\",y=\"pelvic_radius\", kind= \"bar\",data=data3c)","5a5e3212":"#Facetgrid Pelvic Tilt ile Class \u0131 g\u00f6relim \ng= sns.FacetGrid(data3c, col=\"class\",size =4)\ng.map(sns.distplot, \"pelvic_tilt\" , bins=30, color = \"red\")\nplt.show()","cffc97e8":"#Birde swarm plot ile sacral_slope ve Class kars\u0131last\u0131rmas\u0131 yapal\u0131m \nfig, ax = plt.subplots(figsize=(9,5))\nsns.swarmplot(x=\"class\",y=\"sacral_slope\", data=data3c, ax=ax, size=8)\nplt.show()","2423cdd6":"#\u015eimdi de inset plot ile Pelvic Tilt- Class ve Pelvic Radius - Class ili\u015fkilerini g\u00f6relim \ntrace1 = go.Scatter(\n    y=data3c[\"class\"],\n    x=data3c[\"pelvic_tilt\"],\n    name =\"Pelvic Tilt - Class\",\n    marker=dict(color=\"rgba(120,158,245,0.75)\")\n)\ntrace2 = go.Scatter(\n    y=data3c[\"class\"],\n    x=data3c[\"pelvic_radius\"],\n    xaxis =\"x2\",\n    yaxis =\"y2\",\n    name =\"Pelvic Radius - Class\",\n    marker =dict(color=\"rgba(0,55,100,0.65)\")\n)\ndata = [trace1,trace2]\nlayout = go.Layout(xaxis = dict(domain=[0.6,0.95],anchor=\"x2\"),\n                   yaxis = dict(domain=[0.6,0.95],anchor=\"y2\")\n)\nfig= go.Figure(data=data, layout=layout)\niplot(fig)","86a3a306":"data3c.columns","74714826":"dataspondy = data3c[data3c[\"class\"]== \"Spondylolisthesis\"]\ndatanorm = data3c[data3c[\"class\"]== \"Normal\"]\ndatahernia = data3c[data3c[\"class\"]== \"Hernia\"] ","d8bcfe95":"#Burada Spondylolisthesis s\u0131n\u0131f\u0131n\u0131 se\u00e7me sebebim Outlier de\u011ferlerine sahip olmas\u0131 outlierlar\u0131 atarak ve atmadan sonuclar\u0131 kars\u0131last\u0131rma f\u0131rsat\u0131m\u0131z olacak\n\n#Bu k\u0131s\u0131mda pelvic_incidence ve sacral_slope aras\u0131nda linear reg yapal\u0131m \u00e7\u00fcnk\u00fc bu verilerin ortalama de\u011ferleri birbirine yak\u0131n ve nokta da\u011f\u0131l\u0131m\u0131 belli bir nokta etraf\u0131nda da\u011f\u0131lm\u0131s\n\n# x= dataspondy[\"pelvic_incidence\"].values.reshape(-1,1) #Burada .values metodu ile np array' a cevirdik \n# y= np.array(dataspondy.loc[:,\"degree_spondylolisthesis\"]).reshape(-1,1) #Bu sekilde .values yerine np.array metodu ile cevirdik\nx=np.array(dataspondy.loc[:,\"pelvic_incidence\"]).reshape(-1,1)\ny=np.array(dataspondy.loc[:,\"sacral_slope\"]).reshape(-1,1)\n\n#\u015eimdi bu modelde \u00e7izdirme i\u015flemini yapal\u0131m \nplt.scatter(x,y,color=\"red\")\nplt.show()\n\n#Linear Regression >>>>> y = b0 + b1*x\nfrom sklearn.linear_model import LinearRegression\nlinear_reg = LinearRegression()\n\n#Bir de fit edelim \nlinear_reg.fit(x,y) \n\n#\u015eimdi b0 \u0131 bulal\u0131m \n#b0 = linear_reg.predict([[0]]) \u015feklinde de yapabilrdik \u00e7\u00fcnk\u00fc y eksenini kesti\u011fi noktada x=0 dolay\u0131s\u0131yla b1 = 0 ve y= b0 sonucuna ulas\u0131rd\u0131k\n\nb0 = linear_reg.intercept_  \nb1 = linear_reg.coef_ \nprint(\"b0 = {}, b1 = {} \\n\".format(b0,b1)) #Art\u0131k b0 ve b1 de\u011ferlerini biliyoruz \n","e9dd5ca8":"x_ = np.linspace(min(x), max(x)).reshape(-1,1)\ny_head = linear_reg.predict(x_)\n#G\u00f6rsellestirme\nplt.figure(figsize =(10,8))\nplt.scatter(x,y,color =\"red\")\nplt.plot(x_,y_head,color =\"blue\")\nplt.show()","8881f089":"#Bir de performans analizi i\u00e7in R_Square kullanal\u0131m\nfrom sklearn.metrics import r2_score\nprint(\"R^2 Score : \",linear_reg.score(x,y)) \n#Buradaki hata sample say\u0131s\u0131n\u0131n e\u015fit olmamas\u0131 dolay\u0131s\u0131yla e\u015fitleyince de sonuc negatif c\u0131k\u0131yor","97d81ea2":"#Polynomial Linear Regression  >>>>> y = b0 + b1*x + b2*x^2 + .. + bn*x^n \n\nfrom sklearn.preprocessing import PolynomialFeatures\npolynomial_reg = PolynomialFeatures(degree = 2)\n#Bir de fit edelim \nx_polynomial = polynomial_reg.fit_transform(x)\nlinear_reg2 =LinearRegression()\nlinear_reg2.fit(x_polynomial,y)\n\n#G\u00f6rsellestirme \ny_head2 = linear_reg2.predict(x_polynomial)\nplt.scatter(x,y)\nplt.plot(x,y_head2,color =\"blue\")\nplt.show()\n\nfrom sklearn.metrics import r2_score\nprint(linear_reg2.score(y,y_head2))\n#R Square hesab\u0131nda hata olustu ","63409ba5":"#Decision Tree \nfrom sklearn.tree import DecisionTreeRegressor\ntree_reg = DecisionTreeRegressor()\ntree_reg.fit(x,y)\nxt_ = np.arange(min(x),max(x),0.01).reshape(-1,1)\nyt_ = tree_reg.predict(xt_)\n\n#Visualize \nplt.scatter(x,y,color=\"red\")\nplt.plot(xt_,yt_,color=\"blue\")\nplt.show()\n\nfrom sklearn.metrics import r2_score\nprint(linear_reg2.score(y,yt_))","24121430":"data= pd.read_csv(\"..\/input\/biomechanical-features-of-orthopedic-patients\/column_2C_weka.csv\")","01f5801a":"data[\"class\"].value_counts()","10f87c8d":"data.info()","3e81e4a0":"data[\"class\"] = [1 if each == \"Abnormal\" else 0 for each  in data[\"class\"]]\ny = data[\"class\"].values\nx_data = data.iloc[:,:-1]","90c6e9ff":"#Normalizasyon\nx = (x_data - np.min(x_data))\/(np.max(x_data) - np.min(x_data))","3f25092b":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size = 0.3,random_state = 1)","93918a24":"from sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors = 13) \nknn.fit(x_train, y_train)\nprediction = knn.predict(x_test)\nprint(\" {} nn score: {}\".format(13,knn.score(x_test, y_test)))","4acd2abf":"score_list = []\nfor each in range(1,15):\n    knn2 = KNeighborsClassifier(n_neighbors = each)\n    knn2.fit(x_train, y_train)\n    score_list.append(knn2.score(x_test, y_test))\n\nplt.figure(figsize=(8,5))\nplt.scatter(range(1,15),score_list)\nplt.xlabel(\"k values\")\nplt.ylabel(\"accuracy\")\nplt.show()","f7c632df":"### Ornek olarak 2 adet \u00f6zellik incelemesi yapal\u0131m \n## 1 - Lumbar Lordosis Angle - Class\n## 2 - Pelvic Radius - Class","3483ec05":"data2c de Abnormal ve Normal classlar\u0131 varken 3c de Spondylolisthesis, Hernia ve Normal var","ae07dd86":"### Data2c de Spondylolisthesis ve Hernia y\u0131 Abnormal olarak nitelendirmi\u015f data3c den fark\u0131 bu\nBiz data3c de g\u00f6rselle\u015ftirme vs yapt\u0131ktan sonra Data2c ve 3C de Supervised ve Unsupervised Learning denemeleri yapacag\u0131z \n","fe3d2280":"### KNN Modeli Olusturmak","09943e6b":"### Train and Test Split\n","0b3a42ea":"# Machine Learning Part \n- Linear Regression \n- Multiple Linear Regression \n- Polynomial Linear Regression \n- Decision Tree\n- Random Forest Regression \n- Performance Analysis with R_Square ","97dcb8b9":"## BASIC DATA ANALYSIS \n1. pelvic_incidence - Class          \n1. pelvic_tilt      -- Class          \n1. lumbar_lordosis_angle  - Class  \n1. sacral_slope  -- Class             \n1. pelvic_radius - Class             \n1. degree_spondylolisthesis - Class   \n           ","8a6c7eb6":"data2c de bo\u015f veri yok total veri say\u0131s\u0131 310","3794f684":"## Outlier Detection ","78df5d4e":"## Visualisation ","f3fc34b5":"G\u00f6r\u00fcld\u00fc\u011f\u00fc gibi normal insanlar\u0131n pelvic tili daha y\u00fcksek de\u011ferlerde ve Spondylolisthesis bel kaymas\u0131 demektir ","7934aea2":"data3c de de ayn\u0131 sekilde 310 veri var ve hepsi dolu","8ef68f95":"## Missing Value \n","6a47bb21":"## KNN Algoritmas\u0131 \n- Datay\u0131 Knn algoritmas\u0131 ile e\u011fiterek hastan\u0131n normal mi abnormal mi oldu\u011funu tahmin etmeye cal\u0131sacag\u0131z. \n- Normal i\u00e7in 1 Abnormal i\u00e7in 0 diyelim "}}