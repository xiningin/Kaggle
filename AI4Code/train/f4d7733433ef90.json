{"cell_type":{"ae84b857":"code","d23f20b6":"code","d12b179d":"code","aaacaf33":"code","ba82a08e":"code","9e166df9":"code","c5400aa7":"code","c98ce4a8":"code","2d7f4303":"code","810e7984":"code","0c747609":"code","e19b38c9":"code","3f29c132":"code","d5a6e8f5":"code","d9a5f458":"code","267de6f7":"code","8f035c3b":"code","9895983a":"code","f965a049":"code","b629794c":"code","e5de0a50":"code","9008f204":"code","971715e0":"code","4411e65f":"code","d3d3366e":"code","b2967517":"code","639a7ae5":"code","85027f22":"code","72969922":"code","a0e21ac8":"code","9d121c86":"code","45df0944":"code","5c19c163":"markdown","7c095753":"markdown","0e8ebd08":"markdown","2906177f":"markdown","eb8c591b":"markdown","f4df74c4":"markdown","7824a79d":"markdown","b6a91ee0":"markdown","8f224183":"markdown","b9d1f8af":"markdown","9dab044f":"markdown"},"source":{"ae84b857":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n#Libraries for Data Manipulation\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n#Libraries for Visualization\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom matplotlib.pyplot import figure\n\n%matplotlib inline\n\n#Library for modelling\nfrom sklearn.preprocessing import LabelEncoder #Encodes Categorical Data into Numerical\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d23f20b6":"#importing training data\ntrain_data=pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntrain_data.head(10)","d12b179d":"train_data.info()","aaacaf33":"train_data.describe()","ba82a08e":"#Checking columns with missing data\nMiss_Percent=100*(train_data.isnull().sum()\/len(train_data))\n\n#Creating a dataframe to show percentage of missing data and its respective data column in table\nDataFrame=pd.DataFrame(Miss_Percent)\nmiss_percent_table=DataFrame.rename(columns={0:'% of Missing Values'})\nMissPercent=miss_percent_table\n\n#Displaying Missing Value table\nMissPercent","9e166df9":"#Checking Cabin column\ntrain_data['Cabin'].unique()","c5400aa7":"#Replacing Null Value with unknown as it is Categorical data \ntrain_data['Cabin']=train_data['Cabin'].fillna('Unknown')","c98ce4a8":"#Checking Age column\ntrain_data['Age'].unique()","2d7f4303":"#Replacing the null value with Median \ntrain_data['Age']=train_data['Age'].fillna(train_data['Age'].median())","810e7984":"#Checking Embarked Column\ntrain_data['Embarked'].unique()","0c747609":"train_data['Embarked']=train_data['Embarked'].fillna('Unknown')","e19b38c9":"#Dropping PassengerID, Name and Ticket because they will not have bigger impact predicting the survival \ntrain_data=train_data.drop(['PassengerId','Name','Ticket'],axis=1)","3f29c132":"#Barplot to show the total survivals based on Gender in each Passenger class\nplt.figure(figsize=(12,12))\nsns.barplot(x=\"Pclass\", y=\"Survived\",hue=\"Sex\", data=train_data)","d5a6e8f5":"#Calculating Correlation \ncorrelation=train_data.corr()\n#Plotting the Correlation in HeatMap for the data columns which has correlation value more than 0.4\nplt.figure(figsize=(12,12))\nCorr_Heatmap=sns.heatmap(correlation,annot=True,cmap=\"GnBu\")","d9a5f458":"#Encoding Catergorical data\nencoder = LabelEncoder()\ntrain_data['Sex'] = encoder.fit_transform(train_data['Sex'])\ntrain_data['Cabin'] = encoder.fit_transform(train_data['Cabin'])\ntrain_data['Embarked']=encoder.fit_transform(train_data['Embarked'])\ntrain_data.head(10)","267de6f7":"#Setting training data into x_train and y_train\nx_train=train_data.drop('Survived',axis=1)\ny_train=train_data['Survived']\n\n#Shapes of x_train,y_train and test data\nx_train.shape, y_train.shape,","8f035c3b":"#Importing testing data\ntest_data=pd.read_csv(\"..\/input\/titanic\/test.csv\")\ntest_data.head(10)","9895983a":"test_data.isnull().sum()","f965a049":"#Checking Age data column\ntest_data['Age'].unique()","b629794c":"#Replacing the null value with Median \ntest_data['Age']=test_data['Age'].fillna(test_data['Age'].median())","e5de0a50":"#Checking Fare data column\ntest_data['Fare'].unique()","9008f204":"#Replacing the null value with Median \ntest_data['Fare']=test_data['Fare'].fillna(test_data['Fare'].median())","971715e0":"#Checking Cabin Column\ntest_data['Cabin'].unique()","4411e65f":"#Replacing Null Value with unknown as it is Categorical data \ntest_data['Cabin']=test_data['Cabin'].fillna('Unknown')","d3d3366e":"#Dropping Columns because bescause they were dropped in Training data\ntest_id=test_data['PassengerId']\ntest_data=test_data.drop(['PassengerId','Name','Ticket'],axis=1)","b2967517":"#Encoding Testing data\ntest_data['Sex'] = encoder.fit_transform(test_data['Sex'])\ntest_data['Cabin'] = encoder.fit_transform(test_data['Cabin'])\ntest_data['Embarked']=encoder.fit_transform(test_data['Embarked'])","639a7ae5":"#Checking the encoded test data\ntest_data.head(10)","85027f22":"#Allocating variable for testing data\nx_test=test_data","72969922":"random_forest = RandomForestClassifier(n_estimators=100)\nrandom_forest.fit(x_train, y_train)\nrandom_forest.score(x_train, y_train)","a0e21ac8":"#Testing the model with test data\npred = random_forest.predict(x_test)","9d121c86":"#Creating Dataframe to store the Ids with Prediction\noutput=pd.DataFrame({'PassengerId':test_id,'Survived':pred})\nprint(output)","45df0944":"output.to_csv(\"Titanic_Survival.csv\",index=False)\nprint(\"Completed\")","5c19c163":"# Testing Model","7c095753":"# Saving into CSV File","0e8ebd08":"# Preparing Data \n\nWhile preparing Training data, following steps were taken:\n* Checked for Null values\n* Filled Null values with \"Unknown\" for String and Median for Numerical Categorical datas","2906177f":"# Preparing Testing Data","eb8c591b":"**Checking for Null Values**","f4df74c4":"# Training Models","7824a79d":"# Titanic Survival Prediction\n\nHere, in this challenge we have to predict whether the passenger survived the Titanic Disaster ot not based on different variables like cabin, embarked localcations, etc.\n\nHere, Random Forest Classifier has been used to make classify or predict whether they survived the disaster or not.","b6a91ee0":"# Preparing for Modelling\n\nAs the model is mathematical computation, the string data should be encoded into numerical.","8f224183":"# Exploratory Data Analysis\n\nHere plot were drafted to gain insights about what the dataset is trying to communicate about. \nBarplot of Passenger Survival  on each PCLass based on Gender and Correlation in Heatmap is drafted to gain insights.","b9d1f8af":"As testing data consists of Null values, it will throw an error message while encoding, so we are going to fill null values with unknown categorical data consisting of string data types,and median with numerical data.","9dab044f":"**Random Forest Classifier**"}}