{"cell_type":{"af18cbf9":"code","d015e028":"code","eeb64b95":"code","bb9356a7":"code","1f731f11":"code","40366555":"code","5d9a191e":"code","5ec8c6d5":"code","97b2e923":"code","59199039":"code","6ca4a7ca":"code","c1a0e1e7":"code","82a9224f":"code","1fdf75d3":"code","4e42facc":"code","36f7d472":"code","219a0bb7":"code","7732f767":"code","ffa28037":"code","eedfc20d":"code","642ef5f5":"code","3ed4411b":"code","da583326":"code","73290a71":"code","4f352080":"code","7c3596b3":"code","cfdbf812":"markdown","faf0eb31":"markdown","7457f613":"markdown","f2923ce0":"markdown","cc2edcbc":"markdown"},"source":{"af18cbf9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d015e028":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n%matplotlib inline\nimport plotly.graph_objects as go\n\nimport seaborn as sns\nTSLA = pd.read_csv(\"..\/input\/tesla-stock-data-from-2010-to-2020\/TSLA.csv\")","eeb64b95":"TSLA['Date'] = pd.to_datetime(TSLA['Date'])\nTSLA.index = TSLA['Date']\nTSLA.head(3)","bb9356a7":"Tesla=TSLA.rename(columns={'Adj Close': 'AdjClose'})\nTesla.head(3)","1f731f11":"sns.pairplot(Tesla[[\"Open\", \"High\", \"Close\", \"Volume\"]], diag_kind=\"kde\")\n","40366555":"fig = px.line(Tesla, x='Date', y='Volume')\nfig.show()","5d9a191e":"fig = go.Figure(data=[go.Candlestick(\n    x=Tesla['Date'],\n    open=Tesla['Open'], high=Tesla['High'],\n    low=Tesla['Low'], close=Tesla['Close'],\n    increasing_line_color= 'cyan', decreasing_line_color= 'green'\n)])\n\nfig.show()","5ec8c6d5":"Tesla_HPY = pd.DataFrame({'Date':Tesla['Date'], 'HPY':Tesla['Close'] \/ Tesla['Open']-1})\nTesla_HPY.head(3)","97b2e923":"# Telsa HPY static statement \nTesla_HPY.describe()","59199039":"# Tesla visualization \nfig = go.Figure([go.Scatter(x=Tesla_HPY['Date'], y=Tesla_HPY['HPY'])])\nfig.show()","6ca4a7ca":"import tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nfrom sklearn.preprocessing import OneHotEncoder","c1a0e1e7":"TeslaDF = Tesla.loc[:,['AdjClose','Volume']]\nTeslaDF['HPY'] = ((Tesla['Close'] \/ Tesla['Open'])-1) \nTeslaDF['HL_PCT'] = (Tesla['High'] - Tesla['Low'])\/Tesla['Open'] ","82a9224f":"TeslaDF.head(3)","1fdf75d3":"train_dataset = TeslaDF.sample(frac=0.8,random_state=0)\ntest_dataset = TeslaDF.drop(train_dataset.index)","4e42facc":"train_stats = train_dataset.describe()\ntrain_stats.pop(\"AdjClose\")\ntrain_stats = train_stats.transpose()\ntrain_stats","36f7d472":"train_labels = train_dataset.pop('AdjClose')\ntest_labels = test_dataset.pop('AdjClose')","219a0bb7":"def norm(x):\n    return (x - train_stats['mean']) \/ train_stats['std']\nnormed_train_data = norm(train_dataset)\nnormed_test_data = norm(test_dataset)","7732f767":"def build_model():\n    model = keras.Sequential([\n      layers.Dense(64, activation='relu', input_shape=[len(train_dataset.keys())]),\n      layers.Dense(64, activation='relu'),\n      layers.Dense(1)\n    ])\n\n    optimizer = tf.keras.optimizers.RMSprop(0.001)\n\n    model.compile(loss='mse',\n                  optimizer=optimizer,\n                  metrics=['mae', 'mse'])\n    return model","ffa28037":"model = build_model()","eedfc20d":"model.summary()\n","642ef5f5":"example_batch = normed_train_data[:10]\nexample_result = model.predict(example_batch)\nexample_result","3ed4411b":"class PrintDot(keras.callbacks.Callback):\n    def on_epoch_end(self, epoch, logs):\n        if epoch % 100 == 0: print('')\n        print('.', end='')\n\nEPOCHS = 1000\n\nhistory = model.fit(\n  normed_train_data, train_labels,\n  epochs=EPOCHS, validation_split = 0.2, verbose=0,\n  callbacks=[PrintDot()])","da583326":"hist = pd.DataFrame(history.history)\nhist['epoch'] = history.epoch\nhist.tail()","73290a71":"loss, mae, mse = model.evaluate(normed_test_data, test_labels, verbose=2)\n\nprint(\"test_set average mas: {:5.2f} MPG\".format(mae))","4f352080":"test_predictions = model.predict(normed_test_data).flatten()\n\nplt.scatter(test_labels, test_predictions)\nplt.xlabel('True Values [MPG]')\nplt.ylabel('Predictions [MPG]')\nplt.axis('equal')\nplt.axis('square')\nplt.xlim([0,plt.xlim()[1]])\nplt.ylim([0,plt.ylim()[1]])\n_ = plt.plot([-100, 100], [-100, 100])","7c3596b3":"error = test_predictions - test_labels\nplt.hist(error, bins = 25)\nplt.xlabel(\"Prediction Error [MPG]\")\n_ = plt.ylabel(\"Count\")","cfdbf812":"* # keras prediction modeling ","faf0eb31":"forecast_col = 'AdjClose'\nforecast_out = int(math.ceil(0.01 * len(TeslaDF)))\nTeslaDF['label'] = TeslaDF[forecast_col].shift(-forecast_out)\n","7457f613":"<img class=\"mntl-lightbox__img\" src=\"https:\/\/www.investopedia.com\/thmb\/KKV8GggtRpTzoUSICB5jDEnXpII=\/1280x0\/filters:no_upscale():max_bytes(150000):strip_icc():format(webp)\/HoldingPeriodReturn-2917125a133f40818f2e4005e291538c.jpg\">\n\nhttps:\/\/www.investopedia.com\/terms\/h\/holdingperiodreturn-yield.asp","f2923ce0":"<span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 1.52594em;\"><span class=\"\" style=\"top: -3.52594em;\"><span class=\"pstrut\" style=\"height: 3.37144em;\"><\/span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">Record&nbsp;High&nbsp;Percent<\/span><\/span><span class=\"mord rule\" style=\"margin-right: 0.277778em;\"><\/span><span class=\"mrel\">=<\/span><span class=\"mord rule\" style=\"margin-right: 0.277778em;\"><\/span><span class=\"mord\"><span class=\"mopen nulldelimiter\"><\/span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 1.37144em;\"><span class=\"\" style=\"top: -2.314em;\"><span class=\"pstrut\" style=\"height: 3em;\"><\/span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">New&nbsp;Highs<\/span><\/span><span class=\"mord rule\" style=\"margin-right: 0.222222em;\"><\/span><span class=\"mbin\">+<\/span><span class=\"mord rule\" style=\"margin-right: 0.222222em;\"><\/span><span class=\"mord text\"><span class=\"mord\">New&nbsp;Lows<\/span><\/span><\/span><\/span><span class=\"\" style=\"top: -3.15em;\"><span class=\"pstrut\" style=\"height: 3em;\"><\/span><span class=\"stretchy\" style=\"height: 0.2em;\"><svg width=\"400em\" height=\"0.2em\" viewBox=\"0 0 400000 200\" preserveAspectRatio=\"xMinYMin slice\"><path d=\"M0 80H400000 v40H0z M0 80H400000 v40H0z\"><\/path><\/svg><\/span><\/span><span class=\"\" style=\"top: -3.677em;\"><span class=\"pstrut\" style=\"height: 3em;\"><\/span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">New&nbsp;Highs<\/span><\/span><\/span><\/span><\/span><span class=\"vlist-s\">\u200b<\/span><\/span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.88044em;\"><\/span><\/span><\/span><\/span><span class=\"mclose nulldelimiter\"><\/span><\/span><span class=\"mord rule\" style=\"margin-right: 0.222222em;\"><\/span><span class=\"mbin\">\u00d7<\/span><span class=\"mord rule\" style=\"margin-right: 0.222222em;\"><\/span><span class=\"mord\">1<\/span><span class=\"mord\">0<\/span><span class=\"mord\">0<\/span><\/span><\/span><\/span><span class=\"vlist-s\">\u200b<\/span><\/span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 1.02594em;\"><\/span><\/span><\/span>\n\nhttps:\/\/www.investopedia.com\/terms\/h\/high-low-index.asp","cc2edcbc":"# Tesla HPY (Holding Period Yield) Model"}}