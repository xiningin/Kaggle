{"cell_type":{"e7e6ec8e":"code","4d6041f4":"code","07b29278":"code","3f266f46":"code","a987f174":"code","b9f86600":"code","2e4bd3da":"code","2a06b1eb":"code","6e012d2c":"code","7cee7b99":"code","3a1c183f":"code","a1e84b25":"code","292aecb4":"code","b0cc4786":"code","cc06a240":"code","8cd1cddf":"code","01737c90":"code","0cd7ea6d":"code","eb54f805":"code","79d35f52":"code","80bcd0c0":"code","c2678fa2":"code","b756edfd":"code","16edcc68":"code","4d6bae06":"code","d6fb6f4c":"code","c680507a":"code","6900ca43":"code","7f741442":"code","600cc019":"code","2f861edf":"code","91b244cd":"code","6e900a91":"code","7a6b532a":"code","3f6055c6":"code","aea0db44":"code","53160e9d":"code","ee050cc0":"code","83a36161":"code","1bf2cab4":"code","12fb096c":"code","181d45d7":"code","6d9e2e5e":"code","d1440087":"code","b54cb9b9":"markdown","99f587a5":"markdown","878d30ea":"markdown","31a088b6":"markdown","9d7f64b0":"markdown","533b18c0":"markdown","5a3971ba":"markdown","13a191fa":"markdown","1fb169a3":"markdown","ead290a3":"markdown","a537fe46":"markdown","67b60240":"markdown","d87bd10a":"markdown","fcf0f9d2":"markdown","3786c106":"markdown"},"source":{"e7e6ec8e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4d6041f4":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","07b29278":"teams=pd.read_csv('..\/input\/ipl-data-set\/teams.csv')","3f266f46":"teams","a987f174":"team_h_a=pd.read_csv('..\/input\/ipl-data-set\/teamwise_home_and_away.csv')","b9f86600":"team_h_a","2e4bd3da":"matches=pd.read_csv('..\/input\/ipl-data-set\/matches.csv')","2a06b1eb":"matches.head()","6e012d2c":"matches.shape","7cee7b99":"matches[:][matches['Season']=='IPL-2019']","3a1c183f":"matches_in_2019=matches[:][matches['Season']=='IPL-2019'].shape[0]","a1e84b25":"## Team winning most matches in the ipl 2019\nmatches['winner']","292aecb4":"import statistics","b0cc4786":"statistics.mode(matches['winner'])","cc06a240":"statistics.mode(matches['toss_winner'])","8cd1cddf":"won_who_won_the_toss=matches[:][matches['Season']=='IPL-2019'][matches['toss_winner']==matches['winner']].shape[0]","01737c90":"team_who_won_the_toss_winning=(won_who_won_the_toss\/matches_in_2019)*100","0cd7ea6d":"team_who_won_the_toss_winning","eb54f805":"matches[:][matches['Season']=='IPL-2019'][matches['toss_winner']==matches['winner']][matches['toss_decision']=='bat']","79d35f52":"matches[:][matches['Season']=='IPL-2019'][matches['toss_winner']==matches['winner']][matches['toss_decision']=='bat'].shape[0]","80bcd0c0":"((matches[:][matches['Season']=='IPL-2019'][matches['toss_winner']==matches['winner']][matches['toss_decision']=='bat'].shape[0])\/(matches_in_2019))*100","c2678fa2":"ipl_2019=matches[:][matches['Season']=='IPL-2019']","b756edfd":"ipl_2019","16edcc68":"statistics.mode(ipl_2019['player_of_match'])","4d6bae06":"from scipy import stats as s\nprint((s.mode(ipl_2019['venue'])[0][0]))","d6fb6f4c":"print((s.mode(ipl_2019['city'])[0][0]))","c680507a":"teams=[x for x in (set(ipl_2019['team1']))]","6900ca43":"teams","7f741442":"ipl_2019['winner'].values","600cc019":"c=0\nwin=[]\nfor i in teams:\n    for j in ipl_2019['winner'].values:\n        if i==j:\n            c=c+1\n    win.append(c)\n    c=0","2f861edf":"win","91b244cd":"team_score=pd.DataFrame({'Teams':teams,'win':win})","6e900a91":"team_score","7a6b532a":"c=0\nwin=[]\nfor i in teams:\n    for j in matches['winner'].values:\n        if i==j:\n            c=c+1\n    win.append(c)\n    c=0","3f6055c6":"team_score=pd.DataFrame({'Teams':teams,'win':win})","aea0db44":"team_score","53160e9d":"c=0\nwin=[]\nfor i in teams:\n    for j in matches['toss_winner'].values:\n        if i==j:\n            c=c+1\n    win.append(c)\n    c=0","ee050cc0":"team_score=pd.DataFrame({'Teams':teams,'Toss_win':win})","83a36161":"team_score","1bf2cab4":"players=[x for x in (set(matches['player_of_match']))]","12fb096c":"c=0\nwin=[]\nfor i in players:\n    for j in matches['player_of_match'].values:\n        if i==j:\n            c=c+1\n    win.append(c)\n    c=0","181d45d7":"team_score=pd.DataFrame({'Player':players,'Player_of_match':win})","6d9e2e5e":"team_score","d1440087":"team_score[:][team_score['Player_of_match']>10]","b54cb9b9":"**Team winning the toss and batting first and go for the win**","99f587a5":"Team won the most no of toss in the ipl season","878d30ea":"Mumbai Indians won most no of tosses after that their is Kolkata in the no","31a088b6":"Team Winning most matches in the IPL-2019","9d7f64b0":"  Mumbai Indians won most matches in the ipl till now a count of 109 and then chennai 100 but we should also remember that chennai was not their for 2 seasons","533b18c0":"Team Winning most toss in the IPL-2019","5a3971ba":"**City where most of the matches played in IPL 2019**","13a191fa":"Chances of Team winning the toss and batting first and go for the win","1fb169a3":"**Team winning the toss and going for the win**","ead290a3":"# **IPL 2019 Analysis**","a537fe46":"Most player of match award by any player till 2019 is CH Gayle","67b60240":"Score Card of Teams in IPL 2019","d87bd10a":"No of player of the match by a player","fcf0f9d2":"**Most Player of the Match Awards by a Player**","3786c106":"**Venue with most of the Matches Played**"}}