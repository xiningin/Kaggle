{"cell_type":{"810d8f72":"code","7af1dbe3":"code","3d721df0":"code","bc709bfa":"code","1919711c":"code","cabb9d29":"code","597c652c":"code","ae8f2811":"code","d987de3a":"code","bee4bd5c":"code","80c4e342":"code","9d801139":"code","f0962ac9":"markdown","ea03329a":"markdown","861646f4":"markdown","7abf182a":"markdown","9e247c67":"markdown","16eff2b2":"markdown","b85fbcc1":"markdown","51ba693b":"markdown","8c8617b2":"markdown"},"source":{"810d8f72":"import pandas as pd\nimport numpy as np \nimport matplotlib.pyplot as plt\nfrom matplotlib import style\nimport seaborn as sns\nfrom wordcloud import WordCloud\nimport warnings\n\n\nwarnings.filterwarnings('ignore')\nstyle.use('seaborn-dark')\n","7af1dbe3":"df = pd.read_csv('..\/input\/superhero-api-dataset\/data.csv')\ndf = df.drop(columns=[column for column in df.columns if (pd.isna(df[column]).sum())>200])","3d721df0":"df","bc709bfa":"df.columns","1919711c":"float_df = df.select_dtypes(include=['float64'])\nsep_columns = float_df.columns\nfor i in sep_columns:\n    plt.figure()\n    plt.title(i)\n    sns.distplot(df[i])\n    \n","cabb9d29":"plt.figure(figsize=(15,8))\nfor i in sep_columns:\n    plt.title(i)\n    sns.kdeplot(df[i], label=i, shade=True)\nplt.legend()\nplt.xlabel('Points')","597c652c":"plt.figure(figsize=(15,8))\nplt.title('Eye Color')\nplt.bar(df.groupby('appearance__eye-color').count().index, df.groupby('appearance__eye-color').count().id )\nplt.xticks(rotation=90)\nprint('')","ae8f2811":"plt.figure(figsize=(15,8))\nplt.title('Hair Color')\nsns.barplot(df.groupby('appearance__hair-color').count().index, df.groupby('appearance__hair-color').count().id, color='r')\nplt.xticks(rotation=90)\nprint('')","d987de3a":"df['appearance__height__002_c'] = 0\nfor i in range(len(df['appearance__height__002'])):\n    try:\n        df['appearance__height__002_c'][i] = (df['appearance__height__002'][i][:(df['appearance__height__002'][i].index('c'))])\n    except:\n        pass\n\nplt.figure(figsize=(15,8))\nplt.xlabel('Height in cm')\nplt.title('Heroes Height')\nsns.distplot(df[df.appearance__height__002_c>0]['appearance__height__002_c'], color='g')\n\n","bee4bd5c":"df['appearance__weight__002_c'] = 0\nfor i in range(len(df['appearance__weight__002'])):\n\n    try:\n        df['appearance__weight__002_c'][i] = (df['appearance__weight__002'][i][:(df['appearance__weight__002'][i].index('k'))])\n    except:\n        pass\nplt.figure(figsize=(15,8))\nplt.xlabel('Height in KG')\nplt.title('Heroes Weight')\nsns.distplot(df[df.appearance__weight__002_c>0]['appearance__weight__002_c'], color='orange')","80c4e342":"def wordcloud_plot(column, title):\n    text = \" \".join(string for string in df[column])\n    wordcloud = WordCloud(max_font_size=50, max_words=100, background_color=\"white\").generate(text)\n    plt.figure(figsize=(12,8))       \n    plt.title(title)\n    plt.imshow(wordcloud, interpolation='bilinear')\n    plt.axis(\"off\")\n    plt.show()\n","9d801139":"\n\nstr_cols = ['biography__alter-egos', 'work__occupation', 'work__base', 'connections__group-affiliation', 'connections__relatives'] \nfor col in str_cols:\n    wordcloud_plot(col, col)\n\n\n\n\n\n","f0962ac9":"Most heros have blue eyes, brown took the second place and green the third. ","ea03329a":"Now let's check out some wordcloud to describe our \"wordy\" column  variables from the data","861646f4":"The graph above states an obvious result: heroes are tall. \n\nBellow, we also confirm aother commmom knowledge about heroes weight, they need to be fit to fight the evil.  ","7abf182a":"Peek columns names","9e247c67":"Check the data","16eff2b2":"Most heros have black hair, followed by blond and brown. The bald ones also figure the top spots.","b85fbcc1":"Distplot all of the pure numeric data from the dataframe.","51ba693b":"Investigate how the eye color is distributed","8c8617b2":"Little data cleansing: drop all columns if more than 200 values are NA"}}