{"cell_type":{"e61682dd":"code","ab2bb84f":"code","84eb07a2":"code","7d9b9f41":"code","998a676e":"code","550b741f":"code","0442f487":"code","3e4cf53e":"code","8164d882":"code","879ccc1c":"code","6affcdcc":"code","f09c0eae":"code","c335c24d":"code","ab2a4f8f":"code","c9a07e94":"code","8e1ea70e":"code","0fb4bdb2":"code","d6299c45":"code","0aababa7":"code","488fa9cd":"code","908019f9":"markdown","7ce3278a":"markdown","2354ded9":"markdown","ef4cb80f":"markdown","15ea956f":"markdown"},"source":{"e61682dd":"import pandas as pd\nimport plotly.offline as py\nimport plotly.graph_objs as go\nimport numpy as np\nimport matplotlib.pyplot as plt\npy.init_notebook_mode(connected=True)\n\ndf = pd.read_csv('..\/input\/dataviz-facens-20182-aula-1-exerccio-2\/BR_eleitorado_2016_municipio.csv', delimiter=',')\ndf.head(3)\n\nresposta = [[\"uf\", \"Qualitativa Nominal\"],\n            [\"nome_municipio\", \"Qualitativa Nominal\"],\n            [\"total_eleitores\", \"Quantitativa Discreta\"],\n            [\"f_16\", \"Quantitativa Discreta\"],\n            [\"f_17\", \"Quantitativa Discreta\"],\n            [\"f_18_20\", \"Quantitativa Discreta\"],\n            [\"f_21_24\", \"Quantitativa Discreta\"],\n            [\"gen_feminino\", \"Quantitativa Discreta\"],\n            [\"gen_masculino\", \"Quantitativa Discreta\"],     \n           ] #vari\u00e1veis relacionadas a tempo s\u00e3o cont\u00ednuas, mas podem ser discretas pois n\u00e3o h\u00e1 perdas -- (discretiza\u00e7\u00e3o)\nresposta = pd.DataFrame(resposta, columns=[\"Variavel\", \"Classifica\u00e7\u00e3o\"])\nresposta","ab2bb84f":"df.groupby(['uf','nome_municipio']).size().head(5)","84eb07a2":"# OU\ndf['uf'].value_counts().head(5)\ndf['nome_municipio'].value_counts().head(5)","7d9b9f41":"#Gr\u00e1fico 1 - Agrupando df para total de eleitores por UF\nx = df[['uf','total_eleitores']].groupby('uf',as_index = False).sum().sort_values(by = 'total_eleitores', ascending = False)\nx","998a676e":"#Plotando Plotly gr\u00e1fico 1\nfig = go.Figure(\n    data=[go.Bar(x=x['uf'], y=x['total_eleitores'])],\n    layout=go.Layout(\n        title=go.layout.Title(text=\"Eleitores por estado\")\n    )\n)\n\npy.iplot(fig)","550b741f":"#Gr\u00e1fico 2 - % de eleitores por g\u00eanero\nmasculino = df['gen_masculino'].sum()\nfeminino = df['gen_feminino'].sum()\nn_if = df['gen_nao_informado'].sum()","0442f487":"#Plotando Plotly gr\u00e1fico 2\nlangs = ['Masculino', 'Feminino', 'N\u00e3o Informado']\nValores = [masculino, feminino, n_if]\ntrace = go.Pie(labels = langs, values = Valores)\ndata = [trace]\nfig = go.Figure(data = data, layout=go.Layout(title=go.layout.Title(text=\"% de Eleitores Totais por G\u00eanero\")))\npy.iplot(fig)","3e4cf53e":"#Gr\u00e1fico 3 - Agrupando faixa et\u00e1ria em uma series e depois somando o total por categoria\nidade =  np.array(['f_16', 'f_18_20', 'f_25_34', 'f_45_59', 'f_70_79', 'f_sup_79'])\n\ntot_idade = np.array([df[i].sum() for i in idade])\n\ntot_idade","8164d882":"#Plotando Plotly gr\u00e1fico 3\nfig = go.Figure(\n    data=[go.Bar(x = idade, y = tot_idade)],\n    layout=go.Layout(\n        title=go.layout.Title(text=\"Quantidade de Eleitores p\/ Faixa Et\u00e1ria\")\n    )\n)\n\npy.iplot(fig)","879ccc1c":"#Gr\u00e1fico 4 - Agrupando total de eleitores por munic\u00edpio e pegando os top 5 em quantidade de eleitores\na = df[['nome_municipio','total_eleitores']].groupby('nome_municipio',as_index = False).sum().sort_values(by = 'total_eleitores', ascending = False).head(5)\na","6affcdcc":"#Criando distribui\u00e7\u00e3o de eleitores por g\u00eanero para o estado de SP\ndf1 = df[df['nome_municipio']=='S\u00c3O PAULO']\neleitor_tot = df1['total_eleitores']\nmasculinosp = df1['gen_masculino']\nfemininosp = df1['gen_feminino']\nnifsp = df1['gen_nao_informado']","f09c0eae":"#Teste\neleitor_tot","c335c24d":"#Plotando gr\u00e1fico 4\ngeneros =['Masculino', 'Feminino', 'N\u00e3o Informado']\n\nfig = go.Figure(data=[\n    go.Bar(name='Masculino', x=eleitor_tot, y = masculinosp),\n    go.Bar(name='Feminino', x=eleitor_tot, y = femininosp),\n    go.Bar(name='N\u00e3o Informado', x=eleitor_tot, y = nifsp),\n],layout=go.Layout(title=go.layout.Title(text=\"Distribui\u00e7\u00e3o de Quantidade de Eleitores p\/ G\u00eanero no Munic\u00edpio de SP\")))\n# Change the bar mode\nfig.layout.update(barmode='stack')\npy.iplot(fig)","ab2a4f8f":"#Gr\u00e1fico 5 - Agrupando quantidade de munic\u00edpios por estado\nz = df[['uf','nome_municipio']].groupby('uf', as_index = False).count().sort_values(by = 'nome_municipio', ascending = False)\nz","c9a07e94":"#Plotando gr\u00e1fico 5\nfig = go.Figure(\n    data=[go.Bar(x=z['uf'], y=z['nome_municipio'])],\n    layout=go.Layout(\n        title=go.layout.Title(text=\"Quantidade de munic\u00edpio por estado\")\n    )\n)\n\npy.iplot(fig)","8e1ea70e":"#Gr\u00e1fico 6 - Agrupando total de eleitores por estado\neleit_est = df[['uf','total_eleitores']].groupby('uf',as_index = False).sum().sort_values(by = 'total_eleitores', ascending = False)\neleit_est","0fb4bdb2":"#Criando vari\u00e1vel de total de eleitores\ntotal = eleit_est['total_eleitores'].sum()","d6299c45":"#Atribuindo divis\u00e3o de eleitores por estado pelo total para encontrar %\npercentage = eleit_est['total_eleitores'].div(total).mul(100)\npercentage.count()","0aababa7":"#Teste\npercentage","488fa9cd":"#Plotando gr\u00e1fico 6\nlangs1 = ['SP', 'MG', 'RJ', 'BA', 'RS', 'PR', 'PE', 'CE', 'PA', 'SC', 'MA', 'GO', 'PB', 'ES', 'RN', 'PI', 'AM', 'MT', 'AL', 'MS', 'SE', 'RO' , 'TO', 'AC', 'AP', 'RR']\nValores1 = [values for values in percentage]\ntrace1 = go.Pie(labels = langs1, values = Valores1)\ndata1 = [trace1]\nfig1 = go.Figure(data = data1, layout=go.Layout(title=go.layout.Title(text=\"% do total de eleitores por estado\")))\npy.iplot(fig1)","908019f9":"### Quest\u00e3o 1 - Item B - Tabela de frequ\u00eancia\n\nConstrua uma tabela de frequ\u00eancia para cada uma das **vari\u00e1veis qualitativas** que voc\u00ea escolheu (caso n\u00e3o tenha escolhido nenhuma, deixe esta quest\u00e3o em branco). Uma dica: a fun\u00e7\u00e3o *value_counts()* do Pandas pode ser muito \u00fatil. =)\n","7ce3278a":"### Quest\u00e3o 1 - Item C - Representa\u00e7\u00e3o Gr\u00e1fica\nPara cada uma das vari\u00e1veis, produza um ou mais gr\u00e1ficos, usando matplotlib, que descreva seu comportamento \/ caracteristica. Lembre-se que estes gr\u00e1ficos precisam ser compat\u00edveis com a classifica\u00e7\u00e3o da vari\u00e1vel. ","2354ded9":"# Dicas\n\n- Exemplo de acesso aos CSVs dispon\u00edveis no dataset\n> df = pd.read_csv('..\/input\/anv.csv', delimiter=',')","ef4cb80f":"## Quest\u00e3o 1\n**Enunciado:**  Este notebook est\u00e1 associado ao *Kaggle Dataset* chamado \"Exerc\u00edcio 1\". Este *Kaggle Dataset* possui dois arquivos em formato CSV (anv.csv e BR_eleitorado_2016_municipio ). Escolha um dos datasets dispon\u00edveis e j\u00e1 conhecidos, a seu crit\u00e9rio. Uma vez definido o csv, escolha no m\u00ednimo 7 e no m\u00e1ximo 12 vari\u00e1veis (colunas) que voc\u00ea avalia como sendo relevantes. Para cada uma das suas vari\u00e1veis escolhidas, forne\u00e7a:\n\n\n### Quest\u00e3o 1 - Item A - Classifica\u00e7\u00e3o das vari\u00e1veis\n\nClassifique todas as vari\u00e1veis escolhidas, e construa um dataframe com sua resposta.\nExemplo:","15ea956f":"<div align=\"center\">\n <img src=\"https:\/\/raw.githubusercontent.com\/matheusmota\/dataviz2018\/master\/resources\/images\/logo_facens_pos.png\" width=\"150px\">\n <h1> Dataviz - Data Science Specialization Program - FACENS<\/h1>\n<\/div>\n<br><br>\n# Exerc\u00edcio 1 - Primeiro contato com o Kaggle\n(valendo nota)\n\n* **Data de entrega:** at\u00e9 o final da aula \n* **Professor:**  Matheus Mota\n* **Aluno:** Eduardo Cesar Mour\u00e3o\n* **RA:** 203072"}}