{"cell_type":{"856dc067":"code","ace6593d":"code","21990b35":"code","ab1f0c2f":"code","067c2c10":"code","dc4e475f":"code","2ea02fbb":"code","48787859":"code","1f0c5ef3":"code","13ac8d26":"code","eb55ce46":"code","96d5fc93":"code","af3d86f7":"code","2428621b":"code","6f0efdd1":"code","a8e5c229":"code","8c5b989d":"code","1e00577a":"code","b72c4ef2":"code","4f8ffb7c":"code","2f88d2bb":"code","952bdd4d":"code","75e05cfa":"markdown","8ede113a":"markdown","af9e2f11":"markdown","4c8181c7":"markdown","ea4a3ca4":"markdown","195af233":"markdown","85236443":"markdown","e22ee8bc":"markdown","13f83a1d":"markdown","17689594":"markdown","e2159216":"markdown"},"source":{"856dc067":"import pandas as pd \nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","ace6593d":"data = pd.read_csv('..\/input\/kyphosis-dataset\/kyphosis.csv')\ndata.head()","21990b35":"sns.pairplot(data, hue='Kyphosis', palette='Set1')","ab1f0c2f":"sns.heatmap(data.corr(), annot=True)","067c2c10":"from sklearn.model_selection import train_test_split","dc4e475f":"X = data.drop('Kyphosis', axis = 1)\ny = data['Kyphosis']","2ea02fbb":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)","48787859":"from sklearn.tree import DecisionTreeClassifier","1f0c5ef3":"dtree = DecisionTreeClassifier()","13ac8d26":"dtree.fit(X_train, y_train)","eb55ce46":"from sklearn.metrics import confusion_matrix, classification_report","96d5fc93":"dtree_prediction = dtree.predict(X_test)","af3d86f7":"print('Confusion Matrix:\\n')\nprint(confusion_matrix(y_test, dtree_prediction))","2428621b":"print('Classifition Report:\\n')\nprint(classification_report(y_test, dtree_prediction))","6f0efdd1":"from IPython.display import Image\nfrom six import StringIO\nfrom sklearn.tree import export_graphviz\nimport pydot\nfeatures = list(data.columns[1:])\nfeatures","a8e5c229":"dot_data = StringIO()\nexport_graphviz(dtree, out_file=dot_data,feature_names=features,filled=True,rounded=True)\n\ngraph = pydot.graph_from_dot_data(dot_data.getvalue())\nImage(graph[0].create_png()) ","8c5b989d":"from sklearn.ensemble import RandomForestClassifier","1e00577a":"rfc = RandomForestClassifier(n_estimators = 100)","b72c4ef2":"rfc.fit(X_train, y_train)","4f8ffb7c":"rfc_prediction = rfc.predict(X_test)","2f88d2bb":"print('Confusion Matrix:\\n')\nprint(confusion_matrix(y_test, rfc_prediction))","952bdd4d":"print('Classifition Report:\\n')\nprint(classification_report(y_test, rfc_prediction))","75e05cfa":"# Random Forests","8ede113a":"# Decision Trees and Random Forests in Python","af9e2f11":"## Get the Data","4c8181c7":"In this Notebook, we classify Kyphosis Dataset on two Classifier Models\n* Decision Tree Classifier\n* Random Forest Classifier\n\nTo check which have the best ***Accuracy Rate***","ea4a3ca4":"**In this case Random Forest Classifier achieve the best Accuracy with 88%  with respect to Decision Tree Classifier**","195af233":"# Desision Tree","85236443":"## Tree Visualization","e22ee8bc":"## Prediction and Evaluation  ","13f83a1d":"## import Libraries","17689594":"## Train Test Split","e2159216":"## Exploratory Data Analysis"}}