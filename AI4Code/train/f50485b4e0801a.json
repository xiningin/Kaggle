{"cell_type":{"316c07fa":"code","5c3fdb3b":"code","fd8709ce":"code","8bc819da":"code","c2ced76d":"code","5b92bd16":"code","2bc3faf8":"code","49fe32d6":"code","5490d323":"code","307c899b":"code","62dcd086":"code","3686d189":"code","42b6ec78":"code","c8ef5e30":"markdown","eea18306":"markdown","f77ab320":"markdown","646e9257":"markdown","a8062e38":"markdown","8a00762f":"markdown","6b632226":"markdown","6485efcb":"markdown","1cb04adb":"markdown","f765b0ea":"markdown","0b900811":"markdown"},"source":{"316c07fa":"import random\nimport matplotlib\nimport matplotlib.pyplot as plt\n\ndict={}\n\ndef throw():\n    global x    \n    x+=random.randint(1,6)\n\ndef multi_throw(dice_amount):\n    global x\n    x=0\n    for i in range(dice_amount):\n        throw()\n    dict[dice_amount].append(x)\n    \ndef multi_times(time_amount, dice_amount):\n    dict[dice_amount]=[]\n    for i in range(time_amount):\n        multi_throw(dice_amount)","5c3fdb3b":"x=0\nth_amount=100000\n\nfor i in range(20):\n    multi_times(th_amount, i)","fd8709ce":"fig, ax = plt.subplots()\nplt.xlabel('score')\nplt.ylabel('occurences')\nplt.title('Histogram of '+str(th_amount)+' dice throws')\n\nax.hist(dict[1],\n        bins=range(0,8),\n        color=\"green\",\n        alpha=0.8,\n        )\n\nplt.show()","8bc819da":"fig, ax = plt.subplots()\nplt.xlabel('score')\nplt.ylabel('occurences')\nplt.title('Histogram of '+str(th_amount)+' dice throws')\n\nax.hist(dict[2],\n        bins=range(0,20),\n        color=\"red\",\n        alpha=0.8,\n        )\n\nplt.show()","c2ced76d":"fig, ax = plt.subplots()\nplt.xlabel('score')\nplt.ylabel('occurences')\nplt.title('Histogram of '+str(th_amount)+' dice throws')\n\nax.hist(dict[2],\n        bins=range(0,15),\n        color=\"blue\",\n        alpha=0.8,\n        )\n\nplt.show()","5b92bd16":"fig, ax = plt.subplots()\nplt.xlabel('score')\nplt.ylabel('occurences')\nplt.title('Histogram of '+str(th_amount)+' dice throws')\n\n\nax.hist(dict[3],\n        bins=range(0,36),\n        color=\"red\",\n        alpha=0.8,\n        )\n\nplt.show()","2bc3faf8":"fig, ax = plt.subplots()\nplt.xlabel('score')\nplt.ylabel('occurences')\nplt.title('Histogram of '+str(th_amount)+' dice throws')\n\nhisty='step'\n\nax.hist(dict[6],\n        bins=range(0,36),\n        color=\"red\",\n        alpha=0.8,\n        )\n\nplt.show()","49fe32d6":"fig, ax = plt.subplots()\nplt.xlabel('score')\nplt.ylabel('occurences')\nplt.title('Histogram of '+str(th_amount)+' dice throws')\n\nhisty='step'\n\nax.hist(dict[19],\n        color=\"green\",\n        bins=range(40,120),\n        alpha=0.8,\n        )\n\nplt.show()","5490d323":"fig, ax = plt.subplots()\nplt.xlabel('score')\nplt.ylabel('occurences')\nplt.title('Histogram of '+str(th_amount)+' dice throws')\n\nhisty='step'\n\nax.hist(dict[6],\n        bins=range(2,36),\n        color=\"red\",\n        alpha=1.0,\n        )\n\nax.hist(dict[5],\n        bins=range(2,36),\n        color=\"blue\",\n        alpha=0.8,\n        )\n\nax.hist(dict[4], \n        bins=range(2,36),\n        color=\"green\",\n        alpha=0.7,\n        )\n\nax.hist(dict[3], \n        bins=range(2,36),\n        color=\"yellow\",\n        alpha=0.5,\n        )\n\nax.legend([\"6 dices\", \"5 dices\", \"4 dices\", \"3 dices\"])\n\nplt.show()","307c899b":"import seaborn as sns\n\nsns.distplot(dict[3], kde=False)","62dcd086":"sns.distplot(dict[3], kde=False)\nsns.distplot(dict[4], kde=False)","3686d189":"sns.distplot(dict[3], label=\"3 dices\", kde=False)\nsns.distplot(dict[4], label=\"4 dices\", kde=False)\nsns.distplot(dict[5], label=\"5 dices\", kde=False)\nsns.distplot(dict[6], label=\"6 dices\", kde=False)\nplt.legend()","42b6ec78":"for i in range(1,14):\n    sns.distplot(dict[i], kde=False)\n\nplt.show()","c8ef5e30":"Part 1: importing libraries and defining a functions:","eea18306":"Part 2: generating results for different amount of 6d dices and packing those to 4 different lists:","f77ab320":"Distribution of results of one dice throw are an exception: those present the flat distribution. Lets check the distribution of two dices throw:","646e9257":"This Matplotlib histogram looks kinda shoddy, lets draw a Seaborn instead as it looks much clearer:","a8062e38":"In this Kernel I will simulate a outcomes of throwing different amount of 6d dicesvisualized with both Matplotlib and Seaborn libraries.","8a00762f":"We may observe that with every next added dice throw the distribution is more stretched and due to this fact 'flattened'. This is due to fact that there are more possibilities that results may fall into when there are more dices thrown.","6b632226":"Part 3: Having the results in different lists we may visualize all of them on Matplotlib histogram:","6485efcb":"We can observe the Gaussian distribution forming. Lets check the 3 dices throwing results:","1cb04adb":"Okay, Gaussian distribution of results once again. We may realize that distributions of thrown dices are Gaussian distributions no matter the dices amount. I wouldn't be myself if I wouldnt go to an extreme to prove it, lets go into throwing 20 dices for 1 milion times to prove it:","f765b0ea":"Matplotlib has visualised the results of throwing 5 dices. We can clearly see the Gaussian distribution of results. Lets see the 6 dices results:","0b900811":"Lets put distributions of 3, 4, 5 & 6 dice throws on one plot:"}}