{"cell_type":{"5f5fa840":"code","49695cac":"code","c0edeef5":"code","ca88f10e":"code","ce041292":"code","ea525efb":"code","8d5ec3c9":"code","aa302ded":"code","975f5926":"code","b2b6eaf5":"code","2af2a9a7":"code","330fe521":"code","37a403bd":"code","2975d44b":"code","611bedda":"code","a1764d05":"code","48e771d4":"code","5607aefd":"code","a340e7ae":"code","743bae3c":"code","36656f26":"code","243038ba":"code","b72b5db2":"code","61223204":"code","f1042dac":"markdown","8c6dfba6":"markdown","c88edf72":"markdown","09926f0d":"markdown","ddde6ef6":"markdown","5825c98d":"markdown","d387efd9":"markdown","420406b5":"markdown","63307418":"markdown","efe6275b":"markdown","c435f8ff":"markdown","6d2f3a94":"markdown","419267db":"markdown"},"source":{"5f5fa840":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom itertools import cycle\nplt.style.use(\"ggplot\")\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split,GridSearchCV\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score,confusion_matrix\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","49695cac":"data = pd.read_csv(\"..\/input\/pima-indians-diabetes-database\/diabetes.csv\")\n\nprint(\"The rows and columns of data are\", data.shape, \"respectively.\")","c0edeef5":"data.info()","ca88f10e":"data.describe().T","ce041292":"data.head","ea525efb":"# valueable information for data cleaning\n\nfor col in data.columns:\n    print(\"{} minimum value is {}\".format(col, data[col].min()))\n    print(\"{} maximum value is {}\".format(col, data[col].max()))\n    print(\"{} mean value is {}\".format(col, data[col].mean()))\n    print(\" \")","8d5ec3c9":"'''The above code shows that we have some 0 values in our data.\n# Column like Glucose, BloodPressure, Skinthikness and Insulin must not have 0 values in it.\n# Later we will change the values to 0 to mean and medians '''\n\n# First we calculate the percentage of zeros in our data\n\nfor col in data.columns[0:8]:\n    print(\"The missing percentage of {} is {} \".format(col, data[data[col] == 0][col].count() \/data[col].count()* 100))","aa302ded":"# Replace 0 value with null data\n\ndata[[\"Glucose\",\"BloodPressure\", \"SkinThickness\", \"Insulin\", \"BMI\", \"DiabetesPedigreeFunction\"]] = data[[\"Glucose\",\"BloodPressure\", \"SkinThickness\", \"Insulin\", \"BMI\", \"DiabetesPedigreeFunction\"]].replace(0, np.nan)\ndata.head()","975f5926":"# plotting the percentage of missing values on graph\n\nplt.figure(figsize = (15, 5))\npercentage = (data.isnull().mean()) * 100\npercentage.sort_values(ascending = False).plot.bar(color = sns.color_palette(\"Oranges\", 8), edgecolor= \"black\")\nprint(percentage.sort_values(ascending=False))\nplt.xticks(rotation=45, weight = \"bold\")\nplt.title(\"Percentage of Missing Values in each columns\", weight= \"bold\")\nplt.xlabel('Columns', size=15, weight=\"bold\")\nplt.ylabel('Missing values percentage', weight = \"bold\")\nplt.yticks(weight =\"bold\")\nplt.show","b2b6eaf5":"# Distribution Curve\n\n\ncolumns = data.drop('Outcome', axis = 1).columns\ndata[columns].hist(figsize= (20, 20), bins = \"stone\")\n\nplt.show()","2af2a9a7":"# check the skewness of the curve\n\nfrom scipy.stats import skew\ncolumns = data.drop(\"Outcome\", axis = 1).columns\nfor col in columns:\n    print(\" Skewness of the {} column is {}\".format(col, data[col].skew()))","330fe521":"#Replacing nill values of Glucose, BloodPressure, SkinThinkness and BMI columns with mean values\n\ncol=['Glucose' ,'BloodPressure' ,'SkinThickness' ,'BMI']\nfor i in col:\n    data[i].replace(np.nan,data[i].mean(),inplace=True)\n\n# Replacing nill values of Insulin with Median due to its high skewness\n\ndata[\"Insulin\"].replace(np.nan,data[\"Insulin\"].median(),inplace=True)\n\n\nprint(data.isnull().sum())","37a403bd":"# Representation of Diabetic and Non-Diabetic People in our Data\n\noutcome_val = data[\"Outcome\"].value_counts()\ntotal = data[\"Outcome\"].value_counts().sum()\n\nfig, ax = plt.subplots(figsize=(12,8))\nlabel = ['Diabetic',\n        'Non-Diabetic']\npercentages = [outcome_val[0]\/total, outcome_val[1]\/total]\nexplode = (0.1, 0)\nax.pie(outcome_val, autopct=\"%.1f%%\", labels = label, explode = explode, startangle=110)\nax.legend(frameon=False, bbox_to_anchor=(1,0.9))\nplt.show()","2975d44b":"# mean values of every column based on Diabetes and NonDiabetes\n# blue line represent the mean values of all features of Diabetic People\n# Red line represent the mean values of all features of Non-Diabetic People\n\navg_data_according_to_disease = data.groupby('Outcome').mean().T.sort_values(by = 1)\nprint(avg_data_according_to_disease)\n\nlabel = ['Non-Diabetic',\n        'Diabetic']\n\nplt.figure(figsize = (15,7))\nsns.lineplot(x = avg_data_according_to_disease[1].index, y = avg_data_according_to_disease[1].values, label = label[1])\nsns.lineplot(x = avg_data_according_to_disease[0].index, y = avg_data_according_to_disease[0].values, label = label[0])\n","611bedda":"avg_data_according_to_disease = data.groupby('Outcome').mean().T.sort_values(by = 1)\n\nnon_diab = avg_data_according_to_disease[0]\ndiab =  avg_data_according_to_disease[1]\nperc = []\n\nfor item in range(0,8):\n    percentage_change = ((diab[item] - non_diab[item])\/non_diab[item] * 100)\n    perc.append(percentage_change)\n\nd = {'col1': [\"DiabetesPedigreeFunction\", \"Pregnancies\", \"SkinThickness\", \"BMI\", \"Age\", \"BloodPressure\", \"Glucose\", \"Insulin\"], \n     'col2': [perc[0], perc[1],perc[2],perc[3],perc[4],perc[5],perc[6],perc[7]]}\ndf = pd.DataFrame(data=d)\ndf.sort_values(by = \"col2\", inplace = True)\nprint(df)\n\nplt.figure(figsize = (15,5))\ndf.col2.plot.bar(color = sns.color_palette(\"Purples\", 8), edgecolor= \"black\")\nplt.xticks([0,1,2,3,4,5,6,7], df.col1, rotation=\"vertical\") \nplt.title(\"Percentage change of each feature depend as per Outcome\")\nplt.show()\n","a1764d05":"#Heatmap correlation of Data\n\nplt.figure(figsize = (12,8))\nsns.heatmap(data.corr(), annot=True, cmap='YlGnBu', robust=True)\n","48e771d4":"plt.figure(figsize= (12,8))\nsns.kdeplot(x='Outcome', y= 'Glucose', data=data, color=\"blue\")\nplt.show()\n","5607aefd":"plt.figure(figsize= (12,8))\nsns.boxplot(x=\"Outcome\", y= \"Age\", data=data)\nplt.show()","a340e7ae":"\nsns.lmplot(x='SkinThickness', y= 'BMI', hue='Outcome', data=data, size = 10)\nplt.show()","743bae3c":"data.var()\n","36656f26":"sc_X = StandardScaler()\nX =  pd.DataFrame(sc_X.fit_transform(data.drop([\"Outcome\"],axis = 1),),\n        columns=['Pregnancies', 'Glucose', 'BloodPressure', 'SkinThickness', 'Insulin',\n       'BMI', 'DiabetesPedigreeFunction', 'Age'])","243038ba":"Y = data.Outcome","b72b5db2":"# Splitting the dataset\n\nX_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size=.30,random_state=3)","61223204":"logistic_reg = LogisticRegression(C=1,penalty='l2')\nlogistic_reg.fit(X_train, Y_train)\n\nlog_acc=accuracy_score(Y_test,logistic_reg.predict(X_test))\n\nprint(log_acc)\n\nprint(\"Train Set Accuracy:\"+str(accuracy_score(Y_train,logistic_reg.predict(X_train))*100))\nprint(\"Test Set Accuracy:\"+str(accuracy_score(Y_test,logistic_reg.predict(X_test))*100))","f1042dac":"# **Exploring Missing Values & Cleaning The Data**","8c6dfba6":"## 1.Logistic Regression","c88edf72":"# **What is Diabetes**\n\nDiabetes is a disease that occurs when your blood glucose, also called blood sugar, is too high. Blood glucose is your main source of energy and comes from the food you eat. Insulin, a hormone made by the pancreas, helps glucose from food get into your cells to be used for energy. Sometimes your body doesn\u2019t make enough or any insulin or doesn\u2019t use insulin well. Glucose then stays in your blood and doesn\u2019t reach your cells.\n\n# **DataSet Description:**\n\n* Pregnancies: Number of times pregnant\n* Glucose: Plasma glucose concentration over 2 hours in an oral glucose tolerance test\n* BloodPressure: Diastolic blood pressure (mm Hg)\n* SkinThickness: Triceps skinfold thickness (mm)\n* Insulin: 2-Hour serum insulin (mu U\/ml)\n* BMI: Body mass index (weight in kg\/(height in m)^2)\n* Pedigree: Diabetes pedigree function - A function that scores likelihood of diabetes based on family history.\n* Age: Age in years\n* Class: Class variable (0: the person is not diabetic or 1: the person is diabetic)","09926f0d":"# Observations\n\n* There is a hgher chances of Diabetes in women with high number of pregnancies.\n* Higher levels of insulin is found in women having diabetes.\n* Higher plasma glucose concentration is seen in Women with diabetes.\n* Women with diabetes have higher BMI.\n* Diabetic women have higher diabetes pedigree function value suggesting family history matters.\n* Age does play an important role,Diabetes is more prominent in middle age to older aged women.\n\n","ddde6ef6":"**Observations:**\n* The average number of Pregnancies are 4.\n* Glucose, BloodPressure, SkinThickness, and Insulin have minimum values as 0 which seems like an error and should be explore later. \n* Pregnancies, SkinThickness, Insulin and Age have major difference between 3rd quartile and maximum value. This represent the chances of outliers in the data. \n","5825c98d":"# Observations :\n\n* In the above graph, it is clear that the Diabetic patients have elevated values of almost all the features. However, the above graph is not on the same scale so we cant conclude the result. \n\n* Next section will conclude the result according to percentage.\n","d387efd9":"\n**Observation**\n* All variable are either float or integer","420406b5":"## Models\n","63307418":"# **Reading and Understanding Data**","efe6275b":"**Observations:**\n\n* Here we can note that 48% of insulin data has null values followed by 29% null values of Skin Thinkness. \n* We will fix this later according to skewness of data.","c435f8ff":"![causes-of-diabetes.jfif](attachment:ae11f9f7-88d1-455e-a0bd-9dc994aad9d3.jfif)","6d2f3a94":"# **Exploratory Data Analysis**","419267db":"**Observations:**\n\n* Heatmap shows a moderate correlation between 'Diabetes\" and \"Glucose\" \n* There is a positive correlation between age and number of pregnancies which makes sense.\n* BMI and skin thickness also shows a moderate positive correlation."}}