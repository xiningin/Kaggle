{"cell_type":{"8399c6d2":"code","d1666f66":"code","876cf88b":"code","4faf3716":"code","34f6b867":"code","0815b182":"code","6a37506c":"markdown","84a5fbec":"markdown","020259e5":"markdown"},"source":{"8399c6d2":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style(\"darkgrid\")","d1666f66":"df = pd.read_csv(\"..\/input\/gold-historical-datasets\/Gold_Daily .csv\", index_col=\"Date\", parse_dates=True)\ndf = df.asfreq(\"d\")\ndf = df.fillna(method=\"ffill\")","876cf88b":"plt.figure(figsize=(16, 6), dpi=100)\ndf.Price.plot()\nplt.title(\"Daily Gold Price (USD)\", fontdict={\"fontsize\": 16, \"fontweight\":\"bold\"})\nplt.show()","4faf3716":"from statsmodels.tsa.ar_model import AutoReg\n\nmodel = AutoReg(df[\"Price\"], 30)\nmodel_fit = model.fit()\n\ntrain_df = df.iloc[:9813]\ntest_df = df.iloc[9813:]\n\ntrain_model = AutoReg(train_df[\"Price\"], 100).fit(cov_type=\"HC0\")\ntest_model = AutoReg(test_df[\"Price\"], 20).fit(cov_type=\"HC0\")\n\nstart = len(train_df)\nend = len(train_df) + len(test_df) - 1\n\nprediction = train_model.predict(start=start, end=end, dynamic=True)","34f6b867":"sns.set_style(\"darkgrid\")\npd.plotting.register_matplotlib_converters()\nsns.mpl.rc(\"figure\", figsize=(20, 8), dpi=100)\nfig, ax = plt.subplots()\n\nax = df[\"Price\"][9713:].plot(ax=ax) # Training Data\nax = test_df[\"Price\"].plot(ax=ax) # Testing Data\nax = prediction.plot(ax=ax) # Predictions\nplt.legend([\"Training Data\", \"Testing Data\", \"Prediction\"])\nplt.ylabel(\"Gold Price (USD)\")\nplt.show()","0815b182":"forecast = test_model.predict(start=len(test_df)-1, end=len(test_df)+60, dynamic=True)\n\ndf[\"Price\"][9713:].plot() # Training Data\ntest_df[\"Price\"].plot() # Testing Data\nprediction.plot() # Predictions\nforecast.plot()\nplt.legend([\"Training Data\", \"Testing Data\", \"Prediction\", \"Future Forecasting\"])\nplt.ylabel(\"Gold Price (USD)\")","6a37506c":"# Preprocessing and EDA","84a5fbec":"# TimeSeries Analysis and Prediction","020259e5":"# Imports"}}