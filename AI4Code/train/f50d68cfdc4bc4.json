{"cell_type":{"2e155479":"code","46ec933d":"code","7601046a":"code","3f94c691":"code","3db7c251":"code","fb5f6ba8":"code","7a95b305":"code","17c5b4f2":"code","fb20ce8e":"code","f86dca68":"code","ddb0a3e8":"code","bd218db2":"code","40ee7a8f":"code","11d11545":"code","eec3b62e":"code","9409cb19":"code","de86852f":"code","5e63186f":"code","f973919f":"code","3d4a42e8":"code","4546246b":"code","96d61839":"code","901f78da":"code","c457501f":"code","978a2732":"code","f0f5ce5f":"code","24975ab2":"code","91a9bc57":"code","d756a54e":"code","5d624cef":"code","d9410558":"code","fa9a663b":"code","b0b3d133":"code","0052c10d":"code","25ccffaf":"markdown"},"source":{"2e155479":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","46ec933d":"import matplotlib.pyplot as plt\nimport seaborn as sns","7601046a":"df = pd.read_csv('\/kaggle\/input\/gas-prices-in-brazil\/2004-2019.tsv',sep='\\t')\ndf.head()","3f94c691":"df.describe()","3db7c251":"df.info()","fb5f6ba8":"df.drop(['Unnamed: 0','UNIDADE DE MEDIDA'],axis=1,inplace=True)","7a95b305":"import matplotlib.pyplot as plt\nimport seaborn as sns","17c5b4f2":"df.PRODUTO.unique().tolist()","fb20ce8e":"df.groupby('PRODUTO')\ndf_etanol = df.loc[df.PRODUTO =='ETANOL HIDRATADO']\ndf_gasol = df.loc[df.PRODUTO =='GASOLINA COMUM']\ndf_glp = df.loc[df.PRODUTO =='GLP']\ndf_gnv = df.loc[df.PRODUTO == 'GNV']\ndf_diesel = df.loc[df.PRODUTO == '\u00d3LEO DIESEL']\ndf_diesel_s10 = df.loc[df.PRODUTO == '\u00d3LEO DIESEL S10']","f86dca68":"numerics = ['MARGEM M\u00c9DIA REVENDA','DESVIO PADR\u00c3O DISTRIBUI\u00c7\u00c3O','PRE\u00c7O M\u00cdNIMO DISTRIBUI\u00c7\u00c3O','PRE\u00c7O M\u00c1XIMO DISTRIBUI\u00c7\u00c3O','COEF DE VARIA\u00c7\u00c3O DISTRIBUI\u00c7\u00c3O']","ddb0a3e8":"for i in numerics:\n    df_gasol[i] = pd.to_numeric(df_gasol[i].str.replace('-',''))","bd218db2":"df_gasol['PRE\u00c7O M\u00c9DIO DISTRIBUI\u00c7\u00c3O'] = pd.to_numeric(df_gasol['PRE\u00c7O M\u00c9DIO DISTRIBUI\u00c7\u00c3O'].str.replace('-',''))","40ee7a8f":"sns.boxplot(data=df_gasol[['PRE\u00c7O M\u00c9DIO REVENDA','PRE\u00c7O M\u00c9DIO DISTRIBUI\u00c7\u00c3O']])\n","11d11545":"(df_gasol['PRE\u00c7O M\u00c9DIO REVENDA']\/ df_gasol['PRE\u00c7O M\u00c9DIO DISTRIBUI\u00c7\u00c3O']).mean() -1\n# O pre\u00e7o de revenda \u00e9 15,75% maior que o de distribui\u00e7\u00e3o em m\u00e9dia","eec3b62e":"plt.figure(figsize=(10,8))\nsns.lineplot(data=df_gasol,y='PRE\u00c7O M\u00c9DIO REVENDA',x='M\u00caS',hue='REGI\u00c3O')\n#REGI\u00c3O NORTE E CENTRO-OESTE POSSUEM GASOLINA MAIS CARA DEVIDO A DIFICULDADE DE DISTRIBUI\u00c7\u00c3O\n#A GASOLINA CAI ENTRE ABRIL E AGOSTO (PERIODO DE BAIXA), ENTRETANTO ESSA TEND\u00caNCIA N\u00c3O TEM ACONTECIDO NOS ULTIMOS ANOS","9409cb19":"plt.figure(figsize=(10,8))\nsns.lineplot(data=df_gasol,y='PRE\u00c7O M\u00c9DIO REVENDA',x='ANO',hue='REGI\u00c3O')\n#CRESCIMENTO DE 2004 AT\u00c9 O PRIMEIRO SEMESTRE DE 2019","de86852f":"plt.figure(figsize=(20,8))\nsns.barplot(data=df_gasol,y='PRE\u00c7O M\u00c9DIO REVENDA',x='ESTADO')\nplt.xticks(fontsize=8,rotation=35)\n#ANALISANDO COMO APESAR DO PRE\u00c7O M\u00c9DIO DE REVENDA SER MENOR DURANTE MAIOR PARTE DO TEMPO ANALISADO\n#O RIO SEMPRE TEVE UMA DAS GASOLINAS MAIS CARAS DO PA\u00cdS","5e63186f":"df_gasol.drop(['DATA INICIAL','DATA FINAL'],axis=1,inplace=True)\n#REDUNDANTE COM 'ANO' E 'M\u00caS'","f973919f":"df_gasol.head(8)","3d4a42e8":"df_gasol.info()","4546246b":"fig= plt.figure(figsize=(13,10))\nsns.heatmap(df_gasol.corr(),annot=True,cmap='PuBuGn')","96d61839":"df_gasol1= df_gasol[['ANO','M\u00caS']]\n#\u00daNICAS FEATURES POSSIVEIS DE PREDIZER VALORES REAIS","901f78da":"from sklearn.model_selection import train_test_split, GridSearchCV\nfrom xgboost import XGBRegressor\nfrom sklearn.metrics import mean_squared_error,mean_squared_log_error,r2_score,explained_variance_score","c457501f":"y = df_gasol['PRE\u00c7O M\u00c9DIO REVENDA']","978a2732":"x_treino,x_teste,y_treino,y_teste = train_test_split(df_gasol1,y,test_size=0.15,random_state=23)","f0f5ce5f":"xgbr= XGBRegressor()\nxgbr.fit(x_treino,y_treino)","24975ab2":"xgbr.score(x_teste,y_teste)","91a9bc57":"xgbr1= XGBRegressor()\nparameters = {'objective':['reg:linear'],\n              'learning_rate': [.1, 0.2, .5,0.01],\n              'max_depth': [2,3],\n              'min_child_weight': [0.5,1],\n              'subsample': [0.5,1],\n              'colsample_bytree': [0.5,1],\n              'n_estimators': [100,200,300]}\nxgb_grid = GridSearchCV(xgbr1,\n                        parameters,\n                        cv = 2,\n                        n_jobs = 5,\n                        verbose=True)\nxgb_grid.fit(x_treino,y_treino)","d756a54e":"xgb_grid.best_params_","5d624cef":"improved_xgbr =XGBRegressor(colsample_bytree= 1, learning_rate= 0.41, max_depth= 3,\n                          min_child_weight = 0.5, n_estimators = 333, objective = 'reg:linear', subsample=1)\nimproved_xgbr.fit(x_treino,y_treino)","d9410558":"improved_pred = improved_xgbr.predict(x_teste)\nimproved_xgbr.score(x_teste,y_teste)\n","fa9a663b":"print(mean_squared_error(y_teste,improved_pred))\nprint(mean_squared_log_error(y_teste,improved_pred))\nprint(r2_score(y_teste,improved_pred))\nprint(explained_variance_score(y_teste,improved_pred))","b0b3d133":"teste= [(2019,6),(2019,7),(2019,8),(2019,9),(2019,10),(2019,11),(2019,12)]\ndft = pd.DataFrame(teste,columns=['ANO','M\u00caS'])\nimproved_xgbr.predict(dft)","0052c10d":"df_gasol.loc[df_gasol.ANO == 2019].loc[df_gasol.M\u00caS == 6]['PRE\u00c7O M\u00c9DIO REVENDA'].mean()\n#Para Junho, o algoritmo previu 95,56% do valor","25ccffaf":"**Minha previs\u00e3o para os pr\u00f3ximos 6 meses:**\n* 07\/2019 - 4.508638\n* 08\/2019 - 4.453561\n* 09\/2019 - 4.629604\n* 10\/2019 - 4.694633\n* 11\/2019 - 4.575114\n* 12\/2019 - 4.3337326\n\n"}}