{"cell_type":{"b9b68b28":"code","87bed25f":"code","411eb067":"code","ae443829":"code","5254a8ef":"code","83a920a6":"code","a36cb981":"code","3c87538e":"code","ec045410":"code","06cac0d9":"code","e4182df4":"code","296c8771":"code","06949a3c":"code","23e6dfda":"code","cc82ff75":"code","a1ff6ac2":"code","6f1fd487":"code","878df0d2":"code","e78f6760":"code","86ba1158":"code","e6bebb2a":"code","65d2b6cf":"code","d454ff0a":"markdown","aada754b":"markdown","d6be3b4d":"markdown","4d6c9eea":"markdown","0501a548":"markdown","66e5a4c5":"markdown","a3c98b47":"markdown","181a0e61":"markdown","091ec94d":"markdown","6a6b820d":"markdown","3c0efd20":"markdown","32fdc70a":"markdown","ec6f38f2":"markdown","e6269a8b":"markdown","d69983d4":"markdown","cbe38654":"markdown","bf4d425d":"markdown"},"source":{"b9b68b28":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport plotly\nimport plotly.plotly as py\nimport cufflinks as cf\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.offline as offline\noffline.init_notebook_mode()\nfrom plotly import tools\nimport plotly.tools as tls\n\nimport folium\nfrom folium import plugins\nfrom folium.plugins import HeatMap\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nimport os\nprint(os.listdir(\"..\/input\"))","87bed25f":"population_df = pd.read_csv(\"..\/input\/population.csv\")\npopulation_df.head()","411eb067":"population_df.info()","ae443829":"total_pop = population_df.loc[population_df['Year'] == 2017]['Number'].sum()\nprint(\"Total Population of Barcelona =\",total_pop)","5254a8ef":"temp_df = population_df.loc[population_df['Year'] == 2017].groupby(['Gender'])['Number'].sum()\n\ntrace = go.Pie(labels = temp_df.index,\n               values = temp_df.values,\n               marker = dict(colors=['#E53916','#2067AD'], line = dict(color='#FFFFFF', width=2.5))\n              )\n\ndata = [trace]\nlayout = go.Layout(title=\"Gender-Wise Distribution for Year-2017\")\nfig = go.Figure(data=data, layout=layout)\n\nplotly.offline.iplot(fig)","83a920a6":"male = population_df.loc[population_df['Gender'] == 'Male'].groupby(['Year'])['Number'].sum()\nfemale = population_df.loc[population_df['Gender'] == 'Female'].groupby(['Year'])['Number'].sum()\n\ntrace0 = go.Bar(x = male.index,\n                y= male.values,\n                name = \"Male\",\n                marker = dict(color='rgb(236,154,41)'),\n                opacity = 0.8\n               )\n\ntrace1 = go.Bar(x = female.index,\n                y = female.values,\n                name = \"Female\",\n                marker = dict(color='rgb(168,32,26)'),\n                opacity = 0.8\n               )\n\ndata = [trace0,trace1]\nlayout = go.Layout(barmode = 'group',\n                   xaxis = dict(tickangle=-30),\n                   title=\"Gender-Wise Distribution Across the Years\",\n                      )\nfig = go.Figure(data=data,layout=layout)\n\nplotly.offline.iplot(fig)","a36cb981":"dist_df = population_df.loc[population_df['Year'] == 2017].groupby(['District.Name'])['Number'].sum()\n\ntrace0 = go.Bar(x = dist_df.index,\n                y = dist_df.values,\n                marker = dict(color=list(dist_df.values),\n                                  colorscale='Reds'),\n                )\n\ndata = [trace0]\nlayout = go.Layout(xaxis = dict(tickangle=-30),\n                   title=\"District-Wise Distribution of population (Year 2017)\",\n                      )\nfig = go.Figure(data=data,layout=layout)\n\nplotly.offline.iplot(fig)","3c87538e":"immig_df = pd.read_csv(\"..\/input\/immigrants_by_nationality.csv\")\nimmig_df.head()","ec045410":"im_df = immig_df.loc[immig_df['Year'] == 2017].groupby(['Nationality'])['Number'].sum().sort_values(axis=0, ascending=False)[:25]\n\ntrace0 = go.Bar(x = im_df.index,\n                y = im_df.values,\n                marker = dict(color=list(dist_df.values),\n                                  colorscale='Portland'),\n                )\n\ndata = [trace0]\nlayout = go.Layout(xaxis = dict(tickangle=-30),\n                   title=\"Immigration By Nationality (Year 2017)\",\n                      )\nfig = go.Figure(data=data,layout=layout)\n\nplotly.offline.iplot(fig)","06cac0d9":"transport_df =pd.read_csv(\"..\/input\/transports.csv\")\ntransport_df.head()","e4182df4":"underground = transport_df.loc[transport_df['Transport'] == 'Underground']\nunderground = underground[['Latitude','Longitude','Station']]\n\nbarcelona_coordinates = [41.3851, 2.1734]\n\nmap_undergound = folium.Map(location=barcelona_coordinates, tiles='OpenStreetMap', zoom_start=12)\n\nfor each in underground.iterrows():\n    folium.CircleMarker([each[1]['Latitude'],each[1]['Longitude']],\n                        radius=5,\n                        color='blue',\n                        popup=each[1]['Station'],\n                        fill=True).add_to(map_undergound)\nmap_undergound","296c8771":"busstop_df =pd.read_csv(\"..\/input\/bus_stops.csv\")\nbusstop_df.head()","06949a3c":"daybus = busstop_df.loc[busstop_df['Transport'] == 'Day bus stop']\n\nmap_busstop = folium.Map(location=barcelona_coordinates, tiles='OpenStreetMap', zoom_start=12)\n\nfor each in daybus[:100].iterrows():\n    folium.Marker([each[1]['Latitude'],each[1]['Longitude']],\n                  popup=str(each[1]['Bus.Stop']),\n                  icon=folium.Icon(color='blue', icon='stop')).add_to(map_busstop)\n    \nmap_busstop","23e6dfda":"accidents_df = pd.read_csv(\"..\/input\/accidents_2017.csv\")\naccidents_df.head()","cc82ff75":"accidents_df['killed+injured'] = accidents_df['Mild injuries'] + accidents_df['Serious injuries'] + accidents_df['Victims']\ntemp_df = accidents_df.groupby(['District Name'])['killed+injured'].sum().sort_values(axis=0, ascending=False)\n\ntrace0 = go.Bar(x = temp_df.index,\n                y = temp_df.values,\n                marker = dict(color=list(temp_df.values))\n                )\n\ndata = [trace0]\nlayout = go.Layout(xaxis = dict(tickangle=-30),\n                   title=\"Top Districts Where People Killed and Injured in Accidents\",\n                      )\nfig = go.Figure(data=data,layout=layout)\n\nplotly.offline.iplot(fig)","a1ff6ac2":"wkday = accidents_df.groupby(['Weekday']).\\\n        agg({'Mild injuries':'sum', 'Serious injuries':'sum','Victims':'sum'}).reset_index()\nwkday\n\ntrace0 = go.Bar(x = wkday['Weekday'],\n                y= wkday['Mild injuries'],\n                name = \"Mild injuries\",\n                marker = dict(color='rgb(108, 52, 131)')\n               )\n\ntrace1 = go.Bar(x = wkday['Weekday'],\n                y = wkday['Serious injuries'],\n                name = \"Serious injuries\",\n                marker = dict(color='rgb(241, 196, 15)')\n               )\n\ntrace2 = go.Bar(x = wkday['Weekday'],\n                y = wkday['Victims'],\n                name = \"Victims\",\n                marker = dict(color='rgb(211, 84, 0)')\n               )\n\ndata = [trace0,trace1,trace2]\nlayout = go.Layout(barmode = 'group',\n                   xaxis = dict(tickangle=-30),\n                   title=\"Weekday-Wise Accidents in Barcelona\",\n                       \n                      )\nfig = go.Figure(data=data,layout=layout)\n\nplotly.offline.iplot(fig)","6f1fd487":"month = accidents_df.groupby(['Month']).\\\n        agg({'Mild injuries':'sum', 'Serious injuries':'sum','Victims':'sum'}).reset_index()\nmonth\n\ntrace0 = go.Bar(x = month['Month'],\n                y= month['Mild injuries'],\n                name = \"Mild injuries\",\n                marker = dict(color='rgb(205, 92, 92)')\n               )\n\ntrace1 = go.Bar(x = month['Month'],\n                y = month['Serious injuries'],\n                name = \"Serious injuries\",\n                marker = dict(color='rgb(75, 0, 130)')\n               )\n\ntrace2 = go.Bar(x = month['Month'],\n                y = month['Victims'],\n                name = \"Victims\",\n                marker = dict(color='rgb(34, 139, 34)')\n               )\n\ndata = [trace0,trace1,trace2]\nlayout = go.Layout(barmode = 'group',\n                   xaxis = dict(tickangle=-30),\n                   title=\"Month-Wise Accidents in Barcelona\")\nfig = go.Figure(data=data,layout=layout)\n\nplotly.offline.iplot(fig)","878df0d2":"barcelona_coordinates = [41.406141, 2.168594]\n\nfrom folium.plugins import HeatMap\n\nmap_accidents = folium.Map(location=barcelona_coordinates, tiles='CartoDB Dark_Matter', zoom_start=13)\n\nlat_long_df = accidents_df[['Latitude','Longitude']]\n\nlat_long = [[row['Latitude'],row['Longitude']] for index,row in lat_long_df.iterrows()]\n\n#map_accidents.add_children(plugins.HeatMap(lat_long))\n\nHeatMap(lat_long, min_opacity=0.5, radius=15).add_to(map_accidents)\nmap_accidents","e78f6760":"airquality_df = pd.read_csv(\"..\/input\/air_quality_Nov2017.csv\")\nairquality_df.dropna(how='any', inplace=True)\nairquality_df.head()","86ba1158":"df = airquality_df.loc[:,['O3 Value','NO2 Value','PM10 Value']]\nplt.style.use('fivethirtyeight')\ng = sns.pairplot(df)","e6bebb2a":"data = [\n    {\n        'x': airquality_df[\"Longitude\"],\n        'y': airquality_df[\"Latitude\"],\n        'text': airquality_df[\"Station\"],\n        'mode': 'markers',\n        'marker': {\n            'color': airquality_df[\"PM10 Value\"],\n            'size': airquality_df[\"PM10 Value\"],\n            'showscale': True,\n            'colorscale':'Viridis'\n        }\n    }\n]\n\nlayout= go.Layout(title= 'Air Quality',\n                  xaxis= dict(title= 'Longitude'),\n                  yaxis=dict(title='Latitude'))\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","65d2b6cf":"trace1 = go.Box(y = airquality_df.loc[airquality_df['Air Quality'] == \"Good\"]['PM10 Value'],\n                name = \"Good\",\n                marker = dict(color='#AF4040')\n                )\n\ntrace2 = go.Box(y = airquality_df.loc[airquality_df['Air Quality'] == \"Moderate\"]['PM10 Value'],\n                name = \"Moderate\",\n                marker = dict(color='#4986B6'))\n\ndata = [trace1,trace2]\n\nlayout = go.Layout(xaxis = dict(title='Air Quality'), \n                   yaxis=dict(title='PM10 Values'),\n                   title=\"Air Quality in Barcelona (PM10 Values)\")\n\nfig = go.Figure(data=data, layout=layout)\nplotly.offline.iplot(fig)","d454ff0a":"># <font color=\"#116191\"><b>Immigrants by Nationality<\/b><\/font>","aada754b":"># <font color=\"#116191\"><b>Barcelona Population<\/b><\/font>","d6be3b4d":"# <font color=\"#116191\"><b>Bus Stops<\/b><\/font>","4d6c9eea":"# <font color=\"#116191\">Insights<\/font>\n1. In Barcelona, women outnumber men.\n2. Over the five years, there has not been significant change in the population of the city.","0501a548":"># <font color=\"#116191\"><b>Transport<\/b><\/font>","66e5a4c5":"# <font color=\"#116191\">Insights<\/font>\n 'Eixample' is the most populated district in the city.","a3c98b47":"# <font color=\"#116191\">Which district holds the highest number of population?<\/font>","181a0e61":"># <font color=\"#116191\"><b>Air Quality (Year 2017)<\/b><\/font>","091ec94d":"# <font color=\"#116191\"><b>Underground Metro<\/b><\/font>","6a6b820d":"# <font color=\"#116191\">Insights<\/font>\n1. In 2017, majority of accidents occured in the month of November.\n2. The least number of accidents occured in the month of August","3c0efd20":"![](https:\/\/www.airpano.com\/files\/barcelona_02_big.jpg)","32fdc70a":"# <font color=\"#116191\">Insights<\/font>\n1. In 2017, most of the accidents occured on Friday.\n2. The least number of accidents occured on Sunday.","ec6f38f2":"# <font color=\"#116191\"><b>Accidents (Year 2017)<\/b><\/font>","e6269a8b":"># <font color=\"#116191\"><b>Loading required libraries and datasets<\/b><\/font>","d69983d4":"# <font color=\"#116191\">Heatmap of Accidents' Locations<\/font>","cbe38654":"# <font color=\"#116191\">**To Be Continued**<\/font>","bf4d425d":"># <font color=\"#116191\"><b>Introduction<\/b><\/font>\n**Barcelona**  is a city in Spain. It is the capital and largest city of Catalonia. \nIn this kernel, I will be studying the city in a detailed manner. We will take a look at Barcelona's population, immigration, transaport system, air quality etc."}}