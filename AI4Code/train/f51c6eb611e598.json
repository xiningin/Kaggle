{"cell_type":{"230f07f4":"code","e8dd165b":"code","0b8250c7":"code","0c740d8f":"code","5087e09b":"markdown","341b4eef":"markdown","7dc7e3bf":"markdown"},"source":{"230f07f4":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nprint(os.listdir(\"..\/input\"))","e8dd165b":"train=pd.read_csv('..\/input\/train.csv')\ntest=pd.read_csv('..\/input\/test.csv')\ntrain.head()","0b8250c7":"import re\nimport string\nimport numpy as np\nfrom nltk.tokenize import sent_tokenize, word_tokenize\nfrom nltk.corpus import stopwords\nfrom sklearn.feature_extraction.text import TfidfVectorizer\n\n# \u52a0\u8f7d\u6570\u636e\nstop_words = set(stopwords.words('english'))\n# words=[word for word in word_tokenize(data) if word not in stop_words]\n\n# \u6570\u636e\u6e05\u6d17\ntext_pattern = re.compile(f'([{string.punctuation}\u201c\u201d\u00a8\u00ab\u00bb\u00ae\u00b4\u00b7\u00ba\u00bd\u00be\u00bf\u00a1\u00a7\u00a3\u20a4\u2018\u2019])')\n\ndef tokenize(s):\n    return word_tokenize(text_pattern.sub(' \\1', s))\n\n\nvec = TfidfVectorizer(ngram_range=(1, 2), tokenizer=tokenize, min_df=3,\n                      max_df=0.9, stop_words=stop_words,\n                      strip_accents='unicode', use_idf=1,\n                      smooth_idf=1, sublinear_tf=1)\nprint(\"getting tfidf vec....\")\nx_train = vec.fit_transform(train[\"comment_text\"])\nx_test = vec.transform(test[\"comment_text\"])\ny = np.where(train['target'] >= 0.5, 1, 0)\nprint(\"done getting tfidf vec....\")","0c740d8f":"# #!\/usr\/bin\/env python  \n# # -*- coding:utf-8 _*-  \n\"\"\" \n@author:quincyqiang \n@license: Apache Licence \n@file: 01_lr.py \n@time: 2019-04-21 14:37\n@description:\n\"\"\"\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\n\nprint(\"traing lr...\")\nclf=LogisticRegression(C=4,dual=True)\nclf.fit(x_train,y)\nprediction=clf.predict_proba(x_test)[:,1]\nprint(prediction)\nsubmission = pd.read_csv(\"..\/input\/sample_submission.csv\")\nsubmission['prediction'] = prediction\nsubmission.to_csv('submission.csv', index=False)\n","5087e09b":"## 3 LogisticRegression","341b4eef":"## 2 \u6570\u636e\u5904\u7406","7dc7e3bf":"## 1 \u5bfc\u5165\u5e93"}}