{"cell_type":{"eac3a5cf":"code","c2f86b33":"code","0cceb089":"code","7c7b99de":"code","dcf85c17":"code","1bf43e87":"code","80a030d3":"code","fcdda2c0":"code","fae4cf0b":"code","26c91f6f":"code","4fed1344":"code","3a9343e7":"code","d6e5ec67":"code","0456a1d7":"code","867afaf4":"code","e206d03a":"code","b7b05973":"code","a02953e6":"code","d2aafdcf":"code","acfb1f8a":"code","7b66bd73":"code","89b4c55d":"code","28fedc72":"code","88161639":"code","41cfefde":"code","ea4fc881":"code","2555aa79":"code","44aee860":"code","2c49e9fc":"code","c41b48df":"code","d39fe949":"code","d7375fa2":"code","557b45fc":"code","db437fc4":"code","8a2b92d1":"code","a3afee35":"code","227cbe41":"code","cce18024":"code","c7d09234":"code","3d3ad14e":"code","906d4718":"code","8ded290d":"code","f2920b3a":"code","8e55531b":"code","53afe375":"code","66f04571":"code","6c2a4732":"code","c3a09de7":"code","40698647":"code","c239e714":"code","419bd610":"code","1866f6a7":"code","a9fd70b4":"code","4a6f5730":"code","2cd24359":"code","f9f40db2":"code","815faef4":"code","fea72671":"code","69955508":"code","74237fff":"markdown","6737df01":"markdown","d01ac787":"markdown","3edd1ad4":"markdown","5e926c0a":"markdown","3e524c84":"markdown","e6bbe392":"markdown","479e3b6b":"markdown"},"source":{"eac3a5cf":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nfrom sklearn.cluster import KMeans\nfrom sklearn import datasets\nfrom matplotlib import pyplot\nfrom pandas.plotting import scatter_matrix\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nimport seaborn as sns\nimport os \nimport mpl_toolkits\nimport json","c2f86b33":"# Storing Data in DataFrame\ndf_terrorism= pd.read_csv(r\"..\/input\/tsf-datasets\/globalterrorismdb_0718dist.csv\",encoding='ISO-8859-1')","0cceb089":"df_terrorism.head()","7c7b99de":"# Dimensions of the DataFrame\ndf_terrorism.shape","dcf85c17":"# Selecting Wanted columns\nusecols = [1, 5, 8, 10, 11, 12, 13, 14, 25, 26, 27, 29, 35, 58, 69, 71, 82, 98, 100, 101, 103, 104, 106]\nrenamecols = {\n    'latitude': 'lat',\n    'longitude': 'lon',\n    'iyear': u'year',\n    'country_txt': u'country',\n    'region_txt': u'region',\n    'provstate': u'state',\n    'attacktype1_txt': u'attacktype',\n    'targtype1_txt': u'targettype',\n    'weaptype1_txt': u'weapontype',\n    'nperps': u'nter',\n    'nkill': u'nkilled',\n    'nkillter': u'nkilledter',\n    'nwound': u'nwounded',\n    'nwoundte': u'nwoundedter',\n    'propextent_txt': u'propertyextent'\n}","1bf43e87":"df_terrorism= pd.read_csv(r\"..\/input\/tsf-datasets\/globalterrorismdb_0718dist.csv\",encoding='ISO-8859-1',usecols=usecols)\ndf_terrorism.rename(columns=renamecols, inplace=True)\ndf_terrorism = df_terrorism.apply(lambda x: x.encode('utf-8').strip() if isinstance(x, str) else x)","80a030d3":"df_terrorism.shape","fcdda2c0":"df_terrorism.head()","fae4cf0b":"# Removing unknown values in the coordinates\ndf_terrorism = df_terrorism[pd.notnull(df_terrorism.lat)]\ndf_terrorism = df_terrorism[pd.notnull(df_terrorism.lon)]\nprint(\"Unknown values in the coordinates are removed succcessfully\")","26c91f6f":"# Unknowns in numeric columns\nexclude_cols = ['year', 'lat', 'lon']\nfloat_cols = [c for c in df_terrorism.select_dtypes(include=[float]).columns.tolist() if c not in exclude_cols]","4fed1344":"df_terrorism[float_cols] = df_terrorism[float_cols].fillna(0).astype(int)\ndf_terrorism[float_cols] = df_terrorism[float_cols].mask(df_terrorism[float_cols] < 0, 0)","3a9343e7":"# Unknowns in string columns\nstr_cols = df_terrorism.select_dtypes(exclude=[float]).columns.tolist()\ndf_terrorism[str_cols] = df_terrorism[str_cols].fillna('Unknown')\n# Many fields are dots which mean unknown value\ndf_terrorism[str_cols] = df_terrorism[str_cols].replace(r'^\\.*$', 'Unknown', regex=True)","d6e5ec67":"# Limit Long strings\ndf_terrorism['weapontype'] = df_terrorism['weapontype'].replace(u'Vehicle (not to include vehicle-borne explosives, i.e., car or truck bombs)', 'Vehicle')\ndf_terrorism['propertyextent'] = df_terrorism['propertyextent'].replace(u'Minor (likely < $1 million)', u'Minor (< $1 million)')\ndf_terrorism['propertyextent'] = df_terrorism['propertyextent'].replace(u'Major (likely > $1 million but < $1 billion)', u'Major (< $1 billion)')\ndf_terrorism['propertyextent'] = df_terrorism['propertyextent'].replace(u'Catastrophic (likely > $1 billion)', u'Catastrophic (> $1 billion)')","0456a1d7":"# Number of duplicates values\ndf_terrorism.duplicated().sum()","867afaf4":"# Removal of duplicates values\ndf_terrorism.drop_duplicates(keep=False,inplace=True)","e206d03a":"# No more null values\ndf_terrorism.isnull().sum()","b7b05973":"print(\"Total Number of Null Values = \",df_terrorism.isnull().sum().sum())","a02953e6":"# Shape of Processed dataset\ndf_terrorism","d2aafdcf":"df_terrorism.shape","acfb1f8a":"# Columns in the Dataset\ndf_terrorism.columns","7b66bd73":"# Datatypes in the Dataframe\ndf_terrorism.dtypes","89b4c55d":"df_terrorism.head()","28fedc72":"df_terrorism.tail()","88161639":"# Summary of Dataset\ndf_terrorism.info()","41cfefde":"# Count of Values in each column of DataFrame\ndf_terrorism.nunique()","ea4fc881":"# Years in the DataFrame\ndf_terrorism[\"year\"].unique()","2555aa79":"# Count of each year in the Data Frame\ndf_terrorism[\"year\"].value_counts()","44aee860":"# Total Count of the regions in the DataFrame\ndf_terrorism['region'].value_counts()","2c49e9fc":"# Total count of gname in the DataFrame\ndf_terrorism['gname'].value_counts()","c41b48df":"# Total count of cities in the DataFrame\ndf_terrorism['city'].value_counts()","d39fe949":"# Total count of Attack type in the DataFrame\ndf_terrorism['attacktype'].value_counts()","d7375fa2":"# Total count of Target type in the DataFrame\ndf_terrorism['targettype'].value_counts()","557b45fc":"# Stastical Summary of Data\ndf_terrorism.describe()","db437fc4":"# Data in each column\nfor col in df_terrorism:\n    print(df_terrorism[col].unique())","8a2b92d1":"# Correlation among the columns\ndf_terrorism.corr()","a3afee35":"# Covariance between set of variables\ndf_terrorism.cov()","227cbe41":"# Slicing Data\ndf_terrorism.iloc[0]","cce18024":"df_terrorism.iloc[:,0] ","c7d09234":"# Heat Map of the correlation among the columns\nfig,axes = plt.subplots(1,1,figsize=(16,14))\nsns.heatmap(df_terrorism.corr(), annot= True)\nplt.show()","3d3ad14e":"# Heat map of the covariance among the set of variables\nfig,axes = plt.subplots(1,1,figsize=(16,14))\nsns.heatmap(df_terrorism.cov(), annot= True)\nplt.show()","906d4718":"# Visualization of missing values\nsns.heatmap(df_terrorism.isnull(),yticklabels=False,cbar=False,cmap=\"viridis\") ","8ded290d":"# Pie Plot of AttackTypes\nplt.figure(figsize=(15,15))\ndf_terrorism['attacktype'].value_counts().plot.pie(autopct=\"%1.1f%%\")\nplt.show()","f2920b3a":"# Pie Plot of TargetTypes\nplt.figure(figsize=(15,15))\ndf_terrorism['targettype'].value_counts().plot.pie(autopct=\"%1.1f%%\")\nplt.show()","8e55531b":"# Pie Plot of WeaponTypes\nplt.figure(figsize=(15,15))\ndf_terrorism['weapontype'].value_counts().plot.pie(autopct=\"%1.1f%%\")\nplt.show()","53afe375":"# Pie Plot of Region\nplt.figure(figsize=(15,15))\ndf_terrorism['region'].value_counts().plot.pie(autopct=\"%1.1f%%\")\nplt.show()","66f04571":"# Number of Terrorist Activities by Region\nplt.subplots(figsize=(15,5))\nsns.countplot('region',data=df_terrorism,palette='inferno',order=df_terrorism['region'].value_counts().index)\nplt.xticks(rotation=90)\nplt.xlabel('Regions')\nplt.title('Number Of Terrorist Activities By Region')\nplt.show()","6c2a4732":"# Number of Terrorist Activities Each Year\nplt.subplots(figsize=(15,8))\nsns.countplot('year',data=df_terrorism,palette='RdYlGn_r',edgecolor=sns.color_palette('dark',7))\nplt.xticks(rotation=90)\nplt.xlabel('Year of attack')\nplt.title('Number Of Terrorist Activities Each Year')\nplt.show()","c3a09de7":"# Frequency of Attacks\nplt.figure(figsize=(18,8))\nsns.countplot(x=df_terrorism[\"year\"], hue=\"success\", data = df_terrorism)\nplt.xlabel(\"Years\")\nplt.xticks(rotation=90)\nplt.ylabel(\"Frequency of Attacks\")","40698647":"# Attacking Methods of Terrorists\nplt.subplots(figsize=(15,4))\nsns.countplot('attacktype',data=df_terrorism,palette='inferno',order=df_terrorism['attacktype'].value_counts().index)\nplt.xticks(rotation=90)\nplt.xlabel('Attack Type')\nplt.title('Attacking Methods by Terrorists')\nplt.show()","c239e714":"# Frequency of each weapon used\nplt.figure(figsize=(15,6))\nsns.barplot(x= df_terrorism[\"weapontype\"].value_counts()[:50].index,y = df_terrorism[\"weapontype\"].value_counts()[:50].values)\nplt.xlabel(\"Weapons used\", fontsize=20)\nplt.xticks(rotation=90)\nplt.ylabel(\"Frequency of a Particluar weapon used\", fontsize=12)\nplt.title(\"Types of Weapons\", fontsize=20)","419bd610":"#Attacking Methods by the Terrorists\nplt.subplots(figsize=(15,6))\nsns.countplot(x= 'attacktype', data=df_terrorism, palette='coolwarm',order=df_terrorism['attacktype'].value_counts().index)\nplt.xticks(rotation=90)\nplt.title('Attacking Methods by Terrorists')\nplt.show()","1866f6a7":"# Different Target places for Terrorists to Attack\nplt.subplots(figsize=(15,6))\nsns.countplot('targettype',data=df_terrorism,palette='inferno',order=df_terrorism['targettype'].value_counts().index)\nplt.xticks(rotation=90)\nplt.xlabel('Target Type')\nplt.title('Target by Terrorists')\nplt.show()","a9fd70b4":"# Number of Terrorist Activities Countrywise\nplt.figure(figsize=(20,6))\nsns.barplot(x=df_terrorism['country'].value_counts()[:25].index, y=df_terrorism['country'].value_counts()[:25])\nplt.xlabel(\"Countries\")\nplt.ylabel(\"Count\")\nplt.xticks(rotation=90)\nplt.rcParams['figure.figsize'] = [10,8]\nplt.title(\"Number of Terrorist Activities Countrywise\")","4a6f5730":"# Number of Terrorist Activities Regionwise\nsns.countplot(x= df_terrorism[\"region\"], hue=\"success\", data=df_terrorism)\nplt.xlabel(\"Regions\", fontsize=20)\nplt.xticks(rotation=90)\nplt.ylabel(\"Terrorism Count\", fontsize=20)\nplt.title(\"Number of Terrorist Activities Regionwise\", fontsize=20)","2cd24359":"# Terrorist Attack Year VS Region\ndf_region=pd.crosstab(df_terrorism.year,df_terrorism.region)\ndf_region.plot(color=sns.color_palette('Set2',12))\nfig=plt.gcf()\nplt.title(\"Terrorist Attack Year VS Region\", fontsize=20)\nfig.set_size_inches(15,8)\nplt.show()","f9f40db2":"# Terrorist Attack Year VS Target Type\ndf_region=pd.crosstab(df_terrorism.year,df_terrorism.targettype)\ndf_region.plot(color=sns.color_palette('Set2',12))\nfig=plt.gcf()\nplt.title(\"Terrorist Attack Year VS Target Type\", fontsize=20)\nfig.set_size_inches(15,8)\nplt.show()","815faef4":"# Wounded VS Year\nd=df_terrorism.groupby(['year','region'])['nwounded'].sum()\nplot_df_terrorism = d.unstack('region').loc[:]\nplot_df_terrorism.index = pd.PeriodIndex(plot_df_terrorism.index.tolist(),freq='A')\nplot_df_terrorism.plot(figsize=(15,8),color=sns.color_palette('Set2',12))\nplt.title(\"Wounded Vs Year\", fontsize=20)\nplt.xlabel(\"Year\")\nplt.ylabel(\"Wounded\")","fea72671":"# Histogram of the Data\ndf_terrorism.hist(figsize=(35,30))","69955508":"# Attacks VS Killed\ncount_terror = df_terrorism['country'].value_counts()[:15].to_frame()\ncount_terror.columns=['Attacks']\ncount_kill=df_terrorism.groupby ('country')['nkilled'].sum().to_frame()\ncount_terror.merge(count_kill,left_index = True,right_index =True,how='left').plot.bar(width=0.9)\nfig=plt.gcf()\nplt.title(\"Attacks VS Killed\", fontsize=20)\nfig.set_size_inches(16,4)\nplt.show()","74237fff":"# Exploratory Data Analysis on Global Terrorism","6737df01":"## Conclusion\nCountry with the highest number of Terrorist Attacks: **Iraq**  \nRegions with the highest number of  Terrorist Attacks: **Middle East & North Africa**  \nMaximum number of people were killed by a single terrorist attack are **1570 people** that took place in Iraq  \nYear with the most Attacks: **2014**  \nMonth with the most Attacks: **5**  \nGroup with the most Attacks: **Taliban**  \nMost Attacks Types: **Bombing\/Explosion**  ","d01ac787":"## Importing Libraries","3edd1ad4":"![image.png](attachment:image.png)","5e926c0a":"## Visualization of Data","3e524c84":"## Reading and Exploring Data","e6bbe392":"## Exploratory Data Analysis","479e3b6b":"## Cleaning DataFrame"}}