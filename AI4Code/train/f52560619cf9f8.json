{"cell_type":{"96273493":"code","3b15632d":"code","5c9d79f6":"code","50465338":"code","3ada2db3":"code","a486ef3d":"code","205c2535":"code","2a9d72d3":"code","f3cb27d9":"code","dda23f94":"code","cc16f073":"code","d485a138":"code","f251b4c6":"code","3c382058":"code","9d2db265":"code","76b641a0":"code","7ecb3da7":"code","7fc37a66":"code","43da4296":"markdown","f3af1e5a":"markdown","8e16a9c6":"markdown","d8445d90":"markdown","227925ca":"markdown","eb3e1ab3":"markdown"},"source":{"96273493":"# Importing necessary libraries for data exploration\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","3b15632d":"# Getting the file location\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","5c9d79f6":"# reading the file\nsrc = '\/kaggle\/input\/drug-classification\/drug200.csv'\ndata_drug = pd.read_csv(src)","50465338":"#Exploring data\ndata_drug.head()","3ada2db3":"data_drug.dtypes","a486ef3d":"data_drug.info()","205c2535":"# Separating Features and Target\nX = data_drug.drop('Drug', axis=1)\ny = data_drug['Drug']","2a9d72d3":"# Separating categorical columns & numerical columns in features set\ncat_columns = ['Sex', 'BP', 'Cholesterol']\nnum_columns = ['Age', 'Na_to_K']","f3cb27d9":"# Importing encoder and scaler from scikit learn library\nfrom sklearn.preprocessing import OrdinalEncoder, StandardScaler\nfrom sklearn.model_selection import train_test_split","dda23f94":"# Encoding categorical values\nencoder = OrdinalEncoder()\nX_cat_encode = encoder.fit_transform(X[cat_columns])\nX_cat_encode = pd.DataFrame(X_cat_encode, columns = cat_columns)\nX_encoded = pd.concat((X[num_columns], X_cat_encode), axis=1)\nX_encoded.head(10)","cc16f073":"#Splitting the data with 80:20 ratio\nX_train, X_test, y_train, y_test = train_test_split(X_encoded, y, test_size = 0.2, random_state = 42)","d485a138":"#Scaling the features data\nscaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","f251b4c6":"# Importing DecisionTreeClassifer from scikit learn library\nfrom sklearn.tree import DecisionTreeClassifier","3c382058":"#Decision Tree Classifier model\nmodel = DecisionTreeClassifier(max_depth=5)\nmodel.fit(X_train, y_train)","9d2db265":"# predicting the values for X_test\ny_pred = model.predict(X_test)","76b641a0":"#Importing metrics for evaluation\nfrom sklearn.metrics import accuracy_score, classification_report, confusion_matrix, precision_score","7ecb3da7":"# Confusion Matrix\nconfusion_matrix(y_test, y_pred)","7fc37a66":"# Classification report\nprint(classification_report(y_test, y_pred))","43da4296":"# Drug Classification Model Based on Decision Trees","f3af1e5a":"## Model Building","8e16a9c6":"## Prediction & Evaluation","d8445d90":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","227925ca":"## Data Exploration","eb3e1ab3":"## Data Preparation"}}