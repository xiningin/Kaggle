{"cell_type":{"807ad6b2":"code","3a8cdd3c":"code","7449af34":"code","2d2f3b4c":"code","2d173846":"code","bde9e231":"code","5143be76":"code","29ecb9ff":"code","fd6c582a":"code","5b2dd4a1":"code","1de4db64":"code","f99761ca":"code","de3fb785":"code","af2b2ba7":"code","c70af6a6":"code","50a4cb28":"code","7306ab9b":"code","843c4136":"code","53ffb42e":"code","0efa85be":"code","df19ef67":"code","0435be04":"code","d801895c":"code","5807e9b4":"code","4974b012":"markdown","acda9e56":"markdown","dd72f180":"markdown","5ad84da7":"markdown","016c7501":"markdown","bf88edaa":"markdown","0e638d98":"markdown","fc0594ea":"markdown","f89f0e52":"markdown","a1b01a4d":"markdown"},"source":{"807ad6b2":"#Data Science,# Big Query, #Data Visualization , #Statistics, #Mathematics","3a8cdd3c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7449af34":"!pip install chart-studio ","2d2f3b4c":"# Import the required libraries \n\nfrom bq_helper import BigQueryHelper\nimport bq_helper\n\nfrom plotly.offline import init_notebook_mode, iplot\nfrom wordcloud import WordCloud\nimport plotly.graph_objs as go\nimport matplotlib.pyplot as plt\nimport chart_studio.plotly as py\n#from chart_studio.plotly import tools\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport pandas as pd\ninit_notebook_mode(connected=True)\n\nmedicare = bq_helper.BigQueryHelper(active_project=\"bigquery-public-data\", dataset_name=\"cms_medicare\")\nbq_assistant = BigQueryHelper(\"bigquery-public-data\", \"cms_medicare\")","2d173846":"# How many nurrsing facilitins in different States \nquery1 = \"\"\"SELECT\nstate, COUNT(state) as total_facilities\nFROM\n  `bigquery-public-data.cms_medicare.home_health_agencies_2014`\n  GROUP BY \n  state\nORDER BY\n  total_facilities DESC;\"\"\"\nresponse1 = medicare.query_to_pandas_safe(query1)\nresponse1.head(10)","bde9e231":"scl = [[0.0, 'rgb(248,255,206)'],[0.2, 'rgb(203,255,205)'],[0.4, 'rgb(155,255,164)'], [0.6, 'rgb(79,255,178)'],[0.8, 'rgb(15,183,132)'], [1, '#008059']]\nquery1 = \"\"\"SELECT\nstate, COUNT(state) as total_facilities\nFROM\n  `bigquery-public-data.cms_medicare.home_health_agencies_2014`\n  GROUP BY \n  state\nORDER BY\n  total_facilities DESC;\"\"\"\nresponse1 = medicare.query_to_pandas_safe(query1)\nresponse1.head(10)\ndata = [ dict(\n        type='choropleth',\n        colorscale = scl,\n        autocolorscale = False,\n        locations = response1.state,\n        z = response1.total_facilities,\n        locationmode = 'USA-states',\n        text = response1.state,\n        marker = dict(\n            line = dict (\n                color = 'rgb(255,255,255)',\n                width = 2\n            ) ),\n        colorbar = dict(\n            title = \"home_health_agencies in Different States\")\n        )\n       ]\n\nlayout = dict(\n        title = 'home_health_agencies in Different States',\n        geo = dict(\n            scope='usa',\n            projection=dict( type='albers usa' ),\n            showlakes = True,\n            lakecolor = 'rgb(255, 255, 255)'),\n             )\n    \nfig = dict( data=data, layout=layout )\niplot( fig, filename='d3-cloropleth-map' )","5143be76":"query2 = \"\"\"SELECT\n  state, AVG(average_hcc_score) as avg_hcc_score, Max(average_hcc_score) as max_hcc_score, Min(average_hcc_score) as min_hcc_score, COUNT(average_hcc_score) as total_facilities\nFROM\n  `bigquery-public-data.cms_medicare.home_health_agencies_2014`\n  GROUP BY \n  state\nORDER BY\n  avg_hcc_score DESC;\n        \"\"\"\nresponse2 = medicare.query_to_pandas_safe(query2)\nresponse2.head(20)","29ecb9ff":"trace1 = go.Bar(\n    x=response2.state,\n    y=response2.max_hcc_score,\n    name='Max HCC Score',\n    marker=dict(color='rgb(158,202,225)'),\n)\ntrace2 = go.Bar(\n    x=response2.state,\n    y=response2.min_hcc_score,\n    name='Min HCC Score',\n    marker=dict(color='rgb(58,22,25)'),\n)\n\ndata = [trace1, trace2]\nlayout = go.Layout(\n    barmode='group',\n    title='Minimum and Maximum HCC scores for different States',\n    legend=dict(orientation=\"h\")\n)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig, filename='grouped-bar')","fd6c582a":"\nscl = [[0.0, 'rgb(255,233,225)'],[0.2, 'rgb(249,220,211)'],[0.4, 'rgb(227,192,183)'], [0.6, 'rgb(210,178,167)'],[0.8, 'rgb(182,151,146)'],[1.0, '#734842']]\n\ndata = [ dict(\n        type='choropleth',\n        colorscale = scl,\n        autocolorscale = False,\n        locations = response2.state,\n        z = response2.avg_hcc_score,\n        locationmode = 'USA-states',\n        text = response2.state,\n        marker = dict(\n            line = dict (\n                color = 'rgb(255,255,255)',\n                width = 2\n            ) ),\n        colorbar = dict(\n            title = \"Average HCC Scores\")\n        )\n       ]\n\nlayout = dict(\n        title = 'Average HCC Scores for different states',\n        geo = dict(\n            scope='usa',\n            projection=dict( type='albers usa' ),\n            showlakes = True,\n            lakecolor = 'rgb(255, 255, 255)'),\n             )\n    \nfig = dict( data=data, layout=layout )\niplot( fig, filename='d3-cloropleth-map' )","5b2dd4a1":"query3 = \"\"\"SELECT agency_name, city, state, average_hcc_score\nFROM `bigquery-public-data.cms_medicare.home_health_agencies_2014`\nORDER BY average_hcc_score DESC;\n        \"\"\"\nresponse3 = medicare.query_to_pandas_safe(query3)\nresponse3.head(10)","1de4db64":"response3.tail(10)","f99761ca":"tempdf = response3.head(10)\ny = list(reversed(list(tempdf.agency_name)))\nx = list(reversed(list(tempdf.average_hcc_score)))\ntrace1 = go.Bar(x=x, y=y, orientation=\"h\", marker=dict(color='#f79284'),)\nlayout = dict(height=400, width=700, margin=dict(l=400), title='home_health_agencies having Maximum Average HCC Scores')\ndata = [trace1]\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig, filename='stacked-bar')","de3fb785":"query1 = \"\"\"SELECT\n  state, Sum(male_beneficiaries) as male_ben, Sum(female_beneficiaries) as female_ben\nFROM\n  `bigquery-public-data.cms_medicare.home_health_agencies_2014`\n  GROUP BY \n      state\n  ORDER BY\n      male_ben DESC;\n        \"\"\"\nresponse1 = medicare.query_to_pandas_safe(query1)\n\n\ntrace1 = go.Bar(\n    x=response1.state,\n    y=response1.male_ben,\n    marker=dict(color='#e584f7'),\n    name='Total Male '\n)\ntrace2 = go.Bar(\n    x=response1.state,\n    y=response1.female_ben,\n    marker=dict(color='#a0f784'),\n    name='Total Female '\n)\n\ndata = [trace1, trace2]\nlayout = go.Layout(barmode='group', legend=dict(orientation='h'), title='Male and Female Beneficiaries in 2014 in different states')\nfig = go.Figure(data=data, layout=layout)\niplot(fig, filename='grouped-bar')","af2b2ba7":"response1['difference'] = response1['female_ben'] - response1['male_ben']\n\ntrace1 = go.Bar(\n    x=response1.state,\n    y=response1.difference,\n    marker=dict(color='#aabfe0'),\n    name='Total Male beneficiaries'\n)\ndata = [trace1]\nlayout = go.Layout(barmode='group', legend=dict(orientation='h'), title='Difference in Male and Female Beneficiaries in Different State')\nfig = go.Figure(data=data, layout=layout)\niplot(fig, filename='grouped-bar')","c70af6a6":"# for nursing_facilities_2014","50a4cb28":"query3_a = \"\"\"SELECT provider_id, avg(average_total_payments) as average_outpatient_payments\nFROM `bigquery-public-data.cms_medicare.outpatient_charges_2014` group by provider_id;\"\"\"\noutp = medicare.query_to_pandas_safe(query3_a)\n\nquery3_b = \"\"\"SELECT provider_id, avg(average_total_payments) as average_inpatient_payments\nFROM `bigquery-public-data.cms_medicare.inpatient_charges_2014` group by provider_id;\"\"\"\ninp = medicare.query_to_pandas_safe(query3_b)\n\nmerged = outp.merge(inp, on=\"provider_id\", how = 'inner')\nmerged[\"difference\"] = merged[\"average_inpatient_payments\"] - merged['average_outpatient_payments']\n\ntracex = go.Histogram(x = merged[\"difference\"]) \nfig = go.Figure(data = [tracex])\nfig['layout'].update(height=400, showlegend=False, title=\"Difference in average inpatient and outpatient payments\");\niplot(fig, filename='simple-subplot');","7306ab9b":"query2 = \"\"\"SELECT\n  state, AVG(average_length_of_stays_days) as average_length_of_stays_days, AVG(total_stays) as total_stays\nFROM\n  `bigquery-public-data.cms_medicare.nursing_facilities_2014`\n  GROUP BY \n  state\nORDER BY\n  average_length_of_stays_days DESC;\n        \"\"\"\nresponse2 = medicare.query_to_pandas_safe(query2)\nresponse2.head(10)\n\n\ntrace0 = go.Scatter(\n    x=response2.average_length_of_stays_days,\n    y=response2.state,\n    mode='markers',\n    name='Average Length of Stay in a State',\n    marker=dict(\n        color='rgba(156, 165, 196, 0.95)',\n        line=dict(\n            color='rgba(156, 165, 196, 1.0)',\n            width=1,\n        ),\n        symbol='circle',\n        size=16,\n    )\n)\ntrace1 = go.Scatter(\n    x=response2.total_stays,\n    y=response2.state,\n    mode='markers',\n    name='Average of Total Stays in a State ',\n    marker=dict(\n        color='#00d8d8',\n        line=dict(\n            color='rgba(217, 217, 217, 1.0)',\n            width=1,\n        ),\n        symbol='circle',\n        size=16,\n    )\n)\n\ndata = [trace0, trace1]\nlayout = go.Layout(\n    title=\"Average Total Stays of each State and Average Length of Stays for each state \",\n    xaxis=dict(\n        showgrid=False,\n        showline=True,\n        linecolor='rgb(102, 102, 102)',\n        titlefont=dict(\n            color='rgb(204, 204, 204)'\n        ),\n        tickfont=dict(\n            color='rgb(102, 102, 102)',\n        ),\n#         autotick=False,\n        dtick=10,\n        ticks='outside',\n        tickcolor='rgb(102, 102, 102)',\n    ),\n    margin=dict(\n        l=140,\n        r=40,\n        b=50,\n        t=80\n    ),\n    legend=dict(\n        font=dict(\n            size=10,\n        ),\n        yanchor='middle',\n        xanchor='right',\n    ),\n#     width=800,\n    height=600,\n    paper_bgcolor='rgb(254, 247, 234)',\n    plot_bgcolor='rgb(254, 247, 234)',\n    hovermode='closest',\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig, filename='lowest-oecd-votes-cast')","843c4136":"# which facilities have highest stays count \n\nquery1 = \"\"\"SELECT\n  facility_name, city, state, average_length_of_stays_days\nFROM\n  `bigquery-public-data.cms_medicare.nursing_facilities_2014`\nORDER BY\n  average_length_of_stays_days DESC;\n        \"\"\"\nresponse1 = medicare.query_to_pandas_safe(query1)\n\ntempdf = response1.head(10)\ny = list(reversed(list(tempdf.facility_name)))\nx = list(reversed(list(tempdf.average_length_of_stays_days)))\ntrace1 = go.Bar(x=x, y=y, orientation=\"h\", marker=dict(color='#f7e484'))\nlayout = dict(height=400, width=700, title='Nursing Facilities having Maximum Average Length of Stay Days', margin=dict(l=400))\ndata = [trace1]\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig, filename='stacked-bar')","53ffb42e":"query1 = \"\"\"SELECT\n  nppes_provider_state AS state,\n  ROUND(SUM(total_claim_count) \/ 1e6) AS total_claim_count_millions,\n  ROUND(SUM(total_day_supply) \/ 1e6) AS total_day_supply_millions,\n  ROUND(SUM(total_drug_cost) \/ 1e6) AS total_drug_cost_millions\nFROM\n  `bigquery-public-data.cms_medicare.part_d_prescriber_2014`\nGROUP BY\n  state\nORDER BY\n  total_claim_count_millions DESC;\n        \"\"\"\nresponse1 = medicare.query_to_pandas_safe(query1)\nresponse1.head(10)","0efa85be":"trace1 = go.Scatter(\n    x=response1.total_day_supply_millions,\n    y=response1.total_drug_cost_millions,\n    mode='markers',\n    text=response1.state,\n    marker=dict(\n        color=list(reversed([i*11 for i in range(200,251)])),\n        size=response1.total_claim_count_millions,\n        line=dict(\n            width=2\n        ),\n    )\n)\ndata = [trace1]\n\nlayout = go.Layout(\n    title='Total claim count VS Total Drug Cost VS Total Day Supply for every state',\n    xaxis=dict(\n        title='Total Day Supply',\n        gridcolor='rgb(255, 255, 255)',\n        zerolinewidth=1,\n        ticklen=5,\n        gridwidth=2,\n    ),\n    yaxis=dict(\n        title='Total Drug Cost',\n        gridcolor='rgb(255, 255, 255)',\n        zerolinewidth=1,\n        ticklen=5,\n        gridwidth=2,\n    ),\n    paper_bgcolor='rgb(243, 243, 243)',\n    plot_bgcolor='rgb(243, 243, 243)',\n)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig, filename='scatter-colorscale')\n","df19ef67":"# state wise count of claims \n\n## Which providers have highest claims \n\nquery1 = \"\"\"SELECT\n  generic_name AS drug_name,\n  ROUND(SUM(total_claim_count) \/ 1e6) AS total_claim_count_millions,\n  ROUND(SUM(total_day_supply) \/ 1e6) AS total_day_supply_millions,\n  ROUND(SUM(total_drug_cost) \/ 1e6) AS total_drug_cost_millions\nFROM\n  `bigquery-public-data.cms_medicare.part_d_prescriber_2014`\nGROUP BY\n  drug_name\nORDER BY\n  total_claim_count_millions DESC;\n        \"\"\"\nresponse1 = medicare.query_to_pandas_safe(query1)\ntempdf = response1.head(50)\n\ntrace1 = go.Bar(\n    x=tempdf.drug_name,\n    y=tempdf.total_claim_count_millions,\n    name='Total Claims'\n)\ntrace2 = go.Bar(\n    x=tempdf.drug_name,\n    y=tempdf.total_day_supply_millions,\n    name='Total Day Supply'\n)\ntrace3 = go.Bar(\n    x=tempdf.drug_name,\n    y=tempdf.total_drug_cost_millions,\n    name='Total Drug Cost'\n)\n\ndata = [trace1, trace2, trace3]\nlayout = go.Layout(\n    barmode='group'\n    , margin=dict(b=200)\n)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig, filename='grouped-bar')","0435be04":"query1 = \"\"\"SELECT\n  specialty_description AS specialty_description,\n  ROUND(SUM(total_claim_count) \/ 1e6) AS total_claim_count_millions,\n  ROUND(SUM(total_day_supply) \/ 1e6) AS total_day_supply_millions,\n  ROUND(SUM(total_drug_cost) \/ 1e6) AS total_drug_cost_millions\nFROM\n  `bigquery-public-data.cms_medicare.part_d_prescriber_2014`\nGROUP BY\n  specialty_description\nORDER BY\n  total_claim_count_millions DESC;\n        \"\"\"\nresponse1 = medicare.query_to_pandas_safe(query1)\ntempdf = response1.head(40)\ntempdf['specialty_description1'] = tempdf['specialty_description'].apply(lambda x: x.replace(\" \",\"_\"))","d801895c":"txt = \" \".join(tempdf.specialty_description1)\nwordcloud = WordCloud(background_color='black', max_font_size=50, width=600, height=300).generate(txt)\nplt.figure(figsize=(16,8))\nplt.imshow(wordcloud)\nplt.title(\"Top Speciality Services\", fontsize=15)\nplt.axis(\"off\")\nplt.show() ","5807e9b4":"#Now it's Your Turn to to apply for others dataset","4974b012":"**Inference\n**\n\nLevothyroxine Sodium and LISINOPRIL are the drugs which are associated with the highest number of claims as well as highest number of supply\nInsulin Glargine, Hum.Rec.An is the drug which is associated with the highest Total Drug Cost\nDrugs having more Total Supply than Drug Costs are AMLODIPINE BESYLATE and SIMVASTATIN\nDrugs having more Total Cost than Supply are Rosuvastatin Calcium, and Esomeprazole magnesium\n\n\n#What about Nursing Specialities associated with highest claims\n","acda9e56":"home_health_agencies with very HIGH HCC score","dd72f180":"Inference\n\nAverage Length of Stay among the patients in all the states is very close to 30 days. (They also want to avoid 30-day readmission penalty)\nArizona has the significantly lower average lenght of stay equal to 22 which is quite less as compared to other states\nLouisiana, Texas, Illinois, Mississippi are the states having greater than 30 day average length of stay, which indicates that patients are admitted there for longer number of days than average\nPurto Rico, a territory of US has the lowest average length of stay among all the states and terriroties equal to 12.\n\nNew Jersy's nursing facilities has on-an-average very large number of total stays (equal to 321)\n\nIowa has the minium among the states equal to 73 total stays among its nursing facilities","5ad84da7":"Difference in Male and Female Beneficiaries","016c7501":"Inference\n\nCalifornia is the state having highest total day supply, highest total drug cost and highest claim count.\nOther states having more claim counts include Florida, Texas, and New York\n\n# Which Drugs have been most prescribed in US","bf88edaa":"#Lets Explore the Total Claims, Day Supply and Drug Costs\n#Which State has highest claims, Day Supply, and Drug Costs","0e638d98":" Facilities having highest average length of stay days","fc0594ea":"Difference in Average Inpatient payment and Average Outpatient payments","f89f0e52":"Average HCC for different states","a1b01a4d":"Finding States \/ Facilities with poor average length of stay days\n\n#States and their average total number stays (of different facilities) and average length of stays (in different facilities)"}}