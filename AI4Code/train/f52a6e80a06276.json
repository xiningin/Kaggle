{"cell_type":{"ce642ca5":"code","dae33765":"code","d208c73f":"code","dad59c1f":"code","ff457038":"code","029bc8f8":"code","0a013014":"code","f7b07925":"code","63b2fee9":"code","3b597d89":"code","f37cce97":"code","7f30b2ee":"code","2dac121c":"code","d018fa6f":"code","54e1dde2":"code","ef11752a":"code","83f613ce":"code","1943716f":"code","559d8b0f":"code","9178e14f":"code","991f5297":"code","1364ed18":"code","69bd773b":"code","dbaef386":"markdown","6f0f18cb":"markdown"},"source":{"ce642ca5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","dae33765":"from sklearn.metrics import make_scorer, accuracy_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score\nfrom sklearn import preprocessing\nimport matplotlib.pylab as pylab\nimport matplotlib.pyplot as plt\nfrom pandas import get_dummies\nimport matplotlib as mpl\nimport xgboost as xgb\nimport seaborn as sns\nimport pandas as pd\nimport numpy as np\nimport matplotlib\nimport warnings\nimport sklearn\nimport scipy\nimport numpy\nimport json\nimport sys\nimport csv\nimport os","d208c73f":"print('matplotlib: {}'.format(matplotlib.__version__))\nprint('sklearn: {}'.format(sklearn.__version__))\nprint('scipy: {}'.format(scipy.__version__))\nprint('seaborn: {}'.format(sns.__version__))\nprint('pandas: {}'.format(pd.__version__))\nprint('numpy: {}'.format(np.__version__))\nprint('Python: {}'.format(sys.version))","dad59c1f":"sns.set(style='white', context='notebook', palette='deep')\npylab.rcParams['figure.figsize'] = 12,8\nwarnings.filterwarnings('ignore')\nmpl.style.use('ggplot')\nsns.set_style('white')\n%matplotlib inline","ff457038":"# import train and test to play with it\ndf_train = pd.read_csv('..\/input\/titanic\/train.csv')\ndf_test = pd.read_csv('..\/input\/titanic\/test.csv')","029bc8f8":"# shape\nprint(df_train.shape)","0a013014":"#columns*rows\ndf_train.size","f7b07925":"def check_missing_data(df):\n    flag=df.isna().sum().any()\n    if flag==True:\n        total = df.isnull().sum()\n        percent = (df.isnull().sum())\/(df.isnull().count()*100)\n        output = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\n        data_type = []\n        # written by MJ Bahmani\n        for col in df.columns:\n            dtype = str(df[col].dtype)\n            data_type.append(dtype)\n        output['Types'] = data_type\n        return(np.transpose(output))\n    else:\n        return(False)","63b2fee9":"check_missing_data(df_train)","3b597d89":"check_missing_data(df_test)","f37cce97":"print(df_train.info())","7f30b2ee":"df_train['Age'].unique()","2dac121c":"df_train[\"Pclass\"].value_counts()","d018fa6f":"df_train.head() ","54e1dde2":"df_train.tail() ","ef11752a":"df_train.sample(5) ","83f613ce":"df_train.describe()","1943716f":"df_train.isnull().sum()","559d8b0f":"df_train.groupby('Survived').count()","9178e14f":"df_train.columns","991f5297":"df_train.where(df_train['Age']==30).head(2)","1364ed18":"df_train[df_train['Age']==30]","69bd773b":"X = df_train.iloc[:, :-1].values\ny = df_train.iloc[:, -1].values","dbaef386":"# Explorer Dataset","6f0f18cb":"reference: https:\/\/www.kaggle.com\/mjbahmani\/a-comprehensive-ml-workflow-with-python"}}