{"cell_type":{"f844d1c4":"code","283a84a6":"code","257eedf3":"code","a524930e":"code","9a3d4f27":"code","ffafea16":"code","c770d5a1":"code","b818963f":"code","cdb493be":"code","b53bec92":"code","250e0a14":"code","cdb945ff":"code","b1031604":"code","b735884f":"code","2cd9a452":"code","166078c6":"code","eb338cc9":"code","7e0feb67":"code","5336e989":"code","f35ebaf2":"markdown","846a276e":"markdown","03f40cf0":"markdown","e5474739":"markdown","fe358935":"markdown"},"source":{"f844d1c4":"import numpy as np\nimport pandas as pd","283a84a6":"\ntrain = pd.read_csv(\"..\/input\/digit-recognizer\/train.csv\")\ntest = pd.read_csv(\"..\/input\/digit-recognizer\/test.csv\")","257eedf3":"train.shape","a524930e":"test.shape","9a3d4f27":"X_train = (train.iloc[:,1:].values).astype('float32') # all pixel values\ny_train = train.iloc[:,0].values.astype('int32') # only labels i.e targets digits\nX_test = test.iloc[:,1:].values.astype('float32')\ny_test = test.iloc[:,0:].values.astype('int32')","ffafea16":"print (\"X_train: \", X_train)\nprint (\"y_train: \", y_train)\nprint(\"X_test: \", X_test)\nprint (\"y_test: \", y_test)","c770d5a1":"#X_train = X_train.reshape(X_train.shape[0], 28, 28,1)\n#X_train.shape","b818963f":"#X_test = X_test.reshape(X_test.shape[0], 28, 28,1)\n#X_test.shape","cdb493be":"y_train_5 = (y_train ==5)\ny_test_5 = (y_test ==5)\n\n# This means true for all 5's and false for others","b53bec92":"# Now we have to pick a classifier and train it.\n\n# Stochastic Gradient Descent (it can handle big datasets every efficiently)\n\nfrom sklearn.linear_model import SGDClassifier\nsgd_clf = SGDClassifier( random_state=42)\nsgd_clf.fit(X_train,y_train_5)","250e0a14":"# Performance Measure with k fold cross validation with three folds\nfrom sklearn.model_selection import cross_val_score\ncross_val_score(sgd_clf, X_train, y_train_5, cv=3, scoring=\"accuracy\")","cdb945ff":"# A classifier that only images that are in 'not 5' class.\n\nfrom sklearn.base import BaseEstimator\nclass Never5Classifier(BaseEstimator):\n    def fit(self, X, y=None):\n        pass\n    def predict(self, X):\n        return np.zeros((len(X), 1), dtype=bool)","b1031604":"never_5_clf = Never5Classifier()\ncross_val_score(never_5_clf, X_train, y_train_5, cv=3, scoring=\"accuracy\")\n\n# Good accuracy but only 10% images are 5's. So if that image is not a 5, then we are right about 90% time.\n\n","b735884f":"from sklearn.model_selection import cross_val_predict\ny_train_pred = cross_val_predict(sgd_clf, X_train, y_train_5, cv =3)","2cd9a452":"from sklearn.metrics import confusion_matrix\nconfusion_matrix (y_train_5,y_train_pred)","166078c6":"\ny_train_perfect_predictions = y_train_5  \n# pretend we reached perfection\nconfusion_matrix(y_train_5, y_train_perfect_predictions)","eb338cc9":"from sklearn.metrics import precision_score, recall_score\n\nprecision_score(y_train_5, y_train_pred)","7e0feb67":"recall_score(y_train_5, y_train_pred)\n","5336e989":"\nfrom sklearn.metrics import f1_score\n\nf1_score(y_train_5, y_train_pred)","f35ebaf2":"### Loading the dataset","846a276e":"> Notebook Updated\n\n# Author: Kazi Amit Hasan\n\nDepartment of Computer Science & Engineering, <br>\nRajshahi University of Engineering & Technology (RUET) <br>\nWebsite: https:\/\/amithasanshuvo.github.io\/ <br>\nLinkedin: https:\/\/www.linkedin.com\/in\/kazi-amit-hasan-514443140\/ <br>\nEmail: kaziamithasan89@gmail.com <br>\n\n\n### Comment: \nThis notebook represents the chapter three(3) of Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow: Concepts, Tools, and Techniques to Build Intelligent Systems book. I tried to implemented each examples while I was reading and practing this book. <br>\n<b>Please give your feedback how I can improve the notebook. Happy Learning!\n\n\n##### Reference \nHands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow: Concepts, Tools, and Techniques to Build Intelligent Systems book (The best book I ever got on Data Sciene <3) <br>\n\nLanguage: Python\n\n# Plese upvote if you like it.","03f40cf0":"Confusion Matrix","e5474739":"## Making it a Binary classification problem by making it \"5-detector\" problem\n### It will distinguish between two classes. 5 or not! Sounds cool!","fe358935":"### Accuracy isn't always the base of performance measure"}}