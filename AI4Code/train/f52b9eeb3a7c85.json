{"cell_type":{"9b291e6b":"code","5dc68c6e":"code","892f4a70":"code","f48658b5":"markdown","08e24112":"markdown","851600db":"markdown","5456e8e6":"markdown"},"source":{"9b291e6b":"# WE WILL MAKE NEW SUBFOLDER IN WORKING FOLDER (WHICH ISN'T READ-ONLY)\n!mkdir \"..\/working\/firefox\"\n!cp -a \"..\/input\/firefox-63.0.3\/firefox\/.\" \"..\/working\/firefox\"\n!chmod -R 777 \"..\/working\/firefox\"\n!pip install webdriverdownloader\nfrom webdriverdownloader import GeckoDriverDownloader\ngdd = GeckoDriverDownloader()\ngdd.download_and_install(\"v0.23.0\")\n!pip install selenium\n!apt-get install -y libgtk-3-0 libdbus-glib-1-2 xvfb\n!export DISPLAY=:99","5dc68c6e":"# MORE MODULES TO IMPORT\nimport pandas as pd\nimport seaborn as sns\n\nfrom selenium.webdriver.common.by  import By as selenium_By\nfrom selenium.webdriver.support.ui import Select as selenium_Select\nfrom selenium.webdriver.support.ui import WebDriverWait as selenium_WebDriverWait\nfrom selenium.webdriver.support    import expected_conditions as selenium_ec\nfrom selenium.webdriver.firefox.options import Options as selenium_options\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities as selenium_DesiredCapabilities\nfrom selenium import webdriver as selenium_webdriver\nbrowser_options = selenium_options()\n\nbrowser_options.add_argument(\"--headless\")\nbrowser_options.add_argument(\"--window-size=1920,1080\")\n\ncapabilities_argument = selenium_DesiredCapabilities().FIREFOX\ncapabilities_argument[\"marionette\"] = True\n\nbrowser = selenium_webdriver.Firefox(\n    options=browser_options,\n    firefox_binary=\"..\/working\/firefox\/firefox\",\n    capabilities=capabilities_argument\n)","892f4a70":"import time\nfrom datetime import datetime\nformatted_data = []\n\nfor y in range(2014,2021):\n    for m in range(1,13):\n        print(y,m)\n        # Now we will extract the data from the website via JS return of global variable\n        browser.get('https:\/\/www.timeanddate.com\/weather\/canada\/toronto\/historic?month='+str(m)+'&year='+str(y))\n        data = browser.execute_script(\"return data;\")\n\n        # Loop over the results and save results\n        for e in data['temp']:\n            # Get the date and temp data \n            clean_day = time.strftime('%m',  time.gmtime(e['date']\/1000.))\n            clean_hour = time.strftime('%H',  time.gmtime(e['date']\/1000.))\n            formatted_data.append([y,m,int(clean_day),int(clean_hour),e['temp'],(e['temp']-32)*5\/9])\n\ndf = pd.DataFrame(formatted_data,columns=['year','month','day','hour','DegreeF','DegreeC'])\ndf.to_csv('Temperature_Toronto.csv',index=False)\n\n\n","f48658b5":"### **Part 2:** Scrape Data","08e24112":"### **Part 1: ** installing portable Firefox binary, geckodriver, and selenium library","851600db":"### **Pre-requisite steps:**\n\n1) First, manually download firefox for linux locally somewhere:\n\nhttp:\/\/ftp.mozilla.org\/pub\/firefox\/releases\/63.0.3\/linux-x86_64\/en-US\/firefox-63.0.3.tar.bz2\n\n2) then upload as new private \"dataset\" to kaggle account, making it selectable across kernels\n\n*note: when uploading, make sure to choose \"Keep tabular files in original format\" *","5456e8e6":"1) Manually \"+Add data | Your Datasets | firefox-63.0.3.tar.bz2\"\n\nnote: referencing uploaded binary files as \"datasets\" automatically places them into \"..\/input\" folder\n\n2) Under Settings section, set Internet = \"Internet Conneted\""}}