{"cell_type":{"239512e6":"code","16e61dbc":"code","a87990c2":"code","4890935b":"code","2505504a":"code","e14cf8ab":"code","d685f272":"code","d4b5eee5":"code","dce54de8":"code","73176694":"code","f7aa887b":"code","b99108a0":"code","98df6bdc":"code","11dc7d0d":"code","1355273d":"code","4d17b5d9":"code","3df2dc08":"code","7bdf4cc8":"code","5bb84f20":"code","9f5656ed":"code","1a9a3ff4":"code","98cd4aa2":"code","598e534b":"code","7316d749":"code","2b879aea":"code","88df9dc9":"code","5668b311":"code","21fbdbdf":"markdown","c2098d30":"markdown","482986d8":"markdown","782af321":"markdown","10ec8dea":"markdown","02f1ae27":"markdown","e1ab977a":"markdown","522fc43f":"markdown","56c48b21":"markdown","54a43e78":"markdown","7c0dfdcb":"markdown","657ae587":"markdown"},"source":{"239512e6":"import numpy as np\nimport requests\nfrom bs4 import BeautifulSoup as bs","16e61dbc":"#from this link we are going to extract transcript of speech\nurl=\"https:\/\/presidentofindia.nic.in\/speeches-detail.htm?814\"","a87990c2":"req=requests.get(url,\"text\")\nparse=bs(req.text,\"html.parser\")","4890935b":"#to understand this one should know basics of html tags. As in html everything is wrapped into some tags. Our target speech is also \n#wrapped inside `div` followed by many `p` tags\nspeech=\"\"\nfor para in parse.find('div',{'class':'speeches'}).find_all('p'):\n    speech+=\"\\n\"+para.text","2505504a":"#so that similiar word can be considered as one irrespective of case\nspeech = speech.lower()","e14cf8ab":"print(speech)","d685f272":"import collections\nfrom collections import Counter #for word counting","d4b5eee5":"import nltk\nfrom nltk.corpus import stopwords","dce54de8":"stopword = stopwords.words('english')","73176694":"#stopword are those word which occured so many times like is,am,are,has,don't etc which don't have any impact on gist of our text.\nspeech_in_word = [word for word in speech.split() if word not in stopword] #removing stopword from text","f7aa887b":"word_count = Counter(speech_in_word) #Counter takes corpus of word","b99108a0":"import matplotlib.pyplot as plt","98df6bdc":"plt.figure(figsize=(22,10))\nplt.bar(x=[i[0] for i in word_count.most_common(20)],height=[i[1] for i in word_count.most_common(20)],align='center')\nplt.xticks(rotation=50)\nplt.xlabel(\"Most 20 common words\")\nplt.ylabel(\"Words Frequency\")\nplt.show()","11dc7d0d":"import wordcloud","1355273d":"from wordcloud import WordCloud","4d17b5d9":"?WordCloud","3df2dc08":"wc=WordCloud(max_words=50,stopwords=stopword,background_color=\"white\").generate(speech)","7bdf4cc8":"plt.figure(figsize=(12,8))\nplt.imshow(wc)\nplt.axis('off')\nplt.show()","5bb84f20":"import PIL","9f5656ed":"wine_mask=np.array(PIL.Image.open(\"..\/input\/cloud-1\/Kovind_sir.jpg\"))","1a9a3ff4":"#we will use this as a mask\nplt.imshow(wine_mask)\nplt.axis('off')\nplt.show()","98cd4aa2":"wc = WordCloud(background_color=\"white\", max_words=50, mask=wine_mask,\n               stopwords=stopword, contour_width=2).generate(speech)\n\n\nplt.figure(figsize=(12,8))\nplt.imshow(wc)\nplt.axis('off')\nplt.tight_layout(pad=0)\nplt.show()","598e534b":"wine_mask = np.array(PIL.Image.open(\"..\/input\/cloud-1\/kissclipart-indian-map-black-and-white-clipart-india-map-30c30bb8a0ca57ad.jpg\"))","7316d749":"#Mask\nplt.imshow(wine_mask)\nplt.axis('off')\nplt.show()","2b879aea":"wc = WordCloud(background_color=\"white\", max_words=50, mask=wine_mask,\n               stopwords=stopword, contour_width=5,contour_color=\"black\").generate(speech)\n# show\nplt.figure(figsize=(20,10))\nplt.axis('off')\nplt.imshow(wc)\nplt.show()","88df9dc9":"#Mask\nwine_mask = np.array(PIL.Image.open(\"..\/input\/cloud-1\/dark_indian_map.jpg\"))\nplt.imshow(wine_mask)\nplt.axis('off')\nplt.show()","5668b311":"wc = WordCloud(background_color=\"white\", max_words=20, mask=wine_mask,\n               stopwords=stopword, contour_width=0.1,contour_color=\"grey\",min_font_size=10).generate(speech)\n# show\nplt.figure(figsize=(20,10))\nplt.axis('off')\nplt.imshow(wc)\nplt.show()","21fbdbdf":"**parsing link using beautiulsoup**","c2098d30":"# Libraries we are going to use in this\n\n`numpy` \n\n`requests` **for web scraping**\n\n`BeautifulSoup`**for web scraping**\n\n`collections` **will use collection's Counter for word count**\n\n`matplotlib.pylot` **for ploting purpose**\n\n`PIL` **for image reading**","482986d8":"# 3rd Mask\n\nlink : https:\/\/us.123rf.com\/450wm\/raccoondaydream\/raccoondaydream1602\/raccoondaydream160200077\/52985056-stock-vector-concept-map-of-india-vector-design-illustration-.jpg?ver=6","782af321":"# 2nd Mask\n\nlink : https:\/\/library.kissclipart.com\/20180903\/yzq\/kissclipart-indian-map-black-and-white-clipart-india-map-30c30bb8a0ca57ad.jpg","10ec8dea":"# WordCloud \n\n**In text analytics word cloud is widely used to represnt your text in more interactive way. It can be used to represnt most frequent,less frequent words,etc in text data.**","02f1ae27":"# Simple word cloud without any mask or background shape","e1ab977a":"**ploting bar plot of most common words**","522fc43f":"# 1st mask \n\nlink : https:\/\/images.indianexpress.com\/2017\/11\/cats47.jpg","56c48b21":"# Thank You","54a43e78":"# WordCloud section\n\n1. wordcloud with mask\n\n2. wordcloud without mask","7c0dfdcb":"# Word CLoud using mask(background shape)","657ae587":"# Text Analysis\n\n**Text analysis is used to perform operations on textual or unstructured data to get some insight or information out of it**\n\n**In this notebook we are going to analyze India's President Ram Nath Kovind's Independence day eve speech.**\n\nlink of speech transcript : https:\/\/presidentofindia.nic.in\/speeches-detail.htm?814"}}