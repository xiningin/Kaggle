{"cell_type":{"cc022e17":"code","826dea62":"code","b8226c5c":"code","bcb76ba2":"code","9112cb5c":"code","cb7fc901":"code","5f64693d":"code","e0c10dc6":"code","79543b71":"code","5fa92f61":"code","736783fc":"code","647c5b85":"code","a54daad8":"code","653871b8":"code","5ca61d3d":"code","651679a6":"code","d194022e":"code","d1748357":"code","55cdd68f":"code","a571a648":"code","d7603cb9":"code","161bb3f4":"code","b1be2167":"code","2b24a9a8":"code","cfd871a4":"code","784ce4be":"code","0eaa6ba9":"code","b62678ad":"code","a0dc2e3b":"code","f33b87c3":"code","c4c74053":"code","96b2dcf1":"code","c55699f9":"code","c14354ac":"code","899144a2":"code","a89612c8":"code","e039c0da":"code","efa34cd6":"code","5fcd6024":"code","24fb6015":"code","12beb836":"code","cc8a5378":"code","da69dba6":"code","d49d12ac":"code","c8e57ddf":"code","027b0c7b":"code","78764da3":"code","96a13a8f":"code","72a06373":"code","930ba983":"code","7d3b4769":"code","cce39845":"code","331cc4db":"code","9991d784":"code","1d16676e":"code","50d55f05":"code","d0637f0e":"code","d715e8a7":"code","a9357b71":"code","c641faf2":"code","fd4f2245":"code","53e47e51":"code","f43bd854":"code","55368c90":"code","7a9e8810":"code","b0e7c9ac":"code","f2d86b75":"code","494585c3":"code","0d6fa8ce":"code","07de7899":"code","77ff9a4e":"code","7dff08c7":"code","313bd83e":"code","21744478":"code","c9107ab4":"code","53e2ee68":"code","56a96848":"code","ecd31a22":"code","c374bf28":"code","8842b39a":"code","4c8a83aa":"code","430c05f7":"code","58416b62":"code","ef0c9eb5":"markdown","eb7a12d7":"markdown","1e311af4":"markdown","800764d6":"markdown","277614fa":"markdown","b291f02e":"markdown","0a2e86cf":"markdown","f8ce4de8":"markdown","b5b64815":"markdown","3ea3a319":"markdown","38cb6933":"markdown","6541d3a8":"markdown","80608e1c":"markdown","b805af6b":"markdown","69915865":"markdown","f2811a24":"markdown","58c8ab6a":"markdown","35129483":"markdown","cf99dc94":"markdown","eca25ff2":"markdown","b73b4ead":"markdown","4b2767c7":"markdown","63407e09":"markdown","fbdf152f":"markdown","3dfa9e2d":"markdown","09f4a3a7":"markdown","e3f3e671":"markdown","75678557":"markdown","855c80fe":"markdown","2a0ab158":"markdown","8e031f0f":"markdown","9a30fb1f":"markdown","7f28bb24":"markdown","1c5c5b4e":"markdown","3be7ad0f":"markdown","0be7c9cb":"markdown","eeb7a958":"markdown","557e2203":"markdown","8a965621":"markdown","cb1a35b3":"markdown","7951e2e4":"markdown","eadc2130":"markdown","240b045c":"markdown","32bd40d4":"markdown","15137599":"markdown","dfb88856":"markdown","d03f9b96":"markdown","7d5c4a72":"markdown","66edb3e2":"markdown","eaacb258":"markdown","acb898f2":"markdown","a33371d2":"markdown","0d0838f3":"markdown","0226e837":"markdown","b6693937":"markdown","c0d32572":"markdown","e13e3711":"markdown","89925bd3":"markdown","b7026546":"markdown","95159e55":"markdown","151767f4":"markdown","545ebebb":"markdown","8e337d70":"markdown","31f86968":"markdown","815b0bd0":"markdown","a8ae7bd1":"markdown","7583c19f":"markdown","16e55875":"markdown","cdc67271":"markdown","0417c221":"markdown","6488a726":"markdown","28c92e92":"markdown","ea698a9c":"markdown","0b3f86cd":"markdown","9557a86a":"markdown","b1483408":"markdown","1f722280":"markdown","e0fb2f34":"markdown","9a322606":"markdown","460ec8bf":"markdown","254e0aa0":"markdown","1d5872c3":"markdown","53fe66d5":"markdown","22439991":"markdown","7a2d5337":"markdown","a9cf49a5":"markdown","13afe832":"markdown","f616fbc8":"markdown","94157baf":"markdown","e5e063f4":"markdown","a1a57ad7":"markdown","0ad49dd6":"markdown","bf117040":"markdown","bb5f7146":"markdown","de2f4c3d":"markdown","c2284446":"markdown","41f9d392":"markdown","ba9bfbef":"markdown","07e684ce":"markdown","2f620dfa":"markdown","082a90d5":"markdown","03c82f0c":"markdown","49571d4e":"markdown","64a6b53a":"markdown","d40d74ad":"markdown","5df08a88":"markdown","fc9219a4":"markdown","55f2f901":"markdown","296f9cdb":"markdown","c9d8d9cc":"markdown","e08ff6d8":"markdown","138a4848":"markdown","f63f065b":"markdown","398331ab":"markdown","a9156493":"markdown","57017491":"markdown","66643459":"markdown"},"source":{"cc022e17":"import pandas as pd\nfrom matplotlib import pyplot as plt\n%matplotlib inline\nimport numpy as np\n!pip install pywaffle\nfrom pywaffle import Waffle\nimport seaborn as sns\nimport chart_studio.plotly as py\nimport plotly.graph_objs as go \nimport plotly.io as pio\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nimport plotly.express as px\nimport plotly.offline as pyo\n\ninit_notebook_mode(connected=True)","826dea62":"df = pd.read_csv('..\/input\/Mother_Jones_Mass_Shootings_Database_1982_2020.csv')","b8226c5c":"df.head()","bcb76ba2":"# First let's take a look at the columns we have\ndf.columns","9112cb5c":"# Now lets drop those that we don't need\ndf = df.drop(columns=['sources', 'mental_health_sources', 'mental_health_details','where_obtained',\n       'sources_additional_age'])","cb7fc901":"df.dtypes","5f64693d":"# Find NAN\nnan_df = df[df.isna().any(axis=1)]\ndisplay(nan_df.head())","e0c10dc6":"# Find missing data searching for '-' values\ndf.loc[df['age_of_shooter'] == '-']","79543b71":"df.loc[1, 'age_of_shooter'] = 48 #the average age of the 2 shooters\ndf.loc[2, 'age_of_shooter'] = 21","5fa92f61":"df.age_of_shooter = df.age_of_shooter.astype(int)","736783fc":"df.dtypes","647c5b85":"df.rename(columns={'age_of_shooter':'age'},inplace=True)","a54daad8":"df.gender.value_counts()","653871b8":"#replace \"M\",\"F\" values with \"Male\", \"Female\" to avoid inconsistencies\ndf.replace('M','Male', inplace=True)\ndf.replace('F','Female', inplace=True)","5ca61d3d":"df.loc[df['gender'] == '-']","651679a6":"#replace missing gender values \ndf.loc[1, 'gender'] = 'Male & Female' ","d194022e":"df.gender.value_counts()","d1748357":"df.race.value_counts()","55cdd68f":"#replacing values\ndf.replace('white','White', inplace=True)\ndf.replace('black','Black', inplace=True)\ndf.replace('White ','White', inplace=True) #string with a trailing white space\ndf.replace('-','Other', inplace=True)\ndf.replace('unclear','Unknown', inplace=True)","a571a648":"df.race.value_counts()","d7603cb9":"df.location.value_counts()","161bb3f4":"# Split the location values by comma using a lambda function\ndf['state'] = df.location.apply(lambda x: x.split(',')[1])","b1be2167":"df.state.value_counts().sort_values(ascending=False)","2b24a9a8":"df['state'] = df.state.str.strip()","cfd871a4":"us_state_abbrev = {\n    'Alabama': 'AL',\n    'Alaska': 'AK',\n    'Arizona': 'AZ',\n    'Arkansas': 'AR',\n    'California': 'CA',\n    'Colorado': 'CO',\n    'Connecticut': 'CT',\n    'Delaware': 'DE',\n    'D.C.': 'DC',\n    'Florida': 'FL',\n    'Georgia': 'GA',\n    'Hawaii': 'HI',\n    'Idaho': 'ID',\n    'Illinois': 'IL',\n    'Indiana': 'IN',\n    'Iowa': 'IA',\n    'Kansas': 'KS',\n    'Kentucky': 'KY',\n    'Louisiana': 'LA',\n    'Maine': 'ME',\n    'Maryland': 'MD',\n    'Massachusetts': 'MA',\n    'Michigan': 'MI',\n    'Minnesota': 'MN',\n    'Mississippi': 'MS',\n    'Missouri': 'MO',\n    'Montana': 'MT',\n    'Nebraska': 'NE',\n    'Nevada': 'NV',\n    'New Hampshire': 'NH',\n    'New Jersey': 'NJ',\n    'New Mexico': 'NM',\n    'New York': 'NY',\n    'North Carolina': 'NC',\n    'North Dakota': 'ND',\n    'Northern Mariana Islands':'MP',\n    'Ohio': 'OH',\n    'Oklahoma': 'OK',\n    'Oregon': 'OR',\n    'Palau': 'PW',\n    'Pennsylvania': 'PA',\n    'Puerto Rico': 'PR',\n    'Rhode Island': 'RI',\n    'South Carolina': 'SC',\n    'South Dakota': 'SD',\n    'Tennessee': 'TN',\n    'Texas': 'TX',\n    'Utah': 'UT',\n    'Vermont': 'VT',\n    'Virgin Islands': 'VI',\n    'Virginia': 'VA',\n    'Washington': 'WA',\n    'West Virginia': 'WV',\n    'Wisconsin': 'WI',\n    'Wyoming': 'WY',\n}","784ce4be":"df['state_code'] = df['state'].map(us_state_abbrev)","0eaa6ba9":"df[['state','state_code']]","b62678ad":"df.state.count() == df.state_code.count()","a0dc2e3b":"df.state.count()","f33b87c3":"df.state_code.count()","c4c74053":"# Check for NaN values\ndf.loc[df['state_code'].isna()]","96b2dcf1":"#replace Lousiana with Louisiana\ndf.state.replace('Lousiana','Louisiana', inplace=True)","c55699f9":"df['state_code'] = df['state'].map(us_state_abbrev)","c14354ac":"df.state.count() == df.state_code.count()","899144a2":"#using lambda split location by comma and keep the first string which represents the city\ndf['city'] = df.location.apply(lambda x: x.split(',')[0])\ndf['city'] = df.city.str.strip() #remove whitespaces","a89612c8":"df[['state','state_code','city']]","e039c0da":"df.rename(columns={'location.1':'shooting_area'}, inplace=True)","efa34cd6":"df.shooting_area.value_counts()","5fcd6024":"df[['case','summary','shooting_area']]","24fb6015":"df.shooting_area.replace('Other\\n','Other', inplace=True)\ndf.shooting_area.replace('school','School', inplace=True)\ndf.shooting_area.replace('\\nWorkplace','Workplace', inplace=True)\ndf.loc[0,'shooting_area'] = 'Market'\ndf.loc[5,'shooting_area'] = 'Festival'\ndf.loc[11,'shooting_area'] = 'Club'\ndf.loc[18,'shooting_area'] = 'Restaurant\/Cafe'\ndf.loc[24,'shooting_area'] = 'Shopping Mall\/Store'\ndf.loc[26,'shooting_area'] = 'Festival'\ndf.loc[33,'shooting_area'] = 'Shopping Mall\/Store'\ndf.loc[36,'shooting_area'] = 'Club'\ndf.loc[51,'shooting_area'] = 'Apartment'\ndf.loc[53,'shooting_area'] = 'Apartment'\ndf.loc[59,'shooting_area'] = 'Restaurant\/Cafe'\ndf.loc[63,'shooting_area'] = 'Restaurant\/Cafe'\ndf.loc[66,'shooting_area'] = 'Restaurant\/Cafe'\ndf.loc[69,'shooting_area'] = 'Nursing Home'\ndf.loc[73,'shooting_area'] = 'Shopping Mall\/Store'\ndf.loc[101,'shooting_area'] = 'Restaurant\/Cafe'\ndf.loc[114,'shooting_area'] = 'Restaurant\/Cafe'\ndf.loc[114,'shooting_area'] = 'Club'","12beb836":"df.shooting_area.value_counts()","cc8a5378":"df.weapons_obtained_legally.value_counts()","da69dba6":"df.weapons_obtained_legally.replace('Yes (\"some of the weapons were purchased legally and some of them may not have been\")','Yes', inplace=True)\ndf.weapons_obtained_legally.replace('Kelley passed federal criminal background checks; the US Air Force failed to provide information on his criminal history to the FBI','Unknown', inplace=True)\ndf.weapons_obtained_legally.replace('\\nYes','Yes', inplace=True)\ndf.weapons_obtained_legally.replace('Yes ','Yes', inplace=True)\ndf.weapons_obtained_legally.replace('-','Unknown', inplace=True)\ndf.weapons_obtained_legally.replace('Unkown','Unknown', inplace=True)\ndf.weapons_obtained_legally.replace('TBD','Unknown', inplace=True)\ndf.weapons_obtained_legally.replace('Other','Unknown', inplace=True)","d49d12ac":"df.weapons_obtained_legally.value_counts()","c8e57ddf":"df.prior_signs_mental_health_issues.value_counts()","027b0c7b":"df.prior_signs_mental_health_issues.replace('yes', 'Yes', inplace=True)\ndf.prior_signs_mental_health_issues.replace('Other', 'Unknown', inplace=True)\ndf.prior_signs_mental_health_issues.replace('Unclear ', 'Unknown', inplace=True) #trailing whitespace\ndf.prior_signs_mental_health_issues.replace('Unclear', 'Unknown', inplace=True)\ndf.prior_signs_mental_health_issues.replace('TBD', 'Unknown', inplace=True)\ndf.prior_signs_mental_health_issues.replace('-', 'Unknown', inplace=True)","78764da3":"df.prior_signs_mental_health_issues.value_counts()","96a13a8f":"df.drop(columns=['location'],inplace=True)","72a06373":"#check year range\ndf.year.unique()","930ba983":"tvictims_by_state = df.groupby('state_code')['total_victims'].sum().sort_values(ascending=True).reset_index()\ntvictims_by_state_asc = df.groupby('state_code')['total_victims'].sum().sort_values(ascending=False).reset_index()","7d3b4769":"print(\"\\nStates with most victims from mass shootings:\".upper())\ntvictims_by_state_asc.head(5)","cce39845":"df.loc[df['state_code']=='NV']","331cc4db":"#set style\nplt.style.use('fivethirtyeight')\n\n#create figure and ax\nf, ax = plt.subplots(figsize=(20, 10))\n\n#set color\nbar_colors = sns.light_palette(\"#d61822\",36)\n\n#plot data\nplt.bar(tvictims_by_state.state_code, tvictims_by_state.total_victims, color = bar_colors, width = 0.8)\n\nax.tick_params(axis=\"x\", labelsize=18)\nax.tick_params(axis=\"y\", labelsize=18)\n\nax.xaxis.grid(False) #remove vertical lines for a cleaner visualisation\n\n#labels and title\nplt.xlabel('state', labelpad=15, fontsize = 20)\nplt.ylabel('total cassualties', labelpad=15, fontsize = 20)\nplt.title('Total Victims by State from 1982 to 2020', pad=30, fontsize=26)\n\nplt.show()","9991d784":"#prepare data for geomap\ngeo_data_sumcolumns = ['total_victims','fatalities', 'injured'] #columns we plan to sum up\ngeo_data = df.groupby(['state_code','state'])[geo_data_sumcolumns].sum().sort_values(by='total_victims').reset_index()","1d16676e":"geo_data.head()","50d55f05":"geo_data['text'] = geo_data['state'] + '<br>' + \\\n                'Injured: ' + geo_data['injured'].astype(str) + '<br>' + \\\n                'Fatalities: ' + geo_data['fatalities'].astype(str)\n                    \n\ndata = dict(type = 'choropleth', \n            locations = geo_data['state_code'], \n            locationmode = 'USA-states',  \n            \n            colorscale = [[0, '#ffa1a1'],\n                          [0.05, '#ff655c'],\n                          [0.4, '#fc4136'], \n                          [1, '#f20000']], #colorblind safe color pallete\n            \n            text = geo_data['text'], #hover text\n            z = geo_data['total_victims'],\n            hovertemplate = \"<b>Total Victims: %{z}<\/b><br>\" + \"%{text}\" +'<extra><\/extra>',\n            zauto = True,\n            zmax=620, zmin=150,\n            autocolorscale=False,\n            marker_line_color='white', #line markers between states\n            colorbar = {'title': 'Total Victims'},\n            reversescale = False, \n            showscale = False,\n        )\n\nlayout = dict(geo = {'scope':'usa'}, template = 'plotly_white')\nvictims_map = go.Figure(data = [data], layout = layout)\n\nvictims_map.update_layout(\n    title_text='<b>US Mass Shootings from 1982 to 2020 <\/b> <br>Total Victims by State<\/b><br>(Hover for breakdown)',\n    geo = dict(\n        scope='usa',\n        projection=go.layout.geo.Projection(type = 'albers usa'),\n        showlakes=True, # lakes\n        lakecolor='rgb(255, 255, 255)'),\n)\n\niplot(victims_map)","d0637f0e":"mapbox_access_token = 'pk.eyJ1IjoiYW5kcmFtYXJhY2l1YyIsImEiOiJjazc0ZXVqYTYwbGNnM2tudnZnc3B1Y2lwIn0.lDDkLC3qCZfpH7swCmk6Iw'\n\nsite_lat = df.latitude\nsite_lon = df.longitude\n\nhover_details = '<b>Location: <\/b>' + df.city + '<br>'\\\n                + '<b>Event: <\/b>' + df.case.str.title() + '<br>' \\\n                + '<b>Total Victims: <\/b>' + df.total_victims.astype(str) + '<br>' \\\n                + '<b>Injured: <\/b>' + df.injured.astype(str) + '<br>' \\\n                + '<b>Deaths: <\/b>' + df.fatalities.astype(str) + '<br>' \\\n                + '<b>Year: <\/b>' + df.year.astype(str) + '<br>' \\\n                \n                \nsize_marker_guide = df.fatalities\ndata = [\n    go.Scattermapbox(\n        lat=site_lat,\n        lon=site_lon,\n        mode='markers',\n        marker=dict(\n            size=size_marker_guide,\n            color= 'rgb(255, 0, 0)',\n            reversescale = False,\n            cmin = 0,\n            cmax = 800,\n        ),\n        text=hover_details,\n        hoverinfo= 'text'\n    ),\n]\nlayout = go.Layout(\n    title='<b>1982 - 2020 Deadliest US Mass Shootings <\/b><br>(Hover for breakdown)',\n    #autosize=True,\n    template = 'ggplot2',\n    hovermode='closest',\n    showlegend=False,\n    geo = dict(\n        scope='usa',\n        projection=go.layout.geo.Projection(type = 'albers usa'),\n        showlakes=True, # lakes\n        lakecolor='rgb(255, 255, 255)'),\n    mapbox=dict(\n        accesstoken=mapbox_access_token,\n        bearing=0,\n        center=dict(\n            lat=38,\n            lon=-94,\n        ),\n        pitch=0,\n        zoom=3,\n        style='light',\n                \n    ),\n)\n\nfig = dict(data=data, layout=layout)\n\niplot(fig)","d715e8a7":"#Group by state and count shootings\ntshootings_by_state = df.groupby('state_code')['case'].count().sort_values(ascending=False).reset_index()\ntshootings_by_state.rename(columns={'case':'number_of_incidents'}, inplace=True)\n\nprint(\"\\nStates with most mass shootings:\".upper())\ntshootings_by_state.head()","a9357b71":"#prepare data for analysis\nshootings_per_year = df.groupby('year')['case'].count().reset_index() #group shootings by year\nshootings_per_year.rename(columns={'case':'shootings'}, inplace=True)\n\nprint(\"\\nTotal Number of Mass Shootings by Year:\".upper())\nshootings_per_year","c641faf2":"colorscales = [[0, '#ff4040'], [0.5, '#d72d2a'],[0.8,'#af1916'],[1,'#8a0000']]\n\nfig = px.bar(shootings_per_year, y='shootings', x='year', text='shootings', title='Number of Incidents by Year', template='gridon', color_continuous_scale=colorscales)\nfig.update_traces(texttemplate='%{text:.2}', textposition='outside')\nfig.update_layout(uniformtext_minsize=8, uniformtext_mode='hide', yaxis_title=\"total number of mass shootings\",\n    xaxis_title=\"year\",\n        xaxis=dict(\n        #tickmode='linear',\n        ticks='outside',\n        tick0=0,\n        ticklen=4,\n        tickwidth=2,\n        tickcolor='#000'\n    ))\n\nfig.show()\n","fd4f2245":"#Create a dataframe with total victims (v), fatalities (f), injured (i) grouped by year\nvfi_sumcolumns = ['total_victims','fatalities','injured'] #columns that need to be sumed\nvfi_by_year = df.groupby(['year'])[vfi_sumcolumns].sum().reset_index() ","53e47e51":"print(\"\\nTotal shootings Cassualties by Year:\".upper())\nvfi_by_year","f43bd854":"fig = plt.figure(figsize=(20,5))\n\n# Create traces\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=vfi_by_year.year, y=vfi_by_year.total_victims,\n                    mode='lines',\n                    name='total victims',\n                    line=dict(color='royalblue', width=3))),\nfig.add_trace(go.Scatter(x=vfi_by_year.year, y=vfi_by_year.fatalities,\n                    mode='lines+markers',\n                    name='deaths',\n                    line=dict(color='firebrick', width=3))),\n\nfig.update_layout(\n    barmode='stack',\n    title='<b>Mass Shootings Total Victims and Fatalities Over Time<\/b>',\n    xaxis_tickfont_size=14,\n    yaxis=dict(\n        title='casualties',\n        titlefont_size=16,\n        tickfont_size=14,\n    ),\n    template='plotly_white',\n    legend=dict(\n        x=0.1,\n        y=0.9,\n        bgcolor='#FFFFFF',\n        bordercolor='#a0a0a0'\n    ))","55368c90":"fig = go.Figure(data=[\n    go.Bar(name='Fatalities', x=vfi_by_year.year, y=vfi_by_year.fatalities,marker_color='#d61822'),\n    go.Bar(name='Injured', x=vfi_by_year.year, y=vfi_by_year.injured, marker_color='#ffb53a')\n])\n# Change the bar mode\nfig.update_layout(\n    barmode='stack',\n    title='<b>Annual mass shootings casualties<\/b><br>(Hover for breakdown)',\n    xaxis_tickfont_size=14,\n    yaxis=dict(\n        title='casualties',\n        titlefont_size=16,\n        tickfont_size=14,\n    ),\n    template='plotly_white',\n    legend=dict(\n        x=0.1,\n        y=0.9,\n        bgcolor='#FFFFFF',\n        bordercolor='#a0a0a0'\n    ),\n    bargap=0.15, # gap between bars of adjacent location coordinates.\n    bargroupgap=0.1 # gap between bars of the same location coordinate.\n                 )\nfig.show()","7a9e8810":"#prepare the dataframe\ndeadliest_mass_shootings = df.sort_values(by='fatalities', ascending=False).head(5).reset_index()\n\n#capitalize values in 'case' column\ndeadliest_mass_shootings['case'] = deadliest_mass_shootings['case'].str.title()","b0e7c9ac":"print(\"\\nThe Worst Mass Shootings in US:\".upper())\ndeadliest_mass_shootings[['case','year','total_victims','fatalities','injured']]","f2d86b75":"#set seaborn style\nsns.set(style=\"ticks\")\n\n#plt style\nplt.style.use('seaborn-white')\n\n#initialize figure\nf, ax = plt.subplots(figsize=(10,5))\n\n#font\nfont = {'family': 'sans',\n        'color':  'darkred',\n        'weight': 'normal',\n        'size': 16,\n        }\n\n#color for highest value\nclrs = ['#424242' if (x < max(deadliest_mass_shootings.fatalities)) else '#ff0000' for x in deadliest_mass_shootings.fatalities ]\n\n\n#plot the total fatalities\nsns.barplot(x='fatalities', y='case', data=deadliest_mass_shootings, label='Total Deaths', palette=clrs)\n\n#annotation\nfor p in ax.patches:\n    width = p.get_width()\n    ax.text(width - 2.2  ,\n            p.get_y()+p.get_height()\/2.+0.1,\n            '{:1.0f}'.format(width),\n            ha=\"center\",fontsize=14,color='white')\n    \nax.tick_params(axis='x', labelsize=12)\nax.tick_params(axis='y', labelsize=14)\n\n\n#labeling\nplt.xlabel('victims killed', labelpad=12, fontsize=16, fontdict=font)\nplt.ylabel('event', labelpad=15, fontsize=16, fontdict=font)\nplt.title('Worst Mass Shootings in America (1982-2020)', pad=30, fontsize=18, color='black', fontdict=font)\n \n\n\nsns.despine(top=True, right=True, left=False, bottom=False, offset=None, trim=False)\n\nplt.tight_layout()\n\nplt.show()\n","494585c3":"shootings_by_gender = df.groupby('gender')['case'].count().reset_index()\nshootings_by_gender.rename(columns={'case':'shootings'},inplace=True)","0d6fa8ce":"print(\"\\nShootings by Gender:\".upper())\nshootings_by_gender","07de7899":"plt.style.use('fivethirtyeight')\n\ncolors = [\"#ffb53a\",\"#e02a26\", \"#7c7c7c\" ]\nfig = px.pie(shootings_by_gender, values='shootings', names='gender', hole = .5, title='<b>Shootings By Gender<\/b>', template='plotly_white'\n                                           )\nfig.update_traces(textposition='outside', textinfo='percent+label',marker=dict(colors=colors))\nfig.show()","77ff9a4e":"weapons_obtained = df.weapons_obtained_legally.value_counts().reset_index()\n\nweapons_obtained.rename(columns={'index':'answer'},inplace=True)\nweapons_obtained.rename(columns={'weapons_obtained_legally':'count'},inplace=True)\n\nprint(\"\\nWere the weapons obtained legally?:\".upper())\nweapons_obtained.head()","7dff08c7":"#calculate the percentage of weapons obtained legally\npercentage_weapons = df.weapons_obtained_legally.value_counts(normalize=True) * 100\npercentage_weapons","313bd83e":"weapons = {'Yes': 70.3, 'Unknown':16.1, 'No':13.5}\n\nplt.style.use('seaborn')\n\nfig = plt.figure(\n    FigureClass=Waffle, \n    rows=5, \n    values=weapons, \n    colors=(\"#d61822\", \"#7c7c7c\", \"#FFB53A\"),\n    title={'label': 'Were the weapons obtained legally?', 'loc': 'left', 'fontsize': 22, 'pad':20},\n    labels=[\"{0} ({1}%)\".format(k, v) for k, v in weapons.items()],\n    legend={'loc': 'upper left', 'bbox_to_anchor': (1,1), 'ncol': len(data), 'fontsize': 15, 'framealpha': 0},\n    tight=False,\n    figsize=(10, 5)\n)\nfig.set_facecolor('white')\nplt.show()","21744478":"age = df.age\nage.min() #find the lowest value in the age column","c9107ab4":"df[df['age'] == 11]","53e2ee68":"age.max() #find the lowest value in the age column","56a96848":"df[df['age'] == age.max()]","ecd31a22":"plt.style.use('fivethirtyeight')\nplt.title(\"Mass Shooters' Age Distribution\")\nax = sns.distplot(age, norm_hist=True, color='#e02a26')","c374bf28":"plt.style.use('fivethirtyeight')\nplt.hist(age, range=(0,80), color='#e02a26')\nplt.title(\"Mass Shooters' Age\")\nplt.xlabel('age')\nplt.ylabel('count')","8842b39a":"race = df.race.value_counts().reset_index()\nrace.rename(columns={'race':'shootings','index':'race'}, inplace=True)\nprint(\"\\nShootings by Race (1982-2020):\".upper())\nrace","4c8a83aa":"df.race.value_counts(normalize=True) * 100 #find the race percentage","430c05f7":"fig = px.bar(race, x='race', y='shootings')\n\nfig.update_traces(texttemplate='<b>%{y:.2}<\/b>',  marker_color='#e02a26',textposition='outside')\n\nfig.update_layout(uniformtext_minsize=8, uniformtext_mode='hide', yaxis_title=\"number of incidents\", title='<b>Shootings by Race<\/b>',\n    xaxis_title=\"race\",\n        xaxis=dict(\n        #tickmode='linear',\n        ticks='outside',\n        tick0=0,\n        ticklen=4,\n        tickwidth=2,\n        tickcolor='#000'\n    ), \n        template='gridon')\n\nfig.show()\n","58416b62":"shooting_location = df.shooting_area.value_counts().reset_index()\nshooting_location.rename(columns={'shooting_area':'incidents','index':'area'}, inplace=True)\n\nfig = px.bar(shooting_location, x='area', y='incidents')\n\nfig.update_traces(texttemplate='<b>%{y:.2}<\/b>',  marker_color='#e02a26',textposition='outside')\n\nfig.update_layout(uniformtext_minsize=8, uniformtext_mode='hide', yaxis_title=\"number of incidents\", title='Shootings Incident Locations',\n    xaxis_title=\"shooting area\",\n        xaxis=dict(\n        #tickmode='linear',\n        ticks='outside',\n        tick0=0,\n        ticklen=4,\n        tickwidth=2,\n        tickcolor='#000'), \n                 )\n\nfig.show()\n","ef0c9eb5":"### 1. Dropping columns we don't need","eb7a12d7":"#### Final race breakdown after cleanup:","1e311af4":"# Data Exploration & Visualizations","800764d6":"### 3. Check for missing data","277614fa":"### Number of Shootings by Year Visualization","b291f02e":"112 mass shootings have been carried out in the USA by male shooters and only three mass shootings have been carried out by women.\n95.7 % of the mass killers were men, while only 2.56% were women. 1.71% of the shootings had 2 authors both a male and a female.","0a2e86cf":"### 10.1. Age Distribution","f8ce4de8":"## 13. Cleaning 'prior_signs_mental_health_issues' column","b5b64815":"## 8. Mass Shootings By Gender","3ea3a319":"We need to clean the data so at the end to remain with only these 3 variables representing gender: \"Male\", \"Female\" and \"Male & Female\".","38cb6933":"'location.1' does not sufficently describe the data. Let's rename it to a name that's easier to understand.","6541d3a8":"## 11. Shootings by Race","80608e1c":"### 11.1 Shootings by Race | Data Visualization","b805af6b":"### 9.1. Waffle Chart Visualization using Pywaffle","69915865":"#### Final cleaned breakdown:","f2811a24":"There were 16 school shootings since 1982. ","58c8ab6a":"We encountered an error when trying to change the 'age_of_shooter' data type, showing that we have missing data in our column. Let's fix that.","35129483":"## 9. Adding a state code column","cf99dc94":"- Are mass shootings on the rise? \n- What state\/city had the most victims from mass shootings?\n- What states have the highest number of mass shootings?\n- What was the year with most mass shootings?\n- What were the deadliest shootings in US?\n- Are most mass killers males or females?\n- Were the weapons used in shootings obtained legally?\n- What is the age of the youngest \/ oldest shooter?\n- What is the race of the shooters?\n- How many school shootings have been since 1982?","eca25ff2":"From the distribution below we can see that most mass killers had between 20-50 years old. \n\n<b>Most mass shooters were in their 40s.<\/b>","b73b4ead":"The breakdown of 'shooting_area':","4b2767c7":"\"Our research focused on <b>indiscriminate rampages in public places resulting in four or more victims killed by the attacker<\/b>. We exclude shootings stemming from more conventionally motivated crimes such as armed robbery or gang violence. (Or in which the perpetrators have not been identified.)\"<br>\n<br>\nSource: https:\/\/www.motherjones.com\/politics\/2012\/07\/mass-shootings-map\/ ","63407e09":"#### Load the dataset","fbdf152f":"#### Final shooting_area breakdown after cleanup:","3dfa9e2d":"## 7. Cleaning \"location\" column","09f4a3a7":"## 14. Dropping columns we don't longer need","e3f3e671":"#### Remove whitespaces from all the state values:","75678557":"## About this dataset","855c80fe":"### 8.1. Shootings by Gender | Pie Chart Visualization","2a0ab158":"How Mother Jones defines mass shootings:","8e031f0f":"Reading the summary, it is clear that the attack was made by two shooters, a male and female. We can safely replace \"-\" with \"Male & Female\"","9a30fb1f":"The youngest shooter was <b> 11 years old<\/b>, named Andrew Douglas Golden. In 1998 together with Mitchell Scott Johnson, 13, two juveniles, ambushed students and teachers as they left the school and killed 5 people and wounded 10.","7f28bb24":"## 11. Cleaning and exploring 'location.1' column","1c5c5b4e":"#### Dataset used (where to download):","3be7ad0f":"#### 1. Data Preparation and Cleaning\nLoad the dataset, clean the dataset, deal with missing values, drop columns, change data types, add new relevant columns.\n#### 2. Data Exploration and Visualization\nAnalyze and explore the data to get answers to our research questions. Make visualizations (bar graphs, line graphs, pie charts, waffle charts, geo maps, histograms) of our data findings that will help us get a visual idea of patterns and trends.","0be7c9cb":"After analyzing the descriptions of the shootings, we can replace some of the 'Other' values with more relevant data and find some incident location patterns we can use. ","eeb7a958":"Yes, they are. The number of mass shootings is rapidly increasing, especially in the last decade, <b> 2018<\/b> being the year with the most shootings, with a total of 12 shootings. <br>\n","557e2203":"#### Original breakdown of the weapons_obtained_legally values:","8a965621":"The deadliest shootings were the Las Vegas Strip with 58 fatalities, followed by the Orlando Nightclub Massacre with 49 deaths and Virgina Tech Massacre with 55 total fatalities.","cb1a35b3":"## 9. Were the weapons used in shootings obtained legally?","7951e2e4":"## 7. The Worst Mass Shootings in US until 2020","eadc2130":"## 8. Adding a 'state' column:","240b045c":"***","32bd40d4":"To add column with the U.S. state abbreviations we will need a dictionary that we will use to \"translate\" the states' full-names to two letter acronyms. We will obtain this result by using the <b>.map()<\/b> function.","15137599":"## 12. Cleaning weapons_obtained_legally","dfb88856":"We need to clean the values, so at the end to remain with 7 variables representing the following ethnicities: \"White\", \"Black\", \"Latino\", \"Asian\", \"Native American\", \"Other\", \"Unknown\".","d03f9b96":"We want to obtain a breadown containing only 3 values: \"Yes\", \"No\", \"Unknown\".","7d5c4a72":"This analysis is based on data on US Mass Shootings provided by Mother Jones and it covers an in-depth look at mass shootings cases from 1982 to 2020 (February).","66edb3e2":"### 2. Checking data types","eaacb258":"### 4. Cleaning 'age_of_shooter' column","acb898f2":"#### Replacing missing values with accurate data","a33371d2":"#### Renaming \"age_of_shooter\" column to \"age\"","0d0838f3":"### Question: Which state had the most victims from mass shootings?","0226e837":"## Research Questions to Answer","b6693937":"#### Final gender breakdown after cleanup:","c0d32572":"The oldest shooter William D. Baker, <b>66 years old<\/b>, opened fire in 2001 at his former Navistar workplace, killed 5 people and injured 4, and then commited suicide.","e13e3711":"#### Dictionary translating full name US states to two-letters state abbreviations:","89925bd3":"#### Final weapons_obtained_legally breakdown after cleanup:","b7026546":"## More than half (55%) of mass shooters were white.","95159e55":"## 5. Cleaning 'gender' column","151767f4":"---","545ebebb":" We will need to change the 'age_of_shooter' data type to int.","8e337d70":"#### Convert data type from \"object\" to \"int \"","31f86968":"We'll count the number of values in df.state and compare it to the number of values in df.state_code. \n\n- If they're equal <i>(result is True)<\/i>, then the conversion was a success.<br>\n\n- If the result is False, then some values weren't converted and we might have to deal with some missing\/wrong data.","815b0bd0":"#### Question: What was the youngest shooter?","a8ae7bd1":"## 10. Add a city column","7583c19f":"Succes!","16e55875":"Let's find the value that couldn't be converted ","cdc67271":"***","0417c221":"#### Original breakdown:","6488a726":"## 1. Total Victims by State (1982 - 2020)","28c92e92":"### What includes (after cleanup):","ea698a9c":"The data type of the 'age_of_shooter' column is set as \"object\". We need to convert the columns data type from object to int using the.astype() function. ","0b3f86cd":"Clearly, <b>2017 was the year with most casualties <\/b> from mass shootings: \n- 587 injured\n- 117 fatalities","9557a86a":"## 6. Cleaning 'race' column","b1483408":"Analysis made on: 4 March 2020 by Andra Maraciuc","1f722280":"### 1st Visualization","e0fb2f34":"Create a 'state_code' column by mapping 'state' to 'us_state_abbrev':","9a322606":"- US Mass Shootings, 1982-2020: Data From Mother Jones\u2019 Investigation (download link): https:\/\/www.motherjones.com\/politics\/2012\/12\/mass-shootings-mother-jones-full-data\/","460ec8bf":"## 6. Annual Mass Shootings Cassualities | Deaths and Injured","254e0aa0":"### 5.1  Total Victims and Deaths | Data Visualization","1d5872c3":"### Rough Breakdown of Tasks","53fe66d5":"### 2nd Visualization (GEO)","22439991":"#### Find missing gender value:","7a2d5337":"### 70% of the weapons used in the mass shootings were obtained legally. ","a9cf49a5":"## 12. Shooting Area ","13afe832":"#### 1 value wasn't converted.","f616fbc8":"## 3. Total Number of Mass Shootings by State (1982 - 2020)","94157baf":"#### Checking to see if all the states were converted to state codes","e5e063f4":"#### Importing necessary Python modules","a1a57ad7":"#### Question: Are mass shootings on the rise? What was the year with most mass shootings?","0ad49dd6":"The original breakdown of number of mass shootings by race:","bf117040":"#### Question: How many school shootings have been since 1982?","bb5f7146":"#### Question: What was the oldest shooter?","de2f4c3d":"## 2. Deadliest US Mass Shootings from 1982 to 2020 Visualization (using MAPBOX)","c2284446":"#### Replace some 'other' values with more specific \"incident areas\"","41f9d392":"### 7.1 Worst Mass Shootings in US until 2020 | Data Visualization","ba9bfbef":"# Mass Shootings in USA (1982-2020) - Exploratory Analysis","07e684ce":"We've found <b>two missing values<\/b> at index 1 and 2, in the 'age_of_shooter' column. We could drop them or replace them with a different value using a median\/mean.\n\nIn this particular case, the missing data is public and can be found online. This will allow us to fill the missing values with real data, accurately.\n \n- <b>Case 1<\/b>: \"David Nathaniel Anderson (age 47) and his girlfriend Francine Graham (age 50)\". <br> <i>Source: https:\/\/en.wikipedia.org\/wiki\/2019_Jersey_City_shooting<\/i>\n\n- <b>Case 2<\/b>: \"The FBI identified the gunman as Mohammed Saeed Alshamrani, 21\". <br> <i>Source: https:\/\/en.wikipedia.org\/wiki\/Naval_Air_Station_Pensacola_shooting<\/i>","2f620dfa":"## 5. Annual Mass Shootings Cassualities | Total Victims and Deaths","082a90d5":"<b>Final conversion:<\/b>","03c82f0c":"We have 1 instance where the the state was <b> not converted due to a typo <\/b> ('Lousiana' instead of 'Louisiana'). Let's fix that.","49571d4e":"The original breakdown of number of mass shootings by location:","64a6b53a":"<b>California<\/b> has had the most mass shooting events, with a total of <b>20 shootings<\/b> since 1982, followed by <b>Florida<\/b> with 12 total shootings, and <b>Texas<\/b> with 11 shootings. <br>\n\n<i>*Conclusions based on data covering events that happened between 1982-2020.<\/i>","d40d74ad":"#### Replace the values with relevant data","5df08a88":"# Data Preparation and Cleaning","fc9219a4":"###  96% of shooters were men","55f2f901":"55% of the attackers were white, 17.7% were black and 8.4% were latino.","296f9cdb":"## 4. Total Number of Mass Shootings by Year (1982 - 2020)","c9d8d9cc":"It would be helpful to split this data and <b>create two additional columns<\/b> one representing the <b>\"city\"<\/b>, while the other the <b>\"state\"<\/b>. This will help us analyze the data better and create valuable visualizations.","e08ff6d8":"<b>Nevada<\/b> has had the most victims from mass shootings, due to the Las Vegas Strip Massacre on October 1, 2017, where a 64 year old white male opened fire and killed 58 people and injured 546 people. <br>\n\nFollowing on the list is <b>California<\/b> with 299 total victims, and <b>Texas<\/b> with 296 total victims. <br>\n\n<i>*Conclusions based on data covering events that happened between 1982-2020.<\/i>","138a4848":"## 10. Age of the Shooters Analysis","f63f065b":"To see exactly where the deadliest shootings happened on the US map, we will use MAPBOX mapping platform and their geolocation API.\nWe'll need a mapbox access token, latitude and longitude coordonates.","398331ab":"### Rename column to 'shooting_area'","a9156493":"### Question: Which state had the most mass shootings?","57017491":"The original breakdown of number of mass shootings by gender:","66643459":"- <b>case<\/b>: the name of the shooting event\n- <b>date<\/b>: date of the shooting\n- <b>summary<\/b>: short description of the shooting\n- <b>fatalities<\/b>: the number of people who have died <i>(doesn't include the attacker)<\/i>\n- <b>injured<\/b>: the number of people who have been injured <i>(doesn't include the attacker)<\/i>\n- <b>total_victims<\/b>: total number of cassualties (fatalities and injured together)\n- <b>shooting_area<\/b>: the area where the incident happened (school, workplace, market etc) \n- <b>age<\/b>: age of the shooter\n- <b>prior_signs_mental_health_issues<\/b>: information on if the perpator had mental health issues\n- <b>weapons_obtained_legally<\/b>: shows if the shooter obtained the weapons legally or not\n- <b>weapon_type<\/b>: type of weapon used in shooting\n- <b>weapon_details<\/b>: details about the weapon\n- <b>race<\/b>: the race of the shooter\n- <b>gender<\/b>: the gender of the shooter\n- <b>latitude<\/b>: latitude coordonates of the attack\n- <b>longitude<\/b>: longitude coordonates of the attack\n- <b>type<\/b>: type of shooting (mass or spree)\n- <b>year<\/b>: year of the shooting\n- <b>state<\/b>: full state name where the shooting happened\n- <b>state_code<\/b>: two letter state code\n- <b>city<\/b>: the city where the shooting took place"}}