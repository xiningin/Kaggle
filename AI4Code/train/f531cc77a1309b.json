{"cell_type":{"3315422e":"code","da9a4497":"code","868569cc":"code","4427e6b9":"code","67039438":"code","3d7e1cd4":"code","f3f58d0d":"code","f31b4e04":"code","8dcf5053":"code","27add64c":"code","32d36e8c":"code","37690a28":"code","10000150":"code","98785837":"code","a0dcdc94":"code","0671a87c":"code","b2f37f52":"code","3ccb64fe":"code","0528510b":"code","d0542765":"code","dc42d02f":"code","4317f739":"code","e5c4aa58":"code","d2cee8c7":"code","c3750ad1":"code","a0ee027e":"code","ec5a2eb1":"code","6e174ba5":"code","bf91faad":"code","13fe1071":"code","413f7a65":"code","009cbf51":"code","8203a93b":"code","d75a4bc2":"code","6ae32784":"code","bc851b97":"code","edea292c":"code","f5827125":"code","d7fd2505":"code","44c1f17c":"code","d3df6ca0":"code","751fd7b3":"code","7fa8de0a":"code","83e0c640":"code","e0dbdc53":"code","f243cbe3":"code","5bbae18f":"code","2f76412d":"code","6c4e4029":"code","887db65c":"markdown","71100eb1":"markdown","57465c47":"markdown","f85577cc":"markdown","f29a328d":"markdown","76946c63":"markdown","4ba0812a":"markdown","f2155e42":"markdown"},"source":{"3315422e":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","da9a4497":"#!pip install chart_studio\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n#import plotly.graph_objs as go\n#import chart_studio.plotly as py\n#import plotly.offline as pyo\n#import chart_studio.plotly as py","868569cc":"df = pd.read_csv('..\/input\/av-janatahack-machine-learning-in-agriculture\/train_yaOffsB.csv')\ndf_test = pd.read_csv('..\/input\/av-janatahack-machine-learning-in-agriculture\/test_pFkWwen.csv')","4427e6b9":"df_original = df.copy()\ndf_test_original = df_test.copy()","67039438":"print(df.shape)\ndf.head()","3d7e1cd4":"print(df_test.shape)\ndf_test.head()","f3f58d0d":"df.describe()","f31b4e04":"df.dtypes","8dcf5053":"cat_col = ['Crop_Type','Soil_Type','Pesticide_Use_Category','Season']\nnum_col = ['Estimated_Insects_Count','Number_Doses_Week','Number_Weeks_Used','Number_Weeks_Quit']\ntag_col = 'Crop_Damage'\n","27add64c":"df[tag_col].value_counts()","32d36e8c":"# data = [go.Histogram(x = df[tag_col])]\n# layout = go.Layout(title = 'Crop Damage')\n# fig = go.Figure(data = data, layout = layout)\n# py.iplot(fig, filename='jupyter-basic_bar')\n#pyo.plot(fig)","37690a28":"df[tag_col].value_counts().plot.bar()","10000150":"plt.figure(1)\nsubplotplace = 221\nfor col in cat_col:\n    plt.subplot(subplotplace)\n    df[col].value_counts(normalize = True).plot.bar(figsize = (20,10),title = col.replace('_',' '))\n    subplotplace += 1","98785837":"plt.figure(1,figsize = (10,20))\nsubplotplace = 421\nfor col in num_col:\n    plt.subplot(subplotplace)\n    sns.distplot(df[col])\n    subplotplace += 1\n    plt.subplot(subplotplace)\n    df[col].plot.box()\n    subplotplace += 1\n    ","a0dcdc94":"#plt.scatter(df['ID'], df['Estimated_Insects_Count'])","0671a87c":"df.boxplot(column = ['Estimated_Insects_Count'], by = 'Soil_Type')","b2f37f52":"plt.figure(1)\n#subplotplace = 221\nfor col in cat_col:\n    p =pd.crosstab(df[col],df[tag_col]) \n    #plt.subplot(subplotplace)\n    p.div(p.sum(1).astype(float), axis=0).plot(kind=\"bar\", stacked=True, figsize=(10,4))\n    #subplotplace += 1","3ccb64fe":"plt.figure(1)\nsubplotplace = 221\nfor col in num_col:\n    plt.subplot(subplotplace)\n    df.groupby(tag_col)[col].mean().plot.bar(figsize = (18,10),title = col.replace('_',' '))\n    subplotplace += 1","0528510b":"df[df['Pesticide_Use_Category'] == 2].head()","d0542765":"matrix = df.corr() \nf, ax = plt.subplots(figsize=(25, 12)) \nsns.heatmap(matrix, vmax=.8, square=True, cmap=\"RdYlGn\",annot = True);","dc42d02f":"df.isnull().sum()","4317f739":"df.loc[(df['Pesticide_Use_Category'] ==1) & (df['Number_Weeks_Used'].isnull()),'Number_Weeks_Used'] = df[df['Pesticide_Use_Category'] ==1]['Number_Weeks_Used'].median()\ndf.loc[(df['Pesticide_Use_Category'] ==2) & (df['Number_Weeks_Used'].isnull()),'Number_Weeks_Used'] = df[df['Pesticide_Use_Category'] ==2]['Number_Weeks_Used'].median()\ndf.loc[(df['Pesticide_Use_Category'] ==3) & (df['Number_Weeks_Used'].isnull()),'Number_Weeks_Used'] = df[df['Pesticide_Use_Category'] ==3]['Number_Weeks_Used'].median()","e5c4aa58":"df_test.loc[(df_test['Pesticide_Use_Category'] ==1) & (df_test['Number_Weeks_Used'].isnull()),'Number_Weeks_Used'] = df_test[df_test['Pesticide_Use_Category'] ==1]['Number_Weeks_Used'].median()\ndf_test.loc[(df_test['Pesticide_Use_Category'] ==2) & (df_test['Number_Weeks_Used'].isnull()),'Number_Weeks_Used'] = df_test[df_test['Pesticide_Use_Category'] ==2]['Number_Weeks_Used'].median()\ndf_test.loc[(df_test['Pesticide_Use_Category'] ==3) & (df_test['Number_Weeks_Used'].isnull()),'Number_Weeks_Used'] = df_test[df_test['Pesticide_Use_Category'] ==3]['Number_Weeks_Used'].median()","d2cee8c7":"df['total_doses'] = (df['Number_Doses_Week'] * df['Number_Weeks_Used'] )\ndf_test['total_doses'] = df_test['Number_Doses_Week'] * df_test['Number_Weeks_Used']\ndf.groupby(tag_col)['total_doses'].mean().plot.bar(figsize = (8,5),title = 'Total Doses')","c3750ad1":"df_test.isnull().sum()","a0ee027e":"for col in num_col:\n    df[col+\"_log\"] = np.cbrt(df[col]) \n    df[col+\"_log\"].hist(bins=20) \n    df_test[col+\"_log\"] = np.cbrt(df_test[col])","ec5a2eb1":"plt.figure(1,figsize = (10,20))\nsubplotplace = 421\nfor col in num_col:\n    plt.subplot(subplotplace)\n    sns.distplot(df[col+\"_log\"])\n    subplotplace += 1\n    plt.subplot(subplotplace)\n    df[col+\"_log\"].plot.box()\n    subplotplace += 1","6e174ba5":"for col in num_col:\n    df.drop(col,axis = 1, inplace = True)\n    \ndf.head()","bf91faad":"for col in num_col:\n    df_test.drop(col,axis = 1, inplace = True)\n    \ndf_test.head()","13fe1071":"df = df.drop('ID', axis = 1)\ndf_test = df_test.drop('ID', axis = 1)","413f7a65":"X = df.drop('Crop_Damage',1) \ny = df['Crop_Damage']","009cbf51":"X=pd.get_dummies(X) \ndf=pd.get_dummies(df) \ndf_test=pd.get_dummies(df_test)","8203a93b":"from sklearn.model_selection import train_test_split\nx_train, x_cv, y_train, y_cv = train_test_split(X,y, test_size =0.3)","d75a4bc2":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import confusion_matrix, accuracy_score","6ae32784":"model = RandomForestClassifier() \nmodel.fit(x_train, y_train)","bc851b97":"pred_cv = model.predict(x_cv)","edea292c":"accuracy_score(y_cv,pred_cv)","f5827125":"pred_test = model.predict(df_test)","d7fd2505":"submission=pd.read_csv(\"..\/input\/av-janatahack-machine-learning-in-agriculture\/sample_submission_O1oDc4H.csv\")\nsubmission['Crop_Damage']=pred_test \nsubmission['ID']=df_test_original['ID']\npd.DataFrame(submission, columns=['ID','Crop_Damage']).to_csv('randomforest.csv',index = False)","44c1f17c":"from sklearn.model_selection import StratifiedKFold","d3df6ca0":"from sklearn.ensemble import RandomForestClassifier\ni=1 \nkf = StratifiedKFold(n_splits=5,random_state=1,shuffle=True) \nfor train_index,test_index in kf.split(X,y):     \n    print('\\n{} of kfold {}'.format(i,kf.n_splits))     \n    xtr,xvl = X.loc[train_index],X.loc[test_index]     \n    ytr,yvl = y[train_index],y[test_index]         \n    model = RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,\n                       criterion='gini', max_depth=9, max_features='auto',\n                       max_leaf_nodes=None, max_samples=None,\n                       min_impurity_decrease=0.0, min_impurity_split=None,\n                       min_samples_leaf=1, min_samples_split=2,\n                       min_weight_fraction_leaf=0.0, n_estimators=21,\n                       n_jobs=None, oob_score=False, random_state=1, verbose=0,\n                       warm_start=False)     \n    model.fit(xtr, ytr)     \n    pred_test = model.predict(xvl)     \n    score = accuracy_score(yvl,pred_test)     \n    print('accuracy_score',score)     \n    i+=1 \n\n    pred_test = model.predict(df_test)","751fd7b3":"submission['Crop_Damage']=pred_test \npd.DataFrame(submission, columns=['ID','Crop_Damage']).to_csv('randomforeststartified.csv',index = False)","7fa8de0a":"importances=pd.Series(model.feature_importances_, index=X.columns) \nimportances.plot(kind='barh', figsize=(12,8));","83e0c640":"from xgboost import XGBClassifier\ni=1 \nkf = StratifiedKFold(n_splits=5,random_state=1,shuffle=True) \nfor train_index,test_index in kf.split(X,y):     \n    print('\\n{} of kfold {}'.format(i,kf.n_splits))     \n    xtr,xvl = X.loc[train_index],X.loc[test_index]     \n    ytr,yvl = y[train_index],y[test_index]         \n    model = XGBClassifier(n_estimators=50, max_depth=4)     \n    model.fit(xtr, ytr)     \n    pred_test = model.predict(xvl)     \n    score = accuracy_score(yvl,pred_test)     \n    print('accuracy_score',score)     \n    i+=1 \n    pred_test = model.predict(df_test) \n    pred3=model.predict_proba(df_test)[:,1]","e0dbdc53":"submission['Crop_Damage']=pred_test \npd.DataFrame(submission, columns=['ID','Crop_Damage']).to_csv('xgstartified.csv',index = False)","f243cbe3":"from sklearn.model_selection import GridSearchCV\n# Provide range for max_depth from 1 to 20 with an interval of 2 and from 1 to 200 with an interval of 20 for n_estimators \nparamgrid = {'max_depth': list(range(1, 20, 2)), 'n_estimators': list(range(1, 200, 20))}\ngrid_search=GridSearchCV(RandomForestClassifier(random_state=1),paramgrid)","5bbae18f":"x_train, x_cv, y_train, y_cv = train_test_split(X,y, test_size =0.3, random_state=1)\n# Fit the grid search model \ngrid_search.fit(x_train,y_train)","2f76412d":"# Estimating the optimized value \ngrid_search.best_estimator_","6c4e4029":"from sklearn.naive_bayes import GaussianNB\nmodel = GaussianNB()\nmodel.fit(x_train, y_train)\npred_cv = model.predict(x_cv)\naccuracy_score(y_cv,pred_cv)","887db65c":"# RandomForest Approach","71100eb1":"#### XGbooster","57465c47":"# Univariant Analysis","f85577cc":"# Bivariant Analysis","f29a328d":"##### we will fill NA Values of \"Number_Weeks_Used\" with meadian of the \"pesticide_used_category\"\n1 - 0\n2 - 25\n3 - 35","76946c63":"# Modeling","4ba0812a":"#### GridSearch","f2155e42":"# Fill NA values"}}