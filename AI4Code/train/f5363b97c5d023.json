{"cell_type":{"b92487f0":"code","d896498e":"code","baf0359b":"code","646bddf3":"code","25c3eb91":"code","cb24db54":"markdown","9259b955":"markdown","e6ff0c7f":"markdown","aa8e4dc5":"markdown","1a1d5d25":"markdown","044598a0":"markdown","5c5c1efc":"markdown"},"source":{"b92487f0":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.plotly as py\nimport plotly.graph_objs as go\nfrom plotly import tools\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport folium\nimport folium.plugins as plugins\nfrom IPython.core import display as ICD\nfrom google.cloud import bigquery\nfrom bq_helper import BigQueryHelper\nimport pycountry\nimport os\nimport plotly\nimport plotly.offline as py\nimport plotly.tools as tls\nimport plotly.graph_objs as go\nimport plotly.tools as tls\nimport plotly.figure_factory as fig_fact\nplotly.tools.set_config_file(world_readable=True, sharing='public')\nfrom mpl_toolkits.basemap import Basemap\nfrom matplotlib import animation,rc\nimport io\nimport base64\nfrom IPython.display import HTML, display\nimport warnings\nwarnings.filterwarnings('ignore')\n\ndef folium_map(df, center_lat, center_lon, zoom) :\n    # Adapted from https:\/\/www.kaggle.com\/dejavu23\/openaq-from-queries-to-world-maps\n    m = folium.Map(location=[center_lat, center_lon],\n                   zoom_start = zoom)\n    for index, row in df.iterrows():\n        folium.CircleMarker( [row['latitude'], row['longitude']] , radius=20, \n                             color=custom_colormap(row['value']), \n                             fill=False, fill_opacity=0,            \n                             fill_color=custom_colormap(row['value']), \n                             popup=row['city'] ).add_to(m)\n    custom_colormap.add_to(m)\n    folium.TileLayer(tiles='Stamen Toner',name=\"Stamen Toner\").add_to(m)\n    folium.TileLayer(tiles='Stamen Terrain',name=\"Stamen Terrain\").add_to(m)\n    folium.TileLayer(tiles='cartodbpositron',name=\"cartodbpositron\").add_to(m)\n    folium.LayerControl().add_to(m)    \n    return m\n\ndef animate(Year):\n    # adapted from from https:\/\/www.kaggle.com\/piumallick\/air-pollution-analysis-on-air-quality-index\n    ax = plt.axes()\n    ax.clear()\n    ax.set_title('NO2 Levels in Year: '+str(Year))\n    m4 = Basemap(llcrnrlon=-125,llcrnrlat=25,urcrnrlon=-65,urcrnrlat=50, #-110,38,-100,45 for Colorado\n        projection='cyl',lat_1=33,lat_2=45,lon_0=-95)\n    m4.drawmapboundary(fill_color='#A6CAE0', linewidth=0)\n    m4.fillcontinents(color='grey', alpha=0.3)\n    m4.drawcoastlines(linewidth=0.1, color=\"white\")\n    m4.shadedrelief()\n    lat_y = list(OpenAQ[OpenAQ['Year'] == Year]['latitude'])\n    lon_y = list(OpenAQ[OpenAQ['Year'] == Year]['longitude'])\n    lat,lon = m4(lat_y,lon_y) \n    avg = np.log(OpenAQ[OpenAQ['Year'] == Year]['Average'])\n    m4.scatter(lon,lat,c = avg,lw=10, alpha=0.3,cmap='hot_r')","d896498e":"def query_all_1pollutant_1country(pollutant, country) :\n    # Adapted from https:\/\/www.kaggle.com\/dejavu23\/openaq-from-queries-to-world-maps\n    s = \"SELECT *\"\n    f = \" FROM `bigquery-public-data.openaq.global_air_quality` as globalAQ\"\n    w = \" WHERE pollutant = '\" + pollutant + \"'\" + \\\n        \" AND value > 0\" + \" AND country = '\" + country + \"'\" + \\\n        \" AND EXTRACT(YEAR FROM globalAQ.timestamp) > 2018\"        \n    q = s+f+w\n    return q\n\nno2_over_time = \"\"\"\n            SELECT EXTRACT(YEAR FROM timestamp) as `Year`,\n                   AVG(value) as `Average`,\n                   latitude,\n                   longitude,\n                   country\n        FROM `bigquery-public-data.openaq.global_air_quality`\n        WHERE EXTRACT(YEAR FROM timestamp) > 2010        \n        AND pollutant = 'no2'\n        AND country = 'US'\n        GROUP BY Year, \n                 latitude,\n                 longitude,\n                 country\n        \"\"\"\nopen_aq = BigQueryHelper(active_project=\"bigquery-public-data\",dataset_name=\"openaq\")","baf0359b":"# Adapted from from https:\/\/www.kaggle.com\/piumallick\/air-pollution-analysis-on-air-quality-index\nOpenAQ = open_aq.query_to_pandas_safe(no2_over_time)\nfig = plt.figure(figsize=(10,5))\nplt.style.use('ggplot')\nani = animation.FuncAnimation(fig,animate,list(OpenAQ['Year'].unique()), interval = 1)    \nani.save('animation.gif', writer='imagemagick', fps=1)\nplt.close(1)\nfilename = 'animation.gif'\nvideo = io.open(filename, 'r+b').read()\nencoded = base64.b64encode(video)\nHTML(data='''<img src=\"data:image\/gif;base64,{0}\" type=\"gif\" \/>'''.format(encoded.decode('ascii')))","646bddf3":"pollutants = ['o3','no2','pm25']\nfor i in pollutants:\n    query = query_all_1pollutant_1country(i, \"US\")\n    df_usa = open_aq.query_to_pandas(query)\n    df_usa.sort_values(by=['timestamp'], inplace=True) \n    minValue = min(df_usa['value'])\n    maxValue = max(df_usa['value'])\n    custom_colormap = folium.StepColormap(['yellow','orange','red','black'], \n                         vmin=minValue, vmax=maxValue,\n                         index=[minValue, maxValue\/4,maxValue\/2, 3*maxValue\/4],\n                        caption=i+' ppm')\n    df_usa_map = folium_map(df_usa, 40,-105, 6)\n    print(i+': \\n')\n    ICD.display(df_usa_map)","25c3eb91":"def query_all_1pollutant_1country(pollutant, country) :\n    # Adapted from https:\/\/www.kaggle.com\/dejavu23\/openaq-from-queries-to-world-maps\n    s = \"SELECT *\"\n    f = \" FROM `bigquery-public-data.openaq.global_air_quality` as globalAQ\"\n    w = \" WHERE pollutant = '\" + pollutant + \"'\" + \\\n        \" AND value > 0\" + \" AND country = '\" + country + \"'\" + \\\n        \" AND EXTRACT(YEAR FROM globalAQ.timestamp) > 2010\"\n    q = s+f+w\n    return q\n\nquery = query_all_1pollutant_1country(\"no2\", \"US\")\ndf_usa = open_aq.query_to_pandas(query) \nvalue_list = ['Denver','Denver-Aurora','Durango']\ndenver = df_usa[df_usa.city.isin(value_list)]\ndenver.head(10) ","cb24db54":"*Step 3: Animated map of reported NO2 emissions in the USA (2010-2010)*","9259b955":"Note that some functions were adapted from https:\/\/www.kaggle.com\/dejavu23\/openaq-from-queries-to-world-maps\n and https:\/\/www.kaggle.com\/piumallick\/air-pollution-analysis-on-air-quality-index.  See code comments for more detail.","e6ff0c7f":"*Step 1: Import Python modules and define helper functions*","aa8e4dc5":"*Step 4: Interactive map of average pollution levels in Colorado in 2019 (o3, co, no2, so2, and pm25)*","1a1d5d25":"*Step 2: Write queries for pollution levels*","044598a0":"It looks like there are too few measurements at each location to plot things over time.","5c5c1efc":"# Mapping Pollution in Colorado in 2019\n\n* ** no2, so2, co, o3, and pm25**\n* **https:\/\/openaq.org**\n"}}