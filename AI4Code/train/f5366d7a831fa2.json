{"cell_type":{"30548e13":"code","a8093b9d":"code","4016f10f":"code","6d409293":"code","7ef7019f":"code","cdda0f76":"code","d423a544":"code","2bcf4c60":"code","42e39c77":"code","e4de758c":"code","c6f1b026":"code","91a3bec0":"code","904af6c3":"code","d19ff600":"code","b78e7042":"code","dded1d43":"code","303d3a60":"code","17409b13":"code","2e10b221":"code","32339795":"code","ddac429f":"code","2f4dc0c9":"code","d8ba5491":"code","854670f3":"code","ba8b6a72":"code","fcbb9273":"code","3b724e0e":"code","807c610e":"code","2eeb656a":"code","d794ee57":"code","1d5c1b55":"code","5533f057":"code","c9ede68d":"code","ba525853":"code","58a52d25":"code","eb94c093":"code","6f13be23":"code","dee0a7a1":"code","2ad9231f":"code","b9250edd":"code","2ed127b2":"code","4144e78d":"code","d764f757":"code","0a89bc17":"code","956fe2ac":"markdown","cf562df9":"markdown"},"source":{"30548e13":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly\nimport plotly.express as px\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","a8093b9d":"DATA_PATH = '\/kaggle\/input\/mushroom-classification\/'","4016f10f":"file_path = os.path.join(DATA_PATH,'mushrooms.csv')","6d409293":"pd.set_option('display.max_columns',30)","7ef7019f":"df = pd.read_csv(file_path)","cdda0f76":"print(f'shape of csv file: {df.shape}')","d423a544":"df.head()","2bcf4c60":"df.columns = ['target', 'cap-shape', 'cap-surface', 'cap-color', 'bruises', 'odor',\n       'gill-attachment', 'gill-spacing', 'gill-size', 'gill-color',\n       'stalk-shape', 'stalk-root', 'stalk-surface-above-ring',\n       'stalk-surface-below-ring', 'stalk-color-above-ring',\n       'stalk-color-below-ring', 'veil-type', 'veil-color', 'ring-number',\n       'ring-type', 'spore-print-color', 'population', 'habitat']","42e39c77":"for i in df.columns:\n    print(f'{i} -> {df[i].unique()}')","e4de758c":"for i in df.columns:\n    if df[i].dtype == 'object':\n        df[i] = pd.factorize(df[i])[0]","c6f1b026":"df.groupby(['cap-shape'])['target'].value_counts()","91a3bec0":"pd.crosstab(df['cap-shape'],df['target'])","904af6c3":"fig = px.violin(df,\n          x = df['cap-shape'],\n          y=df['target'])\nfig.show()","d19ff600":"fig = px.violin(df,\n          x = df['cap-surface'],\n          y=df['target'])\nfig.show()","b78e7042":"from sklearn.feature_selection import VarianceThreshold\nfrom sklearn.feature_selection import SelectKBest,chi2\nfrom sklearn.feature_selection import mutual_info_classif","dded1d43":"y = df.target","303d3a60":"df.drop('target',axis =1,inplace=True)","17409b13":"x = df","2e10b221":"vrt = VarianceThreshold(threshold=0.01)\nvrt.fit(x,y)","32339795":"sum(vrt.get_support())","ddac429f":"X = vrt.transform(df)","2f4dc0c9":"chi2_selector = SelectKBest(chi2, k=11)\nX_kbest = chi2_selector.fit_transform(X, y)","d8ba5491":"X_kbest.shape","854670f3":"mut_feat = mutual_info_classif(X_kbest,y)","ba8b6a72":"mut_feat","fcbb9273":"from sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.linear_model import LogisticRegression","3b724e0e":"X_train,X_test,y_train,y_test = train_test_split(X_kbest,y,test_size=0.15,random_state=1)","807c610e":"lr = LogisticRegression(max_iter=200)\nlr.fit(X_train,y_train)","2eeb656a":"lr.score(X_train,y_train)","d794ee57":"cross_val_score(lr,X_train,y_train,cv=5)","1d5c1b55":"lr.score(X_test,y_test)","5533f057":"from sklearn.ensemble import RandomForestClassifier","c9ede68d":"rf = RandomForestClassifier(max_features=9,max_depth=5,n_estimators=10)","ba525853":"rf.fit(X_train,y_train)","58a52d25":"rf.score(X_train,y_train)","eb94c093":"cross_val_score(rf,X_train,y_train,cv=5)","6f13be23":"rf.feature_importances_","dee0a7a1":"rf.score(X_test,y_test)","2ad9231f":"from sklearn.metrics import classification_report,roc_auc_score,roc_curve,auc","b9250edd":"y_pred = rf.predict(X_test)","2ed127b2":"print(classification_report(y_test,y_pred))","4144e78d":"roc_auc_score(y_test,y_pred)","d764f757":"fpr, tpr, thresholds = roc_curve(y_test, y_pred)","0a89bc17":"plt.plot(fpr,tpr)\nplt.xlabel('fpr')\nplt.ylabel('tpr')\nplt.title(f'tpr vs fpr plot with auc: {roc_auc_score(y_test,y_pred)}')\nplt.show()","956fe2ac":"# Exploratory Data Analysis","cf562df9":"#### Feature selection"}}