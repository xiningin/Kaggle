{"cell_type":{"155483ac":"code","cd843efa":"code","165f59f7":"code","8082b038":"code","f4649c1b":"code","ff42a17d":"code","6a8a3b64":"markdown","4513a5e5":"markdown","6bc07be6":"markdown","dfc7984b":"markdown"},"source":{"155483ac":"import pandas as pd\nimport numpy as np\nfrom sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import chi2","cd843efa":"data_train = pd.read_csv(\"..\/input\/lish-moa\/train_features.csv\")\ntarget = pd.read_csv(\"..\/input\/lish-moa\/train_targets_scored.csv\")","165f59f7":"def clean_fn(data):\n    data.loc[:, 'cp_type'] = data.loc[:, 'cp_type'].map({'trt_cp': 0, 'ctl_vehicle': 1})\n    data.loc[:, 'cp_dose'] = data.loc[:, 'cp_dose'].map({'D1': 0, 'D2': 1})\n    del data['sig_id']\n    return data\n\ntrain =  clean_fn(data_train)","8082b038":"train.head()","f4649c1b":"from sklearn import preprocessing\n\n# X = preprocessing.MinMaxScaler().fit_transform(train) gievs an array so not required\n\nx = train.values #returns a numpy array\nmin_max_scaler = preprocessing.MinMaxScaler()\nx_scaled = min_max_scaler.fit_transform(x)\ndf = pd.DataFrame(x_scaled)\n","ff42a17d":"y = target.drop(['sig_id'], axis=1)\n\ntop_features = SelectKBest(score_func=chi2, k=10)\n\n\nfit = top_features.fit(df,y)\ndfscores = pd.DataFrame(fit.scores_)\n    \ndfcolumns = pd.DataFrame(df.columns)\n# #concat two dataframes for better visualization \nfeatureScores = pd.concat([dfcolumns,dfscores],axis=1)\nfeatureScores.columns = ['Specs','Score']  #naming the dataframe columns\nprint(featureScores.nlargest(10,'Score'))  #print 10 best features","6a8a3b64":"# Import Library","4513a5e5":"# Read Dataset","6bc07be6":"# Normalize Dataset\n\nNormalize to remove negative values for SelectKBest","dfc7984b":"# Preprocess the Dataset"}}