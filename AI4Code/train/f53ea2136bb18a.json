{"cell_type":{"60a1279b":"code","c2023df1":"code","175e024b":"code","7d3e4d62":"code","9abee797":"code","ed35ed23":"code","ee8ba78e":"code","3b574041":"code","3d629fbe":"code","8b21f645":"code","fb7afa95":"code","f6201db3":"code","4ea7e2ea":"code","c759056f":"code","dd66d822":"code","145407aa":"code","d27ec62b":"code","4d9d29fe":"code","a64622a5":"code","2a2ebfd3":"code","578f79a3":"code","0e56c281":"code","4dcf75e1":"code","5015854f":"code","4d3f95cf":"code","91c8abbb":"code","e8041a97":"code","5ab38a3f":"code","0da3737e":"code","d186b942":"code","443dce65":"code","c1710c54":"code","7d13c70b":"code","472f3559":"code","a884c4e2":"code","d582875b":"code","9343fe5f":"markdown","0be2e36b":"markdown","fecd07d5":"markdown","1c68c81a":"markdown","f789f8f3":"markdown","df14509d":"markdown","f1238d08":"markdown","0067900f":"markdown","bb8640cb":"markdown","9de50951":"markdown","e0e55ee0":"markdown","a95f6a7f":"markdown","0ba48035":"markdown","95fd557d":"markdown","744fa203":"markdown","b4636819":"markdown","4bd2e4c4":"markdown","803ff39f":"markdown","de28bf14":"markdown","b898feb5":"markdown","5d5c1a00":"markdown","6c595220":"markdown","b6d3f4bf":"markdown","a99829d4":"markdown","b649827e":"markdown","84c3ec18":"markdown","168d375d":"markdown","d8be4f4f":"markdown","5271ca12":"markdown","4bc344ed":"markdown","75ee926e":"markdown","c4fc24e7":"markdown","51ec886c":"markdown","38b86b82":"markdown","fc60067e":"markdown","bddb02a8":"markdown","e82ba4fb":"markdown","4e359c18":"markdown","e0b5b58b":"markdown","13acbc70":"markdown","7758053d":"markdown","bf182161":"markdown"},"source":{"60a1279b":"def missing(df) : \n    missing_number = df.isnull().sum().sort_values(ascending = False)\n    missing_percent = (df.isnull().sum()\/df.isnull().count()).sort_values(ascending = False)\n    missing_values = pd.concat([missing_number, missing_percent], axis = 1, keys = ['Missing_number', 'Missing_percent'])\n    return missing_values \n\ndef categorize(df) :\n    Quantitive_features = df.select_dtypes([np.number]).columns.tolist()\n    Categorical_features = df.select_dtypes(exclude = [np.number]).columns.tolist()\n    Discrete_features = [col for col in Quantitive_features if len(df[col].unique()) < 10]\n    Continuous_features = [col for col in Quantitive_features if col not in Discrete_features]\n    print(f\"Quantitive feautres : {Quantitive_features} \\nDiscrete features : {Discrete_features} \\nContinous features : {Continuous_features} \\nCategorical features : {Categorical_features}\\n\")\n    print(f\"Number of quantitive feautres : {len(Quantitive_features)} \\nNumber of discrete features : {len(Discrete_features)} \\nNumber of continous features : {len(Continuous_features)} \\nNumber of categorical features : {len(Categorical_features)}\")\n    \ndef unique(df) : \n    tb1 = pd.DataFrame({'Columns' : df.columns, 'Number_of_Unique' : df.nunique().values.tolist(),\n                       'Sample1' : df.sample(1).values.tolist()[0], 'Sample2' : df.sample(1).values.tolist()[0], \n                       'Sample3' : df.sample(1).values.tolist()[0],\n                       'Sample4' : df.sample(1).values.tolist()[0], 'Sample5' : df.sample(1).values.tolist()[0]})\n    return tb1\n    \ndef data_glimpse(df) :   \n    \n    # Dataset preview \n    print(\"1. Dataset Preview \\n\")\n    display(df.head())\n    print(\"-------------------------------------------------------------------------------\\n\")\n    \n    # Columns imformation\n    print(\"2. Column Imformation \\n\")\n    print(f\"Dataset have {df.shape[0]} columns and {df.shape[1]} rows\")\n    print(\"\\n\") \n    print(f\"Dataset Column name : {df.columns.values}\")\n    print(\"\\n\")\n    categorize(df)\n    print(\"-------------------------------------------------------------------------------\\n\")\n    \n    # Basic imformation table \n    print(\"3. Missing data table : \\n\")\n    display(missing(df))\n    print(\"-------------------------------------------------------------------------------\\n\")\n    \n    print(\"4. Number of unique value by column : \\n\")\n    display(unique(df))\n    print(\"-------------------------------------------------------------------------------\\n\")\n    \n    print(\"5. Describe table : \\n\")\n    display(df.describe())\n    print(\"-------------------------------------------------------------------------------\\n\")\n    \n    print(df.info())\n    print(\"-------------------------------------------------------------------------------\\n\")","c2023df1":"# Data Analysis\nimport warnings \nwarnings.filterwarnings('ignore')\n    \nimport pandas as pd\nimport numpy as np\nimport os \nimport missingno as msno\n    \n# Data View\npd.options.display.max_columns = 200\n\n# Import Basic Visualization\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n    \n# Data Visualization : Plotly library \nimport plotly.express as px\n    \nimport plotly.graph_objects as go\nimport plotly.offline as pyo\npyo.init_notebook_mode()\n    \nfrom plotly.subplots import make_subplots \nimport plotly.figure_factory as ff \n\n# Data Analysis \nimport pandas as pd\nimport numpy as np","175e024b":"df = pd.read_csv(\"..\/input\/co2-emissions-1960-2018\/CO2_Emissions_1960-2018.csv\")\ndf.head()","7d3e4d62":"data_glimpse(df)","9abee797":"df.head()","ed35ed23":"df.dropna(subset = ['1990'], inplace = True)   # In datasets, Many countries disappear and occurs by 1990\ndf.fillna(0, inplace = True)","ee8ba78e":"Continent = {'Africa' : {\"Cote d'Ivoire\", 'Congo, Dem. Rep.', 'Gambia, The', 'Egypt, Arab Rep.', 'Congo, Rep.', 'Algeria', 'Angola', 'Benin', 'Botswana', 'Burkina Faso', 'Burundi', 'Cabo Verde', 'Cameroon', 'Central African Republic', 'Chad', \n                         'Comoros', 'Congo\/Republic of the Congo', 'Democratic Republic of the Congo', 'Djibouti', 'Egypt', 'Equatorial Guinea', 'Eritrea', \n                         'Eswatini', 'Ethiopia', 'Gabon', 'Gambia', 'Ghana', 'Guinea', 'Guinea-Bissau', 'Ivory Coast', 'Kenya', 'Lesotho', 'Liberia', 'Libya', \n                         'Madagascar', 'Malawi', 'Mali', 'Mauritania', 'Mauritius', 'Morocco', 'Mozambique', 'Namibia', 'Niger', 'Nigeria', 'Rwanda', 'Sao Tome and Principe',\n                         'Senegal', 'Seychelles', 'Sierra Leone', 'Somalia', 'South Africa', 'South Sudan', 'Sudan', 'Tanzania', 'Togo', 'Tunisia', 'Uganda', 'Zambia', 'Zimbabwe'},\n             'Asia' : {'Syrian Arab Republic', 'Yemen, Rep.', 'Lao PDR', 'Kyrgyz Republic', 'Hong Kong SAR, China', 'Macao SAR, China', \"Korea, Dem. People's Rep.\", 'Iran, Islamic Rep.', 'Uzbekistan', 'Korea, Rep.', 'Brunei Darussalam', 'Afghanistan', 'Azerbaijan', 'Bahrain', 'Bangladesh', 'Bhutan', 'British Indian Ocean Territory', 'Brunei', 'Cambodia', 'China', 'Georgia', 'Hong Kong',\n                       'India', 'Indonesia', 'Iran', 'Iraq', 'Israel', 'Japan', 'Jordan', 'Kazakhstan', 'Kuwait', 'Kyrgyzstan', 'Laos', 'Lebanon', 'Macau', 'Malaysia', 'Maldives', 'Mongolia', 'Myanmar',\n                       'Nepal', 'North Korea', 'Oman', 'Pakistan', 'Palestine', 'Philippines', 'Qatar', 'Saudi Arabia', 'Singapore', 'South Korea', 'Sri Lanka', 'Syria', 'Taiwan', 'Tajikistan', \n                       'Thailand', 'Timor-Leste', 'Turkey', 'Turkmenistan', 'United Arab Emirates', 'Uzbekstan', 'Vietnam', 'Yemen'},\n             'Europe' : {'Sint Maarten (Dutch part)', 'Russian Federation', 'Slovak Republic', 'Faroe Islands', 'British Virgin Islands', 'Isle of Man', 'Channel Islands', 'Kosovo', 'Czech Republic', 'Albania', 'Andorra', 'Armenia', 'Austria', 'Belarus', 'Belgium', 'Bosnia and Herzegovina', 'Bulgaria', 'Croatia', 'Cyprus', 'Czechia\/Chech Republic', 'Denmark', 'Estonia',\n                         'Finland', 'France', 'Georgia', 'Germany', 'Greece', 'Hungary', 'Iceland', 'Ireland', 'Italy', 'Latvia', 'Liechtenstein', 'Lithuania', 'Luxembourg', 'Malta', 'Moldova', \n                         'Monaco', 'Montenegro', 'Netherlands', 'North Macedonia', 'Norway', 'Poland', 'Portugal', 'Romania', 'Russia', 'San Marino', 'Serbia', 'Slovakia', 'Slovenia', 'Spain', 'Sweden', \n                         'Switzerland', 'Turkey', 'Ukraine', 'United Kingdom', 'Vatican City'}, \n             'North America' : {'St. Vincent and the Grenadines', 'Turks and Caicos Islands', 'St. Martin (French part)', 'Puerto Rico', 'St. Kitts and Nevis', 'Cayman Islands', 'Curacao', 'Nicaragua', 'Virgin Islands (U.S.)', 'St. Lucia', 'Bahamas, The', 'United States', 'Bermuda', 'Antigua and Barbuda', 'Bahamas, the', 'Barbados', 'Belize', 'Canada', 'Costa Rica', 'Cuba', 'Dominica', 'Dominican Republic', 'El Salvador', 'Grenada', 'Guatemala', 'Haiti',\n                                'Honduras', 'Jamaica', 'Mexico', 'Panama', 'Saint Kitts and Nevis', 'Saint Vincent and the Grenadines', 'Trinidad and Tobago', 'Unided States of America'},\n             'South America' : {'Venezuela, RB', 'Aruba', 'Argentina', 'Bolivia', 'Brazil', 'Chile', 'Colombia', 'Ecuador', 'Guyana', 'Paraguay', 'Peru', 'Suriname', 'Uruguay', 'Venezuela'}, \n             'Oceania' : {'French Polynesia', 'Micronesia, Fed. Sts.', 'Guam', 'New Caledonia', 'American Samoa', 'Australia', 'Fiji', 'Kiribati', 'Marshall Islands', 'Micronesia', 'Nauru', 'New Zealand', 'Palau', 'Papua New Guinea', 'Samoa', 'Solomon Islands', 'Tonga', 'Tuvalu', 'Vanuatu'}}","3b574041":"def return_continent(row) : \n    try : \n        for continent in Continent.keys() : \n            if row['Country Name'] in Continent[continent] : \n                return continent\n    except : \n        return \"Others\"\ndf['Continent'] = df.apply(return_continent, axis = 1)","3d629fbe":"# Find pre categorized region and store it in Other_category\n\nOther_category = df.loc[df['Continent'].isnull(), 'Country Name'].values\nOther_category ","8b21f645":"df_other = df[df['Country Name'].isin(Other_category)].reset_index(drop = True)\n\n# Because Country Name is Category, we will drop column 'Continent' and rename column as category\ndf_other.drop(columns = ['Continent'], inplace = True)\ndf_other.head()","fb7afa95":"df = df[~(df['Country Name'].isin(Other_category))]\ndf.head()","f6201db3":"dff = pd.melt(df, id_vars = ['Continent', 'Country Name'], \n              value_vars = [col for col in df.columns if col not in ['Country Name', 'Continent']], \n              var_name = 'Year',\n              value_name = 'Emmisions')\n\ndff_other = pd.melt(df_other, id_vars = ['Country Name'], value_vars = [col for col in df_other.columns if col not in ['Country Name']],\n                    var_name = 'Year', value_name = 'Emmisions').rename(columns = {'Country Name' : 'Category'})","4ea7e2ea":"dff.head()","c759056f":"dff_other.head()","dd66d822":"fig = px.box(dff, y = 'Emmisions', animation_frame = 'Year', color = 'Continent')\nfig.update_yaxes(type = 'log')\nfig.update_layout(\n    {\n        \"title\": {\n            \"text\": \"<b>CO2 Emmision's IQR change by year<\/b>\",\n            \"x\": 0.5,\n            \"y\": 0.9,\n            \"font\": {\n                \"size\": 15\n            }\n        },\n        \"template\":'plotly_dark'\n    }\n)\nfig.show() \n","145407aa":"dff_asia = dff.loc[dff.Continent == 'Asia'][['Country Name', 'Year', 'Emmisions']]\ndff_asia.head()","d27ec62b":"# World median emmisions \nWorld_emmisions = dff.groupby('Year')['Emmisions'].median().reset_index()\n\n# Asia's median emmisions\nAsia_emmisions = dff_asia.groupby('Year')['Emmisions'].median().reset_index()\n\nWorld_emmisions.head()","4d9d29fe":"World_emmisions['Country Name'] = ['World'] * len(World_emmisions)\nAsia_emmisions['Country Name'] = ['Asia'] * len(Asia_emmisions)\n\nWorld_emmisions.head()","a64622a5":"dff_asia = pd.concat([dff_asia, World_emmisions])\ndff_asia = pd.concat([dff_asia, Asia_emmisions])\n\ndff_asia.tail()","2a2ebfd3":"# Emmision by countries in 1960, 1970, 1980, 1990, 2000, 2010 \nyears = ['1960', '1970', '1980', '1990', '2000', '2010']\n\nfor year in years : \n    df_plot = dff_asia[dff_asia.Year == year].sort_values(by = 'Emmisions', ascending = False).reset_index(drop = True)\n\n    colors = ['#03588C'] * len(df_plot.index)\n    colors[np.where(df_plot['Country Name'] == 'World')[0][0]] = '#F24472'\n    colors[np.where(df_plot['Country Name'] == 'Asia')[0][0]] = '#22FFA7'\n\n    fig = go.Figure()\n\n    fig.add_trace(go.Bar(\n        x = df_plot['Country Name'],\n        y = df_plot.Emmisions,\n        marker_color = colors\n    ))\n\n    fig.update_yaxes(type = 'log')\n\n    fig.update_layout(\n        {\n            \"title\": {\n                \"text\": f\"<b>Emmisions of Asia countries in {year}<\/b>\",\n                \"x\": 0.5,\n                \"y\": 0.9,\n                \"font\": {\n                    \"size\": 15\n                }\n            },\n            \"xaxis\": {\n                \"title\": \"Countries\",\n                \"showticklabels\":True,\n                \"tickfont\": {\n                    \"size\": 8                \n                }\n            },\n            \"yaxis\": {\n                \"title\": \"Emmisions(log)\",\n                \"tickfont\": {\n                    \"size\": 10                \n                }\n            },\n            \"template\":'plotly_dark'\n        }\n    )\n\n    fig.show()","578f79a3":"def bar_plot_by_continent(continent) : \n    \"\"\"\n    This plot shows emmisions of countries in specific continent with world emmisions and continent emmisions. \n    \n    We will show in year '1960', '1970', '1980', '1990', '2000', '2010'\n    \n    bar_plot_by_continent('Asia')\n    \"\"\"\n    dff_con = dff.loc[dff.Continent == continent][['Country Name', 'Year', 'Emmisions']]\n    \n    # World median emmisions \n    World_emmisions = dff.groupby('Year')['Emmisions'].median().reset_index()\n    \n    # Continent median emmisions\n    Con_emmisions = dff_con.groupby('Year')['Emmisions'].median().reset_index()\n    \n    # Merge world and continent emmision in one \n    World_emmisions['Country Name'] = ['World'] * len(World_emmisions)\n    Con_emmisions['Country Name'] = [continent] * len(Asia_emmisions)\n    \n    dff_con = pd.concat([dff_con, World_emmisions])\n    dff_con = pd.concat([dff_con, Con_emmisions])\n    # Emmision by countries in 1960, 1970, 1980, 1990, 2000, 2010 \n    years = ['1960', '1970', '1980', '1990', '2000', '2010']\n\n    for year in years : \n        df_plot = dff_con[dff_con.Year == year].sort_values(by = 'Emmisions', ascending = False).reset_index(drop = True)\n\n        colors = ['#03588C'] * len(df_plot.index)\n        colors[np.where(df_plot['Country Name'] == 'World')[0][0]] = '#F24472'\n        colors[np.where(df_plot['Country Name'] == continent)[0][0]] = '#22FFA7'\n\n        fig = go.Figure()\n\n        fig.add_trace(go.Bar(\n            x = df_plot['Country Name'],\n            y = df_plot.Emmisions,\n            marker_color = colors\n        ))\n\n        fig.update_yaxes(type = 'log')\n\n        fig.update_layout(\n            {\n                \"title\": {\n                    \"text\": f\"<b>Emmisions of {continent} countries in {year}<\/b>\",\n                    \"x\": 0.5,\n                    \"y\": 0.9,\n                    \"font\": {\n                        \"size\": 15\n                    }\n                },\n                \"xaxis\": {\n                    \"title\": \"Countries\",\n                    \"showticklabels\":True,\n                    \"tickfont\": {\n                        \"size\": 8                \n                    }\n                },\n                \"yaxis\": {\n                    \"title\": \"Emmisions(log)\",\n                    \"tickfont\": {\n                        \"size\": 10                \n                    }\n                },\n                \"template\":'plotly_dark'\n            }\n        )\n\n        fig.show()","0e56c281":"bar_plot_by_continent('Europe')","4dcf75e1":"bar_plot_by_continent('North America')","5015854f":"bar_plot_by_continent('South America')","4d3f95cf":"bar_plot_by_continent('Oceania')","91c8abbb":"bar_plot_by_continent('Africa')","e8041a97":"dff_other.head()","5ab38a3f":"Other_category","0da3737e":"Geo_cat = ['Africa Eastern and Southern', 'Africa Western and Central', 'Arab Wrold', 'Central Europe and the Baltics', 'Caribbean small states', 'East Asia & Pacific', \n           'Europe & Central Asia', 'Euro area', 'European Union', 'Latin America & Caribbean', 'Middle East & North Africa', 'Other small states', 'Pacific island small states', \n           'South Asia', 'Sub-Saharan Africa', 'Small states', 'World']\nIncome = ['High income', 'Low income', 'Middle income', 'Upper middle income', 'Lower middle income', 'Low & middle income']\nGeo_Income = [['East Asia & Pacific (excluding high income)', 'East Asia & Pacific', 'World'], ['Europe & Central Asia (excluding high income)', 'Europe & Central Asia', 'World'], \n              ['Latin America & Caribbean (excluding high income)', 'Latin America & Caribbean', 'World'], ['Middle East & North Africa', 'Middle East & North Africa (excluding high income)', 'World'], \n              ['Sub-Saharan Africa (excluding high income)', 'Sub-Saharan Africa', 'World']]\nGeo_NGO = ['East Asia & Pacific (IDA & IBRD countries)', 'Europe & Central Asia (IDA & IBRD countries)', 'Latin America & the Caribbean (IDA & IBRD countries)', 'Middle East & North Africa (IDA & IBRD countries)', \n           'South Asia (IDA & IBRD)', 'Sub-Saharan Africa (IDA & IBRD countries)', 'OECD members', 'World']\nDemo_cat = ['Early-demographic dividend', 'Pre-demographic dividend', 'Post-demographic dividend', 'Late-demographic dividend']\nNGO_cat = ['IBRD only', 'IDA & IBRD total', 'IDA total', 'IDA blend', 'IDA only', 'OECD memebers', 'World']\nDEV_ING = ['Heavily indebted poor countries (HIPC)', 'Least developed countries: UN classification', 'OECD members', 'World' ]","d186b942":"def plot_of_cat(category) :\n    fig = go.Figure()\n\n    for cat in category : \n        fig.add_trace(go.Scatter(\n            x = dff_other.Year.unique(),\n            y = dff_other.loc[dff_other.Category == cat, 'Emmisions'],\n            name = cat,\n            hovertext = [f'Geo : {cat}<br>=========================<br>Emmisions : {dff_other.Emmisions.iloc[ix]}' for ix in dff_other[dff_other.Category == cat].index]\n        ))\n\n    fig.update_layout(\n        {\n            \"title\": {\n                \"text\": \"<b>Emmision by geographic through the year<\/b>\",\n                \"x\": 0.5,\n                \"y\": 0.9,\n                \"font\": {\n                    \"size\": 15\n                }\n            },\n            \"xaxis\": {\n                \"title\": \"Age Decades\",\n                \"showticklabels\":True,\n                \"tickfont\": {\n                    \"size\": 10                \n                }\n            },\n            \"yaxis\": {\n                \"title\": \"Emmisions\",\n                \"tickfont\": {\n                    \"size\": 10                \n                }\n            },\n            \"template\":'plotly_dark'\n        }\n    )\n\n    fig.show()","443dce65":"plot_of_cat(Geo_cat)","c1710c54":"plot_of_cat(Income)","7d13c70b":"for subcat in Geo_Income : \n    plot_of_cat(subcat)","472f3559":"plot_of_cat(Geo_NGO)","a884c4e2":"plot_of_cat(NGO_cat)","d582875b":"plot_of_cat(DEV_ING)","9343fe5f":"**Europe country Emmisions**","0be2e36b":"**Make tidy data**","fecd07d5":"We will divide datasets for raw country and pre categorized region.","1c68c81a":"# <center> CO2 Emission Analysis (Iterative fancy visualization and Dash) \n    ","f789f8f3":"### NGO ","df14509d":"### Geographic + Income","f1238d08":"**Africa country Emmisions**","0067900f":"As i think, CO2 emmisions are affected by income(gdp). We can see emmisions are decreasing by level of income. ","bb8640cb":"### Income","9de50951":"### Geographic ","e0e55ee0":"We perfectly make same length of non-null datasets","a95f6a7f":"Emmisions in other continents are increasing trend through years, but most of it occurs in OECD members. ","0ba48035":"### Developing countries vs Developed countries","95fd557d":"As we can see in developing countreis vs developed countries plot, Most of emmisions occurs in OECD members.","744fa203":"# Data Preprocessing","b4636819":"As we see through data_glimpse(df), the shape of datasets is not a tidy data. \nso we will use melt() to make tidy data making column 'Year' and 'Emissions'. \n\nAfter doing that, we will deal NaN data. There two kinds of NaN data. One is for non emission ever, the other is non-measure. ","4bd2e4c4":"From 1960 to 1990 CO2 Emmision has wide IQR range in all continent, its because there might be a lower industrial infrastructure contries in continent. But after 1990, IQR range decrease in all continents and also median of emmisions become slightly same. We can't get insight which continent and country affects CO2 Emmisions. ","803ff39f":"'East Asia - Pacific', 'Europe' and 'Middle East' region has many OECD members, so that they have much more emmisions than emmisions of world. ","de28bf14":"**Make Category by continent and continent-region**","b898feb5":"# EDA","5d5c1a00":"**South America country Emmisions**","6c595220":"**Oceania country Emmisions**","b6d3f4bf":"Drop row with NaN after 1990.","a99829d4":"**Deal NaN**","b649827e":"# Data description\n\n## Datasource explaining\n- Datasts name : \"CO2_Emissions_1960-2018.csv\"\n- Datasets source : [Kaggle CO2 Emissions _ 1960 - 2018](https:\/\/www.kaggle.com\/kkhandekar\/co2-emissions-1960-2018)\n- Datasets feature table(Things I want) :\n  \n  \n| Feature | Column name | data type | \n| : --- : | : --- : | : --- : |\n| Categorical | Country Name | object64 | \n| Numerical - Continuous | Year | int64 | \n| Numerical - Continuous | Emissions | float64 | ","84c3ec18":"## Library importing ","168d375d":"## Continent - Country Emmision analysis \nAfter industrial revolution, CO2 emmisions might increase as time flows. But is there difference of growth by continent? We will firstly view Emmision by contient through year. We will view data with boxplot through year.","d8be4f4f":"First, we will divide categories for analysis purpose. ","5271ca12":"# Data glimpse","4bc344ed":"**North America country Emmisions**","75ee926e":"Same as chart of Asia, the rank of emmision by countries is almost same through years. But the median amount of in Europe is much higher than its in world. ","c4fc24e7":"We will do EDA with dff and dff_other. ","51ec886c":"In Asia, countries in arab affects amount of emmision in Asia(As i thinks, China will make much amount of emmisions :). After 1980, The amount of emmision in Asia pass the amoumt of World. In today, I think developed countries makes fewer amount of emmisions and developing countries makes more amount of emmisions. But in this chart, the countries which made most in past makes most emmisions in today. ","38b86b82":"We will see which country affect to CO2 Emmisions most developed countries or developing countries.","fc60067e":"## Other category analysis \nWe will see groups of countries by some criteria such as gdp, geo+gdp, etc. And also we will see that CO2 emmisions effecting by development.","bddb02a8":"In Africa, Most contries has fewer amount of emmisions than World. With above chart, I can get insight the countries made more CO2 emmisions in past, makes much more CO2 in today. To get more accurate insight of my think, we will show other category analysis below.","e82ba4fb":"But continent where developing countries is in most as i think has fewer amount of emmisions than other continent above, and its median emmisions is placed in behind of World.  ","4e359c18":"**Asia country Emmisions**","e0b5b58b":"### Geographic + NGO\n","13acbc70":"## Data importing","7758053d":"# Analysis Preparation\n## Function importing ","bf182161":"**Background Knowlege**\n1. demographic dividend : Occurrences in a country that enjoys accelerated economic growth that tems froms the decline in fertilitly and motrtality rates. \n3. IBRD : International Bank of Reconstruction and Development\n4. IDA : International Development Association\n\n**Category**\n1. Geographic : 'Africa Eastern and Southern', 'Africa Western and Central', 'Arab Wrold', 'Central Europe and the Baltics', 'Caribbean small states', 'East Asia & Pacific', 'Europe & Central Asia', 'Euro area', 'European Union', 'Latin America & Caribbean', 'Middle East & North Africa', 'Other small states', 'Pacific island small states', 'South Asia', 'Sub-Saharan Africa', 'Small states', 'World'\n\n\n2. Income : 'High income', 'Low income', 'Middle income', 'Upper middle income', 'Lower middle income', 'Low & middle income'\n\n\n3. Geographic + Income\n    - 'East Asia & Pacific (excluding high income)', 'East Asia & Pacific'\n    - 'Europe & Central Asia (excluding high income)', 'Europe & Central Asia'\n    - 'Latin America & Caribbean (excluding high income)', 'Latin America & Caribbean',\n    - 'Middle East & North Africa', 'Middle East & North Africa (excluding high income)'\n    - 'Sub-Saharan Africa (excluding high income)', 'Sub-Saharan Africa'\n\n4. Geographic + NGO : 'East Asia & Pacific (IDA & IBRD countries)', 'Europe & Central Asia (IDA & IBRD countries)', 'Latin America & the Caribbean (IDA & IBRD countries)', 'Middle East & North Africa (IDA & IBRD countries)', 'South Asia (IDA & IBRD)', 'Sub-Saharan Africa (IDA & IBRD countries)' vs 'OECD members', 'World'\n\n5. Demographic dividend : 'Early-demographic dividend', 'Pre-demographic dividend', 'Post-demographic dividend', 'Late-demographic dividend'\n\n\n6. NGO : 'IBRD only', 'IDA & IBRD total', 'IDA total', 'IDA blend', 'IDA only' vs 'OECD memebers', 'World'\n\n\n7. Developing countries vs Developed countries vs World : 'Heavily indebted poor countries (HIPC)', 'Least developed countries: UN classification' vs 'OECD members', 'World' "}}