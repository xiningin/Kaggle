{"cell_type":{"fba45f96":"code","dd9f73fe":"code","72bf3762":"code","67dee090":"code","2c79cac0":"code","f86ee351":"code","4a6a7bf9":"code","e0644256":"code","67ef041c":"code","79e81cd4":"code","f43cd82f":"code","f18ce1d5":"code","acb83020":"code","b2ec9c11":"code","f306fc8b":"code","aef9fb13":"code","10d20a57":"code","b02f40fb":"code","b85f914c":"code","85b2a6ff":"code","d06b0f54":"code","193a1f9c":"code","0a0b62c6":"code","96c1dd3e":"code","7784cfeb":"code","12200b27":"code","55fd47c6":"code","6196aef7":"code","2046edb1":"code","1d7f43d9":"markdown","d19d048c":"markdown","9ac7af88":"markdown","6332b13d":"markdown","8bc271e9":"markdown","26f7d0bf":"markdown"},"source":{"fba45f96":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","dd9f73fe":"from scipy.sparse import csr_matrix, hstack\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import Ridge, Lasso, LinearRegression, LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier, DecisionTreeRegressor\nfrom sklearn.metrics import accuracy_score,roc_auc_score, confusion_matrix, classification_report, mean_squared_error\nfrom sklearn.model_selection import train_test_split, cross_val_score, StratifiedKFold, GridSearchCV\nfrom sklearn.preprocessing import OneHotEncoder\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\npd.set_option('display.max_columns', 100)\n\n","72bf3762":"data=pd.read_csv('..\/input\/OpenData2018.csv', sep=\";\")","67dee090":"data.head()","2c79cac0":"#\u0417\u0430\u043b\u0438\u0448\u0438\u043c\u043e \u0432 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0456 \u0442\u0456\u043b\u044c\u043a\u0438 \u0447\u0430\u0441\u0442\u0438\u043d\u0443 \u0434\u0430\u043d\u0438\u0445\ncolumns=['Birth', 'SEXTYPENAME', 'REGNAME', 'AREANAME', 'TERNAME',\n       'REGTYPENAME', 'TerTypeName', 'ClassProfileNAME', 'ClassLangName',\n       'EONAME', 'EOTYPENAME', 'UkrBall100', 'UkrTestStatus','mathBall100','mathTestStatus', 'physBall100', 'physTestStatus' ]\nX_full=data[columns]\nX_full.shape","f86ee351":"# \u0417\u0430\u043b\u0438\u0448\u0438\u043c\u043e \u0432 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0456 \u0442\u0456\u043b\u044c\u043a\u0438 \u0442\u0438\u0445, \u044f\u043a\u0456 \u0441\u043a\u043b\u0430\u043b\u0438 \u0443\u043a\u0440.\u043c\u043e\u0432\u0443, \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0443 \u0442\u0430 \u0444\u0456\u0437\u0438\u043a\u0443\nX_full.dropna(subset=['UkrTestStatus','mathTestStatus','physTestStatus'], inplace=True)\nX_full.shape","4a6a7bf9":"X_full.head()","e0644256":"X_full.describe(include='all')","67ef041c":"X_full.info()","79e81cd4":"#TO-DO \u0437'\u044f\u0441\u0443\u0439\u0442\u0435, \u044f\u043a\u0456 \u0444\u0456\u0442\u0447\u0456 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0456\u0430\u043b\u044c\u043d\u0456 \u0442\u0430 \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u044e\u0442\u044c OneHot \u043f\u0435\u0440\u0435\u0442\u0432\u043e\u0440\u0435\u043d\u043d\u044f, \u044f\u043a\u0456 \u0437\u0430\u043b\u0438\u0448\u0438\u043c\u043e \u0431\u0456\u043d\u0430\u0440\u043d\u0438\u043c\u0438, \u044f\u043a\u0456 \u0447\u0438\u0441\u043b\u043e\u0432\u0456 \u0456 \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u044e\u0442\u044c \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0430\u0446\u0456\u0457\n\n#columns_OneHot=['REGNAME', 'AREANAME', 'TERNAME', ........]\n#columns_bin=['SEXTYPENAME', 'TerTypeName', ........]\n#columns_numeric=['Birth', 'UkrBall100'...........]","f43cd82f":"#TO-DO \u041f\u0435\u0440\u0435\u0442\u0432\u043e\u0440\u0456\u0442\u044c \u0431\u0456\u043d\u0430\u0440\u043d\u0456 \u0444\u0456\u0442\u0447\u0456 \u043d\u0430 0 \u0442\u0430 1\n\n#X_full['SEXTYPENAME']=X_full['SEXTYPENAME'].apply(lambda x: 0 if x=='\u0436\u0456\u043d\u043e\u0447\u0430' else 1)\n#X_full['Ter......\n#X_full['Uk.....\n#X_full['.....\n#X_full['.....\n\n\n","f18ce1d5":"#TO-DO \u0417\u0430\u043f\u043e\u0432\u043d\u0456\u0442\u044c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0434\u043b\u044f \u0443\u0441\u0438\u0445 \u0442\u0438\u043f\u0456\u0432 \u0444\u0456\u0442\u0447, \u0434\u043b\u044f \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0456\u0430\u043b\u044c\u043d\u0438\u0445 \u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434 \u0441\u0442\u0440\u0456\u043d\u0433\u043e\u043c 'non', \u0430 \u0434\u043b\u044f \u0456\u043d\u0448\u0438\u0445 \u043d\u0443\u043b\u044f\u043c\u0438 \u0430\u0431\u043e \u0441\u0435\u0440\u0435\u0434\u043d\u0456\u043c\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f\u043c\u0438\n# \u0422\u0430\u043a\u043e\u0436 \u043f\u0430\u043c'\u044f\u0442\u0430\u0439\u0442\u0435, \u0449\u043e \u0442\u0430\u0433\u0440\u0435\u0442 \u0442\u0430\u043a\u043e\u0436 \u043c\u0430\u0454 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0456 \u0457\u0445 \u043d\u0435\u043e\u0431\u0445\u0456\u0434\u043d\u043e \u043e\u0431\u0440\u043e\u0431\u0438\u0442\u0438\n\n#X_full[columns_OneHot]=X_full[columns_OneHot].fillna('non')\n#X_full[columns_bin]=X_full[columns_bin].fillna(0)\n#X_full[columns_numeric]=........\n#X_full['physBall100']=......\n\n","acb83020":"#TO-DO  \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0456\u0430\u043b\u044c\u043d\u0456 \u0444\u0456\u0442\u0447\u0456  \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u044e\u0442\u044c OneHot \u043f\u0435\u0440\u0435\u0442\u0432\u043e\u0440\u0435\u043d\u043d\u044f\n#onehot_encoder=OneHotEncoder()\n#encoded_categorical_columns =onehot_encoder.fit_transform(X_full[columns_OneHot])","b2ec9c11":"#encoded_categorical_columns.shape","f306fc8b":"#TO-DO \u0447\u0438\u0441\u043b\u043e\u0432\u0456 \u0444\u0456\u0442\u0447\u0456 \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u044e\u0442\u044c OneHot \u043f\u0435\u0440\u0435\u0442\u0432\u043e\u0440\u0435\u043d\u043d\u044f\n\n#tmp_scaled = StandardScaler().fit_transform(X_full[columns_numeric])","aef9fb13":"#TO-DO \u0437`\u0454\u0434\u043d\u0430\u0439\u0442\u0435 \u0432\u0441\u0435 \u0432 \u043e\u0434\u0438\u043d \u0434\u0430\u0442\u0430\u0441\u0435\u0442\n\n#X = csr_matrix(hstack([encoded_categorical_columns,tmp_scaled, X_full[columns_bin]]))","10d20a57":"#TO-DO \u0441\u0442\u0432\u043e\u0440\u0438\u043c\u043e \u043e\u043a\u0440\u0435\u043c\u043e \u0442\u0430\u0440\u0433\u0435\u0442\u0438 \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u0447\u0456 \u043a\u043b\u0430\u0441\u0438\u0444\u0456\u043a\u0430\u0446\u0456\u0457 \u0442\u0430 \u0440\u0435\u0433\u0440\u0435\u0441\u0456\u0457\n\n#y_reg=X_full['physBall100']\n#y_cl=X_full['physTestStatus']","b02f40fb":"#TO-DO \u0412\u0440\u0430\u0445\u043e\u0432\u0443\u0439\u0442\u0435 \u0431\u0430\u043b\u0430\u043d\u0441 \u043a\u043b\u0430\u0441\u0456\u0432 \u043a\u043e\u043b\u0438 \u0431\u0443\u0434\u0435\u0442\u0435 \u0440\u043e\u0431\u0438\u0442\u0438 \u0432\u0438\u0441\u043d\u043e\u0432\u043a\u0438!\n#y_cl.value_counts(normalize=True)","b85f914c":"#lg=LogisticRegression()","85b2a6ff":"#skf=StratifiedKFold(n_splits=5, shuffle=True, random_state=17)","d06b0f54":"#cross_val_score(......)","193a1f9c":"#lg.fit(.....)","0a0b62c6":"#cf=confusion_matrix(....)\n","96c1dd3e":"#sns.heatmap(cf,annot=True )\n#plt.ylabel='predict'\n#plt.xlabel='real target'\n#plt.show()","7784cfeb":"#rd=Lasso()","12200b27":"#cross_val_score(.....)\n","55fd47c6":"#.........","6196aef7":"#.............","2046edb1":"# \u0412\u0438\u0441\u043d\u043e\u0432\u043a\u0438","1d7f43d9":"1. \u041f\u0440\u043e\u0445\u0430\u043d\u043d\u044f \u043e\u0437\u043d\u0430\u0439\u043e\u043c\u0438\u0442\u0438\u0441\u044f \u0437 \u043e\u043f\u0438\u0441\u043e\u043c \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0443\n\nhttps:\/\/docs.google.com\/spreadsheets\/d\/1CrqVAfFHqhNoQjS-pyezW6jo1cbuajY4BJWD21UwXEE\/edit?usp=sharing ","d19d048c":"**TO-DO**\n\n\u0414\u0430\u043b\u0456 \u0432\u0438\u043a\u043e\u043d\u0443\u0454\u043c\u043e \u0437\u0430\u0432\u0434\u0430\u043d\u043d\u044f \u0437 \u043f.5 \u0437\u0433\u0456\u0434\u043d\u043e https:\/\/github.com\/SerhiyProtsenko\/SumDUDataScienceCourse\/tree\/master\/module \n\n\u0429\u043e \u043d\u0435\u043e\u0431\u0445\u0456\u0434\u043d\u043e \u0437\u0440\u043e\u0431\u0438\u0442\u0438?\n1. EDA (exploratory data analysis)\n2. \u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0456\u044f \u043d\u043e\u0432\u0438\u0445 \u0444\u0456\u0442\u0447.\n3. \u0421\u043a\u0435\u043b\u0456\u043d\u0433 \u0444\u0456\u0442\u0447 \u0437\u0430 \u043f\u043e\u0442\u0440\u0435\u0431\u0438\n4. \u041f\u0435\u0440\u0435\u0442\u0432\u043e\u0440\u0435\u043d\u043d\u044f \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0456\u0430\u043b\u044c\u043d\u0438\u0445 \u0444\u0456\u0442\u0447 \u0432 pd.get_dummies, onehot encoding, countvectorise, tfidf (\u0437\u0430 \u043f\u043e\u0442\u0440\u0435\u0431\u0438 \u0432 \u0437\u0430\u043b\u0435\u0436\u043d\u043e\u0441\u0442\u0456 \u0432\u0456\u0434 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0443)\n5. train_test_split \u0442\u0430 cross_val_score\n6. \u0421\u0442\u0432\u043e\u0440\u0435\u043d\u043d\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0434\u043b\u044f \u043a\u043b\u0430\u0441\u0438\u0444\u0456\u043a\u0430\u0446\u0456\u0457: sklearn.linear_model.LogisticRegression, sklearn.tree.DecisionTreeClassifier\n7. \u0414\u043b\u044f \u0440\u0435\u0433\u0440\u0435\u0441\u0456\u0457 : sklearn.linear_model.LinearRegression, .Ridge, .Lasso, DecisionTreeRegressor\n8. \u0410\u043d\u0430\u043b\u0456\u0437 \u043c\u0435\u0442\u0440\u0438\u043a \u044f\u043a\u043e\u0441\u0442\u0456: \u0440\u0435\u0433\u0440\u0435\u0441\u0456\u044f sklearn.metrics.mean_squared_error, sklearn.metrics.mean_absolute_error.\n9. \u0410\u043d\u0430\u043b\u0456\u0437 \u043c\u0435\u0442\u0440\u0438\u043a \u044f\u043a\u043e\u0441\u0442\u0456: \u043a\u043b\u0430\u0441\u0438\u0444\u0456\u043a\u0430\u0446\u0456\u044f  from sklearn.metrics import accuracy_score, roc_auc_score, confusion_matrix, classification_report. \u0417\u043d\u0430\u0442\u0438 \u043a\u043e\u043b\u0438 \u043c\u043e\u0436\u043d\u0430 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 accuracy_score \u0442\u0430 roc_auc_score, \u0437\u043d\u0430\u0442\u0438 \u043f\u0440\u043e \u0431\u0430\u043b\u0430\u043d\u0441 \u043a\u043b\u0430\u0441\u0456\u0432\n10. \u041f\u0456\u0441\u043b\u044f \u0430\u043d\u0430\u043b\u0456\u0437\u0443 \u043c\u0435\u0442\u0440\u0438\u043a \u043f\u043e\u0432\u0435\u0440\u043d\u0443\u0442\u0438\u0441\u044f \u0434\u043e \u043f. 1,2,3 \u0442\u0430 \u0437\u0433\u0435\u043d\u0435\u0440\u0443\u0432\u0430\u0442\u0438 \u0434\u043e\u0434\u0430\u0442\u043a\u043e\u0432\u0456 \u0444\u0456\u0442\u0447\u0456\n11. \u0417\u0440\u043e\u0431\u0438\u0442\u0438 \u043f\u043e\u0448\u0443\u043a \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u0438\u0445 \u0433\u0456\u043f\u0435\u0440\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0456\u0432 \u0437\u0430 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e sklearn.model_selection.GridSearchCV \u0430\u0431\u043e \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u043d\u0438\u043c\u0438 \u043c\u043e\u0434\u0435\u043b\u044f\u043c\u0438 LassoCV, RidgeCV \u0456 \u0442.\u0456.\n12. \u041f\u043e\u0432\u0435\u0440\u043d\u0443\u0442\u0438\u0441\u044f \u0434\u043e \u043f.9-10 \u0442\u0430 \u0437\u0430 \u043f\u043e\u0442\u0440\u0435\u0431\u0438 1,2,3\n13. \u0417\u0440\u043e\u0431\u0438\u0442\u0438 \u0432\u0438\u0441\u043d\u043e\u0432\u043a\u0438\n14. \u041f\u043e\u044f\u0441\u043d\u0438\u0442\u0438, \u0449\u043e \u0432\u0438 \u0440\u043e\u0431\u0438\u043b\u0438 \u0441\u0432\u043e\u0457\u043c\u0438 \u0441\u043b\u043e\u0432\u0430\u043c\u0438","9ac7af88":"**\u0417\u0430\u0432\u0434\u0430\u043d\u043d\u044f \u0446\u044c\u043e\u0433\u043e \u043c\u043e\u0434\u0443\u043b\u044e \u043f\u0440\u043e\u0430\u043d\u0430\u043b\u0456\u0437\u0443\u0432\u0430\u0442\u0438 \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0456\u0432 \u0417\u041d\u041e 2018 \u0440\u043e\u043a\u0443 \u0442\u0430 \u043f\u043e\u0431\u0443\u0434\u0443\u0432\u0430\u0442\u0438 \u043c\u043e\u0434\u0435\u043b\u0456, \u044f\u043a\u0456 \u0431 \u043f\u0435\u0440\u0435\u0434\u0431\u0430\u0447\u0443\u0432\u0430\u043b\u0438:**\n\n- \u043e\u0446\u0456\u043d\u043a\u0443 \u0437 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0443 \u0444\u0456\u0437\u0438\u043a\u0430 (\u0437\u0430\u0434\u0430\u0447\u0430 \u0440\u0435\u0433\u0440\u0435\u0441\u0456\u0457)\n- \u0441\u043a\u043b\u0430\u0432\/\u043d\u0435 \u0441\u043a\u043b\u0430\u0432 \u0417\u041d\u041e \u0437 \u0444\u0456\u0437\u0438\u043a\u0438 (\u0437\u0430\u0434\u0430\u0447\u0430 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0456\u043a\u0430\u0446\u0456\u0457)","6332b13d":"**TO-DO**\n\n1. \u041d\u0435\u043e\u0431\u0445\u0456\u0434\u043d\u043e \u0437\u0440\u043e\u0431\u0438\u0442\u0438 \u043f\u0440\u0435\u0434\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0456\u043d\u0433 \u0434\u0430\u043d\u0438\u0445, \u0430 \u0441\u0430\u043c\u0435:\n   - \u0437'\u044f\u0441\u0443\u0439\u0442\u0435, \u044f\u043a\u0456 \u0444\u0456\u0442\u0447\u0456 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0456\u0430\u043b\u044c\u043d\u0456 \u0442\u0430 \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u044e\u0442\u044c OneHot \u043f\u0435\u0440\u0435\u0442\u0432\u043e\u0440\u0435\u043d\u043d\u044f, \u044f\u043a\u0456 \u0437\u0430\u043b\u0438\u0448\u0438\u043c\u043e \u0431\u0456\u043d\u0430\u0440\u043d\u0438\u043c\u0438, \u044f\u043a\u0456 \u0447\u0438\u0441\u043b\u043e\u0432\u0456 \u0456 \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u044e\u0442\u044c \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0430\u0446\u0456\u0457 (\u0437\u0430 \u0431\u0430\u0436\u0430\u043d\u043d\u044f\u043c)\n   - \u0437\u0440\u043e\u0431\u0456\u0442\u044c \u043d\u0435\u043e\u0431\u0445\u0456\u0434\u043d\u0456 \u043f\u0435\u0440\u0435\u0442\u0432\u043e\u0440\u0435\u043d\u043d\u044f \u0444\u0456\u0442\u0447.\n\n","8bc271e9":"**TO-DO**\n\n****\n1. \u0417\u0440\u043e\u0431\u0456\u0442\u044c EDA (exploratory data analysis)\n2. \u0417\u0440\u043e\u0431\u0456\u0442\u044c \u0432\u0438\u0441\u043d\u043e\u0432\u043a\u0438 \u0437 EDA","26f7d0bf":"**TO-DO**\n\n\u0414\u0430\u043b\u0456 \u0432\u0438\u043a\u043e\u043d\u0443\u0454\u043c\u043e \u0437\u0430\u0432\u0434\u0430\u043d\u043d\u044f \u0437\u0433\u0456\u0434\u043d\u043e https:\/\/github.com\/SerhiyProtsenko\/SumDUDataScienceCourse\/tree\/master\/module \n\n\u0429\u043e \u043d\u0435\u043e\u0431\u0445\u0456\u0434\u043d\u043e \u0437\u0440\u043e\u0431\u0438\u0442\u0438?\n1. EDA (exploratory data analysis)\n2. \u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0456\u044f \u043d\u043e\u0432\u0438\u0445 \u0444\u0456\u0442\u0447.\n3. \u0421\u043a\u0435\u043b\u0456\u043d\u0433 \u0444\u0456\u0442\u0447 \u0437\u0430 \u043f\u043e\u0442\u0440\u0435\u0431\u0438\n4. \u041f\u0435\u0440\u0435\u0442\u0432\u043e\u0440\u0435\u043d\u043d\u044f \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0456\u0430\u043b\u044c\u043d\u0438\u0445 \u0444\u0456\u0442\u0447 \u0432 pd.get_dummies, onehot encoding, countvectorise, tfidf (\u0437\u0430 \u043f\u043e\u0442\u0440\u0435\u0431\u0438 \u0432 \u0437\u0430\u043b\u0435\u0436\u043d\u043e\u0441\u0442\u0456 \u0432\u0456\u0434 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0443)\n5. train_test_split \u0442\u0430 cross_val_score\n6. \u0421\u0442\u0432\u043e\u0440\u0435\u043d\u043d\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0434\u043b\u044f \u043a\u043b\u0430\u0441\u0438\u0444\u0456\u043a\u0430\u0446\u0456\u0457: sklearn.linear_model.LogisticRegression(\u0437\u0430 \u0431\u0430\u0436\u0430\u043d\u043d\u044f\u043c), sklearn.tree.DecisionTreeClassifier\n7. \u0414\u043b\u044f \u0440\u0435\u0433\u0440\u0435\u0441\u0456\u0457 : sklearn.linear_model.LinearRegression(\u0437\u0430 \u0431\u0430\u0436\u0430\u043d\u043d\u044f\u043c), .Ridge(\u0437\u0430 \u0431\u0430\u0436\u0430\u043d\u043d\u044f\u043c), .Lasso(\u0437\u0430 \u0431\u0430\u0436\u0430\u043d\u043d\u044f\u043c), DecisionTreeRegressor\n8. \u0410\u043d\u0430\u043b\u0456\u0437 \u043c\u0435\u0442\u0440\u0438\u043a \u044f\u043a\u043e\u0441\u0442\u0456: \u0440\u0435\u0433\u0440\u0435\u0441\u0456\u044f sklearn.metrics.mean_squared_error, sklearn.metrics.mean_absolute_error.\n9. \u0410\u043d\u0430\u043b\u0456\u0437 \u043c\u0435\u0442\u0440\u0438\u043a \u044f\u043a\u043e\u0441\u0442\u0456: \u043a\u043b\u0430\u0441\u0438\u0444\u0456\u043a\u0430\u0446\u0456\u044f  from sklearn.metrics import accuracy_score, roc_auc_score, confusion_matrix, classification_report. \u0417\u043d\u0430\u0442\u0438 \u043a\u043e\u043b\u0438 \u043c\u043e\u0436\u043d\u0430 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 accuracy_score \u0442\u0430 roc_auc_score, \u0437\u043d\u0430\u0442\u0438 \u043f\u0440\u043e \u0431\u0430\u043b\u0430\u043d\u0441 \u043a\u043b\u0430\u0441\u0456\u0432\n10. \u041f\u0456\u0441\u043b\u044f \u0430\u043d\u0430\u043b\u0456\u0437\u0443 \u043c\u0435\u0442\u0440\u0438\u043a \u043f\u043e\u0432\u0435\u0440\u043d\u0443\u0442\u0438\u0441\u044f \u0434\u043e \u043f. 1,2,3 \u0442\u0430 \u0437\u0433\u0435\u043d\u0435\u0440\u0443\u0432\u0430\u0442\u0438 \u0434\u043e\u0434\u0430\u0442\u043a\u043e\u0432\u0456 \u0444\u0456\u0442\u0447\u0456\n11. \u0417\u0440\u043e\u0431\u0438\u0442\u0438 \u043f\u043e\u0448\u0443\u043a \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u0438\u0445 \u0433\u0456\u043f\u0435\u0440\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0456\u0432 \u0437\u0430 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e sklearn.model_selection.GridSearchCV \u0430\u0431\u043e \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u043d\u0438\u043c\u0438 \u043c\u043e\u0434\u0435\u043b\u044f\u043c\u0438 LassoCV(\u0437\u0430 \u0431\u0430\u0436\u0430\u043d\u043d\u044f\u043c), RidgeCV(\u0437\u0430 \u0431\u0430\u0436\u0430\u043d\u043d\u044f\u043c) \u0456 \u0442.\u0456.\n12. \u041f\u043e\u0432\u0435\u0440\u043d\u0443\u0442\u0438\u0441\u044f \u0434\u043e \u043f.9-10 \u0442\u0430 \u0437\u0430 \u043f\u043e\u0442\u0440\u0435\u0431\u0438 1,2,3\n13. \u0417\u0440\u043e\u0431\u0438\u0442\u0438 \u0432\u0438\u0441\u043d\u043e\u0432\u043a\u0438\n14. \u041f\u043e\u044f\u0441\u043d\u0438\u0442\u0438, \u0449\u043e \u0432\u0438 \u0440\u043e\u0431\u0438\u043b\u0438 \u0441\u0432\u043e\u0457\u043c\u0438 \u0441\u043b\u043e\u0432\u0430\u043c\u0438"}}