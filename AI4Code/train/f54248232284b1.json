{"cell_type":{"33f71f9c":"code","c44bf429":"code","292878a4":"code","3cd3fe81":"code","6732cf2b":"code","9b56694c":"code","7083e2e8":"code","15eaadaf":"code","65f1f508":"code","8befb3e5":"code","64ab9377":"code","b1489d76":"code","8f56b332":"code","8b284fe1":"code","b1b661b9":"code","1041eb6f":"code","028fb199":"code","f87ffd96":"code","7c663717":"code","78e15661":"code","832297e7":"code","77a97542":"code","68d30016":"code","5ea4943f":"code","d3de4af0":"code","c190527f":"code","271fe904":"code","be9c6670":"code","aca04bb8":"code","a9dfa669":"code","9b05bc56":"code","84a31c1a":"code","334f9915":"code","a46999da":"code","ce40d7d9":"code","83773703":"code","7a760c5d":"code","e8a90891":"code","e773e524":"code","e7640ee6":"code","373fa185":"code","93eeeef3":"code","fe90d524":"code","f91b4888":"code","e0425124":"code","d89b18a0":"code","b886c633":"code","711be930":"code","0734a7d2":"code","621409eb":"code","2e051fc4":"code","74b199a6":"code","2cd8f248":"code","0f54ae35":"code","0bf9818f":"code","66eef5d1":"code","de5c093a":"code","4c0edce9":"code","0fd6dacb":"code","53cb1120":"code","6f9a5949":"code","6e977e59":"code","ab9d83c0":"code","20f9beb5":"code","28ec2de6":"code","faaadadf":"code","cc7de1d4":"code","8c1fda01":"markdown","b9bf27a7":"markdown","ba78d629":"markdown","b4e6d90c":"markdown","ac3860c8":"markdown","f991a22a":"markdown","7fbac71f":"markdown","d8067532":"markdown","0c2584e3":"markdown","90a27948":"markdown","7287329d":"markdown","b9b5a590":"markdown","8a41f5f5":"markdown","1d1e7f5e":"markdown","a60bab96":"markdown","9cdd12aa":"markdown","78248074":"markdown","d773f274":"markdown","50585579":"markdown","637c259e":"markdown","fac1365f":"markdown","928f7981":"markdown","1519ad53":"markdown","84ecce0d":"markdown","07c7d8dc":"markdown","fa321359":"markdown","1dee1ba1":"markdown","ad9eaaea":"markdown","b5a53714":"markdown","552cc5ae":"markdown","919e8346":"markdown","880ebe51":"markdown","8f3f87ec":"markdown","036ca9f5":"markdown","ebbfeb9a":"markdown","fe971c67":"markdown","4e53d5ec":"markdown","7d346b0c":"markdown","16bd3fb6":"markdown","d8f9761d":"markdown","0ad40848":"markdown","cb1a668b":"markdown","b84ef35c":"markdown"},"source":{"33f71f9c":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport os\n\nfrom sklearn.metrics import accuracy_score, confusion_matrix, roc_curve, roc_auc_score, auc\nfrom sklearn.model_selection import train_test_split, cross_val_score, GridSearchCV\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler \nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","c44bf429":"# Graphics in retina format are more sharp and legible\n%config InlineBackend.figure_format = 'retina'","292878a4":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","3cd3fe81":"#Reading the data\ndf = pd.read_csv('\/kaggle\/input\/hotel-booking-demand\/hotel_bookings.csv')","6732cf2b":"pd.set_option('display.max_columns', None)\ndf.head()","9b56694c":"df.shape","7083e2e8":"df.info()","15eaadaf":"#Converting this date tiem column to its correct type otherwise it shall be counted in categorical features and mess with the visualisations\ndf['reservation_status_date'] = df['reservation_status_date'].astype('datetime64')","65f1f508":"#Separating categorical columns in a list for the ease of visualising charts for categorical variables\ncategoricals = [i for i in df.columns if df.dtypes[i] == 'object']\n#Separating numerical columns in a list for the ease of visualising charts for numerical variables\nnumericals = [i for i in df.columns if df.dtypes[i] != 'object']\n","8befb3e5":"print(\"Categorical Columns are: \", *categoricals, sep = '\\n')\nprint(\"\\n\")\nprint(\"\\n\")\nprint(\"Numerical Columns are: \", *numericals, sep = '\\n')","64ab9377":"#Visualising categories of the Categorical columns\nfor i in categoricals:\n    print((\"{} : {} Total nunique = {} \\n\").format(i, df[i].unique(), df[i].nunique()))","b1489d76":"#Lets check the summary statistics of the numerical columns first to spot fisrt hand discrepancy in data \ndf.describe()","8f56b332":"#The color palette we shall be using. Although this is not the best one for this dataset but I am using it here. Will cahnge later\n\nsns.color_palette(\"Set2\", 8)","8b284fe1":"sns.set_palette('Set2')\nplt.figure(figsize = (8,6))\nsns.countplot(x = 'hotel', data = df, hue = 'is_canceled')\nplt.title(\"No. of bookings according to reservation status in both of the hotels\")\nplt.show()","b1b661b9":"df.groupby(['hotel'])['is_canceled'].value_counts()","1041eb6f":"df.groupby(['hotel'])['is_canceled'].mean()","028fb199":"_, ax = plt.subplots( nrows = 2, ncols = 1, figsize = (10,10))\nsns.countplot(x = 'market_segment', data = df, ax = ax[0])\nsns.countplot(x = 'market_segment', data = df, hue = 'is_canceled', ax = ax[1])\nplt.show()","f87ffd96":"_, ax = plt.subplots( nrows = 1, ncols = 2, figsize = (12,5))\nsns.countplot(x = 'customer_type', data = df, ax = ax[0])\nsns.countplot(x = 'customer_type', data = df, hue = 'is_canceled', ax = ax[1])\nplt.show()","7c663717":"_, ax = plt.subplots( nrows = 2, ncols = 1, figsize = (10,8))\nsns.countplot(x = 'reservation_status', data = df, ax = ax[0])\nsns.countplot(x ='reservation_status', data = df, hue = 'is_canceled', ax = ax[1])\nplt.show()","78e15661":"df.groupby(['arrival_date_year'])['is_canceled'].mean()","832297e7":"_, ax = plt.subplots( nrows = 2, ncols = 1, figsize = (10,8))\nsns.countplot(x = 'deposit_type', data = df, hue = 'hotel', ax = ax[0])\nsns.countplot(x = 'deposit_type', data = df, hue = 'is_canceled', ax = ax[1])\nplt.show()","77a97542":"order = ['January',\n 'February', 'March' ,'April', 'May', 'June','July', 'August', 'September', 'October', 'November', 'December' ]","68d30016":"_, ax = plt.subplots( nrows = 2, ncols = 1, figsize = (10,8))\nsns.countplot(x = 'arrival_date_month', data = df, ax = ax[0], order = order)\nsns.countplot(x = 'arrival_date_month', data = df, hue = 'is_canceled', ax = ax[1], order = order)\nplt.show()","5ea4943f":"df.groupby(['country'])['is_canceled'].agg( np.mean).sort_values(ascending = False).head(30)","d3de4af0":"mat = ['is_canceled',\n 'lead_time',\n 'stays_in_weekend_nights',\n 'stays_in_week_nights',\n 'adults',\n 'children',\n 'babies',\n 'is_repeated_guest',\n 'previous_cancellations',\n 'previous_bookings_not_canceled',\n 'booking_changes',\n 'days_in_waiting_list',\n 'required_car_parking_spaces',\n 'total_of_special_requests']","c190527f":"plt.figure(figsize = (10,10))\ncormat = df[mat].corr()\nsns.heatmap(cormat)","271fe904":"#Lets print the most correlated features to the target variable, in descending order\ncancel_correlation_array = df.corr()['is_canceled']\ncancel_correlation_array.abs().sort_values(ascending = False)[1:]","be9c6670":"cat  = ['is_canceled',\n    'lead_time',\n 'stays_in_weekend_nights',\n 'stays_in_week_nights',\n 'is_repeated_guest',\n'previous_bookings_not_canceled',\n         'required_car_parking_spaces',\n 'total_of_special_requests'\n]","aca04bb8":"%config InlineBackend.figure_format = 'png' #loads faster\ndf[cat].hist(figsize = (50,50))","a9dfa669":"%config InlineBackend.figure_format = 'png'\nsns.pairplot(df[cat], hue = 'is_canceled', palette = 'husl')","9b05bc56":"plot_list = ['lead_time',\n 'stays_in_weekend_nights',\n 'stays_in_week_nights',\n 'is_repeated_guest',\n'previous_bookings_not_canceled',\n         'required_car_parking_spaces',\n 'total_of_special_requests']","84a31c1a":"for i in plot_list:\n    _, ax = plt.subplots( nrows = 1, ncols = 2, figsize = (12,6))\n    sns.boxplot(x = 'is_canceled', y = i, data = df, showfliers = False, ax = ax[0])\n    sns.violinplot(x = 'is_canceled', y = i, data = df, showfliers = False, ax = ax[1])\n    \n    plt.show()","334f9915":"sns.countplot(x = 'reserved_room_type', hue = 'hotel', data = df)\nplt.show()","a46999da":"_, ax = plt.subplots( nrows = 1, ncols = 2, figsize = (12,5))\nsns.countplot(x = 'reserved_room_type', hue = 'is_canceled', data = df,  ax = ax[0])\nsns.countplot(x = 'assigned_room_type', hue = 'is_canceled', data = df,  ax = ax[1])\nplt.show()","ce40d7d9":"unwanted_room = np.where(df['reserved_room_type'] == df['assigned_room_type'], 'Wanted', 'Unwanted')","83773703":"df['unwanted_room'] = unwanted_room","7a760c5d":"sns.countplot(x = 'unwanted_room', data = df, hue = 'is_canceled')\nplt.title(\"No. of guests who cancelled the booking on getting room type as wanted or unwanted\")\nplt.show()","e8a90891":"df.shape","e773e524":"df.drop('unwanted_room', axis = 1, inplace = True)\ndf.head()","e7640ee6":"df.isna().sum()","373fa185":"nan_replacement_dict = {\"children\": 0 ,\"country\" : \"UKNWN\", 'agent' : 0.0, 'company' : 0}\ndf.fillna(nan_replacement_dict, inplace = True)","93eeeef3":"df.isna().any().sum()","fe90d524":"#Dropping columns that might cause data leakage\ndf.drop(['reservation_status', \n'reservation_status_date' , 'arrival_date_week_number', 'stays_in_weekend_nights', 'arrival_date_month', 'agent'], axis = 1, inplace = True)\ndf.shape","f91b4888":"df.columns","e0425124":"#Copying dataframe so that we don't need to dropcolumns from the main dataframe inplace\ndf1 = df.copy()","d89b18a0":"# Manually Onehotencoding the hotel variable\nhotel = {'Resort Hotel': 0, 'City Hotel' : 1}","b886c633":"df1['hotel'] = df1['hotel'].map(hotel)","711be930":"#one hot encoding \ndf1 = pd.get_dummies(data = df1, columns = ['meal', 'market_segment', 'distribution_channel',\n                                            'reserved_room_type', 'assigned_room_type', 'customer_type', 'deposit_type'], drop_first = True)","0734a7d2":"#LabelEncoder\nle = LabelEncoder()","621409eb":"df1['country'] = le.fit_transform(df1['country'])","2e051fc4":"df1.head()","74b199a6":"df1.shape","2cd8f248":"# Lets separate training and target dataset\nX = df1.drop('is_canceled', axis = 1)\ny = df1['is_canceled']","0f54ae35":"#Splitting them further into training and test set\nX_train,  X_test,y_train, y_test = train_test_split(X, y, test_size = 0.30, random_state = 40)","0bf9818f":"#Setting gloabl random state variable for all the steps used further in the process to avoid randomness in the model accuracy.\nglobal random_state\nrandom_state = 40","66eef5d1":"#Made a model dictionary for all the Classification models being used\nmodel_dict = {\n    'LOR_Model' : LogisticRegression(n_jobs = -1),\n    'KNN_Model' : KNeighborsClassifier(),\n    'RFC_Model' : RandomForestClassifier(n_jobs = -1),\n    'XGB_Model' : XGBClassifier(n_jobs = -1)\n    \n}","de5c093a":"#Function to train the respective algorithm with the train data and printing out accuracy score and confusion matrix\ndef model1(algorithm, X_train, X_test, y_train, y_test):\n    alg = algorithm\n    alg_model = alg.fit(X_train, y_train)\n    global y_pred\n    y_pred = alg_model.predict(X_test)\n    \n    print('Accuracy Score: {}\\n\\nConfusion Matrix:\\n {}'\n      .format(accuracy_score(y_test,y_pred), confusion_matrix(y_test,y_pred)))","4c0edce9":"for name, model in model_dict.items():\n    print(\"\\n\")\n    print(name, \"\\n\")\n    model1(model, X_train, X_test, y_train, y_test )\n","0fd6dacb":"rf_parameters = {\"max_depth\": [10,13],\n                 \"n_estimators\": [10,100,500],\n                 \"min_samples_split\": [2,5]}","53cb1120":"rf_model = RandomForestClassifier()\n","6f9a5949":"rf_cv_model = GridSearchCV(rf_model,\n                           rf_parameters,\n                           cv = 10,\n                           n_jobs = -1,\n                           verbose = 2)\n\nrf_cv_model.fit(X_train, y_train)","6e977e59":"print('Best parameters: ' + str(rf_cv_model.best_params_))","ab9d83c0":"rf_tuned = RandomForestClassifier(max_depth = 13,\n                                  min_samples_split = 2,\n                                  n_estimators = 500)\n\nprint('Model: Random Forest Tuned\\n')\nmodel1(rf_tuned, X_train, X_test, y_train, y_test)","20f9beb5":"rf = RandomForestClassifier()","28ec2de6":"rf_model = rf.fit(X_train, y_train)","faaadadf":"imp_features = pd.DataFrame(data = rf_model.feature_importances_*100, columns = [\"Importances\"], index = X_train.columns)\n","cc7de1d4":"imp_features.sort_values(\"Importances\", ascending = False)[:15].plot(kind = \"barh\")\nplt.xlabel(\"Feature Importances (%)\")","8c1fda01":"There are 32 columns. \n* 12 Categorical\n* 20 Numerical\n\nThere are 4 columns with the missing values-\n1. country\n2. agent\n3. company\n4. children\n\nLets try to study each features first and then we shall deal with these missing columns.","b9bf27a7":"There is not much informaton\/insight directly bring conveyed by the pair plot.\nExcept, the kde plot of the lead time shows a significant difference in shape for both the classes.","ba78d629":"# Handling Missing Values\n","b4e6d90c":"* That's a quite high booking cancellation rate.\n* It would be great if we are able to find the cause for it as well. ","ac3860c8":"# Customer Type","f991a22a":"# Tuning the model with the best accuracy","7fbac71f":"# Cancellation due to the difference in wanted and assigned room type","d8067532":"# **Data Pre-Processing before applying ML Models**\n1. Handling missing values\n2. Handling non-numeric data (handling categorical, ordinal variables and strings)\n3. Feature engineering and creating new features out of existing features.\n4. Extracting only useful and relevant features: Feature selection\n5. Remove features with missing values above a particular threshold\n6. Splitting data into Training and test sets\n","0c2584e3":"## No. of Bookings during the year as per the cancellation status","90a27948":"* Tuned Random Forest Model is giving worse accuracy than the deafult one. \n* In the default model there is no limit for max depth. \n* Increasing max depth gives us better accuracy scores but may decrease generalization.","7287329d":"* **Given the categories, we can understand the different possible categoreis for each feature.**\n* **Some of them are intuitive like hotels, months, countries while some of them are not like meals.**\n* **A few things are not also clear like what's room labels and what are different distribution channel for and market segment of what?**\n* **Who defined them and how are we getting that data?**","b9b5a590":"## Feature Importance","8a41f5f5":"* The plots show the count of bookings by different customer type and their reservation status.\n1. Transient > Transient-Party > Contract > Group.\n> Same order for no. of bookings and cancellation rate in descending order","1d1e7f5e":"# Quick observations\n* 37 % of the people have cancelled their booking as per the dataset.\n* Avg. lead time is 104 days, around 3.5 months.\n* Each booking has on an average 1.8 adults and 0.1 children. \n* Only  3% of the guests are repeated.\n* Median lead time is 69 days. \n\n### Lets try to observe all these features and try to relate them to cancellation\n","a60bab96":"# Box plot of numerical features vs cancellation status","9cdd12aa":"The best model accuracy is obtained with Random Forest Classifier, that is 88.47%","78248074":"* Cancellation rates have remain almost consistent in all 3 years around 35-36%.","d773f274":"* Label Encoding Country column as it has more than 300 categories. \n* It will create a large  no. of columns, if we choose to do one hot encoding","50585579":"# Correlation Heat Map of features","637c259e":"* There are very little no. of no shows. Most of the people cancel the reservataon if they don't wish to come. \n* Well this makes thepoint that there must be some charge on cancelling the fees or some pre deposit, otherwise we would see many no show cases here.\n* These columns are both same columns. When we make is_canceled a target variable, remember to remove this column as well. Coz this is also the same column that we would have to predict.","fac1365f":"Room Types A,D,E have quite high reservation and assignment satus.\nBut as a result, they have high cancellation rate as well.\nAlthough one cancellation reason might be the allotment of unwanted room type.\nLets check it.","928f7981":"# Summary\n* Random Forest Classifier is the best algorithm to predict the cancellation. \n* It is giving 88% accurate predictions nearly.\n* Having noted the important features, and their stats for both the groups for these features, a general presiction can also be made reagrding the cancellation\n* This analysis can help us out in this way.","1519ad53":"* Well, it is highly likely to cancel the reservation if alloted room type is unwanted according to our hypothesis.\n* But here the cancellation rate is very low. \n* Although we may completely disprove our hypothesis according to p value statistics\n* but here we shall just go with the intutition of seeing the chart\n\n* Since, it doesnt follow the hypothesis, so should we drop this column now? What if its an important column?\n* Well, I guess we should keep the original columns and not worry about this as information is already carried by the previous 2 columns. and they contain more info than this as room types A , D, E had more cancellation rates \nLet's drop this column.\n","84ecce0d":"\n\n* The cancellation rate is quite consistently high during april to october having its peak at august.","07c7d8dc":"# Conclusion\n","fa321359":"# **Its Feature Engineering Time Now**","1dee1ba1":"# Market Segment","ad9eaaea":"\n1. As expected, few of the features contribute very less to tell whether the customer will cancel the booking.\nThey are - \n* stays in wekkend nights\n* stay in week nights\n* repeated guest\n* previous booking canceled or not\n* required car parking spaces\n2. Although special request feature's median differ for both of the groups, but since its 75th percentile is 1 that means, its zero for most of the percentage of people. Hence, this would also not help much in predicting. \n\n3. Now, lets discuss about the lead time. \n* It is quite significantly different for both of the groups. \n* The people more likely to cancel have longer lead time for booking.","b5a53714":"# Pair plot of categorical features","552cc5ae":"* City hotel has high Cancellation rate than Resort Hotel.\n* Around 30% for resort hotel and greater than 50 % for city  hotel.\n\n* Well this might have many reasons - \n1. Might be the group that is highly likely to cancel booking dont prefer resort hotel.\n2. It might have strict booking cancellation policy.\n","919e8346":"\n* Deposit type has 3 categories - No Deposit, refundable, Non Refund\n* Either customers have opted for no deposit or non refundable deposits. \n* Maybe refundable deposit type is not offered by the hotels.\n* All of the non refund bookings have been cancelled in our dataset. That might prove important feature based on how many such bookings are part of cancelled bookings.\n\n* No hotel has refundable deposit type","880ebe51":"# Importing Libraries","8f3f87ec":"> 1. As customers with no children may be assumed to leave the children field empty. Hence, lets replace NaN values with zero here.\n> 2. And people with missing values in agent id might have booked themselves, so we may replace it with 0.0\n> 3.  Similarly, NaN value in company column signifies the customer has booked it personally and not on the expense of company.\n> 4. Finally, lets replace the Missing values in company with Unknown category.","036ca9f5":"# Pre Processing Steps","ebbfeb9a":"## Countries with high cancellation rate","fe971c67":"## Cancellation %age in different years","4e53d5ec":"* The chart shows the no. of bookings by different market segment as per the reservation status.\n> Online TA -> Offline TA -> Groups -> Direct -> Corporate \n* Descending order of No. of bookings.\n* Online TA, Offline TA and groups tend to have high cancellation rates. ","7d346b0c":"# Project PS -\n* We have chosen to predict the probability of a guest to cancel the booking. \n* These are the given features like time and date of booking, no. of adults, special requests and others.\n* There are so many data features associated to predict the cancellation.\n* Our first and foremost step will be to understand the data and find the most important features to  predict the cancellation behaviour.Project PS -\n\n*  If we are able to find insights based on certain features, that would be great regarding the EDA.","16bd3fb6":"# Deposit Type","d8f9761d":"![image.png](attachment:1fd65b05-63d8-4767-9540-4c5e95d4918c.png)","0ad40848":"* These are the top 30 countries out of 177 countries  with mean cancellation rate > 60%.","cb1a668b":"Lets try to find the bheaviour of the both of the different groups.","b84ef35c":"This figure illustrates that room tyoes are common across the hotels. Both have room types with same names. "}}