{"cell_type":{"eb44681c":"code","10827a5f":"code","20167f78":"code","1df243e6":"code","07427257":"code","f2a89f75":"code","82b09530":"code","71f77b6c":"code","5336d16f":"code","182fb0da":"code","4aef41fa":"code","f139ee6e":"code","042b91ab":"code","934cd938":"code","9c8b0d83":"code","aa3b5123":"code","197a3f94":"markdown","73c17776":"markdown","38445a45":"markdown","ddf29812":"markdown","1c706233":"markdown","9e656998":"markdown","6b12cd6c":"markdown","9e94a907":"markdown","8f5aea94":"markdown","abad2bd1":"markdown","8a979fd1":"markdown","f8fbf5f9":"markdown","0c094c2f":"markdown"},"source":{"eb44681c":"\n# linear algebra\nimport numpy as np \n# data processing, CSV file I\/O (e.g. pd.read_csv)\nimport pandas as pd \n\n# For data Viz. \nimport matplotlib.pyplot as plt \nimport seaborn as sns \n\n#For warnings.\nimport warnings \nwarnings.filterwarnings('ignore')\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","10827a5f":"df = pd.read_csv('\/kaggle\/input\/synchronous-machine-dataset\/SynchronousMachine.csv')","20167f78":"df.head()","1df243e6":"df.info()","07427257":"df.duplicated().sum()","f2a89f75":"df.isnull().sum()","82b09530":"correlation = df.corr()\nmask = np.triu(np.ones_like(correlation , dtype = bool))\nsns.heatmap(correlation , mask = mask , linewidth = 1 ,annot = True).set_title('Correlation Matrix.')","71f77b6c":"features = df.iloc[:,:-1]\nlabel = df['I_f']","5336d16f":"features.head()","182fb0da":"from sklearn.model_selection import train_test_split \n\nx_train,x_test,y_train,y_test = train_test_split(features , label , test_size = 0.2)\nprint(f'x train shape : {x_train.shape}')\nprint(f'y train shape : {y_train.shape}')\nprint(f'x test shape : {x_test.shape}')\nprint(f'y test shape : {y_test.shape}')","4aef41fa":"from sklearn.linear_model import LinearRegression \n\nlr_model = LinearRegression()\n\nlr_model.fit(x_train,y_train)\n","f139ee6e":"y_pred = lr_model.predict(x_test)","042b91ab":"y_pred[:5]","934cd938":"y_test[:5]","9c8b0d83":"from sklearn.metrics import r2_score,confusion_matrix,mean_squared_error \n\nerror_score = mean_squared_error(y_test,y_pred)\nerror_score_ = error_score * 100 \nprint(f'Error Score: {error_score_}')","aa3b5123":"score = r2_score(y_test,y_pred)\nprint(f'Score : {score}')","197a3f94":"### Checking for Missing Values\/NaN Values.","73c17776":"### Checking for duplicate values,if any.","38445a45":"<b>Here,I_y column has positive correlation , PF columns has weak negative correlation ,e_PF and d_if has strong positive correlation with respect to I_y.  <\/b>","ddf29812":"<b>Model has given similar results as test data , Looks like model has strong r2_score.<\/b>","1c706233":"<b>R2 score comes 1 which means the regression predictions perfectly fit the data.<\/b>","9e656998":"### Importing the Libaries ","6b12cd6c":"### Reading and Understanding the dataset.","9e94a907":"### Accessing Information related to dataset.","8f5aea94":"## Data Cleaning","abad2bd1":"### Let's go with LinearRegression.","8a979fd1":"### Let's seperate features and label for model creation.","f8fbf5f9":"### Let's do train-test split.","0c094c2f":"### Let's do Metric Evaluation of the created Model."}}