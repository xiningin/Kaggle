{"cell_type":{"8d3f63e0":"code","6e13ea59":"code","64813f82":"code","327d2388":"code","3db7326c":"code","3be5546f":"code","6bfb9781":"code","aed3325f":"code","602dfe36":"code","0a419571":"code","69a95a6b":"code","0a2ca44b":"code","f01cd7c3":"code","63771d7d":"code","a924545f":"code","304ad374":"code","c1d3ab83":"code","5ea95135":"code","1f6aa710":"code","c7321e4e":"code","a34f97ed":"code","70ec144a":"code","ac9ffeb8":"code","237c84d4":"code","73932196":"code","de65ce58":"code","01fd0635":"code","913adfb8":"code","66306ee0":"code","10cafc80":"code","637ba7bc":"code","49de4429":"code","e16ab62c":"code","5f53918c":"code","105c8532":"code","f7782289":"code","4730f308":"code","e436e204":"code","c152a06f":"code","4690a7f3":"code","c90a1702":"code","c99f4568":"code","df35b522":"code","7406fdde":"code","5d29d6b1":"code","aea3ae93":"code","638e516d":"code","0b91f41c":"code","29a1eaa2":"code","0f86c3a2":"code","617256b5":"code","e4d688b9":"code","9cdf6d12":"code","479ae7e0":"code","24cdab6e":"code","6b96e04a":"code","705ab3d7":"code","8e7ff7b2":"code","40544d45":"code","771a842e":"code","ebbba4ae":"code","551351fe":"code","e387388c":"code","f713254c":"code","4d2e3ca8":"code","49823699":"code","5aa9a5c8":"code","1eb971f6":"code","e283cc23":"code","d74e952c":"code","584a494c":"code","0a0bc1fb":"code","e55c3b42":"code","f0a9ffea":"code","f857ba1a":"code","64b69a42":"code","c046f691":"code","f29c5426":"code","8c122fce":"code","1313c722":"code","e848fde3":"code","5a0d4750":"code","5059bfd5":"code","2aee54b4":"code","afd32687":"code","a3318576":"code","2e85079c":"code","8f24be36":"code","e464685e":"code","e167d40d":"code","36f83418":"code","b965dddc":"code","6551c910":"code","a4159ea0":"code","dc0ef40e":"markdown","5efe189b":"markdown","521b452d":"markdown","5586ec8f":"markdown","143ef015":"markdown","95b4affd":"markdown","0643d785":"markdown","39e621fe":"markdown","3d2fecdd":"markdown","ef654a0c":"markdown"},"source":{"8d3f63e0":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport cv2, rasterio, json, itertools, math, os\n\nfrom tqdm import tqdm\nfrom IPython.display import SVG\nfrom tensorflow.keras.utils import plot_model, model_to_dot, to_categorical, Sequence\nfrom sklearn.metrics import confusion_matrix, f1_score\nfrom sklearn.preprocessing import *\n\nfrom tensorflow.keras.models import Model, Sequential, load_model\nfrom tensorflow.keras.layers import (Add, Input, Conv2D, Dropout, Activation, BatchNormalization, MaxPooling2D, ZeroPadding2D, \n                                     AveragePooling2D, Flatten, Dense, Concatenate)\nfrom tensorflow.keras.optimizers import *\nfrom tensorflow.keras.callbacks import TensorBoard, Callback, LearningRateScheduler\nfrom tensorflow.keras.initializers import *\nfrom tensorflow.keras.regularizers import *","6e13ea59":"def show_final_history(history):\n    \n    plt.style.use(\"ggplot\")\n    fig, ax = plt.subplots(1,2,figsize=(15,5))\n    \n    ax[0].set_title('Loss')\n    ax[1].set_title('Accuracy')\n    \n    ax[0].plot(history.history['loss'], 'r-', label='Training Loss')\n    ax[0].plot(history.history['val_loss'], 'g-', label='Validation Loss')\n    ax[1].plot(history.history['accuracy'], 'r-', label='Training Accuracy')\n    ax[1].plot(history.history['val_accuracy'], 'g-', label='Validation Accuracy')\n    \n    ax[0].legend(loc='upper right')\n    ax[1].legend(loc='lower right')\n    \n    plt.show();\n    pass","64813f82":"def plot_learning_rate(loss_history):\n    \n    plt.style.use(\"ggplot\")\n    \n    plt.plot(np.arange(0,len(loss_history.lr)), loss_history.lr)\n    plt.show();\n    pass","327d2388":"def plot_confusion_matrix(cm, classes, title='Confusion Matrix', cmap=plt.cm.Blues):\n    \n    cm = cm.astype('float')\/cm.sum(axis=1)[:,np.newaxis]\n    plt.figure(figsize=(10,10))\n    plt.imshow(cm, interpolation='nearest', cmap=cmap)\n    plt.title(title)\n    plt.colorbar()\n    \n    tick_marks = np.arange(len(classes))\n    plt.xticks(tick_marks, classes, rotation=90)\n    plt.yticks(tick_marks, classes)\n    \n    fmt = '.2f'\n    thresh = cm.max()\/2.0\n    \n    for i,j in itertools.product(range(cm.shape[0]), range(cm.shape[1])):\n        \n        plt.text(j,i, format(cm[i,j], fmt),\n                horizontalalignment = 'center',\n                color = \"white\" if cm[i,j] > thresh else \"black\")\n        pass\n    \n    plt.ylabel(\"True Label\")\n    plt.xlabel(\"Predicted Label\")\n    plt.grid(False);\n    pass","3db7326c":"with open(\"..\/input\/eurosat-dataset\/EuroSATallBands\/label_map.json\",\"r\") as f:\n    class_names_encoded = json.load(f)\n    pass\n\nclass_names = list(class_names_encoded.keys())\nnum_classes = len(class_names)\nclass_names_encoded","3be5546f":"bands = {'1':1,'2':2,'3':3,'4':4,'5':5,'6':6,'7':7,'8':8,'8a':9,'9':10,'10':11,'11':12,'12':13}","6bfb9781":"def Normalise(arr_band):\n    \n    arr_band = Normalizer().fit_transform(arr_band)\n    return arr_band","aed3325f":"train_df = pd.read_csv(\"..\/input\/eurosat-dataset\/EuroSATallBands\/train.csv\")\ntrain_labels = train_df.loc[:,'Label']\ntrain_labels = np.array(train_labels)\n\nnum_train_samples = train_labels.shape[0]\n\nval_df = pd.read_csv(\"..\/input\/eurosat-dataset\/EuroSATallBands\/validation.csv\")\nval_labels = val_df.loc[:,'Label']\nval_labels = np.array(val_labels)\n\nnum_val_samples = val_labels.shape[0]\n\nnum_train_samples, num_val_samples","602dfe36":"basePath = \"..\/input\/eurosat-dataset\/EuroSATallBands\/\"\n\ndef data_generator(csv_file, num_classes, band, batchSize = 10, targetSize = 64):\n    \n    df = pd.read_csv(csv_file)\n    df.drop(columns=df.columns[0], inplace=True)\n    num_samples = df.shape[0]\n    \n    while True:\n        \n        for offset in range(0, num_samples, batchSize):\n            batchSamplesIdx = df.index[offset:offset+batchSize]\n            \n            X, y = [], []\n            \n            for i in batchSamplesIdx:\n                img_name = df.loc[i,'Filename']\n                label = df.loc[i,'Label']\n                \n                src = rasterio.open(os.path.join(basePath, img_name))\n                \n                arr_band = src.read(bands[band])\n                arr_band = np.array(arr_band, dtype=np.float32)\n                \n                arr_band = Normalise(arr_band)\n                \n                X.append(arr_band)\n                y.append(label)\n                pass\n            \n            X = np.array(X)\n            y = np.array(y)\n            y = to_categorical(y, num_classes = num_classes)\n            \n            yield X, y\n            pass\n        pass\n    pass","0a419571":"def obtain_tif_images(csv_file, band):\n    \n    df = pd.read_csv(csv_file)\n    df.drop(columns=df.columns[0], inplace=True)\n    num_samples = df.shape[0]\n    \n    X, y = [], []\n    \n    for i in tqdm(range(num_samples)):\n        \n        label = df.loc[i,'Label']\n        tif_name = df.loc[i,'Filename']\n        tif_img = rasterio.open(os.path.join(basePath, tif_name))\n        \n        arr_band = np.array(tif_img.read(bands[band]), dtype=np.float32)\n        arr_band = Normalise(arr_band)\n        \n        X.append(arr_band)\n        y.append(label)\n        \n        pass\n    \n    X = np.array(X)\n    y = np.array(y)\n    \n    return X,y\n    pass\n","69a95a6b":"def convBlock(X, filters, k, stage, block, s=1):\n    \n    conv_base_name = 'conv_' + str(stage) + block + '_branch'\n    bn_base_name = 'bn_' + str(stage) + block + '_branch'\n    ac_base_name = 'ac_' + str(stage) + block + '_branch'    \n    \n    F1 = filters\n    \n    X = Conv2D(filters=F1, kernel_size=(k,k), strides=(s,s), padding='same', name=conv_base_name+'a')(X)\n    X = BatchNormalization(name=bn_base_name+'a')(X)\n    X = Activation(\"relu\", name=ac_base_name+'a')(X)\n    \n    return X\n    pass","0a2ca44b":"def convModel(input_shape, numClasses):\n    \n    X_input = Input(input_shape)\n    \n    X = ZeroPadding2D((5,5), name='zero_padding_1')(X_input)\n    \n    X = Conv2D(8, (3,3), strides=(1,1), padding='same', name=\"conv1\")(X)\n    X = BatchNormalization(name=\"bn_conv1\")(X)\n    \n    X = convBlock(X, 16, 3, 2, block='A', s=1)\n    X = MaxPooling2D((3,3), name=\"max_pooling_2\")(X)\n    X = Dropout(0.25, name=\"dropout_2\")(X)\n    \n    X = convBlock(X, 16, 5, 3, block='A', s=1)\n    X = MaxPooling2D((3,3), name=\"max_pooling_3\")(X)\n    X = Dropout(0.25, name=\"dropout_3\")(X)\n    \n    X = Flatten(name=\"flatten_1\")(X)\n    \n    X = Dense(32, name=\"dense_1\")(X)\n    X = Activation(\"relu\", name=\"dense_relu_1\")(X)\n    X = Dropout(0.25, name=\"dense_dropout_1\")(X)\n    \n    X = Dense(numClasses, activation=\"softmax\", name=\"fc\"+str(numClasses))(X)\n    \n    model = Model(inputs=X_input, outputs=X, name=\"Band_Class_Model\")\n    \n    return model\n    pass","f01cd7c3":"band2_model = convModel(input_shape = (64,64,1), numClasses=10)","63771d7d":"plot_model(band2_model, to_file=\"band-class-model.png\", show_shapes=True, show_layer_names=True)\nSVG(model_to_dot(band2_model).create(prog=\"dot\", format=\"svg\"))","a924545f":"band2_model.summary()","304ad374":"band2_train_generator = data_generator(csv_file=\"..\/input\/eurosat-dataset\/EuroSATallBands\/train.csv\", num_classes=10, batchSize=10, band='2')\nband2_val_generator = data_generator(csv_file=\"..\/input\/eurosat-dataset\/EuroSATallBands\/validation.csv\", num_classes=10, batchSize=10, band='2')","c1d3ab83":"opt = Adam(lr=1e-5)\nband2_model.compile(optimizer=opt, loss='categorical_crossentropy', metrics=['accuracy'])","5ea95135":"epochs = 30\nbatchSize = 100\n\nband2_history = band2_model.fit(band2_train_generator,\n                                steps_per_epoch = num_train_samples\/\/batchSize,\n                                epochs = epochs,\n                                verbose = 1,\n                                validation_data = band2_val_generator,\n                                validation_steps = num_val_samples\/\/batchSize\n                                )","1f6aa710":"show_final_history(band2_history)","c7321e4e":"test_tifs, test_labels = obtain_tif_images(csv_file=\"..\/input\/eurosat-dataset\/EuroSATallBands\/test.csv\", band='2')\n\ntest_labels_encoded = to_categorical(test_labels, num_classes = 10)\n\ntest_tifs.shape, test_labels.shape, test_labels_encoded.shape","a34f97ed":"test_pred2 = band2_model.predict(test_tifs)\ntest_pred2 = np.argmax(test_pred2, axis=1)\ntest_pred2.shape","70ec144a":"cnf_mat = confusion_matrix(test_labels, test_pred2)\n\nplt.figure()\nplot_confusion_matrix(cnf_mat, classes=class_names, title=\"Band 2 Confusion Matrix\")\nplt.grid(False);\nplt.show();","ac9ffeb8":"band3_model = convModel(input_shape = (64,64,1), numClasses=10)","237c84d4":"band3_train_generator = data_generator(csv_file=\"..\/input\/eurosat-dataset\/EuroSATallBands\/train.csv\", num_classes=10, batchSize=10, band='3')\nband3_val_generator = data_generator(csv_file=\"..\/input\/eurosat-dataset\/EuroSATallBands\/validation.csv\", num_classes=10, batchSize=10, band='3')","73932196":"opt = Adam(lr=1e-4)\nband3_model.compile(optimizer=opt, loss='categorical_crossentropy', metrics=['accuracy'])","de65ce58":"epochs = 30\nbatchSize = 100\n\nband3_history = band3_model.fit(band3_train_generator,\n                                steps_per_epoch = num_train_samples\/\/batchSize,\n                                epochs = epochs,\n                                verbose = 1,\n                                validation_data = band3_val_generator,\n                                validation_steps = num_val_samples\/\/batchSize \n                                )","01fd0635":"show_final_history(band3_history)","913adfb8":"test_tifs, test_labels = obtain_tif_images(csv_file=\"..\/input\/eurosat-dataset\/EuroSATallBands\/test.csv\", band='3')\n\ntest_tifs.shape, test_labels.shape","66306ee0":"test_pred3 = band3_model.predict(test_tifs)\ntest_pred3 = np.argmax(test_pred3, axis=1)\ntest_pred3.shape","10cafc80":"cnf_mat = confusion_matrix(test_labels, test_pred3)\n\nplt.figure()\nplot_confusion_matrix(cnf_mat, classes=class_names, title=\"Band 3 Confusion Matrix\")\nplt.grid(False);\nplt.show();","637ba7bc":"band4_model = convModel(input_shape = (64,64,1), numClasses=10)","49de4429":"band4_train_generator = data_generator(csv_file=\"..\/input\/eurosat-dataset\/EuroSATallBands\/train.csv\", num_classes=10, batchSize=10, band='4')\nband4_val_generator = data_generator(csv_file=\"..\/input\/eurosat-dataset\/EuroSATallBands\/validation.csv\", num_classes=10, batchSize=10, band='4')","e16ab62c":"opt = Adam(lr=1e-5)\nband4_model.compile(optimizer=opt, loss='categorical_crossentropy', metrics=['accuracy'])","5f53918c":"epochs = 30\nbatchSize = 100\n\nband4_history = band4_model.fit(band4_train_generator,\n                                steps_per_epoch = num_train_samples\/\/batchSize,\n                                epochs = epochs,\n                                verbose = 1,\n                                validation_data = band4_val_generator,\n                                validation_steps = num_val_samples\/\/batchSize \n                                )","105c8532":"show_final_history(band4_history)","f7782289":"test_tifs, test_labels = obtain_tif_images(csv_file=\"..\/input\/eurosat-dataset\/EuroSATallBands\/test.csv\", band='4')\n\ntest_tifs.shape, test_labels.shape","4730f308":"test_pred4 = band4_model.predict(test_tifs)\ntest_pred4 = np.argmax(test_pred4, axis=1)\ntest_pred4.shape","e436e204":"cnf_mat = confusion_matrix(test_labels, test_pred4)\n\nplt.figure()\nplot_confusion_matrix(cnf_mat, classes=class_names, title=\"Band 4 Confusion Matrix\")\nplt.grid(False);\nplt.show();","c152a06f":"band5_model = convModel(input_shape=(64,64,1), numClasses=10)","4690a7f3":"band5_train_generator = data_generator(csv_file=\"..\/input\/eurosat-dataset\/EuroSATallBands\/train.csv\", band='5', num_classes=10, batchSize=10)\nband5_val_generator = data_generator(csv_file=\"..\/input\/eurosat-dataset\/EuroSATallBands\/validation.csv\", num_classes=10, batchSize=10, band='5')","c90a1702":"opt = Adam(lr=1e-5)\nband5_model.compile(optimizer=opt, loss='categorical_crossentropy', metrics=['accuracy'])","c99f4568":"epochs = 30\nbatchSize = 100\n\nband5_history = band5_model.fit(band5_train_generator,\n                                steps_per_epoch = num_train_samples\/\/batchSize,\n                                epochs = epochs,\n                                verbose = 1,\n                                validation_data = band5_val_generator,\n                                validation_steps = num_val_samples\/\/batchSize \n                                )","df35b522":"show_final_history(band5_history)","7406fdde":"test_tifs, test_labels = obtain_tif_images(csv_file=\"..\/input\/eurosat-dataset\/EuroSATallBands\/test.csv\", band='5')\n\ntest_tifs.shape, test_labels.shape","5d29d6b1":"test_pred5 = band5_model.predict(test_tifs)\ntest_pred5 = np.argmax(test_pred5, axis=1)\ntest_pred5.shape","aea3ae93":"cnf_mat = confusion_matrix(test_labels, test_pred5)\n\nplt.figure()\nplot_confusion_matrix(cnf_mat, classes=class_names, title = \"Band 5 Confusion Matrix\")\nplt.grid(False)\nplt.show();","638e516d":"band6_train_generator = data_generator(csv_file=\"..\/input\/eurosat-dataset\/EuroSATallBands\/train.csv\", band='6', batchSize=10, num_classes=10)\nband6_val_generator = data_generator(csv_file=\"..\/input\/eurosat-dataset\/EuroSATallBands\/validation.csv\", band='6', batchSize=10, num_classes=10)","0b91f41c":"band6_model = convModel(input_shape=(64,64,1), numClasses=10)","29a1eaa2":"opt = Adam(lr=1e-5)\nband6_model.compile(optimizer=opt, loss='categorical_crossentropy', metrics=['accuracy'])","0f86c3a2":"epochs = 30\nbatchSize = 100\n\nband6_history = band6_model.fit(band6_train_generator,\n                               steps_per_epoch = num_train_samples\/\/batchSize,\n                               epochs = epochs,\n                               validation_data = band6_val_generator,\n                               validation_steps = num_val_samples\/\/batchSize\n                               )","617256b5":"show_final_history(band6_history)","e4d688b9":"test_tifs, test_labels = obtain_tif_images(csv_file=\"..\/input\/eurosat-dataset\/EuroSATallBands\/test.csv\", band='6')\n\ntest_tifs.shape, test_labels.shape","9cdf6d12":"test_pred6 = band6_model.predict(test_tifs)\ntest_pred6 = np.argmax(test_pred6, axis=1)\ntest_pred6.shape","479ae7e0":"cnf_mat = confusion_matrix(test_labels, test_pred6)\n\nplt.figure()\nplot_confusion_matrix(cnf_mat, classes=class_names, title=\"Band 6 confusion matrix\")\nplt.grid(False)\nplt.show()","24cdab6e":"band7_train_generator = data_generator(csv_file=\"..\/input\/eurosat-dataset\/EuroSATallBands\/train.csv\", band='7', batchSize = 10, num_classes=10)\nband7_val_generator = data_generator(csv_file=\"..\/input\/eurosat-dataset\/EuroSATallBands\/validation.csv\", band='7', batchSize=10, num_classes=10)","6b96e04a":"band7_model = convModel(input_shape=(64,64,1), numClasses = 10)","705ab3d7":"opt = Adam(lr=1e-5)\nband7_model.compile(optimizer=opt, loss='categorical_crossentropy', metrics=['accuracy'])","8e7ff7b2":"epochs = 30\nbatchSize = 100\n\nband7_history = band7_model.fit(band7_train_generator,\n                               steps_per_epoch = num_train_samples\/\/batchSize,\n                               epochs = epochs,\n                               validation_data = band7_val_generator,\n                               validation_steps = num_val_samples\/\/batchSize,\n                               verbose = 1)","40544d45":"show_final_history(band7_history)","771a842e":"test_tifs, test_labels = obtain_tif_images(csv_file=\"..\/input\/eurosat-dataset\/EuroSATallBands\/test.csv\", band='7')\n\ntest_tifs.shape, test_labels.shape","ebbba4ae":"test_pred7 = band7_model.predict(test_tifs)\ntest_pred7 = np.argmax(test_pred7, axis=1)\ntest_pred7.shape","551351fe":"cnf_mat = confusion_matrix(test_labels, test_pred7)\n\nplt.figure()\nplot_confusion_matrix(cnf_mat, classes=class_names, title=\"Band 7 confusion matrix\")\nplt.grid(False)\nplt.show();","e387388c":"band8_train_generator = data_generator(csv_file=\"..\/input\/eurosat-dataset\/EuroSATallBands\/train.csv\", band='8', batchSize = 10, num_classes = 10)\nband8_val_generator = data_generator(csv_file=\"..\/input\/eurosat-dataset\/EuroSATallBands\/validation.csv\", band='8', batchSize=10, num_classes=10)","f713254c":"band8_model = convModel(input_shape=(64,64,1), numClasses=10)","4d2e3ca8":"opt = Adam(lr=1e-5)\nband8_model.compile(optimizer=opt, loss='categorical_crossentropy', metrics=['accuracy'])","49823699":"epochs = 30\nbatchSize = 100\n\nband8_history = band8_model.fit(band8_train_generator,\n                               steps_per_epoch = num_train_samples\/\/batchSize,\n                               epochs = epochs,\n                               validation_data = band8_val_generator,\n                               validation_steps = num_val_samples\/\/batchSize,\n                               verbose = 1)","5aa9a5c8":"show_final_history(band8_history)","1eb971f6":"test_tifs, test_labels = obtain_tif_images(csv_file=\"..\/input\/eurosat-dataset\/EuroSATallBands\/test.csv\", band='8')\n\ntest_tifs.shape, test_labels.shape","e283cc23":"test_pred8 = band8_model.predict(test_tifs)\ntest_pred8 = np.argmax(test_pred8, axis=1)\ntest_pred8.shape","d74e952c":"cnf_mat = confusion_matrix(test_labels, test_pred8)\n\nplt.figure()\nplot_confusion_matrix(cnf_mat, classes=class_names, title=\"Band 8 Confusion Matrix\")\nplt.grid(False)\nplt.show()","584a494c":"band8a_train_generator = data_generator(csv_file=\"..\/input\/eurosat-dataset\/EuroSATallBands\/train.csv\", band='8a', batchSize=10, num_classes=10)\nband8a_val_generator = data_generator(csv_file=\"..\/input\/eurosat-dataset\/EuroSATallBands\/validation.csv\", band='8a', batchSize=10, num_classes=10)","0a0bc1fb":"band8a_model = convModel(input_shape=(64,64,1), numClasses=10)","e55c3b42":"opt = Adam(lr=1e-5)\nband8a_model.compile(optimizer=opt, loss='categorical_crossentropy', metrics=['accuracy'])","f0a9ffea":"epochs = 30\nbatchSize = 100\n\nband8a_history = band8a_model.fit(band8a_train_generator,\n                                 steps_per_epoch = num_train_samples\/\/batchSize,\n                                 epochs = epochs,\n                                 validation_data = band8a_val_generator,\n                                 validation_steps = num_val_samples\/\/batchSize,\n                                 verbose = 1)","f857ba1a":"show_final_history(band8a_history)","64b69a42":"test_tifs, test_labels = obtain_tif_images(csv_file=\"..\/input\/eurosat-dataset\/EuroSATallBands\/test.csv\", band='8a')\n\ntest_tifs.shape, test_labels.shape","c046f691":"test_pred8a = band8a_model.predict(test_tifs)\ntest_pred8a = np.argmax(test_pred8a, axis=1)\ntest_pred8a.shape","f29c5426":"cnf_mat = confusion_matrix(test_labels, test_pred8a)\n\nplt.figure()\nplot_confusion_matrix(cnf_mat, classes=class_names, title=\"Band 8A Confusion Matrix\")\nplt.grid(False)\nplt.show()","8c122fce":"band11_train_generator = data_generator(csv_file=\"..\/input\/eurosat-dataset\/EuroSATallBands\/train.csv\", band='11', batchSize=10, num_classes=10)\nband11_val_generator = data_generator(csv_file=\"..\/input\/eurosat-dataset\/EuroSATallBands\/validation.csv\", band='11', batchSize=10, num_classes=10)","1313c722":"band11_model = convModel(input_shape=(64,64,1), numClasses=10)","e848fde3":"opt = Adam(lr=1e-5)\nband11_model.compile(optimizer=opt, loss='categorical_crossentropy', metrics=['accuracy'])","5a0d4750":"epochs = 30\nbatchSize = 100\n\nband11_history = band11_model.fit(band11_train_generator,\n                                 steps_per_epoch = num_train_samples\/\/batchSize,\n                                 epochs = epochs,\n                                 validation_data = band11_val_generator,\n                                 validation_steps = num_val_samples\/\/batchSize,\n                                 verbose=1)","5059bfd5":"show_final_history(band11_history)","2aee54b4":"test_tifs, test_labels = obtain_tif_images(csv_file=\"..\/input\/eurosat-dataset\/EuroSATallBands\/test.csv\", band='11')\n\ntest_tifs.shape, test_labels.shape","afd32687":"test_pred11 = band11_model.predict(test_tifs)\ntest_pred11 = np.argmax(test_pred11, axis=1)\ntest_pred11.shape","a3318576":"cnf_mat = confusion_matrix(test_labels, test_pred11)\n\nplt.figure()\nplot_confusion_matrix(cnf_mat, classes=class_names, title=\"Band 11 Confusion Matrix\")\nplt.grid(False)\nplt.show()","2e85079c":"band12_train_generator = data_generator(csv_file=\"..\/input\/eurosat-dataset\/EuroSATallBands\/train.csv\", band='12', batchSize=10, num_classes=10)\nband12_val_generator = data_generator(csv_file=\"..\/input\/eurosat-dataset\/EuroSATallBands\/validation.csv\", band='12', batchSize=10, num_classes=10)","8f24be36":"band12_model = convModel(input_shape=(64,64,1), numClasses=10)","e464685e":"opt = Adam(lr=1e-5)\nband12_model.compile(optimizer=opt, loss='categorical_crossentropy', metrics=['accuracy'])","e167d40d":"epochs = 30\nbatchSize = 100\n\nband12_history = band12_model.fit(band12_train_generator,\n                                 steps_per_epoch = num_train_samples\/\/batchSize,\n                                 epochs = epochs,\n                                 validation_data = band12_val_generator,\n                                 validation_steps = num_val_samples\/\/batchSize,\n                                 verbose=1)","36f83418":"show_final_history(band12_history)","b965dddc":"test_tifs, test_labels = obtain_tif_images(csv_file=\"..\/input\/eurosat-dataset\/EuroSATallBands\/test.csv\", band='12')\n\ntest_tifs.shape, test_labels.shape","6551c910":"test_pred12 = band12_model.predict(test_tifs)\ntest_pred12 = np.argmax(test_pred12, axis=1)\n\ntest_pred12.shape","a4159ea0":"cnf_mat = confusion_matrix(test_labels, test_pred12)\n\nplt.figure()\nplot_confusion_matrix(cnf_mat, classes=class_names, title=\"Band 12 Confusion Matrix\")\nplt.grid(False)\nplt.show();","dc0ef40e":"# Band 3 [10m]","5efe189b":"# Band 5 [20m]","521b452d":"# Band 2 [10m]","5586ec8f":"# Band 4 [10m]","143ef015":"# Band 8 [10m]","95b4affd":"# Band 7 [20m]","0643d785":"# Band 11 [20m]","39e621fe":"# Band 8A [20m]","3d2fecdd":"# Band 6 [20m]","ef654a0c":"# Band 12 [20m]"}}