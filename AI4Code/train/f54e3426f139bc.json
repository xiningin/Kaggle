{"cell_type":{"8b0cb2de":"code","ad59edb2":"code","ef39cb80":"code","890c90d7":"code","ff58261f":"code","8824fea5":"code","3f915a33":"code","38f852c5":"code","ab727fb3":"markdown"},"source":{"8b0cb2de":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ad59edb2":"import plotly as py\nimport plotly.io as pio\nimport plotly.graph_objects as go\nimport plotly.express as px\nfrom plotly.subplots import make_subplots","ef39cb80":"df = pd.read_csv(\"\/kaggle\/input\/facebook-stock-data\/FB.csv\")","890c90d7":"df.head()","ff58261f":"df.info()","8824fea5":"df['MA50'] = df.Close.rolling(50).mean()\ndf['MA200'] = df.Close.rolling(200).mean()\n\nfig = go.Figure(data=[go.Candlestick(x=df['Date'],\n                open=df['Open'],\n                high=df['High'],\n                low=df['Low'],\n                close=df['Close']),\ngo.Scatter(x=df.Date, y=df.MA50, line=dict(color='green', width=1.5),name='50 MA'),\ngo.Scatter(x=df.Date, y=df.MA200, line=dict(color='black', width=1.5),name='200 MA')\n])\n\nfig.update_layout(title='50-200 Day Moving average(DMA)',\n                  yaxis_title='Price',\n                  xaxis_title='Year')\nfig.show()","3f915a33":"fig = px.line(df, x='Date', y='High', title='Range Slider and Selectors')\nfig.update_xaxes(rangeslider_visible=True, rangeselector=dict(\n    buttons=list([\n            dict(count=1, label=\"1m\", step=\"month\", stepmode=\"backward\"),\n            dict(count=6, label=\"6m\", step=\"month\", stepmode=\"backward\"),\n            dict(count=1, label=\"YTD\", step=\"year\", stepmode=\"todate\"),\n            dict(count=1, label=\"1y\", step=\"year\", stepmode=\"backward\"),\n            dict(step=\"all\")\n        ])\n    )\n)\nfig.show()","38f852c5":"fig = go.Figure()\n\n# plot scatter\nfig.add_trace(go.Scatter(\n    x=df.Date,\n    y=df.Close,\n    line=dict(color='black'),\n))\n\n\nfig.update_layout(showlegend=False,\n                  \n                  title='52-Week High & Low ',\n                  yaxis_title='Price',\n                  xaxis_title='Date',\n                  plot_bgcolor='#efefef',\n                  paper_bgcolor='#efefef',\n    # Font Families\n    font_family='Monospace',\n    font_color='#000000',\n    font_size=15,\n    xaxis=dict(\n        rangeslider=dict(\n            visible=False\n        )\n    ))","ab727fb3":"# Thank you !!\nPlease upvote if you liked my work !!"}}