{"cell_type":{"7a58e8b2":"code","461b162e":"code","14e5ff55":"code","58d09d88":"code","61567f52":"code","1744aa98":"code","69613dfe":"code","b0d17fa7":"markdown","acbcbb83":"markdown","b7bb3fd0":"markdown","9a8e8e4d":"markdown","39bcb8d5":"markdown","07961d23":"markdown"},"source":{"7a58e8b2":"import numpy as np\nfrom keras.models import Sequential\nfrom keras.layers import Conv2DTranspose","461b162e":"x = np.arange(4).reshape(2,2)+1\nprint(x)","14e5ff55":"model = Sequential()\nmodel.add(Conv2DTranspose(1,1,strides=2, input_shape=(2,2,1)))\nmodel.summary()","58d09d88":"print('Kernel size is 1')\nprint('x : \\n',x)\n\nweights = [np.ones((1,1,1,1)).astype('float32'), np.array([0.]).astype('float32')]\nmodel.set_weights(weights)\n\nyhat = model.predict(x.reshape(1,2,2,1))\nprint('\\n',yhat.reshape(4,4))","61567f52":"x = np.arange(4).reshape(2,2)+1\nprint('Kernel size is 2')\nprint('x : \\n',x)\n\nmodel = Sequential()\nmodel.add(Conv2DTranspose(1,2,strides=2, input_shape=(2,2,1)))\n\nweights = [np.ones((2,2,1,1)).astype('float32'), np.array([0.]).astype('float32')]\nmodel.set_weights(weights)\n\nyhat = model.predict(x.reshape(1,2,2,1))\nprint('\\n',yhat.reshape(4,4))","1744aa98":"x = np.arange(4).reshape(2,2)+1\nprint('Kernel size is 3')\nprint('x : \\n',x)\n\nmodel = Sequential()\nmodel.add(Conv2DTranspose(1,3,strides=2, input_shape=(2,2,1)))\n\nweights = [np.ones((3,3,1,1)).astype('float32'), np.array([0.]).astype('float32')]\nmodel.set_weights(weights)\n\nyhat = model.predict(x.reshape(1,2,2,1))\nprint('\\n',yhat.reshape(5,5))","69613dfe":"x = np.arange(4).reshape(2,2)+1\nprint('Kernel size is 3 with same padding')\nprint('x : \\n',x)\n\nmodel = Sequential()\nmodel.add(Conv2DTranspose(1,3,strides=2, padding='same', input_shape=(2,2,1)))\n\nweights = [np.ones((3,3,1,1)).astype('float32'), np.array([0.]).astype('float32')]\nmodel.set_weights(weights)\n\nyhat = model.predict(x.reshape(1,2,2,1))\nprint('\\n',yhat.reshape(4,4))","b0d17fa7":"## Kernel size (f) is (3,3)","acbcbb83":"## Kernel size (f) is (1,1)","b7bb3fd0":"## Kernel size (f) is (3,3) with zeropadding","9a8e8e4d":"## <font color='red'> Using filter with all values equal to 1 <\/font>","39bcb8d5":"## Kernel size (f) is (2,2)","07961d23":"# Verify understanding of Transposed Convolution"}}