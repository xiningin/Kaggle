{"cell_type":{"b697d181":"code","ac37bb07":"code","733ee049":"code","a9dbbc29":"code","20546205":"code","4b54b72d":"code","34492cd2":"code","da20e6a6":"code","f7e04a9c":"code","459dd0eb":"code","e96a98ed":"code","c4e9d09e":"code","2cb12675":"code","495ec5d0":"code","c50b2afd":"code","02568301":"code","b8629344":"code","03ce1099":"code","37b2545c":"code","867d7a3e":"code","7114939a":"code","246430fb":"code","18561274":"code","95668ffd":"code","36ca3f28":"code","46626da8":"code","38391042":"code","41b1d64a":"code","ecff715e":"code","56861e66":"code","db48eec5":"code","7b10cc1e":"code","0135445c":"code","c4396d63":"code","0a2df12d":"code","06eba3af":"code","cba095f6":"code","5500c58e":"code","f28a2f59":"code","e990d0ae":"code","9d89c56f":"code","49ceaebe":"code","4a29bd62":"code","7e8ab469":"code","c561439d":"code","453497b8":"code","9f0ef45e":"code","aa86c389":"code","62f9b3de":"code","cf15e10d":"code","77d4190d":"code","417a12ae":"code","538fbf17":"code","1caf0c41":"code","749b393a":"code","8ce00608":"code","0aa04d69":"markdown","24ca8b87":"markdown","c52014b8":"markdown","e642c2a0":"markdown","bce8ff63":"markdown","60bf1b8a":"markdown","0c7de0f3":"markdown","232e811e":"markdown","50e20af5":"markdown","0f0fd0db":"markdown","83a5130f":"markdown","67e46ee0":"markdown"},"source":{"b697d181":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","ac37bb07":"spam_df = pd.read_csv('..\/input\/spam-message-detector-model\/emails_V2.csv')","733ee049":"spam_df.head(10)","a9dbbc29":"spam_df.tail()\nspam_df = spam_df.dropna()","20546205":"spam_df.shape","4b54b72d":"spam_df.describe()","34492cd2":"spam_df.info()","da20e6a6":"spam_df['spam'].unique()","f7e04a9c":"spam_df['spam'].value_counts()","459dd0eb":"spam = spam_df[spam_df['spam']==1]\nspam.shape","e96a98ed":"ham = spam_df[spam_df['spam']==0]\nham.shape","c4e9d09e":"percent_spam = spam.shape[0]\/(ham.shape[0]+spam.shape[0])*100\npercent_spam","2cb12675":"percent_ham = ham.shape[0]\/(ham.shape[0]+spam.shape[0])*100\npercent_ham","495ec5d0":"sns.countplot('spam',data = spam_df)","c50b2afd":"import string\nstring.punctuation","02568301":"test = \"hello, abhishek sir i am very happy to learn thr case studies in ypur class!\"","b8629344":"test_punc_removed = [char for char in test if char not in string.punctuation]\ntest_punc_removed","03ce1099":"test = \"hello, abhishek sir i am very happy to learn thr case studies in ypur class!\"\n\ntest_punc_removed2 = []\n\nfor char in test:\n    if char not in string.punctuation:\n        test_punc_removed2.append(char)","37b2545c":"test_punc_removed2","867d7a3e":"test_punc_removed_join = ''.join(test_punc_removed)","7114939a":"test_punc_removed_join","246430fb":"import nltk\nfrom nltk.corpus import stopwords\nnltk.download('stopwords')","18561274":"stopwords.words('english')","95668ffd":"test_punc_removed_join.split()","36ca3f28":"test_punc_removed_join_clean = [word for word in test_punc_removed_join.split() if word.lower() not in stopwords.words('english') ]\ntest_punc_removed_join_clean","46626da8":"from sklearn.feature_extraction.text import CountVectorizer","38391042":"sample_data = ['This is my first line','This is the second one','The third line says xyz']","41b1d64a":"sample_data","ecff715e":"vectorizer = CountVectorizer()\nx = vectorizer.fit_transform(sample_data)","56861e66":"print(vectorizer.get_feature_names())","db48eec5":"x.toarray()","7b10cc1e":"def message_cleaning(text):\n  test_punc_removed = [char for char in text if char not in string.punctuation]\n  test_punc_removed_join = ''.join(test_punc_removed)\n  test_punc_removed_join_clean = [word for word in test_punc_removed_join.split() if word.lower() not in stopwords.words('english') ]\n  return test_punc_removed_join_clean\n","0135445c":"spam_df['text']","c4396d63":"from sklearn.feature_extraction.text import CountVectorizer","0a2df12d":"vectorizer = CountVectorizer(analyzer=message_cleaning)\nspam_df_clean = vectorizer.fit_transform(spam_df['text'])","06eba3af":"print(vectorizer.get_feature_names())","cba095f6":"spam_df_clean.toarray()","5500c58e":"spam_df_clean.shape","f28a2f59":"X =spam_df_clean\nY = spam_df['spam']","e990d0ae":"X.shape","9d89c56f":"Y.shape","49ceaebe":"#split into train and test dataset\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size=0.2,random_state = 0)","4a29bd62":"X_train","7e8ab469":"from sklearn.linear_model import LogisticRegression\nclassifier = LogisticRegression(random_state = 0)\nclassifier.fit(X_train,Y_train)","c561439d":"Y_Pred = classifier.predict(X_test)","453497b8":"from sklearn.metrics import confusion_matrix, accuracy_score\ncm = confusion_matrix(Y_test,Y_Pred)","9f0ef45e":"cm","aa86c389":"accuracy_score(Y_test,Y_Pred)","62f9b3de":"from sklearn.metrics import classification_report\nprint(classification_report(Y_test,Y_Pred))","cf15e10d":"from sklearn.metrics import roc_auc_score\nroc_auc_score(Y_test,Y_Pred)","77d4190d":"from sklearn.tree import DecisionTreeClassifier\nclassifier = DecisionTreeClassifier(random_state = 0)\nclassifier.fit(X_train,Y_train)\n\nY_Pred = classifier.predict(X_test)\n\nfrom sklearn.metrics import confusion_matrix, accuracy_score\ncm = confusion_matrix(Y_test,Y_Pred)\n\naccuracy_score(Y_test,Y_Pred)","417a12ae":"from sklearn.ensemble import RandomForestClassifier\nclassifier = RandomForestClassifier(random_state = 0,)\nclassifier.fit(X_train,Y_train)\n\nY_Pred = classifier.predict(X_test)\n\nfrom sklearn.metrics import confusion_matrix, accuracy_score\ncm = confusion_matrix(Y_test,Y_Pred)\n\naccuracy_score(Y_test,Y_Pred)","538fbf17":"from sklearn.naive_bayes import MultinomialNB\nclassifier = MultinomialNB()\nclassifier.fit(X_train,Y_train)\n\nY_Pred = classifier.predict(X_test)\n\nfrom sklearn.metrics import confusion_matrix, accuracy_score\ncm = confusion_matrix(Y_test,Y_Pred)\n\naccuracy_score(Y_test,Y_Pred)","1caf0c41":"from sklearn.svm import SVC\nclassifier = SVC(kernel = 'linear',random_state=0)\nclassifier.fit(X_train,Y_train)\n\nY_Pred = classifier.predict(X_test)\n\nfrom sklearn.metrics import confusion_matrix, accuracy_score\ncm = confusion_matrix(Y_test,Y_Pred)\n\naccuracy_score(Y_test,Y_Pred)","749b393a":"from sklearn.svm import SVC\nclassifier = SVC(kernel = 'rbf',random_state=0)\nclassifier.fit(X_train,Y_train)\n\nY_Pred = classifier.predict(X_test)\n\nfrom sklearn.metrics import confusion_matrix, accuracy_score\ncm = confusion_matrix(Y_test,Y_Pred)\n\naccuracy_score(Y_test,Y_Pred)","8ce00608":"from sklearn.neighbors import KNeighborsClassifier\nclassifier = KNeighborsClassifier(n_neighbors=5, metric='euclidean', p = 2)\nclassifier.fit(X_train,Y_train)\n\nY_Pred = classifier.predict(X_test)\n\nfrom sklearn.metrics import confusion_matrix, accuracy_score\ncm = confusion_matrix(Y_test,Y_Pred)\n\naccuracy_score(Y_test,Y_Pred)","0aa04d69":"LOGISTIC REGRESSION","24ca8b87":"REMOVING STOPWORDS","c52014b8":"DATA CLEANING ON ACTUAL DATASET","e642c2a0":"Decision Tree","bce8ff63":"COUNT VECTORIZER","60bf1b8a":"TRAINING AND TEST DATASET PREPARATION","0c7de0f3":"SVM Classification","232e811e":"NAIVE BAYES","50e20af5":"KNN Classification","0f0fd0db":"UNIVARIATE ANALYSIS","83a5130f":"DATA CLEANING","67e46ee0":"RANDOM FOREST"}}