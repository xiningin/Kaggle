{"cell_type":{"8edf971a":"code","6a7ed57a":"code","6747883c":"code","d710766d":"code","6abea5ef":"code","831c8484":"code","b2ff2934":"code","38691e0a":"code","97f721db":"code","8d7c3ae6":"code","f80333f6":"code","62c457b1":"code","54c15733":"code","579476e1":"code","e28bd29d":"markdown","5bcd4932":"markdown","7f5ddd2a":"markdown","f206a6c8":"markdown","10f5e964":"markdown","49a56942":"markdown"},"source":{"8edf971a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6a7ed57a":"import pandas as pd\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom collections import Counter","6747883c":"data = pd.read_csv('\/kaggle\/input\/new-york-city-airport-activity\/nyc-flights.csv')\ndata.head()","d710766d":"data.dtypes","6abea5ef":"data.tail()","831c8484":"# Find NAN\nnan_df = data[data.isna().any(axis=1)]\ndisplay(nan_df.head())\n\ndata = data.dropna(how='all')\ndata.head()","b2ff2934":"data = data.sort_values(by = 'month',ascending=True)","38691e0a":"fig = px.bar(x=data['month'].unique(), y=data.groupby('month')['month'].count(), labels=dict(x=\"Month\", y=\"Number Of Flights\",width=800, height=400))\nfig.update_layout(title_text='Number Of Flights By Month', title_x=0.5)\nfig.update_xaxes(type='category')\n# Customize aspect\nfig.update_traces(marker_color='rgb(158,202,225)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6)\nfig.show()","97f721db":"fig = px.bar(x=data['day'].sort_values(ascending=True).unique(), y=data.groupby('day')['day'].count(), labels=dict(x=\"Days\", y=\"Number Of Flights\",width=800, height=400))\nfig.update_layout(title_text='Number Of Flights By Days', title_x=0.5)\nfig.update_xaxes(type='category')\n# Customize aspect\nfig.update_traces(marker_color='rgb(158,202,225)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6)\nfig.show()","8d7c3ae6":"fig = px.bar(x=data['origin'].sort_values(ascending=True).unique(), y=data.groupby('origin')['origin'].count(), labels=dict(x=\"Origin\", y=\"Number Of Flights\",width=800, height=400))\nfig.update_layout(title_text='Number Of Flights By Origin', title_x=0.5)\nfig.update_xaxes(type='category')\n# Customize aspect\nfig.update_traces(marker_color='rgb(52, 73, 94)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6)\nfig.show()","f80333f6":"data['origin des'] = data['origin'] + \" \" +data['dest']\nfig = px.bar(x=data['origin des'].sort_values(ascending=True).unique(), y=data.groupby('origin des')['origin des'].count(), labels=dict(x=\"Origin Destination\", y=\"Number Of Flights\",width=800, height=400))\nfig.update_layout(title_text='Number Of Flights From Same Origin And Destination', title_x=0.5)\nfig.update_xaxes(type='category')\n# Customize aspect\nfig.update_traces(marker_color='rgb(52, 73, 94)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6)\nfig.show()","62c457b1":"df = data[data['month'].duplicated(keep=False)]\ndf['all origins'] = df.groupby('month')['origin'].transform(lambda x: ','.join(x))\ndf2 = df[['month', 'all origins']].drop_duplicates()\ndf2 = df2.sort_values(by = 'month',ascending=True)\ndf2 = df2.reset_index(drop=True)\n","54c15733":"jfk = []\newr = []\nlga = []\nfor i in range(len(df2)):\n    x = Counter((df2['all origins'][i]).split(\",\"))['JFK']\n    y = Counter((df2['all origins'][i]).split(\",\"))['EWR']\n    z = Counter((df2['all origins'][i]).split(\",\"))['LGA']\n    jfk.append(x)\n    ewr.append(y)\n    lga.append(z)\n    \ndf2['JFK'] = jfk\ndf2['EWR'] = ewr\ndf2['LGA'] = lga","579476e1":"a = range(1,13)\nfig = go.Figure(data=[\n    go.Bar(name='JFK', x=df2['month'], y=df2['JFK'], marker=dict(color='rgba(52, 152, 219,0.6)')),\n    go.Bar(name='EWR', x=df2['month'], y=df2['EWR'], marker=dict(color='rgba(230, 126, 34,0.6)')),\n    go.Bar(name='LGA', x=df2['month'], y=df2['LGA'], marker=dict(color='rgba(243, 156, 18,0.6)')),\n\n])\nfig.update_layout(title_text='Number Of Flights By Month From Each Origin', title_x=0.5, xaxis_title=\"Months\",\n    yaxis_title=\"Number Of Flights\",)\n\nfig.update_xaxes(type='category')\n# Change the bar mode\nfig.update_layout(barmode='group')\nfig.show()","e28bd29d":"**--> JFK - LAX is the most Travelled place**","5bcd4932":"**--> From this we can say each month EWR origin have most number of flights flying**","7f5ddd2a":"# Libraries","f206a6c8":"# Number of flights by Month","10f5e964":"# If you liked it so far, please don't forget to comment and upvote. Thank you!","49a56942":"# In which days the flights are high"}}