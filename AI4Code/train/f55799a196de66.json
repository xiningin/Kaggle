{"cell_type":{"6f95af06":"code","772e6f8a":"code","c662d241":"code","dd5bd977":"code","acf12920":"code","a68c68bb":"code","ea15fb2a":"code","77cd2bce":"code","e3fcaae1":"code","9d572cb8":"code","79c520a6":"code","a1ce8d08":"code","6f13f205":"code","110ccf3b":"code","e3b93aeb":"code","ec9ecd24":"code","768dce55":"markdown"},"source":{"6f95af06":"# import pandas as pd \nimport pandas as pd \n  \n# Creating empty series \nser = pd.Series() \n  \nprint(ser) \n\n\n","772e6f8a":"# import pandas and numpy  \nimport pandas as pd  \nimport numpy as np  \n    \n# series with numpy linspace()   \nseries = pd.Series(np.linspace(1950, 2049, 100))\nprint(series)\n\n    ","c662d241":"years = [ i for i in range(1900,2100,4)]\nprint(years)","dd5bd977":"# generate random integer values\nfrom random import seed\nfrom random import randint\n# seed random number generator\nseed(1)\n# generate some integers\nfor _ in range(10):\n\tvalue = randint(0, 10)\n\tprint(value)","acf12920":"from random import seed\nfrom random import randint\nseed(2)\ncrime = [ randint(134587,9857630) for x in range(0,len(years),1)]\n\nprint(crime)","a68c68bb":"print(len(years))\nprint(len(crime))","ea15fb2a":"len(years)==len(crime)\n","77cd2bce":"\n# Print the last item from year and pop\nprint(years[-1])\nprint(crime[-1])\n\n%matplotlib inline\n# Import matplotlib.pyplot as plt\nimport matplotlib.pyplot as plt\n\n# Make a line plot: year on the x-axis, pop on the y-axis\nplt.plot(years,pop)\nplt.xlabel(\"Years\")\nplt.ylabel(\"Crime\")\nplt.title(\"Crime over Years\")\n\n# Display the plot with plt.show()\nplt.show()","e3fcaae1":"%matplotlib inline\n\n# evenly sampled time at 200ms intervals\nt = np.arange(0., 5., 0.2)\n\n# red dashes, blue squares and green triangles\nplt.plot(t, t, 'r--', t, t**2, 'bs', t, t**3, 'g^')\nplt.show()","9d572cb8":"data = {'a': np.arange(50),\n        'c': np.random.randint(0, 50, 50),\n        'd': np.random.randn(50)}\ndata['b'] = data['a'] + 10 * np.random.randn(50)\ndata['d'] = np.abs(data['d']) * 100\n\nplt.scatter('a', 'b', c='c', s='d', data=data)\nplt.xlabel('Entry a')\nplt.ylabel('Entry b')\nplt.show()","79c520a6":"names = ['Group A', 'Group B', 'Group C']\nvalues = [1, 10, 100]\n\nplt.figure(figsize=(18, 3))\n\nplt.subplot(131)\nplt.bar(names, values)\nplt.subplot(132)\nplt.scatter(names, values)\nplt.subplot(133)\nplt.plot(names, values)\nplt.suptitle('Categorical Plotting')\nplt.show()","a1ce8d08":"import matplotlib.pyplot as plt\nfrom numpy.random import rand\nfrom numpy.random import randint\nfrom numpy.random import seed\n\nseed(3)\n\n\ngdp_cap = [randint(223,4510) for i in range(0,100,1)]\n\n\nlife_exp = [randint(60,80) for i in range(0,100,1)]\n","6f13f205":"len(gdp_cap)","110ccf3b":"len(life_exp)","e3b93aeb":"# Print the last item of gdp_cap and life_exp\n\nprint(gdp_cap[-1])\n\nprint(life_exp[-1])\n\n\n","ec9ecd24":"# Make a line plot, gdp_cap on the x-axis, life_exp on the y-axis\nplt.plot(gdp_cap,life_exp)\n\n# Display the plot\nplt.show()","768dce55":"**Hi ! Welcome to my Kernel**\n\n> **** This the second part of a series of kernels that wil familiarize you with the naunces of Machine Learning using Python\n\n* I created this kernel so that beginners can use this to learn Python and Machine Learning.\n\n* Others may just use this code as a refresher !!\n\n**We will look at the following topics in this kernel**\n\n1. Pandas and Matplotlib Basics\n2. Dictionaries & Pandas\n3. Logic, Control Flow and Filtering\n4. Loops\n5. Applying these concepts for a real world data set\n"}}