{"cell_type":{"bd6b2279":"code","359ba1da":"code","df6819fa":"code","d5d97e03":"code","6963d9df":"code","3a0c2395":"code","6a954ff8":"code","d168e39b":"code","e81489ee":"code","141b00a8":"code","4e6a8e64":"code","11d63ef2":"code","d4ae1434":"code","a5608811":"code","4c86fe15":"code","2f999b00":"code","66166e46":"code","da8a6bdb":"code","8da7d8b9":"code","774fe076":"code","dcbf740c":"code","0937b25c":"code","31346a61":"code","8934f8d5":"code","16cb9a10":"code","620aab67":"code","b50dc706":"code","e91528be":"code","aaed5319":"code","1b26e682":"code","89319950":"code","d546c9ee":"code","90e30014":"code","f64b10f3":"code","16162d3a":"code","7d240bf7":"code","7eac2469":"code","fb00e3d8":"code","e319fbc8":"code","bfae1e0a":"code","b32eeb4e":"code","ba830f63":"code","41df9e7d":"code","481d45a7":"code","a916c7d0":"code","418429b3":"code","cb875218":"code","7c473fc1":"code","e1f4cb13":"markdown","3a8ea5cd":"markdown","c412dd86":"markdown","409c1ca2":"markdown","aab703ea":"markdown","5123574b":"markdown","a2895e0d":"markdown","cd6a1cf2":"markdown","db729960":"markdown","c2124406":"markdown","9588e6d5":"markdown","898f68c7":"markdown","8cd504ad":"markdown","b4cbbb60":"markdown","04e9d6c2":"markdown"},"source":{"bd6b2279":"#Import the Pandas package\nimport pandas as pd","359ba1da":"\n#1. Manually entering the data\ndf2 = pd.DataFrame(\n    {\n        \"SLNO\" : [1,2,3,4,5],\n        \"Months\" : ['Jan', 'Feb', 'Mar', 'Apr', 'May'],\n        \"Col3\" : [0.11, 0.23, 0.56, 0.12, 0.87],\n        \"Bool_Col\" : [True, True, False, True, False]\n    }\n)\n\ndf2","df6819fa":"#2. From CSV files (.csv)\ndf = pd.read_csv(\"..\/input\/train.csv\")\n\n#Similar fucntion available for spreadsheet as well (XLS)\n\nprint(type(df))","d5d97e03":"#Dimension\ndf.ndim #2-dimensional","6963d9df":"#Shape\ndf.shape #891 rows x 12 columns","3a0c2395":"#Total number of cells\ndf.size # 891*12 = 10692","6a954ff8":"#Columns\ndf.columns","d168e39b":"#Change column name\ndf2.columns","e81489ee":"#1. \ndf2.columns = ['index', 'mon', 'nums', 'bools']\n\ndf2.columns","141b00a8":"#2. \ndf2 = df2.rename(columns={'mon':'Month'})\n\ndf2.columns","4e6a8e64":"#inplace parameter will change the dataframe without assignment\ndf2.rename(columns={\"Month\" : \"months\",\n                   \"nums\" : \"Numbers\"}, \n           inplace=True)\n\ndf2.columns","11d63ef2":"#First few rows\ndf.head(6)\n\n#Indexing starts with 0","d4ae1434":"#Last few rows\ndf.tail(6)","a5608811":"#Datatype of data in each column\ndf2.dtypes","4c86fe15":"#Summarizing\ndf.describe()\n\n#Describe funtion gives statistical summary column-wise of numerical columns including quartile values (25%, 50%, 75%)","2f999b00":"df.info()\n\n#'Age' has only 714 values, rest are NAs: null values\/missing values","66166e46":"#1. using dot notation\ndf.Fare.head(4)","da8a6bdb":"#2. using square braces\ndf['Fare'].head(4)","8da7d8b9":"#3. using iloc\ndf.iloc[:,9].head(4) #9th column is 'Fare'","774fe076":"#iloc[:,9] is same as iloc[0:890, 9]\ndf.iloc[0:890,9].head(4)","dcbf740c":"df[['Fare', 'Age', 'Sex']].head(4)","0937b25c":"#Multiple columns selection using iloc\ndf.iloc[:4, [9, 5, 4]]\n","31346a61":"#Can select rows as well using iloc\ndf.iloc[2:8, 9] #From row 2 to row 7; 8 excluded","8934f8d5":"#Row selection can also be used with square braces\ndf['Fare'][2:8]","16cb9a10":"#Or with dot notation\ndf.Fare[2:8]","620aab67":"#1. summing\ndf.Fare.sum()","b50dc706":"#2. averaging\ndf.Fare.mean()","e91528be":"#3. counting\ndf.Fare.count()","aaed5319":"#4. median\ndf.Fare.median()","1b26e682":"#5. minimum value\ndf.Fare.min()","89319950":"#6. Maximum value\ndf.Fare.max()","d546c9ee":"#7. unique values\ndf.Sex.unique()","90e30014":"#8. Number of unique values\ndf.Sex.nunique()","f64b10f3":"#9. Missing values imputation using fillna function\ndf.Age.count()\n#Total 891 rows, only 714 present. Rest are NAs (missing values)","16162d3a":"df.Age = df.Age.fillna(20)\n\ndf.Age.count() #All missing values are filled with '20', new count is 891.","7d240bf7":"#1. \ndf.iloc[2:6, :] #Same as df.iloc[2:6,]","7eac2469":"#2.\ndf.iloc[[2,3,4,10,20], :]","fb00e3d8":"#3. Logical selection\ndf[ df['Sex'] == 'male' ].head(4)","e319fbc8":"# Deleting columns\n    \n# Delete a column from the dataframe\ndf = df.drop(\"Pclass\", axis=1)\n    \n# alternatively, delete columns using the columns parameter of drop\ndf = df.drop(columns=\"SibSp\")","bfae1e0a":"df.columns","b32eeb4e":"# Delete the Area column from the dataframe in place\n# Note that the original 'data' object is changed when inplace=True\ndf.drop(\"Parch\", axis=1, inplace=True)\n\n# Delete multiple columns from the dataframe\ndf = df.drop([\"Ticket\", \"Cabin\", \"Name\"], axis=1)","ba830f63":"df.columns","41df9e7d":"df.head()","481d45a7":"# Delete the rows with labels 0,1,5\ndf = df.drop([0,1,2], axis=0)\ndf.head(5)","a916c7d0":"# Delete the rows with label \"male\"\n# For label-based deletion, set the index first on the dataframe:\ndf = df.set_index(\"Sex\")\ndf = df.drop(\"male\", axis=0) # Delete all rows with label \"male\"\n\ndf.head(8)","418429b3":"# Delete the first five rows using iloc selector\ndf = df.iloc[5:,]\n\ndf.head(8)","cb875218":"df.head()","7c473fc1":"df.to_csv(\"new_train.csv\", index=False)","e1f4cb13":"**Exporting and Saving Pandas DataFrames**","3a8ea5cd":"**Previewing**","c412dd86":"**Row selection using iloc**\n\nThe basic methods to get your heads around are:\n1. numeric row selection using the iloc selector, e.g. data.iloc[2:10, :] \u2013 from 2 to 10.\n2. label-based row selection using the loc selector (this is only applicably if you have set an \u201cindex\u201d on dataframe. e.g. data.loc[[2,3,4,10,11,12], :]\n3. logical-based row selection using evaluated statements, e.g. data[data[\"Area\"] == \"Ireland\"] \u2013 select the rows where Area value is \u2018Ireland\u2019.","409c1ca2":"When a column is selected using any of these methods, a 'pandas.Series' is the resulting datatype. A pandas series is a one-dimensional set of data. \nBasic operations that can be carried out on these Series of data are:\n1. Summarizing: sum(), mean(), count(), median(), min(), max(), unique(), nunique() \n2. replacing missing values (.fillna(new_value)).","aab703ea":"**Renaming the columns**","5123574b":"**Pandas**\nPandas is a Python package for handling labelled data used dominantly in data analysis and manipulation.\n\nPandas can be installed from PyPI (Using pip), or from Anaconda distribution.","a2895e0d":"**Selecting multiple columns**","cd6a1cf2":"**Selecting and Manipulating Data**","db729960":"**Deleting rows**","c2124406":"**Creating DataFrames**\n","9588e6d5":"Pandas has following data structures:\n1. DataFrame\n2. Series\n3. ndarray","898f68c7":"**Pandas DataFrame**\n\nPandas DataFrame is a 2-dimensional labeled data structure with columns of different types. It can be thought of as a matrix but having data with different types.\n\nCharacteristics:\n1. Multiple rows and columns of data\n2. Each row represents a sample of data\n3. Each row represents a variable\/dimension of dataset\n4. Usually, all the data in a column is of the same type.\n","8cd504ad":"**Deleting Columns**","b4cbbb60":"Similar fucntion available for spreadsheet as well (XLS)","04e9d6c2":"**Selecting columns**\n\nThere are three main methods of selecting columns in pandas:\n1. using a dot notation, e.g. data.column_name\n2. using square braces and the name of the column as a string, e.g. data['column_name']\n3. using numeric indexing and the iloc selector data.iloc[:, <column_number>]"}}