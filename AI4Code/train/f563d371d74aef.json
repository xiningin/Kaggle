{"cell_type":{"0ecd0955":"code","de6ea07e":"code","e06c5e13":"code","fcc809a6":"code","28fea5a9":"code","0419707a":"code","069409ef":"code","f572aead":"code","da491238":"code","735ad73b":"code","e4f915ec":"code","b49ef371":"code","d89687e0":"code","a594a499":"markdown","1de29ad8":"markdown","a439604d":"markdown","9fbdb62a":"markdown","7d2a7486":"markdown","95068dda":"markdown","6774b043":"markdown","e12cd368":"markdown","d9b58023":"markdown"},"source":{"0ecd0955":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport re\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom nltk.tokenize import word_tokenize\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MaxAbsScaler\nfrom sklearn.linear_model import LogisticRegression # \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c \u043d\u0430 \u043b\u044e\u0431\u0438\u043c\u044b\u0439 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\nfrom sklearn.metrics import classification_report, roc_auc_score\nfrom catboost import CatBoostClassifier\nfrom catboost import CatBoostRegressor\nimport nltk\nimport string\nfrom nltk.stem.snowball import SnowballStemmer\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_squared_error\nfrom nltk import wordnet, pos_tag\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.preprocessing import LabelEncoder\n","de6ea07e":"test = pd.read_csv('..\/input\/tinkitanki\/test.csv', encoding='ISO-8859-1')\ntrainDF = pd.read_csv(\"..\/input\/tinkitanki\/train.csv\", encoding='ISO-8859-1')\nnegs = list(pd.read_csv('..\/input\/tinkitanki\/negative-words.txt').iloc[:, 0])\nposs = list(pd.read_csv('..\/input\/tinkitanki\/positive-words.txt').iloc[:, 0])\ntrainDF.head(5)\n","e06c5e13":"import seaborn as sns\n\nsns.countplot(x='Rating', data=trainDF);","fcc809a6":"def score(text):\n    text = text.split()\n    pos_score = 0\n    neg_score = 0\n    for i in range(len(text)):\n        if text[i] in poss:\n            pos_score += 1\n        elif text[i] in negs:\n            neg_score += 1\n    return pos_score, neg_score\n\ntrainDF['char_count'] = trainDF['Review_Text'].apply(len)\ntrainDF['word_count'] = trainDF['Review_Text'].apply(lambda x: len(x.split()))\ntrainDF['punctuation_count'] = trainDF['Review_Text'].apply(lambda x: len(\"\".join(_ for _ in x if _ in string.punctuation))) \ntrainDF['title_word_count'] = trainDF['Review_Text'].apply(lambda x: len([wrd for wrd in x.split() if wrd.istitle()]))\ntrainDF['upper_case_word_count'] = trainDF['Review_Text'].apply(lambda x: len([wrd for wrd in x.split() if wrd.isupper()]))\ntrainDF['pos_score']=trainDF['Review_Text'].apply(lambda x:score(x)[0])\ntrainDF['neg_score']=trainDF['Review_Text'].apply(lambda x:score(x)[1])\n\ndf = trainDF.copy()\ndf.fillna({'Review_Title': 'O'}, inplace = True)\ndf['No_Review_title'] = np.where(df['Review_Title'] == 'O', 1, 0)\n","28fea5a9":"def lower(text):\n    low_text= text.lower()\n    return low_text\ndf['Review_Text']=df['Review_Text'].apply(lambda x:lower(x))\ndf['Review_Title']=df['Review_Title'].apply(lambda x:lower(x))\n\ndef remove_num(text):\n    remove= re.sub(r'\\d+', '', text)\n    return remove\ndf['Review_Text']=df['Review_Text'].apply(lambda x:remove_num(x))\ndf['Review_Title']=df['Review_Title'].apply(lambda x:remove_num(x))\n\n#stemmer = SnowballStemmer(language='english')\n#def stemm(sent):\n#   return(' '.join([stemmer.stem(word) for word in sent.split()]))\n#df['Review_Text']=df['Review_Text'].apply(lambda x:stemm(x))\n\ndef get_wordnet_pos(treebank_tag):\n    my_switch = {\n        'J': wordnet.wordnet.ADJ,\n        'V': wordnet.wordnet.VERB,\n        'N': wordnet.wordnet.NOUN,\n        'R': wordnet.wordnet.ADV,\n    }\n    for key, item in my_switch.items():\n        if treebank_tag.startswith(key):\n            return item\n    return wordnet.wordnet.NOUN\nnltk.download('averaged_perceptron_tagger')\n\nfrom nltk import WordNetLemmatizer\ndef my_lemmatizer(sent):\n    lemmatizer = WordNetLemmatizer()\n    tokenized_sent = sent.split()\n    pos_tagged = [(word, get_wordnet_pos(tag))\n                 for word, tag in pos_tag(tokenized_sent)]\n    return ' '.join([lemmatizer.lemmatize(word, tag)\n                    for word, tag in pos_tagged])\ndef lemm(sent):\n    return(my_lemmatizer(sent))\ndf['Review_Text']=df['Review_Text'].apply(lambda x:lemm(x))\ndf['Review_Title']=df['Review_Title'].apply(lambda x:lemm(x))","0419707a":"df.head(10)","069409ef":"le = LabelEncoder()\ndf['Hotel_name'] = le.fit_transform(df['Hotel_name'])","f572aead":"from sklearn.base import BaseEstimator, TransformerMixin\n\nclass TextSelector(BaseEstimator, TransformerMixin):\n    \"\"\"\n    Transformer to select a single column from the data frame to perform additional transformations on\n    Use on text columns in the data\n    \"\"\"\n    def __init__(self, key):\n        self.key = key\n\n    def fit(self, X, y=None):\n        return self\n\n    def transform(self, X):\n        return X[self.key]\n    \nclass NumberSelector(BaseEstimator, TransformerMixin):\n    \"\"\"\n    Transformer to select a single column from the data frame to perform additional transformations on\n    Use on numeric columns in the data\n    \"\"\"\n    def __init__(self, key):\n        self.key = key\n\n    def fit(self, X, y=None):\n        return self\n\n    def transform(self, X):\n        return X[[self.key]]\n    ","da491238":"x_train, x_test, y_train, y_test = train_test_split(df.drop(columns = {'Rating'}), df.Rating, random_state=42)","735ad73b":"\n\ntext1 = Pipeline([\n                ('selector', TextSelector(key='Review_Text')),\n                ('counter', TfidfVectorizer(analyzer='word', token_pattern=r'\\w{1,}', max_features=5000, ngram_range=(1, 1)))\n            ])\n\ntext1.fit_transform(x_train)\n\ntext2 = Pipeline([\n                ('selector', TextSelector(key='Review_Title')),\n                ('counter', TfidfVectorizer(analyzer='word', token_pattern=r'\\w{1,}', max_features=5000, ngram_range=(1, 3)))\n            ])\n\ntext2.fit_transform(x_train)\n\ntext3 = Pipeline([\n                ('selector', TextSelector(key=['Hotel_name', 'No_Review_title'])),\n                ('encoder', OneHotEncoder())\n            ])\ntext3.fit_transform(x_train)\n\n","e4f915ec":"from sklearn.preprocessing import StandardScaler\n\nchar_count =  Pipeline([\n                ('selector', NumberSelector(key='char_count')),\n                ('standard', StandardScaler())\n            ])\n\nchar_count.fit_transform(x_train)\n\n\nword_count =  Pipeline([\n                ('selector', NumberSelector(key='word_count')),\n                ('standard', StandardScaler())\n            ])\n\nword_count.fit_transform(x_train)\n\n\npunctuation_count =  Pipeline([\n                ('selector', NumberSelector(key='punctuation_count')),\n                ('standard', StandardScaler())\n            ])\n\npunctuation_count.fit_transform(x_train)\n\n\ntitle_word_count =  Pipeline([\n                ('selector', NumberSelector(key='title_word_count')),\n                ('standard', StandardScaler())\n            ])\n\ntitle_word_count.fit_transform(x_train)\n\n\nupper_case_word_count =  Pipeline([\n                ('selector', NumberSelector(key='upper_case_word_count')),\n                ('standard', StandardScaler())\n            ])\n\nupper_case_word_count.fit_transform(x_train)\n\n\npos_score =  Pipeline([\n                ('selector', NumberSelector(key='pos_score')),\n                ('standard', StandardScaler())\n            ])\n\npos_score.fit_transform(x_train)\n\n\nneg_score =  Pipeline([\n                ('selector', NumberSelector(key='neg_score')),\n                ('standard', StandardScaler())\n            ])\nneg_score.fit_transform(x_train)\n","b49ef371":"from sklearn.pipeline import FeatureUnion\n\nfeats = FeatureUnion([('Review_Title', text1), \n                      ('Review_Text', text2),\n                      ('char_count', char_count),\n                      ('word_count', word_count),\n                      ('punctuation_count', punctuation_count),\n                      ('title_word_count', title_word_count),\n                      ('upper_case_word_count', upper_case_word_count), \n                      ('pos_score', pos_score), \n                      ('neg_score', neg_score)])\n\nfeature_processing = Pipeline([('feats', feats)])\nfeature_processing.fit_transform(x_train)","d89687e0":"pipeline = Pipeline([\n    ('features',feats),\n    ('classifier', CatBoostRegressor(random_state = 42, verbose = 250)),\n])\npipeline.fit(x_train, y_train)\n\npred = pipeline.predict(x_test)\nmean_squared_error(y_test, pred)","a594a499":"\u041a\u043e\u043d\u0432\u0435\u0439\u0435\u0440\u044b \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u044e\u0442 \u043d\u0430 \u0432\u0445\u043e\u0434 \u0442\u0438\u043f selector'a, \u043f\u043e\u0442\u043e\u043c \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u044e\u0442 \u0438\u0445 \u043a\u0430\u043a \u043c\u043d\u0435 \u043d\u0443\u0436\u043d\u043e. \u0422\u0430\u043a, Review_Text \u0438 Review_Title \u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043b \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e TfidfVectorizer, 'Hotel_name' \u0438'No_Review_title' \u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043b \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e OHE, \u0430 \u043a\u043e \u0432\u0441\u0435\u043c \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u043c \u0444\u0438\u0447\u0430\u0441 \u0441\u0434\u0435\u043b\u0430\u043b StandardScaler","1de29ad8":"### \u041e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c\nFeatureUnion \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u0442\u044c \u0432\u0441\u0435 \u043a\u043e\u043d\u0432\u0435\u0439\u0435\u0440\u044b \u0432 \u043e\u0434\u0438\u043d","a439604d":"# Intro\n\u041a\u0430\u043a \u0442\u043e\u043b\u044c\u043a\u043e \u0432\u044b \u043d\u0430\u043c\u043e\u0447\u0438\u0442\u0435 \u043d\u043e\u0433\u0438 \u0432 \u0431\u0430\u0437\u043e\u0432\u043e\u043c \u043c\u043e\u0434\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 sklearn, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u0442\u044c, \u0447\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442\u0435 \u043e\u0434\u043d\u0438 \u0438 \u0442\u0435 \u0436\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0448\u0430\u0433\u043e\u0432 \u0441\u043d\u043e\u0432\u0430 \u0438 \u0441\u043d\u043e\u0432\u0430 \u0432 \u043e\u0434\u043d\u043e\u043c \u0438 \u0442\u043e\u043c \u0436\u0435 \u0430\u043d\u0430\u043b\u0438\u0437\u0435. \u0427\u0442\u043e\u0431\u044b \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u043d\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0443\u0440\u043e\u0432\u0435\u043d\u044c, pipelines - \u0432\u0430\u0448 \u0434\u0440\u0443\u0433! \u041a\u043e\u043d\u0432\u0435\u0439\u0435\u0440\u044b - \u044d\u0442\u043e \u0441\u043f\u043e\u0441\u043e\u0431 \u0443\u043f\u0440\u043e\u0441\u0442\u0438\u0442\u044c \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u0440\u0443\u0442\u0438\u043d\u043d\u044b\u0445 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0432, \u0438\u043d\u043a\u0430\u043f\u0441\u0443\u043b\u0438\u0440\u0443\u044f \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u0438\u0435 \u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442\u044b \u043b\u043e\u0433\u0438\u043a\u0438 \u0432 \u043e\u0434\u0438\u043d \u0432\u044b\u0437\u043e\u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u0447\u0442\u043e \u0443\u043f\u0440\u043e\u0449\u0430\u0435\u0442 \u0444\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043c\u043e\u0434\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, \u0442\u0430\u043a \u0432\u044b \u0437\u0430\u0431\u0443\u0434\u0435\u0442\u0435 \u043f\u0440\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043a\u0443\u0447\u0438 \u043a\u043e\u0434\u0430. \u041a\u043e\u043d\u0432\u0435\u0439\u0435\u0440\u044b \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u043f\u0440\u043e\u0432\u043e\u0434\u0438\u0442\u044c \u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u044b, \u043d\u043e \u0434\u043b\u044f \u0442\u0430\u043a\u043e\u0433\u043e \u043d\u0430\u0431\u043e\u0440\u0430 \u0434\u0430\u043d\u043d\u044b\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0435\u043a\u0441\u0442 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u043e\u0432. \u041a\u0440\u043e\u043c\u0435 \u0442\u043e\u0433\u043e, \u043a\u043e\u0433\u0434\u0430 \u0432\u0430\u0448\u0435 \u043c\u043e\u0434\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0441\u043b\u043e\u0436\u043d\u044b\u043c, \u0438\u043d\u043e\u0433\u0434\u0430 \u0442\u0440\u0443\u0434\u043d\u043e \u0443\u0432\u0438\u0434\u0435\u0442\u044c, \u043d\u0435 \u0441\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043b\u0438 \u0433\u0434\u0435-\u043d\u0438\u0431\u0443\u0434\u044c \u0443\u0442\u0435\u0447\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445. \u041a\u043e\u043d\u0432\u0435\u0439\u0435\u0440\u044b \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u044b \u0441 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c\u044e \u043f\u043e\u0434\u0433\u043e\u043d\u043a\u0438 \/ \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \/ \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0434\u043e\u0433\u043d\u0430\u0442\u044c \u0432\u0435\u0441\u044c \u043a\u043e\u043d\u0432\u0435\u0439\u0435\u0440 \u043a \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u043c \u0438 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c \u0438\u0445 \u0432 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0431\u0435\u0437 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0434\u0435\u043b\u0430\u0442\u044c \u044d\u0442\u043e \u0438\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u043e \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432\u044b \u0434\u0435\u043b\u0430\u0435\u0442\u0435.\n\n\u0421\u0443\u043f\u0435\u0440 \u0443\u0434\u043e\u0431\u043d\u043e, \u043f\u0440\u0430\u0432\u0434\u0430 ? \u0412 \u044d\u0442\u043e\u043c \u043d\u043e\u0443\u0442\u0431\u0443\u043a\u0435 \u043c\u044b \u0440\u0430\u0437\u0431\u0435\u0440\u0435\u043c \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u043a\u043e\u043d\u0432\u0435\u0439\u0435\u0440\u0430, \u0447\u0442\u043e\u0431\u044b \u0431\u044b\u043b\u043e \u043b\u0435\u0433\u0447\u0435 \u0443\u0432\u0438\u0434\u0435\u0442\u044c, \u043a\u0430\u043a \u0432\u0441\u0435 \u043e\u043d\u0438 \u0441\u043e\u0447\u0435\u0442\u0430\u044e\u0442\u0441\u044f \u0434\u0440\u0443\u0433 \u0441 \u0434\u0440\u0443\u0433\u043e\u043c. \u0425\u043e\u0442\u044f \u043e\u043d \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0438\u0441\u0447\u0435\u0440\u043f\u044b\u0432\u0430\u044e\u0449\u0438\u043c, \u043e\u043d \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u043e\u043c\u043e\u0447\u044c \u0432\u0430\u043c \u043d\u0430\u0447\u0430\u0442\u044c \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u043a\u043e\u043d\u0432\u0435\u0439\u0435\u0440\u044b, \u0447\u0442\u043e\u0431\u044b \u0432\u044b \u043c\u043e\u0433\u043b\u0438 \u0442\u0440\u0430\u0442\u0438\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043d\u0430 \u0430\u043d\u0430\u043b\u0438\u0437. \u041d\u043e \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435:","9fbdb62a":"\u0411\u043e\u043b\u044c\u0448\u0435 \u043f\u043e\u0445\u043e\u0436\u0435 \u043d\u0430 \u0437\u0430\u0434\u0430\u0447\u0443 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 - \u0442\u0443\u0442 11 \u043a\u043b\u0430\u0441\u0441\u043e\u0432, \u043d\u043e \u0440\u0430\u0437 \u043c\u0435\u0442\u0440\u0438\u043a\u0430 mse - \u0434\u0435\u043b\u0430\u0435\u043c \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044e.","7d2a7486":"### \u041b\u0435\u043c\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u044f \u0438 \u0434\u043e\u043f \u043f\u0440\u0435\u0434\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430\n\u0414\u0435\u043b\u0430\u0435\u043c Review_Text \u0438 Review_Title \u0441\u0442\u0440\u043e\u0447\u043d\u044b\u043c\u0438, \u0443\u0431\u0438\u0440\u0430\u0435\u043c \u0447\u0438\u0441\u043b\u0430 \u0438 \u043b\u0435\u043c\u043c\u0430\u0442\u0438\u0437\u0438\u0440\u0443\u0435\u043c: \u043d\u0430 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u043c \u043b\u0435\u043c\u043c\u0430\u0442\u0438\u0437\u0430\u0442\u043e\u0440 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043b\u0443\u0447\u0448\u0435, \u0447\u0435\u043c \u0441\u0442\u0435\u043c\u043c\u0430\u0442\u0438\u0437\u0430\u0442\u043e\u0440.","95068dda":"## Preprocessing\n\n\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c nlp \u0444\u0438\u0447\u0438: \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043b\u043e\u0432 \u0432 \u043e\u0442\u0437\u044b\u0432\u0435, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0438 \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0441\u043b\u043e\u0432 \u0432 \u043d\u0438\u0445 \u0438 \u0442\u0434","6774b043":"### Tricky parts\n\u0422\u0435\u043f\u0435\u0440\u044c \u043e \u0441\u043b\u043e\u0436\u043d\u044b\u0445 \u0434\u0435\u0442\u0430\u043b\u044f\u0445. \u041f\u0435\u0440\u0432\u043e\u0435, \u0447\u0442\u043e \u044f \u0445\u043e\u0447\u0443 \u0441\u0434\u0435\u043b\u0430\u0442\u044c, \u044d\u0442\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c, \u043a\u0430\u043a \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u043c\u043e\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435. \u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u0430\u044f \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442 \u0442\u0443 \u0436\u0435 \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u0443\u044e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u043a\u043e \u0432\u0441\u0435\u043c\u0443 \u043d\u0430\u0431\u043e\u0440\u0443 \u0434\u0430\u043d\u043d\u044b\u0445, \u043d\u043e \u0432 \u0441\u043b\u0443\u0447\u0430\u044f\u0445, \u043a\u043e\u0433\u0434\u0430 \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c \u0440\u0430\u0437\u043d\u043e\u0440\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435, \u044d\u0442\u043e \u043d\u0435 \u0441\u043e\u0432\u0441\u0435\u043c \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442. \u0418\u0442\u0430\u043a, \u043f\u0435\u0440\u0432\u043e\u0435, \u0447\u0442\u043e \u044f \u0441\u043e\u0431\u0438\u0440\u0430\u044e\u0441\u044c \u0441\u0434\u0435\u043b\u0430\u0442\u044c, \u044d\u0442\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c selector transformer \u043f\u043e\u0434 \u043a\u0430\u0436\u0434\u044b\u0439 \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u043e\u0441\u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0434\u0438\u043d \u0441\u0442\u043e\u043b\u0431\u0435\u0446 \u0432 \u043d\u0430\u0431\u043e\u0440\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0435\u043c\u044b\u043c \u043c\u043d\u043e\u0439 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c \u043a\u043b\u044e\u0447\u0435\u0439. ","e12cd368":"## \u0417\u0430\u0434\u0430\u0447\u0430\n\u041f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u0440\u0435\u0439\u0442\u0438\u043d\u0433 \u043e\u0442\u0435\u043b\u044f \u043f\u043e \u043e\u0442\u0437\u044b\u0432\u0443.\n\n\u0414\u0430\u043d\u043d\u044b\u0435 \u043b\u0435\u0436\u0430\u0442 \u0432 train.csv - \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u0444\u0430\u0439\u043b\u044b \u0432\u0441\u043f\u043e\u043c\u043e\u0433\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435.\n\n\u041f\u043e\u043b\u043e\u0432\u0438\u043d\u0430 \u043e\u0446\u0435\u043d\u043a\u0438 \u0437\u0430 \u0440\u0435\u0448\u0435\u043d\u0438\u0435, \u0432\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u043b\u043e\u0432\u0438\u043d\u0430 \u0437\u0430 \u0442\u043e, \u043a\u0430\u043a \u0431\u0443\u0434\u0435\u0442\u0435 \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0444\u0438\u0447\u0438.","d9b58023":"## \u0417\u0430\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\n\u041a\u0430\u043a \u043c\u043e\u0436\u043d\u043e \u0435\u0449\u0435 \u0443\u043b\u0443\u0447\u0448\u0438\u0442\u044c MSE:\n* \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0432 fasttext \u0432 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u0444\u0438\u0447\u0435\u0439 \u0441 \u0442\u0435\u043a\u0441\u0442\u043e\u043c\n* \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u044b \u0433\u043b\u0443\u0431\u0438\u043d\u043d\u043e\u0433\u043e \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f"}}