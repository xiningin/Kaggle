{"cell_type":{"13510865":"code","b8da99bd":"code","7d16433e":"code","a5a55f97":"code","b0e50a2b":"code","b9309406":"code","a49903c7":"code","a6eddfc6":"code","7a608286":"code","89c78cd8":"code","3a2b6779":"code","a7365f41":"code","383224ad":"code","88827a19":"code","9464ff90":"code","cbf318a7":"code","b4f4e9f6":"code","b24408fa":"code","5f70722c":"code","771d9031":"code","1831402b":"code","5fcc6fb2":"code","da497ed2":"code","c349a709":"code","04ed8cbf":"code","4ac51d68":"code","cd94d74c":"markdown","a8a53b3e":"markdown","de87ab58":"markdown","946dcf49":"markdown","db6a2918":"markdown","cadb90d1":"markdown","eacbd64f":"markdown","ad5167ad":"markdown","11003d58":"markdown"},"source":{"13510865":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b8da99bd":"cars_data=pd.read_csv('..\/input\/vehicle-dataset-from-cardekho\/CAR DETAILS FROM CAR DEKHO.csv')","7d16433e":"import matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.linear_model import Lasso\nfrom sklearn import metrics","a5a55f97":"#checking the shape\ncars_data.shape","b0e50a2b":"#getting some info of the data set\ncars_data.info()","b9309406":"# checking for number of missing values\ncars_data.isnull().sum()","a49903c7":"#checking the distribution of categorical data\nprint(cars_data.fuel.value_counts())\nprint(cars_data.seller_type.value_counts())\nprint(cars_data.transmission.value_counts())\nprint(cars_data.owner.value_counts())","a6eddfc6":"# encoding fuel column\ncars_data.replace({'fuel':{'Diesel':0,'Petrol':1,'CNG':2,'LPG':3,'Electric':4}},inplace=True)\n# encoding transmission column\ncars_data.replace({'transmission':{'Manual':0,'Automatic':1}},inplace=True)\n# encoding seller_type column\ncars_data.replace({'seller_type':{'Individual':0,'Dealer':1,'Trustmark Dealer':2}},inplace=True)\n#encoding owner column\ncars_data.replace({'owner':{'First Owner':0,'Second Owner':1,'Third Owner':2,'Fourth & Above Owner':3,'Test Drive Car':4}},inplace=True)","7a608286":"cars_data.head()","89c78cd8":"X=cars_data.drop(['name','selling_price'],axis=1)\nY=cars_data['selling_price']","3a2b6779":"X_train, X_test, Y_train, Y_test= train_test_split(X,Y,test_size=0.2,random_state=2)","a7365f41":"# loading linear regression model\nlin_reg_model=LinearRegression()","383224ad":"lin_reg_model.fit(X_train,Y_train)","88827a19":"#predicting\npredicted_values=lin_reg_model.predict(X_train)","9464ff90":"# R square error\nerror_score=metrics.r2_score(Y_train,predicted_values)\nprint(\"R square error:\",error_score)","cbf318a7":"plt.scatter(Y_train,predicted_values,c='r')\nplt.xlabel('Actual Price')\nplt.ylabel('Predicted Price')\nplt.title('Actual Price vs Predicted Price')\nplt.show()","b4f4e9f6":"prediction_values=lin_reg_model.predict(X_test)","b24408fa":"error_score1=metrics.r2_score(Y_test,prediction_values)\nprint(\"R square error:\",error_score1)","5f70722c":"plt.scatter(Y_test,prediction_values,c='r')\nplt.xlabel('Actual Price')\nplt.ylabel('Predicted Price')\nplt.title('Actual Price vs Predicted Price')\nplt.show()","771d9031":"lasso_reg_model=Lasso()\nlasso_reg_model.fit(X_train,Y_train)","1831402b":"predicted_values1=lasso_reg_model.predict(X_train)","5fcc6fb2":"# R square error\nerror_score2=metrics.r2_score(Y_train,predicted_values1)\nprint(\"R square error:\",error_score2)","da497ed2":"plt.scatter(Y_train,predicted_values1,c='g')\nplt.xlabel('Actual Price')\nplt.ylabel('Predicted Price')\nplt.title('Actual Price vs Predicted Price')\nplt.show()","c349a709":"prediction_values1=lasso_reg_model.predict(X_test)","04ed8cbf":"# R square error\nerror_score3=metrics.r2_score(Y_test,prediction_values1)\nprint(\"R square error:\",error_score3)","4ac51d68":"plt.scatter(Y_test,prediction_values1,c='g')\nplt.xlabel('Actual Price')\nplt.ylabel('Predicted Price')\nplt.title('Actual Price vs Predicted Price')\nplt.show()","cd94d74c":"## creating lables and spltting the data into training and testing data ","a8a53b3e":"## encoding the categorical data","de87ab58":"## importing the dependencies","946dcf49":"## importing data","db6a2918":"## Linear Regression","cadb90d1":"### visualize actual and predicted values","eacbd64f":"# Model Training","ad5167ad":"## model evaluation","11003d58":"## Lasso Regression"}}