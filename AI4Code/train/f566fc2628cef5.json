{"cell_type":{"2f9ac5d6":"code","0c8453f2":"code","b560dcda":"code","2f628912":"code","291ac43b":"code","ff1d2e72":"code","5f40a11f":"code","81f084e6":"code","323c3857":"code","0a3fd628":"code","48800f28":"code","020b09d2":"code","e502730f":"code","c960aee7":"code","06fdac93":"code","5ca0d7be":"code","135cd6c8":"code","1893b75b":"code","2e62208b":"code","7869d248":"code","f386a1f0":"code","6b4eb8b7":"code","0c1c57ef":"code","4c82b459":"code","2d9cba73":"markdown","35314478":"markdown"},"source":{"2f9ac5d6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0c8453f2":"import pandas as pd","b560dcda":"df=pd.read_csv('..\/input\/creditcardfraud\/creditcard.csv')\n","2f628912":"df.head()","291ac43b":"df.tail()","ff1d2e72":"df['Class'].value_counts()","5f40a11f":"pd.value_counts(df['Class']).plot.bar()\n\n","81f084e6":"import matplotlib.pyplot as plt","323c3857":"len(df.columns)","0a3fd628":"X=df.iloc[:,1:30]\ny=df.iloc[:,-1]","48800f28":"X.head()\n","020b09d2":"y.head()\n","e502730f":"from sklearn.model_selection import train_test_split\n\n","c960aee7":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=42)\n\n","06fdac93":"y_train.value_counts()\n","5ca0d7be":"##Step1\nimport tensorflow\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.models import Sequential","135cd6c8":"print(len(X.columns))\nn_inputs=29","1893b75b":"# define model\nmodel = Sequential()\n# define first hidden layer and visible layer\nmodel.add(Dense(50, input_dim=n_inputs, activation='relu', kernel_initializer='he_uniform'))\n# define output layer\nmodel.add(Dense(1, activation='sigmoid'))\n# define loss and optimizer\nmodel.compile(loss='binary_crossentropy', optimizer='adam')\nmodel.fit(X_train,y_train,epochs=10)","2e62208b":"from sklearn.metrics import roc_auc_score\ny_pred1=model.predict(X_test)\n\nprint(roc_auc_score(y_test,y_pred1))","7869d248":"weights_assigned={0:1,1:550}\n","f386a1f0":"# define model\nmodel = Sequential()\n# define first hidden layer and visible layer\nmodel.add(Dense(50, input_dim=n_inputs, activation='relu', kernel_initializer='he_uniform'))\n# define output layer\nmodel.add(Dense(1, activation='sigmoid'))\n# define loss and optimizer\nmodel.compile(loss='binary_crossentropy', optimizer='adam')\nmodel.fit(X_train,y_train,class_weight=weights_assigned,epochs=10)","6b4eb8b7":"y_pred=model.predict(X_test)\n","0c1c57ef":"from sklearn.metrics import roc_auc_score\n","4c82b459":"roc_auc_score(y_test,y_pred)","2d9cba73":"Weighted Neural Network With Keras\nDefine Weights\nFit the model with thos specific weights","35314478":"### Intitially\nStep1 -We Will Create an ANN and solve this problem(ROC AUC) \nStep2- We will use some Weights handling techniques to solve this imbalanced then we create\nThe ANN"}}