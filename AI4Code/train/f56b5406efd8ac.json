{"cell_type":{"9910fb87":"code","d56a6a5e":"code","5a4afc31":"code","8b9da208":"code","b16784be":"code","5afd1e8f":"code","b7d5bb6d":"code","9fc8436f":"code","5e628eb0":"code","04c5248d":"code","2ddc3598":"code","eadb282a":"code","fc93ddea":"code","be070015":"code","5c357c26":"code","3df23ca6":"code","79365d9f":"code","2fa9d67f":"code","13850d3c":"code","7b86061b":"code","3f98ead1":"code","df2f347f":"code","a19dcf5d":"code","dd2bebe0":"code","becba960":"code","bebfce39":"code","e6d89df4":"code","7e2f0471":"markdown","f9f17931":"markdown","ab623b16":"markdown","4bc363d9":"markdown","d33f4f39":"markdown","c0ca8155":"markdown"},"source":{"9910fb87":"import pandas as pd \nimport numpy as np \nimport seaborn as sns \nimport matplotlib.pyplot as plt \n%matplotlib inline","d56a6a5e":"df = pd.read_csv('..\/input\/diabetes.csv')","5a4afc31":"df.head()","8b9da208":"df.info()","b16784be":"df.describe()","5afd1e8f":"sns.heatmap(df.isnull(),yticklabels=False,cmap='viridis')","b7d5bb6d":"sns.set_style('whitegrid')","9fc8436f":"sns.countplot(x='Outcome',hue='Outcome',data=df,palette='RdBu_r')","5e628eb0":"sns.pairplot(data=df,hue='Outcome')","04c5248d":"plt.scatter(x='Outcome',y='Age',data=df)\nplt.xlabel('Outcome')\nplt.ylabel('Age')","2ddc3598":"sns.distplot(df['Age'],kde=False,color='darkblue',bins=20)","eadb282a":"df['Age'].hist(bins=40,color='Green',alpha=0.6)","fc93ddea":"sns.distplot(df['BloodPressure'],kde=False,color='darkblue',bins=20)","be070015":"sns.jointplot(x='Age',y='BloodPressure',data=df)","5c357c26":"import cufflinks as cf \ncf.go_offline()","3df23ca6":"df['BMI'].iplot(kind='hist',bins=40,color='red')","79365d9f":"from sklearn.model_selection import train_test_split","2fa9d67f":"df.head()","13850d3c":"X = ['Pregnancies','Glucose','BloodPressure','SkinThickness','Insulin','BMI','DiabetesPedigreeFunction','Age']\ny = ['Output']","7b86061b":"df2 = pd.DataFrame(data=df)\ndf2.head()","3f98ead1":"X_train, X_test, y_train, y_test = train_test_split(df.drop('Outcome',axis=1),df['Outcome'],\n                                                    test_size=0.30, random_state=101)","df2f347f":"from sklearn.linear_model import LogisticRegression","a19dcf5d":"logmodel = LogisticRegression()","dd2bebe0":"logmodel.fit(X_train,y_train)","becba960":"predictions = logmodel.predict(X_test)","bebfce39":"from sklearn.metrics import classification_report, confusion_matrix","e6d89df4":"print(classification_report(y_test,predictions))","7e2f0471":"# Exploring Data Analysis Visually ","f9f17931":"# Outcome\nFrom the outcome we can say that the results are ~79-80% confident on the results which I see not a bad evaluation. ","ab623b16":"# Training and Predicting ","4bc363d9":"# Cufflinks for Plots","d33f4f39":"# Building Logistics Regression: Train Test Split ","c0ca8155":"# Evaluation "}}