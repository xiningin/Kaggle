{"cell_type":{"fc361558":"code","c2a2d366":"code","bde438e2":"code","864deb42":"code","bed0be1b":"code","e1ceb204":"code","84b1a7a8":"code","419fb3dd":"code","858d20a1":"code","647c19d9":"code","b3de5698":"code","9f16f1c1":"code","05efdf09":"code","64644251":"code","c1996b25":"code","56a00df6":"code","1a061ac8":"code","339a6367":"code","4ed312ae":"code","7a35a281":"code","9feb5713":"code","97bd751f":"code","34a8b3fa":"code","887e6bfe":"code","a55f9c34":"code","6be9dda0":"code","f9ea9894":"code","1a62e721":"code","1af42e11":"code","7355bf1c":"code","1eab3038":"code","c6425280":"code","61ab8c4d":"code","7b37226f":"code","43c32cf3":"code","f7b72646":"code","32413d33":"code","23345bd6":"code","a97b534c":"code","a022d591":"code","ef3ea18d":"code","13707442":"code","2eba419c":"code","13cd4388":"code","8c93f77a":"code","1f1a0a71":"code","512f7726":"code","75336dbf":"code","62d78e4c":"code","f59e2f15":"code","bffbd1e3":"code","8451311e":"code","7bebe4b9":"code","3de912c6":"code","17e2157d":"code","645c3b6e":"markdown","1b88f60b":"markdown","566e8b2b":"markdown","9351867b":"markdown","fae6a06c":"markdown","5e7e215d":"markdown","46bdb3dd":"markdown","af37de64":"markdown","c6dd58b0":"markdown","8172b3b6":"markdown","913714df":"markdown","66de3d56":"markdown","b6fcb004":"markdown","6873c37c":"markdown","d3811b6d":"markdown","b6b2c550":"markdown"},"source":{"fc361558":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n#visualization\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n                           \n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c2a2d366":"data=pd.read_csv(r\"..\/input\/heart-disease-prediction\/datasets_33180_43520_heart.csv\")","bde438e2":"data","864deb42":"#check the shape of the dataset\ndata.shape","bed0be1b":"#check the datatypes of the dataset\ndata.dtypes","e1ceb204":"data.info()","84b1a7a8":"#check the null value\ndata.isnull().sum()","419fb3dd":"data.head()","858d20a1":"data.tail()","647c19d9":"corr=data.corr()\nplt.figure(figsize=(10,10))\nsns.heatmap(data.corr(),annot=True,cmap='coolwarm')\nplt.show()","b3de5698":"sns.countplot(data.target)\nplt.show()","9f16f1c1":"sns.pairplot(data)\nplt.show()","05efdf09":"sns.distplot(data.age[data.target==0])\nsns.distplot(data.age[data.target==1])\nplt.legend(['0','1'])\nplt.show()","64644251":"sns.countplot(data.sex,hue=data.target)\nplt.show()","c1996b25":"sns.countplot(data.cp,hue=data.target)\nplt.show()","56a00df6":"sns.distplot(data.trestbps[data.target==0])\nsns.distplot(data.trestbps[data.target==1])\nplt.legend(['0','1'])\nplt.show()","1a061ac8":"sns.distplot(data.chol[data.target==0])\nsns.distplot(data.chol[data.target==1])\nplt.legend(['0','1'])\nplt.show()","339a6367":"sns.distplot(data.thalach[data.target==0])\nsns.distplot(data.thalach[data.target==1])\nplt.legend(['0','1'])\nplt.show()","4ed312ae":"sns.distplot(data.oldpeak[data.target==0])\nsns.distplot(data.oldpeak[data.target==1])\nplt.legend(['0','1'])\nplt.show()","7a35a281":"sns.countplot(data.fbs,hue=data.target)\nplt.show()","9feb5713":"sns.countplot(data.restecg,hue=data.target)\nplt.show()","97bd751f":"sns.countplot(data.exang,hue=data.target)\nplt.show()","34a8b3fa":"sns.countplot(data.slope,hue=data.target)\nplt.show()","887e6bfe":"sns.countplot(data.ca,hue=data.target)\nplt.show()","a55f9c34":"sns.countplot(data.thal,hue=data.target)\nplt.show()","6be9dda0":"sns.catplot(x=\"cp\", y=\"chol\",hue=\"sex\",data=data, kind=\"bar\")\nplt.show()","f9ea9894":"# Show the results of a linear regression within each dataset\nsns.lmplot(x=\"trestbps\", y=\"chol\",data=data,hue=\"cp\")\nplt.show()","1a62e721":"#input and output selection\nip=data.drop(['target'],axis=1)\nop=data['target']","1af42e11":"from sklearn.model_selection import train_test_split\nxtr,xts,ytr,yts=train_test_split(ip,op,test_size=0.3)","7355bf1c":"from sklearn.preprocessing import StandardScaler\nsc=StandardScaler()\nsc.fit(xtr)\nxtr=sc.transform(xtr)\nxts=sc.transform(xts)","1eab3038":"from sklearn.linear_model import LogisticRegression\nalg=LogisticRegression()","c6425280":"#train the algorithm with the training data\nalg.fit(xtr,ytr)\nyp=alg.predict(xts)","61ab8c4d":"from sklearn import metrics\ncm=metrics.confusion_matrix(yts,yp)\nprint(cm)","7b37226f":"accuracy=metrics.accuracy_score(yts,yp)\nprint(accuracy)","43c32cf3":"precission=metrics.precision_score(yts,yp)\nprint(precission)","f7b72646":"recall=metrics.recall_score(yts,yp)\nprint(recall)","32413d33":"from sklearn.model_selection import train_test_split\nxtr,xts,ytr,yts=train_test_split(ip,op,test_size=0.2)","23345bd6":"from sklearn.preprocessing import StandardScaler\nsc=StandardScaler()\nsc.fit(xtr)\nxtr=sc.transform(xtr)\nxts=sc.transform(xts)","a97b534c":"from sklearn.naive_bayes import GaussianNB\nGNB=GaussianNB()\nGNB.fit(xtr,ytr)\nyp=GNB.predict(xts)","a022d591":"from sklearn import metrics\ncm=metrics.confusion_matrix(yts,yp)\nprint(cm)","ef3ea18d":"accuracy=metrics.accuracy_score(yts,yp)\nprint(accuracy)","13707442":"recall=metrics.recall_score(yts,yp)\nprint(recall)","2eba419c":"#KNN algorithm the nearest distance is calculated\nfrom sklearn.neighbors import KNeighborsClassifier\n\nneighbors=np.arange(1,9)\ntrain_accuracy=np.empty(len(neighbors))\ntest_accuracy=np.empty(len(neighbors))\n\nfor i,k in enumerate(neighbors):\n    knn=KNeighborsClassifier(n_neighbors=k)\n    knn.fit(xtr,ytr)\n    train_accuracy[i]=knn.score(xtr,ytr)\n    test_accuracy[i]=knn.score(xts,yts)\n\nplt.xlabel('neighbors of number')\nplt.ylabel('accuracy')\nplt.title('k-NN Varying number of neighbors')\nplt.plot(neighbors, test_accuracy, label='Testing Accuracy')\nplt.plot(neighbors, train_accuracy, label='Training accuracy')\nplt.legend()\nplt.show()\n","13cd4388":"from sklearn.model_selection import train_test_split\nxtr,xts,ytr,yts=train_test_split(ip,op,test_size=0.3)","8c93f77a":"from sklearn.preprocessing import StandardScaler\nsc=StandardScaler()\nsc.fit(xtr)\nxtr=sc.transform(xtr)\nxts=sc.transform(xts)","1f1a0a71":"knn=KNeighborsClassifier(n_neighbors=4)\nknn.fit(xtr,ytr)\nyp=knn.predict(xts)","512f7726":"from sklearn import metrics\ncm=metrics.confusion_matrix(yts,yp)\nprint(cm)","75336dbf":"accuracy=metrics.accuracy_score(yts,yp)\nprint(accuracy)","62d78e4c":"recall = metrics.recall_score(yts,yp,average='macro')\nprint(recall)","f59e2f15":"from sklearn.model_selection import train_test_split\nxtr,xts,ytr,yts=train_test_split(ip,op,test_size=0.3)","bffbd1e3":"from sklearn.preprocessing import StandardScaler\nsc=StandardScaler()\nsc.fit(xtr)\nxtr=sc.transform(xtr)\nxts=sc.transform(xts)","8451311e":"from sklearn import svm\n\nalg=svm.SVC(C=30,gamma=0.03)\n\n#train the algorithm with training data\nalg.fit(xtr,ytr)\nyp=alg.predict(xts)","7bebe4b9":"from sklearn import metrics\ncm=metrics.confusion_matrix(yts,yp)\nprint(cm)","3de912c6":"from sklearn import metrics\naccuracy=metrics.accuracy_score(yts,yp)\nprint(accuracy)","17e2157d":"recall = metrics.recall_score(yts,yp)\nprint(recall)","645c3b6e":"# Train & Test the Dataset","1b88f60b":"My understanding Logistic regression is a regression model where the dependent variable is categorical.\n\nThe prediction will be 0 or 1, Yes or No\n\nHeart Disease dataset contain all numerical values","566e8b2b":"# THANK YOU","9351867b":"It is easy and fast to predict class of test data set. It also perform well in multi class prediction","fae6a06c":"# Checking the Accuacy of our Model","5e7e215d":"# K-NEAREST NEIGHBOUR","46bdb3dd":"# Naive Bayes classifier","af37de64":"Support vector machines (SVMs) are powerful yet flexible supervised machine learning algorithms which are used both for classification and regression","c6dd58b0":"* age-age in years\n\nsex-(1 = male; 0 = female)\n\n* cp-chest pain type\n\n* trestbps-resting blood pressure (in mm Hg on admission to the hospital)\n\n* chol-serum cholestoral in mg\/dl\n\n* fbs-(fasting blood sugar &gt; 120 mg\/dl) (1 = true; 0 = false)\n\n* restecg-resting electrocardiographic results\n\n* thalach-maximum heart rate achieved\n\n* exang-exercise induced angina (1 = yes; 0 = no)\n\n* oldpeak-ST depression induced by exercise relative to rest\n\n* SLOPE (the slope of the peak exercise ST segment)\n\n* CA (number of major vessels (0-3) colored by flourosopy)\n\n* THAL (3 = normal; 6 = fixed defect; 7 = reversable defect)\n\n* TARGET (1 or 0)","8172b3b6":"# Description of the dataset","913714df":"# Analyzing the dataset","66de3d56":"K-nearest neighbors (KNN) algorithm is a type of supervised ML algorithm which can be used for both classification as well as regression predictive problems","b6fcb004":"# SUPPORT VECTOR MACHINES-SVM","6873c37c":"# Logistic Regression","d3811b6d":"If it is understood well !!!! please upvoted","b6b2c550":"# Scalling Our Dataset"}}