{"cell_type":{"d2fc96a8":"code","5371a2f4":"code","ee38be99":"code","72d982a2":"code","82c51536":"code","c69994e9":"code","08669e14":"code","85bd3ffc":"code","57e24ecf":"code","65db7c64":"code","bdb0269c":"code","a46c66e2":"code","1400860b":"code","d8223bbd":"code","850db061":"code","8bfdcb1c":"code","a27cd7cf":"code","1f91a104":"code","90ef5290":"code","5de9dcff":"code","515daf7a":"code","dd91d660":"code","0b17215e":"code","586c7288":"markdown","b15013cd":"markdown","bdb66c98":"markdown","1b9dc7a5":"markdown","bd1b083c":"markdown","577a4adf":"markdown","24e65869":"markdown","25f443d8":"markdown","5ec75ea1":"markdown","71c9ad7d":"markdown","52b7f24d":"markdown","9fdbedbe":"markdown","556d3a9d":"markdown","eb3dc152":"markdown","e97a49bd":"markdown","69fd9827":"markdown","98b34f3a":"markdown","2c3f9525":"markdown","80e1218b":"markdown","fb272c62":"markdown","c18776d7":"markdown","26628f38":"markdown","9b48c0f6":"markdown","740ac5d7":"markdown","6d959d47":"markdown","832aa320":"markdown","c90dd202":"markdown","4ae13332":"markdown","b86b41dc":"markdown"},"source":{"d2fc96a8":"# For data handling\nimport numpy as np\nimport pandas as pd\n\n# For visvalization\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots","5371a2f4":"df=pd.read_csv('..\/input\/netflix-original-films-imdb-scores\/NetflixOriginals.csv')\ndf.head()","ee38be99":"# checking for correct data types\ndf.info()","72d982a2":"# Changing the format of 'Premiere' to datetime\ndf['Premiere']=pd.to_datetime(df['Premiere'], dayfirst=True)","82c51536":"# Checking for missing values\ndf.isnull().sum()","c69994e9":"# Checking for dublicate data\ndf.duplicated().sum()","08669e14":"# Checkign for some anomaly values\n((df['IMDB Score']>10)|(df['IMDB Score']<0)).sum()","85bd3ffc":"# Adding day, month and year columns\ndf['Day']=df['Premiere'].apply(lambda x: x.day)\n\nmonth_dict = {1:\"January\", 2:\"February\", 3:\"March\", 4:\"April\", 5:\"May\", 6:\"June\",\n  7:\"July\", 8:\"August\", 9:\"September\", 10:\"October\", 11:\"November\", 12:\"December\"}\ndf['Month']=df['Premiere'].apply(lambda x: month_dict[x.month])\n\ndf['Year']=df['Premiere'].apply(lambda x: x.year)","57e24ecf":"## numeric features\nnum_col=['Runtime', 'IMDB Score']\n\n# Plotting\nfig=make_subplots(cols=1, rows=2)\n\nfor i,col in enumerate(num_col):\n    fig.add_trace(go.Box(x=df[col], name=col, hovertext = df['Title'] + \" \" + df['Genre']),\n                  row=i+1, col=1)\n\nfig.update_layout(title=dict(text='Distribution of Runtime and IMDB score', xanchor='center', yanchor='top', x=0.5))\nfig.show()","65db7c64":"fig, ax = plt.subplots(1,1, figsize = (10, 6), constrained_layout = True)\nax = sns.regplot(x = 'IMDB Score', y = 'Runtime', data = df)\n\nax.set_ylabel('Runtime', fontsize = 14)\nax.set_xlabel('IMDB Score', fontsize = 14)\nplt.title('IMDB Score Vs Runtime', fontsize = 16)\n\ncorrelation = np.corrcoef(df['IMDB Score'], df['Runtime'])[0][1]\n\nax.text(x = 8, y = 180,\n        s = f\"correlation : {round(correlation,3)}\", \n        ha = 'center', size = 12, rotation = 0, color = 'black',\n        bbox=dict(boxstyle=\"round,pad=0.5\", fc='skyblue', ec=\"skyblue\", lw=2));","bdb0269c":"# Let's first check how many Genre are there\nlen(df['Genre'].unique())","a46c66e2":"df_temp=df.groupby(['Genre']).mean(['IMDB rating']).sort_values(by='IMDB Score', ascending=False).reset_index().iloc[:10,:]\n\nfig, ax = plt.subplots(1,1, figsize = (10, 6), constrained_layout = True)\nax = sns.barplot(x = 'Genre', y = 'IMDB Score', data = df_temp, color = 'violet')\n\nfor i in ax.patches:    \n    ax.text(x = i.get_x() + i.get_width()\/2, y = i.get_height()\/2,\n            s = f\"{round(i.get_height(),1)}\", \n            ha = 'center', size = 14, weight = 'bold', rotation = 0, color = 'white',\n            bbox=dict(boxstyle=\"round,pad=0.5\", fc='pink', ec=\"pink\", lw=2))\n\n\nax.set_xlabel('Genre', fontsize=14)\nax.set_ylabel('Average IMDB Score', fontsize=14)\nax.set_xticklabels([i[:15] for i in df_temp['Genre'].unique()], fontsize=12, rotation = -45 )\nplt.title('Top 10 Genre by IMDB Score', fontsize=16);\n","1400860b":"df_temp=df.sort_values(by='IMDB Score', ascending=False).reset_index().iloc[:13,:]\n\nfig, ax = plt.subplots(1,1, figsize = (15, 6), constrained_layout = True)\nax = sns.barplot(x = 'Title', y = 'IMDB Score', data = df_temp, hue = 'Genre')\n\nfor i in ax.patches:    \n    ax.text(x = i.get_x() + i.get_width()\/2, y = i.get_height()+0.1,\n            s = f\"{i.get_height()}\", \n            ha = 'center', size = 14, weight = 'bold', rotation = 0, color = 'white',\n            bbox=dict(boxstyle=\"circle,pad=0.5\", fc='lightblue', ec=\"lightblue\", lw=2))\n\n\nax.set_xlabel('Title', fontsize=14)\nax.set_ylabel('Average IMDB Score', fontsize=14)\nax.set_xticklabels([i[:15] for i in df_temp['Title'].unique()], fontsize=12, rotation = -30)\nplt.title('Top 10 movies by IMDB Score', fontsize=16)\nplt.legend(title='Gerne', bbox_to_anchor=(1.05, 1), loc='upper left');","d8223bbd":"# Let's first check how many languages are there\nlen(df['Language'].unique())","850db061":"df_temp=df.groupby(['Language']).mean(['IMDB rating']).sort_values(by='IMDB Score', ascending=False).reset_index().iloc[:10,:]\n\n# fig=px.pie(df_temp, names='Language', values='IMDB Score')\n# fig.update_layout(title=dict(text='Top 5 rated Language movies', xanchor='center', yanchor='top', x=0.45))\n# fig.show()\n\n\nfig, ax = plt.subplots(1,1, figsize = (10, 6), constrained_layout = True)\nax = sns.barplot(x = 'Language', y = 'IMDB Score', data = df_temp, color = 'violet')\n\nax.set_xlabel('Language', fontsize=14)\nax.set_ylabel('Average IMDB Score', fontsize=14)\nax.set_xticklabels(df_temp['Language'].unique(), fontsize=12, rotation = -30 )\nplt.title('Language and IMDB Score', fontsize=16);","8bfdcb1c":"monthlist=['January', 'February', 'March', 'April', 'May', 'June', 'July', \n           'August', 'September', 'October', 'November', 'December']\n\nyearlist=list(np.sort(df['Year'].unique()))\n\n# If month list is not given in 'category_orders', then the month names will not be in order\nfig=px.box(df, y='Month', x='IMDB Score', category_orders={'Month':monthlist}, hover_name='Title')\nfig.update_layout(title=dict(text='Premiere month and IMDB Score', xanchor='center', yanchor='top', x=0.5))\nfig.show()","a27cd7cf":"# Movies with IMDB Score is more than or equal to 7\nthreshold=7\ndf['Best']=df['IMDB Score'].apply(lambda x: 1 if x>=threshold else 0)","1f91a104":"fig=px.histogram(df, x='Year', color='Best', barmode='group')\nfig.update_layout(title=dict(text='Month and Number of Premieres', xanchor='center', yanchor='top', x=0.5), \n                 xaxis=dict(title='Number of Premieres'))\nfig.show()","90ef5290":"df_temp=df.groupby(['Month'])['Title'].count().reset_index()\n\n# If month list is not given in 'category_orders', then the month names will not be in order\nfig=px.bar(df_temp, y='Month', x='Title', category_orders={'Month':monthlist})\nfig.update_layout(title=dict(text='Month and Number of Premieres', xanchor='center', yanchor='top', x=0.5), \n                 xaxis=dict(title='Number of Premieres'))\nfig.show()","5de9dcff":"# Replace 'Science fiction' with your favorite gerne\nfavorite_genre='Science fiction'\n\n# Filtering the favorite genre\ndf_genre=df[df['Genre'].str.contains(favorite_genre)].reset_index(drop=True)\ndf_genre","515daf7a":"# For counting the movies over the years\ndf_genre['Count']=1\n\nfig=px.sunburst(df_genre, path=['Year','Month','Title'], values='Count')\nfig.update_layout(title=dict(text=f'Number of {favorite_genre} movies over the years',\n                             xanchor='center', yanchor='top', x=0.5), yaxis=dict(title='Movies count'));\n# fig.show()","dd91d660":"# Distribution of Science Fiction movies over the Languages\ndf_hist=df_genre.groupby(['Year','Language']).mean(['Count']).reset_index()\nfig=px.histogram(df_hist, x='Language', y='Count', color='Year')\nfig.update_layout(title=dict(text=f'Distribution of {favorite_genre} movies over languages', xanchor='center', yanchor='top', x=0.5),\n                 xaxis=dict(title='Language'), yaxis=dict(title='Movies count'));\n# fig.show()","0b17215e":"# If I consider all the Genre, the plot won't look good so I am considering top 100 movies for the plot\ndf_temp=df.sort_values(by='IMDB Score', ascending=False).reset_index(drop=True).iloc[:200,:]\nfig=px.parallel_categories(df_temp,  dimensions=['Language', 'Genre', 'Best'],\n                          color='IMDB Score',color_continuous_scale=[(0,'blue'),(0.5,'yellow'),(1,'red')])\nfig.update_layout(title=dict(text='Parallel Categories Plot', xanchor='center', yanchor='top', x=0.5))\nfig.show()","586c7288":"#### The data is clean and useful features area also added, so let's being the EDA and explore the unexplored!","b15013cd":"<center><img src = \"https:\/\/miro.medium.com\/max\/1920\/1*jfR0trcAPT3udktrFkOebA.jpeg\"><\/center>\n\n<h3><center>  <div style=\"background-color:skyblue;border-radius:10px; padding: 10px;\">Science Fiction \ud83d\udc7d<\/div><\/center><\/h3>\n\n> I love watching science fiction movies as they are very exciting and involves lots of creative ideas. Let's explore more about them!","bdb66c98":"#### \ud83d\udd0dObservations:\n> People mostly love animation, comedy, adventure and musical type movies.","1b9dc7a5":"<h4><center>  <div style=\"background-color:skyblue;border-radius:10px; padding: 10px;\">Language \ud83d\udd20 and IMDB Score<\/div><\/center><\/h4>","bd1b083c":"<center><img src = \"https:\/\/sm.pcmag.com\/pcmag_au\/review\/n\/netflix\/netflix_38rt.jpg\"><\/center>\n\n<h1><center>  <div style=\"background-color:lightpink;border-radius:10px; padding: 10px;\">Introduction<\/div><\/center><\/h1>\n\n\ud83c\udf9e Motivation\n\n> I love watching movies and who doesn't! I was thinking about, does the gerne affect the IMDB rating of the movie? Those who don't know about IMBD, it is full form of Internet Movie Database, a web site that provides information about millions of films and television programs as well as their cast and crew. I came across this dataset and decided to use Data Analysis skills to answer the questions in my mind. \n\n\ud83c\udfaf Goal\n\n> To find the insights about movies, their IMDB rating, genre, runtime, etc.\n\n\ud83d\udee0 Tools\n\n> I have used plotly and seaborn for simple plotting, but for quick and efficient EDA I have used Power BI. It is a Microsoft business analytics service. It provides interactive visualizations and business intelligence capabilities with an interface that Microsoft says is simple enough for end users to create reports and dashboards. It is part of the Microsoft Power Platform.\n\n<center><img src =\"https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcStw-j0YVvmKPfks6f9tjBdku4MsLI6QNO78whXdmeGjISdIk6mSjbC-zKjL7gOz9vQjOk&usqp=CAU\"><\/center>\n","577a4adf":"<center><img src = \"https:\/\/i.imgur.com\/eqq7DpI.jpg\"><\/center>\n\n#### \ud83d\udd0dObservation\n> The of proportion of good movies is decreasing over the years (except in 2019). Let's hope we get some good directors, writers and \ud83c\udfad actors soon!","24e65869":"> No dublicate entries found. Now, let's check for some anomaly values. For example, the `IMDB Score` can't be more than 10 and less than 0.","25f443d8":"<center><img src = \"https:\/\/i.imgur.com\/IkIlXyu.jpg\"> <\/center>\n\n#### \ud83d\udd0dObservations\n> It doesn't seem that there is any ralation between the `Premier` and the `IMDB Score`, as it is almost samiliar.\n\n> In the month of June, the average `IMDB Score` is little more than other months, so let's explore it further and see if can get anything useful.\n\n<center><img src = \"https:\/\/i.imgur.com\/pLxP29I.jpg\"><\/center>","5ec75ea1":"#### \ud83d\udd0dObservations\n> Most of the top 10 rated movies are documentries. That's interesting as documentry was not there in top 10 genre, it means that some of the documetries have got very less IMDB score so the average rating low.","71c9ad7d":"<h4><center>  <div style=\"background-color:skyblue;border-radius:10px; padding: 10px;\">Number of Premiers and Date \ud83d\udcc5<\/div><\/center><\/h4>","52b7f24d":"<h4><center>  <div style=\"background-color:skyblue;border-radius:10px; padding: 10px;\">Good Movies \ud83d\udc4f and Bad Movies\ud83d\udc4e<\/div><\/center><\/h4>\n\n>\u26a0 Good movies means, whose IMDB score is more than 7. I took it based on my search, but you can take the threshold as you like!","9fdbedbe":"> As our data has no missing values, we will proceed for checking duplicate entries.","556d3a9d":"<center><img src = \"https:\/\/i.imgur.com\/vqFuTVn.jpg\"><\/center>\n\n#### \ud83d\udd0dObservations\n> Russian movies have highest average IMDB score, **\u043e\u0442\u043b\u0438\u0447\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430**!\n\n> Mostly Indian movies have longest runtime - Marathi, Hindi, and Tamil","eb3dc152":"> As there are too many Languages (same problem with Genre), I will plot the top 10 Language movies based on the average IMDB score.","e97a49bd":"<center><img src = \"https:\/\/i.imgur.com\/yvk56EH.png\"><\/center>","69fd9827":"#### \ud83d\udd0d Observations\n> The correlation between `Runtime` and `IMDB Score` is -0.041, which is close to 0, so there is no relation between them. It means the runtime of a movie doesn't affect the IMDB score!\n\n\ud83d\udcdd Note\n> The correlation score:\n> - 1  : Strongly and positively correlated (one increases, other also increases and vice versa)\n> - 0  : No correlation\n> - 1 : Strongly and negetively correlated (one increases, other also decreases and vice versa)","98b34f3a":"<center><img src = \"https:\/\/i.imgur.com\/fth8MZ4.jpg\"><\/center>\n\n#### \ud83d\udd0dObservation\n> The number of movies released each is rising.\n\n> Mostly the movies are released in the month of April and October, hollidays can be the reason but I am not sure. What do you think? , please write in the \u270d comment.\n\nIn 2020 many people were in their houses due to lockdown, Netfix being a online platform, has reased many movies to take advantage of this opportunity. Let's explore when and how many movies were premiered in 2020.\n\n<center><img src = \"https:\/\/i.imgur.com\/qzVS1or.jpg\"><\/center>","2c3f9525":"<h3><center>  <div style=\"background-color:skyblue;border-radius:10px; padding: 10px;\">Language and Genre [Good \ud83d\udc4f or Bad \ud83d\udc4e movie]<\/div><\/center><\/h3>","80e1218b":"<h4><center>  <div style=\"background-color:skyblue;border-radius:10px; padding: 10px;\">Top 10 rated movies \ud83c\udfac<\/div><\/center><\/h4>","fb272c62":"<h1><center>  <div style=\"background-color:lightpink;border-radius:10px; padding: 10px;\">Reading and Cleaning the Data \ud83e\uddf9<\/div><\/center><\/h1>","c18776d7":"<h3><center>  <div style=\"background-color:lightpink;border-radius:10px; padding: 10px;\">If you like it, don't forget to upvote! <\/div><\/center><\/h3>","26628f38":"> As there are too many `Genre`, it will look mess if I plot all of them in a single plot, also we won't be able to interprete it. So, I will plot the top 10 `Genre` based on the average `IMDB Score`.","9b48c0f6":"#### \ud83d\udd0dObservations:\n> The highest runtime is \u23f3 208 minute (3.5 hrs!) for the crime drama \"The Irishman\" and the shortest runtime is 4 minutes for \"Sol Levante\", an anime.\n\n> The highest IMDB score is 9 for a documentry \"A Life on our Planet\" and least IMDB score is 2.5 for \"Enter the Anime\" which is also a documentry!","740ac5d7":"> There are no such values. The data is clean, so now let's do some feature engineering by adding some useful columns for EDA. I will be adding `Year`, `Month` and `Day` columns from `Premiere`.\n\n\n<h4><center>  <div style=\"background-color:lightpink;border-radius:10px; padding: 10px;\">Feature Engineering \ud83d\udcd0\ud83d\udccf<\/div><\/center><\/h4>","6d959d47":"<h1><center>  <div style=\"background-color:lightpink;border-radius:10px; padding: 10px;\">Exploratory Data Analysis \ud83d\udcca<\/div><\/center><\/h1>\n\n<h4><center>  <div style=\"background-color:skyblue;border-radius:10px; padding: 10px;\">Distribution of the numeric features<\/div><\/center><\/h4>","832aa320":"<h4><center>  <div style=\"background-color:skyblue;border-radius:10px; padding: 10px;\">Runtime \u23f1 and the IMDB score \ud83d\udcaf<\/div><\/center><\/h4>","c90dd202":"<h4><center>  <div style=\"background-color:skyblue;border-radius:10px; padding: 10px;\">Genre \ud83c\udfac and the IMDB score \ud83d\udcaf<\/div><\/center><\/h4>","4ae13332":"> `Premiere` is a date, so I will change its format to datetime","b86b41dc":"<h4><center>  <div style=\"background-color:skyblue;border-radius:10px; padding: 10px;\">Premiere \ud83d\udcc5 and IMDB rating<\/div><\/center><\/h4>"}}