{"cell_type":{"622b5e88":"code","4d4407f8":"code","94e718ca":"code","3919e7b3":"code","87ce90f6":"code","ae9d21d0":"code","6f2594ed":"code","fd20e2fd":"code","98ef3ccd":"code","85863d83":"code","d1dc2ba5":"code","a16db547":"code","cf281a5d":"code","62e27f64":"code","5ebd99eb":"code","858a0ef0":"code","d78bb35d":"code","149acf6a":"code","6bf3319e":"code","1f9d6091":"code","8c4a103f":"code","0d0dee0a":"code","1e9ed3f5":"code","161ed11e":"code","b83fc0a8":"code","eb6cfa9f":"code","9d7b31f0":"code","9cbad4e5":"code","d2328293":"code","c0627751":"code","a40dd51c":"code","2f7834d3":"code","52625796":"code","8d208413":"code","9337a361":"code","28719ee3":"code","8b68a3b0":"code","4db5610d":"code","fbf5e9a1":"code","ff5b1eb8":"code","cf05e52a":"code","687e4e6d":"code","cac89e09":"code","6ae592b7":"code","354bb9ea":"code","6239c6ed":"code","ba0b473f":"code","d6258d48":"code","a7c9e9d2":"code","4c4ab999":"code","6507b267":"code","203dfd67":"code","b902345b":"code","2817c630":"code","13a6c9bc":"code","c2fc0a19":"code","a655f3cf":"code","db2ac113":"code","e76e33a5":"code","91fa1302":"code","3dc651c7":"code","1381856c":"code","aa1f6bc8":"code","02ed17e7":"code","de93045a":"code","2a5b517e":"code","941c6f23":"code","117a083d":"code","9bb0c103":"code","20ea3074":"code","ca0f0299":"code","3baaf78f":"code","0034b56d":"code","c70e598a":"code","536c4a82":"code","3393721c":"code","7fe46891":"code","c17685ec":"code","0ed50710":"code","d0cbb64f":"code","af143e1c":"code","217c6fcf":"code","9e168125":"code","820565ed":"code","5b27a332":"code","79bcdd59":"code","dcd70591":"code","7e84aeab":"code","73425f9f":"code","8013ec15":"code","da988b93":"code","7d591895":"code","34ba2699":"code","55786849":"code","997be7b1":"code","46a1dd6b":"code","a60a0c27":"code","82ab5154":"code","18ed1f1d":"code","b75b3834":"code","5c716269":"code","765aedba":"code","d4459cd8":"code","08d83e1b":"code","aea12619":"code","d6e9349b":"code","f4f726fc":"code","f324861d":"code","0036773d":"code","a5a150c5":"code","7176d821":"code","406febb7":"code","c272587f":"code","33278776":"code","f6261f49":"code","c267786d":"code","7528419c":"code","fede4d05":"code","3b1c5bcf":"code","c609b4c5":"code","5e67e669":"code","feb7b75d":"code","f87e0f10":"code","579238c9":"code","9c25f241":"code","28b49975":"code","3ea24df5":"code","b3b106aa":"code","07e9709d":"code","c862c0b5":"code","8d09950e":"code","7add5019":"code","20d51112":"code","87e45581":"code","cd36e23f":"code","4ba22052":"code","5c9666b9":"code","6660542a":"code","3f8ed2d5":"code","167468ea":"code","ce1400a6":"code","e3b791c1":"code","98eff2ae":"code","8257e0a5":"code","0f9aa295":"code","98c33831":"code","7815455b":"code","04b91b6e":"code","b6529591":"markdown","03edbb16":"markdown","3b56c7b9":"markdown","e4bb290d":"markdown","7ab8e3c6":"markdown","fb9d7585":"markdown","0b74ce03":"markdown","15939cb8":"markdown","4e4c0b58":"markdown","70e1e57b":"markdown","33ad9a80":"markdown","fdad46e8":"markdown","869e2f8a":"markdown","4c8eff43":"markdown","c20f086a":"markdown","f3835821":"markdown","dcc08d54":"markdown","bbd5b661":"markdown","90349079":"markdown","27f4c36b":"markdown","c9008fd1":"markdown","81790dc7":"markdown","ec73c0f7":"markdown","492f6d72":"markdown","1834c66a":"markdown","2759d743":"markdown","459b16f1":"markdown","815d6f9a":"markdown","0173fed8":"markdown","efafb24a":"markdown","df1ff8e6":"markdown","cc16cb2a":"markdown","676c6106":"markdown","6a8a52a2":"markdown","6e3d493f":"markdown","962cd5aa":"markdown","ba432abe":"markdown","3bf827b3":"markdown","391829b6":"markdown","276f8945":"markdown","afef89b6":"markdown","0bf1718e":"markdown","a5a95fc0":"markdown","ccfd9539":"markdown"},"source":{"622b5e88":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport sys\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import KFold\nfrom tqdm.notebook import tqdm\nfrom catboost import CatBoostRegressor\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.linear_model import LinearRegression\nimport time\nimport os\n\nfrom pandas import Series\nimport re\n\nimport pandas_profiling\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.base import clone\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.model_selection import KFold\nfrom sklearn.feature_selection import f_classif, mutual_info_classif\nfrom sklearn.preprocessing import LabelEncoder, OneHotEncoder, StandardScaler\n\nfrom tqdm import tqdm\nfrom datetime import timedelta, datetime, date","4d4407f8":"print('Python       :', sys.version.split('\\n')[0])\nprint('Numpy        :', np.__version__)","94e718ca":"# \u0437\u0430\u0444\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u043c \u0432\u0435\u0440\u0441\u0438\u044e \u043f\u0430\u043a\u0435\u0442\u043e\u0432, \u0447\u0442\u043e\u0431\u044b \u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u044b \u0431\u044b\u043b\u0438 \u0432\u043e\u0441\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u043c\u044b:\n!pip freeze > requirements.txt","3919e7b3":"# \u0432\u0441\u0435\u0433\u0434\u0430 \u0444\u0438\u043a\u0441\u0438\u0440\u0443\u0439\u0442\u0435 RANDOM_SEED, \u0447\u0442\u043e\u0431\u044b \u0432\u0430\u0448\u0438 \u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u044b \u0431\u044b\u043b\u0438 \u0432\u043e\u0441\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u043c\u044b!\nRANDOM_SEED = 42","87ce90f6":"def mape(y_true, y_pred):\n    return np.mean(np.abs((y_pred-y_true)\/y_true))","ae9d21d0":"VERSION    = 16\nDIR_TRAIN  = '..\/input\/parsing-all-moscow-auto-ru-09-09-2020\/' # \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u043b \u043a \u043d\u043e\u0443\u0442\u0431\u0443\u043a\u0443 \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\nDIR_TEST   = '..\/input\/sf-dst-car-price-prediction\/'\nVAL_SIZE   = 0.20   # 20%","6f2594ed":"!ls '..\/input'","fd20e2fd":"train = pd.read_csv(DIR_TRAIN+'all_auto_ru_09_09_2020.csv') # \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0438\ntest = pd.read_csv(DIR_TEST+'test.csv')\nsample_submission = pd.read_csv(DIR_TEST+'sample_submission.csv')","98ef3ccd":"train.head(5)","85863d83":"train.info()","d1dc2ba5":"test.head(5)","a16db547":"test.info()","cf281a5d":"# \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0431\u0449\u0438\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u0430 \u0438 \u0442\u0440\u0435\u0439\u043d\u0430:\ncolumns = ['sell_id','bodyType', 'brand', 'color', 'fuelType', 'modelDate',\n           'name', 'numberOfDoors', 'productionDate', 'vehicleConfiguration',\n           'engineDisplacement', 'enginePower', 'description', 'mileage',\n           '\u041f\u0440\u0438\u0432\u043e\u0434', '\u0420\u0443\u043b\u044c', '\u0412\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u044b', '\u041f\u0422\u0421', '\u0422\u0430\u043c\u043e\u0436\u043d\u044f','\u0412\u043b\u0430\u0434\u0435\u043d\u0438\u0435', 'price']","62e27f64":"test['price']=0","5ebd99eb":"train['sell_id'] = np.nan","858a0ef0":"df_train = train[columns]\ndf_test = test[columns]","d78bb35d":"# \u0412\u0410\u0416\u041d\u041e! \u0434\u0440\u044f \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c \u0442\u0440\u0435\u0439\u043d \u0438 \u0442\u0435\u0441\u0442 \u0432 \u043e\u0434\u0438\u043d \u0434\u0430\u0442\u0430\u0441\u0435\u0442\ndf_train['sample'] = 1 # \u043f\u043e\u043c\u0435\u0447\u0430\u0435\u043c \u0433\u0434\u0435 \u0443 \u043d\u0430\u0441 \u0442\u0440\u0435\u0439\u043d\ndf_test['sample'] = 0 # \u043f\u043e\u043c\u0435\u0447\u0430\u0435\u043c \u0433\u0434\u0435 \u0443 \u043d\u0430\u0441 \u0442\u0435\u0441\u0442\n\ndata = df_test.append(df_train, sort=False).reset_index(drop=True) # \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c","149acf6a":"data","6bf3319e":"data.info()","1f9d6091":"#\u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\ndata.rename(columns={'productionDate': 'production_date',\n                     'vehicleConfiguration': 'vehicle_configuration',\n                     '\u0412\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u044b': 'owners_qty',\n                     '\u0412\u043b\u0430\u0434\u0435\u043d\u0438\u0435': 'ownership_time',\n                     '\u041f\u0422\u0421': 'licence',\n                     '\u041f\u0440\u0438\u0432\u043e\u0434': 'type_of_drive',\n                     '\u0420\u0443\u043b\u044c': 'steering_wheel',\n                     '\u0422\u0430\u043c\u043e\u0436\u043d\u044f': 'customs', \n                     'Price': 'price',\n                     'bodyType': 'body_type', \n                     'engineDisplacement': 'engine_volume',\n                     'enginePower': 'engine_power',\n                     'fuelType': 'fuel_type',\n                     'modelDate': 'model_date',\n                     'numberOfDoors': 'number_of_doors',}, inplace=True)","8c4a103f":"#\u0443\u0434\u0430\u043b\u0438\u043c \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u044b \u0438\u0437 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0430\ndata = data.drop_duplicates()","0d0dee0a":"# \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\nnum_cols = []\n\n# \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\nbin_cols = []\n\n# \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\ncat_cols = []","1e9ed3f5":"data['body_type'].unique()","161ed11e":"#\u043f\u0435\u0440\u0435\u0434\u0435\u043b\u0430\u0435\u043c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f\ndata['body_type'] = data['body_type'].astype(str).apply(lambda x: None if x.strip()=='' else x)\ndata['body_type'] = data['body_type'].apply(lambda x: x.split(' ')[0].lower())","b83fc0a8":"data['body_type'].unique()","eb6cfa9f":"data['body_type'].value_counts().plot.barh()","9d7b31f0":"data[data['body_type'] == 'nan']","9cbad4e5":"data['body_type'] = data['body_type'].fillna('\u0441\u0435\u0434\u0430\u043d')","d2328293":"data['body_type'].isnull().sum()","c0627751":"cat_cols.append('body_type')","a40dd51c":"data['brand'].unique() ","2f7834d3":"data['brand'].value_counts().plot.barh()","52625796":"data['brand'].isnull().sum()","8d208413":"cat_cols.append('brand')","9337a361":"data['color'].value_counts().plot.barh()","28719ee3":"#\u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\ncolor_dict = {'040001':'black', \n              'FAFBFB':'white',\n              'CACECB':'silver',\n              '97948F':'grey',\n              '\u0447\u0451\u0440\u043d\u044b\u0439':'black',\n              '0000CC':'blue',\n              '\u0431\u0435\u043b\u044b\u0439':'white',\n              '200204':'brown',\n              'EE1D19':'red',\n              '\u0441\u0435\u0440\u0435\u0431\u0440\u0438\u0441\u0442\u044b\u0439':'silver',\n              '\u0441\u0435\u0440\u044b\u0439':'grey',\n              '\u0441\u0438\u043d\u0438\u0439':'blue',\n              '007F00':'green',\n              'C49648':'beige',\n              '\u043a\u0440\u0430\u0441\u043d\u044b\u0439':'red', \n              '\u043a\u043e\u0440\u0438\u0447\u043d\u0435\u0432\u044b\u0439':'brown',\n              '22A0F8':'light_blue',\n              '\u0437\u0435\u043b\u0451\u043d\u044b\u0439':'green',\n              '660099':'purple',\n              'DEA522':'gold',\n              '4A2197':'violet',\n              '\u0431\u0435\u0436\u0435\u0432\u044b\u0439':'beige',\n              'FFD600':'yellow',\n              '\u0433\u043e\u043b\u0443\u0431\u043e\u0439':'light_blue',\n              'FF8649':'orange',\n              '\u0437\u043e\u043b\u043e\u0442\u0438\u0441\u0442\u044b\u0439':'gold',\n              '\u043f\u0443\u0440\u043f\u0443\u0440\u043d\u044b\u0439':'purple',\n              '\u0444\u0438\u043e\u043b\u0435\u0442\u043e\u0432\u044b\u0439':'violet',\n              '\u0436\u0451\u043b\u0442\u044b\u0439':'yellow',\n              '\u043e\u0440\u0430\u043d\u0436\u0435\u0432\u044b\u0439':'orange',\n              'FFC0CB':'pink',\n              '\u0440\u043e\u0437\u043e\u0432\u044b\u0439':'pink'\n             }","8b68a3b0":"data['color'] = data['color'].map(color_dict)","4db5610d":"cat_cols.append('color')","fbf5e9a1":"data['fuel_type'].unique()","ff5b1eb8":"data['fuel_type'].value_counts().plot.barh()","cf05e52a":"cat_cols.append('fuel_type')","687e4e6d":"data['model_date'].unique()","cac89e09":"data['model_date'].mean()","6ae592b7":"data['model_date']=data['model_date'].fillna('2008')","354bb9ea":"data['model_date'].isnull().sum()","6239c6ed":"data['production_date'].isnull().sum()","ba0b473f":"#\u0432\u0432\u0435\u0434\u0435\u043c \u043d\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0432\u043e\u0437\u0440\u0430\u0441\u0442 \u043c\u043e\u0434\u0435\u043b\u0438 \u0438 \u0432\u043e\u0437\u0440\u0430\u0441\u0442 \u043c\u0430\u0448\u0438\u043d\u044b\ndata['model_date'] = data['model_date'].astype('int')\n\ndata['model_d'] = 2020 - data['model_date'] \ndata['production_d'] = 2020 - data['production_date'] ","d6258d48":"num_cols.append('model_date')","a7c9e9d2":"num_cols.append('production_date')","4c4ab999":"num_cols.append('model_d')","6507b267":"num_cols.append('production_d')","203dfd67":"data['name'].unique()","b902345b":"#\u0438\u0437 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 \u0432\u044b\u0431\u0435\u0440\u0435\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0438\u043f \u0442\u0440\u0430\u043d\u0441\u043c\u0438\u0441\u0441\u0438\u0438, \u0442. \u043a. \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c\ndata['name'] = data['name'].astype(str)\ndata['transmis'] = data['name'].str.extract('([A][T]|[M][T]|[A][M][T]|[C][V][T])',\n                                                expand=False).str.strip()","2817c630":"sns.countplot(x = data['transmis'], data = data)","13a6c9bc":"data['transmis'].isnull().sum()","c2fc0a19":"data['transmis']=data['transmis'].fillna('AT')","a655f3cf":"cat_cols.append('transmis')","db2ac113":"data = data.drop('name', 1)","e76e33a5":"data['number_of_doors'].unique()","91fa1302":"data['number_of_doors'].mean()","3dc651c7":"data['number_of_doors']=data['number_of_doors'].fillna('5')\n","1381856c":"sns.countplot(x = data['number_of_doors'], data = data)","aa1f6bc8":"num_cols.append('number_of_doors')","02ed17e7":"data['vehicle_configuration'].unique()","de93045a":"data['vehicle_configuration'] = data['vehicle_configuration'].astype(\n                str).apply(lambda x: x if len(x) == 1 else x.split())","2a5b517e":"data['vehicle_configuration'] = data['vehicle_configuration'].apply(\n    lambda x: x[0].lower() if len(x) == 1 else x[1].lower())","941c6f23":"data['vehicle_configuration'].value_counts().plot.barh()","117a083d":"cat_cols.append('vehicle_configuration')","9bb0c103":"data['engine_volume']","20ea3074":"data['engine_volume'] = data['engine_volume'].astype(str)","ca0f0299":"data['engine_volume'] = data['engine_volume'].str.extract('(\\d.\\d)',expand=False).str.strip()","3baaf78f":"data['engine_volume']=data['engine_volume'].astype(float)","0034b56d":"data['engine_volume'].mean()","c70e598a":"data['engine_volume']=data['engine_volume'].fillna(40.5)","536c4a82":"num_cols.append('engine_volume')","3393721c":"data['engine_power']","7fe46891":"data['engine_power'] = data['engine_power'].astype(str).apply(lambda x: x.split()[0])\ndata['engine_power'] = data['engine_power'].astype(float)","c17685ec":"# \u0420\u0430\u0437\u043e\u0431\u044c\u0451\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u043d\u0430 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438\ndef engine_power(x):\n    if x < 100: x = 1\n    elif 99 < x < 150: x = 2\n    elif 149 < x < 200: x = 3\n    elif 199 < x < 250: x = 4\n    elif 249 < x < 300: x = 5\n    elif 299 < x < 350: x = 6\n    elif 349 < x < 400: x = 7\n    elif 399 < x < 450: x = 8\n    elif 449 < x < 500: x = 9\n    elif 499 < x < 550: x = 10\n    elif 549 < x < 600: x = 11\n    else: x = 12\n    return x  ","0ed50710":"data['engine_power'] = data['engine_power'].map(engine_power)","d0cbb64f":"plt.figure(figsize=(16,8))\nsns.countplot(x = data['engine_power'], data = data) ","af143e1c":"data['engine_power'].isnull().sum()","217c6fcf":"num_cols.append('engine_power')","9e168125":"data['description'].unique()","820565ed":"data = data.drop('description', 1)","5b27a332":"data['mileage'].unique()","79bcdd59":"data['mileage'].isna().sum()","dcd70591":"num_cols.append('mileage')","7e84aeab":"data['type_of_drive'].unique()","73425f9f":"data['type_of_drive'].value_counts()","8013ec15":"data['type_of_drive']=data['type_of_drive'].fillna('\u043f\u0435\u0440\u0435\u0434\u043d\u0438\u0439')","da988b93":"plt.figure(figsize=(8,8))\nsns.countplot(x = data['type_of_drive'], data = data) ","7d591895":"cat_cols.append('type_of_drive')","34ba2699":"data['steering_wheel'].unique()","55786849":"steering_wheel_dict = {'LEFT':'left', \n                       '\u041b\u0435\u0432\u044b\u0439':'left',\n                       'RIGHT':'right', \n                       '\u041f\u0440\u0430\u0432\u044b\u0439':'right',\n                        }\ndata['steering_wheel'] = data['steering_wheel'].map(steering_wheel_dict)","997be7b1":"plt.figure(figsize=(8,8))\nsns.countplot(x = data['steering_wheel'], data = data) ","46a1dd6b":"data['steering_wheel'].isnull().sum()","a60a0c27":"bin_cols.append('steering_wheel')","82ab5154":"data['owners_qty'].unique()","18ed1f1d":"data['owners_qty'] = data['owners_qty'].astype(\n                str).apply(lambda x: x if len(x) == 1 else x.split())","b75b3834":"data['owners_qty']= data['owners_qty'].apply(\n    lambda x: x[0].lower() if len(x) == 1 else x[0].lower())","5c716269":"data['owners_qty']=data['owners_qty'].astype(float)","765aedba":"data['owners_qty'].isnull().sum()","d4459cd8":"data['owners_qty'].mean()","08d83e1b":"data['owners_qty']=data['owners_qty'].fillna('2.0')","aea12619":"num_cols.append('owners_qty')","d6e9349b":"data['licence'].unique()","f4f726fc":"licence_dict={'\u041e\u0440\u0438\u0433\u0438\u043d\u0430\u043b': 'ORIGINAL',\n             '\u0414\u0443\u0431\u043b\u0438\u043a\u0430\u0442': 'DUPLICATE',\n             'ORIGINAL':'ORIGINAL',\n             'DUPLICATE':'DUPLICATE'}\ndata['licence'] = data['licence'].map(licence_dict)","f324861d":"data['licence'].value_counts()","0036773d":"data['licence']=data['licence'].fillna('ORIGINAL')","a5a150c5":"bin_cols.append('licence')","7176d821":"data['customs'].unique()","406febb7":"data = data.drop('customs', 1)","c272587f":"data['ownership_time'].unique()","33278776":"#\u043d\u0430\u0439\u0434\u0435\u043c \u043f\u0440\u043e\u0446\u0435\u043d\u0442 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432\n((data['ownership_time'].isna().sum()) \/ len(data)) * 100","f6261f49":"#\u0443\u0434\u0430\u043b\u0438\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u0442\u0430\u043a \u043a\u0430\u043a \u043c\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432\ndata = data.drop('ownership_time', 1)","c267786d":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u0435\u0441\u0442\u044c \u043b\u0438  \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u044b:\nlen(data) - len(data.drop_duplicates())","7528419c":"data = data.drop_duplicates()","fede4d05":"data.isna().sum()","3b1c5bcf":"print(bin_cols)\nprint(num_cols)\nprint(cat_cols)","c609b4c5":"data.info()","5e67e669":"data['number_of_doors']=data['number_of_doors'].astype(int)\ndata['owners_qty']=data['owners_qty'].astype(float)","feb7b75d":"for col in num_cols:\n    plt.figure()\n    plt.title(f\"\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 {col}\")\n    sns.distplot(data[col], kde=False)","f87e0f10":"# \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0438\u043c\u0435\u044e\u0442  \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u0435 \u0432\u043f\u0440\u0430\u0432\u043e, \u043c\u044b \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u0443\u0435\u043c, \u0434\u043b\u044f \u0442\u043e\u0433\u043e,\n# \u0447\u0442\u043e\u0431\u044b \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0431\u044b\u043b\u043e \u0431\u043e\u043b\u044c\u0448\u0435 \u043f\u043e\u0445\u043e\u0436\u0435 \u043d\u0430 \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e\u0435\nsfeat = ['model_date', 'production_date', 'model_d', 'production_d', 'number_of_doors', 'engine_volume', 'engine_power', 'mileage', 'owners_qty']\ndata[sfeat] = np.log(data[sfeat] + 1)\nfor col in sfeat:\n    plt.figure()\n    plt.title(f\"\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 {col}\")\n    sns.distplot(data[col], kde=False)","579238c9":"for i in num_cols:\n    plt.figure()\n    sns.boxplot(data[i][data[i] > 0].dropna())\n    plt.title(i)\n    plt.show()","9c25f241":"# \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043c\u0435\u0436\u0434\u0443 \u0441\u043e\u0431\u043e\u0439\nplt.figure(figsize=(8, 5))\nsns.heatmap(data[num_cols].corr().abs(), vmin=0, vmax=1,\n            annot=True, fmt=\".2f\", cmap=\"YlGnBu\")","28b49975":"#\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0437\u043d\u0430\u0447\u0438\u043c\u043e\u0441\u0442\u044c \u043d\u0430\u0448\u0438\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445:\nimp_cat = Series(mutual_info_classif(data[data['price'].isna() == False][num_cols], \n                                     data[data['price'].isna() == False]['price'],\n                                     discrete_features = True), index = num_cols)\nimp_cat.sort_values(inplace = True)\nimp_cat.plot(kind = 'barh')","3ea24df5":"# \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c \u0432\u0441\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0432 \u0447\u0438\u0441\u043b\u0430:\nlabel_encoder = LabelEncoder()\nfor i in cat_cols:\n    label_encoder.fit(data[i])\n    data[i] = label_encoder.transform(data[i])","b3b106aa":"imp_cat = Series(mutual_info_classif(data[data['price'].isna() == False][cat_cols], \n                                     data[data['price'].isna() == False]['price'],\n                                     discrete_features = True), index = cat_cols)\nimp_cat.sort_values(inplace = True)\nimp_cat.plot(kind = 'barh')","07e9709d":"#\u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\nlabel_encoder = LabelEncoder()\n\nfor column in bin_cols:\n    data[column] = label_encoder.fit_transform(data[column])\n    \n# \u0443\u0431\u0435\u0434\u0438\u043c\u0441\u044f \u0432 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0438    \ndata.head()","c862c0b5":"data['price'].isnull().sum()","8d09950e":"data['price'].mean()","7add5019":"data['price']=data['price'].fillna(804916)","20d51112":"data.isnull().sum()","87e45581":"#\u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0430\u0446\u0438\u044f \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445\n#data[num_cols] = pd.DataFrame(StandardScaler().fit_transform(data[num_cols]), columns = data[num_cols].columns)","cd36e23f":"X = data.query('sample == 1').drop(['sample', 'price', 'sell_id'], axis=1)\nX_sub = data.query('sample == 0').drop(['sample', 'price'], axis=1)\ny = data.query('sample == 1')['price'].values","4ba22052":"data.isnull().sum()","5c9666b9":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=VAL_SIZE, shuffle=True, random_state=RANDOM_SEED)","6660542a":"model = CatBoostRegressor(iterations = 5000,\n                          random_seed = RANDOM_SEED,\n                          eval_metric='MAPE',\n                          custom_metric=['R2', 'MAE'],\n                          silent=True,\n                         )\nmodel.fit(X_train, y_train,\n         #cat_features=cat_features_ids,\n         eval_set=(X_test, y_test),\n         verbose_eval=0,\n         use_best_model=True,\n         #plot=True\n         )\n\nmodel.save_model('catboost_single_model_baseline.model')","3f8ed2d5":"# \u043e\u0446\u0435\u043d\u0438\u0432\u0430\u0435\u043c \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c\npredict = model.predict(X_test)\nprint(f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: {(mape(y_test, predict))*100:0.2f}%\")","167468ea":"np.log(y_train)","ce1400a6":"model = CatBoostRegressor(iterations = 5000,\n                          random_seed = RANDOM_SEED,\n                          eval_metric='MAPE',\n                          custom_metric=['R2', 'MAE'],\n                          silent=True,\n                         )\nmodel.fit(X_train, np.log(y_train),\n         #cat_features=cat_features_ids,\n         eval_set=(X_test, np.log(y_test)),\n         verbose_eval=0,\n         use_best_model=True,\n         #plot=True\n         )\n\nmodel.save_model('catboost_single_model_2_baseline.model')","e3b791c1":"predict_test = np.exp(model.predict(X_test))\npredict_submission = np.exp(model.predict(X_sub))","98eff2ae":"print(f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: {(mape(y_test, predict_test))*100:0.2f}%\")","8257e0a5":"lin_reg = LinearRegression().fit(X_train, y_train)\ny_pred = lin_reg.predict(X_test)\n","0f9aa295":"print(f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: {(mape(y_test, y_pred))*100:0.2f}%\")","98c33831":"model.fit(X, np.log(y))","7815455b":"predict_submission = np.round(np.exp(model.predict(X_sub)),-3).astype('int')\npredict_submission ","04b91b6e":"sample_submission['price'] = predict_submission\nsample_submission.to_csv(f'submission_2_v{VERSION}.csv', index=False)\nsample_submission.head(10)","b6529591":"# **\u0410\u043d\u0430\u043b\u0438\u0437 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432**","03edbb16":"# # Model 2 : LinearRegression","3b56c7b9":"\u0411\u043e\u043b\u044c\u0448\u0435 \u0432\u0441\u0435\u0433\u043e \u043c\u0430\u0448\u0438\u043d \u0441 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043a\u043e\u0440\u043e\u0431\u043a\u043e\u0439 \u043f\u0435\u0440\u0435\u0434\u0430\u0447","e4bb290d":"# **type_of_drive**","7ab8e3c6":"# **engine_volume**","fb9d7585":"# **number_of_doors**","0b74ce03":"* number_of_doors - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u0432\u0435\u0440\u0435\u0439,\n* production_date - \u0434\u0430\u0442\u0430 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0441\u0442\u0432\u0430 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f,\n* vehicle_configuration - \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u043d\u043e\u0433\u043e \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430 (\u0422\u0421),\n* owners_qty - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432,\n* ownership_time - \u043f\u0435\u0440\u0438\u043e\u0434 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u0422\u0421,\n* licence - \u043f\u0430\u0441\u043f\u043e\u0440\u0442 \u0422\u0421,\n* type_of_drive - \u0442\u0438\u043f \u043f\u0440\u0438\u0432\u043e\u0434\u0430,\n* steering_wheel - \u0441\u0442\u043e\u0440\u043e\u043d\u0430 \u0440\u0443\u043b\u044f,\n* customs - \u044d\u0442\u0430\u043f \u0440\u0430\u0441\u0442\u0430\u043c\u043e\u0436\u043a\u0438,\n* price - \u0446\u0435\u043d\u0430 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f, \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440,\n* sample - \u0438\u043d\u0434\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u043d\u043e\u0441\u0442\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u043a \u0442\u0435\u0441\u0442\u0443 (0) \u0438 \u0442\u0440\u0435\u0439\u043d\u0443 (1),\n* body_type - \u0442\u0438\u043f \u043a\u0443\u0437\u043e\u0432\u0430,\n* brand - \u043c\u0430\u0440\u043a\u0430 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f,\n* color - \u0446\u0432\u0435\u0442 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f,\n* description - \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0432 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0438,\n* engine_displacement - \u043e\u0431\u044a\u0451\u043c \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f,\n* engine_power - \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u044c \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f,\n* fuel_type - \u0442\u0438\u043f \u0442\u043e\u043f\u043b\u0438\u0432\u0430,\n* mileage - \u043f\u0440\u043e\u0431\u0435\u0433,\n* model_date - \u0434\u0430\u0442\u0430 \u0440\u0435\u043b\u0438\u0437\u0430 \u043c\u043e\u0434\u0435\u043b\u0438,","15939cb8":"\u041d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0435\u0435 \u043a\u043e-\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0438\u043c\u0435\u0435\u0442 \u043f\u0435\u0440\u0435\u0434\u043d\u0438\u0439 \u043f\u0440\u0438\u0432\u043e\u0434","4e4c0b58":"\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u044b\u0439 \u0447\u0435\u043a \u043b\u0438\u0441\u0442: https:\/\/docs.google.com\/spreadsheets\/d\/1I_ErM3U0Cs7Rs1obyZbIEGtVn-H47pHNCi4xdDgUmXY\/edit?usp=sharing","70e1e57b":"## Fit","33ad9a80":"# What's next?\n\u0418\u043b\u0438 \u0447\u0442\u043e \u0435\u0449\u0435 \u043c\u043e\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c, \u0447\u0442\u043e\u0431 \u0443\u043b\u0443\u0447\u0448\u0438\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442:\n\n* \u0421\u043f\u0430\u0440\u0441\u0438\u0442\u044c \u0441\u0432\u0435\u0436\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \n* \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c, \u0447\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0438\u0437\u0432\u043b\u0435\u0447\u044c \u0438\u0437 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0438\u043b\u0438 \u043a\u0430\u043a \u0435\u0449\u0435 \u043c\u043e\u0436\u043d\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\n* \u0421\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\n* \u041f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u0434\u043e\u0431\u0440\u0430\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043c\u043e\u0434\u0435\u043b\u0438\n* \u041f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u0434\u0440\u0443\u0433\u0438\u0435 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u044b \u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 ML\n* \u0421\u0434\u0435\u043b\u0430\u0442\u044c \u0410\u043d\u0441\u0430\u043c\u0431\u043b\u044c \u043c\u043e\u0434\u0435\u043b\u0435\u0439, Blending, Stacking","fdad46e8":"# **vehicle_configuration**","869e2f8a":"# **licence**","4c8eff43":"\u0425\u043e\u0440\u043e\u0448\u0438\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0434\u0430\u043b\u0430 \u043c\u043e\u0434\u0435\u043b\u044c 1","c20f086a":"\u041d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043d\u0430 \u0431\u0435\u043d\u0437\u0438\u043d\u0435, \u043d\u0430\u0438\u043c\u0435\u043d\u0435\u0435 \u0443\u043d\u0438\u0432\u0435\u0440\u0441\u0430\u043b\u044c\u043d\u044b\u0435","f3835821":"\u0423 \u043d\u0430\u0441 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c 20 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432. \u0418\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 6 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435, 15 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435.","dcc08d54":"\u0417\u0430\u0434\u0430\u0447\u0430: \u0441\u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0434\u0430\u043d\u043d\u044b\u0435 ","bbd5b661":"# **model_date,production_date**","90349079":"## Data Preprocessing","27f4c36b":"# **name**","c9008fd1":"# **customs**","81790dc7":"# **bodyType**","ec73c0f7":"# Setup","492f6d72":"# Submission","1834c66a":"# **ownership_time**","2759d743":"\u0421\u0430\u043c\u044b\u0439 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0435 \u0446\u0432\u0435\u0442\u0430 \u0441\u0440\u0435\u0434\u0438 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439 - \u0447\u0451\u0440\u043d\u044b\u0439 \u0438 \u0431\u0435\u043b\u044b\u0439","459b16f1":"# **description **","815d6f9a":"# **steering_wheel**","0173fed8":"\u041d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0435 \u0431\u0440\u0435\u043d\u0434\u044b-\u043c\u0435\u0440\u0441\u0435\u0434\u0435\u0441, \u0411\u041c\u0412","efafb24a":"\u041d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439 \u0438\u043c\u0435\u0435\u0442 5 \u0434\u0432\u0435\u0440\u0435\u0439","df1ff8e6":"**\u041f\u0420\u041e\u0413\u041d\u041e\u0417 \u0421\u0422\u041e\u0418\u041c\u041e\u0421\u0422\u0418 \u0410\u0412\u0422\u041e\u041c\u041e\u0411\u0418\u041b\u0415\u0419**","cc16cb2a":"# **owners_qty**","676c6106":"\u0421\u0430\u043c\u044b\u0439 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0439 \u043a\u0443\u0437\u043e\u0432 \u0441\u0435\u0434\u0430\u043d, \u043d\u0430 \u0432\u0442\u043e\u0440\u043e\u043c \u043c\u0435\u0441\u0442\u0435 \u0432\u043d\u0435\u0434\u043e\u0440\u043e\u0436\u043d\u0438\u043a","6a8a52a2":"## Train Split","6e3d493f":"# **mileage**","962cd5aa":"## Label Encoding","ba432abe":"\u041d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043b\u0435\u0432\u043e\u0440\u0443\u043b\u044c\u043d\u044b\u0435","3bf827b3":"### Log Traget\n\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0432\u0437\u044f\u0442\u044c \u0442\u0430\u0440\u0433\u0435\u0442 \u0432 \u043b\u043e\u0433\u043e\u0440\u0438\u0444\u043c - \u044d\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u0438\u0442 \u0443\u043c\u0435\u043d\u044c\u0448\u0438\u0442\u044c \u0432\u043b\u0438\u044f\u043d\u0438\u0435 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u043d\u0430 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 (\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e np.log \u0438 np.exp).    \n\u0412 \u043f\u0440\u0438\u043d\u0446\u0438\u0435\u043f\u0435 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043b\u044e\u0431\u043e\u0435 \u043f\u0440\u0438\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u0430 \u0446\u0435\u043b\u0435\u0432\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043d\u0430 \u043a\u0443\u0440\u0441 \u0434\u043e\u043b\u043b\u0430\u0440\u0430, \u0435\u0432\u0440\u043e \u0438\u043b\u0438 \u0433\u0440\u0435\u0447\u043a\u0438 :) \u0432 \u0434\u0430\u0442\u0443 \u0441\u0431\u043e\u0440\u0430 \u0434\u0430\u043d\u043d\u044b\u0445, \u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0434\u0430\u0442\u0443 \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430 \u0432 \u0442\u0435\u0441\u0442\u0435 \u0432 **parsing_unixtime**","391829b6":"# # Model 1 : CatBoost\n![](https:\/\/pbs.twimg.com\/media\/DP-jUCyXcAArRTo.png:large)   \n\n\n\u0423 \u043d\u0430\u0441 \u0432 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0432\u0441\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435. \u0421\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0442\u0430\u043a\u0438\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0431\u044b\u043b\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0430 \u043e\u0447\u0435\u043d\u044c \u0443\u0434\u043e\u0431\u043d\u0430\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 CatBoost \u043e\u0442 \u042f\u043d\u0434\u0435\u043a\u0441\u0430. [https:\/\/catboost.ai](http:\/\/)     \n\u041d\u0430 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 **CatBoost \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0434\u043d\u043e\u0439 \u0438\u0437 \u043b\u0443\u0447\u0448\u0438\u0445 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a \u0434\u043b\u044f \u0442\u0430\u0431\u043b\u0438\u0447\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445!**\n\n#### \u041f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u0432\u0438\u0434\u0435\u043e \u043e CatBoost (\u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u043e\u043c):\n* [\u0414\u043e\u043a\u043b\u0430\u0434 \u043f\u0440\u043e CatBoost](https:\/\/youtu.be\/9ZrfErvm97M)\n* [\u0421\u0432\u0435\u0436\u0438\u0439 \u0422\u0443\u0442\u043e\u0440\u0438\u0430\u043b \u043e\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u044b CatBoost (\u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0447\u0430\u0441\u0442\u044c)](https:\/\/youtu.be\/wQt4kgAOgV0) ","276f8945":"# **engine_power**","afef89b6":"# Data","0bf1718e":"# **color**","a5a95fc0":"# **fuelType**","ccfd9539":"# **brand**"}}