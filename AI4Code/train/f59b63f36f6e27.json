{"cell_type":{"4ba28734":"code","807afc50":"code","ccde4875":"code","71edd6a5":"code","438ab334":"code","255ec657":"code","76bb21c9":"code","05e2bbee":"code","b9e3eebb":"code","8d404ff1":"code","80be9443":"code","da3eef45":"code","e06a3eca":"code","5a9468b7":"code","d48d1627":"code","4a6f351e":"code","8f3b8d09":"code","ccd63ca4":"code","192c4164":"code","381c1a0e":"code","8194ca7a":"code","a69a5a79":"code","7ee15c7c":"code","f837ec40":"code","76b56b23":"code","e04f27ee":"code","4729d986":"code","c68638cb":"code","6d51aaff":"markdown","9bb9f0cb":"markdown","106fd4a8":"markdown","08a146cc":"markdown","9f036b0e":"markdown","9120cf9e":"markdown","e82c284d":"markdown","d321e80f":"markdown","314a23db":"markdown","0b513cc5":"markdown","fc97e6f1":"markdown","7d005529":"markdown","7b9e3521":"markdown","8ab797ad":"markdown","289d340a":"markdown","76acd715":"markdown","7653ea34":"markdown","e455a32c":"markdown","92408cc1":"markdown","75fe0ad8":"markdown","6fb7deb5":"markdown","959a4086":"markdown","c79e3197":"markdown","2fd8665b":"markdown","d3fde46d":"markdown","498553ee":"markdown","5bc02160":"markdown","f80e90e4":"markdown","31199d6b":"markdown","1532ecfb":"markdown","c8925ca5":"markdown","31ca3f9a":"markdown","00227b21":"markdown","05827c5b":"markdown","63fdb3d0":"markdown","c87bdf08":"markdown","67f0ceeb":"markdown","849cec59":"markdown","ee47ebc7":"markdown","bae22d43":"markdown","cf3ced82":"markdown","b29d696a":"markdown","551cb30a":"markdown","b033776d":"markdown"},"source":{"4ba28734":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import accuracy_score","807afc50":"#reading csv file \ndf = pd.read_csv(\"..\/input\/graduate-admissions\/Admission_Predict_Ver1.1.csv\")","ccde4875":"df.head()","71edd6a5":"df.info()","438ab334":"#dropping 'Serial No.' column\ndf.drop(columns=['Serial No.'],axis=1,inplace=True)","255ec657":"df.head()","76bb21c9":"#checking null values\ndf.isnull().sum()","05e2bbee":"#checking statistical summary\ndf.describe()","b9e3eebb":"#histogram plot of df\ndf.hist(bins=20,figsize=(20,20))","8d404ff1":"#pairplot of dataframe df\nsns.pairplot(df)","80be9443":"#plotting annotated correlation matrix\nplt.figure(figsize=(10,10))\nsns.heatmap(df.corr(),annot=True)","da3eef45":"#creating dataframe with all feature except 'Chance of Admit'\n#thus we are going to drop 'Chance of Admit' column from df and save it in x\n\nx = df.drop(columns = ['Chance of Admit '])","e06a3eca":"x","5a9468b7":"#after that we are going to create a dataframe that has only 'Chance of Admit' column which will behave as output \n\ny = df['Chance of Admit ']","d48d1627":"y","4a6f351e":"#converting into numpy arrays\n\nx = np.array(x)\ny = np.array(y)","8f3b8d09":"x.shape","ccd63ca4":"y.shape","192c4164":"#reshaping y\n\ny = y.reshape(-1,1)","381c1a0e":"y.shape","8194ca7a":"#splitting data into 85% to training & 15% to testing\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.15)","a69a5a79":"#Model building\nmodel = LinearRegression()","7ee15c7c":"#Fitting the model\nmodel.fit(x_train, y_train)","f837ec40":"#intercept of linear model\nmodel.intercept_","76b56b23":"#coefficients of linear model\nmodel.coef_","e04f27ee":"#accuracy of our model\naccuracy = model.score(x_test, y_test)\naccuracy","4729d986":"#predicting output from x_test\ny_pred = model.predict(x_test)\ny_pred","c68638cb":"#comparing y_pred with y_test\ndf1 = pd.DataFrame({'Actual': y_test.flatten(), 'Predicted': y_pred.flatten()})\ndf1","6d51aaff":"## 4. Data Preparation","9bb9f0cb":"We have now successfully build & fit the linear regression model which will be going to predict the chances of admission to the university.\nsince the model is linear thus it has intercept and coefficients(slope) of independent variables and the equation looks similar to\n            \n                       y = b0 + b1.x1 + b2.x2 + b3.x3 + b4.x4 + b5.x5 + b6.x6 + b7.x7\n   \nwhere, b0 is the intercept\n       and b1, b2, b3, b4, b5, b6, b7 are the coefficients \n       \nas this is a multiple linear regression and our input has 7 features that's why we are getting 7 coefficients. No way above equation is a line but a hyperplane(in simple terms, plane in more than 3 dimensions).","106fd4a8":"# Linear Regression For Predicting University Admission Using Sklearn","08a146cc":"###### order(descending) of features that plays important role in predicting chance of admission :\n1. CGPA (0.88) \n2. GRE Score (0.81)\n3. TOEFL Score (0.79)\n4. University Rating (0.69)\n5. SOP (0.68)\n6. LOR (0.65)\n7. Research (0.55) ","9f036b0e":"no null values in any of the columns","9120cf9e":"##### Initial Observations:\n* dataset has 9 columns and 500 rows, in which none of them is null (we can also verify that by df.isnull().sum()\n* out of 9 columns, 7 columns are independent( 'GRE Score', 'TOEFL Score', 'University Rating', 'SOP', 'LOR', 'CGPA', 'Research' ) and 1 column is dependent( 'Chance of Admit' )\n* column 'Serial No.' doesn't seems to have any value as rows are already indexed from 0 to 499, so we are going to drop it further steps\n","e82c284d":"###### Observations from Histogram Plot :\n* only CGPA, Chance of Admit, GRE Score & TOEFL Score are continuous rest are discrete\n* majority of candidates have CGPA ranging from 7.8 to 9.2 & very few of them have CGPA less than 7\n* majority of candidates has chance of admission of greater than 65%\n* few candidates has GRE score greater than 330\n* most of them has letter of recommendation of rating more than 2\n* most of the candidates applyying for admission has already done some reasearch\n* as in LOR, same goes with statement of purpose that majority of them has rating greater than 2\n* in TOEFL score, majority has score of ranging from 98 to 113\n* university with rating 1 has least number of appliant while the university with rating 3 has highest number of applicant","d321e80f":"#### comparing predicted outcome from actual outcome","314a23db":"as pointed out earlier in initial observations, that columns ('GRE Score', 'TOEFL Score', 'University Rating', 'SOP', 'LOR', 'CGPA', 'Research') are independet variables i.e. these are the input parameters & the output or dependent variable is ('Chance of Admit')\nThus we are going to divide initial dataframe df into two dataframes:\n\n* x (independent variable)\n* y (dependent variable)","0b513cc5":"---","fc97e6f1":"#### dividing dataset into dependent and independent variables","7d005529":"#### Dropping Column :","7b9e3521":"## 6. Accuracy Of  Model","8ab797ad":"#### Converting x and y to numpy arrays","289d340a":"#### Splitting Data Into Testing & Training Dataset","76acd715":"## 5. Building Linear Regression Model","7653ea34":"## 1. Importing Libraries","e455a32c":"As mentioned above, column 'Serial No.' has no use of keeping it, thus we are going to drop it","92408cc1":"It is more than 80% (it may vary), which is kind of a deasent score for such simple model.","75fe0ad8":"---","6fb7deb5":"#### Plotting Histogram ","959a4086":"     value closer to 1 means that elements are positively correlated\n     value closer to 0 means that elements are negatively correlated    ","c79e3197":"#### Predicting output from x_test","2fd8665b":"---","d3fde46d":"Statistical Summary","498553ee":"## 3. Exploration & Visualisation Of Data ","5bc02160":"---","f80e90e4":"#### Checking Null Values ","31199d6b":"---","1532ecfb":"---","c8925ca5":"---","31ca3f9a":"First, we will build the model by the function LinearRegression() of sklearn's linear_model package & then fit the model based on the training dataset we just created","00227b21":"now that we have intercept and coefficients, we can simply plug in the values of x1,x2,...x7 and we have  our chances of admission.","05827c5b":"###### Observations from statistical summary :\n* GRE Score ranges from 290 to 340\n* TOEFL Score ranges from 92 to 120\n* CGPA ranges from 6.8 to 9.92\n* Chance of Admit ranges from 34% to 97%","63fdb3d0":"###### observations from pairplot :\n* with increase in GRE score, there is a high chance of getting admission\n* same goes with TOEFL score, that greater the TOEFL score, higher are the chances\n* university rating has a less impact\n* SOP, LOR & CGPA plays important role in getting admission and with increase in their values might give you a greater chance of admission","c87bdf08":"we are going to check the accuracy of our model we just build by passing the testing data, as the testing data is new to the model, so it can be a good understanding as to how well the model is going to tackle real-world data","67f0ceeb":"---","849cec59":"## 2. Loading Data ","ee47ebc7":"now that we have done all prepocessing to our data, we can finally split them by using train_test_split function of sklearn's model_selection .","bae22d43":"#### Plotting Pairplot","cf3ced82":"#### Plotting HeatMap","b29d696a":"###### About The Data:\n* GRE Score is out of 340\n* TOEFL Score is out of 120\n* University Rating is out of 5\n* Statement Of Purpose Rating is out of 5\n* Letter of Reccomendation Rating is out of 5\n* CGPA is out of 10\n* Research has only two values:- 1(done research) and 0(not done research)\n* Chance of Admit is ranges from 0.00 to 1.00 ","551cb30a":"To perform transformation and scaling, we first need to convert newly created dataframe into numpy arrays","b033776d":"## 7. Predicting"}}