{"cell_type":{"c845420a":"code","eaae958b":"code","10a81215":"code","fed4121a":"code","1932d3d6":"code","2aa0dede":"code","c438b3e8":"code","cd6835a7":"code","9aa29b91":"code","776604c8":"code","29b971ae":"code","e8ecf0af":"code","69358f8c":"code","b336ccd2":"code","360800e5":"code","1b58ece0":"code","9b7302e1":"code","8189e265":"code","ba5113a6":"code","757c6d12":"code","f62f2d67":"code","08f80515":"code","9d1f99c7":"code","5f508486":"code","27d65c15":"code","7fbc2f59":"code","57fc674f":"code","a29ec2b4":"code","623f4df9":"code","6a521025":"code","3da4d415":"code","b46ff94a":"code","66e31155":"code","0d0d54b6":"code","d4213784":"code","1111c3af":"code","0b0a0bfa":"code","378cb0ea":"code","9855eef7":"code","03afb26e":"code","1761a0f0":"code","c8771f71":"code","ec84e332":"code","c5befff9":"code","a8bf2fdc":"code","5f1dfab4":"markdown","5609a5da":"markdown","e4afb501":"markdown","2189b36b":"markdown","1ef1af74":"markdown","5b8447b0":"markdown","62c40d25":"markdown","ac5b8109":"markdown","f2c5af5b":"markdown","34dc8e24":"markdown","847c23ff":"markdown","fdea5a59":"markdown","84248b2a":"markdown","ca986a7f":"markdown","2ea13e43":"markdown","b1474783":"markdown","7763fd87":"markdown","f27b5594":"markdown","14ebd44c":"markdown","2581e93f":"markdown","ff5e4b3e":"markdown","320dd9c4":"markdown","07cf47ba":"markdown","cd5e8dc3":"markdown","d4e111e5":"markdown","547bae9f":"markdown","9c0924f3":"markdown","0a8a0c9d":"markdown","b826eaf9":"markdown","9b8a5df0":"markdown","89a35da6":"markdown","b47b8d7f":"markdown","0ead59b8":"markdown","4bda08b3":"markdown","66136a1f":"markdown"},"source":{"c845420a":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense,Dropout\nfrom tensorflow.keras.callbacks import EarlyStopping\nfrom sklearn.metrics import classification_report,confusion_matrix, accuracy_score","eaae958b":"df=pd.read_csv('..\/input\/breast-cancer-wisconsin-data\/data.csv')","10a81215":"df.head()","fed4121a":"df.drop(['id', 'Unnamed: 32'], axis=1, inplace=True)","1932d3d6":"df.columns","2aa0dede":"df.shape","c438b3e8":"df.info()","cd6835a7":"df.describe()","9aa29b91":"plt.figure(figsize=(8,5))\nsns.countplot(x='diagnosis',data=df, palette='PuBuGn')\nplt.title('Number of Different Types of Tumors', fontsize=15)\nplt.show()","776604c8":"diagnosis_type=pd.get_dummies(df['diagnosis'], drop_first=True)","29b971ae":"df=pd.concat([df,diagnosis_type], axis=1)","e8ecf0af":"df.drop(['diagnosis'], axis=1, inplace=True)","69358f8c":"df.columns=['radius_mean', 'texture_mean', 'perimeter_mean', 'area_mean',\n       'smoothness_mean', 'compactness_mean', 'concavity_mean',\n       'concave points_mean', 'symmetry_mean', 'fractal_dimension_mean',\n       'radius_se', 'texture_se', 'perimeter_se', 'area_se', 'smoothness_se',\n       'compactness_se', 'concavity_se', 'concave points_se', 'symmetry_se',\n       'fractal_dimension_se', 'radius_worst', 'texture_worst',\n       'perimeter_worst', 'area_worst', 'smoothness_worst',\n       'compactness_worst', 'concavity_worst', 'concave points_worst',\n       'symmetry_worst', 'fractal_dimension_worst', 'malignant_1_benign_0']","b336ccd2":"plt.figure(figsize=(8,6))\ndf.corr()['malignant_1_benign_0'].sort_values(ascending=False).plot(kind='line', color='c')\nplt.xticks(rotation=15)\nplt.xlabel('Features', fontsize=12)\nplt.ylabel('Correlation', fontsize=12)\nplt.title('Correlation of Features with Cancer Type', fontsize=15)\nplt.show()","360800e5":"plt.figure(figsize=(8,6))\ndf.corr()['malignant_1_benign_0'].sort_values(ascending=False).drop('malignant_1_benign_0').plot(kind='bar', color='g')\nplt.xlabel('Features', fontsize=12)\nplt.ylabel('Correlation', fontsize=12)\nplt.xticks(rotation=90)\nplt.title('Correlation with cancer type', fontsize=15)\nplt.show()","1b58ece0":"plt.figure(figsize=(20,20))\ncorr=df.corr()\nmask = np.zeros_like(corr)\nmask[np.triu_indices_from(mask)] = True\nwith sns.axes_style(\"white\"):\n    ax = sns.heatmap(corr, mask=mask,square=True, annot=True, cmap='winter')","9b7302e1":"X=df.drop(['malignant_1_benign_0'], axis=1).values\ny=df['malignant_1_benign_0'].values","8189e265":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)","ba5113a6":"mms=MinMaxScaler()","757c6d12":"mms.fit(X_train)","f62f2d67":"X_train=mms.transform(X_train)","08f80515":"X_test=mms.transform(X_test)","9d1f99c7":"model= Sequential()\n\nmodel.add(Dense(30,activation='relu'))\n          \nmodel.add(Dense(30,activation='relu'))\n\nmodel.add(Dense(1,activation='sigmoid'))\n\nmodel.compile(optimizer='adam',loss='binary_crossentropy')","5f508486":"model.fit(X_train,y_train,epochs=600, validation_data=(X_test,y_test),batch_size=128)","27d65c15":"first_loss_df=pd.DataFrame(model.history.history)","7fbc2f59":"first_loss_df","57fc674f":"first_loss_df.plot(figsize=(7,6), colormap='RdBu_r')\nplt.xlabel('Epoch', fontsize=12)\nplt.ylabel('Loss', fontsize=12)\nplt.title('Training Loss per Epoch\\nNo Early Stopping, No Droupout Layer', fontsize=15)\nplt.show()","a29ec2b4":"predictions=model.predict_classes(X_test)","623f4df9":"print(confusion_matrix(y_test,predictions))\nprint(\"\\n\")\nprint(classification_report(y_test,predictions))","6a521025":"model= Sequential()\n\nmodel.add(Dense(30,activation='relu'))\n          \nmodel.add(Dense(30,activation='relu'))\n\nmodel.add(Dense(1,activation='sigmoid'))\n\nmodel.compile(optimizer='adam',loss='binary_crossentropy')","3da4d415":"es=EarlyStopping(monitor='val_loss', mode='min',patience=25,verbose=1)","b46ff94a":"model.fit(X_train,y_train,epochs=600, validation_data=(X_test,y_test),batch_size=128, callbacks=[es])","66e31155":"second_loss_df=pd.DataFrame(model.history.history)","0d0d54b6":"second_loss_df","d4213784":"second_loss_df.plot(figsize=(7,6), colormap='RdBu_r')\nplt.xlabel('Epoch', fontsize=12)\nplt.ylabel('Loss', fontsize=12)\nplt.title('Training Loss per Epoch\\nEarly Stopping, No Droupout Layer', fontsize=15)\nplt.show()","1111c3af":"predictions=model.predict_classes(X_test)","0b0a0bfa":"print(confusion_matrix(y_test,predictions))\nprint(\"\\n\")\nprint(classification_report(y_test,predictions))","378cb0ea":"model= Sequential()\n\nmodel.add(Dense(30,activation='relu'))\nmodel.add(Dropout(0.5))\n          \nmodel.add(Dense(30,activation='relu'))\nmodel.add(Dropout(0.5))\n\nmodel.add(Dense(1,activation='sigmoid'))\n\nmodel.compile(optimizer='adam',loss='binary_crossentropy')","9855eef7":"es=EarlyStopping(monitor='val_loss', mode='min',patience=25,verbose=1)","03afb26e":"model.fit(X_train,y_train,epochs=600, validation_data=(X_test,y_test),batch_size=128, callbacks=[es])","1761a0f0":"third_loss_df=pd.DataFrame(model.history.history)","c8771f71":"third_loss_df","ec84e332":"third_loss_df.plot(figsize=(7,6), colormap='RdBu_r')\nplt.xlabel('Epoch', fontsize=12)\nplt.ylabel('Loss', fontsize=12)\nplt.title('Training Loss per Epoch\\n Early Stopping, Droupout Layers', fontsize=15)\nplt.show()","c5befff9":"predictions=model.predict_classes(X_test)","a8bf2fdc":"print(confusion_matrix(y_test,predictions))\nprint(\"\\n\")\nprint(classification_report(y_test,predictions))","5f1dfab4":"### Splitting the Data","5609a5da":"##### Training Loss per Epoch","e4afb501":"# ![7.jpg](attachment:7.jpg)","2189b36b":"<h1>Table of Contents<span class=\"tocSkip\"><\/span><\/h1>\n<div class=\"toc\"><ul class=\"toc-item\"><li><span><a href=\"#Introduction\" data-toc-modified-id=\"Introduction-1\"><span class=\"toc-item-num\">1&nbsp;&nbsp;<\/span>Introduction<\/a><\/span><\/li><li><span><a href=\"#1--Importing\" data-toc-modified-id=\"1--Importing-2\"><span class=\"toc-item-num\">2&nbsp;&nbsp;<\/span>1- Importing<\/a><\/span><\/li><li><span><a href=\"#2--Reading-the-data\" data-toc-modified-id=\"2--Reading-the-data-3\"><span class=\"toc-item-num\">3&nbsp;&nbsp;<\/span>2- Reading the data<\/a><\/span><\/li><li><span><a href=\"#3--EDA-and-Visualization\" data-toc-modified-id=\"3--EDA-and-Visualization-4\"><span class=\"toc-item-num\">4&nbsp;&nbsp;<\/span>3- EDA and Visualization<\/a><\/span><\/li><li><span><a href=\"#Predicting-the-Cancer-Types\" data-toc-modified-id=\"Predicting-the-Cancer-Types-5\"><span class=\"toc-item-num\">5&nbsp;&nbsp;<\/span>Predicting the Cancer Types<\/a><\/span><ul class=\"toc-item\"><li><span><a href=\"#Splitting-the-Data\" data-toc-modified-id=\"Splitting-the-Data-5.1\"><span class=\"toc-item-num\">5.1&nbsp;&nbsp;<\/span>Splitting the Data<\/a><\/span><\/li><li><span><a href=\"#Scaling\" data-toc-modified-id=\"Scaling-5.2\"><span class=\"toc-item-num\">5.2&nbsp;&nbsp;<\/span>Scaling<\/a><\/span><\/li><li><span><a href=\"#Model-with-No-Early-Stopping-and-No-Droupout-Layer\" data-toc-modified-id=\"Model-with-No-Early-Stopping-and-No-Droupout-Layer-5.3\"><span class=\"toc-item-num\">5.3&nbsp;&nbsp;<\/span>Model with No Early Stopping and No Droupout Layer<\/a><\/span><ul class=\"toc-item\"><li><span><a href=\"#Creating-the-Model\" data-toc-modified-id=\"Creating-the-Model-5.3.1\"><span class=\"toc-item-num\">5.3.1&nbsp;&nbsp;<\/span>Creating the Model<\/a><\/span><\/li><li><span><a href=\"#Training-the-model\" data-toc-modified-id=\"Training-the-model-5.3.2\"><span class=\"toc-item-num\">5.3.2&nbsp;&nbsp;<\/span>Training the model<\/a><\/span><\/li><li><span><a href=\"#Evaluation\" data-toc-modified-id=\"Evaluation-5.3.3\"><span class=\"toc-item-num\">5.3.3&nbsp;&nbsp;<\/span>Evaluation<\/a><\/span><ul class=\"toc-item\"><li><span><a href=\"#Training-Loss-per-Epoch\" data-toc-modified-id=\"Training-Loss-per-Epoch-5.3.3.1\"><span class=\"toc-item-num\">5.3.3.1&nbsp;&nbsp;<\/span>Training Loss per Epoch<\/a><\/span><\/li><li><span><a href=\"#Further-Evaluations\" data-toc-modified-id=\"Further-Evaluations-5.3.3.2\"><span class=\"toc-item-num\">5.3.3.2&nbsp;&nbsp;<\/span>Further Evaluations<\/a><\/span><\/li><\/ul><\/li><\/ul><\/li><li><span><a href=\"#Model-with-Early-Stopping-and-No-Droupout-Layer\" data-toc-modified-id=\"Model-with-Early-Stopping-and-No-Droupout-Layer-5.4\"><span class=\"toc-item-num\">5.4&nbsp;&nbsp;<\/span>Model with Early Stopping and No Droupout Layer<\/a><\/span><ul class=\"toc-item\"><li><span><a href=\"#Creating-the-Model\" data-toc-modified-id=\"Creating-the-Model-5.4.1\"><span class=\"toc-item-num\">5.4.1&nbsp;&nbsp;<\/span>Creating the Model<\/a><\/span><\/li><li><span><a href=\"#Training-the-model\" data-toc-modified-id=\"Training-the-model-5.4.2\"><span class=\"toc-item-num\">5.4.2&nbsp;&nbsp;<\/span>Training the model<\/a><\/span><\/li><li><span><a href=\"#Evaluation\" data-toc-modified-id=\"Evaluation-5.4.3\"><span class=\"toc-item-num\">5.4.3&nbsp;&nbsp;<\/span>Evaluation<\/a><\/span><ul class=\"toc-item\"><li><span><a href=\"#Training-Loss-per-Epoch\" data-toc-modified-id=\"Training-Loss-per-Epoch-5.4.3.1\"><span class=\"toc-item-num\">5.4.3.1&nbsp;&nbsp;<\/span>Training Loss per Epoch<\/a><\/span><\/li><li><span><a href=\"#Further-Evaluations\" data-toc-modified-id=\"Further-Evaluations-5.4.3.2\"><span class=\"toc-item-num\">5.4.3.2&nbsp;&nbsp;<\/span>Further Evaluations<\/a><\/span><\/li><\/ul><\/li><\/ul><\/li><li><span><a href=\"#Model-with-Early-Stopping-and-Droupout-Layer\" data-toc-modified-id=\"Model-with-Early-Stopping-and-Droupout-Layer-5.5\"><span class=\"toc-item-num\">5.5&nbsp;&nbsp;<\/span>Model with Early Stopping and Droupout Layer<\/a><\/span><ul class=\"toc-item\"><li><span><a href=\"#Creating-the-Model\" data-toc-modified-id=\"Creating-the-Model-5.5.1\"><span class=\"toc-item-num\">5.5.1&nbsp;&nbsp;<\/span>Creating the Model<\/a><\/span><\/li><li><span><a href=\"#Training-the-model\" data-toc-modified-id=\"Training-the-model-5.5.2\"><span class=\"toc-item-num\">5.5.2&nbsp;&nbsp;<\/span>Training the model<\/a><\/span><\/li><li><span><a href=\"#Evaluation\" data-toc-modified-id=\"Evaluation-5.5.3\"><span class=\"toc-item-num\">5.5.3&nbsp;&nbsp;<\/span>Evaluation<\/a><\/span><ul class=\"toc-item\"><li><span><a href=\"#Training-Loss-per-Epoch\" data-toc-modified-id=\"Training-Loss-per-Epoch-5.5.3.1\"><span class=\"toc-item-num\">5.5.3.1&nbsp;&nbsp;<\/span>Training Loss per Epoch<\/a><\/span><\/li><li><span><a href=\"#Further-Evaluations\" data-toc-modified-id=\"Further-Evaluations-5.5.3.2\"><span class=\"toc-item-num\">5.5.3.2&nbsp;&nbsp;<\/span>Further Evaluations<\/a><\/span><\/li><\/ul><\/li><\/ul><\/li><\/ul><\/li><li><span><a href=\"#Conclusion\" data-toc-modified-id=\"Conclusion-6\"><span class=\"toc-item-num\">6&nbsp;&nbsp;<\/span>Conclusion<\/a><\/span><\/li><\/ul><\/div>","1ef1af74":"## Importing","5b8447b0":"#### Training the model","62c40d25":"- In this notebook, we used the \"Breast Cancer Wisconsin (Diagnostic) DataSet\" to make predictions on the diagnosis of cancer types.\n\n- We developed neural networks that were capable of accurately predicting whether a tumor was benign or malignant\n\n- We implemented three diffenet deep learning classification models with and without early stopping and dropout layers. \n\n- While the acuuracy score obtained for the model with no early stopping and no dropout layer was 0.96, this parameter was 0.97 for the model with early stopping and no dropout layer. The highest accuracy score was 0.98 and it was obtained for the model with both early stopping and dropout layers.","ac5b8109":"##### Further Evaluations ","f2c5af5b":"### Scaling","34dc8e24":"We can see that benign tumor cases are more than malignent tumor cases in this dataset.","847c23ff":"#### Creating the Model","fdea5a59":"We will drop the label which is perfectly correlated at 1 in a barplot.","84248b2a":"##### Further Evaluations ","ca986a7f":"##### Training Loss per Epoch","2ea13e43":"## Conclusion","b1474783":"As there is no null value in the data, there is no need to data cleaning","7763fd87":"## EDA and Visualization","f27b5594":"#### Evaluation","14ebd44c":"In the next step, we choose too many epochs and we use try and error to avoid overfitting and determine the optimal model for prediction, in three trials.","2581e93f":"Breast cancer is a disease in which cells in the breast grow out of control. There are different kinds of breast cancer. The kind of breast cancer depends on which cells in the breast turn into cancer.\n\nHere we will use the \"Breast Cancer Wisconsin (Diagnostic) DataSet\". This dataset contains 569 patients with breast tumors. Several measurements and a diagnosis of malignant and benign are available for each patient. The measurements will be used as features to make our predictions on the diagnosis.\n\nThe purpose of this Kernel is to develop a neural network that is capable of accurately predicting whether a tumor is benign or malignant, given several measurements. For this purpose, first we will analyze this dataset and then and to try three diffenet deep learning classification models with and without early stopping and droupout layers and compare the obtained results. ","ff5e4b3e":"#### Training the model","320dd9c4":"## Reading the data","07cf47ba":"#### Evaluation","cd5e8dc3":"##### Training Loss per Epoch","d4e111e5":"### Model with Early Stopping and Droupout Layers","547bae9f":"### Model with Early Stopping and No Droupout Layer","9c0924f3":"### Model with No Early Stopping and No Droupout Layer","0a8a0c9d":"#### Creating the Model","b826eaf9":"#### Evaluation","9b8a5df0":"#### Training the model","89a35da6":"## Predicting the Cancer Types ","b47b8d7f":"#### Creating the Model","0ead59b8":"# <center> Breast Cancer Classification by Deep Learning with TensorFlow <center>","4bda08b3":"##### Further Evaluations","66136a1f":"## Introduction"}}