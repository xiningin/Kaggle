{"cell_type":{"8d08e5e7":"code","3ebf567b":"code","c64d2397":"code","700ce51b":"code","7b72e7b9":"code","08e71e9d":"code","d43c5e61":"code","57c84cb0":"code","b89179c0":"code","d8598fed":"code","00b9b893":"code","2a8d0507":"code","ced692b4":"code","b5303cac":"code","f7907ad6":"code","92285f59":"code","78cd85be":"code","3f3bdbd0":"code","51e38d18":"code","43832662":"code","8069b1dd":"code","19c63ea7":"markdown","c783cc46":"markdown","09364390":"markdown","c4f74841":"markdown","46f963ad":"markdown"},"source":{"8d08e5e7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3ebf567b":"import numpy as np \nimport pandas as pd\nimport seaborn as sns\n\n\nsns.set()","c64d2397":"import matplotlib.pyplot as plt\nfrom sklearn.preprocessing import StandardScaler\nimport scipy.cluster.hierarchy as sch\nfrom sklearn.cluster import AgglomerativeClustering\nfrom sklearn.cluster import KMeans\nfrom yellowbrick.cluster import KElbowVisualizer","700ce51b":"df = pd.read_csv('..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')\ndf","7b72e7b9":"df.info()","08e71e9d":"df = pd.get_dummies(df, columns=['Gender'], drop_first=True)","d43c5e61":"df.drop('CustomerID', axis=1, inplace =True)\ndf","57c84cb0":"df.describe()","b89179c0":"df['Gender_Male'].value_counts()","d8598fed":"scaler = StandardScaler()\nx_scaler = scaler.fit_transform(df)","00b9b893":"\nkmeans = KMeans(random_state=40)\nvisu = KElbowVisualizer(kmeans, k = (2,10))\nvisu.fit(x_scaler)\nvisu.poof()","2a8d0507":"model = AgglomerativeClustering(n_clusters=5)\nmodel = model.fit_predict(x_scaler) \nmodel","ced692b4":"df['Clusters'] = model\ndf","b5303cac":"df.groupby('Clusters').describe().transpose()","f7907ad6":"sns.catplot(data=df, x=\"Clusters\", y=\"Spending Score (1-100)\", hue=\"Gender_Male\", kind=\"swarm\")","92285f59":"sns.catplot(data=df, x=\"Annual Income (k$)\", y=\"Spending Score (1-100)\", hue=\"Clusters\", height=10)\n","78cd85be":"df.groupby('Clusters').describe().transpose()[0]","3f3bdbd0":"df.groupby('Clusters').describe().transpose()[1]","51e38d18":"df.groupby('Clusters').describe().transpose()[2]","43832662":"df.groupby('Clusters').describe().transpose()[3]","8069b1dd":"df.groupby('Clusters').describe().transpose()[4]","19c63ea7":"## Cluster 0\n### Age :Young\n### Income :Middle class\n### Expenses :big expenses\n### Gender :Men & Women","c783cc46":"## Cluster 4\n### Age :Old\n### Income :Middle class\n### Expenses :Middle expenses\n### Gender :Men only","09364390":"## Cluster 3\n### Age :Old\n### Income :Middle class\n### Expenses :Middle expenses\n### Gender :Women only","c4f74841":"## Cluster 2\n### Age :Young\n### Income :High class\n### Expenses :small expenses\n### Gender :Men & Women","46f963ad":"## Cluster 1\n### Age :Young\n### Income :High class\n### Expenses :big expenses\n### Gender :Men & Women"}}