{"cell_type":{"4134c962":"code","db77f65a":"code","68ca5195":"code","65d4d931":"code","a19a71d1":"code","9cddb7e7":"code","b14f9f4b":"code","823fca86":"code","4b712a7d":"code","1a51eb64":"code","51ed235c":"code","e1a95497":"code","927c18b9":"code","e3295bea":"code","85fa5cc1":"markdown"},"source":{"4134c962":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\n# An\u00e1lise Explorat\u00f3ria de Dados -> Neste notebook usaremos uma pesquisa recente nos EUA sobre o mercado de trabalho para programadores de software. \n# Nosso objetivo \u00e9 fazer uma investiga\u00e7\u00e3o inicial dos dados a fim de detectar problemas com os dados, necessidade de mais vari\u00e1veis, falhas na organiza\u00e7\u00e3o e transforma\u00e7\u00e3o.\n# Pesquisa Salarial realizada pelo site https:\/\/www.freecodecamp.com\/ com programadores de software nos EUA que frequentaram treinamentos Bootcamp\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","db77f65a":"#print console para testar\n# Importando os pacotes e o dataset\n\n%matplotlib inline\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport colorsys\nplt.style.use('seaborn-talk')\n\n#df = pd.read_csv(\"Dados-Pesquisa-2016.csv\", sep = ',', low_memory=False)","68ca5195":"# reading the dataset\n\ndata = pd.read_csv('..\/input\/Dados-Pesquisa-2016.csv', sep = ',', low_memory=False)\n\n# check the shape of the data\ndata.shape","65d4d931":"# Exibindo as 05 Primeiras Linhas do dataset\nprint(data.head())","a19a71d1":"# Exibindo as Estat\u00edsticas Descritivas do Dataset - > Pesquisa Salarial -> \nprint(data.describe())","9cddb7e7":"# Distribui\u00e7\u00e3o de Idade (Visualiza\u00e7\u00e3o por um Histograma)\n# A maioria dos profissionais que trabalham como programadores de \n# software est\u00e3o na faixa de idade entre 20 e 30 anos, sendo 25 anos \n# a idade mais frequente.\n\n# Gerando um histograma\ndata.Age.hist(bins = 60)\nplt.xlabel(\"Idade\")\nplt.ylabel(\"N\u00famero de Profissionais\")\nplt.title(\"Distribui\u00e7\u00e3o de Idade\")\nplt.show()","b14f9f4b":"# Distribui\u00e7\u00e3o por Sexo - Gr\u00e1fico de Pizza.\n# A grande maioria dos programadores s\u00e3o do sexo masculino\n\n# Definindo a quantidade\nlabels = data.Gender.value_counts().index\nnum = len(data.EmploymentField.value_counts().index)\n\n# Criando a lista de cores\nlistaHSV = [(x*1.0\/num, 0.5, 0.5) for x in range(num)]\nlistaRGB = list(map(lambda x: colorsys.hsv_to_rgb(*x), listaHSV))\n\n# Gr\u00e1fico de Pizza\nfatias, texto = plt.pie(data.Gender.value_counts(), colors = listaRGB, \n                        startangle = 90)\nplt.axes().set_aspect('equal', 'datalim')\nplt.legend(fatias, labels, bbox_to_anchor = (1.05,1))\nplt.title(\"Sexo\")\nplt.show()","823fca86":"# Distribui\u00e7\u00e3o de Pessoas por Interesse\n# O principal interesse profissional dos programadores \u00e9 o desenvolvimento \n# web (Full-Stack, Front-End e Back-End, seguido pela \u00e1rea de Data Science.\n\n# Definindo a quantidade\nnum = len(data.JobRoleInterest.value_counts().index)\n\n# Criando a lista de cores\nlistaHSV = [(x*1.0\/num, 0.5, 0.5) for x in range(num)]\nlistaRGB = list(map(lambda x: colorsys.hsv_to_rgb(*x), listaHSV))\nlabels = data.JobRoleInterest.value_counts().index\ncolors = ['OliveDrab', 'Orange', 'OrangeRed', 'DarkCyan', 'Salmon', \n          'Sienna', 'Maroon', 'LightSlateGrey', 'DimGray']\n\n# Gr\u00e1fico de Pizza\nfatias, texto = plt.pie(data.JobRoleInterest.value_counts(), \n                        colors = listaRGB, startangle = 90)\nplt.axes().set_aspect('equal', 'datalim')\nplt.legend(fatias, labels, bbox_to_anchor = (1.25, 1))\nplt.title(\"Interesse Profissional\")\nplt.show()","4b712a7d":"# A maioria dos programadores trabalha na \u00e1rea de desenvolvimento de \n# softwares e TI, mas outras \u00e1reas como finan\u00e7as e sa\u00fade tamb\u00e9m s\u00e3o \n# significativas.\n\n# Definindo a quantidade\nnum = len(data.EmploymentField.value_counts().index)\n\n# Criando a lista de cores\nlistaHSV = [(x*1.0\/num, 0.5, 0.5) for x in range(num)]\nlistaRGB = list(map(lambda x: colorsys.hsv_to_rgb(*x), listaHSV))\nlabels = data.EmploymentField.value_counts().index\n\n# Gr\u00e1fico de Pizza\nfatias, texto = plt.pie(data.EmploymentField.value_counts(), \n                        colors = listaRGB, startangle = 90)\nplt.axes().set_aspect('equal', 'datalim')\nplt.legend(fatias, labels, bbox_to_anchor = (1.3, 1))\nplt.title(\"\u00c1rea de trabalho Atual\")\nplt.show()","1a51eb64":"# Prefer\u00eancias de trabalho por idade\n# Perceba que \u00e0 medida que a idade aumenta, o interesse por trabalho \n# freelance tamb\u00e9m aumenta, sendo o modelo preferido por profissionais \n# acima de 60 anos. Profissionais mais jovens preferem trabalhar em \n# Startups ou no seu pr\u00f3prio neg\u00f3cio. Profissionais entre 20 e 50 anos \n# preferem trabalhar em empresas de tamanho m\u00e9dio.\n\n# Agrupando os dados\ndf_ageranges = data.copy()\nbins=[0, 20, 30, 40, 50, 60, 100]\ndf_ageranges['AgeRanges'] = pd.cut(df_ageranges['Age'], bins, \n                                   labels=[\"< 20\", \"20-30\", \"30-40\", \n                                           \"40-50\", \"50-60\", \"< 60\"]) \ndf2 = pd.crosstab(df_ageranges.AgeRanges, \n                  df_ageranges.JobPref).apply(lambda r: r\/r.sum(), axis=1)\n\n# Definindo a quantidade\nnum = len(df_ageranges.AgeRanges.value_counts().index)\n\n# Criando a lista de cores\nlistaHSV = [(x*1.0\/num, 0.5, 0.5) for x in range(num)]\nlistaRGB = list(map(lambda x: colorsys.hsv_to_rgb(*x), listaHSV))\n\n# Gr\u00e1fico de Barras (Stacked)\nax1 = df2.plot(kind = \"bar\", stacked = True, \n               color = listaRGB, title = \"Prefer\u00eancia de Trabalho por Idade\")\nlines, labels = ax1.get_legend_handles_labels()\nax1.legend(lines, labels, bbox_to_anchor = (1.51, 1))","51ed235c":"# Visualizando o help\nhelp(pd.crosstab)","e1a95497":"# Realoca\u00e7\u00e3o por idade\n# A vontade de buscar um novo emprego diminui com a idade. Quase 80% das \n# pessoas abaixo dos 30 anos est\u00e3o preparadas para isso.\n\n# Agrupando os dados\ndf3 = pd.crosstab(df_ageranges.AgeRanges, \n                  df_ageranges.JobRelocateYesNo).apply(lambda r: r\/r.sum(), \n                                                       axis = 1)\n\n# Definindo a quantidade\nnum = len(df_ageranges.AgeRanges.value_counts().index)\n\n# Criando a lista de cores\nlistaHSV = [(x*1.0\/num, 0.5, 0.5) for x in range(num)]\nlistaRGB = list(map(lambda x: colorsys.hsv_to_rgb(*x), listaHSV))\n\n# Gr\u00e1fico de Barras (Stacked)\nax1 = df3.plot(kind = \"bar\", stacked = True, \n               color = listaRGB, title = \"Realoca\u00e7\u00e3o por Idade\")\nlines, labels = ax1.get_legend_handles_labels()\nax1.legend(lines,[\"No\", \"Yes\"], loc = 'best')","927c18b9":"# idade x Horas de aprendizagem\n# A idade dos profissionais n\u00e3o afeta a quantidade de tempo gasto com \n# capacita\u00e7\u00e3o e treinamento.\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Criando subset dos dados\ndf9 = data.copy()\ndf9 = df9.dropna(subset=[\"HoursLearning\"])\ndf9 = df9[data['Age'].isin(range(0,70))]\n\n# Definindo os valores de x e y\nx = df9.Age\ny = df9.HoursLearning\n\n# Computando os valores e gerando o gr\u00e1fico\nm, b = np.polyfit(x, y, 1)\nplt.plot(x, y, '.')\nplt.plot(x, m*x + b, '-', color = \"red\")\nplt.xlabel(\"Idade\")\nplt.ylabel(\"Horas de Treinamento\")\nplt.title(\"Idade por Horas de Treinamento\")\nplt.show()","e3295bea":"# Investimentos em Capacita\u00e7\u00e3o x Ganhos Salarias..\n# Os profissionais que investem tempo e dinheiro em capacita\u00e7\u00e3o e \n# treinamento, em geral, conseguem sal\u00e1rios mais altos, embora alguns \n# profisisonais esperem altos sal\u00e1rios, investindo 0 em treinamento.\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Criando subset dos dados\ndf5 = data.copy()\ndf5 = df5.dropna(subset=[\"ExpectedEarning\"])\ndf5 = df5[data['MoneyForLearning'].isin(range(0,60000))]\n\n# Definindo os valores de x e y\nx = df5.MoneyForLearning\ny = df5.ExpectedEarning\n\n# Computando os valores e gerando o gr\u00e1fico\nm, b = np.polyfit(x, y, 1)\nplt.plot(x, y, '.')\nplt.plot(x, m*x + b, '-', color = \"red\")\nplt.xlabel(\"Investimento em Treinamento\")\nplt.ylabel(\"Expectativa Salarial\")\nplt.title(\"Investimento em Treinamento vs Expectativa Salarial\")\nplt.show()","85fa5cc1":"**Distribui\u00e7\u00e3o por Empregabilidade**"}}