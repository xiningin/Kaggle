{"cell_type":{"72f8e177":"code","74f9e28b":"code","36bab5cc":"code","282e9182":"code","282f43e9":"code","98a06570":"code","5bb2c53f":"code","b1e34ce1":"code","de685d1b":"code","20422161":"code","3f7706ec":"code","a87d3b1d":"markdown","f0a14502":"markdown","9675b4fd":"markdown","274cdf82":"markdown","aab08a6e":"markdown"},"source":{"72f8e177":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os \nimport matplotlib.pyplot as plt\nimport matplotlib.image as img\nimport random\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","74f9e28b":"train_csv=pd.read_csv('..\/input\/petfinder-pawpularity-score\/train.csv')\ntrain_image='..\/input\/petfinder-pawpularity-score\/train'","36bab5cc":"train_csv.head(1)","282e9182":"\ntrain_csv.info()\ntrain_csv.describe()","282f43e9":"#no null values lets display some sample images\nimg_name=os.listdir(train_image)\nrandom_images=random.choices(img_name,k=11)\n\nfig=plt.figure(figsize=(60,60))\nfig.suptitle('10 random images',fontsize=73)\nfor i in range(1,11):\n    image=img.imread(os.path.join(train_image,random_images[i]))\n    fi=fig.add_subplot(5,2,i)\n    fi.set_title(random_images[i],fontsize=50)\n    plt.imshow(image)  \n    \nplt.show()    \n    ","98a06570":"top_images=train_csv.sort_values(by='Pawpularity',ascending=False)\nworst_images=train_csv.sort_values(by='Pawpularity',ascending=False)\ntop_images=top_images['Id'][:10]\n\nfig=plt.figure(figsize=(60,60))\nfig.suptitle('Top 10 pawpularity score',fontsize=73)\nfor i in range(0,10):\n    image=img.imread(os.path.join(train_image,list(top_images)[i]+'.jpg'))\n    fi=fig.add_subplot(5,2,i+1)\n    fi.set_title(list(top_images)[i],fontsize=50)\n    plt.imshow(image)  \n    \nplt.show()    ","5bb2c53f":"worst_images=train_csv.sort_values(by='Pawpularity',ascending=True)\nworst_images=worst_images['Id'][:10]\nfig=plt.figure(figsize=(60,60))\nfig.suptitle('Last 10 pawpularity score',fontsize=73)\nfor i in range(0,10):\n    image=img.imread(os.path.join(train_image,list(worst_images)[i]+'.jpg'))\n    fi=fig.add_subplot(5,2,i+1)\n    fi.set_title(list(worst_images)[i],fontsize=50)\n    plt.imshow(image)  \n    \nplt.show()    ","b1e34ce1":"#plt.hist(train_csv['Pawpularity'],histtype='bar',color='' )\nfig=plt.figure()\nfig.suptitle('Data distribution of Pawpularity')\nplt.axvline(train_csv['Pawpularity'].mean(),color='orange')\nsns.histplot(x=train_csv['Pawpularity'],kde=True)\n","de685d1b":"images_80=train_csv[train_csv['Pawpularity']>80]\nimages_80","20422161":"images_80=train_csv[train_csv['Pawpularity']>80]\nimages_80\nfor col in images_80.columns:\n        if col not in ['Id','Pawpularity']:\n               print(images_80[col].value_counts())\n               dicts=dict(images_80[col].value_counts())\n               print(dicts.keys())\n               plt.pie(list(dicts.values()),labels=list(dicts.keys()))\n               plt.show()\n                \n                ","3f7706ec":"images_80=train_csv[train_csv['Pawpularity']<20]\nimages_80\nfor col in images_80.columns:\n        if col not in ['Id','Pawpularity']:\n               print(images_80[col].value_counts())\n               dicts=dict(images_80[col].value_counts())\n               print(dicts.keys())\n               plt.pie(list(dicts.values()),labels=list(dicts.keys()))\n               plt.show()\n                \n                ","a87d3b1d":"#### **Making count plots for each of the columns**","f0a14502":"### **Basic info about the training dataset**","9675b4fd":"### **Lets do some EDA**","274cdf82":"#### **We can show top highest pawpolarity images and least pawpolarity images**","aab08a6e":"####    **Lets analyze images with more than 80 pawpolarity score and find what makes them different**"}}