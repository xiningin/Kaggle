{"cell_type":{"5d549d3c":"code","b0b7ebd5":"code","ab1a87c0":"code","991a0aea":"code","eb1c8f6c":"code","cb363238":"code","6eabf69f":"code","651c160c":"code","11a5d4dc":"code","92e8ad9e":"code","81be956d":"code","a351ebbc":"code","0e2e4c49":"code","272caa5c":"code","84376711":"code","068b350c":"code","34492588":"code","721333a8":"code","511e4cba":"code","85167a3c":"code","9f9aac57":"code","4dcbbc6e":"code","4985e366":"code","5cd0c436":"code","9fe4d0b4":"code","817b3ac9":"code","8defe8c4":"code","7c9ca574":"code","9fcb62cf":"code","15ecef63":"code","0994feca":"code","a0154d1f":"code","5e63470c":"code","b4859108":"code","ce099280":"code","f990a8ec":"code","b21c7eac":"code","6d56d404":"code","cd566b4f":"code","f6d41d9e":"code","84aafbdb":"code","7d2a1231":"code","3d1de5dc":"code","5251db54":"code","a0312e0e":"code","b329d942":"code","22b411cc":"code","f4682807":"code","2b941315":"code","5467e4e8":"code","f79b6bc8":"code","bd34e5be":"code","52e20de1":"code","5ea45ee1":"code","7e392dbf":"code","806f5fa3":"code","8e32fa30":"code","ef23deb9":"code","55a4cf3f":"code","f2007238":"code","e5d8b1ca":"code","55d23ea2":"code","04d4b1e5":"code","df1808ba":"code","136fe30d":"code","49ba1ae4":"code","231905f3":"code","6268d88c":"code","702782cf":"code","1af6a4c1":"code","9d656938":"code","573bccc1":"code","d73bcc61":"code","ab7776aa":"code","bea1a35e":"code","d892f76d":"code","b1e60fd2":"code","04a3682d":"code","18ec4a1d":"code","ad7bd072":"code","2ef0b84f":"code","96063cce":"code","314cd09a":"code","fb0d785a":"code","6c5fbe9f":"code","14ba7f27":"code","6e9941fc":"code","ae86c146":"code","357e2584":"code","c9dd3630":"code","e81a1dd9":"code","87656934":"code","cbb27d30":"code","65cd0bcc":"code","2b6ccf6f":"code","0d8e2e7c":"code","e2f84dbe":"code","17ca0e96":"code","8a3bcbb8":"code","b31eee1c":"code","3af3a92b":"code","d645a802":"code","f614c6d9":"code","e10eb17e":"code","4a263b6c":"code","27791ce3":"code","f359ae53":"code","630521cf":"code","cbe1eb6e":"code","7cacb065":"code","fc6dbe1e":"code","0558bae7":"code","def92a66":"code","a583a035":"code","033623f2":"code","13696f8e":"code","aaad72cb":"code","c7405ebe":"code","2bc8036f":"code","eea753b8":"code","4dff3ba7":"code","5925ff75":"code","7238c966":"code","1974cc71":"code","d9bdb494":"code","4ceaafb0":"code","5b1b69ad":"code","3d3b8a90":"code","c5583d6b":"code","7b6dab24":"code","69a43d13":"code","a715cc8d":"code","f3dc4e48":"code","2db8c0ca":"code","1e336d12":"code","dfcaa542":"code","25ff81bc":"code","e8532caf":"code","2b2dcf17":"code","dddee623":"code","736336bb":"code","7d6d268d":"code","e57b73ef":"code","fea2d032":"code","ffea86aa":"code","f0e31580":"code","8ef60bbf":"code","d361a853":"code","d51a26a6":"code","bcf3df9c":"code","7fdec186":"code","bcda392b":"code","6cf663c7":"code","7b144881":"code","e6f1cb8b":"code","8900527c":"code","fee98f75":"code","44556b66":"code","1f445a32":"code","00b3ec56":"code","8afc139e":"code","5ec74888":"code","e0941b4f":"code","e32e0a58":"code","852fe8da":"code","81848266":"code","0408c75c":"code","9adaae7c":"code","3d87c179":"code","23bcc392":"code","e05644c4":"code","15406995":"code","c45e7829":"code","ef9dfdb6":"code","f8963800":"code","85a97737":"code","f4b9fc48":"code","63a3af34":"code","f05c9683":"code","e7002c62":"code","da3aae1d":"code","2a557e0e":"code","c432882c":"code","4c3b4e0b":"code","bf0dade0":"code","4b1896b8":"code","99979fe1":"code","29da5a9e":"code","5532f20d":"code","bf49a3f4":"code","d21b7fbd":"code","e84844e7":"code","c114f637":"code","fd24f72c":"code","7f6f0d09":"code","7a65f588":"code","47609777":"code","74668e4d":"code","91acd524":"code","8597d776":"code","9c5eb89d":"code","7f0e7557":"code","9b5bc1b9":"code","725ed104":"code","99ec2292":"markdown","57b2e7c7":"markdown","db353ecc":"markdown","ebaf96c3":"markdown","687d1910":"markdown","950d14b2":"markdown","bc0d3923":"markdown","c620fa54":"markdown","aa48385d":"markdown","375561af":"markdown","16df82a4":"markdown","0ef6d111":"markdown","c88e49e0":"markdown","3d137467":"markdown","0a4b6292":"markdown","92fd59f2":"markdown","8ae69871":"markdown","08a5aec9":"markdown","b8cc98bb":"markdown","bb825daf":"markdown","2e4c7ed4":"markdown","23dda664":"markdown","dc2eb87a":"markdown","a3fda72e":"markdown"},"source":{"5d549d3c":"## \u7b2c\u4e8c\u90e8\u5206\uff1a \u5404\u79cd\u6570\u91cf\u5173\u7cfb","b0b7ebd5":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nplt.rcParams['font.sans-serif']=['kaiTi']##\u4e2d\u6587\u4e71\u7801\nplt.rcParams['axes.unicode_minus']=False ##\u5750\u6807\u8d1f\u53f7\nimport seaborn as sns\nimport plotly.express as px\nimport warnings # \nwarnings.filterwarnings(\"ignore\")","ab1a87c0":"df=pd.read_csv(r\"..\/input\/full-data\/full.csv\",encoding=\"gb18030\")\n# df[\"\u7ed3\u7b97\u65e5\u671f\"]=pd.to_datetime(df[\"\u7ed3\u7b97\u65e5\u671f\"])\n# df.set_index([\"\u7ed3\u7b97\u65e5\u671f\"],inplace=True)\n# df.head()","991a0aea":"df.describe()","eb1c8f6c":"# df.info\ndf.info()","cb363238":"df.dtypes","6eabf69f":"sex_charges=df[[\"\u6027\u522b\",\"\u603b\u8d39\u7528\"]].groupby([\"\u6027\u522b\"], as_index = True).mean().sort_values(by = \"\u603b\u8d39\u7528\",ascending = False).style.background_gradient(\"Greens\")\nsex_charges","651c160c":"sex_charges=df[[\"\u6027\u522b\",\"\u7edf\u7b79\u8d39\u7528\"]].groupby([\"\u6027\u522b\"], as_index =True).mean().sort_values(by = \"\u7edf\u7b79\u8d39\u7528\",ascending = False).style.background_gradient(\"Greens\")\nsex_charges","11a5d4dc":"sex_charges=df[[\"\u6027\u522b\",\"\u7edf\u7b79\u8d39\u7528\"]].groupby([\"\u6027\u522b\"], as_index = False).mean().sort_values(by = \"\u7edf\u7b79\u8d39\u7528\",ascending = False).style.background_gradient(\"Greens\")\nsex_charges","92e8ad9e":"sex_charges=df[[\"\u6027\u522b\",\"\u4f4f\u9662\u65f6\u95f4\"]].groupby([\"\u6027\u522b\"], as_index = True).mean().sort_values(by = \"\u4f4f\u9662\u65f6\u95f4\",ascending = False).style.background_gradient(\"Greens\")\nsex_charges","81be956d":"df[[\"\u6027\u522b\",\"\u5730\u533a\u7f16\u7801\"]].groupby([\"\u6027\u522b\"], as_index = True).mean().sort_values(by = \"\u5730\u533a\u7f16\u7801\",ascending = False).style.background_gradient(\"Greens\")","a351ebbc":"df[[\"\u6027\u522b\",\"\u8bc6\u522bID\"]].groupby([\"\u6027\u522b\"], as_index = True).mean().sort_values(by = \"\u8bc6\u522bID\",ascending = False).style.background_gradient(\"Greens\")","0e2e4c49":"age_z=df[[\"\u5e74\u9f84\",\"\u603b\u8d39\u7528\"]].groupby([\"\u5e74\u9f84\"], as_index = False).mean().sort_values(by = \"\u603b\u8d39\u7528\",ascending = False).style.background_gradient(\"Greens\")","272caa5c":"# age_z\ntop_z = df.groupby(by = '\u5e74\u9f84')['\u603b\u8d39\u7528'].mean().sort_values(ascending = False).head(20).reset_index()\ntop_z","84376711":"df[[\"\u5e74\u9f84\",\"\u7edf\u7b79\u8d39\u7528\"]].groupby([\"\u5e74\u9f84\"], as_index = True).mean().sort_values(by = \"\u7edf\u7b79\u8d39\u7528\",ascending = False).style.background_gradient(\"Greens\")","068b350c":"df[[\"\u5e74\u9f84\",\"\u81ea\u8d39\u8d39\u7528\"]].groupby([\"\u5e74\u9f84\"], as_index = True).mean().sort_values(by = \"\u81ea\u8d39\u8d39\u7528\",ascending = False).style.background_gradient(\"Greens\")","34492588":"df[[\"\u5e74\u9f84\",\"\u4f4f\u9662\u65f6\u95f4\"]].groupby([\"\u5e74\u9f84\"], as_index = True).mean().sort_values(by = \"\u4f4f\u9662\u65f6\u95f4\",ascending = False).style.background_gradient(\"Greens\")","721333a8":"df[[\"\u5e74\u9f84\",\"\u8857\u9053\"]].groupby([\"\u8857\u9053\"], as_index = True).mean().sort_values(by = \"\u5e74\u9f84\",ascending = False).style.background_gradient(\"Greens\")","511e4cba":"df[[\"\u5e74\u9f84\",\"\u673a\u6784\u7b49\u7ea7\"]].groupby([\"\u673a\u6784\u7b49\u7ea7\"], as_index = True).mean().sort_values(by = \"\u5e74\u9f84\",ascending = False).style.background_gradient(\"Greens\")","85167a3c":"df[[\"\u5e74\u9f84\",\"\u533b\u7597\u7c7b\u522b\"]].groupby([\"\u533b\u7597\u7c7b\u522b\"], as_index = True).mean().sort_values(by = \"\u5e74\u9f84\",ascending = False).style.background_gradient(\"Greens\")","9f9aac57":"df[[\"\u5e74\u9f84\",\"\u4eba\u5458\u7c7b\u522b\"]].groupby([\"\u4eba\u5458\u7c7b\u522b\"], as_index = True).mean().sort_values(by = \"\u5e74\u9f84\",ascending = False).style.background_gradient(\"Greens\")","4dcbbc6e":"df[[\"\u4eba\u5458\u7c7b\u522b\",\"\u603b\u8d39\u7528\"]].groupby([\"\u4eba\u5458\u7c7b\u522b\"], as_index = True).mean().sort_values(by = \"\u603b\u8d39\u7528\",ascending = False).style.background_gradient(\"Greens\")","4985e366":"df[[\"\u4eba\u5458\u7c7b\u522b\",\"\u7edf\u7b79\u8d39\u7528\"]].groupby([\"\u4eba\u5458\u7c7b\u522b\"], as_index = True).mean().sort_values(by = \"\u7edf\u7b79\u8d39\u7528\",ascending = False).style.background_gradient(\"Greens\")","5cd0c436":"df[[\"\u4eba\u5458\u7c7b\u522b\",\"\u81ea\u8d39\u8d39\u7528\"]].groupby([\"\u4eba\u5458\u7c7b\u522b\"], as_index = True).mean().sort_values(by = \"\u81ea\u8d39\u8d39\u7528\",ascending = False).style.background_gradient(\"Greens\")","9fe4d0b4":"df[[\"\u4eba\u5458\u7c7b\u522b\",\"\u4f4f\u9662\u65f6\u95f4\"]].groupby([\"\u4eba\u5458\u7c7b\u522b\"], as_index = True).mean().sort_values(by = \"\u4f4f\u9662\u65f6\u95f4\",ascending = False).style.background_gradient(\"Greens\")","817b3ac9":"df[[\"\u533b\u7597\u7c7b\u522b\",\"\u603b\u8d39\u7528\"]].groupby([\"\u533b\u7597\u7c7b\u522b\"], as_index = True).mean().sort_values(by = \"\u603b\u8d39\u7528\",ascending = False).style.background_gradient(\"Greens\")","8defe8c4":"df[[\"\u533b\u7597\u7c7b\u522b\",\"\u7edf\u7b79\u8d39\u7528\"]].groupby([\"\u533b\u7597\u7c7b\u522b\"], as_index = True).mean().sort_values(by = \"\u7edf\u7b79\u8d39\u7528\",ascending = False).style.background_gradient(\"Greens\")","7c9ca574":"df[[\"\u533b\u7597\u7c7b\u522b\",\"\u81ea\u8d39\u8d39\u7528\"]].groupby([\"\u533b\u7597\u7c7b\u522b\"], as_index = True).mean().sort_values(by = \"\u81ea\u8d39\u8d39\u7528\",ascending = False).style.background_gradient(\"Greens\")","9fcb62cf":"df[[\"\u533b\u7597\u7c7b\u522b\",\"\u4f4f\u9662\u65f6\u95f4\"]].groupby([\"\u533b\u7597\u7c7b\u522b\"], as_index = True).mean().sort_values(by = \"\u4f4f\u9662\u65f6\u95f4\",ascending = False).style.background_gradient(\"Greens\")","15ecef63":"df[[\"\u8bca\u65ad\u540d\u79f0\",\"\u603b\u8d39\u7528\"]].groupby([\"\u8bca\u65ad\u540d\u79f0\"], as_index = True).mean().sort_values(by = \"\u603b\u8d39\u7528\",ascending = False).style.background_gradient(\"Greens\")","0994feca":"df[[\"\u8bca\u65ad\u540d\u79f0\",\"\u7edf\u7b79\u8d39\u7528\"]].groupby([\"\u8bca\u65ad\u540d\u79f0\"], as_index = True).mean().sort_values(by = \"\u7edf\u7b79\u8d39\u7528\",ascending = False).style.background_gradient(\"Greens\")","a0154d1f":"df[[\"\u8bca\u65ad\u540d\u79f0\",\"\u81ea\u8d39\u8d39\u7528\"]].groupby([\"\u8bca\u65ad\u540d\u79f0\"], as_index = True).mean().sort_values(by = \"\u81ea\u8d39\u8d39\u7528\",ascending = True).style.background_gradient(\"Greens\")","5e63470c":"df[[\"\u8bca\u65ad\u540d\u79f0\",\"\u4f4f\u9662\u65f6\u95f4\"]].groupby([\"\u8bca\u65ad\u540d\u79f0\"], as_index = True).mean().sort_values(by = \"\u4f4f\u9662\u65f6\u95f4\",ascending = False).style.background_gradient(\"Greens\")","b4859108":"df[[\"\u8857\u9053\",\"\u603b\u8d39\u7528\"]].groupby([\"\u8857\u9053\"], as_index = True).mean().sort_values(by = \"\u603b\u8d39\u7528\",ascending = False).style.background_gradient(\"Greens\")","ce099280":"df[[\"\u8857\u9053\",\"\u7edf\u7b79\u8d39\u7528\"]].groupby([\"\u8857\u9053\"], as_index = True).mean().sort_values(by = \"\u7edf\u7b79\u8d39\u7528\",ascending = False).style.background_gradient(\"Greens\")","f990a8ec":"df[[\"\u8857\u9053\",\"\u81ea\u8d39\u8d39\u7528\"]].groupby([\"\u8857\u9053\"], as_index = True).mean().sort_values(by = \"\u81ea\u8d39\u8d39\u7528\",ascending = False).style.background_gradient(\"Greens\")","b21c7eac":"df[[\"\u8857\u9053\",\"\u4f4f\u9662\u65f6\u95f4\"]].groupby([\"\u8857\u9053\"], as_index = True).mean().sort_values(by = \"\u4f4f\u9662\u65f6\u95f4\",ascending = False).style.background_gradient(\"Greens\")","6d56d404":"df[[\"\u8857\u9053\",\"\u4f4f\u9662\u65f6\u95f4\"]].groupby([\"\u8857\u9053\"], as_index = True).sum().sort_values(by = \"\u4f4f\u9662\u65f6\u95f4\",ascending = False).style.background_gradient(\"Greens\")","cd566b4f":"# math opeations\n# import math\n# produce random numbers\n# import random\n# to load json files\nimport json\n# datetime oprations\nfrom datetime import timedelta\n# to get web contents\nfrom urllib.request import urlopen\n\n# for numerical analyiss\nimport numpy as np\n# to store and process data in dataframe\nimport pandas as pd","f6d41d9e":"# basic visualization package\nimport matplotlib.pyplot as plt\n# advanced ploting\nimport seaborn as sns\n\n# interactive visualization\nimport plotly.express as px\nimport plotly.graph_objs as go\n# import plotly.figure_factory as ff\nfrom plotly.subplots import make_subplots","84aafbdb":"# for offline ploting\nfrom plotly.offline import plot, iplot, init_notebook_mode\ninit_notebook_mode(connected=True)","7d2a1231":"# converter\n# from pandas.plotting import register_matplotlib_converters\n# register_matplotlib_converters()   \n\n# hide warnings\nimport warnings\nwarnings.filterwarnings('ignore')","3d1de5dc":"# color pallette\ncnf, dth, rec, act = '#393e46', '#ff2e63', '#21bf73', '#fe9801' \n\n# seaborn plot style\n# sns.set_style('darkgrid')","5251db54":"df.head()","a0312e0e":"fig = px.scatter(df.sort_values('\u603b\u8d39\u7528', ascending=False).iloc[:20, :], \n                 x='\u603b\u8d39\u7528', y='\u7edf\u7b79\u8d39\u7528', color='\u8857\u9053', size='\u7edf\u7b79\u8d39\u7528', \n                 height=700, text='\u8857\u9053', log_x=True, log_y=True,\n                 title='\u603b\u8d39\u7528 vs \u7edf\u7b79\u8d39\u7528 ~\u8857\u9053 (Scale is in log10)',\n                 color_discrete_sequence=px.colors.sequential.Sunset)\nfig.update_traces(textposition='top center')\nfig.update_layout(showlegend=False)\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.update_layout(height=700,width=800)\n\nfig.show()","b329d942":"fig = px.scatter(df.sort_values('\u603b\u8d39\u7528', ascending=False).iloc[:30, :], \n                 x='\u603b\u8d39\u7528', y='\u7edf\u7b79\u8d39\u7528', color='\u6027\u522b', size='\u7edf\u7b79\u8d39\u7528', \n                 height=700, text='\u6027\u522b', log_x=True, log_y=True,\n                 title='\u603b\u8d39\u7528 vs \u7edf\u7b79\u8d39\u7528~\u6027\u522b (Scale is in log10)')\nfig.update_traces(textposition='top center')\nfig.update_layout(showlegend=False)\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.update_layout(height=700,width=850)\n\nfig.show()","22b411cc":"fig = px.scatter(df.sort_values('\u603b\u8d39\u7528', ascending=False).iloc[:30, :], \n                 x='\u603b\u8d39\u7528', y='\u7edf\u7b79\u8d39\u7528', color='\u5e74\u9f84', size='\u7edf\u7b79\u8d39\u7528', \n                 height=700, text='\u5e74\u9f84', log_x=True, log_y=True,\n                 title='\u603b\u8d39\u7528 vs \u7edf\u7b79\u8d39\u7528~ \u5e74\u9f84 (Scale is in log10)')\nfig.update_traces(textposition='top center')\nfig.update_layout(showlegend=False)\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.update_layout(height=700,width=850)\n\nfig.show()","f4682807":"fig = px.scatter(df.sort_values('\u603b\u8d39\u7528', ascending=False).iloc[:30, :], \n                 x='\u603b\u8d39\u7528', y='\u7edf\u7b79\u8d39\u7528', color='\u4eba\u5458\u7c7b\u522b', size='\u7edf\u7b79\u8d39\u7528', \n                 height=700, text='\u4eba\u5458\u7c7b\u522b', log_x=True, log_y=True,\n                 title='\u603b\u8d39\u7528 vs \u7edf\u7b79\u8d39\u7528~\u4eba\u5458\u7c7b\u522b (Scale is in log10)')\nfig.update_traces(textposition='top center')\nfig.update_layout(showlegend=False)\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.update_layout(height=700,width=850)\n\nfig.show()","2b941315":"fig = px.scatter(df.sort_values('\u603b\u8d39\u7528', ascending=False).iloc[:30, :], \n                 x='\u603b\u8d39\u7528', y='\u7edf\u7b79\u8d39\u7528', color='\u533b\u7597\u7c7b\u522b', size='\u7edf\u7b79\u8d39\u7528', \n                 height=700, text='\u533b\u7597\u7c7b\u522b', log_x=True, log_y=True,\n                 title='\u603b\u8d39\u7528 vs \u7edf\u7b79\u8d39\u7528~\u533b\u7597\u7c7b\u522b(Scale is in log10)',\n                color_discrete_sequence=px.colors.sequential.Jet)\nfig.update_traces(textposition='top center')\nfig.update_layout(showlegend=False)\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.update_layout(height=700,width=850)\n\nfig.show()","5467e4e8":"fig = px.scatter(df.sort_values('\u603b\u8d39\u7528', ascending=False).iloc[:30, :], \n                 x='\u603b\u8d39\u7528', y='\u7edf\u7b79\u8d39\u7528', color='\u673a\u6784\u7b49\u7ea7', size='\u7edf\u7b79\u8d39\u7528', \n                 height=700, text='\u673a\u6784\u7b49\u7ea7', log_x=True, log_y=True,\n                 title='\u603b\u8d39\u7528 vs \u7edf\u7b79\u8d39\u7528~\u673a\u6784\u7b49\u7ea7 (Scale is in log10)')\nfig.update_traces(textposition='top center')\nfig.update_layout(showlegend=False)\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.update_layout(height=700,width=850)\n\nfig.show()","f79b6bc8":"fig = px.scatter(df.sort_values('\u603b\u8d39\u7528', ascending=False).iloc[:20, :], \n                 x='\u603b\u8d39\u7528', y='\u7edf\u7b79\u8d39\u7528', color='\u8bca\u65ad\u540d\u79f0', size='\u7edf\u7b79\u8d39\u7528', \n                 height=700, text='\u8bca\u65ad\u540d\u79f0', log_x=True, log_y=True,\n                 title='\u603b\u8d39\u7528 vs \u7edf\u7b79\u8d39\u7528~\u8bca\u65ad\u540d\u79f0 (Scale is in log10)')\nfig.update_traces(textposition='top center')\nfig.update_layout(showlegend=False)\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.update_layout(height=700,width=850)\n\nfig.show()","bd34e5be":"fig = px.scatter(df.sort_values('\u603b\u8d39\u7528', ascending=False).iloc[:20, :], \n                 x='\u603b\u8d39\u7528', y='\u7edf\u7b79\u8d39\u7528', color='\u5730\u533a\u7f16\u7801', size='\u7edf\u7b79\u8d39\u7528', \n                 height=700, text='\u5730\u533a\u7f16\u7801', log_x=True, log_y=True,\n                 title='\u603b\u8d39\u7528 vs \u7edf\u7b79\u8d39\u7528~\u5730\u533a\u7f16\u7801 (Scale is in log10)',\n                color_discrete_sequence=px.colors.sequential.Sunset)\nfig.update_traces(textposition='top center')\nfig.update_layout(showlegend=False)\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.update_layout(height=700,width=850)\n\nfig.show()","52e20de1":"fig = px.scatter(df.sort_values('\u603b\u8d39\u7528', ascending=False).iloc[:20, :], \n                 x='\u603b\u8d39\u7528', y='\u7edf\u7b79\u8d39\u7528', color='\u5c31\u8bca\u7f16\u7801', size='\u7edf\u7b79\u8d39\u7528', \n                 height=700, text='\u5c31\u8bca\u7f16\u7801', log_x=True, log_y=True,\n                 title='\u603b\u8d39\u7528 vs \u7edf\u7b79\u8d39\u7528~\u5c31\u8bca\u7f16\u7801 (Scale is in log10)',\n                color_discrete_sequence=px.colors.sequential.Hot)\nfig.update_traces(textposition='top center')\nfig.update_layout(showlegend=False)\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.update_layout(height=700,width=850)\n\nfig.show()","5ea45ee1":"fig = px.scatter(df.sort_values('\u603b\u8d39\u7528', ascending=False).iloc[:30, :], \n                 x='\u603b\u8d39\u7528', y='\u4f4f\u9662\u65f6\u95f4', color='\u5e74\u9f84', size='\u4f4f\u9662\u65f6\u95f4', \n                 height=700, text='\u5e74\u9f84', log_x=True, log_y=True,\n                 title='\u603b\u8d39\u7528 vs \u4f4f\u9662\u65f6\u95f4~\u5e74\u9f84 (Scale is in log10)')\nfig.update_traces(textposition='top center')\nfig.update_layout(showlegend=False)\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.update_layout(height=700,width=850)\n\nfig.show()","7e392dbf":"fig = px.scatter(df.sort_values('\u603b\u8d39\u7528', ascending=False).iloc[:30, :], \n                 x='\u603b\u8d39\u7528', y='\u4f4f\u9662\u65f6\u95f4', color='\u6027\u522b', size='\u4f4f\u9662\u65f6\u95f4', \n                 height=700, text='\u6027\u522b', log_x=True, log_y=True,\n                 title='\u603b\u8d39\u7528 vs \u4f4f\u9662\u65f6\u95f4~\u6027\u522b (Scale is in log10)')\nfig.update_traces(textposition='top center')\nfig.update_layout(showlegend=False)\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.update_layout(height=700,width=850)\nfig.show()","806f5fa3":"fig = px.scatter(df.sort_values('\u603b\u8d39\u7528', ascending=False).iloc[:30, :], \n                 x='\u603b\u8d39\u7528', y='\u4f4f\u9662\u65f6\u95f4', color='\u4eba\u5458\u7c7b\u522b', size='\u4f4f\u9662\u65f6\u95f4', \n                 height=700, text='\u4eba\u5458\u7c7b\u522b', log_x=True, log_y=True,\n                 title='\u603b\u8d39\u7528 vs \u4f4f\u9662\u65f6\u95f4~\u4eba\u5458\u7c7b\u522b (Scale is in log10)')\nfig.update_traces(textposition='top center')\nfig.update_layout(showlegend=False)\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.update_layout(height=700,width=850)\n\nfig.show()","8e32fa30":"fig = px.scatter(df.sort_values('\u603b\u8d39\u7528', ascending=False).iloc[:30, :], \n                 x='\u603b\u8d39\u7528', y='\u4f4f\u9662\u65f6\u95f4', color='\u533b\u7597\u7c7b\u522b', size='\u4f4f\u9662\u65f6\u95f4', \n                 height=700, text='\u533b\u7597\u7c7b\u522b', log_x=True, log_y=True,\n                 title='\u603b\u8d39\u7528 vs \u4f4f\u9662\u65f6\u95f4~\u533b\u7597\u7c7b\u522b (Scale is in log10)')\nfig.update_traces(textposition='top center')\nfig.update_layout(showlegend=False)\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.update_layout(height=700,width=850)\n\nfig.show()","ef23deb9":"fig = px.scatter(df.sort_values('\u603b\u8d39\u7528', ascending=False).iloc[:30, :], \n                 x='\u603b\u8d39\u7528', y='\u4f4f\u9662\u65f6\u95f4', color='\u5c31\u8bca\u7f16\u7801', size='\u4f4f\u9662\u65f6\u95f4', \n                 height=700, text='\u5c31\u8bca\u7f16\u7801', log_x=True, log_y=True,\n                 title='\u603b\u8d39\u7528 vs \u4f4f\u9662\u65f6\u95f4~\u5c31\u8bca\u7f16\u7801 (Scale is in log10)')\nfig.update_traces(textposition='top center')\nfig.update_layout(showlegend=False)\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.update_layout(height=700,width=850)\n\nfig.show()","55a4cf3f":"fig = px.scatter(df.sort_values('\u603b\u8d39\u7528', ascending=False).iloc[:30, :], \n                 x='\u603b\u8d39\u7528', y='\u4f4f\u9662\u65f6\u95f4', color='\u5730\u533a\u7f16\u7801', size='\u4f4f\u9662\u65f6\u95f4', \n                 height=700, text='\u5730\u533a\u7f16\u7801', log_x=True, log_y=True,\n                 title='\u603b\u8d39\u7528 vs \u4f4f\u9662\u65f6\u95f4~\u5730\u533a\u7f16\u7801 (Scale is in log10)')\nfig.update_traces(textposition='top center')\nfig.update_layout(showlegend=False)\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.update_layout(height=700,width=900)\n\nfig.show()","f2007238":"fig = px.scatter(df.sort_values('\u603b\u8d39\u7528', ascending=False).iloc[:30, :], \n                 x='\u603b\u8d39\u7528', y='\u4f4f\u9662\u65f6\u95f4', color='\u673a\u6784\u7b49\u7ea7', size='\u4f4f\u9662\u65f6\u95f4', \n                 height=700, text='\u673a\u6784\u7b49\u7ea7', log_x=True, log_y=True,\n                 title='\u603b\u8d39\u7528 vs \u4f4f\u9662\u65f6\u95f4~\u673a\u6784\u7b49\u7ea7 (Scale is in log10)')\nfig.update_traces(textposition='top center')\nfig.update_layout(showlegend=False)\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.update_layout(height=700,width=850)\n\nfig.show()","e5d8b1ca":"fig = px.scatter(df.sort_values('\u603b\u8d39\u7528', ascending=False).iloc[:30, :], \n                 x='\u603b\u8d39\u7528', y='\u4f4f\u9662\u65f6\u95f4', color='\u8bca\u65ad\u540d\u79f0', size='\u4f4f\u9662\u65f6\u95f4', \n                 height=700, text='\u8bca\u65ad\u540d\u79f0', log_x=True, log_y=True,\n                 title='\u603b\u8d39\u7528 vs \u4f4f\u9662\u65f6\u95f4~\u8bca\u65ad\u540d\u79f0 (Scale is in log10)')\nfig.update_traces(textposition='top center')\nfig.update_layout(showlegend=False)\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.update_layout(height=700,width=850)\n\nfig.show()","55d23ea2":"fig = px.scatter(df.sort_values('\u603b\u8d39\u7528', ascending=False).iloc[:30, :], \n                 x='\u603b\u8d39\u7528', y='\u4f4f\u9662\u65f6\u95f4', color='\u8857\u9053', size='\u4f4f\u9662\u65f6\u95f4', \n                 height=700, text='\u8857\u9053', log_x=True, log_y=True,\n                 title='\u603b\u8d39\u7528 vs \u4f4f\u9662\u65f6\u95f4~\u8857\u9053 (Scale is in log10)',\n                color_discrete_sequence=px.colors.sequential.Plotly3)\nfig.update_traces(textposition='top center')\nfig.update_layout(showlegend=False)\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.update_layout(height=700,width=850)\n\nfig.show()","04d4b1e5":"def plot_treemap(col):\n    fig = px.treemap(df, path=[\"\u8857\u9053\"], values=col, height=750,width=1050,\n                 title=col, color_discrete_sequence = px.colors.qualitative.Dark2)\n    fig.data[0].textinfo = 'label+text+value'\n    fig.show()","df1808ba":"plot_treemap(\"\u603b\u8d39\u7528\")","136fe30d":"plot_treemap(\"\u7edf\u7b79\u8d39\u7528\")","49ba1ae4":"plot_treemap(\"\u81ea\u8d39\u8d39\u7528\")","231905f3":"plot_treemap(\"\u4f4f\u9662\u65f6\u95f4\")","6268d88c":"def plot_treemap(col):\n    fig = px.treemap(df, path=[\"\u8bca\u65ad\u540d\u79f0\"], values=col, height=750,width=1050,\n                 title=col, color_discrete_sequence = px.colors.qualitative.Dark2)\n    fig.data[0].textinfo = 'label+text+value'\n    fig.show()","702782cf":"plot_treemap(\"\u603b\u8d39\u7528\")","1af6a4c1":"plot_treemap(\"\u7edf\u7b79\u8d39\u7528\")","9d656938":"plot_treemap(\"\u81ea\u8d39\u8d39\u7528\")","573bccc1":"plot_treemap(\"\u4f4f\u9662\u65f6\u95f4\")","d73bcc61":"temp = df[df['\u4f4f\u9662\u65f6\u95f4']>0]\ntemp = temp.sort_values('\u4f4f\u9662\u65f6\u95f4', ascending=False)[[\"\u8bc6\u522bID\",\"\u8bca\u65ad\u540d\u79f0\",'\u8857\u9053', '\u603b\u8d39\u7528','\u4f4f\u9662\u65f6\u95f4',\"\u6027\u522b\"]][:20].style.background_gradient(cmap='Greens')\ntemp","ab7776aa":"temp = df[df['\u8bca\u65ad\u540d\u79f0']==\"\u9ad8\u8840\u538b\"]\ntemp = temp.sort_values('\u4f4f\u9662\u65f6\u95f4', ascending=False)[[\"\u8bca\u65ad\u540d\u79f0\",\"\u8bc6\u522bID\",'\u8857\u9053', '\u603b\u8d39\u7528','\u4f4f\u9662\u65f6\u95f4',\"\u6027\u522b\"]][:20].style.background_gradient(cmap='Reds')\ntemp","bea1a35e":"temp = df[[\"\u8bca\u65ad\u540d\u79f0\",\"\u8bc6\u522bID\",'\u8857\u9053', '\u603b\u8d39\u7528','\u4f4f\u9662\u65f6\u95f4',\"\u6027\u522b\"]][:10]#.style.background_gradient(cmap='Reds')\ntemp = temp[temp['\u8bca\u65ad\u540d\u79f0']==\"\u9ad8\u8840\u538b\"].style.background_gradient(cmap='Reds')\n# temp.head()\ntemp","d892f76d":"temp = df[[\"\u8bca\u65ad\u540d\u79f0\",\"\u8bc6\u522bID\",'\u8857\u9053', '\u603b\u8d39\u7528','\u4f4f\u9662\u65f6\u95f4',\"\u6027\u522b\",\"\u5e74\u9f84\",\"\u4eba\u5458\u7c7b\u522b\",\"\u533b\u7597\u7c7b\u522b\",\"\u673a\u6784\u7b49\u7ea7\"]]#.style.background_gradient(cmap='Reds')\ntemp = temp[temp['\u8bca\u65ad\u540d\u79f0']==\"\u9ad8\u8840\u538b\"]\ntemp.head()","b1e60fd2":"temp.shape","04a3682d":"##\u6027\u522b\u7edf\u8ba1\nsex_count = temp.\u6027\u522b.value_counts().reset_index()\nsex_count.columns = ['\u6027\u522b', 'count']\n#sex_count\nfig=px.pie(sex_count, values='count', names='\u6027\u522b', \n       title='\u9ad8\u8840\u538b\u60a3\u8005\u4e2d\u7537\u5973\u5360\u6bd4', \n       color_discrete_sequence=px.colors.sequential.Bluered,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig.update_layout(xaxis_tickangle=-45,height=550,width=700)\nfig.update_traces(textposition='outside', textinfo='percent+label') ","18ec4a1d":"## \u9ad8\u8840\u538b\u4e2d\u7684\u5206\u5e03\nimport plotly.graph_objects as go\n##\nfig = px.bar(sex_count.head(20), y='\u6027\u522b', text='count',x=\"count\", color='\u6027\u522b')\n# Put bar total value above bars with 2 values of precision\nfig.update_traces(texttemplate='%{text:.2}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig.update_layout(uniformtext_minsize=8)\nfig.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\nfig","ad7bd072":"##\u5e74\u9f84\u7edf\u8ba1\nage_count = temp.\u5e74\u9f84.value_counts().reset_index()\nage_count.columns = ['\u5e74\u9f84', 'count']\n#sex_count\nfig=px.pie(age_count.head(10), values='count', names='\u5e74\u9f84', \n       title='\u9ad8\u8840\u538b\u60a3\u8005\u4e2d\u5e74\u9f84\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Sunset,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig.update_traces(textposition='inside', textinfo='percent+label') ","2ef0b84f":"## \nimport plotly.graph_objects as go\n##\nfig = px.bar(age_count.head(20), y='\u5e74\u9f84', text='count',x=\"count\", color='\u5e74\u9f84')\n# Put bar total value above bars with 2 values of precision\nfig.update_traces(texttemplate='%{text:.2}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig.update_layout(uniformtext_minsize=8)\n# Rotate labels 45 degrees\nfig.update_layout(xaxis_tickangle=-45)\nfig.update_layout(xaxis_tickangle=-45,height=700,width=900)\nfig","96063cce":"fig = px.scatter(age_count, \n                 y='count', x='\u5e74\u9f84', color='count', size='count', \n                 height=700, text='\u5e74\u9f84', \n                 title='\u9ad8\u8840\u538b\u60a3\u8005\u7684\u5e74\u9f84\u5206\u5e03',\n                color_discrete_sequence=px.colors.sequential.Sunset)\nfig.update_traces(textposition='top center')\nfig.update_layout(showlegend=False)\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.update_layout(height=700,width=850)\n\nfig.show()","314cd09a":"##\u8857\u9053\u7edf\u8ba1\njie_count = temp.\u8857\u9053.value_counts().reset_index()\njie_count.columns = ['\u8857\u9053', 'count']\n#sex_count\nfig=px.pie(jie_count.head(20), values='count', names='\u8857\u9053', \n       title='\u9ad8\u8840\u538b\u60a3\u8005\u4e2d\u6240\u5728\u5730\u533a\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Sunset,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig.update_traces(textposition='inside', textinfo='percent+label') ","fb0d785a":"## \u9ad8\u8840\u538b\u4e2d\u8857\u9053\u7684\u5206\u5e03\nimport plotly.graph_objects as go\n##\nfig = px.bar(jie_count.head(20), y='\u8857\u9053', text='count',x=\"count\", color='\u8857\u9053')\n# Put bar total value above bars with 2 values of precision\nfig.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig.update_layout(uniformtext_minsize=8)\nfig.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\nfig","6c5fbe9f":"##\u4eba\u5458\u7c7b\u522b\u7edf\u8ba1\nry_count = temp.\u4eba\u5458\u7c7b\u522b.value_counts().reset_index()\nry_count.columns = ['\u4eba\u5458\u7c7b\u522b', 'count']\n#sex_count\nfig=px.pie(ry_count.head(20), values='count', names='\u4eba\u5458\u7c7b\u522b', \n       title='\u9ad8\u8840\u538b\u60a3\u8005\u4e2d\u6240\u5728\u5730\u533a\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Sunset,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig.update_traces(textposition='inside', textinfo='percent+label') ","14ba7f27":"## \u9ad8\u8840\u538b\u4e2d\u4eba\u5458\u7c7b\u522b\u7684\u5206\u5e03\nimport plotly.graph_objects as go\n##\nfig = px.bar(ry_count.head(20), y='\u4eba\u5458\u7c7b\u522b', text='count',x=\"count\", color='\u4eba\u5458\u7c7b\u522b')\n# Put bar total value above bars with 2 values of precision\nfig.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig.update_layout(uniformtext_minsize=8)\nfig.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\nfig","6e9941fc":"##\u533b\u7597\u7c7b\u522b\u7edf\u8ba1\nyl_count = temp.\u533b\u7597\u7c7b\u522b.value_counts().reset_index()\nyl_count.columns = ['\u533b\u7597\u7c7b\u522b', 'count']\n#sex_count\nfig=px.pie(yl_count.head(20), values='count', names='\u533b\u7597\u7c7b\u522b', \n       title='\u9ad8\u8840\u538b\u60a3\u8005\u7684\u533b\u7597\u7c7b\u522b\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Sunset,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig.update_traces(textposition='inside', textinfo='percent+label') ","ae86c146":"## \u9ad8\u8840\u538b\u4e2d\u8857\u9053\u7684\u5206\u5e03\nimport plotly.graph_objects as go\n##\nfig = px.bar(yl_count.head(20), y='\u533b\u7597\u7c7b\u522b', text='count',x=\"count\", color='\u533b\u7597\u7c7b\u522b')\n# Put bar total value above bars with 2 values of precision\nfig.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig.update_layout(uniformtext_minsize=8)\nfig.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\nfig","357e2584":"##\u673a\u6784\u7b49\u7ea7\u7c7b\u522b\u7edf\u8ba1\njg_count = temp.\u673a\u6784\u7b49\u7ea7.value_counts().reset_index()\njg_count.columns = ['\u673a\u6784\u7b49\u7ea7', 'count']\n\nimport plotly.graph_objects as go\n##\nfig = px.bar(jg_count.head(20), y='\u673a\u6784\u7b49\u7ea7', text='count',x=\"count\", color='\u673a\u6784\u7b49\u7ea7')\n# Put bar total value above bars with 2 values of precision\nfig.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig.update_layout(uniformtext_minsize=8)\nfig.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\nfig","c9dd3630":"fig=px.pie(jg_count.head(20), values='count', names='\u673a\u6784\u7b49\u7ea7', \n       title='\u9ad8\u8840\u538b\u60a3\u8005\u7684\u673a\u6784\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Sunset,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig.update_traces(textposition='inside', textinfo='percent+label') ","e81a1dd9":"e = df[df['\u8bca\u65ad\u540d\u79f0']==\"\u6076\u6027\u80bf\u7624\"]#.style.background_gradient(cmap='Greens')\ne= e.sort_values('\u603b\u8d39\u7528', ascending=False)[[\"\u8bca\u65ad\u540d\u79f0\",\"\u5e74\u9f84\",\"\u603b\u8d39\u7528\",\"\u7edf\u7b79\u8d39\u7528\",\"\u81ea\u8d39\u8d39\u7528\",\"\u4f4f\u9662\u65f6\u95f4\",\"\u6027\u522b\",\"\u4eba\u5458\u7c7b\u522b\",\"\u533b\u7597\u7c7b\u522b\",\"\u673a\u6784\u7b49\u7ea7\",\"\u8857\u9053\",\"\u5c31\u8bca\u7f16\u7801\"]]#.style.background_gradient(cmap='Reds')\n# e","87656934":"e.describe()","cbb27d30":"##\u6027\u522b\u7edf\u8ba1\nsex_count = e.\u6027\u522b.value_counts().reset_index()\nsex_count.columns = ['\u6027\u522b', 'count']\n\nimport plotly.graph_objects as go\n##\nfig = px.bar(sex_count.head(20), y='\u6027\u522b', text='count',x=\"count\", color='\u6027\u522b')\n# Put bar total value above bars with 2 values of precision\nfig.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig.update_layout(uniformtext_minsize=8)\nfig.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\nfig","65cd0bcc":"fig=px.pie(sex_count.head(20), values='count', names='\u6027\u522b', \n       title='\u6076\u6027\u80bf\u7624\u60a3\u8005\u4e2d\u7537\u5973\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Sunsetdark,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig.update_traces(textposition='inside', textinfo='percent+label') ","2b6ccf6f":"##\u5e74\u9f84\u7edf\u8ba1\nage_count = e.\u5e74\u9f84.value_counts().reset_index()\nage_count.columns = ['\u5e74\u9f84', 'count']\n\nfig=px.pie(age_count.head(20), values='count', names='\u5e74\u9f84', \n       title='\u6076\u6027\u80bf\u7624\u60a3\u8005\u7684\u5e74\u9f84\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Sunsetdark,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig.update_traces(textposition='inside', textinfo='percent+label') ","0d8e2e7c":"fig = px.scatter(age_count, \n                 y='count', x='\u5e74\u9f84', color='count', size='count', \n                 height=700, text='\u5e74\u9f84', \n                 title='\u6076\u6027\u80bf\u7624\u60a3\u8005\u7684\u5e74\u9f84\u5206\u5e03',\n                color_discrete_sequence=px.colors.sequential.Sunset)\nfig.update_traces(textposition='top center')\nfig.update_layout(showlegend=False)\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.update_layout(height=700,width=850)\n\nfig.show()","e2f84dbe":"##\u4eba\u5458\u7c7b\u522b\u7edf\u8ba1\nry_count = e.\u4eba\u5458\u7c7b\u522b.value_counts().reset_index()\nry_count.columns = ['\u4eba\u5458\u7c7b\u522b', 'count']\n\nimport plotly.graph_objects as go\n##\nfig = px.bar(ry_count.head(20), y='\u4eba\u5458\u7c7b\u522b', text='count',x=\"count\", color='\u4eba\u5458\u7c7b\u522b')\n# Put bar total value above bars with 2 values of precision\nfig.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig.update_layout(uniformtext_minsize=8)\nfig.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\nfig","17ca0e96":"\nfig=px.pie(ry_count.head(20), values='count', names='\u4eba\u5458\u7c7b\u522b', \n       title='\u6076\u6027\u80bf\u7624\u60a3\u8005\u4e2d\u4eba\u5458\u7c7b\u522b\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Sunsetdark,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig.update_traces(textposition='inside', textinfo='percent+label') ","8a3bcbb8":"##\u533b\u7597\u7c7b\u522b\u7edf\u8ba1\nyl_count = e.\u533b\u7597\u7c7b\u522b.value_counts().reset_index()\nyl_count.columns = ['\u533b\u7597\u7c7b\u522b', 'count']\n\nimport plotly.graph_objects as go\n##\nfig = px.bar(yl_count.head(20), y='\u533b\u7597\u7c7b\u522b', text='count',x=\"count\", color='\u533b\u7597\u7c7b\u522b')\n# Put bar total value above bars with 2 values of precision\nfig.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig.update_layout(uniformtext_minsize=8)\nfig.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\nfig","b31eee1c":"fig=px.pie(yl_count.head(20), values='count', names='\u533b\u7597\u7c7b\u522b', \n       title='\u6076\u6027\u80bf\u7624\u60a3\u8005\u4e2d\u533b\u7597\u7c7b\u522b\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Sunsetdark,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig.update_traces(textposition='inside', textinfo='percent+label') ","3af3a92b":"##\u673a\u6784\u7b49\u7ea7\u7edf\u8ba1\njg_count = e.\u673a\u6784\u7b49\u7ea7.value_counts().reset_index()\njg_count.columns = ['\u673a\u6784\u7b49\u7ea7', 'count']\n\nimport plotly.graph_objects as go\n##\nfig = px.bar(jg_count.head(20), y='\u673a\u6784\u7b49\u7ea7', text='count',x=\"count\", color='\u673a\u6784\u7b49\u7ea7')\n# Put bar total value above bars with 2 values of precision\nfig.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig.update_layout(uniformtext_minsize=8)\nfig.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\nfig","d645a802":"fig=px.pie(jg_count.head(20), values='count', names='\u673a\u6784\u7b49\u7ea7', \n       title='\u6076\u6027\u80bf\u7624\u60a3\u8005\u4e2d\u673a\u6784\u7b49\u7ea7\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Sunsetdark,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig.update_traces(textposition='inside', textinfo='percent+label') ","f614c6d9":"##\u8857\u9053\u7edf\u8ba1\njd_count = e.\u8857\u9053.value_counts().reset_index()\njd_count.columns = ['\u8857\u9053', 'count']\n\nimport plotly.graph_objects as go\n##\nfig = px.bar(jd_count.head(20), y='\u8857\u9053', text='count',x=\"count\", color='\u8857\u9053')\n# Put bar total value above bars with 2 values of precision\nfig.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig.update_layout(uniformtext_minsize=8)\nfig.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\nfig","e10eb17e":"fig=px.pie(jd_count.head(20), values='count', names='\u8857\u9053', \n       title='\u6076\u6027\u80bf\u7624\u60a3\u8005\u6240\u5728\u8857\u9053\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Sunsetdark,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig.update_traces(textposition='inside', textinfo='percent+label') ","4a263b6c":"def plot_treemap(col):\n    fig = px.treemap(e, path=[\"\u8857\u9053\"], values=col, height=750,width=1050,\n                 title=col, color_discrete_sequence = px.colors.qualitative.Dark2)\n    fig.data[0].textinfo = 'label+text+value'\n    fig.show()","27791ce3":"plot_treemap(\"\u603b\u8d39\u7528\")","f359ae53":"plot_treemap(\"\u7edf\u7b79\u8d39\u7528\")","630521cf":"plot_treemap(\"\u81ea\u8d39\u8d39\u7528\")","cbe1eb6e":"plot_treemap(\"\u4f4f\u9662\u65f6\u95f4\")","7cacb065":"age1=df[df[\"\u5e74\u9f84\"]<=6]\nage1=age1.sort_values('\u603b\u8d39\u7528', ascending=False)[[\"\u8bca\u65ad\u540d\u79f0\",\"\u6027\u522b\",\"\u5e74\u9f84\",\"\u4eba\u5458\u7c7b\u522b\",\"\u533b\u7597\u7c7b\u522b\",\"\u673a\u6784\u7b49\u7ea7\",'\u8857\u9053', '\u603b\u8d39\u7528',\"\u7edf\u7b79\u8d39\u7528\",\"\u81ea\u8d39\u8d39\u7528\",'\u4f4f\u9662\u65f6\u95f4',\"\u8bc6\u522bID\"]]#[:10].style.background_gradient(cmap='Reds')","fc6dbe1e":"age2=df[(df[\"\u5e74\u9f84\"]>=7)&(df[\"\u5e74\u9f84\"]<=17)]\nage2=age2.sort_values('\u603b\u8d39\u7528', ascending=False)[[\"\u8bca\u65ad\u540d\u79f0\",\"\u6027\u522b\",\"\u5e74\u9f84\",\"\u4eba\u5458\u7c7b\u522b\",\"\u533b\u7597\u7c7b\u522b\",\"\u673a\u6784\u7b49\u7ea7\",'\u8857\u9053', '\u603b\u8d39\u7528',\"\u7edf\u7b79\u8d39\u7528\",\"\u81ea\u8d39\u8d39\u7528\",'\u4f4f\u9662\u65f6\u95f4',\"\u8bc6\u522bID\"]]#[:10].style.background_gradient(cmap='Reds')","0558bae7":"age1.describe()","def92a66":"age1.shape","a583a035":"##\u6027\u522b\u7edf\u8ba1\nsex_count = age1.\u6027\u522b.value_counts().reset_index()\nsex_count.columns = ['\u6027\u522b', 'count']\n\nimport plotly.graph_objects as go\n##\nfig = px.bar(sex_count.head(20), y='\u6027\u522b', text='count',x=\"count\", color='\u6027\u522b')\n# Put bar total value above bars with 2 values of precision\nfig.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig.update_layout(uniformtext_minsize=8)\nfig.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\nfig","033623f2":"fig=px.pie(sex_count.head(20), values='count', names='\u6027\u522b', \n       title='0-6\u513f\u7ae5\u6027\u522b\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Agsunset,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig.update_traces(textposition='inside', textinfo='percent+label') ","13696f8e":"##\u5e74\u9f84\u7edf\u8ba1\nage_count = age1.\u5e74\u9f84.value_counts().reset_index()\nage_count.columns = ['\u5e74\u9f84', 'count']\n#sex_count\nfig=px.pie(age_count.head(10), values='count', names='\u5e74\u9f84', \n       title='0-6\u5c81\u513f\u7ae5\u7684\u5e74\u9f84\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Sunset,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig.update_traces(textposition='inside', textinfo='percent+label') ","aaad72cb":"fig = px.scatter(age_count, \n                 y='count', x='\u5e74\u9f84', color='count', size='count', \n                 height=700, text='\u5e74\u9f84', \n                 title='0-6\u5c81\u513f\u7ae5\u7684\u5e74\u9f84\u5206\u5e03',\n                color_discrete_sequence=px.colors.sequential.Sunset)\nfig.update_traces(textposition='top center')\nfig.update_layout(showlegend=False)\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.update_layout(height=700,width=850)\n\nfig.show()","c7405ebe":"##\u4eba\u5458\u7c7b\u522b\u7edf\u8ba1\nry_count = age1.\u4eba\u5458\u7c7b\u522b.value_counts().reset_index()\nry_count.columns = ['\u4eba\u5458\u7c7b\u522b', 'count']\n\nimport plotly.graph_objects as go\n##\nfig = px.bar(ry_count.head(20), y='\u4eba\u5458\u7c7b\u522b', text='count',x=\"count\", color='\u4eba\u5458\u7c7b\u522b')\n# Put bar total value above bars with 2 values of precision\nfig.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig.update_layout(uniformtext_minsize=8)\nfig.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\nfig","2bc8036f":"##\u533b\u7597\u7c7b\u522b\u7edf\u8ba1\nyl_count = age1.\u533b\u7597\u7c7b\u522b.value_counts().reset_index()\nyl_count.columns = ['\u533b\u7597\u7c7b\u522b', 'count']\n\nimport plotly.graph_objects as go\n##\nfig = px.bar(yl_count.head(20), y='\u533b\u7597\u7c7b\u522b', text='count',x=\"count\", color='\u533b\u7597\u7c7b\u522b')\n# Put bar total value above bars with 2 values of precision\nfig.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig.update_layout(uniformtext_minsize=8)\nfig.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\nfig","eea753b8":"fig=px.pie(yl_count.head(10), values='count', names='\u533b\u7597\u7c7b\u522b', \n       title='0-6\u5c81\u513f\u7ae5\u7684\u5e74\u9f84 \u533b\u7597\u7c7b\u522b\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Sunset,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig.update_traces(textposition='inside', textinfo='percent+label') ","4dff3ba7":"##\u673a\u6784\u7b49\u7ea7\u7edf\u8ba1\njg_count = age1.\u673a\u6784\u7b49\u7ea7.value_counts().reset_index()\njg_count.columns = ['\u673a\u6784\u7b49\u7ea7', 'count']\n\nimport plotly.graph_objects as go\n##\nfig = px.bar(jg_count.head(20), y='\u673a\u6784\u7b49\u7ea7', text='count',x=\"count\", color='\u673a\u6784\u7b49\u7ea7')\n# Put bar total value above bars with 2 values of precision\nfig.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig.update_layout(uniformtext_minsize=8)\nfig.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\nfig","5925ff75":"fig=px.pie(jg_count.head(10), values='count', names='\u673a\u6784\u7b49\u7ea7', \n       title='0-6\u5c81\u513f\u7ae5\u7684\u5e74\u9f84 \u673a\u6784\u7b49\u7ea7\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Sunset,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig.update_traces(textposition='inside', textinfo='percent+label') ","7238c966":"##\u8bca\u65ad\u540d\u79f0\u7edf\u8ba1\njb_count = age1.\u8bca\u65ad\u540d\u79f0.value_counts().reset_index()\njb_count.columns = ['\u8bca\u65ad\u540d\u79f0', 'count']\n\nimport plotly.graph_objects as go\n##\nfig = px.bar(jb_count.head(20), y='\u8bca\u65ad\u540d\u79f0', text='count',x=\"count\", color='\u8bca\u65ad\u540d\u79f0')\n# Put bar total value above bars with 2 values of precision\nfig.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig.update_layout(uniformtext_minsize=8)\nfig.update_layout(xaxis_tickangle=0,height=550,width=800)\n# Rotate labels 45 degrees\nfig","1974cc71":"fig=px.pie(jb_count.head(10), values='count', names='\u8bca\u65ad\u540d\u79f0', \n       title='0-6\u5c81\u513f\u7ae5\u7684\u5e74\u9f84 \u8bca\u65ad\u540d\u79f0\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Sunset,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig.update_traces(textposition='inside', textinfo='percent+label')","d9bdb494":"def plot_treemap1(col):\n    fig = px.treemap(age1, path=[\"\u8857\u9053\"], values=col, height=750,width=1050,\n                 title=col, color_discrete_sequence = px.colors.qualitative.Dark2)\n    fig.data[0].textinfo = 'label+text+value'\n    fig.show()\n    \ndef plot_treemap2(col):\n    fig = px.treemap(age1, path=[\"\u8bca\u65ad\u540d\u79f0\"], values=col, height=750,width=1050,\n                 title=col, color_discrete_sequence = px.colors.qualitative.Plotly)\n    fig.data[0].textinfo = 'label+text+value'\n    fig.show()   #https:\/\/baijiahao.baidu.com\/s?id=1713465946321449501&wfr=spider&for=pc","4ceaafb0":"plot_treemap1(\"\u603b\u8d39\u7528\");plot_treemap1(\"\u7edf\u7b79\u8d39\u7528\");plot_treemap1(\"\u81ea\u8d39\u8d39\u7528\");plot_treemap1(\"\u4f4f\u9662\u65f6\u95f4\");","5b1b69ad":"plot_treemap2(\"\u603b\u8d39\u7528\");plot_treemap2(\"\u7edf\u7b79\u8d39\u7528\");plot_treemap2(\"\u81ea\u8d39\u8d39\u7528\");plot_treemap2(\"\u4f4f\u9662\u65f6\u95f4\")","3d3b8a90":"age2=df[(df[\"\u5e74\u9f84\"]>=7)&(df[\"\u5e74\u9f84\"]<=17)]\nage2=age2.sort_values('\u603b\u8d39\u7528', ascending=False)[[\"\u8bca\u65ad\u540d\u79f0\",\"\u6027\u522b\",\"\u5e74\u9f84\",\"\u4eba\u5458\u7c7b\u522b\",\"\u533b\u7597\u7c7b\u522b\",\"\u673a\u6784\u7b49\u7ea7\",'\u8857\u9053', '\u603b\u8d39\u7528',\"\u7edf\u7b79\u8d39\u7528\",\"\u81ea\u8d39\u8d39\u7528\",'\u4f4f\u9662\u65f6\u95f4',\"\u8bc6\u522bID\"]]#[:10].style.background_gradient(cmap='Reds')","c5583d6b":"##1 \u6027\u522b\u7edf\u8ba1\nsex_count = age2.\u6027\u522b.value_counts().reset_index()\nsex_count.columns = ['\u6027\u522b', 'count']\n\nimport plotly.graph_objects as go\n##\nfig = px.bar(sex_count.head(20), y='\u6027\u522b', text='count',x=\"count\", color='\u6027\u522b')\n# Put bar total value above bars with 2 values of precision\nfig.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig.update_layout(uniformtext_minsize=8)\nfig.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\nfig","7b6dab24":"##1 \u6027\u522b\u7edf\u8ba1\nsex_count = age2.\u6027\u522b.value_counts().reset_index()\nsex_count.columns = ['\u6027\u522b', 'count']\n\nimport plotly.graph_objects as go\n##\nfig = px.bar(sex_count.head(20), y='\u6027\u522b', text='count',x=\"count\", color='\u6027\u522b')\n# Put bar total value above bars with 2 values of precision\nfig.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig.update_layout(uniformtext_minsize=8)\nfig.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\nfig\nfig=px.pie(sex_count.head(10), values='count', names='\u6027\u522b', \n       title='7-17\u5c81\u5c11\u5e74\u671f \u6027\u522b\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig.update_traces(textposition='inside', textinfo='percent+label')","69a43d13":"fig=px.pie(sex_count.head(10), values='count', names='\u6027\u522b', \n       title='7-17\u5c81\u5c11\u5e74\u671f \u6027\u522b\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig.update_traces(textposition='inside', textinfo='percent+label')","a715cc8d":"##\u5e74\u9f84\u7edf\u8ba1\nage_count = age2.\u5e74\u9f84.value_counts().reset_index()\nage_count.columns = ['\u5e74\u9f84', 'count']\n#sex_count\nfig=px.pie(age_count.head(10), values='count', names='\u5e74\u9f84', \n       title='7-17\u5c81\u5c11\u5e74\u7684\u5e74\u9f84\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig.update_traces(textposition='inside', textinfo='percent+label') ","f3dc4e48":"##\u5e74\u9f84\u7edf\u8ba1\nage_count = age2.\u5e74\u9f84.value_counts().reset_index()\nage_count.columns = ['\u5e74\u9f84', 'count']\n#sex_count\nfig=px.pie(age_count.head(10), values='count', names='\u5e74\u9f84', \n       title='7-17\u5c81\u5c11\u5e74\u7684\u5e74\u9f84\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig.update_traces(textposition='inside', textinfo='percent+label') \n\nfig = px.scatter(age_count, \n                 y='count', x='\u5e74\u9f84', color='count', size='count', \n                 height=700, text='\u5e74\u9f84', \n                 title='7-17\u5c81\u5c11\u5e74\u7684\u5e74\u9f84\u5206\u5e03',\n                color_discrete_sequence=px.colors.sequential.Sunset)\nfig.update_traces(textposition='top center')\nfig.update_layout(showlegend=False)\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.update_layout(height=700,width=850)\n\nfig.show()","2db8c0ca":"fig = px.scatter(age_count, \n                 y='count', x='\u5e74\u9f84', color='count', size='count', \n                 height=700, text='\u5e74\u9f84', \n                 title='7-17\u5c81\u5c11\u5e74\u7684\u5e74\u9f84\u5206\u5e03',\n                color_discrete_sequence=px.colors.sequential.Sunset)\nfig.update_traces(textposition='top center')\nfig.update_layout(showlegend=False)\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.update_layout(height=700,width=850)\n\nfig.show()","1e336d12":"##\u4eba\u5458\u7c7b\u522b\u7edf\u8ba1\nry_count = age2.\u4eba\u5458\u7c7b\u522b.value_counts().reset_index()\nry_count.columns = ['\u4eba\u5458\u7c7b\u522b', 'count']\n\nimport plotly.graph_objects as go\n##\nfig = px.bar(ry_count.head(20), y='\u4eba\u5458\u7c7b\u522b', text='count',x=\"count\", color='\u4eba\u5458\u7c7b\u522b')\n# Put bar total value above bars with 2 values of precision\nfig.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig.update_layout(uniformtext_minsize=8)\nfig.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\nfig","dfcaa542":"##\u4eba\u5458\u7c7b\u522b\u7edf\u8ba1\nry_count = age2.\u4eba\u5458\u7c7b\u522b.value_counts().reset_index()\nry_count.columns = ['\u4eba\u5458\u7c7b\u522b', 'count']\n\nimport plotly.graph_objects as go\n##\nfig = px.bar(ry_count.head(20), y='\u4eba\u5458\u7c7b\u522b', text='count',x=\"count\", color='\u4eba\u5458\u7c7b\u522b')\n# Put bar total value above bars with 2 values of precision\nfig.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig.update_layout(uniformtext_minsize=8)\nfig.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\nfig\nfig=px.pie(ry_count.head(10), values='count', names='\u4eba\u5458\u7c7b\u522b', \n       title='7-17\u5c81\u5c11\u5e74\u7684\u4eba\u5458\u7c7b\u522b\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig.update_traces(textposition='inside', textinfo='percent+label') ","25ff81bc":"fig=px.pie(ry_count.head(10), values='count', names='\u4eba\u5458\u7c7b\u522b', \n       title='7-17\u5c81\u5c11\u5e74\u7684\u4eba\u5458\u7c7b\u522b\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig.update_traces(textposition='inside', textinfo='percent+label') ","e8532caf":"##\u533b\u7597\u7c7b\u522b\u7edf\u8ba1\nyl_count = age2.\u533b\u7597\u7c7b\u522b.value_counts().reset_index()\nyl_count.columns = ['\u533b\u7597\u7c7b\u522b', 'count']\n\nimport plotly.graph_objects as go\n##\nfig = px.bar(yl_count.head(20), y='\u533b\u7597\u7c7b\u522b', text='count',x=\"count\", color='\u533b\u7597\u7c7b\u522b')\n# Put bar total value above bars with 2 values of precision\nfig.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig.update_layout(uniformtext_minsize=8)\nfig.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\nfig","2b2dcf17":"##\u533b\u7597\u7c7b\u522b\u7edf\u8ba1\nyl_count = age2.\u533b\u7597\u7c7b\u522b.value_counts().reset_index()\nyl_count.columns = ['\u533b\u7597\u7c7b\u522b', 'count']\n\nimport plotly.graph_objects as go\n##\nfig = px.bar(yl_count.head(20), y='\u533b\u7597\u7c7b\u522b', text='count',x=\"count\", color='\u533b\u7597\u7c7b\u522b')\n# Put bar total value above bars with 2 values of precision\nfig.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig.update_layout(uniformtext_minsize=8)\nfig.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\nfig\nfig=px.pie(yl_count.head(10), values='count', names='\u533b\u7597\u7c7b\u522b', \n       title='7-17\u5c81\u5c11\u5e74\u7684\u533b\u7597\u7c7b\u522b\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig.update_traces(textposition='inside', textinfo='percent+label') ","dddee623":"fig=px.pie(yl_count.head(10), values='count', names='\u533b\u7597\u7c7b\u522b', \n       title='7-17\u5c81\u5c11\u5e74\u7684\u533b\u7597\u7c7b\u522b\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig.update_traces(textposition='inside', textinfo='percent+label') ","736336bb":"##\u75be\u75c5\u7edf\u8ba1\njb_count = age2.\u8bca\u65ad\u540d\u79f0.value_counts().reset_index()\njb_count.columns = ['\u8bca\u65ad\u540d\u79f0', 'count']\n\nimport plotly.graph_objects as go\n##\nfig = px.bar(jb_count.head(20), y='\u8bca\u65ad\u540d\u79f0', text='count',x=\"count\", color='\u8bca\u65ad\u540d\u79f0')\n# Put bar total value above bars with 2 values of precision\nfig.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig.update_layout(uniformtext_minsize=8)\nfig.update_layout(xaxis_tickangle=0,height=550,width=800)\n# Rotate labels 45 degrees\nfig","7d6d268d":"##\u75be\u75c5\u7edf\u8ba1\njb_count = age2.\u8bca\u65ad\u540d\u79f0.value_counts().reset_index()\njb_count.columns = ['\u8bca\u65ad\u540d\u79f0', 'count']\n\nimport plotly.graph_objects as go\n##\nfig = px.bar(jb_count.head(20), y='\u8bca\u65ad\u540d\u79f0', text='count',x=\"count\", color='\u8bca\u65ad\u540d\u79f0')\n# Put bar total value above bars with 2 values of precision\nfig.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig.update_layout(uniformtext_minsize=8)\nfig.update_layout(xaxis_tickangle=0,height=550,width=800)\n# Rotate labels 45 degrees\nfig\nfig=px.pie(jb_count.head(15), values='count', names='\u8bca\u65ad\u540d\u79f0', \n       title='7-17\u5c81\u5c11\u5e74 \u8bca\u65ad\u540d\u79f0\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig.update_traces(textposition='inside', textinfo='percent+label') ","e57b73ef":"fig=px.pie(jb_count.head(15), values='count', names='\u8bca\u65ad\u540d\u79f0', \n       title='7-17\u5c81\u5c11\u5e74 \u8bca\u65ad\u540d\u79f0\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig.update_traces(textposition='inside', textinfo='percent+label') ","fea2d032":"## \u8857\u9053\u7edf\u8ba1\u7edf\u8ba1\njd_count = age2.\u8857\u9053.value_counts().reset_index()\njd_count.columns = ['\u8857\u9053', 'count']\n\nimport plotly.graph_objects as go\n##\nfig = px.bar(jd_count.head(20), y='\u8857\u9053', text='count',x=\"count\", color='\u8857\u9053',\n            color_discrete_sequence=px.colors.sequential.Jet)\n# Put bar total value above bars with 2 values of precision\nfig.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig.update_layout(uniformtext_minsize=8)\nfig.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\nfig","ffea86aa":"def plot_treemap1(col):\n    fig = px.treemap(age2, path=[\"\u8857\u9053\"], values=col, height=750,width=1050,\n                 title=col, color_discrete_sequence = px.colors.qualitative.D3)\n    fig.data[0].textinfo = 'label+text+value'\n    fig.show()\n    \ndef plot_treemap2(col):\n    fig = px.treemap(age2, path=[\"\u8bca\u65ad\u540d\u79f0\"], values=col, height=750,width=1050,\n                 title=col, color_discrete_sequence = px.colors.qualitative.Plotly)\n    fig.data[0].textinfo = 'label+text+value'\n    fig.show()   #https:\/\/baijiahao.baidu.com\/s?id=1713465946321449501&wfr=spider&for=pc\nplot_treemap1(\"\u603b\u8d39\u7528\");plot_treemap1(\"\u7edf\u7b79\u8d39\u7528\");plot_treemap1(\"\u81ea\u8d39\u8d39\u7528\");plot_treemap1(\"\u4f4f\u9662\u65f6\u95f4\")\nplot_treemap2(\"\u603b\u8d39\u7528\");plot_treemap2(\"\u7edf\u7b79\u8d39\u7528\");plot_treemap2(\"\u81ea\u8d39\u8d39\u7528\");plot_treemap2(\"\u4f4f\u9662\u65f6\u95f4\")","f0e31580":"plot_treemap1(\"\u603b\u8d39\u7528\");plot_treemap1(\"\u7edf\u7b79\u8d39\u7528\");plot_treemap1(\"\u81ea\u8d39\u8d39\u7528\");plot_treemap1(\"\u4f4f\u9662\u65f6\u95f4\")\nplot_treemap2(\"\u603b\u8d39\u7528\");plot_treemap2(\"\u7edf\u7b79\u8d39\u7528\");plot_treemap2(\"\u81ea\u8d39\u8d39\u7528\");plot_treemap2(\"\u4f4f\u9662\u65f6\u95f4\")","8ef60bbf":"age3=df[(df[\"\u5e74\u9f84\"]>=18)&(df[\"\u5e74\u9f84\"]<=28)]\nage3=age3.sort_values('\u603b\u8d39\u7528', ascending=False)[[\"\u8bca\u65ad\u540d\u79f0\",\"\u6027\u522b\",\"\u5e74\u9f84\",\"\u4eba\u5458\u7c7b\u522b\",\"\u533b\u7597\u7c7b\u522b\",\"\u673a\u6784\u7b49\u7ea7\",'\u8857\u9053', '\u603b\u8d39\u7528',\"\u7edf\u7b79\u8d39\u7528\",\"\u81ea\u8d39\u8d39\u7528\",'\u4f4f\u9662\u65f6\u95f4',\"\u8bc6\u522bID\"]]#[:10].style.background_gradient(cmap='Reds')","d361a853":"age3.describe()","d51a26a6":"age3.shape","bcf3df9c":"##1 \u6027\u522b\u7edf\u8ba1\nsex_count = age3.\u6027\u522b.value_counts().reset_index()\nsex_count.columns = ['\u6027\u522b', 'count']\n\nimport plotly.graph_objects as go\n##\nfig1 = px.bar(sex_count.head(20), y='\u6027\u522b', text='count',x=\"count\", color='\u6027\u522b')\n# Put bar total value above bars with 2 values of precision\nfig1.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig1.update_layout(uniformtext_minsize=8)\nfig1.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\n\nfig1\nfig2=px.pie(sex_count.head(10), values='count', names='\u6027\u522b', \n       title='18-28\u5c81\u9752\u6625\u671f \u6027\u522b\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Bluered,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig2.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig2.update_traces(textposition='inside', textinfo='percent+label')\n# fig1.show()\nfig2.show()","7fdec186":"##\u5e74\u9f84\u7edf\u8ba1\nage_count = age3.\u5e74\u9f84.value_counts().reset_index()\nage_count.columns = ['\u5e74\u9f84', 'count']\n#sex_count\nfig1=px.pie(age_count.head(10), values='count', names='\u5e74\u9f84', \n       title='18-28\u5c81\u9752\u6625\u671f\u7684\u5e74\u9f84\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig1.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig1.update_traces(textposition='inside', textinfo='percent+label') \n\nfig2 = px.scatter(age_count, \n                 y='count', x='\u5e74\u9f84', color='count', size='count', \n                 height=700, text='\u5e74\u9f84', \n                 title='18-28\u5c81\u9752\u6625\u671f\u7684\u5e74\u9f84\u5206\u5e03',\n                color_discrete_sequence=px.colors.sequential.Sunset)\nfig2.update_traces(textposition='top center')\nfig2.update_layout(showlegend=False)\nfig2.update_layout(xaxis_rangeslider_visible=True)\nfig2.update_layout(height=700,width=850)\n\n# fig1.show()\nfig2.show()","bcda392b":"##\u4eba\u5458\u7c7b\u522b\u7edf\u8ba1\nry_count = age3.\u4eba\u5458\u7c7b\u522b.value_counts().reset_index()\nry_count.columns = ['\u4eba\u5458\u7c7b\u522b', 'count']\n\nimport plotly.graph_objects as go\n##\nfig1 = px.bar(ry_count.head(20), y='\u4eba\u5458\u7c7b\u522b', text='count',x=\"count\", color='\u4eba\u5458\u7c7b\u522b')\n# Put bar total value above bars with 2 values of precision\nfig1.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig1.update_layout(uniformtext_minsize=8)\nfig1.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\n\n\nfig2=px.pie(ry_count.head(10), values='count', names='\u4eba\u5458\u7c7b\u522b', \n       title='18-28\u5c81\u9752\u6625\u671f\u7684\u4eba\u5458\u7c7b\u522b\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Bluered,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig2.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig2.update_traces(textposition='inside', textinfo='percent+label') \n\n# fig1.show()\nfig2","6cf663c7":"##\u533b\u7597\u7c7b\u522b\u7edf\u8ba1\nyl_count = age3.\u533b\u7597\u7c7b\u522b.value_counts().reset_index()\nyl_count.columns = ['\u533b\u7597\u7c7b\u522b', 'count']\n\nimport plotly.graph_objects as go\n##\nfig1 = px.bar(yl_count.head(20), y='\u533b\u7597\u7c7b\u522b', text='count',x=\"count\", color='\u533b\u7597\u7c7b\u522b',\n             color_discrete_sequence=px.colors.sequential.Hot)\n# Put bar total value above bars with 2 values of precision\nfig1.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig1.update_layout(uniformtext_minsize=8)\nfig1.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\n\nfig2=px.pie(yl_count.head(10), values='count', names='\u533b\u7597\u7c7b\u522b', \n       title='18-28\u5c81\u9752\u6625\u671f\u7684\u533b\u7597\u7c7b\u522b\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig2.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig2.update_traces(textposition='inside', textinfo='percent+label')\n\nfig1","7b144881":"##\u75be\u75c5\u7edf\u8ba1\njb_count = age3.\u8bca\u65ad\u540d\u79f0.value_counts().reset_index()\njb_count.columns = ['\u8bca\u65ad\u540d\u79f0', 'count']\n\nimport plotly.graph_objects as go\n##\nfig1= px.bar(jb_count.head(20), y='\u8bca\u65ad\u540d\u79f0', text='count',x=\"count\", color='\u8bca\u65ad\u540d\u79f0')\n# Put bar total value above bars with 2 values of precision\nfig1.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig1.update_layout(uniformtext_minsize=8)\nfig1.update_layout(xaxis_tickangle=0,height=550,width=800)\n# Rotate labels 45 degrees\n\nfig2=px.pie(jb_count.head(10), values='count', names='\u8bca\u65ad\u540d\u79f0', \n       title='18-28\u5c81\u9752\u6625\u671f \u8bca\u65ad\u540d\u79f0\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig2.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig2.update_traces(textposition='inside', textinfo='percent+label') \nfig1\n# fig2","e6f1cb8b":"## \u8857\u9053\u7edf\u8ba1\u7edf\u8ba1\njd_count = age3.\u8857\u9053.value_counts().reset_index()\njd_count.columns = ['\u8857\u9053', 'count']\n\nimport plotly.graph_objects as go\n##\nfig1 = px.bar(jd_count.head(20), y='\u8857\u9053', text='count',x=\"count\", color='\u8857\u9053',\n            color_discrete_sequence=px.colors.sequential.Jet)\n# Put bar total value above bars with 2 values of precision\nfig1.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig1.update_layout(uniformtext_minsize=8)\nfig1.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\n\nfig2=px.pie(jd_count.head(10), values='count', names='\u8857\u9053', \n       title='18-28\u5c81\u9752\u6625\u671f \u8857\u9053\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig2.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig2.update_traces(textposition='inside', textinfo='percent+label') \nfig1\nfig2","8900527c":"def plot_treemap1(col):\n    fig = px.treemap(age3, path=[\"\u8857\u9053\"], values=col, height=750,width=1050,\n                 title=col, color_discrete_sequence = px.colors.qualitative.D3)\n    fig.data[0].textinfo = 'label+text+value'\n    fig.show()\n    \ndef plot_treemap2(col):\n    fig = px.treemap(age3, path=[\"\u8bca\u65ad\u540d\u79f0\"], values=col, height=750,width=1050,\n                 title=col, color_discrete_sequence = px.colors.qualitative.Plotly)\n    fig.data[0].textinfo = 'label+text+value'\n    fig.show()   #https:\/\/baijiahao.baidu.com\/s?id=1713465946321449501&wfr=spider&for=pc\nplot_treemap1(\"\u603b\u8d39\u7528\");plot_treemap1(\"\u7edf\u7b79\u8d39\u7528\");plot_treemap1(\"\u81ea\u8d39\u8d39\u7528\");plot_treemap1(\"\u4f4f\u9662\u65f6\u95f4\")\nplot_treemap2(\"\u603b\u8d39\u7528\");plot_treemap2(\"\u7edf\u7b79\u8d39\u7528\");plot_treemap2(\"\u81ea\u8d39\u8d39\u7528\");plot_treemap2(\"\u4f4f\u9662\u65f6\u95f4\")","fee98f75":"age4=df[(df[\"\u5e74\u9f84\"]>=29)&(df[\"\u5e74\u9f84\"]<=40)]\nage4=age4.sort_values('\u603b\u8d39\u7528', ascending=False)[[\"\u8bca\u65ad\u540d\u79f0\",\"\u6027\u522b\",\"\u5e74\u9f84\",\"\u4eba\u5458\u7c7b\u522b\",\"\u533b\u7597\u7c7b\u522b\",\"\u673a\u6784\u7b49\u7ea7\",'\u8857\u9053', '\u603b\u8d39\u7528',\"\u7edf\u7b79\u8d39\u7528\",\"\u81ea\u8d39\u8d39\u7528\",'\u4f4f\u9662\u65f6\u95f4',\"\u8bc6\u522bID\"]]#[:10].style.background_gradient(cmap='Reds')","44556b66":"age4.describe()","1f445a32":"age4.shape","00b3ec56":"##1 \u6027\u522b\u7edf\u8ba1\nsex_count = age4.\u6027\u522b.value_counts().reset_index()\nsex_count.columns = ['\u6027\u522b', 'count']\n\nimport plotly.graph_objects as go\n##\nfig1 = px.bar(sex_count.head(20), y='\u6027\u522b', text='count',x=\"count\", color='\u6027\u522b')\n# Put bar total value above bars with 2 values of precision\nfig1.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig1.update_layout(uniformtext_minsize=8)\nfig1.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\n\nfig1\nfig2=px.pie(sex_count.head(10), values='count', names='\u6027\u522b', \n       title='29-40\u5c81\u6210\u719f\u671f \u6027\u522b\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Bluered,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig2.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig2.update_traces(textposition='inside', textinfo='percent+label')\nfig1.show()\nfig2.show()","8afc139e":"##\u5e74\u9f84\u7edf\u8ba1\nage_count = age4.\u5e74\u9f84.value_counts().reset_index()\nage_count.columns = ['\u5e74\u9f84', 'count']\n#sex_count\nfig1=px.pie(age_count.head(10), values='count', names='\u5e74\u9f84', \n       title='29-40\u5c81\u6210\u719f\u671f\u7684\u5e74\u9f84\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig1.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig1.update_traces(textposition='inside', textinfo='percent+label') \n\nfig2 = px.scatter(age_count, \n                 y='count', x='\u5e74\u9f84', color='count', size='count', \n                 height=700, text='\u5e74\u9f84', \n                 title='29-40\u5c81\u6210\u719f\u671f\u7684\u5e74\u9f84\u5206\u5e03',\n                color_discrete_sequence=px.colors.sequential.Sunset)\nfig2.update_traces(textposition='top center')\nfig2.update_layout(showlegend=False)\nfig2.update_layout(xaxis_rangeslider_visible=True)\nfig2.update_layout(height=700,width=850)\n\nfig1.show()\nfig2.show()","5ec74888":"##\u4eba\u5458\u7c7b\u522b\u7edf\u8ba1\nry_count = age4.\u4eba\u5458\u7c7b\u522b.value_counts().reset_index()\nry_count.columns = ['\u4eba\u5458\u7c7b\u522b', 'count']\n\nimport plotly.graph_objects as go\n##\nfig1 = px.bar(ry_count.head(20), y='\u4eba\u5458\u7c7b\u522b', text='count',x=\"count\", color='\u4eba\u5458\u7c7b\u522b')\n# Put bar total value above bars with 2 values of precision\nfig1.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig1.update_layout(uniformtext_minsize=8)\nfig1.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\n\n\nfig2=px.pie(ry_count.head(10), values='count', names='\u4eba\u5458\u7c7b\u522b', \n       title='29-40\u5c81\u6210\u719f\u671f\u7684\u4eba\u5458\u7c7b\u522b\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Bluered,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig2.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig2.update_traces(textposition='inside', textinfo='percent+label') \n\nfig1.show()\nfig2.show()","e0941b4f":"##\u533b\u7597\u7c7b\u522b\u7edf\u8ba1\nyl_count = age4.\u533b\u7597\u7c7b\u522b.value_counts().reset_index()\nyl_count.columns = ['\u533b\u7597\u7c7b\u522b', 'count']\n\nimport plotly.graph_objects as go\n##\nfig1 = px.bar(yl_count.head(20), y='\u533b\u7597\u7c7b\u522b', text='count',x=\"count\", color='\u533b\u7597\u7c7b\u522b',\n             color_discrete_sequence=px.colors.sequential.Hot)\n# Put bar total value above bars with 2 values of precision\nfig1.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig1.update_layout(uniformtext_minsize=8)\nfig1.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\n\nfig2=px.pie(yl_count.head(10), values='count', names='\u533b\u7597\u7c7b\u522b', \n       title='29-40\u5c81\u6210\u719f\u671f\u7684\u533b\u7597\u7c7b\u522b\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig2.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig2.update_traces(textposition='inside', textinfo='percent+label')\n\nfig1.show()\nfig2.show()","e32e0a58":"##\u75be\u75c5\u7edf\u8ba1\njb_count = age4.\u8bca\u65ad\u540d\u79f0.value_counts().reset_index()\njb_count.columns = ['\u8bca\u65ad\u540d\u79f0', 'count']\n\nimport plotly.graph_objects as go\n##\nfig1= px.bar(jb_count.head(20), y='\u8bca\u65ad\u540d\u79f0', text='count',x=\"count\", color='\u8bca\u65ad\u540d\u79f0')\n# Put bar total value above bars with 2 values of precision\nfig1.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig1.update_layout(uniformtext_minsize=8)\nfig1.update_layout(xaxis_tickangle=0,height=550,width=800)\n# Rotate labels 45 degrees\n\nfig2=px.pie(jb_count.head(10), values='count', names='\u8bca\u65ad\u540d\u79f0', \n       title='29-40\u5c81\u6210\u719f\u671f \u8bca\u65ad\u540d\u79f0\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig2.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig2.update_traces(textposition='inside', textinfo='percent+label') \nfig1.show()\nfig2.show()","852fe8da":"## \u8857\u9053\u7edf\u8ba1\u7edf\u8ba1\njd_count = age4.\u8857\u9053.value_counts().reset_index()\njd_count.columns = ['\u8857\u9053', 'count']\n\nimport plotly.graph_objects as go\n##\nfig1 = px.bar(jd_count.head(20), y='\u8857\u9053', text='count',x=\"count\", color='\u8857\u9053')\n# Put bar total value above bars with 2 values of precision\nfig1.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig1.update_layout(uniformtext_minsize=8)\nfig1.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\n\nfig2=px.pie(jd_count.head(10), values='count', names='\u8857\u9053', \n       title='29-40\u5c81\u6210\u719f\u671f \u8857\u9053\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig2.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig2.update_traces(textposition='inside', textinfo='percent+label') \nfig1.show()\nfig2.show()","81848266":"def plot_treemap1(col):\n    fig = px.treemap(age4, path=[\"\u8857\u9053\"], values=col, height=750,width=1050,\n                 title=col, color_discrete_sequence = px.colors.qualitative.T10)\n    fig.data[0].textinfo = 'label+text+value'\n    fig.show()\n    \ndef plot_treemap2(col):\n    fig = px.treemap(age4, path=[\"\u8bca\u65ad\u540d\u79f0\"], values=col, height=750,width=1050,\n                 title=col, color_discrete_sequence = px.colors.qualitative.Set3)\n    fig.data[0].textinfo = 'label+text+value'\n    fig.show()   #https:\/\/baijiahao.baidu.com\/s?id=1713465946321449501&wfr=spider&for=pc\nplot_treemap1(\"\u603b\u8d39\u7528\");plot_treemap1(\"\u7edf\u7b79\u8d39\u7528\");plot_treemap1(\"\u81ea\u8d39\u8d39\u7528\");plot_treemap1(\"\u4f4f\u9662\u65f6\u95f4\")\nplot_treemap2(\"\u603b\u8d39\u7528\");plot_treemap2(\"\u7edf\u7b79\u8d39\u7528\");plot_treemap2(\"\u81ea\u8d39\u8d39\u7528\");plot_treemap2(\"\u4f4f\u9662\u65f6\u95f4\")","0408c75c":"age5=df[(df[\"\u5e74\u9f84\"]>=41)&(df[\"\u5e74\u9f84\"]<=65)]\nage5=age5.sort_values('\u603b\u8d39\u7528', ascending=False)[[\"\u8bca\u65ad\u540d\u79f0\",\"\u6027\u522b\",\"\u5e74\u9f84\",\"\u4eba\u5458\u7c7b\u522b\",\"\u533b\u7597\u7c7b\u522b\",\"\u673a\u6784\u7b49\u7ea7\",'\u8857\u9053', '\u603b\u8d39\u7528',\"\u7edf\u7b79\u8d39\u7528\",\"\u81ea\u8d39\u8d39\u7528\",'\u4f4f\u9662\u65f6\u95f4',\"\u8bc6\u522bID\"]]#[:10].style.background_gradient(cmap='Reds')","9adaae7c":"age5.describe()","3d87c179":"age5.shape","23bcc392":"##1 \u6027\u522b\u7edf\u8ba1\nsex_count = age5.\u6027\u522b.value_counts().reset_index()\nsex_count.columns = ['\u6027\u522b', 'count']\n\nimport plotly.graph_objects as go\n##\nfig1 = px.bar(sex_count.head(20), y='\u6027\u522b', text='count',x=\"count\", color='\u6027\u522b')\n# Put bar total value above bars with 2 values of precision\nfig1.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig1.update_layout(uniformtext_minsize=8)\nfig1.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\n\n#\nfig2=px.pie(sex_count.head(10), values='count', names='\u6027\u522b', \n       title='41-65\u5c81\u4e2d\u5e74\u671f \u6027\u522b\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Bluered,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig2.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig2.update_traces(textposition='inside', textinfo='percent+label')\n\n#\nfig3 = px.scatter(sex_count, \n                 y='count', x='\u6027\u522b', color='count', size='count', \n                 height=700, text='\u6027\u522b', \n                 title='41-65\u5c81\u4e2d\u5e74\u671f\u7684\u6027\u522b\u5206\u5e03')\nfig3.update_traces(textposition='top center')\nfig3.update_layout(showlegend=False)\nfig3.update_layout(xaxis_rangeslider_visible=True)\nfig3.update_layout(height=700,width=850)\n\n\n\nfig1.show()\nfig2.show()\nfig3.show()\n","e05644c4":"##\u5e74\u9f84\u7edf\u8ba1\nage_count = age5.\u5e74\u9f84.value_counts().reset_index()\nage_count.columns = ['\u5e74\u9f84', 'count']\n#sex_count\nfig1=px.pie(age_count.head(10), values='count', names='\u5e74\u9f84', \n       title='41-65\u5c81\u4e2d\u5e74\u671f\u7684\u5e74\u9f84\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig1.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig1.update_traces(textposition='inside', textinfo='percent+label') \n\nfig2 = px.scatter(age_count, \n                 y='count', x='\u5e74\u9f84', color='count', size='count', \n                 height=700, text='\u5e74\u9f84', \n                 title='41-65\u5c81\u4e2d\u5e74\u671f\u7684\u5e74\u9f84\u5206\u5e03',\n                color_discrete_sequence=px.colors.sequential.Plotly3)\nfig2.update_traces(textposition='top center')\nfig2.update_layout(showlegend=False)\nfig2.update_layout(xaxis_rangeslider_visible=True)\nfig2.update_layout(height=700,width=850)\n\nfig1.show()\nfig2.show()","15406995":"##\u4eba\u5458\u7c7b\u522b\u7edf\u8ba1\nry_count = age5.\u4eba\u5458\u7c7b\u522b.value_counts().reset_index()\nry_count.columns = ['\u4eba\u5458\u7c7b\u522b', 'count']\n\nimport plotly.graph_objects as go\n##\nfig1 = px.bar(ry_count.head(20), y='\u4eba\u5458\u7c7b\u522b', text='count',x=\"count\", color='\u4eba\u5458\u7c7b\u522b')\n# Put bar total value above bars with 2 values of precision\nfig1.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig1.update_layout(uniformtext_minsize=8)\nfig1.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\n\n\nfig2=px.pie(ry_count.head(10), values='count', names='\u4eba\u5458\u7c7b\u522b', \n       title='41-65\u5c81\u4e2d\u5e74\u671f\u7684\u4eba\u5458\u7c7b\u522b\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Bluered,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig2.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig2.update_traces(textposition='inside', textinfo='percent+label') \n\nfig1.show()\nfig2.show()","c45e7829":"##\u533b\u7597\u7c7b\u522b\u7edf\u8ba1\nyl_count = age5.\u533b\u7597\u7c7b\u522b.value_counts().reset_index()\nyl_count.columns = ['\u533b\u7597\u7c7b\u522b', 'count']\n\nimport plotly.graph_objects as go\n##\nfig1 = px.bar(yl_count.head(20), y='\u533b\u7597\u7c7b\u522b', text='count',x=\"count\", color='\u533b\u7597\u7c7b\u522b',\n             color_discrete_sequence=px.colors.sequential.Hot)\n# Put bar total value above bars with 2 values of precision\nfig1.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig1.update_layout(uniformtext_minsize=8)\nfig1.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\n\nfig2=px.pie(yl_count.head(10), values='count', names='\u533b\u7597\u7c7b\u522b', \n       title='41-65\u5c81\u4e2d\u5e74\u671f\u7684\u533b\u7597\u7c7b\u522b\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig2.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig2.update_traces(textposition='inside', textinfo='percent+label')\n\nfig1.show()\nfig2.show()","ef9dfdb6":"##\u75be\u75c5\u7edf\u8ba1\njb_count = age5.\u8bca\u65ad\u540d\u79f0.value_counts().reset_index()\njb_count.columns = ['\u8bca\u65ad\u540d\u79f0', 'count']\n\nimport plotly.graph_objects as go\n##\nfig1= px.bar(jb_count.head(20), y='\u8bca\u65ad\u540d\u79f0', text='count',x=\"count\", color='\u8bca\u65ad\u540d\u79f0')\n# Put bar total value above bars with 2 values of precision\nfig1.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig1.update_layout(uniformtext_minsize=8)\nfig1.update_layout(xaxis_tickangle=0,height=550,width=800)\n# Rotate labels 45 degrees\n\nfig2=px.pie(jb_count.tail(10), values='count', names='\u8bca\u65ad\u540d\u79f0', \n       title='41-65\u5c81\u4e2d\u5e74\u671f \u8bca\u65ad\u540d\u79f0\u5206\u5e03(Tail10)', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig2.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig2.update_traces(textposition='inside', textinfo='percent+label') \nfig1.show()\nfig2.show()","f8963800":"## \u8857\u9053\u7edf\u8ba1\u7edf\u8ba1\njd_count = age5.\u8857\u9053.value_counts().reset_index()\njd_count.columns = ['\u8857\u9053', 'count']\n\nimport plotly.graph_objects as go\n##\nfig1 = px.bar(jd_count.head(20), y='\u8857\u9053', text='count',x=\"count\", color='\u8857\u9053')\n# Put bar total value above bars with 2 values of precision\nfig1.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig1.update_layout(uniformtext_minsize=8)\nfig1.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\n\nfig2=px.pie(jd_count.head(10), values='count', names='\u8857\u9053', \n       title='41-65\u5c81\u4e2d\u5e74\u671f \u8857\u9053\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig2.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig2.update_traces(textposition='inside', textinfo='percent+label') \nfig1.show()\nfig2.show()","85a97737":"def plot_treemap1(col):\n    fig = px.treemap(age5, path=[\"\u8857\u9053\"], values=col, height=750,width=1050,\n                 title=col, color_discrete_sequence = px.colors.qualitative.Plotly)\n    fig.data[0].textinfo = 'label+text+value'\n    fig.show()\n    \ndef plot_treemap2(col):\n    fig = px.treemap(age5, path=[\"\u8bca\u65ad\u540d\u79f0\"], values=col, height=750,width=1050,\n                 title=col, color_discrete_sequence = px.colors.qualitative.G10)\n    fig.data[0].textinfo = 'label+text+value'\n    fig.show()   #https:\/\/baijiahao.baidu.com\/s?id=1713465946321449501&wfr=spider&for=pc\nplot_treemap1(\"\u603b\u8d39\u7528\");plot_treemap1(\"\u7edf\u7b79\u8d39\u7528\");plot_treemap1(\"\u81ea\u8d39\u8d39\u7528\");plot_treemap1(\"\u4f4f\u9662\u65f6\u95f4\")\nplot_treemap2(\"\u603b\u8d39\u7528\");plot_treemap2(\"\u7edf\u7b79\u8d39\u7528\");plot_treemap2(\"\u81ea\u8d39\u8d39\u7528\");plot_treemap2(\"\u4f4f\u9662\u65f6\u95f4\")","f4b9fc48":"age6=df[(df[\"\u5e74\u9f84\"]>=66)&(df[\"\u5e74\u9f84\"]<=100)]\nage6=age6.sort_values('\u603b\u8d39\u7528', ascending=False)[[\"\u8bca\u65ad\u540d\u79f0\",\"\u6027\u522b\",\"\u5e74\u9f84\",\"\u4eba\u5458\u7c7b\u522b\",\"\u533b\u7597\u7c7b\u522b\",\"\u673a\u6784\u7b49\u7ea7\",'\u8857\u9053', '\u603b\u8d39\u7528',\"\u7edf\u7b79\u8d39\u7528\",\"\u81ea\u8d39\u8d39\u7528\",'\u4f4f\u9662\u65f6\u95f4',\"\u8bc6\u522bID\"]]#[:10].style.background_gradient(cmap='Reds')","63a3af34":"age6.describe()","f05c9683":"age6.shape","e7002c62":"##1 \u6027\u522b\u7edf\u8ba1\nsex_count = age6.\u6027\u522b.value_counts().reset_index()\nsex_count.columns = ['\u6027\u522b', 'count']\n\nimport plotly.graph_objects as go\n##\nfig1 = px.bar(sex_count.head(20), y='\u6027\u522b', text='count',x=\"count\", color='\u6027\u522b')\n# Put bar total value above bars with 2 values of precision\nfig1.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig1.update_layout(uniformtext_minsize=8)\nfig1.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\n\n#\nfig2=px.pie(sex_count.head(10), values='count', names='\u6027\u522b', \n       title='66-100\u5c81\u8001\u5e74\u671f \u6027\u522b\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Bluered,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig2.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig2.update_traces(textposition='inside', textinfo='percent+label')\n\n#\nfig3 = px.scatter(sex_count, \n                 y='count', x='\u6027\u522b', color='count', size='count', \n                 height=700, text='\u6027\u522b', \n                 title='66-100\u5c81\u8001\u5e74\u671f \u6027\u522b\u5206\u5e03')\nfig3.update_traces(textposition='top center')\nfig3.update_layout(showlegend=False)\nfig3.update_layout(xaxis_rangeslider_visible=True)\nfig3.update_layout(height=700,width=850)\n\n\n\nfig1.show()\nfig2.show()\nfig3.show()","da3aae1d":"##\u5e74\u9f84\u7edf\u8ba1\nage_count = age6.\u5e74\u9f84.value_counts().reset_index()\nage_count.columns = ['\u5e74\u9f84', 'count']\n#sex_count\nfig1=px.pie(age_count.head(10), values='count', names='\u5e74\u9f84', \n       title='66-100\u5c81\u8001\u5e74\u671f\u7684\u5e74\u9f84\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig1.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig1.update_traces(textposition='inside', textinfo='percent+label') \n\nfig2 = px.scatter(age_count, \n                 y='count', x='\u5e74\u9f84', color='count', size='count', \n                 height=700, text='\u5e74\u9f84', \n                 title='66-100\u5c81\u8001\u5e74\u671f\u7684\u5e74\u9f84\u5206\u5e03',\n                color_discrete_sequence=px.colors.sequential.Plotly3)\nfig2.update_traces(textposition='top center')\nfig2.update_layout(showlegend=False)\nfig2.update_layout(xaxis_rangeslider_visible=True)\nfig2.update_layout(height=700,width=850)\n\nfig1.show()\nfig2.show()","2a557e0e":"##\u4eba\u5458\u7c7b\u522b\u7edf\u8ba1\nry_count = age6.\u4eba\u5458\u7c7b\u522b.value_counts().reset_index()\nry_count.columns = ['\u4eba\u5458\u7c7b\u522b', 'count']\n\nimport plotly.graph_objects as go\n##\nfig1 = px.bar(ry_count.head(20), y='\u4eba\u5458\u7c7b\u522b', text='count',x=\"count\", color='\u4eba\u5458\u7c7b\u522b')\n# Put bar total value above bars with 2 values of precision\nfig1.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig1.update_layout(uniformtext_minsize=8)\nfig1.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\n\n\nfig2=px.pie(ry_count.head(10), values='count', names='\u4eba\u5458\u7c7b\u522b', \n       title='66-100\u5c81\u8001\u5e74\u671f\u671f\u7684\u4eba\u5458\u7c7b\u522b\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Bluered,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig2.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig2.update_traces(textposition='inside', textinfo='percent+label') \n\nfig1.show()\nfig2.show()","c432882c":"##\u533b\u7597\u7c7b\u522b\u7edf\u8ba1\nyl_count = age6.\u533b\u7597\u7c7b\u522b.value_counts().reset_index()\nyl_count.columns = ['\u533b\u7597\u7c7b\u522b', 'count']\n\nimport plotly.graph_objects as go\n##\nfig1 = px.bar(yl_count.head(20), y='\u533b\u7597\u7c7b\u522b', text='count',x=\"count\", color='\u533b\u7597\u7c7b\u522b',\n             color_discrete_sequence=px.colors.sequential.Hot)\n# Put bar total value above bars with 2 values of precision\nfig1.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig1.update_layout(uniformtext_minsize=8)\nfig1.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\n\nfig2=px.pie(yl_count.head(10), values='count', names='\u533b\u7597\u7c7b\u522b', \n       title='66-100\u5c81\u8001\u5e74\u671f\u671f\u7684\u533b\u7597\u7c7b\u522b\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig2.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig2.update_traces(textposition='inside', textinfo='percent+label')\n\nfig1.show()\nfig2.show()","4c3b4e0b":"##\u75be\u75c5\u7edf\u8ba1\njb_count = age6.\u8bca\u65ad\u540d\u79f0.value_counts().reset_index()\njb_count.columns = ['\u8bca\u65ad\u540d\u79f0', 'count']\n\nimport plotly.graph_objects as go\n##\nfig1= px.bar(jb_count.head(20), y='\u8bca\u65ad\u540d\u79f0', text='count',x=\"count\", color='\u8bca\u65ad\u540d\u79f0')\n# Put bar total value above bars with 2 values of precision\nfig1.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig1.update_layout(uniformtext_minsize=8)\nfig1.update_layout(xaxis_tickangle=0,height=550,width=850)\n# Rotate labels 45 degrees\n\nfig2=px.pie(jb_count.head(10), values='count', names='\u8bca\u65ad\u540d\u79f0', \n       title='66-100\u5c81\u8001\u5e74\u671f \u8bca\u65ad\u540d\u79f0\u5206\u5e03(Top10)', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig2.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig2.update_traces(textposition='inside', textinfo='percent+label') \nfig1.show()\nfig2.show()","bf0dade0":"## \u8857\u9053\u7edf\u8ba1\u7edf\u8ba1\njd_count = age6.\u8857\u9053.value_counts().reset_index()\njd_count.columns = ['\u8857\u9053', 'count']\n\nimport plotly.graph_objects as go\n##\nfig1 = px.bar(jd_count.head(20), y='\u8857\u9053', text='count',x=\"count\", color='\u8857\u9053')\n# Put bar total value above bars with 2 values of precision\nfig1.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig1.update_layout(uniformtext_minsize=8)\nfig1.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\n\nfig2=px.pie(jd_count.head(10), values='count', names='\u8857\u9053', \n       title='66-100\u5c81\u4e2d\u5e74\u671f \u8857\u9053\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig2.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig2.update_traces(textposition='inside', textinfo='percent+label') \nfig1.show()\nfig2.show()","4b1896b8":"def plot_treemap1(col):\n    fig = px.treemap(age6, path=[\"\u8857\u9053\"], values=col, height=750,width=1050,\n                 title=col, color_discrete_sequence = px.colors.qualitative.Plotly)\n    fig.data[0].textinfo = 'label+text+value'\n    fig.show()\n    \ndef plot_treemap2(col):\n    fig = px.treemap(age6, path=[\"\u8bca\u65ad\u540d\u79f0\"], values=col, height=750,width=1050,\n                 title=col, color_discrete_sequence = px.colors.qualitative.G10)\n    fig.data[0].textinfo = 'label+text+value'\n    fig.show()   #https:\/\/baijiahao.baidu.com\/s?id=1713465946321449501&wfr=spider&for=pc\nplot_treemap1(\"\u603b\u8d39\u7528\");plot_treemap1(\"\u7edf\u7b79\u8d39\u7528\");plot_treemap1(\"\u81ea\u8d39\u8d39\u7528\");plot_treemap1(\"\u4f4f\u9662\u65f6\u95f4\")\nplot_treemap2(\"\u603b\u8d39\u7528\");plot_treemap2(\"\u7edf\u7b79\u8d39\u7528\");plot_treemap2(\"\u81ea\u8d39\u8d39\u7528\");plot_treemap2(\"\u4f4f\u9662\u65f6\u95f4\")","99979fe1":"age7=df[df[\"\u5e74\u9f84\"]>100]\nage7=age7.sort_values('\u603b\u8d39\u7528', ascending=False)[[\"\u8bca\u65ad\u540d\u79f0\",\"\u6027\u522b\",\"\u5e74\u9f84\",\"\u4eba\u5458\u7c7b\u522b\",\"\u533b\u7597\u7c7b\u522b\",\"\u673a\u6784\u7b49\u7ea7\",'\u8857\u9053', '\u603b\u8d39\u7528',\"\u7edf\u7b79\u8d39\u7528\",\"\u81ea\u8d39\u8d39\u7528\",'\u4f4f\u9662\u65f6\u95f4',\"\u8bc6\u522bID\"]]#[:10].style.background_gradient(cmap='Reds')","29da5a9e":"age7.describe()","5532f20d":"age7.shape","bf49a3f4":"##1 \u6027\u522b\u7edf\u8ba1\nsex_count = age7.\u6027\u522b.value_counts().reset_index()\nsex_count.columns = ['\u6027\u522b', 'count']\n\nimport plotly.graph_objects as go\n##\nfig1 = px.bar(sex_count.head(20), y='\u6027\u522b', text='count',x=\"count\", color='\u6027\u522b')\n# Put bar total value above bars with 2 values of precision\nfig1.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig1.update_layout(uniformtext_minsize=8)\nfig1.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\n\n#\nfig2=px.pie(sex_count.head(10), values='count', names='\u6027\u522b', \n       title='100\u5c81\u4ee5\u4e0a\u957f\u5bff\u671f \u6027\u522b\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Bluered,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig2.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig2.update_traces(textposition='inside', textinfo='percent+label')\n\n#\nfig3 = px.scatter(sex_count, \n                 y='count', x='\u6027\u522b', color='count', size='count', \n                 height=700, text='\u6027\u522b', \n                 title='100\u5c81\u4ee5\u4e0a\u957f\u5bff\u671f \u6027\u522b\u5206\u5e03')\nfig3.update_traces(textposition='top center')\nfig3.update_layout(showlegend=False)\nfig3.update_layout(xaxis_rangeslider_visible=True)\nfig3.update_layout(height=700,width=850)\n\n\n\nfig1.show()\nfig2.show()\nfig3.show()","d21b7fbd":"##\u5e74\u9f84\u7edf\u8ba1\nage_count = age7.\u5e74\u9f84.value_counts().reset_index()\nage_count.columns = ['\u5e74\u9f84', 'count']\n#sex_count\nfig1=px.pie(age_count.head(10), values='count', names='\u5e74\u9f84', \n       title='100\u5c81\u4ee5\u4e0a\u957f\u5bff\u671f\u7684\u5e74\u9f84\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig1.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig1.update_traces(textposition='inside', textinfo='percent+label') \n\nfig2 = px.scatter(age_count, \n                 y='count', x='\u5e74\u9f84', color='count', size='count', \n                 height=700, text='\u5e74\u9f84', \n                 title='100\u5c81\u4ee5\u4e0a\u957f\u5bff\u671f\u7684\u5e74\u9f84\u5206\u5e03',\n                color_discrete_sequence=px.colors.sequential.Plotly3)\nfig2.update_traces(textposition='top center')\nfig2.update_layout(showlegend=False)\nfig2.update_layout(xaxis_rangeslider_visible=True)\nfig2.update_layout(height=700,width=850)\n\nfig1.show()\nfig2.show()","e84844e7":"##\u4eba\u5458\u7c7b\u522b\u7edf\u8ba1\nry_count = age7.\u4eba\u5458\u7c7b\u522b.value_counts().reset_index()\nry_count.columns = ['\u4eba\u5458\u7c7b\u522b', 'count']\n\nimport plotly.graph_objects as go\n##\nfig1 = px.bar(ry_count.head(20), y='\u4eba\u5458\u7c7b\u522b', text='count',x=\"count\", color='\u4eba\u5458\u7c7b\u522b')\n# Put bar total value above bars with 2 values of precision\nfig1.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig1.update_layout(uniformtext_minsize=8)\nfig1.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\n\n\nfig2=px.pie(ry_count.head(10), values='count', names='\u4eba\u5458\u7c7b\u522b', \n       title='100\u5c81\u4ee5\u4e0a\u957f\u5bff\u671f\u7684\u4eba\u5458\u7c7b\u522b\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Bluered,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig2.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig2.update_traces(textposition='inside', textinfo='percent+label') \n\nfig1.show()\nfig2.show()","c114f637":"##\u533b\u7597\u7c7b\u522b\u7edf\u8ba1\nyl_count = age7.\u533b\u7597\u7c7b\u522b.value_counts().reset_index()\nyl_count.columns = ['\u533b\u7597\u7c7b\u522b', 'count']\n\nimport plotly.graph_objects as go\n##\nfig1 = px.bar(yl_count.head(20), y='\u533b\u7597\u7c7b\u522b', text='count',x=\"count\", color='\u533b\u7597\u7c7b\u522b',\n             color_discrete_sequence=px.colors.sequential.Hot)\n# Put bar total value above bars with 2 values of precision\nfig1.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig1.update_layout(uniformtext_minsize=8)\nfig1.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\n\nfig2=px.pie(yl_count.head(10), values='count', names='\u533b\u7597\u7c7b\u522b', \n       title='100\u5c81\u4ee5\u4e0a\u957f\u5bff\u671f\u7684\u533b\u7597\u7c7b\u522b\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig2.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig2.update_traces(textposition='inside', textinfo='percent+label')\n\nfig1.show()\nfig2.show()","fd24f72c":"##\u75be\u75c5\u7edf\u8ba1\njb_count = age7.\u8bca\u65ad\u540d\u79f0.value_counts().reset_index()\njb_count.columns = ['\u8bca\u65ad\u540d\u79f0', 'count']\n\nimport plotly.graph_objects as go\n##\nfig1= px.bar(jb_count.head(20), y='\u8bca\u65ad\u540d\u79f0', text='count',x=\"count\", color='\u8bca\u65ad\u540d\u79f0')\n# Put bar total value above bars with 2 values of precision\nfig1.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig1.update_layout(uniformtext_minsize=8)\nfig1.update_layout(xaxis_tickangle=0,height=550,width=850)\n# Rotate labels 45 degrees\n\nfig2=px.pie(jb_count.tail(10), values='count', names='\u8bca\u65ad\u540d\u79f0', \n       title='100\u5c81\u4ee5\u4e0a\u957f\u5bff\u671f \u8bca\u65ad\u540d\u79f0\u5206\u5e03(Tail10)', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig2.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig2.update_traces(textposition='inside', textinfo='percent+label') \nfig1.show()\nfig2.show()","7f6f0d09":"## \u8857\u9053\u7edf\u8ba1\u7edf\u8ba1\njd_count = age7.\u8857\u9053.value_counts().reset_index()\njd_count.columns = ['\u8857\u9053', 'count']\n\nimport plotly.graph_objects as go\n##\nfig1 = px.bar(jd_count, y='\u8857\u9053', text='count',x=\"count\", color='\u8857\u9053')\n# Put bar total value above bars with 2 values of precision\nfig1.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig1.update_layout(uniformtext_minsize=8)\nfig1.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\n\nfig2=px.pie(jd_count.head(10), values='count', names='\u8857\u9053', \n       title='100\u5c81\u4ee5\u4e0a\u957f\u5bff\u671f \u8857\u9053\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig2.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig2.update_traces(textposition='inside', textinfo='percent+label') \nfig1.show()\nfig2.show()","7a65f588":"def plot_treemap1(col):\n    fig = px.treemap(age7, path=[\"\u8857\u9053\"], values=col, height=750,width=1050,\n                 title=col, color_discrete_sequence = px.colors.qualitative.Set3)\n    fig.data[0].textinfo = 'label+text+value'\n    fig.show()\n    \ndef plot_treemap2(col):\n    fig = px.treemap(age7, path=[\"\u8bca\u65ad\u540d\u79f0\"], values=col, height=750,width=1050,\n                 title=col, color_discrete_sequence = px.colors.qualitative.Dark24)\n    fig.data[0].textinfo = 'label+text+value'\n    fig.show()   #https:\/\/baijiahao.baidu.com\/s?id=1713465946321449501&wfr=spider&for=pc\nplot_treemap1(\"\u603b\u8d39\u7528\");plot_treemap1(\"\u7edf\u7b79\u8d39\u7528\");plot_treemap1(\"\u81ea\u8d39\u8d39\u7528\");plot_treemap1(\"\u4f4f\u9662\u65f6\u95f4\")\nplot_treemap2(\"\u603b\u8d39\u7528\");plot_treemap2(\"\u7edf\u7b79\u8d39\u7528\");plot_treemap2(\"\u81ea\u8d39\u8d39\u7528\");plot_treemap2(\"\u4f4f\u9662\u65f6\u95f4\")","47609777":"##\u4f4f\u9662\u65f6\u95f4\u7edf\u8ba1\nzy_count = df.\u4f4f\u9662\u65f6\u95f4.value_counts().reset_index()\nzy_count.columns = ['\u4f4f\u9662\u65f6\u95f4', 'count']\n#\nimport plotly.graph_objects as go\n##\nfig0 = px.bar(zy_count, y='\u4f4f\u9662\u65f6\u95f4', text='count',x=\"count\", color='\u4f4f\u9662\u65f6\u95f4')\n# Put bar total value above bars with 2 values of precision\nfig0.update_traces(texttemplate='%{text:1f}', textposition='outside')\n# Set fontsize and uniformtext_mode='hide' says to hide the text if it won't fit\nfig0.update_layout(uniformtext_minsize=8)\nfig0.update_layout(xaxis_tickangle=0,height=550,width=700)\n# Rotate labels 45 degrees\n#sex_count\nfig1=px.pie(zy_count.head(10), values='count', names='\u4f4f\u9662\u65f6\u95f4', \n       title='\u4f4f\u9662\u65f6\u95f4\u5206\u5e03', \n       color_discrete_sequence=px.colors.sequential.Rainbow,hole=.3)  ## Hot\u3001Bluered\u3001Blues \u3001Greens\nfig1.update_layout(xaxis_tickangle=-45,height=500,width=600)\nfig1.update_traces(textposition='inside', textinfo='percent+label') \n\nfig2 = px.scatter(zy_count, \n                 y='count', x='\u4f4f\u9662\u65f6\u95f4', color='count', size='\u4f4f\u9662\u65f6\u95f4', \n                 height=700, text='\u4f4f\u9662\u65f6\u95f4', \n                 title='\u4f4f\u9662\u65f6\u95f4\u5206\u5e03',\n                color_discrete_sequence=px.colors.sequential.Rainbow)\nfig2.update_traces(textposition='top center')\nfig2.update_layout(showlegend=False)\nfig2.update_layout(xaxis_rangeslider_visible=True)\nfig2.update_layout(height=700,width=850)\n\nfig0.show()\nfig1.show()\nfig2.show()","74668e4d":"zy_count.describe()","91acd524":"zy211=df[df[\"\u4f4f\u9662\u65f6\u95f4\"]>=211]\nzy211=zy211.sort_values('\u4f4f\u9662\u65f6\u95f4', ascending=False)[[\"\u8bca\u65ad\u540d\u79f0\",\"\u6027\u522b\",\"\u5e74\u9f84\",\"\u4eba\u5458\u7c7b\u522b\",\"\u533b\u7597\u7c7b\u522b\",\"\u673a\u6784\u7b49\u7ea7\",'\u8857\u9053', '\u603b\u8d39\u7528',\"\u7edf\u7b79\u8d39\u7528\",\"\u81ea\u8d39\u8d39\u7528\",'\u4f4f\u9662\u65f6\u95f4',\"\u8bc6\u522bID\"]]#.style.background_gradient(cmap='Reds')","8597d776":"zy211.describe()","9c5eb89d":"zy211zf=df[(df[\"\u4f4f\u9662\u65f6\u95f4\"]>=211)&(df[\"\u603b\u8d39\u7528\"]<4027)]\nzy211zf=zy211zf.sort_values('\u4f4f\u9662\u65f6\u95f4', ascending=False)[[\"\u8bca\u65ad\u540d\u79f0\",\"\u6027\u522b\",\"\u5e74\u9f84\",\"\u4eba\u5458\u7c7b\u522b\",\"\u533b\u7597\u7c7b\u522b\",\"\u673a\u6784\u7b49\u7ea7\",'\u8857\u9053', '\u603b\u8d39\u7528',\"\u7edf\u7b79\u8d39\u7528\",\"\u81ea\u8d39\u8d39\u7528\",'\u4f4f\u9662\u65f6\u95f4',\"\u8bc6\u522bID\"]]#.style.background_gradient(cmap='Reds')","7f0e7557":"fig2 = px.scatter(zy211zf, \n                 y='\u603b\u8d39\u7528', x='\u4f4f\u9662\u65f6\u95f4', color='\u4f4f\u9662\u65f6\u95f4', size='\u4f4f\u9662\u65f6\u95f4', \n                 height=700, text='\u603b\u8d39\u7528', \n                 title='\u4f4f\u9662\u65f6\u95f4&\u603b\u8d39\u7528',\n                color_discrete_sequence=px.colors.sequential.Rainbow)\nfig2.update_traces(textposition='top center')\nfig2.update_layout(showlegend=False)\nfig2.update_layout(xaxis_rangeslider_visible=True)\n# fig2.update_layout(height=700,width=850)","9b5bc1b9":"zy211zf.describe()","725ed104":"fig2 = px.scatter(df, \n                 y='\u603b\u8d39\u7528', x='\u4f4f\u9662\u65f6\u95f4', color='\u4f4f\u9662\u65f6\u95f4', size='\u4f4f\u9662\u65f6\u95f4', \n                 height=700, text='\u603b\u8d39\u7528', \n                 title='\u4f4f\u9662\u65f6\u95f4&\u603b\u8d39\u7528',\n                color_discrete_sequence=px.colors.sequential.Rainbow)\nfig2.update_traces(textposition='top center')\nfig2.update_layout(showlegend=False)\nfig2.update_layout(xaxis_rangeslider_visible=True)\n# fig2.update_layout(height=700,width=850)","99ec2292":"## \uff086\uff09\u8857\u9053~~","57b2e7c7":"### 1\u30010-6\u5c81\uff1a\u513f\u7ae5","db353ecc":"### \uff085\uff0941-65\u5c81\uff1a\u4e2d\u5e74\u671f","ebaf96c3":"## \uff084\uff09\u533b\u7597\u7c7b\u522b","687d1910":"## \uff083\uff09\u4eba\u5458\u7c7b\u522b~~","950d14b2":"### \uff084\uff0929-40\u5c81\uff1a\u6210\u719f\u671f","bc0d3923":"## \uff081\uff09\u6027\u522b~","c620fa54":"## 3\u300118-28\u5c81 \u9752\u6625\u671f","aa48385d":"##  \u6811\u56fe sum \u8ba1\u7b97","375561af":"### (6\uff0965-100\u5c81\uff1a\u8001\u5e74\u671f\n","16df82a4":"## 2\u3001\u6076\u6027\u80bf\u7624","0ef6d111":"## \uff082\uff09 \u603b\u8d39\u7528\u3001\u4f4f\u9662\u65f6\u95f4","c88e49e0":"## 2\u3001 \u8bca\u65ad\u540d\u79f0~\u8d39\u7528","3d137467":"### \u516d\uff1a \u57fa\u91d1\u76d1\u7ba1","0a4b6292":"## \uff082\uff09\u5e74\u9f84~~","92fd59f2":"##  \u7b2c\u4e09\u90e8\u5206\uff1a\u5065\u5eb7\u670d\u52a1","8ae69871":"## 7-17 \u5c81","08a5aec9":"### \u4e09\u8005\u5173\u7cfb\uff1a\uff081\uff09\u603b\u8d39\u7528\u3001\u7edf\u7b79\u8d39\u7528~","b8cc98bb":"### \u75be\u75c5\u7edf\u8ba1","bb825daf":"## \uff085\uff09\u8bca\u65ad\u540d\u79f0","2e4c7ed4":"## (7)100+","23dda664":"### \u9ad8\u8840\u538b","dc2eb87a":"### 1\u3001\u8857\u9053-\u8d39\u7528","a3fda72e":"### \u5e74\u9f84"}}