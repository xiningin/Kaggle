{"cell_type":{"f4ebd983":"code","4c8047bb":"code","92780934":"code","65ad4eeb":"code","ae74b365":"code","7df4fd43":"code","3275cc1e":"code","bb894881":"code","465c1c7f":"code","8fcf3b35":"code","0191f6b3":"code","b27e6271":"code","7c19f0f7":"code","56ea4a61":"code","84ce58a0":"code","d274823e":"code","cb1f3d7f":"code","40113281":"code","e3fa1970":"code","94acd2c3":"code","72b0d8be":"code","dbe5637b":"code","bcc14d20":"code","6d22875a":"code","7734ce4b":"code","eb34c138":"code","e44deeca":"code","9d6a37ed":"markdown"},"source":{"f4ebd983":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4c8047bb":"df = pd.read_csv(\"\/kaggle\/input\/real-estate-price-prediction\/Real estate.csv\")","92780934":"df = pd.DataFrame(df)","65ad4eeb":"df.head()","ae74b365":"df.drop(columns = \"No\",inplace = True)\ndf.head()","7df4fd43":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","3275cc1e":"sns.heatmap(df.corr())","bb894881":"df.rename(columns = {\"X1 transaction date\" : \"TransDate\",\"X2 house age\":\"Age\", \"X3 distance to the nearest MRT station\":\"StatDist\",\"X4 number of convenience stores\":\"No_Stores\",\"X5 latitude\":\"Latitude\",\"X6 longitude\":\"Longitude\",\"Y house price of unit area\":\"Price\"} ,inplace = True)","465c1c7f":"df.head()","8fcf3b35":"df.dtypes","0191f6b3":"df.describe()","b27e6271":"plt.figure(figsize = (15,10))\nplt.subplot(2,3,1)\nsns.regplot(\"TransDate\",\"Price\",data = df)\nplt.subplot(2,3,2)\nsns.regplot(\"Age\",\"Price\",data = df)\nplt.subplot(2,3,3)\nsns.regplot(\"StatDist\",\"Price\",data = df)\nplt.subplot(2,3,4)\nsns.regplot(\"No_Stores\",\"Price\",data = df)\nplt.subplot(2,3,5)\nsns.regplot(\"Latitude\",\"Price\",data = df)\nplt.subplot(2,3,6)\nsns.regplot(\"Longitude\",\"Price\",data = df)\n","7c19f0f7":"df.head()","56ea4a61":"df.isnull()","84ce58a0":"X = df[[\"Age\",\"StatDist\",\"No_Stores\",\"Latitude\",\"Longitude\"]]","d274823e":"Y = df[[\"Price\"]]","cb1f3d7f":"X = np.asanyarray(X)\nY = np.asanyarray(Y)","40113281":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_scale = sc.fit_transform(X)\nX_scale","e3fa1970":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X_scale,Y,test_size = 0.12,random_state = 1)\n","94acd2c3":"from sklearn.linear_model import LinearRegression\nregr = LinearRegression()\nregr.fit(X_train,y_train)\nprint(regr.coef_)\nprint(regr.intercept_)","72b0d8be":"yhat = regr.predict(X_test)","dbe5637b":"from sklearn.metrics import r2_score\nr2_score(y_test,yhat)","bcc14d20":"# We try Polynomial Regression to check if that is any more accurate\n\nfrom sklearn.preprocessing import PolynomialFeatures\npoly = PolynomialFeatures(degree = 2)\nX_poly = poly.fit_transform(X_scale)\nX_poly","6d22875a":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X_poly,Y,test_size = 0.1,random_state = 1)\n","7734ce4b":"from sklearn.linear_model import LinearRegression\nlm = LinearRegression()\nlm.fit(X_train,y_train)","eb34c138":"yhat2 = lm.predict(X_test)","e44deeca":"r2_score(y_test,yhat2)","9d6a37ed":"Reading the Data"}}