{"cell_type":{"341b4422":"code","ee150f12":"code","092b05a1":"code","bdafcff6":"code","c2e93d02":"markdown","ba989bda":"markdown"},"source":{"341b4422":"# First of all we import our modules \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom pylab import *\nfrom scipy.interpolate import griddata\nimport matplotlib.pyplot as plt\nimport itertools\nimport numpy as np\nfrom mpl_toolkits.mplot3d import Axes3D\n# Any results you write to the current directory are saved as output.","ee150f12":"#We import our data and investigate\ndf = pd.read_csv('..\/input\/kaggle.txt',delimiter=\"\\t\")\ndf = df.iloc[:,:6] # We use only first 5 columns\ndf.head()","092b05a1":"#We are starting create our graphic\nmatplotlib.rcParams.update({'font.size':10})\nfig=plt.figure()\n\nax=fig.gca(projection='3d')\n\nfor i in range(1,6):\n    \n    z=df.iloc[:, i]\n    \n    y=np.array(sorted(list(range(1,len(z)+1))*2)).reshape((48,1))  #this is hours\n    a=np.array([i,i+1]*len(z)).reshape((48,1))                     #this is stations line width\n    \n    points = np.concatenate((a, y), axis=1)        #this is base of the graphic\n    b =list(itertools.chain(*zip(z,z)))            # Z Dimension\n    b = np.array(b).reshape((48,1))       #for 48 data in 1D\n   \n    yi  =np.linspace(min(a),max(a))         \n\n    xi  =np.linspace(min(y),max(y))\n\n    X,Y =np.meshgrid(yi,xi)    # meshgrid of the graphic\n\n    Z = griddata(points,b,(yi,xi),method=\"linear\")  # This is interpolation technique, you could change method as \"cubic\" or \"nearest\" \n    #griddata use only 1D arrays, IMPORTANT\n    ax.plot_surface(Y,X,Z,rstride=1,cstride=5)   \n\n    ax.set_zlim3d(0,50)   # you can change the limits of Z\nax.grid(False)\nax.w_xaxis.pane.set_visible(False)\nax.set_title('Hourly Total Precipitations')\nplt.yticks(rotation=330)\nax.set_yticks([1.5,2.5,3.5,4.5,5.5])\nax.set_yticklabels(['Sta1','Sta2','Sta3','Sta4',\"Sta5\"])\nplt.xticks(rotation=50)\nax.set_xticks([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23])\nax.set_xticklabels([\"21\",\"\",\"23\",\"\",\"1\",\"\",\"3\",\"\",'5','','7','','9',\"\",'11','','13',\"\",'15','','17','','19',''])\nax.set_xlabel('Hours')\nax.set_zlabel('Precipitation Totals (mm)')\nshow()","bdafcff6":"matplotlib.rcParams.update({'font.size':10})\nfig=plt.figure()\n\nax=fig.gca(projection='3d')\n\nfor i in range(1,6):\n    \n    z=df.iloc[:, i]\n    \n    y=np.array(sorted(list(range(1,len(z)+1))*2)).reshape((48,1))  #this is hours\n    a=np.array([i,i+1]*len(z)).reshape((48,1))                     #this is stations line width\n    \n    points = np.concatenate((a, y), axis=1)        #this is base of the graphic\n    b =list(itertools.chain(*zip(z,z)))            # Z Dimension\n    b = np.array(b).reshape((48,1))       #for 48 data in 1D\n   \n    yi  =np.linspace(min(a),max(a))         \n\n    xi  =np.linspace(min(y),max(y))\n\n    X,Y =np.meshgrid(yi,xi)    # meshgrid of the graphic\n\n    Z = griddata(points,b,(yi,xi),method=\"linear\")  # This is interpolation technique, you could change method as \"cubic\" or \"nearest\" \n    #griddata use only 1D arrays, IMPORTANT\n    surf = ax.plot_surface(Y,X,Z,rstride=1,cstride=5,cmap=cm.jet)   \n\n    ax.set_zlim3d(0,50)   # you can change the limits of Z\nax.grid(False)\nax.w_xaxis.pane.set_visible(False)\nax.set_title('Hourly Total Precipitations')\nplt.yticks(rotation=330)\nax.set_yticks([1.5,2.5,3.5,4.5,5.5])\nax.set_yticklabels(['Sta1','Sta2','Sta3','Sta4',\"Sta5\"])\nplt.xticks(rotation=50)\nax.set_xticks([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23])\nax.set_xticklabels([\"21\",\"\",\"23\",\"\",\"1\",\"\",\"3\",\"\",'5','','7','','9',\"\",'11','','13',\"\",'15','','17','','19',''])\nax.set_xlabel('Hours')\nax.set_zlabel('Precipitation Totals (mm)')\nfig.colorbar(surf, shrink=0.5, aspect=5)\nshow()","c2e93d02":"**If you want, you could use color map**","ba989bda":"**In this study our main aim is 3D visualization of Time Series with using meshgrid technique**"}}