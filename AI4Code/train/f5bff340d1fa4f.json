{"cell_type":{"6e992b77":"code","684e1f04":"code","14f9c82f":"code","4ef14c30":"code","7f2983ed":"code","f41df725":"code","5b84512d":"code","ad17f6cc":"code","5d625a7e":"code","3b3fd7de":"code","22b649f2":"code","ab24d18e":"code","387367e1":"markdown","565f147f":"markdown","c34c5eaf":"markdown","2092207e":"markdown"},"source":{"6e992b77":"# this section is just to import the dataset file , so don't worry about it\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","684e1f04":"# let's just read our data\ndf=pd.read_csv('\/kaggle\/input\/regression-116-categorical-16-numeric-features\/insur.csv',index_col=0)\ndf.head()","14f9c82f":"# let's see how many rows and columns we have in our dataset\n\ndf.shape\n\n# we have 117794 rows and 131 columns","4ef14c30":"# let's look at the data in depth\ndf.describe()","7f2983ed":"# let's see if we have any missing values in our dataset\n\ndf.isnull().sum()\ndf.isna().sum()\n# As we can see there are no missing values ","f41df725":"# let's create our x and y \ny=df.iloc[:,-1]\nx=df.iloc[:,:-1]\nx","5b84512d":"# let's split our data into train and test sets\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=.3,random_state=2)","ad17f6cc":"# let's define our model , we will use CatBoostRegressor because it can handle categorical variable so we need not\n# preprocess our data \n\nfrom catboost import CatBoostRegressor\n\nmodel=CatBoostRegressor()","5d625a7e":"# let's seperate our categorical columns\ncat_col=x_train.select_dtypes(include='object').columns\ncat_col\n","3b3fd7de":"# let's fit our model to the training dataset\n\nmodel.fit(x_train,y_train,cat_features=cat_col)","22b649f2":"# let's check training accuracy of our model\n\nmodel.score(x_train,y_train)\n# as we can see our model is still underfitting and has 63%  training accuracy","ab24d18e":"# let's check our test accuracy\n\nmodel.score(x_test,y_test)\n\n# model has 58% test accuracy which is much like tossing a coin","387367e1":"# This is real world problem where we are to build a model which can predict how much loss we might face from a particular customer ( target feature 'loss' )\n","565f147f":"# Each Record in the dataset describes different attributes of a customer so it has both categorical and numeric features","c34c5eaf":"# If you like the work in notebook please upvote","2092207e":"# Check my other notebook for the optimized model, if you like this notebook please upvote"}}