{"cell_type":{"91506fc0":"code","86212578":"code","471853e7":"code","a959f620":"code","a9af122a":"code","e8e4ffe1":"code","9abecf91":"code","9962d5f0":"code","397647cd":"code","2472d40d":"code","05f7e357":"code","b065ab92":"code","4e044677":"code","99791ecf":"markdown"},"source":{"91506fc0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","86212578":"#NumPy version\nnp.__version__","471853e7":"#Pandas version\npd.__version__ ","a959f620":"!wget https:\/\/raw.githubusercontent.com\/alexeygrigorev\/mlbookcamp-code\/master\/chapter-02-car-price\/data.csv","a9af122a":"# Reading Data with Pandas \ndata = pd.read_csv('\/kaggle\/working\/data.csv')\ndata.head()","e8e4ffe1":"# Average Price of BMW cars in the Dataset \ndata['MSRP'][data['Make'] == 'BMW'].mean()","9abecf91":"# Let's make sure we're using the correct datatype so that we can query our subset properly\ndata['Year'].dtype","9962d5f0":"# How many missing values for Engine HP for the subset of cars after year 2015? \ndata['Engine HP'][data['Year'] >= 2015].isna().sum()","397647cd":"#Rounding mean Engine HP before filling missing values\nmean_hp_before = data['Engine HP'].mean()\nprint(round(mean_hp_before))","2472d40d":"data['Engine HP'].fillna(value = mean_hp_before, inplace = True)\nmean_hp_after = data['Engine HP'].mean()\nprint(round(mean_hp_after))","05f7e357":"# Select Rolls-Royce cars, with the 3 columns & the duplicates dropped\nX = data[['Engine HP', 'Engine Cylinders', 'highway MPG']][data['Make'] == 'Rolls-Royce'].drop_duplicates()\n# Make X an array\nX = np.array(X)\n# Matrix-Matrix multiplication between transpose of X and X\nXTX = X.T.dot(X)\n# Finally, the sum \nXTX_inverse = np.linalg.inv(XTX)\nXTX_inverse.sum()","b065ab92":"# Just for fun, this is the answer that you would get if you didn't read the question properly. \nXXT = X.dot(X.T)\nnp.linalg.inv(XXT).sum()","4e044677":"y = np.array([1000, 1100, 900, 1200, 1000, 850, 1300])\nw = XTX_inverse.dot(X.T).dot(y) \nw","99791ecf":"The average of Engine HP has not changed. "}}