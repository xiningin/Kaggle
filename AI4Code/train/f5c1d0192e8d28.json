{"cell_type":{"48dd93f1":"code","c5f41979":"code","189b85f4":"code","a645d7a6":"code","ef872a46":"code","5f943815":"code","26c750da":"code","e51f19df":"code","58c32b36":"code","13f6e891":"code","4aedc6fc":"code","07c9818c":"code","7b7d1a48":"code","eab8dc10":"code","cc3c7be1":"code","6412fb0e":"code","8112661c":"code","580beee5":"code","2a3eb681":"code","5ff92192":"code","c4aa28db":"code","2f5a0e7b":"code","c6bf9a92":"code","cb6df164":"code","a4de8701":"code","bddf03d6":"code","fe4153e4":"code","68d245d1":"code","2fc2f009":"code","af2ce06c":"code","74a89c32":"code","e423160d":"code","15425278":"code","872f9795":"code","a41613cd":"code","1cd6e7aa":"code","eabaf8aa":"code","6ac0deb3":"code","129758c5":"code","1e371e85":"code","5a4c4f9a":"code","64359362":"code","cccf7bfd":"code","b38db0c7":"markdown","890605d5":"markdown","71ee8e21":"markdown","8748d1c0":"markdown","00076dec":"markdown","9a4cc433":"markdown","dacd3c76":"markdown","5ce4f686":"markdown","01d15ca8":"markdown","bdebd2b5":"markdown","3dba594b":"markdown","6a53ff55":"markdown"},"source":{"48dd93f1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","c5f41979":"data= pd.read_csv('..\/input\/googleplaystore.csv')\ndata.head()","189b85f4":"print(data.shape)\nprint(data.isnull().sum().sort_values(ascending=False))","a645d7a6":"data.dropna(inplace=True)\nprint(data.shape)","ef872a46":"data=data.drop_duplicates(['App','Category'])\nprint(data.shape)","5f943815":"#Remove \",\" and \"+\" in str.\n\ndata['Installs'] = data['Installs'].apply(lambda x: str(x).replace(',',''))\ndata['Installs'] = data['Installs'].apply(lambda x: str(x).replace('+',''))\ndata['Installs'] = data['Installs'].apply(lambda x: int(x))","26c750da":"#Convert all size to MB, and replace 'Varies with device' with 'NaN'.\n\ndata['Size'] = data['Size'].apply(lambda x: str(x).replace('Varies with device', 'NaN') if 'Varies with device' in str(x) else x)\ndata['Size'] = data['Size'].apply(lambda x: str(x).replace('M', '') if 'M' in str(x) else x)\ndata['Size'] = data['Size'].apply(lambda x: str(x).replace(',', '') if ',' in str(x) else x)\ndata['Size'] = data['Size'].apply(lambda x: float(str(x).replace('k', '')) \/ 1024 if 'k' in str(x) else x)\ndata['Size'] = data['Size'].apply(lambda x: float(x))","e51f19df":"#Remove '$' in str, and make it numeric.\n\ndata['Price'] = data['Price'].apply(lambda x: str(x).replace('$', '') if '$' in str(x) else str(x))\ndata['Price'] = data['Price'].apply(lambda x: float(x))","58c32b36":"data['Reviews'] = data['Reviews'].apply(lambda x: int(x))","13f6e891":"#Make the name of Category easier to read.\n\ndata['Category'] = data['Category'].apply(lambda x: x.replace('_',' '))\ndata['Category']=data['Category'].apply(lambda x: x.capitalize())\nprint(data['Category'].unique())","4aedc6fc":"sns.set(style=\"white\",font=\"Arial\",font_scale=1.8)\ncolors = [\"#4285F4\",\"#EA4335\",\"#34A853\",\"#FDD973\"]\ng1 = sns.catplot(x=\"Category\",data=data,kind=\"count\",height=10,aspect=2, palette=sns.color_palette([\"#4285F4\",\"#EA4335\",\"#34A853\",\"#FDD973\"]))\ng1.set_xticklabels(rotation=45,ha=\"right\")\ng1.set_yticklabels([])\ng1.despine(left=True,bottom=True)\ng1.set_axis_labels(\" \", \" \")\nplt.title('Number of app in each category',size = 20)\n#plt.savefig('1.png', bbox_inches = 'tight',dpi=300) # set the resolution ratio\nplt.show()","07c9818c":"# what are the hottest apps in Category 'Family'? \ndata1=data[data['Category']=='Family']\nprint(data1.sort_values(by='Installs',ascending=False)[['App','Installs']][:8])\nprint(data[data.App=='Google Play Games'].Category)","7b7d1a48":"df1={'Number':[1746,1097,733,351,350,328,4754]}\ndf2=pd.DataFrame(df1,index=['Family','Game','Tools','Productivity','Medical','Commuication','Others'])\nprint(df2)\ncolors = [\"#4285F4\",\"#EA4335\",\"#34A853\",\"#A15736\",\"#FDD973\",\"#FA8ABA\",\"#34A853\"]\n \nplt.rcParams['figure.figsize'] = 12,12\nplt.pie(df2['Number'], labels=None,colors=colors,labeldistance=1.1,pctdistance=0.8,\n        autopct='%1.1f%%', shadow=False,startangle=90,textprops={'fontsize':15,'color':'black'})\nplt.title(\"Percentage of each Category\",size=20)\n#plt.savefig('2.png',dpi=300)\nplt.show()","eab8dc10":"sns.set(style=\"white\",font=\"Arial\",font_scale=0.8)\ndatahalf=data[(data['Category']!='Family') & (data['Category']!='Game') &\n               (data['Category']!='Tools')  & (data['Category']!='Productivity')\n& (data['Category']!='Medical')  & (data['Category']!='Communication')]\n\nprint(datahalf.Category.value_counts().sort_values(ascending=False).index)\ng = sns.catplot(y=\"Category\",palette=\"Set1\",kind=\"count\",\n                orient=\"h\",data=datahalf,aspect=3,order=['Finance', 'Lifestyle', 'Personalization', 'Photography', 'Business',\n       'Sports', 'Health and fitness', 'News and magazines', 'Social',\n       'Travel and local', 'Shopping', 'Books and reference', 'Video players',\n       'Dating', 'Education', 'Maps and navigation', 'Entertainment',\n       'Food and drink', 'Auto and vehicles', 'Weather', 'Libraries and demo',\n       'House and home', 'Art and design', 'Comics', 'Parenting', 'Events',\n       'Beauty'])\ng.despine(left=True,bottom=True)\ng.set_xticklabels([])\ng.set_axis_labels(\" \", \" \")\n#plt.savefig('datahalf.png',bbox_inches = 'tight',dpi=300)\nplt.show()","cc3c7be1":"appf=data.iloc[:][data['Category']=='Family'].App\nprint(appf.count())\nprint(data[data.App.isin(appf)].Category.count()-appf.count())","6412fb0e":"plt.rcParams['figure.figsize'] = 27.1,14.27\nsns.set(style=\"white\",font=\"Arial\",font_scale=1.6)\ng = sns.distplot(data.Rating,color=\"#4285F4\",bins=25,\nkde_kws={\"color\": \"#4285F4\", \"lw\": 3, },\nhist_kws={ \"linewidth\": 3,\"alpha\": .5}) \nsns.despine(left=True,bottom=False,right=True,top=True),                             \ng.set_xlabel(\" \")\ng.set_ylabel(\" \")\nplt.yticks([])\nplt.xticks(np.arange(0,5.5,0.5))\nplt.title(\"Distribution of Rating\",size=20)\n#plt.savefig('Distribution of Rating.png',bbox_inches = 'tight',dpi=300)\nplt.show()","8112661c":"dfA=data['Rating'].groupby(data['Category']).median()\ndfA.columns=['median']\nprint(dfA.sort_values(ascending=False).index)","580beee5":"plt.rcParams['figure.figsize'] = 47.1,14.27\nlist=dfA.sort_values(ascending=False).index\nsns.set(style=\"white\",font=\"Arial\",font_scale=2)\ng = sns.catplot(x=\"Category\",y=\"Rating\",data=data, kind=\"box\", height = 10 ,\naspect=3,palette = \"Set1\",order=list)\ng.despine(left=True)\ng.set_xticklabels(rotation=45,ha='right')\ng.set( xticks=range(0,34))\ng.set_axis_labels(\" \", \" \")\nplt.title(\"Boxplot of Rating in each Category\",size=25)\n#plt.savefig('Boxplot of Rating in each Category.png',bbox_inches = 'tight',dpi=300)\nplt.show()","2a3eb681":"sns.set(style=\"white\",font=\"Arial\",font_scale=1.2)\n\ng = sns.catplot(x=\"Reviews\",y='Rating',color=\"#EA4335\"\n                ,data=data,aspect=2.5)\nsns.despine(left=True)\ng.set_xticklabels([])\n#plt.savefig('Scatter diagram of Rating and Reviews.png',bbox_inches = 'tight',dpi=300)\nplt.title(\"Scatter diagram of Rating and Reviews\",size=20)\nplt.show()","5ff92192":"sns.set(style=\"white\",font=\"Arial\",font_scale=0.8)\n\ng = sns.catplot(x=\"Content Rating\",palette = \"Set1\",kind=\"count\"\n                ,data=data,aspect=1.2)\ng.despine(left=True)\n#g.set_xticklabels([])\ng.set_yticklabels([])\ng.set_axis_labels(\" \", \" \")\n#plt.savefig('.png',bbox_inches = 'tight',dpi=300)\nplt.show()","c4aa28db":"plt.rcParams['figure.figsize'] = 47.1,14.27\n#list=dfA.sort_values(ascending=False).index\nsns.set(style=\"white\",font=\"Arial\",font_scale=2)\ng = sns.catplot(x=\"Content Rating\",y=\"Rating\",data=data, kind=\"box\", height = 10 ,\naspect=1.5,palette = \"Set1\")\ng.despine(left=True)\ng.set_xticklabels(rotation=45,ha='right')\ng.set_axis_labels(\" \", \" \")\n#g = g.set_ylabels(\"Rating\")\nplt.title('Boxplot of Rating in each content rating',size = 20)\n#plt.savefig('',bbox_inches = 'tight',dpi=300)\nplt.show()","2f5a0e7b":"datalist=data['App'].groupby(data['Category']).count()\ndataeve=data[data['Content Rating']=='Everyone']\ndata10=data[(data['Content Rating']=='Everyone') | (data['Content Rating']=='Everyone 10+')]\ndatateen=data[(data['Content Rating']=='Everyone') | (data['Content Rating']=='Everyone 10+')| (data['Content Rating']=='Teen')]\ndata17=data[(data['Content Rating']=='Everyone') | \n(data['Content Rating']=='Everyone 10+')| \n            (data['Content Rating']=='Teen')|\n            (data['Content Rating']=='Mature 17+')]\n\ndatap1=dataeve['Content Rating'].groupby(dataeve['Category']).count()\ndatap2=data10['Content Rating'].groupby(data10['Category']).count()\ndatap3=datateen['Content Rating'].groupby(datateen['Category']).count()\ndatap4=data17['Content Rating'].groupby(data17['Category']).count()\ndatap5=data['Content Rating'].groupby(data['Category']).count()\n\ndatapall=pd.concat([datalist,datap1,datap2,datap3,datap4,datap5],axis=1)\ndatapall.columns=['all','A','B','C','D','E']\ndatapall['p1']=datapall['A']\/datapall['all']\ndatapall['p2']=datapall['B']\/datapall['all']\ndatapall['p3']=datapall['C']\/datapall['all']\ndatapall['p4']=datapall['D']\/datapall['all']\ndatapall['p5']=datapall['E']\/datapall['all']\ndatapall['kind']=datapall.index\ndatapall.head()","c6bf9a92":"#list=ans.sort_values(by='rate',ascending=True).index\nsns.set(style=\"white\",font=\"Arial\",font_scale=2.8)\nplt.rcParams['figure.figsize'] = [48, 14]\nsns.barplot(x='kind',y='p5',data=datapall,label=\"18+\",alpha=0.1,\n            saturation=0.9,color=\"#A15736\") \nsns.barplot(x='kind',y='p4',data=datapall,label=\"17+\",alpha=1,saturation=0.9,\ncolor=\"#FDD973\") \nsns.barplot(x='kind',y='p3',data=datapall,label=\"13+\",alpha=1,saturation=0.9\n,color=\"#34A853\")\nsns.barplot(x='kind',y='p2',data=datapall,label=\"10+\",alpha=1,saturation=0.9\n,color=\"#4285F4\") \ng=sns.barplot(x='kind',y='p1',data=datapall,label=\"Everyone\"\n,color=\"#EA4335\",alpha=1,saturation=0.9) \n\nsns.despine(left=True)\nplt.legend(ncol=1, loc=\"lower right\",bbox_to_anchor=(1.1, 0))\ng.set_xticklabels(labels=(['Art and design', 'Auto and vehicles', 'Beauty', 'Books and reference',\n       'Business', 'Comics', 'Communication', 'Dating', 'Education',\n       'Entertainment', 'Events', 'Family', 'Finance', 'Food and drink',\n       'Game', 'Health and fitness', 'House and home', 'Libraries and demo',\n       'Lifestyle', 'Maps and navigation', 'Medical', 'News and magazines',\n       'Parenting', 'Personalization', 'Photography', 'Productivity',\n       'Shopping', 'Social', 'Sports', 'Tools', 'Travel and local',\n       'Video players', 'Weather']),rotation=45,ha='right')\n#g.set( ylabel=\"Percentage\",xlabel=\"\")\nplt.ylabel(\"\")\nplt.xlabel(\"\")\n#plt.yticks([])\nplt.savefig('1116.png', bbox_inches = 'tight',dpi=300)\nplt.title('percentage of each content rating',size = 30)\nplt.show()","cb6df164":"def rate(df):\n    return len(df[df.Type=='Paid'])\npaid=data.groupby(data['Category']).apply(rate).sort_values(ascending=False)\nall=data['Type'].groupby(data['Category']).count()\nans=pd.concat([all,paid],axis=1)\nans.columns=['all','paid']\nans['free']=ans['all']-ans['paid']\nans['rate']=ans['paid']\/ans['all']\nans['Category']=ans.index\nans.sort_values(by='rate',ascending=False)[:20]","a4de8701":"list=ans.sort_values(by='rate',ascending=True).index\nsns.set(style=\"white\",font=\"Arial\",font_scale=2.8)\nplt.rcParams['figure.figsize'] = [48, 20]\nsns.barplot(x='Category',y='all',data=ans,label=\"Free\"\n,color=\"#4285F4\",order=list) \n\ng=sns.barplot(x='Category',y='paid',data=ans,label=\"paid\",\ncolor=\"#EA4335\",order=list) \n\nsns.despine(left=True)\nplt.legend(ncol=1, loc=\"upper right\")\ng.set_xticklabels(labels=list,rotation=45,ha='right')\ng.set( ylabel=\"\",xlabel=\"\")\nplt.yticks([])\n#plt.savefig('1115.png', bbox_inches = 'tight',dpi=300)\nplt.title('Number of free, paid app in each category',size = 30)\nplt.show()","bddf03d6":"appli=(['Medical', 'Personalization', 'Weather', 'Family', 'Tools',\n       'Communication', 'Sports', 'Game', 'Productivity', 'Lifestyle'])\ndat=data[data.Category.isin(appli)]\nda=dat[(dat.Price<70)&(dat.Price>0)]\nplt.rcParams['figure.figsize'] = 47.1,14.27\n#list=dfA.sort_values(ascending=False).index\nsns.set(style=\"white\",font=\"Arial\",font_scale=2)\ng = sns.catplot(x=\"Price\", orient=\"h\",y=\"Category\",data=da, kind=\"box\", height = 10 ,\naspect=2.8,palette = \"Set1\")\ng.despine(left=True)\ng.set_xticklabels(ha='center')\n#g.set( xticks=range(0,34))\ng.set_axis_labels(\" \", \" \")\n#g = g.set_ylabels(\"Rating\")\nplt.title('Boxplot of Paid apps Price in each Category',size = 20)\nplt.savefig('x.png',bbox_inches = 'tight',dpi=300)\nplt.show()","fe4153e4":"# the percent of paid apps\nprint(len(data[data['Type']=='Paid'])\/len(data))","68d245d1":"datanor=data[(data.Price<80) & (data.Price>0)]\n\nplt.rcParams['figure.figsize'] = 27.1,14.27\nsns.set(style=\"white\",font=\"Arial\",font_scale=1.6)\ng = sns.kdeplot(datanor.Price,color=\"black\",bw=10) \nsns.despine(left=True,bottom=True,right=True,top=True),                             \ng.set_xlabel(\" \")\ng.set_ylabel(\" \")\nplt.yticks([])\nplt.xticks([])\ng.get_legend().remove()\nplt.title(\"Distribution of Price\",size=20)\nplt.savefig('Distribution of Price.png',bbox_inches = 'tight',dpi=300)\nplt.show()","2fc2f009":"listrp=ans.sort_values(by='rate',ascending=False).index[:10]\ndatanorm=data[(data.Price>=0) & (data.Price<80)]\ndata1=datanorm[datanorm.Category.isin(listrp)]\ndata2=data1[data1['Type']!='Free']\ndatarp=data2['Rating'].groupby(data2['Category']).mean()\ndata3=data1[data1.Type!='Paid']\ndatarf=data3['Rating'].groupby(data3['Category']).mean()\ndatapf=pd.concat([datarf,datarp],axis=1)\ndatapf.columns=['Rating of Free','Rating of Paid']\ndatapf['Improvement']=datapf['Rating of Paid']\/datapf['Rating of Free']\ndatapf.sort_values(by='Improvement',ascending=False)","af2ce06c":"orderlist=datapf.sort_values(by='Improvement',ascending=False).index\nsns.set(style=\"white\",font=\"Arial\",font_scale=2.4)\ng1 = sns.catplot(x=\"Category\",y=\"Rating\",hue=\"Type\",\norder=orderlist, data=data1,kind=\"box\",height=10,aspect=3, \npalette=sns.color_palette([\"#34A853\",\"#FDD973\"]),legend=False)\ng1.set_xticklabels(rotation=45,ha=\"right\")\ng1.despine(left=True)\ng1.set_axis_labels(\" \", \" \")\nplt.legend(ncol=1, loc=\"lower right\",bbox_to_anchor=(1.1, 0))\nplt.title('Rating between free and paid',size = 30)\n#plt.savefig('Rating between free and paid.png', bbox_inches = 'tight',dpi=300) # set the resolution ratio\nplt.show()","74a89c32":"datanorm.loc[ datanorm['Price'] == 0, 'PriceBox'] = 'Free'\ndatanorm.loc[(datanorm['Price'] > 0) & (datanorm['Price'] <= 0.99), 'PriceBox'] = '0.99'\ndatanorm.loc[(datanorm['Price'] > 0.99) & (datanorm['Price'] <= 2.99), 'PriceBox']='1.0-2.99'\ndatanorm.loc[(datanorm['Price'] > 2.99) & (datanorm['Price'] <= 4.99), 'PriceBox']= '3.0-4.99'\ndatanorm.loc[(datanorm['Price'] > 4.99) & (datanorm['Price'] <= 9.99), 'PriceBox']= '5.0-9.99'\ndatanorm.loc[(datanorm['Price'] > 10) & (datanorm['Price'] <= 29.99), 'PriceBox']='10-29.9'\ndatanorm.loc[(datanorm['Price'] > 29.99), 'PriceBox']  = '30-'","e423160d":"sns.set(style=\"white\",font=\"Arial\",font_scale=1.5)\ndatap=data[data.Type!='Free']\ng = sns.catplot(x=\"PriceBox\",y=\"Rating\",data=datanorm, kind=\"box\", height = 10 ,\naspect=1.2,palette = \"Set1\",order=(['Free','0.99','1.0-2.99','3.0-4.99'\n                                  ,'5.0-9.99','10-29.9','30-']))\ng.despine(left=True)\ng.set_xticklabels(rotation=45,ha='right')\ng.set_axis_labels(\" \", \" \")\nplt.title('Boxplot of Rating in each Price Section',size = 20)\nplt.show()","15425278":"ws=data[['Installs']].groupby(data['Price']).sum().sort_values(by='Installs'                                            )\nws['P']=ws.index\nlist=ws[(ws.Installs>300000)&(ws.P>0)].P\nsns.set(style=\"white\",font=\"Arial\",font_scale=2.8)\nplt.rcParams['figure.figsize'] = [48, 20]\ng=sns.barplot(x='P',y='Installs',data=ws\n,color=\"#FDD973\",order=list)  \nsns.despine(left=True,bottom=True)\ng.set( ylabel=\" \",xlabel=\" \")\n#plt.yticks([])\n#plt.savefig('.png', bbox_inches = 'tight',dpi=300)\nplt.title('The total installs of each price ',size = 30)\nplt.show()","872f9795":"datanor=data[(data.Price<400) & (data.Price>80)]\nbool=datanor.App.str.contains('Rich')\nprint(datanor.App[bool])","a41613cd":"print(data.Installs.sum())\nlen(data[data['Installs']==1000000])","1cd6e7aa":"datano=data.drop_duplicates(['App'])\na=datano.Installs.sum()\nb=data.sort_values(by='Installs',ascending=False)[:82].Installs.sum()\nprint(a,b,b\/a)","eabaf8aa":"databig=data[data.Installs>=500000000]\n\ndc=databig['App'].groupby(data['Category']).count().to_frame().reset_index().sort_values\\\n    (by='App')\n#dc.columns=['num']\n#dc['Ca']=dc.index\n#dc.sort_values(by='num')\n#dc.apply(lambda _df: _df.sort_values(by=['num'])\nprint(dc)","6ac0deb3":"#list=ans.sort_values(by='rate',ascending=True).index\nsns.set(style=\"whitegrid\",font=\"Arial\",font_scale=2)\nplt.rcParams['figure.figsize'] = [48, 18]\ng=sns.barplot(x='Category',y='App',data=dc\n,color=\"#34A853\",order=dc.Category) \n\nsns.despine(left=True)\n#plt.legend(ncol=1, loc=\"upper right\")\ng.set_xticklabels(labels=dc.Category,ha='center')\ng.set( ylabel=\"\",xlabel=\"\")\n#plt.yticks([])\nplt.savefig('1215.png', bbox_inches = 'tight',dpi=300)\nplt.title('Number of super app in each category',size = 30)\nplt.show()","129758c5":"listhe=data['App'].groupby(data['Installs']).count().index\n\ndatafree=data[data.Type=='Free']\ndatapaid=data[data.Type!='Free']\ndata_1=datafree['App'].groupby(datafree['Installs']).count()\ndata_2=datapaid['App'].groupby(datapaid['Installs']).count()\ndata_3=pd.concat([data_1,data_2],axis=1,join='outer')\ndata_3.columns=(['free','paid'])\ndata_3.fillna(0,inplace=True)\ndata_3.index=data_3.index.map(str)\ndata_3['ser']=data_3.index\ndata_3['all']=data_3['free']+data_3['paid']\n#data_3.Install.apply(str())\n\n\n\n#list=datafree['App'].groupby(datafree['Installs']).count().index\nsns.set(style=\"white\",font='SimHei',font_scale=2.8)\nplt.rcParams['figure.figsize'] = [48, 20]\ng=sns.barplot(x=\"ser\",y='all',data=data_3,order=['1', '5', '10', '50', '100', '500', '1000', '5000', '10000', '50000',\n       '100000', '500000', '1000000', '5000000', '10000000', '50000000',\n       '100000000', '500000000', '1000000000']\n,color=\"#EA4335\") \nsns.despine(left=True,bottom=False)\n#plt.legend(ncol=1, loc=\"upper right\")#g.set_xticklabels(labels=list,rotation=45,ha='right')\ng.set( ylabel=\"\",xlabel=\"\")\ng.set_xticklabels(labels=['1', '5', '10', '50', '100', '500', '1000', '5000', '1\u4e07', '5\u4e07',\n       '10\u4e07', '50\u4e07', '100\u4e07', '500\u4e07', '1000\u4e07', '5000\u4e07',\n       '1\u4ebf', '5\u4ebf', '10\u4ebf'],ha='center')\nplt.yticks([])\n#plt.xticks([])\nplt.savefig('1dc1swdwded15.png', bbox_inches = 'tight',dpi=300)\n#plt.title('AAAA',size = 30)\nplt.show()","1e371e85":"sns.set(style=\"white\",font=\"SimHei\",font_scale=1.2)\n\ng = sns.catplot(x=\"Installs\",y='Rating',color=\"#EA4335\"\n                ,data=data,aspect=3)\nsns.despine(left=True)\n#g.set_xticklabels([])\n#g.set_yticklabels([])\ng.set_xticklabels(labels=['1', '5', '10', '50', '100', '500', '1000', '5000', '1\u4e07', '5\u4e07',\n       '10\u4e07', '50\u4e07', '100\u4e07', '500\u4e07', '1000\u4e07', '5000\u4e07',\n       '1\u4ebf', '5\u4ebf', '10\u4ebf'],ha='center')\ng.set_axis_labels(\" \", \" \")\nplt.savefig('.png',bbox_inches = 'tight',dpi=300)\nplt.title(\"rating and installs\",size=20)\nplt.show()","5a4c4f9a":"datapaid=data[(data['Type']=='Paid') & (data.Price<80)]\nsns.set(style=\"white\",font=\"SimHei\",font_scale=1.2)\n\ng = sns.catplot(x=\"Installs\",y='Price',color=\"#34A853\"\n                ,data=datapaid,aspect=3)\nsns.despine(left=True)\n#g.set_xticklabels([])\n#g.set_yticklabels([])\ng.set_axis_labels(\" \", \" \")\nplt.savefig('.png',bbox_inches = 'tight',dpi=300)\nplt.title(\"Price and installs of paid apps \",size=20)\nplt.show()","64359362":"sns.set(style=\"white\",font=\"Arial\",font_scale=0.8)\ng = sns.catplot(x=\"Rating\",y='Size',color=\"#34A853\"\n                ,data=data,aspect=2.8)\nsns.despine(left=True)\ng.set_axis_labels(\" \", \" \")\nplt.title(\"Size and Rating\")\nplt.savefig('.png',bbox_inches = 'tight',dpi=300)\nplt.show()","cccf7bfd":"appli=(['Medical', 'Personalization', 'Weather', 'Family', 'Tools',\n       'Communication', 'Sports', 'Game', 'Productivity', 'Lifestyle'])\ndat=data[data.Category.isin(appli)]\nplt.rcParams['figure.figsize'] = 47.1,14.27\n#list=dfA.sort_values(ascending=False).index\nsns.set(style=\"white\",font=\"Arial\",font_scale=2)\ng = sns.catplot(x=\"Category\",y=\"Size\",data=dat,hue=\"Type\", kind=\"box\", height = 10 ,\naspect=2.8,palette=sns.color_palette([\"#4285F4\",\"#EA4335\"]))\ng.despine(left=True)\ng.set_xticklabels(ha='center')\n#g.set( xticks=range(0,34))\ng.set_axis_labels(\" \", \" \")\n#g = g.set_ylabels(\"Rating\")\nplt.title('the size difference between free and paid apps',size = 20)\nplt.savefig('.png',bbox_inches = 'tight',dpi=300)\nplt.show()","b38db0c7":"If installs > 500000000, we call it super app.","890605d5":"**Part7 About Size**","71ee8e21":"****Part2 About Category****","8748d1c0":"- 78 apps are in \"Family\" and other Categories at the same time, for example \"Google Play Games\". ","00076dec":"- Change the name of Category, and make it easier to read.\n- Make Installs, Size, Price and Reviews numeric.","9a4cc433":"- Drop duplicates","dacd3c76":"\n****Part3 About Rating****\n","5ce4f686":"****Part1: Data Cleaning****\n- Dropna","01d15ca8":"****Part4 About Content Rating****","bdebd2b5":"**Part6 About Installs**","3dba594b":"This kernal includes nearly 20 charts. I will use them in my powerpoint, so it will be concise and short of description. Sorry about it. But I hope you like these charts.","6a53ff55":"**Part5 About Price**"}}