{"cell_type":{"f6c1fe1e":"code","94234c0c":"code","431a4c9f":"code","77504ee9":"code","11c67fa5":"code","138f26c2":"code","ed6be4cb":"code","dba6934d":"code","168bb5a0":"code","3ffdd378":"code","1fe2fff4":"code","e282a854":"code","b628e902":"code","96b72a11":"code","39f3181d":"code","b991d1b1":"code","19e8bca3":"code","4c6d2ef1":"code","127003ee":"code","b9d28cec":"code","f209901d":"code","f5b2c47f":"code","db3fc0a7":"code","649583cc":"code","87bbaf4f":"code","25a890df":"code","da53c5b4":"code","484b11aa":"code","39f711f2":"code","74b84416":"code","8cbb6806":"code","e075aecc":"code","e23bd7b3":"code","d537781f":"code","b61eb704":"code","b9703730":"code","afc4433b":"markdown","cedd2bfd":"markdown","fd88f745":"markdown","803c57c7":"markdown","88091f6b":"markdown","93c75bb4":"markdown","b1ee0fc5":"markdown"},"source":{"f6c1fe1e":"import numpy as np #\u0e19\u0e33\u0e40\u0e02\u0e49\u0e32 numpy \u0e41\u0e25\u0e49\u0e27\u0e15\u0e31\u0e49\u0e07\u0e04\u0e33\u0e40\u0e23\u0e35\u0e22\u0e01\u0e27\u0e48\u0e32 np\nimport pandas as pd #\u0e19\u0e33\u0e40\u0e02\u0e49\u0e32 pandas \u0e41\u0e25\u0e49\u0e27\u0e15\u0e31\u0e49\u0e07\u0e04\u0e33\u0e40\u0e23\u0e35\u0e22\u0e01\u0e27\u0e48\u0e32 pd\nimport matplotlib.pyplot as plt #\u0e19\u0e33\u0e40\u0e02\u0e49\u0e32 matplotlib.pyplo \u0e41\u0e25\u0e49\u0e27\u0e15\u0e31\u0e49\u0e07\u0e04\u0e33\u0e40\u0e23\u0e35\u0e22\u0e01\u0e27\u0e48\u0e32 plt\nimport seaborn as sns #\u0e19\u0e33\u0e40\u0e02\u0e49\u0e32 seaborn \u0e41\u0e25\u0e49\u0e27\u0e15\u0e31\u0e49\u0e07\u0e04\u0e33\u0e40\u0e23\u0e35\u0e22\u0e01\u0e27\u0e48\u0e32 sns\nfrom sklearn.preprocessing import MinMaxScaler #\u0e40\u0e23\u0e35\u0e22\u0e01\u0e43\u0e0a\u0e49 MinMaxScaler \u0e08\u0e32\u0e01 sklearn.preprocessing\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))","94234c0c":"# \u0e19\u0e33\u0e40\u0e02\u0e49\u0e32\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 EURUSD_15m_BID_sample \u0e42\u0e14\u0e22\u0e08\u0e30\u0e40\u0e23\u0e35\u0e22\u0e01\u0e43\u0e0a\u0e49\u0e27\u0e48\u0e32 df\ndf = pd.read_csv('..\/input\/EURUSD_15m_BID_sample.csv')\ndf.head() #\u0e41\u0e2a\u0e14\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e35\u0e48\u0e19\u0e33\u0e40\u0e02\u0e49\u0e32\u0e21\u0e32","431a4c9f":"df.info() #\u0e41\u0e2a\u0e14\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e02\u0e2d\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e35\u0e48\u0e19\u0e33\u0e40\u0e02\u0e49\u0e32\u0e21\u0e32","77504ee9":"df.count() #\u0e08\u0e33\u0e19\u0e27\u0e19\u0e41\u0e16\u0e27\u0e02\u0e2d\u0e07\u0e41\u0e15\u0e48\u0e25\u0e30\u0e04\u0e2d\u0e25\u0e31\u0e21\u0e19\u0e4c","11c67fa5":"#\u0e41\u0e2a\u0e14\u0e07\u0e08\u0e33\u0e19\u0e27\u0e19\u0e41\u0e16\u0e27\u0e41\u0e25\u0e30\u0e04\u0e2d\u0e25\u0e31\u0e21\u0e19\u0e4c\ndf.shape","138f26c2":"df.index.min(), df.index.max()","ed6be4cb":"df.isna().any() #\u0e41\u0e2a\u0e14\u0e07\u0e04\u0e27\u0e32\u0e21\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e02\u0e2d\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e42\u0e14\u0e22\u0e1c\u0e25\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e04\u0e37\u0e2d False \u0e2b\u0e21\u0e32\u0e22\u0e16\u0e36\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e44\u0e21\u0e48\u0e21\u0e35\u0e01\u0e32\u0e23\u0e2a\u0e39\u0e0d\u0e2b\u0e32\u0e22","dba6934d":"#\u0e08\u0e33\u0e19\u0e27\u0e19\u0e02\u0e2d\u0e07\u0e0a\u0e38\u0e14\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e02\u0e2d\u0e07\u0e41\u0e15\u0e48\u0e25\u0e30\u0e04\u0e2d\u0e25\u0e31\u0e21\u0e19\u0e4c\ndf.nunique()","168bb5a0":"#\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25heatmap \u0e02\u0e2d\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e35\u0e48\u0e19\u0e33\u0e40\u0e02\u0e49\u0e32\u0e21\u0e32\u0e2b\u0e23\u0e37\u0e2d df \nimport matplotlib.pyplot as plt #import matplotlib.pyplot \u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49\u0e04\u0e33\u0e2a\u0e31\u0e48\u0e07\u0e43\u0e19\u0e01\u0e32\u0e23\u0e40\u0e23\u0e35\u0e22\u0e01\u0e27\u0e48\u0e32 plt\n\nimport seaborn as sns #import seaborn \u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49\u0e04\u0e33\u0e2a\u0e31\u0e48\u0e07\u0e43\u0e19\u0e01\u0e32\u0e23\u0e40\u0e23\u0e35\u0e22\u0e01\u0e27\u0e48\u0e32 sns\ncorr =df.corr()\nsns.set_context(\"notebook\", font_scale=1.0, rc={\"lines.linewidth\": 2.5})\nplt.figure(figsize=(13,7))\nmask = np.zeros_like(corr)\nmask[np.triu_indices_from(mask, 1)] = True\na = sns.heatmap(corr,mask=mask, annot=True, fmt='.2f')\nrotx = a.set_xticklabels(a.get_xticklabels(), rotation=90)\nroty = a.set_yticklabels(a.get_yticklabels(), rotation=30)","3ffdd378":"# \u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e0a\u0e37\u0e48\u0e2d\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e44\u0e2b\u0e49\u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e07\u0e48\u0e32\u0e22\u0e02\u0e36\u0e49\u0e19\u0e14\u0e49\u0e27\u0e22\u0e04\u0e33\u0e2a\u0e31\u0e48\u0e07 rename \u0e42\u0e14\u0e22\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e15\u0e31\u0e27\u0e43\u0e2b\u0e0d\u0e48\u0e02\u0e49\u0e32\u0e07\u0e2b\u0e19\u0e49\u0e32\ndf.rename(columns={'Time' : 'timestamp', 'Open' : 'open', 'Close' : 'close', \n                   'High' : 'high', 'Low' : 'low', 'Close' : 'close', 'Volume' : 'volume'}, inplace=True)\ndf['timestamp'] = pd.to_datetime(df['timestamp'], infer_datetime_format=True)\ndf.set_index('timestamp', inplace=True)\ndf = df.astype(float)\ndf.head() #\u0e40\u0e0a\u0e47\u0e04\u0e27\u0e48\u0e32\u0e0a\u0e37\u0e48\u0e2d\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e23\u0e36\u0e22\u0e31\u0e07","1fe2fff4":"df['low'].head #\u0e14\u0e39\u0e04\u0e48\u0e32\u0e01\u0e32\u0e23\u0e02\u0e32\u0e22\u0e02\u0e31\u0e49\u0e19\u0e15\u0e48\u0e33\u0e2a\u0e38\u0e14\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e19\u0e33\u0e21\u0e32\u0e2b\u0e32\u0e04\u0e48\u0e32\u0e40\u0e09\u0e25\u0e35\u0e48\u0e22","e282a854":"df['high'].head #\u0e14\u0e39\u0e04\u0e48\u0e32\u0e01\u0e32\u0e23\u0e02\u0e32\u0e22\u0e02\u0e31\u0e49\u0e19\u0e2a\u0e39\u0e07\u0e2a\u0e38\u0e14\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e19\u0e33\u0e21\u0e32\u0e2b\u0e32\u0e04\u0e48\u0e32 average","b628e902":"#\u0e04\u0e33\u0e19\u0e27\u0e19\u0e2b\u0e32\u0e04\u0e48\u0e32\u0e40\u0e09\u0e25\u0e35\u0e48\u0e22\ndf['avg_price'] = (df['low'] + df['high'])\/2 #\u0e19\u0e33\u0e23\u0e32\u0e04\u0e32\u0e2a\u0e39\u0e07\u0e41\u0e25\u0e30\u0e15\u0e48\u0e33\u0e21\u0e32\u0e23\u0e27\u0e21\u0e01\u0e31\u0e19\u0e41\u0e25\u0e30\u0e2b\u0e32\u0e23\u0e2a\u0e2d\u0e07\u0e08\u0e30\u0e44\u0e14\u0e49\u0e04\u0e48\u0e32\u0e40\u0e09\u0e25\u0e35\u0e48\u0e22\u0e02\u0e2d\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e42\u0e14\u0e22\u0e08\u0e30\u0e15\u0e31\u0e49\u0e07\u0e0a\u0e37\u0e48\u0e2d\u0e02\u0e2d\u0e07\u0e04\u0e33\u0e2a\u0e31\u0e48\u0e07\u0e17\u0e35\u0e48\u0e43\u0e0a\u0e49\u0e40\u0e23\u0e35\u0e22\u0e01\u0e27\u0e48\u0e32 avg_price","96b72a11":"#\u0e41\u0e2a\u0e14\u0e07\u0e04\u0e48\u0e32\u0e40\u0e09\u0e25\u0e35\u0e48\u0e22\ndf['avg_price'].head ","39f3181d":"df['low'].head #\u0e41\u0e2a\u0e14\u0e07\u0e23\u0e32\u0e04\u0e32\u0e15\u0e48\u0e33\u0e2a\u0e38\u0e14","b991d1b1":"df['high'].head #\u0e41\u0e2a\u0e14\u0e07\u0e23\u0e32\u0e04\u0e32\u0e2a\u0e39\u0e07\u0e2a\u0e38\u0e14","19e8bca3":"df['open'].head #\u0e41\u0e2a\u0e14\u0e07\u0e23\u0e32\u0e04\u0e32\u0e40\u0e1b\u0e34\u0e14","4c6d2ef1":"df['close'].head #\u0e41\u0e2a\u0e14\u0e07\u0e23\u0e32\u0e04\u0e32\u0e1b\u0e34\u0e14","127003ee":"#\u0e19\u0e33\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e21\u0e32\u0e04\u0e33\u0e19\u0e27\u0e13\u0e2b\u0e32\u0e04\u0e48\u0e32 OHLC \u0e42\u0e14\u0e22\u0e08\u0e30\u0e19\u0e33\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e21\u0e32\u0e41\u0e25\u0e49\u0e27\u0e15\u0e31\u0e49\u0e07\u0e0a\u0e37\u0e48\u0e2d\u0e40\u0e23\u0e35\u0e22\u0e01\u0e27\u0e48\u0e32 ohlc_price\ndf['ohlc_price'] = (df['low'] + df['high'] + df['open'] + df['close'])\/4\n","b9d28cec":"df['ohlc_price'].head #\u0e41\u0e2a\u0e14\u0e07\u0e04\u0e48\u0e32 OHLC","f209901d":"#\u0e04\u0e33\u0e19\u0e27\u0e13\u0e2b\u0e32\u0e04\u0e48\u0e32 diff \u0e08\u0e32\u0e01\u0e01\u0e32\u0e23\u0e40\u0e1b\u0e34\u0e14\u0e41\u0e25\u0e30\u0e1b\u0e34\u0e14\u0e02\u0e2d\u0e07\u0e23\u0e32\u0e04\u0e32\u0e41\u0e25\u0e49\u0e27\u0e15\u0e31\u0e49\u0e07\u0e0a\u0e37\u0e48\u0e2d\u0e40\u0e23\u0e35\u0e22\u0e01\u0e27\u0e48\u0e32 oc_diff\ndf['oc_diff']    = df['open'] - df['close']","f5b2c47f":"df['oc_diff'].head","db3fc0a7":"# \u0e2b\u0e32\u0e04\u0e48\u0e32 Range \u0e2b\u0e23\u0e37\u0e2d\u0e1c\u0e25\u0e15\u0e48\u0e32\u0e07\u0e02\u0e2d\u0e07\u0e04\u0e48\u0e32\u0e2a\u0e39\u0e07\u0e2a\u0e38\u0e14\u0e41\u0e25\u0e30\u0e15\u0e48\u0e33\u0e2a\u0e38\u0e14\u0e02\u0e2d\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 \u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49\u0e04\u0e33\u0e40\u0e23\u0e35\u0e22\u0e01\u0e27\u0e48\u0e32 range\ndf['range']     = df['high'] - df['low']","649583cc":"df['range'].head #\u0e41\u0e2a\u0e14\u0e07\u0e1c\u0e25\u0e15\u0e48\u0e32\u0e07","87bbaf4f":"#\u0e2a\u0e23\u0e38\u0e1b\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e43\u0e2b\u0e21\u0e48\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14\n\ndf['momentum']  = df['volume'] * (df['open'] - df['close'])\ndf['avg_price'] = (df['low'] + df['high'])\/2\ndf['range']     = df['high'] - df['low']\ndf['ohlc_price'] = (df['low'] + df['high'] + df['open'] + df['close'])\/4\ndf['oc_diff']    = df['open'] - df['close']\n\n\n#\u0e23\u0e27\u0e21\u0e16\u0e36\u0e07\u0e44\u0e2a\u0e48\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e02\u0e2d\u0e07 \u0e0a\u0e31\u0e48\u0e27\u0e42\u0e21\u0e07 \u0e27\u0e31\u0e19 \u0e41\u0e25\u0e30 \u0e2a\u0e31\u0e1b\u0e14\u0e32\u0e2b\u0e4c\u0e25\u0e07\u0e44\u0e1b\u0e14\u0e49\u0e27\u0e22\n\ndf['hour'] = df.index.hour\ndf['day']  = df.index.weekday\ndf['week'] = df.index.week\n\n","25a890df":"# \u0e40\u0e1e\u0e34\u0e48\u0e21 PCA \u0e41\u0e17\u0e19\u0e01\u0e32\u0e23\u0e25\u0e14\u0e21\u0e34\u0e15\u0e34\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e41\u0e25\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e01\u0e32\u0e23\u0e1b\u0e23\u0e31\u0e1a\u0e1b\u0e23\u0e38\u0e07\u0e04\u0e27\u0e32\u0e21\u0e41\u0e21\u0e48\u0e19\u0e22\u0e33\u0e40\u0e25\u0e47\u0e01\u0e19\u0e49\u0e2d\u0e22\nfrom sklearn.decomposition import PCA\n\ndataset = df.copy().values.astype('float32')\npca_features = df.columns.tolist()\n\npca = PCA(n_components=1)\ndf['pca'] = pca.fit_transform(dataset)","da53c5b4":"import matplotlib.colors as colors #\u0e40\u0e23\u0e35\u0e22\u0e01\u0e43\u0e0a\u0e49 matplotlib.colors \u0e42\u0e14\u0e22\u0e04\u0e33\u0e40\u0e23\u0e35\u0e22\u0e01\u0e43\u0e0a\u0e49\u0e04\u0e37\u0e2d colors\nimport matplotlib.cm as cm #\u0e40\u0e23\u0e35\u0e22\u0e01\u0e43\u0e0a\u0e49 matplotlib.cm \u0e42\u0e14\u0e22\u0e04\u0e33\u0e40\u0e23\u0e35\u0e22\u0e01\u0e43\u0e0a\u0e49\u0e04\u0e37\u0e2d cm\nimport pylab #\u0e40\u0e23\u0e35\u0e22\u0e01\u0e43\u0e0a\u0e49 libraly pylab\n\nplt.figure(figsize=(10,5)) #\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e02\u0e19\u0e32\u0e14\nnorm = colors.Normalize(df['ohlc_price'].values.min(), df['ohlc_price'].values.max())\ncolor = cm.viridis(norm(df['ohlc_price'].values))\nplt.scatter(df['ohlc_price'].values, df['pca'].values, lw=0, c=color, cmap=pylab.cm.cool, alpha=0.3, s=1)\nplt.title('ohlc_price vs pca') #\u0e15\u0e31\u0e49\u0e07\u0e0a\u0e37\u0e48\u0e2d\u0e2b\u0e31\u0e27\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\nplt.show()\n\nplt.figure(figsize=(10,5)) #\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e02\u0e19\u0e32\u0e14\nnorm = colors.Normalize(df['volume'].values.min(), df['volume'].values.max())\ncolor = cm.viridis(norm(df['volume'].values))\nplt.scatter(df['volume'].values, df['pca'].values, lw=0, c=color, cmap=pylab.cm.cool, alpha=0.3, s=1)\nplt.title('volume vs pca') #\u0e15\u0e31\u0e49\u0e07\u0e0a\u0e37\u0e48\u0e2d\u0e2b\u0e31\u0e27\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\nplt.show()\n\nplt.figure(figsize=(10,5)) #\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e02\u0e19\u0e32\u0e14\nnorm = colors.Normalize(df['ohlc_price'].values.min(), df['ohlc_price'].values.max())\ncolor = cm.viridis(norm(df['ohlc_price'].values))\nplt.scatter(df['ohlc_price'].shift().values, df['pca'].values, lw=0, c=color, cmap=pylab.cm.cool, alpha=0.3, s=1)\nplt.title('ohlc_price - 15min future vs pca') #\u0e15\u0e31\u0e49\u0e07\u0e0a\u0e37\u0e48\u0e2d\u0e2b\u0e31\u0e27\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\nplt.show()\n\nplt.figure(figsize=(10,5)) #\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e02\u0e19\u0e32\u0e14\nnorm = colors.Normalize(df['volume'].values.min(), df['volume'].values.max())\ncolor = cm.viridis(norm(df['volume'].values))\nplt.scatter(df['volume'].shift().values, df['pca'].values, lw=0, c=color, cmap=pylab.cm.cool, alpha=0.3, s=1)\nplt.title('volume - 15min future vs pca') #\u0e15\u0e31\u0e49\u0e07\u0e0a\u0e37\u0e48\u0e2d\u0e2b\u0e31\u0e27\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\nplt.show()","484b11aa":"df.head() # \u0e40\u0e0a\u0e47\u0e04\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e43\u0e2b\u0e21\u0e48\u0e2d\u0e35\u0e01\u0e04\u0e23\u0e31\u0e49\u0e07\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e14\u0e39\u0e27\u0e48\u0e32\u0e04\u0e48\u0e32\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e43\u0e2a\u0e48\u0e44\u0e1b\u0e44\u0e2b\u0e21\u0e48\u0e02\u0e36\u0e49\u0e19\u0e23\u0e36\u0e22\u0e31\u0e07","39f711f2":"def create_dataset(dataset, look_back=20):\n    dataX, dataY = [], []\n    for i in range(len(dataset)-look_back-1):\n        a = dataset[i:(i+look_back)]\n        dataX.append(a)\n        dataY.append(dataset[i + look_back])\n    return np.array(dataX), np.array(dataY)","74b84416":"colormap = plt.cm.inferno\nplt.figure(figsize=(15,15))\nplt.title('Heat map', y=1.05, size=15)\nsns.heatmap(df.corr(), linewidths=0.1, vmax=1.0, square=True, cmap=colormap, linecolor='white', annot=True)\nplt.show()\n\nplt.figure(figsize=(15,5))\ncorr = df.corr()\nsns.heatmap(corr[corr.index == 'close'], linewidths=0.1, vmax=1.0, square=True, cmap=colormap, linecolor='white', annot=True);","8cbb6806":"import cufflinks as cf #\u0e40\u0e23\u0e35\u0e22\u0e01\u0e43\u0e0a\u0e49 cufflinks \u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49\u0e04\u0e33\u0e2a\u0e31\u0e48\u0e07\u0e40\u0e23\u0e35\u0e22\u0e01\u0e27\u0e48\u0e32 cf\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot","e075aecc":"init_notebook_mode(connected=True)\ncf.go_offline()","e23bd7b3":"# \u0e19\u0e33\u0e40\u0e02\u0e49\u0e32\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 EURUSD_15m_BID_sample \u0e42\u0e14\u0e22\u0e08\u0e30\u0e40\u0e23\u0e35\u0e22\u0e01\u0e43\u0e0a\u0e49\u0e27\u0e48\u0e32 df1\ndf1 = pd.read_csv('..\/input\/EURUSD_15m_BID_sample.csv')\ndf1.head() #\u0e41\u0e2a\u0e14\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e35\u0e48\u0e19\u0e33\u0e40\u0e02\u0e49\u0e32\u0e21\u0e32","d537781f":"#\u0e40\u0e1e\u0e34\u0e48\u0e21 MA \u0e2b\u0e23\u0e37\u0e2d\u0e01\u0e32\u0e23\u0e02\u0e22\u0e31\u0e1a\u0e02\u0e2d\u0e07\u0e04\u0e48\u0e32\u0e40\u0e09\u0e25\u0e35\u0e48\u0e22\u0e40\u0e02\u0e49\u0e32\u0e44\u0e1b\u0e43\u0e19\u0e0a\u0e38\u0e14\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e44\u0e2b\u0e21\u0e48\u0e17\u0e35\u0e48\u0e16\u0e39\u0e01\u0e15\u0e31\u0e49\u0e07\u0e21\u0e32\ndf1['MA'] = df1['Close'].rolling(window=50).mean()  #\u0e04\u0e33\u0e19\u0e27\u0e13\u0e2b\u0e32\u0e04\u0e48\u0e32\u0e01\u0e32\u0e23\u0e02\u0e22\u0e31\u0e1a\u0e02\u0e2d\u0e07\u0e04\u0e48\u0e32\u0e40\u0e09\u0e25\u0e35\u0e48\u0e22\u0e02\u0e2d\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e41\u0e25\u0e49\u0e27\u0e15\u0e31\u0e49\u0e07\u0e0a\u0e37\u0e48\u0e2d\u0e27\u0e48\u0e32 MA","b61eb704":"df1.head(60) #\u0e41\u0e2a\u0e14\u0e07\u0e04\u0e48\u0e32\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e43\u0e2b\u0e21\u0e48\u0e17\u0e35\u0e48\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e40\u0e02\u0e49\u0e32\u0e21\u0e32\n","b9703730":"df1.iplot(x='Time',y=['Close','MA']) #\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e01\u0e23\u0e32\u0e1f\u0e41\u0e2a\u0e14\u0e07\u0e01\u0e32\u0e23\u0e40\u0e1b\u0e23\u0e35\u0e22\u0e1a\u0e40\u0e17\u0e35\u0e22\u0e1a\u0e23\u0e30\u0e2b\u0e27\u0e48\u0e32\u0e07\u0e23\u0e32\u0e04\u0e32\u0e08\u0e1a\u0e41\u0e25\u0e30\u0e01\u0e32\u0e23\u0e02\u0e22\u0e31\u0e1a\u0e02\u0e2d\u0e07\u0e04\u0e48\u0e32\u0e40\u0e09\u0e25\u0e35\u0e48\u0e22\n","afc4433b":"\u0e40\u0e23\u0e34\u0e48\u0e21\u0e2b\u0e32\u0e04\u0e48\u0e32\u0e40\u0e09\u0e25\u0e35\u0e48\u0e22\u0e19\u0e01\u0e32\u0e23\u0e40\u0e04\u0e25\u0e37\u0e48\u0e2d\u0e19\u0e17\u0e35\u0e48\u0e02\u0e2d\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e2b\u0e23\u0e37\u0e2d MA","cedd2bfd":"\u0e2b\u0e32\u0e04\u0e48\u0e32 diff \u0e42\u0e14\u0e22\u0e40\u0e23\u0e32\u0e08\u0e30\u0e43\u0e0a\u0e49\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e08\u0e32\u0e01\u0e14\u0e49\u0e32\u0e19\u0e1a\u0e19\u0e21\u0e32\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e2b\u0e32\u0e04\u0e48\u0e32 diff \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e44\u0e21\u0e48\u0e44\u0e2b\u0e49\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e35\u0e48\u0e40\u0e02\u0e35\u0e22\u0e19\u0e25\u0e07\u0e43\u0e19 notebook \u0e40\u0e22\u0e2d\u0e30\u0e08\u0e19\u0e40\u0e01\u0e34\u0e19\u0e44\u0e1b","fd88f745":"****\u0e2a\u0e23\u0e38\u0e1b****\n    \u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e17\u0e33\u0e21\u0e32\u0e19\u0e31\u0e49\u0e19\u0e01\u0e47\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e35\u0e48\u0e02\u0e32\u0e14\u0e2b\u0e32\u0e22\u0e08\u0e32\u0e01\u0e0a\u0e38\u0e14\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e35\u0e48\u0e42\u0e2b\u0e25\u0e14\u0e21\u0e32\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e44\u0e2b\u0e49\u0e40\u0e1b\u0e47\u0e19\u0e2a\u0e34\u0e48\u0e07\u0e41\u0e19\u0e30\u0e19\u0e33\u0e1c\u0e39\u0e49\u0e25\u0e07\u0e17\u0e38\u0e19\u0e2d\u0e32\u0e0a\u0e35\u0e1e\u0e41\u0e25\u0e30\u0e2d\u0e35\u0e01\u0e17\u0e31\u0e49\u0e07\u0e22\u0e31\u0e07\u0e17\u0e33\u0e44\u0e2b\u0e49\u0e1c\u0e39\u0e49\u0e25\u0e07\u0e17\u0e38\u0e19\u0e21\u0e35\u0e04\u0e27\u0e32\u0e21\u0e21\u0e31\u0e48\u0e19\u0e43\u0e08\u0e43\u0e19\u0e01\u0e32\u0e23\u0e25\u0e07\u0e17\u0e38\u0e19\u0e2d\u0e35\u0e01\u0e14\u0e49\u0e27\u0e22","803c57c7":"\u0e40\u0e23\u0e34\u0e48\u0e21\u0e04\u0e33\u0e19\u0e27\u0e13\u0e2b\u0e32\u0e04\u0e48\u0e32\u0e40\u0e09\u0e25\u0e35\u0e48\u0e22\u0e02\u0e2d\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e42\u0e14\u0e22\u0e40\u0e23\u0e34\u0e48\u0e21\u0e08\u0e32\u0e01\u0e01\u0e32\u0e23\u0e2b\u0e32\u0e23\u0e32\u0e04\u0e32\u0e15\u0e48\u0e33\u0e41\u0e25\u0e30\u0e2a\u0e39\u0e07","88091f6b":"\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\u0e2b\u0e32\u0e04\u0e48\u0e32 OHLC \u0e42\u0e14\u0e22\u0e04\u0e48\u0e32OHLC \u0e04\u0e37\u0e2d\u0e1c\u0e21\u0e23\u0e27\u0e21\u0e02\u0e2d\u0e07 open high low\u0e41\u0e25\u0e30 close","93c75bb4":"****Question or problem definition**** <br>\n1.\u0e2d\u0e22\u0e32\u0e01\u0e23\u0e39\u0e49\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e22\u0e31\u0e07\u0e02\u0e32\u0e14\u0e2b\u0e32\u0e22\u0e40\u0e1e\u0e23\u0e32\u0e30\u0e08\u0e32\u0e01\u0e17\u0e35\u0e48\u0e14\u0e39\u0e43\u0e19 dataset \u0e41\u0e25\u0e49\u0e27\u0e22\u0e31\u0e07\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e35\u0e48\u0e02\u0e32\u0e14\u0e2b\u0e32\u0e22\u0e2d\u0e22\u0e39\u0e48\u0e21\u0e32\u0e01\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e40\u0e0a\u0e48\u0e19 <br>\n  1.1 \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e04\u0e48\u0e32\u0e40\u0e09\u0e25\u0e35\u0e48\u0e22\u0e02\u0e2d\u0e07\u0e23\u0e32\u0e04\u0e32\u0e02\u0e2d\u0e07\u0e41\u0e15\u0e48\u0e25\u0e30\u0e01\u0e32\u0e23\u0e40\u0e1b\u0e34\u0e14\u0e1b\u0e23\u0e30\u0e21\u0e39\u0e25\u0e41\u0e25\u0e30\u0e1b\u0e34\u0e14\u0e1b\u0e23\u0e30\u0e21\u0e39\u0e25 <br>\n  1.2 \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e42\u0e21\u0e40\u0e21\u0e19\u0e15\u0e31\u0e49\u0e21\u0e02\u0e2d\u0e07\u0e0a\u0e38\u0e14\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 <br>\n  1.3 \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 OHLC \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e19\u0e33\u0e21\u0e32\u0e44\u0e27\u0e49\u0e43\u0e0a\u0e49\u0e27\u0e34\u0e40\u0e04\u0e23\u0e32\u0e30\u0e2b\u0e4c\u0e43\u0e19\u0e17\u0e32\u0e07\u0e40\u0e17\u0e04\u0e19\u0e34\u0e04 <br>\n  1.4 \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 Diff \u0e02\u0e2d\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 <br>\n  1.5 \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 Range \u0e2b\u0e23\u0e37\u0e2d\u0e1c\u0e25\u0e15\u0e48\u0e32\u0e07\u0e02\u0e2d\u0e07\u0e04\u0e48\u0e32\u0e2a\u0e39\u0e07\u0e2a\u0e38\u0e14\u0e41\u0e25\u0e30\u0e15\u0e48\u0e33\u0e2a\u0e38\u0e14\u0e02\u0e2d\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 <br>\n  1.6 \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 Moving Average \u0e2b\u0e23\u0e37\u0e2d\u0e04\u0e48\u0e32\u0e40\u0e09\u0e25\u0e35\u0e48\u0e22\u0e01\u0e32\u0e23\u0e40\u0e04\u0e25\u0e37\u0e48\u0e2d\u0e19\u0e17\u0e35\u0e48\u0e02\u0e2d\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 <br>\n2.\u0e2b\u0e32\u0e04\u0e48\u0e32 PCA \u0e08\u0e32\u0e01\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14 <br>\n3.\u0e04\u0e48\u0e32 Heat map \u0e02\u0e2d\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e2b\u0e25\u0e31\u0e07\u0e08\u0e32\u0e01\u0e43\u0e2a\u0e48\u0e04\u0e48\u0e32\u0e17\u0e35\u0e48\u0e2b\u0e32\u0e21\u0e32\u0e41\u0e25\u0e49\u0e27 <br>\n4.\u0e41\u0e2a\u0e14\u0e07\u0e04\u0e48\u0e32 MA \u0e40\u0e1b\u0e23\u0e35\u0e22\u0e1a\u0e40\u0e17\u0e35\u0e22\u0e1a\u0e01\u0e31\u0e1a close ","b1ee0fc5":"\u0e40\u0e23\u0e34\u0e48\u0e21\u0e2a\u0e23\u0e49\u0e32\u0e07 Heatmap \u0e08\u0e32\u0e01\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e35\u0e48\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e21\u0e32\u0e43\u0e2b\u0e21\u0e48"}}