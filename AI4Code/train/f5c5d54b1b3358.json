{"cell_type":{"7f20e09e":"code","a030df0a":"code","d952b23f":"code","f853da10":"code","03331f26":"code","8960268c":"code","ea9be8ee":"code","f3588ea9":"code","1a6f45c5":"code","388baec1":"code","a004a6f3":"code","9dcd2511":"code","33448973":"code","2aa8ac3d":"code","9ee77da9":"code","5044564c":"code","04bedee8":"code","2b01a1df":"code","47165f93":"code","08dabda2":"code","6a8c6dd0":"code","4b77dcc2":"code","378ef298":"code","35957da1":"code","d66a847b":"code","7ae60926":"code","689b9877":"code","2361cb3f":"code","5a4c4109":"code","cf65aa1a":"code","2ec1f2b5":"code","696c018c":"code","e38af168":"markdown","b0bfba7e":"markdown","2139f6b3":"markdown","04639e08":"markdown"},"source":{"7f20e09e":"import pandas as pd\n\ndata = pd.read_csv('..\/input\/reddit-vaccine-myths\/reddit_vm.csv')","a030df0a":"pip install stylecloud","d952b23f":"super_str = ''\nfor i in data['title'][data['title'].str.lower().str.strip() != 'comment']:\n    super_str += i","f853da10":"import stylecloud\n\nstylecloud.gen_stylecloud(text=super_str,\n                          icon_name='fab fa-reddit',\n                          palette='colorbrewer.diverging.Spectral_11',\n                          background_color='black',\n                          gradient='horizontal',\n                          size=1024)","03331f26":"import os\nfrom IPython.display import Image\nImage(filename=\".\/stylecloud.png\", width=1024, height=1024)","8960268c":"import numpy as np\n\ncomment_str = ''\n\nfor i in data.body[data.body.notnull()]:\n    comment_str += i\n\nstylecloud.gen_stylecloud(text= super_str,\n                          icon_name='fab fa-reddit-alien',\n                          palette='colorbrewer.diverging.Spectral_11',\n                          background_color='black',\n                          gradient='horizontal',\n                          size=1024,\n                          output_name='comment.png')","ea9be8ee":"import os\nfrom IPython.display import Image\nImage(filename=\".\/comment.png\", width= 1024, height=1024)","f3588ea9":"# import re\n\n# for i in data.title[~data.title.str.contains('covid', flags=re.IGNORECASE)]:\n#     print(i)","1a6f45c5":"import numpy as np\n\ncomment_str = ''\n\nfor i in data.body[data.body.notnull()]:\n    if not i.startswith('http'):\n        comment_str += i\n\nstylecloud.gen_stylecloud(text= super_str + ' ' + comment_str,\n                          icon_name='fab fa-reddit-alien',\n                          palette='colorbrewer.diverging.Spectral_11',\n                          background_color='black',\n                          gradient='horizontal',\n                          size=1024,\n                          output_name='combine.png')","388baec1":"import os\nfrom IPython.display import Image\nImage(filename=\".\/combine.png\", width= 1024, height=1024)","a004a6f3":"top100_str = ''\nfor i in data.sort_values('comms_num', ascending=False)['title'][:100]:\n    top100_str += i","9dcd2511":"stylecloud.gen_stylecloud(text=top100_str,\n                          icon_name='fab fa-reddit-alien',\n                          palette='colorbrewer.diverging.Spectral_11',\n                          background_color='black',\n                          gradient='horizontal',\n                          size=1024,\n                          output_name='combine.png')","33448973":"import os\nfrom IPython.display import Image\nImage(filename=\".\/combine.png\", width= 1024, height=1024)","2aa8ac3d":"! pip install spacytextblob","9ee77da9":"import spacy\nfrom spacytextblob.spacytextblob import SpacyTextBlob","5044564c":"titles_filtered = data.title[data.title.notnull() & ~data.title.str.contains('Comment')]","04bedee8":"nlp = spacy.load('en_core_web_lg')\nspacy_text_blob = SpacyTextBlob()\nnlp.add_pipe(spacy_text_blob)\n\nftitles_docs = []\nfor i in titles_filtered:\n    doc = nlp(i)\n    ftitles_docs.append(doc)","2b01a1df":"positive = []\nnegative = []\nneutral = []\n\nfor i in ftitles_docs:\n    if i._.sentiment.polarity < 0:\n        negative.append(i)\n    elif i._.sentiment.polarity > 0:\n        positive.append(i)\n    else:\n        neutral.append(i)","47165f93":"len(positive), len(negative), len(neutral)","08dabda2":"stylecloud.gen_stylecloud(text=' '.join([i.text for i in positive]),\n                          icon_name='fas fa-search-plus',\n                          palette='colorbrewer.diverging.Spectral_11',\n                          background_color='black',\n                          gradient='horizontal',\n                          size=1024,\n                          output_name='positive.png')","6a8c6dd0":"import os\nfrom IPython.display import Image\nImage(filename=\".\/positive.png\", width= 1024, height=1024)","4b77dcc2":"stylecloud.gen_stylecloud(text=' '.join([i.text for i in neutral]),\n                          icon_name='fas fa-meh-blank',\n                          palette='colorbrewer.diverging.Spectral_11',\n                          background_color='black',\n                          gradient='horizontal',\n                          size=1024,\n                          output_name='neutral.png')","378ef298":"import os\nfrom IPython.display import Image\nImage(filename=\".\/neutral.png\", width=1024, height=1024)","35957da1":"stylecloud.gen_stylecloud(text=' '.join([i.text for i in negative]),\n                          icon_name='fas fa-search-minus',\n                          palette='colorbrewer.diverging.Spectral_11',\n                          background_color='black',\n                          gradient='horizontal',\n                          size=1024,\n                          output_name='negative.png')","d66a847b":"import os\nfrom IPython.display import Image\nImage(filename=\".\/negative.png\", width= 1024, height=1024)","7ae60926":"positive_assess = []\nnegative_assess = []\nneutral_assess = []\n\nassess = []\n\nfor i in ftitles_docs:\n    if i._.sentiment.polarity < 0:\n        for j in i._.sentiment.assessments:\n            for k in j[0]:\n                negative_assess.append(k)\n    elif i._.sentiment.polarity > 0:\n        for j in i._.sentiment.assessments:\n            for k in j[0]:\n                positive_assess.append(k)\n    else:\n        for j in i._.sentiment.assessments:\n            for k in j[0]:\n                neutral_assess.append(k)","689b9877":"stylecloud.gen_stylecloud(text=' '.join([i for i in positive_assess]),\n                          icon_name='fas fa-plus-square',\n                          palette='colorbrewer.diverging.Spectral_11',\n                          background_color='black',\n                          gradient='horizontal',\n                          size=1024,\n                          output_name='positive_assess.png')","2361cb3f":"import os\nfrom IPython.display import Image\nImage(filename=\".\/positive_assess.png\", width= 1024, height=1024)","5a4c4109":"stylecloud.gen_stylecloud(text=' '.join([i for i in negative_assess]),\n                          icon_name='fas fa-minus-square',\n                          palette='colorbrewer.diverging.Spectral_11',\n                          background_color='black',\n                          gradient='horizontal',\n                          size=1024,\n                          output_name='negative_assess.png')","cf65aa1a":"import os\nfrom IPython.display import Image\nImage(filename=\".\/negative_assess.png\", width= 1024, height=1024)","2ec1f2b5":"stylecloud.gen_stylecloud(text=' '.join([i for i in neutral_assess]),\n                          icon_name='fab fa-creative-commons-zero',\n                          palette='colorbrewer.diverging.Spectral_11',\n                          background_color='black',\n                          gradient='horizontal',\n                          size=1024,\n                          output_name='neutral_assess.png')","696c018c":"import os\nfrom IPython.display import Image\nImage(filename=\".\/neutral_assess.png\", width= 1024, height=1024)","e38af168":"Visualization of the texts in the positive, negative and neutral myths found.","b0bfba7e":"Filter the titles of Myths.","2139f6b3":"Find the number of positive and negative titles.","04639e08":"Let's understand the model's perspective on the sentences it has analyzed. Which words led to the different decision?"}}