{"cell_type":{"66658a73":"code","dc41ebab":"code","c4ea809d":"code","7c0fea93":"code","ad400082":"code","d2c29feb":"code","92126be8":"code","8c510ec5":"code","71cf0b55":"code","3b1bbccc":"code","bb88895f":"code","8602a2ac":"code","0464880f":"code","2874a1a6":"code","8c0285df":"code","e83b1f8a":"code","981aae0f":"code","a0df9dd3":"code","f4347396":"code","176e7e41":"code","82fa65b3":"code","0f0bfc77":"code","5ab11747":"code","0119d7c5":"code","77039a84":"code","0e31ab19":"code","fdec5672":"code","dda5e95f":"code","87c13d4a":"code","d6c05684":"code","8e8ac0b4":"markdown","39b11e8e":"markdown"},"source":{"66658a73":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np","dc41ebab":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.preprocessing import LabelEncoder","c4ea809d":"adult = pd.read_csv(\"..\/input\/adult-census-income\/adult.csv\", sep = ',', names = ['age', 'workclass', 'fnIwgt', 'education', 'education.num', 'marital.status', 'occupation', 'relationship', 'race', 'sex', 'capital.gain', 'capital.loss', 'hours.per.week', 'native.country', 'income'])\n","7c0fea93":"adult.shape","ad400082":"adult.head()","d2c29feb":"adult.tail()","92126be8":"adult.describe()","8c510ec5":"n_records = adult.shape[0]\nn_greater_50k = adult[adult['income'] == '>50K']. shape[0]\nn_at_most_50k = adult[adult['income'] == '<=50K']. shape[0]\ngreater_percent = (n_greater_50k \/ n_records) * 100\nprint(\"Total number of records: {}\".format(n_records))\nprint(\"Individuals making more that $50,000: {}\".format(n_greater_50k))\nprint(\"Individuals making at most $50,000: {}\".format(n_at_most_50k))\nprint(\"Percentage of individuals making more than $50,00: {}\".format(greater_percent))","71cf0b55":"le = LabelEncoder()","3b1bbccc":"for col in adult.columns:\n    if adult[col].dtypes == 'object':\n        adult[col] = le.fit_transform(adult[col])","bb88895f":"adult.head()","8602a2ac":"dataset = pd.read_csv(\"..\/input\/adult-census-income\/adult.csv\")\n#removing '?' containing rows\ndataset = dataset[(dataset != '?').all(axis=1)]\n#label the income objects as 0 and 1\ndataset['income'] = dataset['income'].map({'<=50K': 0, '>50K': 1})\n\nsns.catplot( x = 'education.num', y = 'income',data = dataset,kind = 'bar',height = 6)\nplt.show()","0464880f":"#explore which country do most people belong\nplt.figure(figsize=(38,14))\nsns.countplot(x='native.country',data=dataset)\nplt.show()","2874a1a6":"#marital.status vs income\nsns.factorplot(x='marital.status',y='income',data=dataset,kind='bar',height=8)\nplt.show()","8c0285df":"#relationship vs income\nsns.factorplot(x='relationship',y='income',data=dataset,kind='bar',size=7)\nplt.show()","e83b1f8a":"for column in dataset:\n    enc=LabelEncoder()\n    if dataset.dtypes[column]==np.object:\n         dataset[column]=enc.fit_transform(dataset[column])\n","981aae0f":"plt.figure(figsize=(14,10))\nsns.heatmap(adult.corr(),annot=True,fmt='.2f')\nplt.show()","a0df9dd3":"from sklearn.preprocessing import LabelEncoder","f4347396":"le = LabelEncoder()","176e7e41":"for col in adult.columns:\n    if adult[col].dtypes == 'object':\n        adult[col] = le.fit_transform(adult[col])","82fa65b3":"adult.head()","0f0bfc77":"X = adult[['age', 'workclass', 'fnIwgt', 'education', 'education.num', 'marital.status', 'occupation', 'relationship', 'race', 'sex', 'capital.gain', 'capital.loss', 'hours.per.week', 'native.country', 'income']]","5ab11747":"Y = adult.income","0119d7c5":"x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size = 0.30, random_state = 42)","77039a84":"model = []","0e31ab19":"model.append((\"LR\", LogisticRegression()))\nmodel.append((\"LDA\", LinearDiscriminantAnalysis()))\nmodel.append((\"KNN\", KNeighborsClassifier()))\nmodel.append((\"CART\", DecisionTreeClassifier()))\nmodel.append((\"NB\", GaussianNB()))","fdec5672":"result = []","dda5e95f":"names = []","87c13d4a":"from sklearn import model_selection","d6c05684":"for name, models in model:\n    kfold = model_selection.KFold(n_splits = 10, random_state = 7)\n    cv_result = model_selection.cross_val_score(models, x_train, y_train, cv = kfold, scoring = \"accuracy\")\n    result.append(cv_result)\n    names.append(name)\n    msg = \"%s,%f,(%f)\" % (name, cv_result.mean(), cv_result.std())\n    print(msg)","8e8ac0b4":"1. Import the csv dataset from https:\/\/www.kaggle.com\/uciml\/adult-census-income","39b11e8e":"##\nLR,0.999912,(0.000175)\n##\nLDA,0.789541,(0.006553)\n##\nKNN,0.752116,(0.011613)\n##\nCART,0.999956,(0.000132)\n##\nNB,0.985960,(0.003249)"}}