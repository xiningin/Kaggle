{"cell_type":{"22355a2a":"code","9a202de4":"code","f40e9075":"code","5c929616":"code","c128521b":"code","5f3ae975":"code","bc7ee8b1":"code","7272b2d0":"code","93bbf084":"code","abd938ef":"code","92c75918":"code","d9c51991":"code","121271a6":"code","aff28702":"code","dd424b07":"code","8c0690ff":"code","5b8d4925":"code","3fc055aa":"code","307ccbb7":"code","005290c9":"code","b3d77852":"code","3d66e01f":"code","a287f0c4":"code","b0b035d4":"code","a4e01fa2":"markdown","86d1e1e4":"markdown","0296dcec":"markdown","ccf74c1d":"markdown","723b1f6d":"markdown","180f7bb1":"markdown","6613404e":"markdown"},"source":{"22355a2a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9a202de4":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","f40e9075":"import plotly as pt\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.offline import download_plotlyjs,init_notebook_mode,plot,iplot\ninit_notebook_mode(connected=True)\nimport csv","5c929616":"data=pd.read_csv('..\/input\/gtd\/globalterrorismdb_0718dist.csv',low_memory=False)","c128521b":"data.head()","5f3ae975":"data.columns.values\n","bc7ee8b1":"pd.set_option('display.max_columns',135)\ndata.head()","7272b2d0":"data.rename(columns={'iyear':'Year','imonth':'Month','iday':\"day\",'gname':'Group','country_txt':'Country','region_txt':'Region',\n                     'provstate':'State','city':'City',\n                     'attacktype1_txt':'Attacktype','targtype1_txt':'Targettype','weaptype1_txt':'Weapon','nkill':'kill',\n                     'nwound':'Wound'},inplace=True)","93bbf084":"data.head()","abd938ef":"Extracting Data of our use","92c75918":"data = data[['Year','Month','day','Country','State','Region','City','latitude','longitude',\"Attacktype\",'kill',\n               'Wound','target1','Group','Targettype','Weapon']]","d9c51991":"plt.subplots(figsize=(18,4))\nsns.barplot(data['Country'].value_counts()[:15].index,data['Country'].value_counts()[:15].values)\nplt.title('Top 15 Affected Countries')\nplt.xlabel('Countries')\nplt.ylabel('Number of Attacks')\nplt.xticks(rotation = 90)\nplt.show()","121271a6":"top15_perc=data['Country'].value_counts()[:15]\ntop15_perc.dropna()\ntop15_perc.plot(kind='pie',autopct=\"%1.1f%%\",figsize=(6,6))","aff28702":"total_aff=data[['Country','kill','Wound']]\ntotal_aff.dropna()\ntotal_aff=total_aff.groupby(['Country'])[['kill','Wound']].sum()\ntotal_aff=total_aff.sort_values('kill')\ntop_total=total_aff.tail(20)\ntop_total.plot(kind='bar',stacked=True,figsize=(18,4))\nplt.xlabel('Top 20 Affected Countries')\nplt.ylabel('Total Population Affected')\nplt.title('TOTAL AFFECTED POPULATOIN BETWEEN 1970-2017 [Top 20 Affected Countries]')","dd424b07":"y2k=data[['Year','kill','Wound']]\ny2k=y2k.groupby('Year')[['kill','Wound']].sum()\ny2k=y2k.tail(18)\ny2k.reset_index(inplace=True)","8c0690ff":"y2k.plot(x='Year',y=['kill','Wound'],kind='bar',figsize=(18,4))\nplt.title('Number of People Affected ---  Year 2000 Onwards')\nplt.ylabel('Number of People')","5b8d4925":"y1970=data[data['kill']>0][['Year','kill','Wound']]\ny1970.dropna()\ny1970=y1970.groupby(['Year'])[['kill','Wound']].sum()\n\ny1970.plot(kind='bar',stacked=True,figsize=(18,4))\nplt.title('Population Affected from year 1970 Onwards')\nplt.ylabel('Number of Peopel')\nplt.show()","3fc055aa":"plt.figure(figsize=(8,8))\ndata['Attacktype'].value_counts().plot.pie(autopct=\"%1.1f%%\")\nplt.tight_layout()","307ccbb7":"kills=data.groupby('Year')['kill'].sum()\nfig=plt.figure(figsize=(18,4))\nkills.plot(kind='bar')\nplt.ylabel('Total Kills')","005290c9":"type_num=data['Attacktype'].value_counts()\ntype_num=list(type_num)\nAttack_type=['Bombng\/Explosion','Armed Assault','Assassination','Kidnapping','Facility Attacks','Unkown','Unarmed Assault','Hostage Taking','Hijacking']","b3d77852":"d = {'Attack_type':Attack_type,'Count':type_num}\ndf = pd.DataFrame(d)","3d66e01f":"fig = px.pie(df, values='Count', names='Attack_type', title='Percentage share of Different Types of Attack')\n#fig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","a287f0c4":"fig = px.pie(df, values='Count', names='Attack_type', title='Percentage share of Different Types of Attack')\nfig.update_traces(textposition='inside', textinfo='value')\nfig.show()","b0b035d4":"byc=data.groupby('Year')[['kill','Wound']].sum()\nbub=byc.reset_index()\n#bub.iplot(kind='bubble',x='Year',y='kill',size='Wound',title=\"Number of killed People on Y and Wounded People by Size\")\nfig=px.scatter(bub,x='Year',y='kill',size='Wound',title=\"Number of killed People on Y and Wounded People by Size\")\nfig.show()","a4e01fa2":"A bubble plot, where size of bubble represents number of people wounded and its position represents number of people killed that year. ","86d1e1e4":"Total people Affected from year 1970 to 2017 [Stacked bar plot]","0296dcec":"Renaming Columns for better Readability","ccf74c1d":"Fig_1  Percentage wise\nFig_2  Number of times each type of attack happend","723b1f6d":"Which attack type is most prefered by terror groups?","180f7bb1":"Total Population Affected from  Terror by each year ,number of killed people and wounded people stacked  ","6613404e":"Number of People Affected year 2000 onwards"}}