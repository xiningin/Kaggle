{"cell_type":{"8cc771c9":"code","96ccafe5":"code","ee50b954":"code","1ef6ea9d":"code","b14c2fd0":"code","b1156a4f":"code","b95a287b":"code","e896270c":"code","bda8928b":"code","47763e5d":"code","f3bf648b":"code","3d5cf987":"code","a5e5cc08":"code","8bb060cc":"code","ce548c13":"code","4dd2a45c":"code","01ccd5a9":"code","4ee9b910":"code","9e1783dc":"code","a9861ec4":"code","3d8f2d65":"code","0904a613":"code","1f15e96e":"code","bf69a5fa":"code","39cf978e":"code","76a22f3b":"code","9868421a":"code","36ea8100":"code","80ccd859":"code","07c26323":"code","9c72fc7b":"code","5a756861":"code","14d06e7e":"code","58441430":"code","f99eb1d4":"code","0abd359b":"code","855aa8d4":"code","93140c32":"code","7b3ef991":"code","967e3b49":"code","a6a729c9":"markdown","a1f6eab3":"markdown","a54f9e2d":"markdown","1165ced0":"markdown","b37976cb":"markdown","19f5f41b":"markdown","184f78f3":"markdown"},"source":{"8cc771c9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","96ccafe5":"#Reading and Analysis\ndf = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ndf_test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ndf.head()","ee50b954":"import matplotlib.pyplot as plt\nimport seaborn as sns","1ef6ea9d":"df.info()","b14c2fd0":"df.describe()","b1156a4f":"df.info()","b95a287b":"sns.pairplot(df, hue = 'Survived')\nplt.show()","e896270c":"#Dropping useful columns\ndf.drop(columns = ['PassengerId','Name','Ticket','Cabin','Embarked'], inplace = True)\ndf_test.drop(columns = ['PassengerId','Name','Ticket','Cabin','Embarked'], inplace = True)","bda8928b":"#Checking missing values\ndf.isnull().sum()","47763e5d":"df.Age.median()","f3bf648b":"df.Age.fillna(28, inplace = True)","3d5cf987":"df.Survived.value_counts()","a5e5cc08":"df.isnull().sum()","8bb060cc":"df_test.isnull().sum()","ce548c13":"df_test.Age.fillna(28, inplace = True)","4dd2a45c":"df_test.Fare.describe()","01ccd5a9":"df[df.Pclass==3].median()","4ee9b910":"df_test.Fare.fillna(8.05, inplace = True)","9e1783dc":"df_test.isnull().sum()","a9861ec4":"#Getting the label in a different variable\ny = df['Survived']","3d8f2d65":"y","0904a613":"df.drop(columns=['Survived'], inplace = True)","1f15e96e":"df.head()","bf69a5fa":"df.Sex.replace('female', 1, inplace=True)\ndf.Sex.replace('male', 0, inplace=True)\ndf_test.Sex.replace('female', 1, inplace=True)\ndf_test.Sex.replace('male', 0, inplace=True)","39cf978e":"df.head()","76a22f3b":"#from sklearn.preprocessing import StandardScaler\n\n#scaler = StandardScaler()","9868421a":"#scaler.fit(df.iloc[:,[2,5]])","36ea8100":"#df.iloc[:,[2,5]] = scaler.transform(df.iloc[:,[2,5]])\n#df.head()","80ccd859":"#df_test.iloc[:,[2,5]] = scaler.transform(df_test.iloc[:,[2,5]])\n#df_test.head()","07c26323":"df['Fare'] = pd.qcut(df['Fare'], 4, labels=[0, 1, 2, 3])\ndf.head()","9c72fc7b":"df['Age'] = pd.qcut(df['Age'], 4, labels=[0, 1, 2, 3])\ndf.head()","5a756861":"#importing and fitting the model\n#from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import GridSearchCV\n\n#lr = LogisticRegression()\n#parameters = {\n#    'solver': ['newton-cg', 'lbfgs', 'liblinear', 'sag', 'saga']\n#}\n\n#clf = GridSearchCV(lr, parameters, cv = 5, n_jobs = -1)\n#clf.fit(df, y)","14d06e7e":"from sklearn.ensemble import RandomForestClassifier\n\nRFC = RandomForestClassifier()\n\n\n## Search grid for optimal parameters\nrf_param_grid = {\"max_depth\": [None],\n              \"min_samples_split\": [2, 3, 10],\n              \"min_samples_leaf\": [1, 3, 10],\n              \"bootstrap\": [False],\n              \"n_estimators\" :[100,300],\n              \"criterion\": [\"gini\"]}\n\n\ngsRFC = GridSearchCV(RFC,param_grid = rf_param_grid, cv=10, scoring=\"accuracy\", n_jobs=-1, verbose = 1)\n\ngsRFC.fit(df,y)","58441430":"#Make predictions\ny_pred = gsRFC.predict(df_test)","f99eb1d4":"#random_forest = RandomForestClassifier(n_estimators=100)\n#random_forest.fit(df, y)\n#y_pred = random_forest.predict(df_test)","0abd359b":"Id = np.array(range(892,1310))","855aa8d4":"y_pred = pd.DataFrame(y_pred, columns = ['Survived'])","93140c32":"Id = pd.DataFrame(Id, columns = ['PassengerId'])","7b3ef991":"my_sub = pd.concat([Id, y_pred], axis = 1)\nmy_sub","967e3b49":"my_submission = pd.DataFrame(my_sub)\nmy_submission.to_csv('submission.csv', index = False)","a6a729c9":"## Pre-processing","a1f6eab3":"Getting the rigth shape for submission","a54f9e2d":"## Starting to train","1165ced0":"## Reading database","b37976cb":"## Missing values","19f5f41b":"## Exploring Analytics","184f78f3":"## Categorical values and Standardization\n"}}