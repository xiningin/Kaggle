{"cell_type":{"cefb4209":"code","9756fe1e":"code","737e33ec":"code","2c056900":"code","47f9c6f3":"code","74b1a6cb":"code","02826574":"code","9b778b58":"code","515671e2":"markdown","e8f2c6ff":"markdown","5576a14a":"markdown","079b7e85":"markdown","dd954420":"markdown","64cfcc79":"markdown","084a935b":"markdown","1db661e1":"markdown","66e8ba4f":"markdown","c372cfba":"markdown","934228db":"markdown","77c8b295":"markdown"},"source":{"cefb4209":"import pandas as pd\nfrom learntools.advanced_pandas.grouping_and_sorting import *\n\nreviews = pd.read_csv(\"..\/input\/wine-reviews\/winemag-data-130k-v2.csv\", index_col=0)\npd.set_option(\"display.max_rows\", 5)","9756fe1e":"check_q1(pd.DataFrame())","737e33ec":"# Your code here\ncommon_wine_reviewers =reviews.groupby('taster_twitter_handle').points.count()\ncheck_q1(common_wine_reviewers)","2c056900":"# Your code here\nbest_wine = reviews.groupby('price').points.max()\ncheck_q2(best_wine)","47f9c6f3":"# Your code here\nwine_price_extremes = reviews.groupby('variety').price.agg([min,max]) \ncheck_q3(wine_price_extremes)","74b1a6cb":"# Your code here\nreviewer_mean_ratings = reviews.groupby('taster_name').points.mean()\ncheck_q4(reviewer_mean_ratings)","02826574":"# Your code here\nwine_price_range = reviews.groupby('variety').price.agg([min,max]).sort_values(by=['min','max'],ascending=False)\nwine_price_range\ncheck_q5(wine_price_range)","9b778b58":"# Your code here\nreviews['n'] = 0\ncountry_variety_pairs = reviews.groupby(['country', 'variety']).n.count().sort_values(ascending=False)\ncheck_q6(country_variety_pairs)","515671e2":"# Set Up\nRun the code cell below to load the data before running the exercises.","e8f2c6ff":"**Exercise 5**: What are the most expensive wine varieties? Create a `DataFrame` whose index is wine varieties and whose values are columns with the `min` and the `max` price of wines of this variety. Sort in descending order based on `min` first, `max` second.","5576a14a":"# Checking Your Answers\n\n**Check your answers in each exercise using the  `check_qN` function** (replacing `N` with the number of the exercise). For example here's how you would check an incorrect answer to exercise 1:","079b7e85":"**Exercise 2**: What is the best wine I can buy for a given amount of money? Create a `Series` whose index is wine prices and whose values is the maximum number of points a wine costing that much was given in a review. Sort the valeus by price, ascending (so that `4.0` dollars is at the top and `3300.0` dollars is at the bottom).","dd954420":"**Exercise 6**: What combination of countries and varieties are most common? Create a `Series` whose index is a `MultiIndex`of `{country, variety}` pairs. For example, a pinot noir produced in the US should map to `{\"US\", \"Pinot Noir\"}`. Sort the values in the `Series` in descending order based on wine count.\n\nHint: first run `reviews['n'] = 0`. Then `groupby` the dataset and run something on the column `n`. You won't need `reset_index`.","64cfcc79":"If you get stuck, **use the `answer_qN` function to see the code with the correct answer.**\n\nFor the first set of questions, running the `check_qN` on the correct answer returns `True`.\nFor the second set of questions, using this function to check a correct answer will present an informative graph!","084a935b":"# Introduction\nMaps allow us to transform data in a `DataFrame` or `Series` one value at a time for an entire column. However, often we want to group our data, and then do something specific to the group the data is in. We do this with the `groupby` operation.\n\nIn these exercises we'll apply groupwise analysis to our dataset.\n\n# Relevant Resources\n- [**Grouping Reference and Examples**](https:\/\/www.kaggle.com\/residentmario\/grouping-and-sorting-reference).  \n- [Pandas cheat sheet](https:\/\/github.com\/pandas-dev\/pandas\/blob\/master\/doc\/cheatsheet\/Pandas_Cheat_Sheet.pdf)","1db661e1":"**Exercise 3**: What are the minimum and maximum prices for each `variety` of wine? Create a `DataFrame` whose index is the `variety` category from the dataset and whose values are the `min` and `max` values thereof.","66e8ba4f":"# Keep Going\n\nMove on to [**Data types and missing data workbook**](https:\/\/www.kaggle.com\/kernels\/fork\/598826).\n\n___\nThis is part of the [*Learn Pandas*](https:\/\/www.kaggle.com\/learn\/pandas) series.","c372cfba":"The rest of the exercises are visual.\n\n**Exercise 4**: Are there significant differences in the average scores assigned by the various reviewers? Create a `Series` whose index is reviewers and whose values is the average review score given out by that reviewer. Hint: you will need the `taster_name` and `points` columns.","934228db":"# Exercises","77c8b295":"**Exercise 1**: Who are the most common wine reviewers in the dataset? Create a `Series` whose index is the `taster_twitter_handle` category from the dataset, and whose values count how many reviews each person wrote."}}