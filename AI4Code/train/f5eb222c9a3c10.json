{"cell_type":{"04cc944a":"code","941ed9da":"code","976ca5d6":"code","d69d322a":"code","588c0587":"code","141d808c":"code","a59d0a00":"code","0a36cc68":"code","c712ad38":"code","1daa2354":"code","bac3d3d9":"code","ba90886d":"code","d153ce6d":"code","ea207234":"code","62f92d3b":"code","6f5ff5f5":"code","3d57dd86":"code","a8dbb902":"code","decee4f7":"code","bde32544":"markdown","b1fd99db":"markdown","98057232":"markdown","264f41f8":"markdown","2c41b0cd":"markdown","95a28f3c":"markdown","58dc8e20":"markdown","e21a2979":"markdown","a4d46cab":"markdown","c51500bb":"markdown","be7547c9":"markdown","84030e98":"markdown","3ec1eb94":"markdown","fe8da1e8":"markdown","36031507":"markdown","09270d36":"markdown","c7e9cf15":"markdown","c89b351f":"markdown","6aa0ae4d":"markdown","d965c6d2":"markdown","45a8105b":"markdown","23b5d737":"markdown","75567030":"markdown","ef316003":"markdown","7c7a98b8":"markdown","b200c7a6":"markdown","3a389f27":"markdown"},"source":{"04cc944a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","941ed9da":"import matplotlib.pyplot as plt","976ca5d6":"# Zion Williamson\npoints = [28,27,21,13,13,22,25,17,18,20,17,17,25,30,11,35,27,25,22,26,29,16,18,27,32,0,29,31,21,25,32,23,24]","d69d322a":"print(\"number of games: \", len(points)) # len() is the length of the list","588c0587":"print(\"range: \", np.min(points), \"-\", np.max(points))","141d808c":"print(\"points per game: \", np.mean(points))\nprint(\"median: \", np.median(points))","a59d0a00":"from statistics import mode #import the function 'mode'\nprint(\"mode: \", mode(points))","0a36cc68":"plt.hist(points,6) # 6 bins\nplt.xlabel(\"Points\")\nplt.ylabel(\"N\")\nplt.title(\"Zion Williamson Point Distribution\")\nplt.show()","c712ad38":"# points over time\n\ngame_number = np.arange(len(points))\nprint(game_number) # keep in mind, computers start counting at 0!","1daa2354":"plt.plot(game_number,points)\nplt.xlabel(\"Game Number\")\nplt.ylabel(\"Points\")\nplt.title(\"Zion Williamson's points over time\")\nplt.show()","bac3d3d9":"# Adding 4 other players\n# Making sure these are the same games that they played in and filling in nothing if they didn't play\nrj_points = [33,23,20,20,18,23,22,26,27,30,27,16,13,21,32,23,30,26,24,17,15,19,26,13,23,33,23,15,17,26,16,18,21]\ntre_points = [6,8,2,14,10,17,15,0,10,6,3,13,10,6,8,2,np.nan,np.nan,6,9,13,11,13,6,13,3,15,11,18,5,11,22,4] #np.nan means \"not a number\"\ncam_points = [22,25,3,16,18,10,13,23,5,10,9,8,4,10,23,np.nan,9,15,7,13,16,24,17,22,9,27,7,6,11,12,13,np.nan,8]\nbold_points = [7,0,8,4,11,6,0,4,4,2,7,0,11,12,3,12,2,7,2,8,10,6,5,2,9,0,np.nan,np.nan,np.nan,2,0,4,0]","ba90886d":"plt.plot(game_number,points,label = \"Williamson\")\nplt.plot(game_number,rj_points,label = \"Barrett\")\nplt.plot(game_number,tre_points,label = \"Jones\")\nplt.plot(game_number,cam_points,label = \"Reddish\")\nplt.plot(game_number,bold_points,label = \"Bolden\")\nplt.legend()\n\nplt.xlabel(\"Game Number\")\nplt.ylabel(\"Points\")\nplt.title(\"Duke's points over time\")\nplt.show()","d153ce6d":"points_std = np.std(points)\nprint(\"Standard Deviation:\", points_std)","ea207234":"# What I've commented off below is what we plotted in Homework 2. Look how similar the code is!\n# plt.plot(game_number,points)\nplt.errorbar(game_number,points,\n             yerr=points_std)\nplt.xlabel(\"Game Number\")\nplt.ylabel(\"Points\")\nplt.title(\"Zion Williamson's points over time\")\n# I also want to restrict the width of my y axis because negative points are not possible (well, maybe...)\n# Use your discression here, but think about what limits might make sense in your case!\nplt.ylim(0,45)\nplt.show()","62f92d3b":"from scipy.optimize import curve_fit","6f5ff5f5":"def f(x, A, B): # this is your 'straight line' y=f(x)\n    return A*x + B","3d57dd86":"popt, pcov = curve_fit(f, game_number, points) # your data x, y to fit\nprint(\"Slope:\",popt[0]) \nprint(\"Intercept:\",popt[1])","a8dbb902":"# y = m*x + b\ny_fit = popt[0]*game_number + popt[1]","decee4f7":"plt.errorbar(game_number,points,\n             yerr=points_std)\n# the fit!\nplt.plot(game_number, y_fit,'--')\nplt.xlabel(\"Game Number\")\nplt.ylabel(\"Points\")\nplt.title(\"Zion Williamson's points over time\")\nplt.ylim(0,45)\nplt.show()","bde32544":"# Homework 1","b1fd99db":"And now the histogram. We use the plotting package (which we've renamed as plt), label our axes, and show the plot.","98057232":"I want to print to my screen the number of games Zion played in. This is the length of my list","264f41f8":"Favorite Player Notebook: Zion Williamson\n\nErik Peterson\n\nLast Modified: 1\/26\/2020","2c41b0cd":"In this homework, we are going to work on adding uncertainties or error bars to our points\/goals\/statistic over time plot. We are also going to fit our data to a simple linear fit. (As a side note, try to comment your code with #'s so that you remember what you did later. This is very good coding practice and it is very hard to remember what you've done easily when your code gets messy!)","95a28f3c":"We are going to use this standard deviation as an error bar for every point. There are many other ways we could calculate an uncertainty, but this is a simple and effective way.","58dc8e20":"Remember in Homework 1 you plotted your statistic in a histogram. Let's get a standard deviation of that histogram first","e21a2979":"Now we need to define the y values that correspond to the fit","a4d46cab":"Looks a bit skewed left due to the 0 points against UNC!","c51500bb":"We must import a plotting package first","be7547c9":"We want to make a new plot with our statistic over time. We start by creating another list which numbers our game or season","84030e98":"And mode (which is a bit trickier since we need to import something extra)","3ec1eb94":"Now we need to define the function curve_fit will be using. In this case, a simple line","fe8da1e8":"We now apply curve_fit on our data. This function uses f (which we defined above), our x, and our y. It gives us a lot of good information, some of which I have printed below.","36031507":"Printing the mean and median","09270d36":"And then we plot the same stuff as above, adding the extra plt.plot for our fit","c7e9cf15":"# Homework 3","c89b351f":"# Homework 2","6aa0ae4d":"We use the plot function each time for each player, we also label each line according to the player name and add a legend, and we label the axes and show the plot","d965c6d2":"Now let's add a linear fit to the plot too. Import this tool for fitting curves","45a8105b":"The first cell has been made for you by Kaggle.\n\nIt imports a few packages and sets up a directory where your notebooks are saved.","23b5d737":"In order to find the range of scores, I find the minimum and maximum values in my list and print to my screen","75567030":"Now we use plt.plot in order to make this new diagram, we label, and we show the plot","ef316003":"Look at what you've printed to your screen. This new list matches up with the corresponding game or season (starting at 0)","7c7a98b8":"Next I am making a list that contains my data. I call that list **points**. Beginning a line with # starts a comment","b200c7a6":"This actually looks like a reasonable fit! It is good to see his trend going upwards over time.","3a389f27":"Then we collect data on the other players, but we ensure that the games played line up (inputting np.nan 'not a number' if they did not play in that game)."}}