{"cell_type":{"5dbcf652":"code","bbdd35c3":"code","f0c82ad2":"code","fdbc0647":"code","cc567cae":"code","44cc3403":"code","cbd0874c":"code","ad310799":"code","5134be53":"code","031e88d8":"code","95cb2baf":"code","06fd7d9b":"code","9ff6f5bd":"code","ab641617":"code","fd91b4d0":"code","a31c55bf":"code","beb152c9":"code","a5eddc7e":"markdown","1e53ba35":"markdown","a07fe914":"markdown","5a9d92c8":"markdown","733587e1":"markdown","78e06eab":"markdown","c62083cd":"markdown","f93cdc4c":"markdown","8ae2a422":"markdown","57a8e794":"markdown","15674cb9":"markdown","24d8ef0e":"markdown","d642066f":"markdown","5958f101":"markdown","2e57344e":"markdown","e42249d6":"markdown","5c14024a":"markdown","f2d297f6":"markdown","708c0b98":"markdown","d861dc5b":"markdown"},"source":{"5dbcf652":"import numpy as np\nimport pandas as pd\nimport os\nimport seaborn as sns\n\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as patches\npd.set_option('max_columns', 100)\n\ndata_path = \"\/kaggle\/input\/nfl-big-data-bowl-2020\/\"\ntrain_df = pd.read_csv(data_path + \"train.csv\", low_memory=False)\ntrain_df.head()","bbdd35c3":"print(f\"The total number of games in the training data is {train_df['GameId'].nunique()}\")\nprint(f\"The total number of plays in the training data is {train_df['PlayId'].nunique()}\")\nprint(f\"The NFL seasons in the training data are {train_df['Season'].unique().tolist()}\")","f0c82ad2":"from plotly import tools\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.express as px\n\ntemp_df = train_df.query(\"NflIdRusher == NflId\")\nfig = px.histogram(temp_df, x=\"Yards\")\n\nlayout = go.Layout(\n    title=go.layout.Title(\n        text=\"Distribution of Yards (Target)\",\n        x=0.5\n    ),\n    font=dict(size=14),\n    width=800,\n    height=500,\n)\nfig.update_layout(layout)\nfig.show()","fdbc0647":"def create_football_field(linenumbers=True,\n                          endzones=True,\n                          highlight_line=False,\n                          highlight_line_number=50,\n                          highlighted_name='Line of Scrimmage',\n                          fifty_is_los=False,\n                          figsize=(12*2, 6.33*2)):\n    \"\"\"\n    Function that plots the football field for viewing plays.\n    Allows for showing or hiding endzones.\n    \"\"\"\n    rect = patches.Rectangle((0, 0), 120, 53.3, linewidth=0.1,\n                             edgecolor='r', facecolor='darkgreen', zorder=0)\n\n    fig, ax = plt.subplots(1, figsize=figsize)\n    ax.add_patch(rect)\n\n    plt.plot([10, 10, 10, 20, 20, 30, 30, 40, 40, 50, 50, 60, 60, 70, 70, 80,\n              80, 90, 90, 100, 100, 110, 110, 120, 0, 0, 120, 120],\n             [0, 0, 53.3, 53.3, 0, 0, 53.3, 53.3, 0, 0, 53.3, 53.3, 0, 0, 53.3,\n              53.3, 0, 0, 53.3, 53.3, 0, 0, 53.3, 53.3, 53.3, 0, 0, 53.3],\n             color='white')\n    if fifty_is_los:\n        plt.plot([60, 60], [0, 53.3], color='gold')\n        plt.text(62, 50, '<- Player Yardline at Snap', color='gold')\n    # Endzones\n    if endzones:\n        ez1 = patches.Rectangle((0, 0), 10, 53.3,\n                                linewidth=0.1,\n                                edgecolor='r',\n                                facecolor='blue',\n                                alpha=0.2,\n                                zorder=0)\n        ez2 = patches.Rectangle((110, 0), 120, 53.3,\n                                linewidth=0.1,\n                                edgecolor='r',\n                                facecolor='blue',\n                                alpha=0.2,\n                                zorder=0)\n        ax.add_patch(ez1)\n        ax.add_patch(ez2)\n    plt.xlim(0, 120)\n    plt.ylim(-5, 58.3)\n    plt.axis('off')\n    if linenumbers:\n        for x in range(20, 110, 10):\n            numb = x\n            if x > 50:\n                numb = 120 - x\n            plt.text(x, 5, str(numb - 10),\n                     horizontalalignment='center',\n                     fontsize=20,  # fontname='Arial',\n                     color='white')\n            plt.text(x - 0.95, 53.3 - 5, str(numb - 10),\n                     horizontalalignment='center',\n                     fontsize=20,  # fontname='Arial',\n                     color='white', rotation=180)\n    if endzones:\n        hash_range = range(11, 110)\n    else:\n        hash_range = range(1, 120)\n\n    for x in hash_range:\n        ax.plot([x, x], [0.4, 0.7], color='white')\n        ax.plot([x, x], [53.0, 52.5], color='white')\n        ax.plot([x, x], [22.91, 23.57], color='white')\n        ax.plot([x, x], [29.73, 30.39], color='white')\n\n    if highlight_line:\n        hl = highlight_line_number + 10\n        plt.plot([hl, hl], [0, 53.3], color='yellow')\n        plt.text(hl + 2, 50, '<- {}'.format(highlighted_name),\n                 color='yellow')\n    return fig, ax\n\ncreate_football_field()\nplt.show()","cc567cae":"import math\ndef get_dx_dy(angle, dist):\n    cartesianAngleRadians = (450-angle)*math.pi\/180.0\n    dx = dist * math.cos(cartesianAngleRadians)\n    dy = dist * math.sin(cartesianAngleRadians)\n    return dx, dy\n\nplay_id = 20181007011551\nfig, ax = create_football_field()\ntrain_df.query(\"PlayId == @play_id and Team == 'away'\") \\\n    .plot(x='X', y='Y', kind='scatter', ax=ax, color='orange', s=50, legend='Away')\ntrain_df.query(\"PlayId == @play_id and Team == 'home'\") \\\n    .plot(x='X', y='Y', kind='scatter', ax=ax, color='blue', s=50, legend='Home')\ntrain_df.query(\"PlayId == @play_id and NflIdRusher == NflId\") \\\n    .plot(x='X', y='Y', kind='scatter', ax=ax, color='red', s=100, legend='Rusher')\nrusher_row = train_df.query(\"PlayId == @play_id and NflIdRusher == NflId\")\nyards_covered = rusher_row[\"Yards\"].values[0]\n\nx = rusher_row[\"X\"].values[0]\ny = rusher_row[\"Y\"].values[0]\nrusher_dir = rusher_row[\"Dir\"].values[0]\nrusher_speed = rusher_row[\"S\"].values[0]\ndx, dy = get_dx_dy(rusher_dir, rusher_speed)\n\nax.arrow(x, y, dx, dy, length_includes_head=True, width=0.3)\nplt.title(f'Play # {play_id} and yard distance is {yards_covered}', fontsize=20)\nplt.legend()\nplt.show()","44cc3403":"rusher_dir","cbd0874c":"def get_plot(play_id):\n    fig, ax = create_football_field()\n    train_df.query(\"PlayId == @play_id and Team == 'away'\") \\\n        .plot(x='X', y='Y', kind='scatter', ax=ax, color='orange', s=50, legend='Away')\n    train_df.query(\"PlayId == @play_id and Team == 'home'\") \\\n        .plot(x='X', y='Y', kind='scatter', ax=ax, color='blue', s=50, legend='Home')\n    train_df.query(\"PlayId == @play_id and NflIdRusher == NflId\") \\\n        .plot(x='X', y='Y', kind='scatter', ax=ax, color='red', s=100, legend='Rusher')\n    rusher_row = train_df.query(\"PlayId == @play_id and NflIdRusher == NflId\")\n    yards_covered = rusher_row[\"Yards\"].values[0]\n\n    x = rusher_row[\"X\"].values[0]\n    y = rusher_row[\"Y\"].values[0]\n    rusher_dir = rusher_row[\"Dir\"].values[0]\n    rusher_speed = rusher_row[\"S\"].values[0]\n    dx, dy = get_dx_dy(rusher_dir, rusher_speed)\n\n    ax.arrow(x, y, dx, dy, length_includes_head=True, width=0.3)\n    plt.title(f'Play # {play_id} and yard distance is {yards_covered}', fontsize=26)\n    plt.legend()\n    return plt\n\ntemp_df = train_df.groupby(\"PlayId\").first()\ntemp_df = temp_df.sort_values(by=\"Yards\").reset_index().head(5)\n\nfor play_id in temp_df[\"PlayId\"].values:\n    plt = get_plot(play_id)\n    plt.show()","ad310799":"temp_df = train_df.groupby(\"PlayId\").first()\ntemp_df = temp_df[temp_df[\"Yards\"]==0].reset_index().head(5)\n\nfor play_id in temp_df[\"PlayId\"].values:\n    plt = get_plot(play_id)\n    plt.show()","5134be53":"temp_df = train_df.groupby(\"PlayId\").first()\ntemp_df = temp_df[temp_df[\"Yards\"]>10].reset_index().head(5)\n\nfor play_id in temp_df[\"PlayId\"].values:\n    plt = get_plot(play_id)\n    plt.show()","031e88d8":"plt.figure(figsize=(16,12))\ntemp_df = train_df.query(\"NflIdRusher == NflId\")\nsns.scatterplot(temp_df[\"Dis\"], temp_df[\"Yards\"])\nplt.xlabel('Distance covered', fontsize=12)\nplt.ylabel('Yards (Target)', fontsize=12)\nplt.title(\"Distance covered by Rusher Vs Yards (target)\", fontsize=20)\nplt.show()","95cb2baf":"plt.figure(figsize=(16,12))\ntemp_df = train_df.query(\"NflIdRusher == NflId\")\nsns.scatterplot(temp_df[\"S\"], temp_df[\"Yards\"])\nplt.xlabel('Rusher Speed', fontsize=12)\nplt.ylabel('Yards (Target)', fontsize=12)\nplt.title(\"Rusher Speed Vs Yards (target)\", fontsize=20)\nplt.show()","06fd7d9b":"plt.figure(figsize=(16,12))\ntemp_df = train_df.query(\"NflIdRusher == NflId\")\nsns.scatterplot(temp_df[\"A\"], temp_df[\"Yards\"])\nplt.xlabel('Rusher Acceleration', fontsize=12)\nplt.ylabel('Yards (Target)', fontsize=12)\nplt.title(\"Rusher Acceleration Vs Yards (target)\", fontsize=20)\nplt.show()","9ff6f5bd":"plt.figure(figsize=(16,12))\ntemp_df = train_df.query(\"NflIdRusher == NflId\")\nsns.boxplot(data=temp_df, x=\"Position\", y=\"Yards\", showfliers=False, whis=3.0)\nplt.xlabel('Rusher position', fontsize=12)\nplt.ylabel('Yards (Target)', fontsize=12)\nplt.title(\"Rusher Position Vs Yards (target)\", fontsize=20)\nplt.show()","ab641617":"plt.figure(figsize=(16,12))\ntemp_df = train_df.query(\"NflIdRusher == NflId\")\nsns.boxplot(data=temp_df, x=\"DefendersInTheBox\", y=\"Yards\", showfliers=False, whis=3.0)\nplt.xlabel('Number of defenders in the box', fontsize=12)\nplt.ylabel('Yards (Target)', fontsize=12)\nplt.title(\"Count of defenders in the box Vs Yards (target)\", fontsize=20)\nplt.show()","fd91b4d0":"plt.figure(figsize=(16,12))\ntemp_df = train_df.query(\"NflIdRusher == NflId\")\nsns.boxplot(data=temp_df, x=\"Down\", y=\"Yards\", showfliers=False)\nplt.xlabel('Down Number', fontsize=12)\nplt.ylabel('Yards (Target)', fontsize=12)\nplt.title(\"Down Number Vs Yards (target)\", fontsize=20)\nplt.show()","a31c55bf":"plt.figure(figsize=(12,10))\ntemp_df = train_df.query(\"NflIdRusher == NflId\")\nsns.boxplot(data=temp_df, y=\"PossessionTeam\", x=\"Yards\", showfliers=False, whis=3.0)\nplt.ylabel('PossessionTeam', fontsize=12)\nplt.xlabel('Yards (Target)', fontsize=12)\nplt.title(\"Possession team Vs Yards (target)\", fontsize=20)\nplt.show()","beb152c9":"plt.figure(figsize=(16,12))\ntemp_df = train_df.query(\"NflIdRusher == NflId\")\nsns.catplot(data=temp_df, x=\"Quarter\", y=\"Yards\", kind=\"boxen\")\nplt.xlabel('Quarter', fontsize=12)\nplt.ylabel('Yards (Target)', fontsize=12)\nplt.title(\"Quarter Vs Yards (target)\", fontsize=20)\nplt.show()","a5eddc7e":"Hmmm. Most of the times, the ball carrier is moving towards the center of the opposition. \n\n### Direction of Ball Carrier during High Positive Yards Coverage\n","1e53ba35":"This is a slight variation of box plot with more quantile details. More details about the plot can be seen [here](https:\/\/seaborn.pydata.org\/generated\/seaborn.boxenplot.html#seaborn.boxenplot).","a07fe914":"* 2 Yards has the maximum count followed by 1 and 3 yards\n* The distribution looks normal with a right skewness. There are some extreme right values which means the player has covered more than 80 yards.","5a9d92c8":"### Football Field Plot\n\nThanks to Rob Mulla for this [wonderful code](https:\/\/www.kaggle.com\/robikscube\/nfl-big-data-bowl-plotting-player-position) to create the plot of football field","733587e1":"**More to come. Stay tuned!**","78e06eab":"Acceleration also shows a similar trend as that of distance and speed. \n\n## Position of the Rusher \/ Ball Carrier\n\nLet us now see how the position of the rusher affects the yards gained","c62083cd":"## Target Variable Analysis\n\nNow let us analyze the target variable (Yards) and see how it is distributed.","f93cdc4c":"## Ball Carrier Direction Analysis\n\nCompetition organizer in [this thread](https:\/\/www.kaggle.com\/c\/nfl-big-data-bowl-2020\/discussion\/111918#latest-645404) has mentioned that *\"One of the most crucial features to analyzing run play success is likely the amount of space that the ball carrier had available when he received the ball\"*\n\nSo let us explore that first in our EDA. Let us take the playid '20181007011551' to start with. \n* We will plot the home team using blue color and away team using orange color.\n* Ball carrier is plotted using red color\n* Direction of movement of the ball carrier is shown using arrow\n* Yards covered (target) variable is available in the title","8ae2a422":"Speed also shows a trend similar to distance covered. 2 to 6 yards per second seem to be a better speed for yards covered.\n\n## Rusher Acceleration at TimeHandOff","57a8e794":"## Quarter Vs Yards","15674cb9":"### Direction of Ball Carrier during Negative Yards \n\nLet us take some plays where the yard distance is negative and see if there are any patterns that we can see.","24d8ef0e":"It looks like the ball carrier tries to move away from the opposition team towards a gap so as to move forward gaining more yards.\n\n## Distance Covered by the Rusher at TimeHandoff ","d642066f":"* Position CB has the highest median of yards gained followed by Wide Receiver\n\n## Number of Defenders in the Box\n\nNow let us see how the number of defenders in the box affects the target","5958f101":"* LA team seems to have higher median yards value than the rest.\n* NYJ team seems to have lower median yards value than the rest.","2e57344e":"We can see a nice increasing trend in the yards gained by the rusher as the distance travelled by the rusher increases from zero. Then it starts decreasing which indicates that too much distance covered before the handoff of the ball also affects the yards gained.\n\n## Speed of the Rusher at TimeHandoff ","e42249d6":"We can see a decrease in the median value of the target with an increase in the down number from 1 to 4.\n\n## Possession Team Vs Yards\n\nNow let us see the distribution of yards based on the team","5c14024a":"Let us first get to understand some basic information about the data.","f2d297f6":"\n### About NFL\nThe National Football League (NFL) is a professional American football league consisting of 32 teams. The NFL is one of the four major professional sports leagues in North America and the highest professional level of American football in the world. \n\nSource: [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/National_Football_League)\n![NFL](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcTZ6EI5slmj172qfcN4dTNKqEllvxJ1w5ARNo4sso0xVS5-qhu6)\n\n### Rules of NFL\nIf you are a newbie (just like me) to the world of NFL, there you can read about the basics from this discussion [thread](https:\/\/www.kaggle.com\/c\/nfl-big-data-bowl-2020\/discussion\/111945#latest-645419). \n\n### Competition Objective\nIn the National Football League (NFL), roughly a third of teams\u2019 offensive yardage comes from run plays. A running play or rushing play is a tactic in which the football is advanced up the field by a player running it rather than passing it. Competition is to develop a model to predict how many yards a team will gain on given rushing plays as they happen. We are given the data when the ball is handed off (TimeHandoff) to forecast the yardage gained on that play.\n\n### Notebook objective\nObjective of the notebook is to explore the data and find some interesting insights along the way.\n\n### References:\nThis [wonderful kernel](https:\/\/www.kaggle.com\/robikscube\/nfl-big-data-bowl-plotting-player-position) by Rob is the basis for this notebook\n\nLet us first look at the top few rows to understand the data.","708c0b98":"We could clearly see that most of the times the ball carrier moved in the opposite direction of the game and so the yards are negative.\n\n### Direction of Ball Carrier during Zero Yards\n\nNow let us take some plays where the distance covered is zero yards and plot them.","d861dc5b":"We can see a nice decrease in the median value of the yards gained by the rusher with the increase in the number of defenders in the box.\n\n## Down Number Vs Yards\n\nLet us now check how the yards gained vary with respect to down number."}}