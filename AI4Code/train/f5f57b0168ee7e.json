{"cell_type":{"362cd9e1":"code","4b1eea3a":"code","9e93e206":"code","5f5c915d":"code","40c9af37":"code","1499fd98":"code","7d7d8de4":"code","8aa9f7ef":"code","125921fe":"code","6b2a624b":"code","c1f01c68":"code","6eb2d2f7":"code","57fcc475":"code","d4a27003":"code","bc41970b":"code","eb7b3031":"code","91d58741":"code","2cfe5857":"code","520f5677":"code","5ba3d9d5":"code","745927aa":"code","86e668f0":"code","f06c52ca":"code","4b25cbc5":"code","7b056ecc":"code","7adb6c91":"code","695da3bf":"code","48f537aa":"code","b573e542":"code","1cbc5223":"code","4850d787":"markdown","866d1ba2":"markdown","b89899a8":"markdown","42733638":"markdown","d0084ba4":"markdown","02db2f9e":"markdown","0d2a990c":"markdown","272e69fd":"markdown","6df2b8c7":"markdown","92c76ba7":"markdown","f2eb72f0":"markdown","862dcc0c":"markdown","8a54ce6d":"markdown","020b4733":"markdown","491b4c57":"markdown","ee3761e4":"markdown","95f32083":"markdown","4d96f0ab":"markdown","4b07317f":"markdown","c98a2a45":"markdown","7cd89c50":"markdown","76967050":"markdown","1308aece":"markdown","4278b986":"markdown","050e83a0":"markdown","523c5964":"markdown","cb8ffc77":"markdown","1e478b53":"markdown","5208b66b":"markdown","27ae2798":"markdown","4f7589a2":"markdown","fadc41e6":"markdown","4415e0f7":"markdown","b0196dc1":"markdown","c08ecf98":"markdown","6d061cc6":"markdown","5e4a5882":"markdown","d62ba0e7":"markdown","49c02e03":"markdown","e7c9183e":"markdown","10a19d8f":"markdown","7de76dd0":"markdown","f0af5537":"markdown","554cfd32":"markdown","96852cd7":"markdown","bb6760e4":"markdown","a0cb9a3a":"markdown"},"source":{"362cd9e1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","4b1eea3a":"\nimport numpy as np \nimport seaborn as sns\nimport pandas as pd \nimport matplotlib.pyplot as plt \nsns.set(style = 'whitegrid')","9e93e206":"tips = sns.load_dataset('tips')\ntips.head()","5f5c915d":"sns.relplot(kind = 'scatter',x = 'total_bill',y = 'tip' , data  = tips,color ='k');","40c9af37":"sns.relplot(x='total_bill',y = 'tip',hue = 'smoker',data= tips,palette = ['k','gray'],height = 6);","1499fd98":"sns.relplot (x = 'total_bill',y = 'tip',hue = 'smoker',style = 'smoker' ,palette = ['k','gray'],data = tips);","7d7d8de4":"sns.relplot (x = 'total_bill',y = 'tip',hue = 'smoker',style = 'day' ,palette = ['k','gray'],data = tips);","8aa9f7ef":"sns.relplot (x = 'total_bill',y = 'tip',hue = 'size',style = 'day' ,palette = \"copper\",data = tips);","125921fe":"sns.relplot(x='total_bill',y='tip',data = tips ,size = 'size' ,color = 'k');","6b2a624b":"df = pd.DataFrame()\ndf['x'] = np.arange(500)\ndf['y'] = (df['x'].values)**2","c1f01c68":"sns.relplot(kind = 'line' ,x='x',y='y',data=df,color='k',height=6);","6eb2d2f7":"sns.relplot(x='x',y='y',data=df,color='k',height=6);","57fcc475":"df1 = pd.DataFrame()\ndf1['x'] = np.random.randn(500)\ndf1['y'] = np.random.randn(500).cumsum()","d4a27003":"sns.relplot(x='x',y='y',color='k',data = df1,kind='line',sort=False,height= 6);","bc41970b":"sns.relplot(x='x',y='y',color='k',data = df1,kind='line',height= 6);","eb7b3031":"fmri = sns.load_dataset(\"fmri\")\nfmri.head()","91d58741":"fmri['subject'].unique()","2cfe5857":"sns.relplot(x='timepoint',y = 'signal' , data = fmri,color='k',height = 6);","520f5677":"sns.relplot(x='timepoint',y = 'signal' , data = fmri,kind = 'line',color = 'k',height=6);","5ba3d9d5":"sns.relplot(x='timepoint',y = 'signal' , data = fmri,kind = 'line',color = 'k',ci = 'sd',height=6);","745927aa":"sns.relplot(x='timepoint',y = 'signal' , data = fmri,kind = 'line',color = 'k',ci = None,estimator = None,height = 6);","86e668f0":"sns.relplot(x=\"timepoint\", y=\"signal\", hue=\"event\", kind=\"line\", data=fmri,palette = ['k','gray']);","f06c52ca":"sns.relplot(x=\"timepoint\", y=\"signal\", hue=\"event\", style=\"region\",\n            kind=\"line\",dashes = True,data=fmri,height = 6,palette = 'bone');","4b25cbc5":"df1['z'] = np.arange(500)","7b056ecc":"dots = sns.load_dataset(\"dots\").query(\"align == 'dots'\")","7adb6c91":"sns.relplot(x=\"time\", y=\"firing_rate\",\n            size=\"coherence\", style=\"choice\",\n            kind=\"line\", data=dots,color = 'k',height = 6);","695da3bf":"df = pd.DataFrame(dict(time=pd.date_range(\"2017-1-1\", periods=300),\n                       value=np.random.randn(300).cumsum()))\ng = sns.relplot(x=\"time\",kind='line', y=\"value\", data=df,color = 'k',height = 6) \ng.fig.autofmt_xdate(); #g is passed to the matplotlib function to format to the data into dates format ","48f537aa":"tips.head()","b573e542":"sns.relplot(x='total_bill',y='tip',col='sex',hue='size',data=tips,palette = 'bone');","1cbc5223":"sns.relplot(x='total_bill',y='tip',col='sex',hue='size',row='smoker',data=tips,height=3 ,palette = 'bone');","4850d787":"## 3.Showing multiple relationships with facets","866d1ba2":"### 2.1 Aggregation and representing uncertainty","b89899a8":"#### 2.2.1.HUE","42733638":"<p>These are some of the ways we can understand the statistical relations between two variables using RELPLOTS.<\/p>\n<ol><li>Using <strong>RELPLOT<\/strong> function we can easily switch between scatterplot and the line plot using the 'kind' attribute  <\/li>\n<li>Using <strong>RELPLOT<\/strong> function we can understand the 4 features at a time using the parameters like <strong>hue,size,style<\/strong> <\/li>\n<li>Using <strong>RELPLOT<\/strong> finction we can understand the date and time data <\/li>\n<li><strong>LINEPLOT<\/strong> always assumes y as some function of x i.e..y = f(x),so it makes senes to use line plot when we feel that this reation ship holds <\/li>\n<li><strong>RELPLOT<\/strong> has built on the facet grid so we can leverage plotting data on mutiple axes using the ROW,COL parameters <\/li>\n<\/ol>\n","d0084ba4":"<p>Scatter plot is the super powerfull graph that helps to visualize two different variables at a time and it helps us to understand is there any meaningful relation ships between two variables . It plots all the obsevations in the dataset so we can also know the distribution of the data <\/p> ","02db2f9e":"> Now in the above graph we have plotted 4d data using the x,y,hue('color'),style('marker') so this is why scatter plot is extremely usefull  ","0d2a990c":"> To differentiate clearily between two classes we can use different style markers for each class using the style attribute ","272e69fd":"> Above y is a function of input x i.e y = x^2 and this behaviour we can plot using the line plot as we can see above ","6df2b8c7":"The relplot is built on the top of FACET GRID so we can easily use it to make multiple axes and plot subsets of the data on each of them","92c76ba7":"> Instead of categorical if we use numerical data  (specifically, if it can be cast to float) for hue then the default coloring switches to a sequential palette:","f2eb72f0":"> In the above graph we have added new feature event using the hue parameter ","862dcc0c":"> In the above graph ones datapoints in the Black color are NON-Smokers where as one in the silver color are smokers . So using hue parameter we can add another dimesion to our plot ","8a54ce6d":"### Conclusion","020b4733":"> In the Above graph every data every data point of x has multiple values in y .In this situation lineplot estimator aggregates the data points at every point and then plots the mean of the data at every poistion and the 95% confidence Interval around the mean ","491b4c57":"> Above graph shows the similar data if we plot using the scatter plot . The line plot just draws a line joining all these points so we can visualize clearily ","ee3761e4":"# Visulalizing Stastistical Relationships","95f32083":"> Above graph is the standard deviation of data at each point of x ","4d96f0ab":"> If the hue data is numercial it divides the data into bins and gives a different color to each bin using sequential palette as done above ","4b07317f":"**Similar to the scatterplot() we add additional features to the graph using the parameters like hue,style,size **","c98a2a45":"<p>There is no global visualization technique that we can applied to all kinds of data . The type of visualiztion we need to use depends on the dataset we are dealing and the type of data in the dataset .In few cases we may want to know how a variable chages as a function of time or continuous variables.In order to deal with this type of data we use the <strong>LINE PLOTS<\/strong>\n","7cd89c50":"### 2.3.Plotting with date data","76967050":">We can also add another variable using the size parameter ","1308aece":"> We can also visualize the 4th parameter using the same style attribute ","4278b986":"> If we don't want the behaviour of finding the estimating the mean and C.I then we can simply set the estimator to NONE then we will get normal lineplot like above ","050e83a0":"> Instead of mean we can plot the Standard deviation as confidence Interval by the changing the C.I parameter","523c5964":"## 2.Emphasizing continuity with line plots","cb8ffc77":"> Same data if we sort the data before plotting ","1e478b53":"## 1.Realting variables with scatter plots ","5208b66b":"<p>These techniques are from the Visualizing statistical relationships  tutorial by  <strong>Seaborn<\/strong> <\/p>","27ae2798":"> Above is the plot if we don't sort the data before plotting ","4f7589a2":"Statistical Relationship is the process of understanding the relationship between different variables and how those relationships depends on other variables  ","fadc41e6":"### 1.1.Loading Data","4415e0f7":"### 2.2.Plotting subsets of data with semantic mappings","b0196dc1":"<p><strong>RELPLOT<\/strong> is the high level function can be used to visualize all the statistical data <\/p>","c08ecf98":">Now from above graph we can see that how tips and bills are related based on the sexulaity and also based on if they smoke or not ","6d061cc6":"Line Plots are often used to visulaize the data associated with real dates and time format .\nThese functions pass the data down in their original format to the underlying matplotlib functions, and so they can take advantage of matplotlib\u2019s ability to format dates in tick labels","5e4a5882":"> Above graph is the result of aggregation of multiple y values a each position in the graph and plotting the mean ","d62ba0e7":"**Because lineplot() assumes that you are most often we are trying to draw y as a function of x, so by default the line plot sorts the data based on x .However, we can change this behaviour by setting the sort attribute to FALSE: **","49c02e03":"> From the above graph now we can understand how tip and bill related based on the sexuality . ","e7c9183e":"<p>We can use two approches to visualize the staistical relationships<\/p>\n<ol><li>ScatterPlot (kind = 'scatter' ; default )<\/li>\n<li>LinePlot  (kind = 'line')<\/li><\/ol>\n<p>We just need to change the kind attribute and we can get visualize the data in different plots at a time and select the one that fits better <\/p>","10a19d8f":"#### 2.2.2.Style","7de76dd0":"> Above we are plotting two dimensional data we can add third dimension using the and it is categorical variable and we can group the above 2d data using the third dimension . And these can be possible by HUE parameter . Using the HUE parameter we can divide the data using the colors ","f0af5537":"> If we use the size parameter it will assign different sizes for different categories of the data as we can see in the above graph ","554cfd32":"**In the above graph we have added 4th dimension region using the style attribute **","96852cd7":"If we don't want any Confidence Interval we can do it setting the CI to NONE ","bb6760e4":"> We can visualize another feature using the size parameter ","a0cb9a3a":"#### 2.2.3.Size"}}