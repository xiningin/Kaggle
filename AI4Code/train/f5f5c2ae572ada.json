{"cell_type":{"d122dd64":"code","a398e2b2":"code","d6fd3746":"code","1256e413":"code","dda07fa7":"code","2ebdba8d":"code","19b2a023":"code","efa775f6":"code","a0a46ce6":"code","0023cf42":"code","9ec359ac":"code","ddd064d9":"code","1cfd6fae":"code","3ec19eeb":"code","93c01720":"code","84ded009":"code","490043ad":"code","4db45dd0":"code","63ac6a90":"code","e4357b45":"code","32e0d324":"code","23a725ee":"code","024c13b2":"code","915b7bcc":"code","1f5f17ab":"code","25c19b3d":"code","f63caf7a":"markdown","92c34d81":"markdown","f32ae86b":"markdown","2e0abdd3":"markdown","c7c24918":"markdown","25795690":"markdown","437f0746":"markdown","550879f9":"markdown","257fa0eb":"markdown","1bb4d024":"markdown","970d0ba1":"markdown","bccadfc4":"markdown","c14f38d6":"markdown","c5464869":"markdown","dbca1cf0":"markdown","b7f4965f":"markdown","64256851":"markdown","34be47e8":"markdown","2f9c2f0b":"markdown","ed905097":"markdown","02de0836":"markdown","02400a64":"markdown","14b1304d":"markdown","f05e8786":"markdown","f1942f82":"markdown","4e69654d":"markdown"},"source":{"d122dd64":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\nimport warnings\n\nwarnings.filterwarnings('ignore')\n\n\n\n# NOTE : Seaborn library is not updated in kaggle, hence I have attached\n# graph from my notebook.","a398e2b2":"df = pd.read_csv(\"..\/input\/credit-card-customers\/BankChurners.csv\")\ndf.head()","d6fd3746":"df = df.drop([\"CLIENTNUM\", \"Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2\", \"Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1\"], axis=1)","1256e413":"df.info()","dda07fa7":"for i in  df.columns:\n    print(df[i].value_counts())\n    print(\"----------------\")","2ebdba8d":"a=sns.FacetGrid(df, col=\"Education_Level\", row=\"Gender\")\na.map_dataframe(sns.countplot, x=\"Attrition_Flag\", hue=\"Attrition_Flag\", palette=\"tab10\")\na.fig.subplots_adjust(wspace=0.5, hspace=0.3)\na.set_xticklabels([\"\", \"\"])\na.add_legend()","19b2a023":"fig = plt.figure(figsize=(12, 12))\n\nfig.add_subplot(211)\nsns.countplot(x=df[\"Customer_Age\"][df[\"Gender\"]==\"M\"], hue=df[\"Attrition_Flag\"])\nplt.text(x=5, y=150, s=\"FOR MALE\")\n\nfig.add_subplot(212)\nsns.countplot(x=df[\"Customer_Age\"][df[\"Gender\"]==\"F\"], hue=df[\"Attrition_Flag\"])\nplt.text(x=5, y=150, s=\"FOR FEMALE\")\n\nplt.show()","efa775f6":"df[\"Income_Category\"].value_counts()","a0a46ce6":"fig = plt.figure(figsize=(10, 5))\nsns.histplot(data=df, x=\"Income_Category\", binwidth=1, hue=\"Attrition_Flag\")","0023cf42":"fig = plt.figure(figsize=(10, 5))\nsns.histplot(data=df, x=\"Card_Category\", binwidth=1, hue=\"Attrition_Flag\")","9ec359ac":"\nfig = plt.figure(figsize=(10, 5))\nsns.histplot(data=df, x=\"Months_Inactive_12_mon\", binwidth=1, hue=\"Attrition_Flag\")","ddd064d9":"df.info()","1cfd6fae":"from sklearn.preprocessing import LabelEncoder\n\nclass label_encoding:\n    def __init__(self, name):\n        self.name = name\n        self.le = LabelEncoder()\n        df[name] = self.le.fit_transform(df[name])\n        self.give_function()\n    \n    def inverse(self, i):\n        return self.le.inverse_transform([i])\n    \n    def transform(self, col):\n        return self.le.transform(col)\n        \n    def give_function(self):\n        return self.le","3ec19eeb":"le = {}\n\nfor val in df.columns:\n    if df[val].dtypes == 'object':\n         le[val] = label_encoding(val)","93c01720":"for val in le.keys():\n    for i in range(0, len(df[val].value_counts())):\n        print('The value for {} in {} is {}'.format(i, val, le[val].inverse(i).item()))\n    else:\n        print(\"---------------------- \\n \\n \")\n        ","84ded009":"fig = plt.figure(figsize=(18, 12))\nsns.heatmap(df.corr(), annot=True, annot_kws={\"size\": 9})","490043ad":"corr = {}\n\nfor idx1 in df.columns:\n    corr[idx1] = {'Positive': [], 'Negetive': []}\n    \n    for idx2 in df.columns:\n        if not idx1 == idx2:\n            if (df[idx1].corr(other=df[idx2])) > 0.25:\n                corr[idx1][\"Positive\"].append(idx2)\n                \n            \n            if (df[idx1].corr(other=df[idx2])) < -0.25:\n                corr[idx1][\"Negetive\"].append(idx2)\n                ","4db45dd0":"corr[\"Attrition_Flag\"]","63ac6a90":"X = df.iloc[:, 1:].values\ny = df.iloc[:, 0].values\n\nprint(X.shape, y.shape)","e4357b45":"from sklearn.feature_selection import SelectKBest, chi2\n\nSOM = SelectKBest(chi2, k=8)\nX_new_som = SOM.fit_transform(X, y)\nX_new_som.shape","32e0d324":"from sklearn.decomposition import PCA\n\npca = PCA(n_components=8)\nX_new_pca = pca.fit_transform(X, y)\nX_new_pca.shape","23a725ee":"from sklearn.model_selection import train_test_split\n\nX_train_pca, X_test_pca, y_train, y_test = train_test_split(X_new_pca, y, test_size=0.33, random_state=0)\nX_train_som, X_test_som, y_train, y_test = train_test_split(X_new_som, y, test_size=0.33, random_state=0)","024c13b2":"from sklearn import tree\n\nclf_pca = tree.DecisionTreeClassifier()\nclf_pca = clf_pca.fit(X_train_pca, y_train)\n\nclf_som = tree.DecisionTreeClassifier()\nclf_som = clf_som.fit(X_train_pca, y_train)","915b7bcc":"from sklearn.metrics import accuracy_score\n\ny_pred_pca = clf_pca.predict(X_test_pca)\ny_pred_som = clf_som.predict(X_test_som)\n","1f5f17ab":"accuracy_score(y_test, y_pred_pca)","25c19b3d":"accuracy_score(y_test, y_pred_som)","f63caf7a":"## 3. Printing all the unique value in a column with its total count:","92c34d81":"# Pre-Processing:","f32ae86b":"![image.png](attachment:image.png)","2e0abdd3":"## 1. Dropping \"CLIENTNUM\" and last two Column:","c7c24918":"### The PCA is more suitable in this senerio.","25795690":"## SOM:","437f0746":"![image.png](attachment:image.png)","550879f9":"## CONCLUSION:\n\n#### The bank should give cashback regularly with extra features (*low interest*) for member having <$40K income and bank should provide more benefits to premium cards.","257fa0eb":"# Pre-Processing 2:","1bb4d024":"# 1. LabelEncoding:","970d0ba1":"This plot also dont give much information. It just shows that most of the member have \"Blue\" i.e. the basic card only.\nBank should provide much more benefits of having premium cards to increase there subcriptions.","bccadfc4":"# Reading the CSV file:","c14f38d6":"After plotting above graph, it is clearly seen that the maximum number of active members belong to \"Graduated\". And it decreases rapidly in the next phase i.e \"Post-Graduate\" and again in \"Doctorate\". The bank manager can use this data to give extra facilities to \"Graduated\" group and keep them as active members.","c5464869":"# THANK YOU.\n## Leave a like \ud83d\udc4d.\n\n## PEACE :)","dbca1cf0":"![image.png](attachment:image.png)","b7f4965f":"# CORRELATION PLOT:","64256851":"# Visualizing the data:","34be47e8":"This plot shows that the number of active member increase as the age increase and later it decreases, that's an obvious thing. But above this, the number of existed members between that peak i.e age 35-55 in \"Female\" is greater than in \"Male\". Bank manager should pay extra attention to keep those \"Female\" accounts stick.","2f9c2f0b":"## Test Train split:","ed905097":"This plot show that the probablity that member will stick to the bank is very very high in the group having income \n\"Less than $40K\" as compare to other. \n\nThe graph is fairly saturated and gives not much information.","02de0836":"This plot can be very benefical, this graph shows that a person to be inactive is \"3 Months\" after which they get into active membership. The bank manager should give some cashbacks if the person uses card\/account atleast one time for consecutive for 2 monthns, it will decrease the time period of the member to be inactive from 3 months to 1-2 months at most and hence reducing the number. ","02400a64":"## X and y split:","14b1304d":"I have created a dict in which every columns have item that have positive and negetive with the same.\n\nEX:","f05e8786":"![image.png](attachment:image.png)\n\nfrom my notebook","f1942f82":"## 2. There is not a single \"NULL\" value in the whole data set:","4e69654d":"## PCA:"}}