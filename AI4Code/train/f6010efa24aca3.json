{"cell_type":{"88c56f95":"code","02452858":"code","52343912":"code","5915df25":"code","dea6bdab":"code","2d17c474":"code","ddd7b4c7":"code","48e95ae7":"code","4fcd7a6c":"code","4c1b0a37":"code","8179a981":"code","4dfa93f5":"code","072f736d":"code","a7e9ab7a":"code","dd354a9f":"code","13de71a5":"code","5d98ee74":"code","9d691566":"code","065db0ed":"code","0a2d9f14":"code","0dc94939":"code","7f4ba096":"code","defa5a9c":"code","43e336e2":"code","ccc7fd19":"code","fb3c3fa4":"code","80bb13a7":"code","e5df0315":"code","f1b321e4":"code","ab8c4a37":"code","61372ead":"code","db846dac":"code","51f4935b":"code","82cbf94f":"code","1b7bac56":"code","3ac16c24":"markdown","19188382":"markdown","339910e5":"markdown","ef9a4f77":"markdown","9be6c858":"markdown","4ed96f2b":"markdown","21f5bd34":"markdown","ccc398f2":"markdown","a1908033":"markdown","88d3c7f0":"markdown","517f7fcf":"markdown","e70f9c10":"markdown","3e759b7f":"markdown"},"source":{"88c56f95":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport matplotlib.pyplot as plt\nimport plotly.graph_objects as go\nimport plotly.express as px\npd.set_option('display.max_rows', None)\nimport datetime\nfrom plotly.subplots import make_subplots","02452858":"data = pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv')","52343912":"data.head(5)","5915df25":"data[[\"Confirmed\",\"Deaths\",\"Recovered\"]] =data[[\"Confirmed\",\"Deaths\",\"Recovered\"]].astype(int)","dea6bdab":"data['Country\/Region'] = data['Country\/Region'].replace('Mainland China', 'China')","2d17c474":"data.head()","ddd7b4c7":"data['Active_case'] = data['Confirmed'] - data['Deaths'] - data['Recovered']","48e95ae7":"data.head()","4fcd7a6c":"def dark_confirmed(data,lockdown,month_lockdown,country):\n    fig = go.Figure()\n    fig.add_trace(go.Scatter(x=data[\"ObservationDate\"], y=data['Confirmed'],\n                    mode=\"lines\",\n                    name='Confirmed cases in ' + country,\n                    marker_color='yellow',\n                        ))\n\n    fig.add_annotation(\n            x=lockdown,\n            y=data['Confirmed'].max(),\n            text=\"COVID-19 pandemic lockdown in \"+ country,\n             font=dict(\n            family=\"Courier New, monospace\",\n            size=16,\n            color=\"red\"\n            ),\n    )\n\n\n    fig.add_shape(\n        # Line Vertical\n        dict(\n            type=\"line\",\n            x0=lockdown,\n            y0=data['Confirmed'].max(),\n            x1=lockdown,\n    \n            line=dict(\n                color=\"red\",\n                width=4\n            )\n    ))\n    fig.add_annotation(\n            x=month_lockdown,\n            y=data['Confirmed'].min(),\n            text=\"Month after lockdown\",\n             font=dict(\n            family=\"Courier New, monospace\",\n            size=16,\n            color=\"#00FE58\"\n            ),\n    )\n\n    fig.add_shape(\n        # Line Vertical\n        dict(\n            type=\"line\",\n            x0=month_lockdown,\n            y0=data['Confirmed'].max(),\n            x1=month_lockdown,\n    \n            line=dict(\n                color=\"#00FE58\",\n                width=3\n            )\n    ))\n    fig\n    fig.update_layout(\n        title='Evolution of Confirmed cases over time in '+ country,\n        template='plotly_dark'\n\n    )\n\n    fig.show()","4c1b0a37":"def dark_active(data,lockdown,month_lockdown,country):\n    fig = go.Figure()\n    fig.add_trace(go.Scatter(x=data[\"ObservationDate\"], y=data['Active_case'],\n                    mode=\"lines\",\n                    name='Active cases in' + country,\n                    marker_color='#00FE58',\n                        ))\n\n    fig.add_annotation(\n            x=lockdown,\n            y=data['Active_case'].max(),\n            text=\"COVID-19 pandemic lockdown in \"+ country,\n             font=dict(\n            family=\"Courier New, monospace\",\n            size=16,\n            color=\"red\"\n            ),\n    )\n\n\n    fig.add_shape(\n        # Line Vertical\n        dict(\n            type=\"line\",\n            x0=lockdown,\n            y0=data['Active_case'].max(),\n            x1=lockdown,\n    \n            line=dict(\n                color=\"red\",\n                width=3\n            )\n    ))\n    fig.add_annotation(\n            x=month_lockdown,\n            y=data['Active_case'].min(),\n            text=\"Month after lockdown\",\n             font=dict(\n            family=\"Courier New, monospace\",\n            size=16,\n            color=\"rgb(255,217,47)\"\n            ),\n    )\n\n    fig.add_shape(\n        # Line Vertical\n        dict(\n            type=\"line\",\n            x0=month_lockdown,\n            y0=data['Active_case'].max(),\n            x1=month_lockdown,\n    \n            line=dict(\n                color=\"rgb(255,217,47)\",\n                width=3\n            )\n    ))\n    fig\n    fig.update_layout(\n        title='Evolution of Active cases over time in '+ country,\n        template='plotly_dark'\n\n    )\n\n    fig.show()","8179a981":"def dark_recovered(data,lockdown,month_lockdown,country):\n    fig = go.Figure()\n    fig.add_trace(go.Scatter(x=data[\"ObservationDate\"], y=data['Recovered'],\n                    mode=\"lines\",\n                    name='Recovered cases in' + country,\n                    marker_color='rgb(192,229,232)',\n                        ))\n\n    fig.add_annotation(\n            x=lockdown,\n            y=data['Recovered'].max(),\n            text=\"COVID-19 pandemic lockdown in \"+ country,\n             font=dict(\n            family=\"Courier New, monospace\",\n            size=16,\n            color=\"red\"\n            ),\n    )\n\n\n    fig.add_shape(\n        # Line Vertical\n        dict(\n            type=\"line\",\n            x0=lockdown,\n            y0=data['Recovered'].max(),\n            x1=lockdown,\n    \n            line=dict(\n                color=\"red\",\n                width=3\n            )\n    ))\n    fig.add_annotation(\n            x=month_lockdown,\n            y=data['Active_case'].min(),\n            text=\"Month after lockdown\",\n             font=dict(\n            family=\"Courier New, monospace\",\n            size=16,\n            color=\"rgb(103,219,165)\"\n            ),\n    )\n\n    fig.add_shape(\n        # Line Vertical\n        dict(\n            type=\"line\",\n            x0=month_lockdown,\n            y0=data['Recovered'].max(),\n            x1=month_lockdown,\n    \n            line=dict(\n                color=\"rgb(103,219,165)\",\n                width=3\n            )\n    ))\n    fig\n    fig.update_layout(\n        title='Evolution of Recovered cases over time in '+ country,\n        template='plotly_dark'\n\n    )\n\n    fig.show()\n","4dfa93f5":"Data_tunisia = data [(data['Country\/Region'] == 'Tunisia') ].reset_index(drop=True)","072f736d":"dark_confirmed(Data_tunisia,\"03\/22\/2020\",\"04\/22\/2020\",\"Tunisia\")","a7e9ab7a":"dark_active(Data_tunisia,\"03\/22\/2020\",\"04\/22\/2020\",\"Tunisia\")","dd354a9f":"dark_recovered(Data_tunisia,\"03\/22\/2020\",\"04\/22\/2020\",\"Tunisia\")","13de71a5":"Data_Italy = data [(data['Country\/Region'] == 'Italy') ].reset_index(drop=True)\nData_italy_op= Data_Italy.groupby([\"ObservationDate\",\"Country\/Region\"])[[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"]].sum().reset_index().reset_index(drop=True)","5d98ee74":"dark_confirmed(Data_italy_op,\"03\/09\/2020\",\"04\/09\/2020\",\"Italy\")","9d691566":"dark_active(Data_italy_op,\"03\/09\/2020\",\"04\/09\/2020\",\"Italy\")","065db0ed":"dark_recovered(Data_italy_op,\"03\/09\/2020\",\"04\/09\/2020\",\"Italy\")","0a2d9f14":"Data_France = data [(data['Country\/Region'] == 'France') ].reset_index(drop=True)\nData_France_op= Data_France.groupby([\"ObservationDate\",\"Country\/Region\"])[[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"]].sum().reset_index().reset_index(drop=True)","0dc94939":"dark_confirmed(Data_France_op,\"03\/17\/2020\",\"04\/17\/2020\",\"France\")","7f4ba096":"dark_active(Data_France_op,\"03\/17\/2020\",\"04\/17\/2020\",\"France\")","defa5a9c":"dark_recovered(Data_France_op,\"03\/17\/2020\",\"04\/17\/2020\",\"France\")","43e336e2":"Data_UK = data [(data['Country\/Region'] == 'UK') ].reset_index(drop=True)\nData_UK_op= Data_UK.groupby([\"ObservationDate\",\"Country\/Region\"])[[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"]].sum().reset_index().reset_index(drop=True)","ccc7fd19":"dark_confirmed(Data_UK_op,\"03\/23\/2020\",\"04\/23\/2020\",\"United Kingdom\")","fb3c3fa4":"dark_active(Data_UK_op,\"03\/23\/2020\",\"04\/23\/2020\",\"United Kingdom\")","80bb13a7":"dark_recovered(Data_UK_op,\"03\/23\/2020\",\"04\/23\/2020\",\"United Kingdom\")","e5df0315":"Data_India = data [(data['Country\/Region'] == 'India') ].reset_index(drop=True)\nData_India_op= Data_India.groupby([\"ObservationDate\",\"Country\/Region\"])[[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"]].sum().reset_index().reset_index(drop=True)","f1b321e4":"dark_confirmed(Data_India_op,\"03\/24\/2020\",\"04\/24\/2020\",\"India\")","ab8c4a37":"dark_active(Data_India_op,\"03\/24\/2020\",\"04\/24\/2020\",\"India\")","61372ead":"dark_recovered(Data_India_op,\"03\/24\/2020\",\"04\/24\/2020\",\"India\")","db846dac":"Data_Germany = data [(data['Country\/Region'] == 'Germany') ].reset_index(drop=True)\nData_Germany_op= Data_Germany.groupby([\"ObservationDate\",\"Country\/Region\"])[[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"]].sum().reset_index().reset_index(drop=True)","51f4935b":"dark_confirmed(Data_Germany_op,\"03\/23\/2020\",\"04\/23\/2020\",\"Germany\")","82cbf94f":"dark_active(Data_Germany_op,\"03\/23\/2020\",\"04\/23\/2020\",\"Germany\")","1b7bac56":"dark_recovered(Data_Germany_op,\"03\/23\/2020\",\"04\/23\/2020\",\"Germany\")","3ac16c24":"Till then Enjoy Machine Learning!!!!!!!!!!!!!!","19188382":"# COVID - 19 Updates","339910e5":"Updates in **Germany**","ef9a4f77":"Updates in **India**","9be6c858":"Updates in **Italy**","4ed96f2b":"Here are the corona virus update for different countries.","21f5bd34":"**Importing Libraries**","ccc398f2":"I have done some preprocessing steps i.e. converting all float types into int types and make a column of active cases.","a1908033":"Updates in **France**","88d3c7f0":"Updates in **UK**","517f7fcf":"**Importing dataset**","e70f9c10":"Updates in **Tunisia**","3e759b7f":"Here I displayed some countries updates of corona virus."}}