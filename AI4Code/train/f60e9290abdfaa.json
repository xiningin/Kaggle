{"cell_type":{"fb813b23":"code","c36ecee4":"code","69e56aa5":"code","85502c92":"code","77bad6f5":"code","494e773c":"code","d2e7dc6b":"code","ccdb3829":"code","45df1296":"code","03dc360a":"code","fff0cc6d":"code","9363ce4c":"code","50f34714":"code","1a85fa1a":"code","0d50394a":"markdown","f17bdcb9":"markdown","5ef8b53e":"markdown","37379d3b":"markdown","0f540b1d":"markdown","34bf889f":"markdown","34de1c2e":"markdown","788469a9":"markdown","91799b39":"markdown","7db12635":"markdown","a0e398f8":"markdown","a4c6b81d":"markdown","1a5eecc3":"markdown","28fcb50a":"markdown","03199162":"markdown"},"source":{"fb813b23":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c36ecee4":"!pip install pyod\nimport pandas as pd\npd.set_option('display.max_columns', None)\npd.set_option('display.width', 500)\npd.set_option('display.expand_frame_repr', False)\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.decomposition import PCA\nfrom sklearn.preprocessing import StandardScaler\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n\ndef show_outliers(df):\n    sns.set_theme(style=\"whitegrid\")\n    for col in df.columns:\n        if df[col].dtypes in [\"float\",\"int\",\"int64\",\"float64\"]:\n            ax = sns.boxplot(x=df[col])\n            plt.show()\n\ndef show_related(df):\n    for col in df.columns:\n        if df[col].dtypes in [\"float\", \"int\"]:\n            ax = sns.scatterplot(data=df, x=\"price\", y=col,hue=\"cut\")\n            plt.show()\ndef check_df(dataframe, head=5):\n    print(\"##################### Shape #####################\")\n    print(dataframe.shape)\n    print(\"##################### Types #####################\")\n    print(dataframe.dtypes)\n    print(\"##################### Head #####################\")\n    print(dataframe.head(head))\n    print(\"##################### Tail #####################\")\n    print(dataframe.tail(head))\n    print(\"##################### NA #####################\")\n    print(dataframe.isnull().sum())\n    print(\"##################### Quantiles #####################\")\n    print(dataframe.quantile([0, 0.05, 0.50, 0.95, 0.99, 1]).T)\n\ndef scale_and_pca(df):\n    df_ = pd.get_dummies(df,drop_first=True)\n    column_names = df_.columns\n    scaler = StandardScaler()\n    df_ = scaler.fit_transform(df_)\n    df_ = pd.DataFrame(df_,columns=column_names)\n    pca = PCA(n_components=1)\n    cc = pca.fit_transform(df_.drop([\"price\"],axis=1), df_[\"price\"])\n    ax = sns.scatterplot(x=df_[\"price\"], y=cc[:,0])\n    plt.show()\n    df[\"pca\"] = cc[:,0]\n    return df, df_","69e56aa5":"# Veri seti y\u00fckleniyor\n\ndf = sns.load_dataset(\"diamonds\")\n","85502c92":"# H\u0131zl\u0131 bir \u015fekilde verimizin baz\u0131 \u00f6zelliklerine g\u00f6z atal\u0131m\ncheck_df(df)","77bad6f5":"# Price de\u011fi\u015fkenine g\u00f6re di\u011fer de\u011fi\u015fkenlerin davran\u0131\u015f\u0131n\u0131 sa\u00e7\u0131l\u0131m grafi\u011fi \u00fczerinde g\u00f6relim.\nshow_related(df)","494e773c":"# Bu \u00e7al\u0131\u015fman\u0131n amac\u0131 ayk\u0131r\u0131 de\u011ferleri tespit etmek.\n# Bunun i\u00e7in en s\u0131k kullan\u0131lan y\u00f6ntemlerden birisi kutu grafi\u011fi (box plot) yard\u0131m\u0131yla her de\u011fi\u015fken i\u00e7in ayk\u0131r\u0131 de\u011ferleri g\u00f6r\u00fcnt\u00fcleyelim\nshow_outliers(df)","d2e7dc6b":"# Veriyi \u00f6zet bir \u015fekilde g\u00f6rselle\u015ftirebilmek i\u00e7in PCA y\u00f6ntemine ba\u015fvuruyorum.\ndf, df_ = scale_and_pca(df)","ccdb3829":"\ndef IQR(dataframe, variable, q1=0.25, q3=0.75):\n    quartile1 = dataframe[variable].quantile(q1)\n    quartile3 = dataframe[variable].quantile(q3)\n    interquantile_range = quartile3 - quartile1\n    up_limit = quartile3 + 1.5 * interquantile_range\n    low_limit = quartile1 - 1.5 * interquantile_range\n    outliers = [indx  for indx in df[variable].index if df.loc[indx, variable] > up_limit or df.loc[indx, variable] < low_limit]\n    #dataframe[\"outliers\"] = dataframe[\"outliers\"].astype(\"category\")\n    return outliers","45df1296":"num_cols = df.select_dtypes([\"int\",\"float\",\"int64\",\"float64\"])\n\n\u0131qr_outliers_default = []\nfor col in num_cols:\n    \u0131qr_outliers_default.extend(IQR(df,col))\n\ndf[\"\u0131qr_outliers_default\"] = [\"outlier\" if inx in \u0131qr_outliers_default else \"inlier\" for inx in df.index]\n\nprint(df[\"\u0131qr_outliers_default\"].value_counts())\n\nax = sns.scatterplot(data=df, x=\"price\", y=\"pca\", hue=\"\u0131qr_outliers_default\")\nplt.show()","03dc360a":"from sklearn.neighbors import LocalOutlierFactor\n\nclf = LocalOutlierFactor(n_neighbors=20, contamination=0.1)\nresult = clf.fit_predict(df_)\ndf[\"lof_outliers\"] = [\"outlier\" if val == -1 else \"inlier\"  for val in result]\n\n\nhue_order = [\"inlier\", \"outlier\"]\nax = sns.scatterplot(data=df, x=\"price\", y=\"pca\", hue=\"lof_outliers\",hue_order=hue_order)\nplt.show()","fff0cc6d":"from pyod.models.cblof import CBLOF\n\ncblof_clf = CBLOF(check_estimator=False, random_state=42)\ncblof_clf.fit(df_)\ndf[\"cblof_outliers\"] = cblof_clf.labels_\nprint(df[\"cblof_outliers\"].value_counts())\n\nax = sns.scatterplot(data=df, x=\"price\", y=\"pca\", hue=\"cblof_outliers\")\nplt.show()\n","9363ce4c":"from sklearn.ensemble import IsolationForest\niso = IsolationForest(contamination=0.1, random_state=2)\nresult = iso.fit_predict(df_)\ndf[\"iso_outliers\"] = [\"outlier\" if val == -1 else \"inlier\"  for val in result]\nprint(df[\"iso_outliers\"].value_counts())\n\nax = sns.scatterplot(data=df, x=\"price\", y=\"pca\", hue=\"iso_outliers\")\nplt.show()","50f34714":"from sklearn.covariance import EllipticEnvelope\nee = EllipticEnvelope(contamination=0.01)\nresult = ee.fit_predict(df_)\n\ndf[\"eliptic_outliers\"] = [\"outlier\" if val == -1 else \"inlier\"  for val in result]\nprint(df[\"eliptic_outliers\"].value_counts())\n\nax = sns.scatterplot(data=df, x=\"price\", y=\"pca\", hue=\"eliptic_outliers\")\nplt.show()","1a85fa1a":"from sklearn.svm import OneClassSVM\nocs = OneClassSVM(nu=0.01)\nresult = ocs.fit_predict(df_)\n\ndf[\"ocs_outliers\"] = [\"outlier\" if val == -1 else \"inlier\"  for val in result]\nprint(df[\"ocs_outliers\"].value_counts())\n\nax = sns.scatterplot(data=df, x=\"price\", y=\"pca\", hue=\"ocs_outliers\")\nplt.show()","0d50394a":"\nDiamonds veri seti,neredeyse 54.000 p\u0131rlantan\u0131n fiyatlar\u0131n\u0131 ve di\u011fer \u00f6zelliklerini i\u00e7erir.\n53.940 g\u00f6zlem ve 10 de\u011fi\u015fkenden olu\u015fur.\nEksik veri bulundurmamaktad\u0131r.\n\n* price: ABD dolar\u0131 cinsinden  fiyat\u0131 (\\$326--\\$18.823)\n* carat: p\u0131rlantan\u0131n karat a\u011f\u0131rl\u0131\u011f\u0131 (0,2--5,01)\n* cut: kesimin kesim kalitesi (Orta, \u0130yi, \u00c7ok \u0130yi, Premium, \u0130deal)\n* color: renk elmas rengi, J'den (en k\u00f6t\u00fc) D'ye (en iyi)\n* clarity: netlik elmas\u0131n ne kadar net oldu\u011funun bir \u00f6l\u00e7\u00fcs\u00fcd\u00fcr (I1 (en k\u00f6t\u00fc), SI2, SI1, VS2, VS1, VVS2, VVS1, IF (en iyi))\n* x: uzunluk mm (0--10.74)\n* y: geni\u015fli\u011fi mm (0--58.9)\n* z:mm cinsinden z derinli\u011fi (0--31,8)\n* depth: derinlik toplam derinlik y\u00fczdesi = z \/ ortalama(x, y) = 2 * z \/ (x + y) (43--79)\n* table: en geni\u015f noktaya g\u00f6re elmas\u0131n \u00fcst tabla geni\u015fli\u011fi (43--95)\n","f17bdcb9":"Daha \u00f6nceden bu script i\u00e7in yazm\u0131\u015f oldu\u011fum fonksiyonlar ve kullan\u0131lacak k\u00fct\u00fcphaneler eklendi.\nEkranda \u00e7ok yer kaplamamas\u0131 i\u00e7in bu k\u0131sm\u0131 gizliyorum.","5ef8b53e":"# 5.Cluster Based Local Outlier Factor\nCBLOF (Cluster Based Local Outlier Factor) LOF y\u00f6nteminin \u00f6zel bir versiyonudur.\u00d6nce veri kendi i\u00e7erisinde k\u00fcmelenir.Ayk\u0131r\u0131l\u0131k skoru bu k\u00fcmeler \u00f6zelinde hesaplan\u0131r.Ayr\u0131nt\u0131l\u0131 bilgi [burada](http:\/\/citeseerx.ist.psu.edu\/viewdoc\/download?doi=10.1.1.20.4242&rep=rep1&type=pdf)","37379d3b":"![maxresdefault.jpg](attachment:2e957937-b0dc-4336-8362-29cc6e6573b3.jpg)","0f540b1d":"# 5.IsolationForest\nAyk\u0131r\u0131 de\u011ferleri yakalamak i\u00e7in karar a\u011fa\u00e7lar\u0131n\u0131 kullan\u0131r.T\u00fcm g\u00f6zlemlere bir karar a\u011fac\u0131 yerle\u015ftirirek, a\u011fac\u0131n k\u00f6k\u00fcne daha yak\u0131n \u00f6rnekleri ayk\u0131r\u0131 de\u011fer olarak niteler.Detayl\u0131 anlat\u0131m [burada](https:\/\/machinelearninginterview.com\/topics\/machine-learning\/explain-isolation-forests-for-anomaly-detection\/)","34bf889f":"SVM yani Destek Vekt\u00f6r Makineleri s\u0131n\u0131fland\u0131rma konular\u0131nda kullan\u0131lan yayg\u0131n bir makine \u00f6\u011frenmesi algoritmas\u0131d\u0131r. SVM'in s\u0131n\u0131fland\u0131rma g\u00fcc\u00fcnden yararlanarak ayk\u0131r\u0131 de\u011fer yakalama yap\u0131labilir.Detayl\u0131 bilgi [burada](https:\/\/machinelearninginterview.com\/topics\/machine-learning\/what-is-one-class-svm-how-to-use-it-for-anomaly-detection\/) ","34de1c2e":"# 3. Interquartile Range\nIQR (Interquartile Range) ayk\u0131r\u0131 de\u011fer yakalamak i\u00e7in en s\u0131k kullan\u0131lan y\u00f6ntemdir.\nVerideki de\u011fi\u015fkenleri bir b\u00fct\u00fcn olarak de\u011fil par\u00e7a par\u00e7a olarak de\u011ferlendirir.Yani her bir de\u011fi\u015fken i\u00e7in ayr\u0131 ayr\u0131 analiz yap\u0131lmas\u0131 gerekir.\nIQR y\u00f6ntemi ile ilgili a\u00e7\u0131klay\u0131c\u0131 bilgiye  [buradan](https:\/\/online.stat.psu.edu\/stat200\/lesson\/3\/3.2) ula\u015fabilirsiniz.","788469a9":"\n## Giri\u015f\n\nAyk\u0131r\u0131 de\u011fer (outlier), veri analizi s\u00fcrecinde verilerimizde bulunan a\u015f\u0131r\u0131 u\u00e7 de\u011ferlerden olu\u015fan g\u00f6zlemleri temsil etmektedir.\nAyk\u0131r\u0131l\u0131k makine \u00f6\u011frenmesi modellerinde \u00f6\u011frenme performans\u0131n\u0131 etkiler ayr\u0131ca genellenebilirli\u011fi bozar bu y\u00fczden genellikle bu de\u011ferleri yakalamak \u00f6nemli. Peki ayk\u0131r\u0131 de\u011ferleri yakalamak neden bu kadar zor? Normal tan\u0131m\u0131n\u0131n ve ayk\u0131r\u0131 tan\u0131m\u0131n\u0131n do\u011fru yap\u0131lmas\u0131 \u00e7ok kritik.\nBu \u00e7al\u0131\u015fmada ayk\u0131r\u0131l\u0131\u011f\u0131 tan\u0131mlamak i\u00e7in tek bir metot olmad\u0131\u011f\u0131 ve bunlar\u0131n farkl\u0131 sonu\u00e7lar verebilece\u011fi grafikler \u00fczerinde g\u00f6stererek sizlere sunmak istedim.\n\n\u00c7al\u0131\u015fman\u0131n \u00f6zeti \u015f\u00f6yledir:\n1. K\u00fct\u00fcphane ve fonksiyonlar\u0131n importu\n2. Ke\u015fif\u00e7i Veri Analizi\n3. Interquartile Range\n4. Local Outlier Factor\n5. Cluster Based Local Outlier Factor\n6. Isolation Forest\n7. Elliptic Envelope\n8. One-Class Support Vector Machine","91799b39":"LOF (Local Outlier Factor) veriyi bir b\u00fct\u00fcn olarak de\u011ferlendirip b\u00fct\u00fcn de\u011fi\u015fkenleri g\u00f6z \u00f6n\u00fcnde bulundurarak her bir g\u00f6zlemi uzayda bir noktaya yerle\u015ftirir.Bu sayede di\u011ferlerinden daha uzak olan noktalar\u0131 ayk\u0131r\u0131 olarak tan\u0131mlar.Ayr\u0131nt\u0131l\u0131 bilgiye [buradan](https:\/\/www.veribilimiokulu.com\/local-outlier-factor-ile-anormallik-tespiti\/) ula\u015fabilirsiniz.","7db12635":"# 2. Ke\u015fif\u00e7i Veri Analizi","a0e398f8":"# 7.OneClassSVM","a4c6b81d":"# 6.EllipticEnvelope","1a5eecc3":"# 4.Local Outlier Factor","28fcb50a":"Normal de\u011ferlerimizi i\u00e7ine alacak hayali bir eliptik \u00e7izgi olu\u015fturmay\u0131 dener.Bu \u00e7izginin en optimum halini bularak \u00e7izgi d\u0131\u015f\u0131ndakileri ayk\u0131r\u0131 de\u011fer olarak yakalamaya \u00e7al\u0131\u015f\u0131r\u0131z.","03199162":"# 1. K\u00fct\u00fcphane ve fonksiyonlar\u0131n importu"}}