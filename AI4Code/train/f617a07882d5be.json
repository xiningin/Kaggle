{"cell_type":{"0510e83f":"code","2cfe6c62":"code","9f24c9ea":"code","5e4fee99":"code","db210932":"code","74adc640":"code","5c56ee5e":"code","e016f18d":"code","d678622c":"code","11ad2f2d":"code","edf2ac3e":"code","948efe78":"code","404eb211":"code","e8a7039e":"code","ef378787":"code","629eeb50":"code","d32eb8a9":"code","186922cf":"code","27d86bcb":"code","cc573266":"code","f6c71a95":"code","9b15615b":"code","5b0950fd":"code","cbbc0bc0":"code","cf782ed5":"code","80cd8e25":"code","1a01ffa4":"code","495633bd":"code","ece5fb30":"code","c5ece88c":"code","ea27bcd8":"code","60e97871":"code","9aa940e4":"code","9c5e2ffd":"code","61e8b919":"code","f60134b4":"code","9addd2c6":"code","f2582ba2":"code","d72c84ec":"code","b96b7e12":"code","2fa1928e":"code","95c5bb46":"markdown","be31a5e3":"markdown","343f1cad":"markdown","24d34690":"markdown","7557df22":"markdown","7a1493ff":"markdown","8d18ddaa":"markdown","048242f3":"markdown","75682acf":"markdown","f2f1bc13":"markdown","55174b53":"markdown"},"source":{"0510e83f":"#Importing necessary libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","2cfe6c62":"#importing dataset\ndf = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_df = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\npassengers = test_df[\"PassengerId\"]\n#insight of first 10 rows of datasets\ndf.head(10)","9f24c9ea":"# shape of datasets\nshape = df.shape\nprint(\"Dataset have\",shape[0],\"number of rows and\",shape[1],\"numbers of columns\")","5e4fee99":"# exploring dataset\ndf.describe()","db210932":"sns.heatmap(df.isnull(), cbar = False)\nplt.show()","74adc640":"# finding data type of different column\ndf.dtypes","5c56ee5e":"df.drop(['PassengerId','Name','SibSp','Parch','Ticket','Cabin','Embarked'],axis='columns',inplace=True) #here the menstioned columns will be dropped from the original dataset i.e df\ntest_df.drop(['PassengerId','Name','SibSp','Parch','Ticket','Cabin','Embarked'],axis='columns',inplace=True)","e016f18d":"df['Sex']=pd.get_dummies(df['Sex'])","d678622c":"test_df['Sex']=pd.get_dummies(test_df['Sex'])","11ad2f2d":"df.head()","edf2ac3e":"test_df.head()","948efe78":"# Checking for null values in dataset\ndf.isnull().sum()","404eb211":"test_df.isnull().sum()","e8a7039e":"# we will replece or fill nan values with mean of age column\ndf.Age = df.Age.fillna(df.Age.mean())\ntest_df.Age = test_df.Age.fillna(test_df.Age.mean())\ntest_df.Fare = test_df.Fare.fillna(test_df.Fare.mean())","ef378787":"sns.countplot(\"Sex\", data = df, hue =\"Survived\")\nplt.show()","629eeb50":"x= [0,1,2]\nsns.countplot(\"Pclass\", data = df, hue =\"Survived\")\nlabels = [\"1st Class\",\"2nd Class\",\"3rd Class\"]\nplt.xticks(x, labels)\nplt.show()    ","d32eb8a9":"# droping survive column to get fuure or independet variable\nX = df.drop([\"Survived\"], axis = 1)\nX.head()","186922cf":"# selecting only survived column\ny= pd.DataFrame(df['Survived'])\ny.head()","27d86bcb":"#importing train test split tool from skearn\nfrom sklearn.model_selection import train_test_split","cc573266":"#spliting X and y as X_train,y_train,X_test and y_test\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state = 101, stratify=y)","f6c71a95":"print(X_train.shape)\nprint(y_train.shape)\nprint(X_test.shape)\nprint(y_test.shape)","9b15615b":"#importing LogisticRegression from sklearn and storing it in reg\nfrom sklearn.linear_model import LogisticRegression\nreg = LogisticRegression()","5b0950fd":"model = reg.fit(X_train, y_train)","cbbc0bc0":"y_pred = model.predict(X_test)\ny_pred","cf782ed5":"score=model.score(X_test, y_test)","80cd8e25":"print('the accuracy obtained ny using Logistic Regression is: ', score)","1a01ffa4":"#importing decision tree classifier \nfrom sklearn.tree import DecisionTreeClassifier\n# how to import decision tree regressor\nfrom sklearn.tree import DecisionTreeRegressor","495633bd":"#creating the decision tree function\ndt_model = DecisionTreeClassifier(random_state=10)","ece5fb30":"#fitting the model\ndt_model.fit(X_train, y_train)","c5ece88c":"#checking the test score\ndt_model.score(X_test, y_test)","ea27bcd8":"dt_model1 = DecisionTreeClassifier(max_depth=8, max_leaf_nodes=25, random_state=10)","60e97871":"#fitting the model\ndt_model1.fit(X_train, y_train)","9aa940e4":"#Test score\nscore_dt=dt_model1.score(X_test, y_test)\nprint(\"Accuracy of the Decision Tree model is :\", score_dt)","9c5e2ffd":"#importing svm\nfrom sklearn.svm import SVC","61e8b919":"svm = SVC()","f60134b4":"svm_model=svm.fit(X_train, y_train)","9addd2c6":"score_svm=svm_model.score(X_test, y_test)","f2582ba2":"print(\"Accuracy of the SVM model is :\", score_svm)","d72c84ec":"y_pred=dt_model1.predict(test_df)","b96b7e12":"y_pred","2fa1928e":"submission = pd.DataFrame({'PassengerId':passengers,'Survived':y_pred})\nsubmission.to_csv('kaggle_Titanic_submission.csv',index=False)\nprint(\"submission completed\")","95c5bb46":"### Using Logistic Regression","be31a5e3":"###### we will drop some columns from dataset which are less contributing to the target variable ","343f1cad":"### Submitting","24d34690":"###### We have 177 null or NaN values in Age column","7557df22":"### Data Visualisation","7a1493ff":"#### Changing parameters of Decision Tree","8d18ddaa":"### Data Cleaning","048242f3":"### Using Decision Tree","75682acf":"### PreProcessing Dataset","f2f1bc13":"# Titanic Dataset with diffrent ML models","55174b53":"### Using Support Vector Machine (SVM)"}}