{"cell_type":{"d3110829":"code","d6b27472":"code","7cba9d8b":"code","cbce6611":"code","45561a71":"code","0dad328a":"code","d1f7fc61":"code","fc10d913":"code","62a9ce68":"code","017faea4":"code","80538773":"code","ea0e1290":"code","ad867d0e":"code","53612ecf":"code","14689d31":"code","84639892":"code","01c15be0":"code","4980dad4":"code","f929da85":"code","0855b1d9":"code","988f9c84":"code","6e4a9ced":"code","22b7d6c3":"code","6611aa64":"code","1ad369e2":"code","c7d43651":"code","9add8e91":"code","f69f9669":"code","f889be61":"code","57981e65":"code","8d7b638e":"code","c37ee546":"code","52378479":"code","779aa4ab":"code","1e20b555":"code","6a714c88":"code","bd4ec451":"code","52d52785":"code","a6a0eb12":"code","d64c63dd":"code","e2ec46c8":"code","fa39ad5f":"code","7023135d":"code","3acd39ab":"code","efad460d":"markdown","8b23efd9":"markdown","3653c1ee":"markdown","d1cc4367":"markdown","0c7463eb":"markdown","4e3aee86":"markdown","3d317e6e":"markdown","fd5221cd":"markdown","e5fadbd2":"markdown","92623b7c":"markdown","1db9bc0f":"markdown","4983901d":"markdown","eecb1139":"markdown","608fd41b":"markdown","e0082ea4":"markdown","5a0730b9":"markdown"},"source":{"d3110829":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px\n\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d6b27472":"!pip install openpyxl","7cba9d8b":"df = pd.read_excel('\/kaggle\/input\/list-of-bangladesh-odi-cricket-centurions\/centurions in odi bangladesh .xlsx')\ndf.head(2)","cbce6611":"df.isnull().sum()","45561a71":"#Code by ENES ZVORNI\u010cANIN  https:\/\/www.kaggle.com\/eneszvo\/mlb-comprehensive-eda\n\nnum_col = [col for col in df.columns if pd.api.types.is_numeric_dtype(df[col])]\nfig, axes = plt.subplots(nrows=3, ncols=3)#Original was nrows=18\nplt.suptitle('Histograms for numeric columns in train_events data frame', y=0.9)\nfig.set_figheight(20)#Original was 40(figheight)\nfig.set_figwidth(10)#Original was 20 (figwidth)\nfig.subplots_adjust(hspace=0.4)\ncolumns = list(df.columns)\n\nfor i, ax in enumerate(axes.flatten()):\n    try:\n        df[num_col[i]].hist(ax=ax)\n        ax.set_title(num_col[i])\n    except:\n        continue\n        \nplt.show()","0dad328a":"#Code by ENES ZVORNI\u010cANIN  https:\/\/www.kaggle.com\/eneszvo\/mlb-comprehensive-eda\n\n#Saving for next script since I have only one object column.\n\nobject_col = list(set(df.columns).difference(num_col))\nfig, axes = plt.subplots(nrows=10, ncols=2)\nplt.suptitle('Top 20 values for each non numeric columns', y=0.9)\nfig.set_figheight(40)\nfig.set_figwidth(20)\nfig.subplots_adjust(hspace=0.4)\n\nfor i, ax in enumerate(axes.flatten()):\n    \n    try:\n        df.groupby(object_col[i]).count()['dailyDataDate'].sort_values()[-20:].plot.barh(ax=ax)\n        ax.set_title(object_col[i])\n    except:\n        continue\n\nplt.show()","d1f7fc61":"#Code by Puru Behl https:\/\/www.kaggle.com\/accountstatus\/mt-cars-data-analysis\n\nsns.distplot(df['Matches'], color='g')\nplt.axvline(df['Matches'].values.mean(), color='red', linestyle='dashed', linewidth=1)\nplt.title('Matches distribution');","fc10d913":"#Code by Firat Gonen https:\/\/www.kaggle.com\/frtgnn\/elo-eda-lgbm\/notebook \n\nplt.figure(figsize=(10, 6))\nplt.title('Numbers Distribution')\nsns.despine()\nsns.set_context(\"notebook\", font_scale=1.5, rc={\"lines.linewidth\": 2.5})\n\nsns.distplot(df['No'], hist=True, rug=False,norm_hist=True);","62a9ce68":"#Code by Puru Behl https:\/\/www.kaggle.com\/accountstatus\/mt-cars-data-analysis\n\nsns.distplot(df['Runs'], color='r')\nplt.axvline(df['Runs'].values.mean(), color='red', linestyle='dashed', linewidth=1)\nplt.title('Runs distribution');","017faea4":"y = df.loc[~df.Serial.isnull()][['Serial','Matches','Runs','Hs']]\n\ny_log=np.log1p(y)","80538773":"#Code by Oniel Gracious https:\/\/www.kaggle.com\/onielg\/simplecatboostwithclassifierchains\/notebook\n\n#histogram and normal probability plot\nfrom scipy import stats\n\nfrom scipy.stats import norm\ntarget=['Serial','Matches','Runs', 'Hs']\nfor t in target:\n    fig = plt.figure()\n    sns.distplot(y_log[t], fit=norm);\n    res = stats.probplot(y_log[t], plot=plt)","ea0e1290":"dfcorr=df.corr()\ndfcorr\nplt.figure(figsize=(10,4))\nsns.heatmap(df.corr(),annot=False,cmap='summer')\nplt.show()","ad867d0e":"from sklearn.preprocessing import LabelEncoder\n\n#fill in mean for floats\nfor c in df.columns:\n    if df[c].dtype=='float16' or  df[c].dtype=='float32' or  df[c].dtype=='float64':\n        df[c].fillna(df[c].mean())\n\n#fill in -999 for categoricals\ndf = df.fillna(-999)\n# Label Encoding\nfor f in df.columns:\n    if df[f].dtype=='object': \n        lbl = LabelEncoder()\n        lbl.fit(list(df[f].values))\n        df[f] = lbl.transform(list(df[f].values))\n        \nprint('Labelling done.')","53612ecf":"df.head()","14689d31":"# Prepare the data\nX = df.drop('No', axis=1)\ny = df['No'].copy()\n\nX.head()","84639892":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, random_state=42)\nX_train.shape, X_test.shape","01c15be0":"from sklearn.tree import DecisionTreeClassifier\n\ndt = DecisionTreeClassifier(max_depth=3)\ndt.fit(X_train, y_train)","4980dad4":"#Code by SIDDHARTH KASHYAP  https:\/\/www.kaggle.com\/sid9300\/heart-cases-decision-tree\n\n# pip users\n!pip install pydotplus\n!pip install six\n\nfrom IPython.display import Image\nfrom six import StringIO\nfrom sklearn.tree import export_graphviz\nimport pydotplus, graphviz\n\ndot_data = StringIO()\n\nexport_graphviz(dt, out_file=dot_data, filled=True, rounded=True, feature_names=X.columns, \n                )\n\ngraph = pydotplus.graph_from_dot_data(dot_data.getvalue())\nImage(graph.create_png())","f929da85":"#Code by SIDDHARTH KASHYAP  https:\/\/www.kaggle.com\/sid9300\/heart-cases-decision-tree\n\ny_train_pred = dt.predict(X_train)\ny_test_pred = dt.predict(X_test)\n\nfrom sklearn.metrics import confusion_matrix, accuracy_score\n\nprint(\"Train set performance\")\nprint(accuracy_score(y_train, y_train_pred))\nconfusion_matrix(y_train, y_train_pred)","0855b1d9":"#Code by SIDDHARTH KASHYAP  https:\/\/www.kaggle.com\/sid9300\/heart-cases-decision-tree\n\nprint(\"Test set performance\")\nprint(accuracy_score(y_test, y_test_pred))\nconfusion_matrix(y_test, y_test_pred)","988f9c84":"#Code by SIDDHARTH KASHYAP  https:\/\/www.kaggle.com\/sid9300\/heart-cases-decision-tree\n\ndef get_dt_graph(dt_classifier):\n    dot_data = StringIO()\n\n    export_graphviz(dt_classifier, out_file=dot_data, filled=True, rounded=True, feature_names=X.columns, \n                )\n    \n    graph = pydotplus.graph_from_dot_data(dot_data.getvalue())\n    \n    return graph","6e4a9ced":"#Code by SIDDHARTH KASHYAP  https:\/\/www.kaggle.com\/sid9300\/heart-cases-decision-tree\n\ndef evaluate_model(dt_classifier):\n    y_train_pred = dt_classifier.predict(X_train)\n    y_test_pred = dt_classifier.predict(X_test)\n    \n    print(\"Train set performance\")\n    print(accuracy_score(y_train, y_train_pred))\n    print(confusion_matrix(y_train, y_train_pred))\n    print(\"-\"*50)\n    print(\"Test set performance\")\n    print(accuracy_score(y_test, y_test_pred))\n    print(confusion_matrix(y_test, y_test_pred))","22b7d6c3":"evaluate_model(dt)","6611aa64":"#Code by SIDDHARTH KASHYAP  https:\/\/www.kaggle.com\/sid9300\/heart-cases-decision-tree\n\ngph = get_dt_graph(dt)\nImage(gph.create_png())","1ad369e2":"#Code by SIDDHARTH KASHYAP  https:\/\/www.kaggle.com\/sid9300\/heart-cases-decision-tree\n\ndt_default = DecisionTreeClassifier(random_state=42)\ndt_default.fit(X_train, y_train)","c7d43651":"gph = get_dt_graph(dt_default)\nImage(gph.create_png())","9add8e91":"evaluate_model(dt_default)","f69f9669":"dt_depth = DecisionTreeClassifier(max_depth=3, random_state=42)\ndt_depth.fit(X_train, y_train)","f889be61":"gph = get_dt_graph(dt_depth)\nImage(gph.create_png())","57981e65":"evaluate_model(dt_depth)","8d7b638e":"#Code by SIDDHARTH KASHYAP  https:\/\/www.kaggle.com\/sid9300\/heart-cases-decision-tree\n\ndt_min_split = DecisionTreeClassifier(min_samples_split=20, random_state=42)\ndt_min_split.fit(X_train, y_train)\n\ngph = get_dt_graph(dt_min_split)\nImage(gph.create_png())","c37ee546":"evaluate_model(dt_min_split)","52378479":"#Code by SIDDHARTH KASHYAP  https:\/\/www.kaggle.com\/sid9300\/heart-cases-decision-tree\n\ndt_min_leaf = DecisionTreeClassifier(min_samples_leaf=20, random_state=42)\ndt_min_leaf.fit(X_train, y_train)\n\ngph = get_dt_graph(dt_min_leaf)\nImage(gph.create_png())","779aa4ab":"#Code by SIDDHARTH KASHYAP  https:\/\/www.kaggle.com\/sid9300\/heart-cases-decision-tree\n\ndt_min_leaf_entropy = DecisionTreeClassifier(min_samples_leaf=20, random_state=42, criterion=\"entropy\")\ndt_min_leaf_entropy.fit(X_train, y_train)\n\ngph = get_dt_graph(dt_min_leaf_entropy)\nImage(gph.create_png())","1e20b555":"evaluate_model(dt_min_leaf_entropy)","6a714c88":"#Code by SIDDHARTH KASHYAP  https:\/\/www.kaggle.com\/sid9300\/heart-cases-decision-tree\n\ndt = DecisionTreeClassifier(random_state=42)\n\nfrom sklearn.model_selection import GridSearchCV\n\nparams = {\n    \"max_depth\": [2, 3, 5, 10, 20],\n    \"min_samples_leaf\": [5, 10, 20, 50, 100],\n    \"criterion\": ['gini', 'entropy']\n}\n\ngrid_search = GridSearchCV(estimator=dt, param_grid=params, cv=2, n_jobs=-1, verbose=1, scoring=\"accuracy\")","bd4ec451":"%%time\ngrid_search.fit(X_train, y_train)","52d52785":"cv_df = pd.DataFrame(grid_search.cv_results_)\ncv_df.head()","a6a0eb12":"cv_df.shape","d64c63dd":"cv_df.nlargest(5, 'mean_test_score')","e2ec46c8":"grid_search.best_estimator_","fa39ad5f":"grid_search.best_score_","7023135d":"#Code by SIDDHARTH KASHYAP  https:\/\/www.kaggle.com\/sid9300\/heart-cases-decision-tree\n\ndt_best = grid_search.best_estimator_\nevaluate_model(dt_best)","3acd39ab":"#Code by SIDDHARTH KASHYAP  https:\/\/www.kaggle.com\/sid9300\/heart-cases-decision-tree\n\ngph = get_dt_graph(dt_best)\nImage(gph.create_png())","efad460d":"#Again the same tree","8b23efd9":"#Building the decision tree","3653c1ee":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcQDlyMvEbk97GrOYaxMhGyDNZkKPl8szPLnSA&usqp=CAU)internationalcricket.fandom.com","d1cc4367":"#Controlling the depth of the tree","0c7463eb":"#Acknowledgement\n\nSIDDHARTH KASHYAP https:\/\/www.kaggle.com\/sid9300\/heart-cases-decision-tree","4e3aee86":"#Same result again??","3d317e6e":"#Decision tree without any hyper-parameter setting","fd5221cd":"#Checking the Label Encoder. ","e5fadbd2":"#Specifying the minimum samples in leaf node","92623b7c":"#That tree is exactly the previous one. There is no sense to plot it again.","1db9bc0f":"ValueError: n_splits=4 cannot be greater than the number of members in each class.","4983901d":"#Using Entropy instead of Gini","eecb1139":"#Below, I changed cv=4 to cv=2  to avoid \"ValueError: n_splits=4 cannot be greater than the number of members in each class.\"","608fd41b":"#Helper functions to evaluate the model performance and create the graph for DT","e0082ea4":"#Hyper-parameter tuning using Grid Search CV","5a0730b9":"#Model Building"}}