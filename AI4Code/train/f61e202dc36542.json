{"cell_type":{"975f4168":"code","16cf46cf":"code","5f218685":"code","f8e53af8":"code","78505d6b":"code","9b8c8b96":"code","c35d7e8f":"code","d1cf4911":"code","3e277c99":"code","30093d82":"code","51a58501":"code","102121ce":"code","2e377510":"code","d5eff4e8":"code","f5a9e41d":"code","c80b88c1":"code","567c30a0":"code","7c00c176":"markdown","9f5c2c2b":"markdown","1860aa64":"markdown","0dd40f23":"markdown","c81dc95e":"markdown","02ab75fa":"markdown","d8ea6192":"markdown"},"source":{"975f4168":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","16cf46cf":"train = pd.read_csv(\"\/kaggle\/input\/st4035-2020-inclass-1\/train_data.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/st4035-2020-inclass-1\/test_data.csv\")","5f218685":"train = train.drop(columns=['ID'])","f8e53af8":"import matplotlib.pyplot as plt\n%matplotlib inline\nplt.rcParams.update({'figure.figsize':(7,5), 'figure.dpi':100})\n\nimport seaborn as sns \nsns.set(color_codes=True)","78505d6b":"print(train.describe())","9b8c8b96":"# Create the default pairplot\nsns.pairplot(train)","c35d7e8f":"\nplt.figure(figsize=(10,5))\nc= train.corr()\nsns.heatmap(c,cmap=\"BrBG\",annot=True)\nc","d1cf4911":"train['X1L'] = np.log(train['X1'])\ntrain['X1S'] = np.square(train['X1'])\ntrain['X1P'] = np.power(train['X1'], 3)","3e277c99":"# Plot Histogram on x\nx = train['X1']\nplt.hist(x, bins=20)\nplt.gca().set(title='Frequency Histogram', ylabel='Frequency');","30093d82":"# Plot Histogram on x\nx = train['X1S']\nplt.hist(x, bins=20)\nplt.gca().set(title='Frequency Histogram', ylabel='Frequency');","51a58501":"train['X2L'] = np.log(train['X2'])\ntrain['X2S'] = np.square(train['X2'])\ntrain['X2P'] = np.power(train['X2'], 3)","102121ce":"# Plot Histogram on x\nx = train['X2']\nplt.hist(x, bins=20)\nplt.gca().set(title='Frequency Histogram', ylabel='Frequency');","2e377510":"# Plot Histogram on x\nx = train['X2P']\nplt.hist(x, bins=20)\nplt.gca().set(title='Frequency Histogram', ylabel='Frequency');","d5eff4e8":"# Plot Histogram on x\nx = train['X3']\nplt.hist(x, bins=20)\nplt.gca().set(title='Frequency Histogram', ylabel='Frequency');","f5a9e41d":"train['X4L'] = np.log(train['X4'])\ntrain['X4S'] = np.square(train['X4'])\ntrain['X4P'] = np.power(train['X4'], 4)","c80b88c1":"# Plot Histogram on x\nx = train['X4']\nplt.hist(x, bins=20)\nplt.gca().set(title='Frequency Histogram', ylabel='Frequency');","567c30a0":"# Plot Histogram on x\nx = train['X4P']\nplt.hist(x, bins=20)\nplt.gca().set(title='Frequency Histogram', ylabel='Frequency');","7c00c176":"# Exploring X1 Variable","9f5c2c2b":"# Exploring X4 Variable","1860aa64":"# Exploring Correlation","0dd40f23":"# Exploring X2 Variable","c81dc95e":"# Descriptives","02ab75fa":"# Pairplot for the Dataset","d8ea6192":"# Exploring X3 Variable"}}