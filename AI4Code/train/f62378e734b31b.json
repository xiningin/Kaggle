{"cell_type":{"36517299":"code","159913df":"code","427a2213":"code","12deedab":"code","494f31b8":"code","09afa663":"code","67b117e4":"code","613f4099":"code","ab3319df":"code","4e3265c8":"code","e3eb4a0c":"code","d513ad61":"code","a2f54411":"code","ecb6947d":"code","621e1b64":"code","c13c4cb0":"code","a1f5dbbe":"code","aff3435b":"code","52f864d3":"code","c9ba71c8":"code","9e41bf66":"code","a35e41dd":"code","2774d466":"code","f65678f0":"code","5aabdcc5":"code","d2257178":"code","dc17aa77":"code","53fc0ce4":"code","61c452cd":"code","692bb814":"code","90c210c2":"code","81e4fa99":"code","d0a2bf05":"code","5590fc09":"code","7650dccf":"code","03d867f9":"code","0eba753f":"code","17ec32fc":"code","043b7cf5":"code","f7c01880":"code","8de996bb":"code","92be8f21":"code","75e43e61":"code","963ff280":"code","25f97b9d":"code","f507cfe6":"code","0e3120c0":"code","f3bf1872":"code","eab44a25":"code","3afe95ed":"code","79b376db":"code","fe3cbee4":"code","29657666":"code","70c4df69":"code","8b70936b":"code","a54a9640":"code","ca2d1d41":"code","a73d33c3":"code","5f6d2fc7":"code","460703b2":"code","e559f61a":"code","59f17532":"code","4c5d2bb8":"code","8b4b8bfc":"code","e6622c3d":"code","c8645a6b":"code","dc97aab8":"code","52af45d6":"code","66716bb7":"code","ac7d7318":"code","e212bc94":"code","5cd1d7a2":"code","406f1487":"code","3571fd12":"code","27348d1e":"code","53dadd48":"code","91b913ab":"code","44a79055":"code","e52886d6":"code","e632db3d":"code","9b174900":"code","571fd9f7":"code","ffeb40b1":"code","be1d10b4":"code","1bf5711d":"code","c4d77137":"code","068ade63":"code","8fa364bd":"code","6e3d674d":"code","5bb0a402":"code","f6886ca2":"code","1ed75d81":"code","b080bbcf":"code","471357f1":"code","30630813":"code","c2630b61":"code","7f58b24e":"code","496f33de":"code","216db9cd":"code","e604707a":"code","cd0237cc":"code","a7b1141f":"code","ecc01d6b":"code","f14e005d":"code","b5fac5fe":"code","dfc74c80":"code","495fb505":"code","08f89969":"code","09a96a4b":"code","61f9cc37":"code","cb8f86f7":"code","e97007c8":"code","0c2adf80":"code","61110675":"code","1980b739":"code","6c049927":"code","408c8394":"code","3c1e382d":"code","08ae5b2b":"markdown","c5c009d0":"markdown","fe6c923f":"markdown","75e752cc":"markdown","fc0d5ceb":"markdown","22e59503":"markdown","c8772335":"markdown","d7ad9620":"markdown","c73ec7fe":"markdown"},"source":{"36517299":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom datetime import datetime\n","159913df":"from pylab import rcParams\nimport statsmodels.api as sm\nimport warnings\nimport itertools\nfrom statsmodels.tsa.ar_model import AR\nfrom statsmodels.tsa.arima_model import ARIMA","427a2213":"df = pd.read_csv(\"..\/input\/demand-forecasting-kernels-only\/train.csv\")\ndf.head()","12deedab":"df['date'] =  pd.to_datetime(df['date'])","494f31b8":"df = df.set_index('date')","09afa663":"df.head()","67b117e4":"df.sales.sum()","613f4099":"salesbymonth = df.sales.resample('M').sum()","ab3319df":"salesbymonth.head()","4e3265c8":"split = \"2017-01-01\"","e3eb4a0c":"salesbymonth_train= salesbymonth[:split]","d513ad61":"salesbymonth_train.head()","a2f54411":"salesbymonth_test= salesbymonth[split:]","ecb6947d":"salesbymonth_test_final=salesbymonth_test.copy() # This file is used to compare all the predections","621e1b64":"salesbymonth_test_final = pd.DataFrame(salesbymonth_test_final)","c13c4cb0":"salesbymonth_test_final.head()","a1f5dbbe":"salesbymonth_test_final.info()","aff3435b":"salesbymonth.sample(5)","52f864d3":"salesbyday = df.sales.resample('D').sum()","c9ba71c8":"salesbyday_train= salesbyday[:split]","9e41bf66":"salesbyday_test= salesbyday[split:]","a35e41dd":"salesbyday_test_final=salesbyday_test.copy() # This file is used to compare all the daily forecasts","2774d466":"salesbyday_test_final = pd.DataFrame(salesbyday_test_final)","f65678f0":"salesbyday_test_final.head()","5aabdcc5":"rcParams['figure.figsize'] = 18, 8","d2257178":"decomposition = sm.tsa.seasonal_decompose(salesbymonth_train, model='additive')\nfig = decomposition.plot()\nplt.show()","dc17aa77":"p = d = q = range(0, 2)","53fc0ce4":"pdqa = list(itertools.product(p, d, q))","61c452cd":"seasonal_pdq = [(x[0], x[1], x[2], 12) for x in list(itertools.product(p, d, q))]","692bb814":"for param in pdqa:\n    for param_seasonal in seasonal_pdq:\n        try:\n            mod = sm.tsa.statespace.SARIMAX(salesbymonth_train, order=param, seasonal_order=param_seasonal,enforce_stationarity=False,enforce_invertibility=False)                                \n            results = modl.fit()\n            print('ARIMA{}x{}12 - AIC:{}'.format(param, param_seasonal, results.aic))\n        except:\n            continue\n","90c210c2":"SARIMAMonth = sm.tsa.statespace.SARIMAX(salesbymonth, order=(1, 1, 1), seasonal_order=(1, 1, 1, 12) ,enforce_stationarity=False,enforce_invertibility=False)","81e4fa99":"SARIMA_results_month = SARIMAMonth.fit()","d0a2bf05":"print(SARIMA_results_month.summary().tables[1])","5590fc09":"SARIMA_results_month.plot_diagnostics(figsize=(16, 8))\nplt.show()","7650dccf":"#SARIMA_predict_month_1 = SARIMA_results_month.predict(start=1461,end=1825) # this is from 1 Jan 2017 to 31 Dec 2017","03d867f9":"#SARIMA_predict_month_1 = SARIMA_month_model.predict(start=48,end=60,rder=(1, 1, 1), seasonal_order=(1, 1, 1, 12) ,enforce_stationarity=False,enforce_invertibility=False) # this is from Jan 2017 to  Dec 2017\n\nSARIMA_predict_month_1 = SARIMA_results_month.predict(start=48,end=60) #,order=(1, 1, 1), seasonal_order=(1, 1, 1, 12) ,enforce_stationarity=False,enforce_invertibility=False) # this is from Jan 2017 to  Dec 2017\nprint(SARIMA_predict_month_1)","0eba753f":"salesbymonth_test_final['SeasonalARIMA'] = SARIMA_predict_month_1","17ec32fc":"salesbymonth_test_final.head()","043b7cf5":"RMSE_Month_Seasonal_ARIMA  = np.mean(np.sqrt((salesbymonth_test_final['SeasonalARIMA'] - salesbymonth_test_final['sales']) ** 2)) \nprint(RMSE_Month_Seasonal_ARIMA)","f7c01880":"model_ar_month = AR (salesbymonth_train)","8de996bb":"model_ar_month_fit = model_ar_month.fit()","92be8f21":"predictions_month_1 = model_ar_month_fit.predict(start=48,end=59)","75e43e61":"AR_month_predictions=pd.DataFrame(predictions_month_1, columns =['AR'])","963ff280":"AR_month_predictions.head()","25f97b9d":"salesbymonth_test.head(3)","f507cfe6":"plt.plot(salesbymonth_test)\nplt.plot(AR_month_predictions['AR'], color = 'red' )","0e3120c0":"salesbymonth_test_final['sales']","f3bf1872":"salesbymonth_test_final['AR'] = AR_month_predictions['AR']","eab44a25":"RMSE_Month_AR  = np.mean(np.sqrt((salesbymonth_test_final['AR'] - salesbymonth_test_final['sales']) ** 2)) \nprint(RMSE_Month_AR)","3afe95ed":"salesbymonth_test_final['AR_error'] = salesbymonth_test_final['AR'] - salesbymonth_test_final['sales']\nsalesbymonth_test_final['AR_error_percent'] = salesbymonth_test_final['AR_error'] \/ salesbymonth_test_final['sales']","79b376db":"salesbymonth_test_final.sample(10)","fe3cbee4":"salesbymonth_test_final.sum()","29657666":"salesbymonth_test_final.head()","70c4df69":"salesbymonth_train.head()","8b70936b":"decomposition_day = sm.tsa.seasonal_decompose(salesbyday_train, model='additive')","a54a9640":"fig = decomposition_day.plot()\nplt.show()","ca2d1d41":"p = d = q = range(0, 2)","a73d33c3":"pdqb = list(itertools.product(p, d, q))\nseasonal_pdq_day = [(x[0], x[1], x[2], 12) for x in list(itertools.product(p, d, q))]","5f6d2fc7":"for param in pdqb:\n    for param_seasonal_day in seasonal_pdq_day:\n        try:\n            mod = sm.tsa.statespace.SARIMAX(salesbyday_train, order=param, seasonal_order=param_seasonal,enforce_stationarity=False,enforce_invertibility=False)                                \n            results = mod.fit()\n            print('ARIMA{}x{}12 - AIC:{}'.format(param, param_seasonal_day, results.aic))\n        except:\n            continue","460703b2":"SARIMADay = sm.tsa.statespace.SARIMAX(salesbyday, order=(0, 1, 1), seasonal_order=(0, 1, 1, 12) ,enforce_stationarity=False,enforce_invertibility=False)","e559f61a":"SARIMA_results_day = SARIMADay.fit()","59f17532":"print(SARIMA_results_day.summary().tables[1])","4c5d2bb8":"SARIMA_results_day.plot_diagnostics(figsize=(16, 8))\nplt.show()","8b4b8bfc":"SARIMA_predict_day_1 = SARIMA_results_day.predict(start=1461,end=1825) # this is from 1 Jan 2017 to 31 Dec 2017\nprint(SARIMA_predict_day_1)\n","e6622c3d":"salesbyday_test_final['SeasonalARIMA'] = SARIMA_predict_day_1","c8645a6b":"RMSE_Day_SeasonalARIMA  = np.mean(np.sqrt((salesbyday_test_final['SeasonalARIMA'] - salesbyday_test_final['sales']) ** 2)) \nprint(RMSE_Day_SeasonalARIMA)","dc97aab8":"model_arima_month = ARIMA(salesbymonth_train, order = (7,1,0))","52af45d6":"salesbymonth_train.tail(12)","66716bb7":"model_arima_month_fit = model_arima_month.fit()","ac7d7318":"arima_predictions_month = model_arima_month_fit.forecast(steps=12)[0]","e212bc94":"print(arima_predictions_month)","5cd1d7a2":"ARIMA_month_predictions=pd.DataFrame(arima_predictions_month, columns =['ARIMA'])","406f1487":"ARIMA_month_predictions['ARIMA']","3571fd12":"salesbymonth_test_final =salesbymonth_test_final.reset_index()","27348d1e":"salesbymonth_test_final.head()","53dadd48":"salesbymonth_test_final['ARIMA'] =ARIMA_month_predictions['ARIMA']","91b913ab":"salesbymonth_test_final.tail(14)","44a79055":"plt.plot(salesbymonth_test_final['sales'],linestyle='dashed',linewidth=5)\nplt.plot(salesbymonth_test_final['ARIMA'], color = 'red' )","e52886d6":"RMSE_Month_ARIMA  = np.mean(np.sqrt((salesbymonth_test_final['ARIMA'] - salesbymonth_test_final['sales']) ** 2)) \nprint(RMSE_Month_ARIMA)","e632db3d":"p=d=q =range(0,8)","9b174900":"pdqmontha = list(itertools.product(p,d,q))","571fd9f7":"for param in pdqmontha:\n    try:\n        model_arima_month = ARIMA(salesbymonth_train, order = pdqmontha)\n        model_arima_month_fit = model_arima_month.fit()\n        print(param,model_arima_month_fit.aic)\n    except:\n        continue","ffeb40b1":"model_arima_day = ARIMA(salesbyday_train, order = (2,1,0))","be1d10b4":"model_arima_day_fit = model_arima_day.fit()","1bf5711d":"arima_predictions_day = model_arima_day_fit.forecast(steps=365)[0]","c4d77137":"ARIMA_day_predictions=pd.DataFrame(arima_predictions_day, columns =['ARIMA'])","068ade63":"ARIMA_day_predictions['ARIMA']","8fa364bd":"salesbyday_test_final =salesbyday_test_final.reset_index()","6e3d674d":"salesbyday_test_final['ARIMA'] = ARIMA_day_predictions['ARIMA']","5bb0a402":"salesbyday_test_final.head()","f6886ca2":"plt.plot(salesbyday_test_final['sales'],linestyle='dashed',linewidth=5)\nplt.plot(salesbyday_test_final['ARIMA'], color = 'red' )","1ed75d81":"p=d=q =range(0,5)","b080bbcf":"pdqday = list(itertools.product(p,d,q))","471357f1":"warnings.filterwarnings('ignore')\nfor param in pdqday:\n    try:\n        model_arima_month = ARIMA(salesbymonth_train, order = param)\n        model_arima_month_fit = model_arima_month.fit()\n        print(param,model_arima_month_fit.aic)\n    except:\n        continue","30630813":"ARIMA_day_predictions.tail()","c2630b61":"RMSE_Day_ARIMA  = np.mean(np.sqrt((salesbyday_test_final['ARIMA'] - salesbyday_test_final['sales']) ** 2))\nprint(RMSE_Day_ARIMA)","7f58b24e":"salesbyday_test_final.shape","496f33de":"model_ar_day = AR (salesbyday_train)","216db9cd":"model_ar_day_fit = model_ar_day.fit()","e604707a":"predictions_day_1 = model_ar_day_fit.predict(start=1461,end=1825)","cd0237cc":"predictions_day_1.head()","a7b1141f":"AR_day_predictions=pd.DataFrame(predictions_day_1, columns =['AR'])","ecc01d6b":"AR_day_predictions.shape","f14e005d":"AR_day_predictions.head()","b5fac5fe":"salesbyday_test_final['sales']","dfc74c80":"salesbyday_test_final.head()","495fb505":"AR_day_predictions.shape","08f89969":"salesbyday_test_final['AR'] = AR_day_predictions['AR']","09a96a4b":"salesbyday_test_final.head()","61f9cc37":"RMSE_Day_AR  = np.mean(np.sqrt((salesbyday_test_final['AR'] - salesbyday_test_final['sales']) ** 2))\nprint(RMSE_Day_AR)","cb8f86f7":"salesbyday_test_final['AR_error'] = salesbyday_test_final['AR'] - salesbyday_test_final['sales']","e97007c8":"salesbyday_test_final['AR_error_percent'] = salesbyday_test_final['AR_error'] \/ salesbyday_test_final['sales']","0c2adf80":"salesbyday_test_final.head(12)","61110675":"salesbyday_test_final.sum()","1980b739":"salesbymonth_test_final.sum()","6c049927":"salesbyday_test_final.reset_index()","408c8394":"plt.plot(salesbyday_test_final['sales'],linestyle='dashed',linewidth=5)\nplt.plot(salesbyday_test_final['ARIMA'], color = 'red' )","3c1e382d":"plt.plot(salesbymonth_test_final['sales'],linestyle='dashed',linewidth=5)\nplt.plot(salesbymonth_test_final['ARIMA'], color = 'red' )\nplt.plot(salesbymonth_test_final['AR'], color = 'blue' )\nplt.plot(salesbymonth_test_final['SeasonalARIMA'], color = 'orange' )","08ae5b2b":"# AR, ARIMA and Seasonal ARIMA by Day and by Month for Time Series Store forecast \n* By Alex Dance https:\/\/www.linkedin.com\/in\/alex-dance\/\n* This notebook is one of several notebooks for a project to improve store and product forecasts\n1.\tEDA \u2013 Exploratory Data Analysis \u2013 includes working with annual forecasts\n2.\tMain Modelling\n3.\tXG Boost modelling by Month\n4.\tWeighted average\n5.\tARIMA \u2013 Month and Other Modelling\n6.\tDeep Learning\n\n* There are a total of 6 models: AR, ARIMA and Seasonal Arima  -> By Day and By Month","c5c009d0":"# AR by Day ","fe6c923f":"# ARIMA per day - as per above","75e752cc":"# Seasonal ARIMA by Month","fc0d5ceb":"# Set Date as Index","22e59503":"# AR by Month","c8772335":"# Sales by Day","d7ad9620":"# SARIMA by day","c73ec7fe":"# ARIMA BY Month "}}