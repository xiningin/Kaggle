{"cell_type":{"fdd33b23":"code","e95f0e6a":"code","b276e37b":"code","ed8e19e9":"code","90ee4cde":"code","b0bc9b17":"code","ae978387":"code","438c74a2":"code","eab3aa6d":"code","cd270b44":"code","2cf853be":"code","fbcf50cc":"code","d9e4e5dc":"code","3e759486":"code","7ca9eacc":"code","ffbc4fa4":"code","6679a4ed":"code","0b553210":"code","2d7a41f5":"code","490da5f2":"code","c261a2e7":"code","40e99094":"code","df448ae7":"markdown","c43deebd":"markdown","a5e38060":"markdown","2d15eeac":"markdown","f983fabe":"markdown","278f309a":"markdown","90a45425":"markdown","aa4433c2":"markdown","227f60e5":"markdown","5c68b0e8":"markdown","67a6507a":"markdown","c0c97fae":"markdown","1570fcde":"markdown","d77285cb":"markdown"},"source":{"fdd33b23":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport math","e95f0e6a":"df = pd.read_csv('..\/input\/overwatch-league-with-odds\/owl-with-odds.csv')","b276e37b":"df.head(5)","ed8e19e9":"team_list = df['team_one'].unique()\n#Get a count of how many matches for each team\nteam_count = []\nfor t in team_list:\n    df_team_one = df[df['team_one'] == t]\n    df_team_two = df[df['team_two'] == t]\n    team_count.append(len(df_team_one) + len(df_team_two))\n\nprint(team_count)\nprint(team_list)","90ee4cde":"plt.figure(figsize=(8,8))\nplt.xticks(rotation=90)\nsns.set()\nsns.set(style=\"darkgrid\")\nax = sns.barplot(y=team_count, x=team_list)","b0bc9b17":"complete_over_under_list = []\n\nfor t in team_list:\n    over_under = 0\n    over_under_list = []\n    df_team_one = df[df['team_one'] == t]\n    df_team_two = df[df['team_two'] == t]\n    df_team = df_team_one.append(df_team_two)\n    id_list = df_team.id.unique()\n    for i in id_list:\n        winner = ((df_team[df_team['id'] == i]).winner).iloc[0]\n        if winner == t:\n            over_under = over_under + 1\n        else:\n            over_under = over_under - 1\n        over_under_list.append(over_under)\n    complete_over_under_list.append(over_under_list)","ae978387":"t1_over_under = complete_over_under_list[0]\n#print(t1_over_under)\n#print(team_list[0])","438c74a2":"\n#fig = plt.figure(figsize=(12, 50)\n\nfig, ax = plt.subplots(10, 2, figsize=(12,80))\nfor t_count in range(len(team_list)):\n    r = math.floor(t_count \/ 2) \n    c = t_count % 2\n    #print (r)\n    #print (c)\n    ax[r,c].plot(complete_over_under_list[t_count])\n    ax[r,c].set(xlabel='Match Number', ylabel='Wins over\/under even')\n    ax[r,c].set_title(team_list[t_count] + \" performance over time\", fontweight='bold')","eab3aa6d":"#Convert odds to integers and drop rows where we don't have information\nsubset = ['t1_odds', 't2_odds']\ndf.dropna(subset=subset ,inplace=True)\n\ndf['t1_odds'] = pd.to_numeric(df['t1_odds'], errors='coerce')\ndf['t2_odds'] = pd.to_numeric(df['t2_odds'], errors='coerce')\ndf.dropna(subset=subset ,inplace=True)","cd270b44":"df['t1_odds'].describe()","2cf853be":"df['t2_odds'].describe()","fbcf50cc":"odds_list = []\n\nid_list = df.id.unique()\nfor i in id_list:\n    odds_list.append(((df[df['id'] == i]).t1_odds).iloc[0])\n    odds_list.append(((df[df['id'] == i]).t2_odds).iloc[0])\n        \n","d9e4e5dc":"fig2, ax2 = plt.subplots()\nax2.set_title(\"Odds Histogram\", fontweight='bold')\nax2.set_xlabel(\"Odds\")\nax2.set_ylabel(\"Count\")\nax2.hist(odds_list)\n","3e759486":"fig1, ax1 = plt.subplots()\nax1.set_title('Odds Boxplot')\nax1.boxplot(odds_list)\nax1.set_ylabel('Odds')","7ca9eacc":"odds_list_trimmed = [x for x in odds_list if -2000 <= x <= 2000]","ffbc4fa4":"print(len(odds_list_trimmed))\nprint(len(odds_list))","6679a4ed":"fig3, ax3 = plt.subplots(figsize=(12,10))\nplt.xticks(rotation=90)\nax3.set_title(\"Odds (Trimmed) Histogram\", fontweight='bold')\nax3.set_xlabel(\"Odds\")\nax3.set_ylabel(\"Count\")\nax3.hist(odds_list_trimmed, 40)\n","0b553210":"fig4, ax4 = plt.subplots()\nax4.set_title('Odds (Trimmed) Boxplot')\nax4.boxplot(odds_list_trimmed)\nax4.set_ylabel('Odds')","2d7a41f5":"odds_labels = [\n    \"Under -2000\",\n    \"-1000 -> -1999\",\n    \"-750 -> -999\",\n    \"-500 -> -749\",\n    \"-450 -> -499\",\n    \"-400 -> -449\",\n    \"-350 -> -399\",\n    \"-300 -> -349\",\n    \"-250 -> -299\",\n    \"-200 -> -249\",\n    \"-150 -> -199\",\n    \"-100 -> -149\",\n    \"+100 -> +149\",\n    \"+150 -> +199\",\n    \"+200 -> +249\",\n    \"+250 -> +299\",\n    \"+300 -> +349\",\n    \"+350 -> +399\",\n    \"+400 -> +449\",\n    \"+450 -> +499\",\n    \"+500 -> +749\",\n    \"+750 -> +999\",\n    \"+1000 -> +1999\",    \n    \n    \n]","490da5f2":"def return_win_percentage(f_df, f_min, f_max):\n    winners = 0\n    losers = 0\n    #Filter the dataframe\n    f_df_orig = f_df.copy()\n    f_df = (((f_df[f_df['t1_odds'] >= f_min])))\n    f_df = (((f_df[f_df['t1_odds'] < f_max])))\n    f_df_2 = (((f_df_orig[f_df_orig['t2_odds'] >= f_min])))\n    f_df_2 = (((f_df_2[f_df_2['t2_odds'] < f_max])))\n    f_df = f_df.append(f_df_2)\n    \n    id_list = f_df.id.unique()\n    for i in id_list:\n        if (((f_df[f_df['id'] == i]).t1_odds).iloc[0]) >= f_min:\n            if (((f_df[f_df['id'] == i]).t1_odds).iloc[0]) < f_max:\n                if (((f_df[f_df['id'] == i]).team_one).iloc[0]) == (((f_df[f_df['id'] == i]).winner).iloc[0]):\n                    winners = winners + 1\n                else:\n                    losers = losers + 1\n\n        if (((f_df[f_df['id'] == i]).t2_odds).iloc[0]) >= f_min:\n            if (((f_df[f_df['id'] == i]).t2_odds).iloc[0]) < f_max:\n                if (((f_df[f_df['id'] == i]).team_two).iloc[0]) == (((f_df[f_df['id'] == i]).winner).iloc[0]):\n                    winners = winners + 1\n                else:\n                    losers = losers + 1\n\n                    \n    #print(winners)\n    #print(losers)\n    #print(len(id_list))\n        \n    return (100*(winners\/(winners+losers)))\n#    print(len(f_df))\n#    print(len(f_df_2))\n#    working_df = f_df.append(f_df_2)\n#    print(len(working_df))\n#    display(working_df)","c261a2e7":"win_percentages = []\n\nwin_percentages.append(return_win_percentage(df, -100000, -2000))\nwin_percentages.append(return_win_percentage(df, -1999, -999))\nwin_percentages.append(return_win_percentage(df, -999, -749))\nwin_percentages.append(return_win_percentage(df, -749, -499))\nwin_percentages.append(return_win_percentage(df, -499, -449))\nwin_percentages.append(return_win_percentage(df, -449, -399))\nwin_percentages.append(return_win_percentage(df, -399, -349))\nwin_percentages.append(return_win_percentage(df, -349, -299))\nwin_percentages.append(return_win_percentage(df, -299, -249))\nwin_percentages.append(return_win_percentage(df, -249, -199))\nwin_percentages.append(return_win_percentage(df, -199, -149))\nwin_percentages.append(return_win_percentage(df, -149, -99))\nwin_percentages.append(return_win_percentage(df, 100, 149))\nwin_percentages.append(return_win_percentage(df, 150, 199))\nwin_percentages.append(return_win_percentage(df, 200, 249))\nwin_percentages.append(return_win_percentage(df, 250, 299))\nwin_percentages.append(return_win_percentage(df, 300, 349))\nwin_percentages.append(return_win_percentage(df, 350, 399))\nwin_percentages.append(return_win_percentage(df, 400, 449))\nwin_percentages.append(return_win_percentage(df, 450, 499))\nwin_percentages.append(return_win_percentage(df, 500, 549))\nwin_percentages.append(return_win_percentage(df, 750, 999))\nwin_percentages.append(return_win_percentage(df, 1000, 1999))\n\n\n","40e99094":"fig5, ax5 = plt.subplots(figsize=(12,10))\nplt.xticks(rotation=90)\nax5.set_title('Win Percentage Base on Odds')\nax5.plot(odds_labels, win_percentages, marker='o')\nax5.set_ylabel('Odds')","df448ae7":"### Initial Visualization for the Overwatch League (OWL) Dataset","c43deebd":"### Number of Matches Comparision[](http:\/\/)","a5e38060":"#### Outliers make the different visualizations very difficult to quickly analyze.","2d15eeac":"### How Much Do Odds Matter?","f983fabe":"#### How do odds relate to the winner?","278f309a":"#### Take a quick peek","90a45425":"#### Let's remove the outliers and look again","aa4433c2":"#### Here are line graphs showing the different teams' performances. For every win they are given a point.  For every loss they lose one.  It is interesting to look at the patterns of the different teams. Some teams, such as Seoul have periods of success and failure.  While other teams only know a history of victory or defeat.","227f60e5":"#### It is interesting to note that small underdogs (+100 -> +149) win more often than small favorites (-100 -> -149)","5c68b0e8":"#### Let's explore the odds features","67a6507a":"### Team Pattern of Wins \/ Losses","c0c97fae":"#### It turns out that 33 cells or around 3% of the data are the troublemakers.  Removing these should not fundamentally change the data.","1570fcde":"#### Load the Data","d77285cb":"#### Combine the odds into a single list for exploration"}}