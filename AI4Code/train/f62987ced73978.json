{"cell_type":{"3162b4f8":"code","5e3b22c3":"code","6eb736c4":"code","3dd281b6":"code","d9caa3fd":"code","4df2479e":"code","d33b57d4":"code","b0b1fd36":"code","f296527f":"code","b5bacf93":"code","8bc9878d":"code","85062ebd":"code","5ba9bd84":"code","16c2b30b":"code","41e81f9a":"code","8ff60c2a":"code","55dd156c":"code","f22fa4c9":"code","8b8587d8":"code","f38d8c1d":"code","b95170a5":"code","39d0f8aa":"code","4e14d295":"code","f5103040":"code","91f4167e":"code","b963457d":"code","e514a503":"code","65efba81":"code","3d308fc1":"code","fa8d2684":"code","93fcf5db":"code","98535fbf":"code","8ced2cf5":"code","ac3ab702":"code","a97adb84":"code","6654a24c":"code","14172922":"code","3133b9af":"code","467fec9c":"code","04c6fdab":"code","f4b7d295":"code","246dc156":"code","761c4c89":"code","f7879152":"code","aa80999a":"code","b5706377":"code","e7ceb1a7":"code","60535370":"code","94c12444":"code","8422172f":"code","247ca895":"code","0f443d45":"code","049fd35a":"code","cdc0883d":"code","31c4a59b":"code","090dbd58":"code","e5aa2e80":"code","623561b2":"code","de69345e":"code","040e7b1e":"markdown","75170e5b":"markdown","eb4e34d3":"markdown","9052ef38":"markdown","a845eab8":"markdown","165bf6bc":"markdown","cb0a6a90":"markdown","28721327":"markdown","30ee0c1a":"markdown","aaefd71e":"markdown","c983cd9b":"markdown","048b2510":"markdown","fa26bf4e":"markdown","ed40da61":"markdown","6d38531d":"markdown","123c59e7":"markdown","4942dee9":"markdown","9e1420df":"markdown","c09a3f08":"markdown","d82b1b39":"markdown","82fda193":"markdown","aa311459":"markdown","dcdb5cb7":"markdown","48c92a3a":"markdown","a14a9a3c":"markdown","0b697a3a":"markdown","21a4a915":"markdown","f1740ecf":"markdown","101f9511":"markdown","806542a8":"markdown","613e11f4":"markdown","0a8e54b7":"markdown"},"source":{"3162b4f8":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nfrom sklearn.preprocessing import RobustScaler,StandardScaler,LabelEncoder\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom sklearn.linear_model import Perceptron,SGDClassifier\nfrom catboost import CatBoostClassifier\nfrom sklearn.ensemble import RandomForestClassifier,GradientBoostingClassifier\nfrom lightgbm import LGBMClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.metrics import accuracy_score,f1_score,roc_auc_score\nfrom sklearn.model_selection import cross_val_score,KFold,train_test_split,StratifiedKFold\nsns.set(color_codes=True)\n%matplotlib inline","5e3b22c3":"df = pd.read_csv('..\/input\/hr-analytics-job-change-of-data-scientists\/aug_train.csv')\ntest = pd.read_csv('..\/input\/hr-analytics-job-change-of-data-scientists\/aug_test.csv')","6eb736c4":"df.head()","3dd281b6":"test.head()","d9caa3fd":"df.info()","4df2479e":"df.describe().T","d33b57d4":"df.shape,test.shape","b0b1fd36":"for i in df.columns:\n    print('Unique Values in {} is {}'.format(i,len(df[i].unique())))","f296527f":"df.isnull().sum()","b5bacf93":"test.isnull().sum()","8bc9878d":"df.drop_duplicates(inplace=True)","85062ebd":"df.shape","5ba9bd84":"df.groupby('gender')['target'].value_counts()","16c2b30b":"px.pie(data_frame=df,names = 'target',title='Visualising Targets')","41e81f9a":"sns.countplot(data=df,x=df.target)","8ff60c2a":"px.histogram(data_frame=df,x=df.gender,color='target')","55dd156c":"px.histogram(data_frame=df,x=df.relevent_experience,color='target')","f22fa4c9":"plt.pie(data=df,x=df.relevent_experience.value_counts(),labels=['Has relevent experience','No relevent experience'],shadow=True,\n       autopct='%1.1f%%');","8b8587d8":"px.histogram(data_frame=df,x=df.enrolled_university,color_discrete_sequence=['indianred'])","f38d8c1d":"px.histogram(data_frame=df,x=df.education_level,color=df.relevent_experience)","b95170a5":"px.histogram(data_frame=df,x=df.experience,color='target')","39d0f8aa":"px.histogram(data_frame=df,x=df.company_type)","4e14d295":"px.histogram(data_frame=df,x=df.company_size)","f5103040":"px.histogram(data_frame=df,x=df.major_discipline)","91f4167e":"sns.distplot(df.training_hours);","b963457d":"px.box(data_frame=df,x=df.training_hours,orientation='h')","e514a503":"lb = LabelEncoder()","65efba81":"df.city = df.city.apply(lambda x: int(x.split('_')[1]))\ntest.city = test.city.apply(lambda x: int(x.split('_')[1]))","3d308fc1":"df.gender.isnull().sum()","fa8d2684":"df.gender = df.gender.fillna('Male')","93fcf5db":"df.isnull().sum()","98535fbf":"df.enrolled_university = df.enrolled_university.fillna(df.enrolled_university.mode()[0])\ndf.education_level = df.education_level.fillna(method='ffill')\ndf.major_discipline = df.major_discipline.fillna(df.major_discipline.mode()[0])\ndf.experience = df.experience.fillna(method='ffill')\ndf.company_size = df.company_size.fillna(method='ffill')\ndf.company_type = df.company_type.fillna(df.company_type.mode()[0])\ndf.last_new_job = df.last_new_job.fillna(method='bfill')","8ced2cf5":"df.dropna(inplace=True,axis=0)","ac3ab702":"test.gender = test.gender.fillna('Male')\ntest.enrolled_university = test.enrolled_university.fillna(test.enrolled_university.mode()[0])\ntest.education_level = test.education_level.fillna(method='ffill')\ntest.major_discipline = test.major_discipline.fillna(test.major_discipline.mode()[0])\ntest.experience = test.experience.fillna(method='ffill')\ntest.company_size = test.company_size.fillna(method='ffill')\ntest.company_type = test.company_type.fillna(test.company_type.mode()[0])\ntest.last_new_job = test.last_new_job.fillna(method='bfill')","a97adb84":"df.isnull().sum()","6654a24c":"test.isnull().sum()","14172922":"df.gender = lb.fit_transform(df['gender'])\ntest.gender = lb.fit_transform(test['gender'])","3133b9af":"df.relevent_experience = lb.fit_transform(df['relevent_experience'])\ntest.relevent_experience = lb.fit_transform(test['relevent_experience'])","467fec9c":"df.enrolled_university = lb.fit_transform(df['enrolled_university'])\ntest.enrolled_university = lb.fit_transform(test['enrolled_university'])","04c6fdab":"df.head()","f4b7d295":"df = pd.get_dummies(df,columns=['gender','enrolled_university','education_level','major_discipline','company_type'],drop_first=True)","246dc156":"test = pd.get_dummies(test,columns=['gender','enrolled_university','education_level','major_discipline','company_type'],drop_first=True)","761c4c89":"experience = {'<1':0, '1':1, '2':2, '3':3, '4':4, '5':5, '6':6, '7':7, '8':8, '9':9, '10':10,\n                      '11':11, '12':12, '13':13, '14':14, '15':15, '16':16, '17':17, '18':18, '19':19, '20':20, '>20':21}\n\ndf.experience = df.experience.map(experience)\ntest.experience = test.experience.map(experience)","f7879152":"company_size = {'<10':0, '10\/49':1, '50-99':2, '100-500':3, '500-999':4, '1000-4999':5, '5000-9999':6, '10000+':7}\ndf.company_size = df.company_size.map(company_size)\ntest.company_size = test.company_size.map(company_size)","aa80999a":"last_new_job = {'never':0, '1':1, '2':2, '3':3, '4':4, '>4':5}\ndf.last_new_job = df.last_new_job.map(last_new_job)\ntest.last_new_job = test.last_new_job.map(last_new_job)","b5706377":"X = df.drop('target',axis=1)\nY = df['target']\nX_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size=0.2,random_state=42,stratify = df.target)","e7ceb1a7":"X_train.shape,X_test.shape,Y_train.shape,Y_test.shape","60535370":"rs = RobustScaler(\nwith_centering=True,\nwith_scaling=True,\nquantile_range=(25.0, 75.0),\ncopy=True,\n)\nX_train = rs.fit_transform(X_train)\nX_test = rs.transform(X_test)","94c12444":"sc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","8422172f":"test = rs.transform(test)\ntest = sc.transform(test)","247ca895":"rf = RandomForestClassifier(n_estimators=300)\nrf.fit(X_train,Y_train)\npred_rf = rf.predict(X_test)\nroc_auc_score(Y_test,pred_rf)","0f443d45":"sgd = SGDClassifier()\nsgd.fit(X_train,Y_train)\npred_sgd = sgd.predict(X_test)\nroc_auc_score(Y_test,pred_sgd)","049fd35a":"xg = XGBClassifier(learning_rate =0.1, n_estimators=494, max_depth=5,subsample = 0.70, verbosity = 0,\n                                            scale_pos_weight = 2.5,updater =\"grow_histmaker\",base_score  = 0.2)\nxg.fit(X_train,Y_train)\npred_xg = xg.predict(X_test)\nroc_auc_score(Y_test,pred_xg)","cdc0883d":"lgb = LGBMClassifier(subsample_freq = 2, objective =\"binary\",importance_type = \"gain\",\n                                             verbosity = -1, max_bin = 60,num_leaves = 300,\n                                             boosting_type = 'dart',learning_rate=0.15, \n                                             n_estimators=494, max_depth=5, scale_pos_weight=2.5)\nlgb.fit(X_train,Y_train)\npred_lgb = lgb.predict(X_test)\nroc_auc_score(Y_test,pred_lgb)","31c4a59b":"cat = CatBoostClassifier(learning_rate=0.15, n_estimators=494, subsample=0.085, \n                                                 max_depth=5, scale_pos_weight=2.5)\ncat.fit(X_train,Y_train)\npred_cat = cat.predict(X_test)\nroc_auc_score(Y_test,pred_cat)","090dbd58":"test_final = cat.predict_proba(test)","e5aa2e80":"sample = pd.read_csv('..\/input\/hr-analytics-job-change-of-data-scientists\/sample_submission.csv')\nsample.head(1)","623561b2":"sample['target'] = test_final","de69345e":"sample.to_csv('submit.csv',index= False)","040e7b1e":"## Describing a Data","75170e5b":"## Unique Values","eb4e34d3":"## Model Building","9052ef38":"## Importing Libraries","a845eab8":"**Training Hour Distribution**","165bf6bc":"**Vieiwng Training Dataset**","cb0a6a90":"**From the Above Two Plots We can see that data is imbalance and there are approx 75% number of employees which are not looking for job change.**\n\nThis Probelm can be solve using Over-Sampling or Under-Sampling.\nI Highly recommend to look at this blog.\n\n[Sampling](https:\/\/www.analyticsvidhya.com\/blog\/2017\/03\/imbalanced-data-classification\/)","28721327":"## Scaling The Data\n\n**Scaling**\n\n1. StandardScaler follows Standard Normal Distribution (SND). Therefore, it makes mean = 0 and scales the data to unit variance.\n\n2. MinMaxScaler scales all the data features in the range [0, 1] or else in the range [-1, 1] if there are negative values in the dataset. This scaling compresses all the inliers in the narrow range [0, 0.005].\nIn the presence of outliers, StandardScaler does not guarantee balanced feature scales, due to the influence of the outliers while computing the empirical mean and standard deviation. This leads to the shrinkage in the range of the feature values.\n\n3. By using RobustScaler(), we can remove the outliers and then use either StandardScaler or MinMaxScaler for preprocessing the dataset.\n\n***How RobustScaler works:***\n\n```\nsklearn.preprocessing.RobustScaler(\nwith_centering=True,\nwith_scaling=True,\nquantile_range=(25.0, 75.0),\ncopy=True,\n)```\n\nIt scales features using statistics that are robust to outliers. This method removes the median and scales the data in the range between 1st quartile and 3rd quartile. i.e., in between 25th quantile and 75th quantile range. This range is also called an Interquartile range.\n\nThe median and the interquartile range are then stored so that it could be used upon future data using the transform method. If outliers are present in the dataset, then the median and the interquartile range provide better results and outperform the sample mean and variance.\n\n\n","30ee0c1a":"**we will handle missing values later after preprocessing of data**","aaefd71e":"# Data Visualization","c983cd9b":"## Splitting The DataSet","048b2510":"## Looking Missing Values","fa26bf4e":"we can say that the company is gender bias as there are more number of Male as compared to other genders.This plot also tell us that percentage of males that are more for **Not Looking for Job Change**","ed40da61":"The are more Number of Males which are not Looking for Job Change.","6d38531d":"**Analysing Target on the Bases of Gender**","123c59e7":"# If You Like This Kernel Then Upvote\ud83d\ude0a\n\n## Drop your suggestions in the comment box Related to Roc Score or EDA","4942dee9":"therefore now there is no missing values in training and test dataset","9e1420df":"## Feature Engineering","c09a3f08":"## Dataset Attributes\n\n* enrollee_id : Unique ID for enrollee\n* city: City code\n* citydevelopmentindex: Developement index of the city (scaled)\n* gender: Gender of enrolee\n* relevent_experience: Relevent experience of enrolee\n* enrolled_university: Type of University course enrolled if any\n* education_level: Education level of enrolee\n* major_discipline :Education major discipline of enrolee\n* experience: Enrolee total experience in years\n* company_size: No of employees in current employer's company\n* company_type : Type of current employer\n* lastnewjob: Difference in years between previous job and current job\n* training_hours: training hours completed\n* target: 0 \u2013 Not looking for job change, 1 \u2013 Looking for a job change","d82b1b39":"**To Avoid From Dummy Variable Trap we will use ```pd.get_dummies```**\n\n### What is Dummy Variable Trap?\n\nThe Dummy variable trap is a scenario where there are attributes which are highly correlated (Multicollinear) and one variable predicts the value of others. When we use one hot encoding for handling the categorical data, then one dummy variable (attribute) can be predicted with the help of other dummy variables. Hence, one dummy variable is highly correlated with other dummy variables. Using all dummy variables in models lead to dummy variable trap. So, the models should be designed excluding one dummy variable.\n\n**For Example \u2013**\n\nLet\u2019s consider the case of gender having two values male (0 or 1) and female (1 or 0). Including both the dummy variable can cause redundancy because if a person is not male in such case that person is a female, hence, we don\u2019t need to use both the variables in models. This will protect us from dummy variable trap.","82fda193":"## Submission","aa311459":"Training Hour Column is Right Skwed and have **Outliers**.","dcdb5cb7":"**Gender**","48c92a3a":"72% employees has relevent experience and around 11k employees are not looking for job change.","a14a9a3c":"## Removing Duplicate values","0b697a3a":"## Shape of Dataset","21a4a915":"More number of Graduates with Relevent Experience.\nwe can say that Company don't give more Chance to Freshers.","f1740ecf":"**Education Level**","101f9511":"There is no rows having same values","806542a8":"**Relevent Experience**","613e11f4":"**Enrolled University**","0a8e54b7":"**Vieiwng Test Dataset**"}}