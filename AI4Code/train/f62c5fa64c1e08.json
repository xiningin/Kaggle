{"cell_type":{"6a4d8625":"code","401c627b":"code","0446137c":"code","53cc4616":"code","38346b29":"code","74ab50b5":"code","855b9b18":"code","833f0c9b":"code","a993b8c1":"code","3d0d9b4f":"code","0f32e531":"markdown","11d1cb5c":"markdown","b75efa74":"markdown","92eb50c4":"markdown"},"source":{"6a4d8625":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # Data Visulization library\nimport seaborn as sns #Data Visulizationn library\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","401c627b":"# Loading the Dataset\ndata = pd.read_csv('\/kaggle\/input\/salary-data\/DataSalary.csv')\ndata.head()","0446137c":"# Checking datasets\ndata.describe(include='all')","53cc4616":"fig,ax = plt.subplots(figsize=(10,3))\nsns.barplot(data['YearsExperience'],data['Salary'])","38346b29":"x1 = data['YearsExperience']  #Independent Variables\ny = data['Salary'] #Dependent Variables","74ab50b5":"sns.scatterplot(x1,y)","855b9b18":"# Regression Model\nimport statsmodels.api as sm\nx = sm.add_constant(x1)\nresults = sm.OLS(y,x).fit()\nresults.summary()","833f0c9b":"yhat = 25790+x1*9449.9623\nplt.scatter(x1,y)\nfig = plt.plot(x1,yhat,c='red',label='linear regression')\nplt.xlabel('Year of Experience',fontsize=15)\nplt.ylabel('Salary',fontsize=15)","a993b8c1":"new_data = pd.DataFrame({'const':1,\n                        'Year of Experience':[1.2,5.6,12.3,7.2]})\n#new_data\nnew_data['Predicted Salary'] = results.predict(new_data)","3d0d9b4f":"new_data.drop('const',axis=1)","0f32e531":"## Predicting Salary","11d1cb5c":"Here, we get to know that with **Year of Experience** increase the **salary of the employees** also increases","b75efa74":"#### It can be seen that both data is correleated to each other","92eb50c4":"### Drawing the Regression Line"}}