{"cell_type":{"5ca63764":"code","97dc40b5":"code","bbf58434":"code","ff58b83f":"code","620edfb6":"code","5de86965":"code","f4202b25":"code","0b5bbdc4":"code","f7701015":"code","83eb436e":"code","ce68b491":"code","97d75641":"code","5b0bf73d":"code","89bec686":"code","259576df":"code","6944aeb5":"code","b319ab1a":"code","07adb459":"code","d654b9e7":"code","c0f63c89":"code","e55a73e9":"code","1edc55ba":"code","2a08ee04":"code","e5c7708f":"code","ed20dcea":"code","9f4dcfeb":"code","98ca7ebd":"code","b602d9e9":"code","1c05739a":"code","894e1428":"code","0c7ae4f3":"code","16bed9f3":"code","0ead28c9":"code","34de190b":"code","096ba8a5":"code","8453a8ab":"code","3f032708":"code","e8f49489":"code","cfa49f08":"code","3edf9973":"code","f4815b16":"code","57fcb945":"markdown","f1d0af73":"markdown","bd833740":"markdown","75899ec1":"markdown","318d98a9":"markdown","6746abdd":"markdown","42d21754":"markdown","5fbb6ed6":"markdown","323beea5":"markdown","d194df19":"markdown","086d7043":"markdown","3762e84b":"markdown","298e6c18":"markdown","d90c6278":"markdown","daa3c253":"markdown","463cca27":"markdown","90f5670f":"markdown","6af621f0":"markdown","11512314":"markdown","8c863b49":"markdown","a84e2f32":"markdown","99e39aa5":"markdown","7bf6be2d":"markdown","8593b510":"markdown","676ca71c":"markdown","6de3dda9":"markdown","1f9df16f":"markdown","50f22fad":"markdown","9a37052b":"markdown","8a76b16f":"markdown","dd702665":"markdown","fb8b0b73":"markdown","dd0ab0b5":"markdown","d626883e":"markdown","38aa8da7":"markdown","437b4df1":"markdown","65db951c":"markdown"},"source":{"5ca63764":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","97dc40b5":"import matplotlib.pyplot as plt\nimport seaborn as sns","bbf58434":"df_us = pd.read_csv(os.path.join(dirname, filename))","ff58b83f":"df_us","620edfb6":"def basic_info(data):\n    print(data.shape)\n    print(data.size)\n    print(data.info())\n    cat, num = list(), list()\n    for i in data.columns:\n        if data[i].dtype == object:\n            cat.append(i)\n        else:\n            num.append(i)\n    print(cat, \"\\n\")\n    print(num)\n    return cat, num","5de86965":"categorical, numerical = basic_info(df_us)","f4202b25":"df_us2 = df_us.sort_values(by = ['id'])","0b5bbdc4":"df_us2","f7701015":"df_us2['date'] = pd.to_datetime(df_us2['date'])","83eb436e":"plt.figure(figsize=(20,8))\nsns.scatterplot(df_us2['id'][:250], df_us2['age'][:250], hue= df_us2['gender'])","ce68b491":"df_us2.isnull().sum()","97d75641":"df_us2['manner_of_death'].value_counts()","5b0bf73d":"labels = df_us2['manner_of_death'].value_counts().index.tolist()\nsizes = df_us2['manner_of_death'].value_counts()\nexplot = (0, 0.5)\nfig, ax = plt.subplots()\nax.pie(sizes, labels = labels, explode = explot, autopct = \"%1.1f%%\", shadow=True, startangle=90)\nax.axis('equal')\nplt.show()","89bec686":"df_us2['armed'].value_counts()","259576df":"plt.figure(figsize=(50,9))\nsns.countplot(df_us2['armed'])\nplt.xticks(rotation = -45)\nplt.show()","6944aeb5":"plt.figure(figsize=(10,8))\nplt.hist(df_us2['age'], edgecolor = \"#7FFF00\")\nplt.show()","b319ab1a":"df_us2['gender'].value_counts()","07adb459":"labels = df_us2['gender'].value_counts().index.tolist()\nsizes = df_us2['gender'].value_counts()\nexplot = (0, 0.5)\nfig, ax = plt.subplots()\nax.pie(sizes, labels = labels, explode = explot, autopct = \"%1.1f%%\", shadow=True, startangle=90)\nax.axis('equal')\nplt.show()","d654b9e7":"sns.countplot(df_us2['gender'], hue=df_us2['manner_of_death'])","c0f63c89":"df_us2['race'].value_counts()","e55a73e9":"fig, ax = plt.subplots(figsize=(20,10))\ngraph = sns.countplot(ax = ax, x = 'race', data = df_us2)\ni=0\nfor p in graph.patches:\n    print(p)\n    height = p.get_height()\n    graph.text(p.get_x()+p.get_width()\/2., height + 0.1,\n        df_us2['race'].value_counts()[i],ha=\"center\")\n    i += 1","1edc55ba":"fig, ax = plt.subplots(figsize = (10,8))\n#sns.countplot(df_us2['race'], hue= df_us2['gender'])\ngraph = sns.countplot(df_us2['race'], hue = df_us2['gender'])\nfor p in graph.patches:\n    for p in graph.patches:\n        height = p.get_height()\n        graph.text(p.get_x()+p.get_width()\/2., height + 0.1,height ,ha=\"center\")","2a08ee04":"plt.figure(figsize=(10,8))\ngraph = sns.countplot(df_us2['race'], hue = df_us2['manner_of_death'])\nfor p in graph.patches:\n    for p in graph.patches:\n        height = p.get_height()\n        graph.text(p.get_x()+p.get_width()\/2., height + 0.3,height ,ha=\"center\")","e5c7708f":"df_us2['state'].value_counts()","ed20dcea":"plt.figure(figsize=(40,9))\nsns.countplot(df_us2['state'])\nplt.xticks(rotation = -45)\nplt.show()","9f4dcfeb":"df_us2['signs_of_mental_illness'].value_counts()","98ca7ebd":"labels = df_us2['signs_of_mental_illness'].value_counts().index.tolist()\nsizes = df_us2['signs_of_mental_illness'].value_counts()\nexplot = (0, 0.10)\nfig, ax = plt.subplots()\nax.pie(sizes, labels = labels, explode = explot, autopct = \"%1.1f%%\", shadow=True, startangle=90)\nax.axis('equal')\nplt.show()","b602d9e9":"plt.figure(figsize=(10,8))\ngraph = sns.countplot(df_us2['signs_of_mental_illness'], hue = df_us2['gender'])\nfor p in graph.patches:\n    for p in graph.patches:\n        height = p.get_height()\n        graph.text(p.get_x()+p.get_width()\/2., height + 0.3,height ,ha=\"center\")","1c05739a":"plt.figure(figsize=(10,7))\ngraph = sns.countplot(df_us2['signs_of_mental_illness'], hue = df_us2['race'])\nfor p in graph.patches:\n    for p in graph.patches:\n        height = p.get_height()\n        graph.text(p.get_x()+p.get_width()\/2., height + 0.3,height ,ha=\"center\")","894e1428":"df_us2['threat_level'].value_counts()","0c7ae4f3":"fig, ax = plt.subplots(figsize=(10,6))\ncountplot = sns.countplot(ax = ax, x = 'threat_level', data = df_us2)\ni = 0\nfor p in countplot.patches:\n    height = p.get_height()\n    countplot.text(p.get_x() + p.get_width()\/2.0, height + 0.1, height, ha = 'center')\n    i +=1","16bed9f3":"plt.figure(figsize=(10,8))\ncountplot = sns.countplot(df_us2['threat_level'], hue = df_us2['gender'])\ni = 0\nfor p in countplot.patches:\n    height = p.get_height()\n    countplot.text(p.get_x() + p.get_width()\/2.0, height + 0.1, height, ha = 'center')\n    i +=1","0ead28c9":"df_us2['flee'].value_counts()","34de190b":"labels = df_us2['flee'].value_counts().index.tolist()\nsizes = df_us2['flee'].value_counts()\n\nfig, ax=plt.subplots()\npatches, texts = ax.pie(sizes,shadow=True, startangle=90)\n\nlabels = ['{0} - {1:1.2f}'.format(i,j) for i, j in zip(labels,sizes)]\nsort_legend = False\n\nplt.legend(patches, labels, loc= 'best', bbox_to_anchor=(-0.1, 1.), fontsize = 10)\nax.axis('equal')\nfig = plt.gcf()\nplt.show()","096ba8a5":"plt.figure(figsize=(10,8))\ncountplot = sns.countplot(df_us2['flee'], hue = df_us2['gender'])\ni = 0\nfor p in countplot.patches:\n    height = p.get_height()\n    countplot.text(p.get_x() + p.get_width()\/2.0, height + 0.1, height, ha = 'center')\n    i +=1","8453a8ab":"df_us2['body_camera'].value_counts()","3f032708":"labels = df_us2['body_camera'].value_counts().index.tolist()\nseries = df_us2['body_camera'].value_counts()\n\nplt.pie(series, labels = labels, autopct = \"%1.1f%%\", shadow=True, startangle=90)\nplt.axis('equal')\nplt.show()","e8f49489":"df_us2['arms_category'].value_counts()","cfa49f08":"plt.figure(figsize=(10,8))\ncountplot = sns.countplot(df_us2['arms_category'])\ni = 0\nfor p in countplot.patches:\n    height = p.get_height()\n    countplot.text(p.get_x() + p.get_width()\/2.0, height + 0.1, height, ha = 'center')\n    i +=1\nplt.xticks(rotation = -90)\nplt.show()","3edf9973":"plt.figure(figsize=(15, 9))\ncountplot = sns.countplot(df_us2['arms_category'], hue = df_us2['gender'])\ni = 0\nfor p in countplot.patches:\n    height = p.get_height()\n    countplot.text(p.get_x() + p.get_width()\/2.0, height + 0.1, height, ha = 'center')\n    i +=1\nplt.xticks(rotation = -90)\nplt.legend(loc = 'upper right')\nplt.show()","f4815b16":"plt.figure(figsize=(30, 9))\ncountplot = sns.countplot(df_us2['arms_category'], hue = df_us2['race'])\ni = 0\nfor p in countplot.patches:\n    height = p.get_height()\n    countplot.text(p.get_x() + p.get_width()\/2.0, height + 0.1, height, ha = 'center')\n    i +=1\nplt.xticks(rotation = -90)\nplt.legend(loc = 'upper right')\nplt.show()","57fcb945":"### gender","f1d0af73":"We see that 77.5% of the cases didn't show signs of any mental illness","bd833740":"#### So this is the end of this notebook. Do give an upvote, if you find my notebook informative and good. Please leave a comment if have any sort of question or have pointed out anything wrong. I will gladly work on it in this notebook as well take care of that in upcoming notebooks.","75899ec1":"### state","318d98a9":"#### Lets see this in the form of a pie chart","6746abdd":"Lets see this in the form of a pie chart to understand more easily","42d21754":"### age","5fbb6ed6":"### signs_of_mental_illness","323beea5":"We see that mostly men were the one with any sort of weapon. And in weapon, the mostly equipped is gun","d194df19":"We See that 95% of the population was shot directly","086d7043":"We see that 88.2% of the police people present didn't wear body camera at the time of incident","3762e84b":"### flee","298e6c18":"#### lets see this in a countplot projection","d90c6278":"We can spot that most of the death cases from the state CA","daa3c253":"# Basic Information","463cca27":"#### Lets see the signs_of_mental_illness wrt race","90f5670f":"We can see that most of the people used Guns","6af621f0":"### manner_of_death","11512314":"We see that how many males and females were shot or shot & tasered","8c863b49":"we can see that most of the people who died were of the age b\/w 22 to 40","a84e2f32":"### arms_category","99e39aa5":"# Basic Exploration","7bf6be2d":"### body_camera","8593b510":"We can see that White People and Black people were the one who were mostly armed with guns. PS: I am not trying to make any sort of offensive comment. I am just interpreting the countplot. And still if someone felt wrong, sorry about that","676ca71c":"#### Lets see how in each race, how many were men or women","6de3dda9":"### race","1f9df16f":"### armed","50f22fad":"#### lets see this in the form of a countplot","9a37052b":"We see that mostly people were equipped with guns","8a76b16f":"Among the population that dies, 95.5% of them were men","dd702665":"#### Lets see flee wrt to gender","fb8b0b73":"### threat_level","dd0ab0b5":"#### Lets see arms_category wrt to gender","d626883e":"#### Lets see race wrt to mannar of death","38aa8da7":"We see that most people didn't flew away","437b4df1":"#### Lets see the signs_of_mental_illness wrt gender","65db951c":"#### Lets see threat_level wrt to gender"}}