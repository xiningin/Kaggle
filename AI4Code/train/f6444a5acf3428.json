{"cell_type":{"e710846a":"code","a2296576":"code","7b92a12b":"code","37907c83":"code","bca91b2f":"code","c23d66c2":"code","e93b43fa":"code","6daf2a04":"code","152ce07b":"code","48dfd4e2":"code","63188036":"code","db858fcb":"code","aef9f450":"code","059749d1":"code","4d446673":"code","4896c9f1":"code","ce517960":"code","aded72d3":"code","23312422":"code","d9f3ebd7":"code","9d3b5817":"code","6e5441be":"markdown","3dfcc583":"markdown","e9d41aac":"markdown","82b675c7":"markdown","05dc1be0":"markdown","616a2c37":"markdown","b0896b0e":"markdown","6adf8f49":"markdown","b2df070b":"markdown","8243f87b":"markdown","d380995c":"markdown","0e244a33":"markdown","c73140fc":"markdown","ad699bfd":"markdown","30b08095":"markdown","8a82e7e3":"markdown","71c0769c":"markdown"},"source":{"e710846a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a2296576":"dataset = pd.read_csv(\"\/kaggle\/input\/breast-cancer-wisconsin-data\/data.csv\")","7b92a12b":"dataset.head()","37907c83":"dataset.info()","bca91b2f":"dataset = dataset.drop([\"id\"], axis = 1)","c23d66c2":"dataset = dataset.drop([\"Unnamed: 32\"], axis = 1)","e93b43fa":"dataset.head(3)","6daf2a04":"M = dataset[dataset.diagnosis == \"M\"]","152ce07b":"M.head(5)","48dfd4e2":"B = dataset[dataset.diagnosis == \"B\"]","63188036":"B.head(5)","db858fcb":"plt.title(\"Malignant vs Benign Tumor\")\nplt.xlabel(\"Radius Mean\")\nplt.ylabel(\"Texture Mean\")\nplt.scatter(M.radius_mean, M.texture_mean, color = \"red\", label = \"Malignant\", alpha = 0.3)\nplt.scatter(B.radius_mean, B.texture_mean, color = \"lime\", label = \"Benign\", alpha = 0.3)\nplt.legend()\nplt.show()","aef9f450":"dataset.diagnosis = [1 if i == \"M\" else 0 for i in dataset.diagnosis]","059749d1":"x = dataset.drop([\"diagnosis\"], axis = 1)\ny = dataset.diagnosis.values","4d446673":"# Normalization:\nx = (x - np.min(x)) \/ (np.max(x) - np.min(x))","4896c9f1":"from sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.15, random_state = 42)","ce517960":"from sklearn.ensemble import RandomForestClassifier\nrf = RandomForestClassifier(n_estimators = 100 , random_state = 1)\nrf.fit(x_train, y_train)\n\nprint(\"Random forest algorithm result:\" , rf.score(x_test, y_test))","aded72d3":"predictions = rf.predict(x_test)","23312422":"from sklearn.metrics import confusion_matrix\n\ncf = confusion_matrix(y_test, predictions)","d9f3ebd7":"cf","9d3b5817":"import seaborn as sns\n\nsns.heatmap(cf, annot = True)\nplt.xlabel(\"Predictions\")\nplt.ylabel(\"y_test\")","6e5441be":"Column names and meanings:\n* id: ID number\n* diagnosis: The diagnosis of breast tissues (M = malignant, B = benign)\n* radius_mean: mean of distances from center to points on the perimeter\n* texture_mean: standard deviation of gray-scale values\n* perimeter_mean: mean size of the core tumor\n* area_mean: area of the tumor\n* smoothness_mean: mean of local variation in radius lengths\n* compactness_mean: mean of perimeter^2 \/ area - 1.0\n* concavity_mean: mean of severity of concave portions of the contour\n* concave_points_mean: mean for number of concave portions of the contour\n* symmetry_mean\n* fractal_dimension_mean: mean for \"coastline approximation\" - 1\n* radius_se: standard error for the mean of distances from center to points on the perimeter\n* texture_se: standard error for standard deviation of gray-scale values\n* perimeter_se\n* area_se\n* smoothness_se: standard error for local variation in radius lengths\n* compactness_se: standard error for perimeter^2 \/ area - 1.0\n* concavity_se: standard error for severity of concave portions of the contour\n* concave_points_se: standard error for number of concave portions of the contour\n* symmetry_se\n* fractal_dimension_se: standard error for \"coastline approximation\" - 1\n* radius_worst: \"worst\" or largest mean value for mean of distances from center to points on the perimeter\n* texture_worst: \"worst\" or largest mean value for standard deviation of gray-scale values\n* perimeter_worst\n* area_worst\n* smoothness_worst: \"worst\" or largest mean value for local variation in radius lengths\n* compactness_worst: \"worst\" or largest mean value for perimeter^2 \/ area - 1.0\n* concavity_worst: \"worst\" or largest mean value for severity of concave portions of the contour\n* concave_points_worst: \"worst\" or largest mean value for number of concave portions of the contour\n* symmetry_worst\n* fractal_dimension_worst: \"worst\" or largest mean value for \"coastline approximation\" - 1","3dfcc583":"# Confision Matrix Implementation on Cancer Dataset","e9d41aac":"A confusion matrix is a table that is often used to describe the performance of a classification model (or \"classifier\") on a set of test data for which the true values are known. The confusion matrix itself is relatively simple to understand, but the related terminology can be confusing.","82b675c7":"![](https:\/\/static.packt-cdn.com\/products\/9781838555078\/graphics\/C13314_06_05.jpg)","05dc1be0":"Let's expain the heatmap graph:\n\n* There were 54 benign tumors and our algorithm predicted 53 correctly.\n* We had a total of 32 malignant tumor data, our algorithm predicted 29 correctly.\n* There is 1 data that is actually benign but the algorithm thinks that it is malignant.\n* There are 3 data that is actually malignant but the algorithm thinks that it is benign.","616a2c37":"<a id = \"6\"><\/a>\n# 6. Confision Matrix Visualization","b0896b0e":"<a id = \"3\"><\/a>\n# 3. Dataset Visualization ","6adf8f49":"<a id = \"4\"><\/a>\n# 4. Meaning Of Confision Matrix","b2df070b":"<a id = \"5\"><\/a>\n# 5. Confision Matrix with Sklearn","8243f87b":"# <a id = \"1\"><\/a>\n# 1. Importing Dataset:","d380995c":"Dataset information:\n\n* Dataset Characteristics: Multivariate\n* Attribute Characteristics: Real\n* Attribute Characteristics: Classification\n* Number of Instances: 569\n* Number of Attributes: 32\n* Missing Values: No","0e244a33":"> <a id = \"2\"><\/a>\n# 2. Getting Info About Dataset","c73140fc":"Then I implemented Random Forest Algorithm to predict my test data:","ad699bfd":"Now, let's get rid of \"id\" and \"Unnamed: 32\" features because we don't need to use them while diagnosing whether the patient has a cancer or not. ","30b08095":"## Content:\n\n1. [Importing Dataset](#1)\n1. [Getting Info About Dataset](#2)\n1. [Dataset Visualization](#3)\n1. [Meaning Of Confision Matrix](#4)\n1. [Confision Matrix with Sklearn](#5)\n1. [Confision Matrix Visualization](#6)","8a82e7e3":"I am going to use Confision Matrix for describing the performance of Random Forest Classification.(It can be any other ML classification method)","71c0769c":"* TN: True Negative\n* FP: False Positive\n* FN: False Negative\n* TP: True Positive"}}