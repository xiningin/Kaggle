{"cell_type":{"b57dc066":"code","0d63a66e":"code","08208ea9":"code","158ec1cf":"code","4dfd6d09":"code","cf46df79":"code","fe74455a":"code","94fec99b":"code","1264bdf0":"code","e7cb01c6":"code","9773e5e4":"code","30f25fd0":"code","5aa4df43":"code","d8757931":"code","435b7dce":"code","6a669a7e":"code","68a98c84":"code","f20c3f4b":"code","db672621":"code","e3d93b6f":"code","024a2160":"code","262e64b3":"code","34e303eb":"code","a5230fda":"code","14126fdf":"markdown","1fe9a79f":"markdown","c4947f6a":"markdown","c4de66d1":"markdown","75c52b54":"markdown","4c4f8ac4":"markdown","7e8c269e":"markdown","688e789d":"markdown","94dabed7":"markdown","2405a6c6":"markdown","7cd8f675":"markdown","8f1add85":"markdown","46b96b9b":"markdown","f5e6f813":"markdown","216f8175":"markdown","1738ae3e":"markdown","365896ab":"markdown","880f6fd9":"markdown","cc2201fb":"markdown","4158771c":"markdown","b490469c":"markdown","44c71737":"markdown","2ab80719":"markdown","4b28e20b":"markdown","1afa965f":"markdown","37ff0d6d":"markdown","e7fb3394":"markdown","3f1e2a0d":"markdown","342af222":"markdown","43fd41d6":"markdown","8cef4948":"markdown","2b835b78":"markdown","5539b289":"markdown","0765e4bc":"markdown","59c9979a":"markdown"},"source":{"b57dc066":"import pandas as pd\nimport numpy as np\nimport re\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport geopandas as gpd\nimport descartes\nfrom shapely.geometry import Point,Polygon\n\nfrom collections import Counter","0d63a66e":"base_dir = '..\/input\/birdclef-2021\/'\ntrain_metadata = pd.read_csv(base_dir + '\/train_metadata.csv')","08208ea9":"train_metadata.shape","158ec1cf":"train_metadata.head()","4dfd6d09":"train_metadata.isnull().sum()","cf46df79":"train_metadata.primary_label.nunique()","fe74455a":"primary_label_dist = train_metadata.primary_label.value_counts().reset_index().rename(columns={'primary_label':'count',\n                                                                                               'index':'primary_label'})\n\nprimary_label_dist","94fec99b":"plt.figure(figsize=(24,12))\nax = sns.barplot(x = 'primary_label', y='count', data= primary_label_dist[primary_label_dist['count']>=200])\nax.set_xticklabels(ax.get_xticklabels(), rotation=90)\nplt.plot()","1264bdf0":"plt.figure(figsize=(24,12))\nsns.distplot(primary_label_dist['count'], kde=False)\nplt.title(\"Primary Label Distribution\")","e7cb01c6":"train_metadata.secondary_labels.nunique()","9773e5e4":"seocondary_label_dist = train_metadata.secondary_labels.value_counts().reset_index().rename(columns={'secondary_labels':'count',\n                                                                             'index':'secondary_labels'})\n\nseocondary_label_dist","30f25fd0":"plt.figure(figsize=(24,12))\nsns.distplot(seocondary_label_dist['count'],kde= False)","5aa4df43":"all_secondary_labels = train_metadata.secondary_labels.apply(lambda x: eval(x)).sum()","d8757931":"individual_secondary_label = dict(Counter(all_secondary_labels))\nindividual_secondary_label_df = pd.DataFrame({'label':list(individual_secondary_label.keys()),\n                                              'count':list(individual_secondary_label.values())}).sort_values('count',ascending=False)","435b7dce":"individual_secondary_label_df","6a669a7e":"plt.figure(figsize=(24,12))\nax = sns.barplot(x = 'label', y='count', data= individual_secondary_label_df[individual_secondary_label_df['count']>=200])\nax.set_xticklabels(ax.get_xticklabels(), rotation=90)\nplt.plot()","68a98c84":"gdf = gpd.GeoDataFrame(train_metadata, geometry=gpd.points_from_xy(train_metadata.longitude, \n                                                                   train_metadata.latitude))","f20c3f4b":"world = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))\nfig,ax = plt.subplots(figsize=(24,12))\nworld.plot(ax= ax, color='black', edgecolor='black')\ngdf.plot(ax=ax, color='red', markersize=2)\nplt.show()","db672621":"train_metadata['year'] = train_metadata['date'].astype('str').str[0:4]\nyear_dist = train_metadata.year.value_counts().reset_index().rename(columns={'index':'year',\n                                                                 'year':'count'}).sort_values('year',ascending=True).reset_index(drop=True)\n\nplt.figure(figsize=(24,12))\nax = sns.barplot(x='year',y='count',data = year_dist)\nax.set_xticklabels(labels= ax.get_xticklabels(), rotation= 90)\nplt.title('Distribution across year of auido recordings')\nplt.show()","e3d93b6f":"train_metadata['month'] = train_metadata['date'].astype('str').str[5:7]\nmonth_dist = train_metadata.month.value_counts().reset_index().rename(columns={'index':'month',\n                                                                              'month':'count'}).sort_values('month',ascending=True).reset_index(drop=True)\n\nplt.figure(figsize=(24,12))\nax = sns.barplot(x='month',y='count',data = month_dist[month_dist['month']!='00'])\nax.set_xticklabels(labels= ax.get_xticklabels(), rotation= 90)\nplt.title('Distribution across month of auido recordings')\nplt.show()","024a2160":"rating_dist = train_metadata.rating.value_counts().reset_index().rename(columns={'index':'rating',\n                                                                                 'rating':'count'}).sort_values('rating',ascending=True).reset_index(drop=True)","262e64b3":"plt.figure(figsize=(24,12))\nax = sns.barplot(x='rating',y='count',data = rating_dist)\nplt.title('Distribution across rating of auido recordings')\nplt.show()","34e303eb":"def hour_extractor(time_object):\n    if re.match(r'^\\d\\d:\\d\\d$',time_object.strip('')):\n        return time_object.strip('')[0:2]\n    else:\n        return 'NA'\ntrain_metadata['hour'] = train_metadata['time'].apply(lambda x: hour_extractor(x))","a5230fda":"hour_dist = train_metadata['hour'].value_counts().reset_index().rename(columns={'index':'hour',\n                                                                                'hour':'count'}).sort_values('hour',ascending=True).reset_index(drop=True)\n\nplt.figure(figsize=(24,12))\nax = sns.barplot(x='hour',y='count',data = hour_dist)\nplt.title('Distribution across hour of auido recordings')\nplt.show()","14126fdf":"## Problem statement","1fe9a79f":"1. We have Labels for **62874** individual xenocanto audio files\n2. Each file_name has 2 labels - \n    1. Primary_label - Primary bird in the audio file\n    2. Secondary_labels - bird audio(if present) in the background\n3. Type - Type of call made by the bird in the audio file\n4. Latitude & Longitude - Co-ordinates of location where audio was captured\n5. Scientific_name - Scientific name of primary bird in the audio file\n6. Common_name - Common_name of primary bird in the audio file\n7. Author - Recordist name\n8. Filename - Filename as in **train_short_audio** folder\n9. date - Date on which recording was captured\n10. Rating - Rating based on quality of audio captured\n11. Time - Time when recording was captured\n12. url - url of <https:\/\/xenocanto.org>","c4947f6a":"- **Looks like most of the bird species has  ~75 to 200 samples corresponding to it.**","c4de66d1":"- Most of the audio has been captured between March to July timeline","75c52b54":"- secondarylabels contains more than one species.\n- Majority of the these labels is empty i.e. there is no other bird heard in that audio clip\n\n- **ok, so lets see how these counts is actually distributed.**","4c4f8ac4":"### Individual Column wise analysis","7e8c269e":"- As there is no null in the co-ordinates lets plot these in on a world map","688e789d":"# BirdCLEF 2021 - BirdCall Identification","94dabed7":"- **Majority of these unique values in secondary_labels is basically repeated very few number of time.** But what about the repeatation of unique individual bird?","2405a6c6":"# Data Exploration","7cd8f675":"#### Geolocation column","8f1add85":"## Provided Data","46b96b9b":"- **No Null value; Good to Go.**","f5e6f813":"For each row_id i.e.(audio id)_(site name)_(5 second time_window), you need to list the birds which are being heard in that window. which will be evaluated based on F1 score.","216f8175":"#### Primary labels","1738ae3e":"#### time","365896ab":"- In this competition, you\u2019ll automate the acoustic identification of birds in soundscape recordings. You'll examine an acoustic dataset to build detectors and classifiers to extract the signals of interest (bird calls).\n\n- With proper sound detection and classification\u2014aided by machine learning\u2014researchers can improve their ability to track the status and trends of biodiversity in important ecosystems, enabling them to better support global conservation efforts.","880f6fd9":"- **So, we have count within groups ranging from maximum of 500 to minimum of 8**. Ok, lets see the distribution of these counts","cc2201fb":"## Submission File","4158771c":"## Imports","b490469c":"- Most of the audio clip has rating more than 3.5","44c71737":"- **Looks like, though the data has been collected across the globe, but majority of it has been collected in North America, South America and European countries**","2ab80719":"#### ratings","4b28e20b":"#### Secondary label","1afa965f":"- Some garbage date value is present where year is in (0000, 0199, 0201,0202,2104)\n- Most of the audio has been captured in last decade","37ff0d6d":"- Number of unique secondary labels","e7fb3394":"### Shape and columns of the train_metadata","3f1e2a0d":"## Lets analyse the train_metadata.csv file","342af222":"### Is there any null values in the this file?","43fd41d6":"- Singnificant number of audio recoding does not have time captured. However, looks like majority of audio recording has been captured in first half.","8cef4948":"#### Date","2b835b78":"- **Distribution of differnt primary labels**","5539b289":"- **Number of unique Primary labels**","0765e4bc":"1. **train_short_audio**\n     1. These are short recording of individual bird call as recorded by users of [xenocanto](www.xenocanto.org). These \n     contitutes bulk of your training data.\n\n2. **train_soundscapes** \n     1. These files are similar to your test data. Audio files are of ~10 mins long duration.\n    \n3. **train_metadata.csv** \n     1. These file contains metadata of recordings of train_short_audio like site, date, filename, recordist etc\n4. **train_soundscape_labels**\n     1. contains the labels for auido file present in train_sounscapes folder.Labels are given for each 5-second window of auido file. \n     2. For example - row_id - 7019_COR_5 means and auido file with id 7019, \n     3. COR is the site at which audio was recorded and 5 indicates the 0 to 5 second window of the complete audio file of id 7019. \n     4.\"birds\" column is the labels i.e. birds(separated by space) which were heard during that time window. ","59c9979a":"- lets see the count of these bird labels where count is more than 200"}}