{"cell_type":{"be6b2c45":"code","6a8980e0":"code","679486fc":"code","63b2d504":"code","4e6aed7a":"code","e407a753":"code","3020add0":"code","2556c1eb":"code","6774df43":"code","bb5c1ef8":"code","49014f19":"code","6383dd4a":"code","f818e95a":"code","c5955c7d":"code","3ccefe58":"code","bdb74f3a":"code","43f9b9c2":"code","e1ea7976":"code","63d1bee8":"code","15ed7483":"code","620c1bbe":"code","5547e35e":"code","6186823f":"code","0238f367":"code","081390ac":"code","4b8ba729":"code","00db3761":"code","f92159f7":"code","8a5a1fe4":"code","480ee378":"code","909c9026":"code","0a79b351":"code","ba19c9b6":"code","814315bb":"code","1fcce160":"code","2d07c58d":"code","6f460cac":"code","6f521623":"code","2e0a7f13":"code","60c6ad2f":"code","1d078108":"code","d5dc45fc":"code","96823667":"code","e6e9de86":"code","528f9de5":"code","d01390bc":"code","cee3ba8c":"code","95e2b369":"code","8d202fc7":"code","24e97410":"code","4e4c88ab":"code","c5237641":"code","978f27dc":"code","b975232c":"code","b9491b68":"code","38508e37":"code","80cb8214":"code","53ee90d5":"code","f9d69e46":"code","f7f7a666":"code","ae1888f1":"code","8515b885":"code","70598668":"code","d0b92e03":"code","e51a45ea":"code","9d0a66d0":"code","b3565101":"code","87718fd8":"code","a0d27b30":"code","abd2de6c":"code","6b350c7e":"code","a5f906ca":"code","f2aee8c7":"code","96b81a4e":"code","8de6274e":"code","dc47e078":"code","33ee238a":"code","def7b3ba":"code","3224e6ae":"code","b4c180d5":"code","76415945":"markdown","9703ce18":"markdown","c6c0bf1c":"markdown","f0df501b":"markdown","049ba1d2":"markdown","8fd43dc3":"markdown","1d3abdd9":"markdown","50701634":"markdown","2fd3d91c":"markdown","741a5833":"markdown","cde96b77":"markdown","f7e7a6bc":"markdown","4332e01c":"markdown","0ea6cc5c":"markdown","566d78eb":"markdown","ebf417b4":"markdown"},"source":{"be6b2c45":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6a8980e0":"df=pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')","679486fc":"df.head()","63b2d504":"df['MSZoning'].value_counts()","4e6aed7a":"sns.heatmap(df.isnull(),yticklabels=False,cbar=False)","e407a753":"df.shape","3020add0":"df.info()","2556c1eb":"df['LotFrontage']=df['LotFrontage'].fillna(df['LotFrontage'].mean())","6774df43":"df.drop(['Alley'],axis=1,inplace=True)","bb5c1ef8":"df['BsmtCond']=df['BsmtCond'].fillna(df['BsmtCond'].mode()[0])\ndf['BsmtQual']=df['BsmtQual'].fillna(df['BsmtQual'].mode()[0])","49014f19":"df['FireplaceQu']=df['FireplaceQu'].fillna(df['FireplaceQu'].mode()[0])\ndf['GarageType']=df['GarageType'].fillna(df['GarageType'].mode()[0])","6383dd4a":"df.drop(['GarageYrBlt'],axis=1,inplace=True)","f818e95a":"df['GarageFinish']=df['GarageFinish'].fillna(df['GarageFinish'].mode()[0])\ndf['GarageQual']=df['GarageQual'].fillna(df['GarageQual'].mode()[0])\ndf['GarageCond']=df['GarageCond'].fillna(df['GarageCond'].mode()[0])","c5955c7d":"df.drop(['PoolQC','Fence','MiscFeature'],axis=1,inplace=True)","3ccefe58":"df.shape","bdb74f3a":"df.drop(['Id'],axis=1,inplace=True)","43f9b9c2":"df.isnull().sum()","e1ea7976":"df['MasVnrType']=df['MasVnrType'].fillna(df['MasVnrType'].mode()[0])\ndf['MasVnrArea']=df['MasVnrArea'].fillna(df['MasVnrArea'].mode()[0])","63d1bee8":"sns.heatmap(df.isnull(),yticklabels=False,cbar=False,cmap='coolwarm')","15ed7483":"df['BsmtExposure']=df['BsmtExposure'].fillna(df['BsmtExposure'].mode()[0])","620c1bbe":"sns.heatmap(df.isnull(),yticklabels=False,cbar=False,cmap='YlGnBu')","5547e35e":"df['BsmtFinType2']=df['BsmtFinType2'].fillna(df['BsmtFinType2'].mode()[0])","6186823f":"df.dropna(inplace=True)","0238f367":"df.shape","081390ac":"columns=['MSZoning','Street','LotShape','LandContour','Utilities','LotConfig','LandSlope','Neighborhood',\n         'Condition2','BldgType','Condition1','HouseStyle','SaleType',\n        'SaleCondition','ExterCond',\n         'ExterQual','Foundation','BsmtQual','BsmtCond','BsmtExposure','BsmtFinType1','BsmtFinType2',\n        'RoofStyle','RoofMatl','Exterior1st','Exterior2nd','MasVnrType','Heating','HeatingQC',\n         'CentralAir',\n         'Electrical','KitchenQual','Functional',\n         'FireplaceQu','GarageType','GarageFinish','GarageQual','GarageCond','PavedDrive']","4b8ba729":"len(columns)","00db3761":"def category_onehot_multcols(multcolumns):\n    df_final=final_df\n    i=0\n    for fields in multcolumns:\n        \n        print(fields)\n        df1=pd.get_dummies(final_df[fields],drop_first=True)\n        \n        final_df.drop([fields],axis=1,inplace=True)\n        if i==0:\n            df_final=df1.copy()\n        else:\n            \n            df_final=pd.concat([df_final,df1],axis=1)\n        i=i+1\n       \n        \n    df_final=pd.concat([final_df,df_final],axis=1)\n        \n    return df_final","f92159f7":"main_df=df.copy()","8a5a1fe4":"test_df=pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')","480ee378":"test_df.shape","909c9026":"test_df.head()","0a79b351":"test_df.isnull().sum()","ba19c9b6":"test_df['LotFrontage']=test_df['LotFrontage'].fillna(test_df['LotFrontage'].mean())","814315bb":"test_df['MSZoning']=test_df['MSZoning'].fillna(test_df['MSZoning'].mode()[0])","1fcce160":"test_df.shape","2d07c58d":"test_df.drop(['Alley'],axis=1,inplace=True)","6f460cac":"test_df.shape","6f521623":"test_df['BsmtCond']=test_df['BsmtCond'].fillna(test_df['BsmtCond'].mode()[0])\ntest_df['BsmtQual']=test_df['BsmtQual'].fillna(test_df['BsmtQual'].mode()[0])","2e0a7f13":"test_df['FireplaceQu']=test_df['FireplaceQu'].fillna(test_df['FireplaceQu'].mode()[0])\ntest_df['GarageType']=test_df['GarageType'].fillna(test_df['GarageType'].mode()[0])","60c6ad2f":"test_df.drop(['GarageYrBlt'],axis=1,inplace=True)","1d078108":"test_df.shape","d5dc45fc":"test_df['GarageFinish']=test_df['GarageFinish'].fillna(test_df['GarageFinish'].mode()[0])\ntest_df['GarageQual']=test_df['GarageQual'].fillna(test_df['GarageQual'].mode()[0])\ntest_df['GarageCond']=test_df['GarageCond'].fillna(test_df['GarageCond'].mode()[0])\n\ntest_df.drop(['PoolQC','Fence','MiscFeature'],axis=1,inplace=True)","96823667":"test_df.shape","e6e9de86":"test_df.drop(['Id'],axis=1,inplace=True)","528f9de5":"test_df['MasVnrType']=test_df['MasVnrType'].fillna(test_df['MasVnrType'].mode()[0])\ntest_df['MasVnrArea']=test_df['MasVnrArea'].fillna(test_df['MasVnrArea'].mode()[0])","d01390bc":"sns.heatmap(test_df.isnull(),yticklabels=False,cbar=False,cmap='viridis')","cee3ba8c":"test_df['BsmtExposure']=test_df['BsmtExposure'].fillna(test_df['BsmtExposure'].mode()[0])","95e2b369":"sns.heatmap(test_df.isnull(),yticklabels=False,cbar=False,cmap='viridis')","8d202fc7":"test_df['BsmtFinType2']=test_df['BsmtFinType2'].fillna(test_df['BsmtFinType2'].mode()[0])","24e97410":"test_df.loc[:, test_df.isnull().any()].head()","4e4c88ab":"test_df['Utilities']=test_df['Utilities'].fillna(test_df['Utilities'].mode()[0])\ntest_df['Exterior1st']=test_df['Exterior1st'].fillna(test_df['Exterior1st'].mode()[0])\ntest_df['Exterior2nd']=test_df['Exterior2nd'].fillna(test_df['Exterior2nd'].mode()[0])\ntest_df['BsmtFinType1']=test_df['BsmtFinType1'].fillna(test_df['BsmtFinType1'].mode()[0])\ntest_df['BsmtFinSF1']=test_df['BsmtFinSF1'].fillna(test_df['BsmtFinSF1'].mean())\ntest_df['BsmtFinSF2']=test_df['BsmtFinSF2'].fillna(test_df['BsmtFinSF2'].mean())\ntest_df['BsmtUnfSF']=test_df['BsmtUnfSF'].fillna(test_df['BsmtUnfSF'].mean())\ntest_df['TotalBsmtSF']=test_df['TotalBsmtSF'].fillna(test_df['TotalBsmtSF'].mean())\ntest_df['BsmtFullBath']=test_df['BsmtFullBath'].fillna(test_df['BsmtFullBath'].mode()[0])\ntest_df['BsmtHalfBath']=test_df['BsmtHalfBath'].fillna(test_df['BsmtHalfBath'].mode()[0])\ntest_df['KitchenQual']=test_df['KitchenQual'].fillna(test_df['KitchenQual'].mode()[0])\ntest_df['Functional']=test_df['Functional'].fillna(test_df['Functional'].mode()[0])\ntest_df['GarageCars']=test_df['GarageCars'].fillna(test_df['GarageCars'].mean())\ntest_df['GarageArea']=test_df['GarageArea'].fillna(test_df['GarageArea'].mean())\ntest_df['SaleType']=test_df['SaleType'].fillna(test_df['SaleType'].mode()[0])","c5237641":"test_df.shape","978f27dc":"test_df.to_csv('Updatedtest.csv',index=False)","b975232c":"test_df = pd.read_csv('.\/Updatedtest.csv')","b9491b68":"test_df.shape","38508e37":"final_df=pd.concat([df,test_df],axis=0)","80cb8214":"final_df['SalePrice']","53ee90d5":"final_df.shape","f9d69e46":"final_df=category_onehot_multcols(columns)","f7f7a666":"final_df.shape","ae1888f1":"final_df =final_df.loc[:,~final_df.columns.duplicated()]","8515b885":"final_df.shape","70598668":"final_df","d0b92e03":"df_Train=final_df.iloc[:1422,:]\ndf_Test=final_df.iloc[1422:,:]","e51a45ea":"df_Train.head()","9d0a66d0":"df_Test.head()","b3565101":"df_Train.shape","87718fd8":"X_train=df_Train.drop(['SalePrice'],axis=1)\ny_train=df_Train['SalePrice']","a0d27b30":"import keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.layers import LeakyReLU,PReLU,ELU\nfrom keras.layers import Dropout","abd2de6c":"classifier = Sequential()","6b350c7e":"classifier.add(Dense(units = 50,activation = 'relu'))","a5f906ca":"classifier.add(Dense(units = 6,activation = 'relu'))","f2aee8c7":"classifier.add(Dense(units = 6,activation = 'relu'))","96b81a4e":"\nclassifier.add(Dense(units = 1, activation = 'sigmoid'))\n","8de6274e":"\nclassifier.compile(loss = 'binary_crossentropy',optimizer = 'Adamax')","dc47e078":"model_history=classifier.fit(X_train, y_train,validation_split=0.20, batch_size = 10, epochs = 1000)","33ee238a":"ann_pred=classifier.predict(df_Test.drop(['SalePrice'],axis=1).values)","def7b3ba":"test = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')\ntest_ID = test['Id']","3224e6ae":"submission = pd.DataFrame()\nsubmission['Id'] = test_ID\nsubmission['SalePrice'] = ann_pred","b4c180d5":"submission.to_csv('submission.csv',index = False)","76415945":"# Filling Missing Values","9703ce18":"# Adding the input layer and the first hidden layer","c6c0bf1c":"# Check Null Values","f0df501b":"# Combine Test Data","049ba1d2":"# Handling Categorical Features","8fd43dc3":"# Filling Missing Values","1d3abdd9":"# Initialising the ANN","50701634":"# Using Artifical Neural Network for the training and testing of the data","2fd3d91c":"# Adding the output layer","741a5833":"# Compiling the ANN","cde96b77":"# Fitting the ANN to the Training set","f7e7a6bc":"# Adding the second hidden layer","4332e01c":"# Handling Test Data Set","0ea6cc5c":"# Concatenate Train and Test Data","566d78eb":"# Create Submission file ","ebf417b4":"# Adding the third hidden layer\n"}}