{"cell_type":{"1641bf31":"code","c13b2476":"code","1e50aee1":"code","c1848954":"code","1329cce2":"code","31ddbf21":"code","36080d33":"code","fb2b0506":"code","fa557881":"code","8bfb79d3":"code","a2dcb934":"code","6f8b93f2":"markdown","60dc20ac":"markdown","d4781840":"markdown","02f30d9c":"markdown"},"source":{"1641bf31":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nfrom skimage import data\nfrom sklearn.cluster import KMeans","c13b2476":"# Loading image\nastronaut = data.astronaut()\n# Normalisation (System RGB)\nastronaut_norm = np.array(astronaut, dtype=np.float64) \/ 255","1e50aee1":"# Show image\n# without normalisation, imshow method doesn't work\nplt.imshow(astronaut_norm)","c1848954":"# Visualization of pixel values\n# Reshape from 512x512x3 to 262144x3\ndata = astronaut_norm.reshape(-1,3)\n# Conversation from array to pandas Dataframe\ndataframe = pd.DataFrame(data=data[0:, 0:], columns=['R', 'G', 'B'])\n# First five pixels\ndataframe.head()","1329cce2":"# Nombre of colors in image\ndataframe.drop_duplicates().shape","31ddbf21":"n_colors = 64\n# Model creation\n# random_state to obtain the same results on each compilation\nkmeans = KMeans(n_clusters = n_colors, random_state = 0)\nkmeans.fit(data)","36080d33":"# Image compression\nimg64 = kmeans.cluster_centers_[kmeans.labels_]\n# To show image reshape it to 64x64x3\nimg64 = img64.reshape(astronaut_norm.shape)\nplt.imshow(img64)","fb2b0506":"# visualization of pixels values in RGB system\ndata64 = img64.reshape(-1,3)\ndataframe64 = pd.DataFrame(data=data64[0:, 0:], columns=['R', 'G', 'B'])\ndataframe64.head() # First five pixels","fa557881":"# Number of colors in the compressed image\ndataframe64.drop_duplicates().shape","8bfb79d3":"# Now, image of 16 colors!\nkmeans_ = KMeans(n_clusters = 16, random_state = 0).fit(data)\nimg16 = kmeans_.cluster_centers_[kmeans_.labels_]\nimg16 = img16.reshape(astronaut_norm.shape)","a2dcb934":"fig = plt.figure(figsize=(12, 12))\nax1 = fig.add_subplot(1,3,1)\nax1.imshow(astronaut_norm)\nax1.set_title('Original image')\nax1.axis('off')\nax2 = fig.add_subplot(1,3,2)\nax2.imshow(img64)\nax2.set_title('Image of 64 colors')\nax2.axis('off')\nax3 = fig.add_subplot(1,3,3)\nax3.imshow(img16)\nax3.set_title('Image of 16 colors')\nax3.axis('off')","6f8b93f2":"### Introduction\n**Color quantization** is a technique for reducing the number of distinct colors used in an image. By applying this technique, we will reduce the number of colors in an image from 113 382 unique colors to 64, while maintaining the overall quality of the look.\n<h3 style=\"color:red\"><b>If you found this content useful THANKS for pressing UP VOTE<\/b><\/h3>","60dc20ac":"### Image exploration","d4781840":"### Conclusion","02f30d9c":"### Libraries we use"}}