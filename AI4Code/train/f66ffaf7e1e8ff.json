{"cell_type":{"fe4502a1":"code","56675c5f":"code","fb477b50":"code","921871a1":"code","a6894d99":"code","b9f50732":"code","18420ab6":"code","287d8351":"code","ea83c2f3":"code","79d949e3":"code","226c0579":"code","f15289a6":"code","4fb4ce37":"code","43638005":"code","7c61434a":"code","6fb02d8a":"code","3ad7da67":"code","bb6ef54e":"code","1fddca05":"code","4cc9c51d":"markdown","94d68026":"markdown","f5b52940":"markdown","6ad82373":"markdown","4c4b71b0":"markdown","c2e9f0bc":"markdown","0e8f1a7c":"markdown","eff20504":"markdown","f3fe1450":"markdown","d1219719":"markdown","39b7d0e1":"markdown","8ddfab48":"markdown","31792d69":"markdown","8728c085":"markdown","29cae3b7":"markdown"},"source":{"fe4502a1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","56675c5f":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\n\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import f1_score,recall_score,confusion_matrix\n\nfrom sklearn.linear_model import LogisticRegression","fb477b50":"data=pd.read_csv('\/kaggle\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv')\ndata.head()","921871a1":"data.describe()","a6894d99":"data.info()","b9f50732":"data.isnull().sum()","18420ab6":"#Correlation Table\nplt.figure(figsize=(12,8))\nsns.heatmap(data.corr(),cmap='magma')\nplt.title('Correlation Table')\nplt.show()","287d8351":"colorlist=['paleturquoise','violet']\nN_col = ['anaemia','diabetes','high_blood_pressure','sex','smoking','DEATH_EVENT']\nplt.figure(figsize=(20,60), facecolor='white')\nplotnum=1\nfor col in N_col:\n    ax=plt.subplot(1,6,plotnum)\n    data[col].value_counts().plot.pie(colors=colorlist,startangle=135)\n    plotnum+=1\nplt.show()","ea83c2f3":"N_col = ['age','creatinine_phosphokinase','ejection_fraction','platelets','serum_creatinine','serum_sodium','time']\nplt.figure(figsize=(20,60), facecolor='ivory')\nplotnum=1\nfor col in N_col:\n    ax=plt.subplot(9,3,plotnum)\n    sns.histplot(data[col], bins=20,color='seagreen')\n    plt.title(col)\n    plotnum+=1\nplt.show()","79d949e3":"x1=data.drop('DEATH_EVENT',axis=1)\ny=data['DEATH_EVENT']","226c0579":"scaler=MinMaxScaler()\nscaler.fit_transform(x1)","f15289a6":"x_train,x_test,y_train,y_test=train_test_split(x1,y,test_size=0.2)","4fb4ce37":"model=LogisticRegression(solver='liblinear')\nmodel.fit(x_train,y_train)\ny_pred=model.predict(x_test)\n\ntrain_accuracy=model.score(x_train,y_train)\ntest_accuracy=model.score(x_test,y_test)\nf1_score=f1_score(y_test,y_pred)\nr_score=recall_score(y_test,y_pred)","43638005":"Accuracy=pd.DataFrame({'Train':train_accuracy,'Test':test_accuracy},index=['Accuracy'])\nAccuracy","7c61434a":"# The F1 score\nf1_score","6fb02d8a":"# The recall score\nr_score","3ad7da67":"cm=confusion_matrix(y_test,y_pred)\nsns.heatmap(cm\/np.sum(cm),annot=True,fmt='.2%')\nplt.xlabel('Actual Values')\nplt.ylabel('Predicted Values')\nplt.show()","bb6ef54e":"results=pd.DataFrame({'Features':list(x1.columns),'Weights':list(model.coef_[0])})\nresults","1fddca05":"plt.figure(figsize=(12,8))\nresults.plot.barh(x='Features',y='Weights',title='Weightage of features on the model',cmap='summer')\nplt.show()","4cc9c51d":"#### Counfusion Matrix","94d68026":"#### Regression Itself","f5b52940":"#### Sex, smoking, platelets, high blood pressure, diabetes, creatinine phosphokinase and anaemia doesnt contribute much as compared to other Features to the model.","6ad82373":"### Binary Data plots","4c4b71b0":"## Importing relevant libraries\n","c2e9f0bc":"## Loading the Data","0e8f1a7c":"### Distribution Plots","eff20504":"#### Performing Train-Test Split","f3fe1450":"## End of Logistic Regression ","d1219719":" No null values found.","39b7d0e1":"#### The weights and intercepts.","8ddfab48":"#### Defining features and targets.","31792d69":"#### Scaling the values.","8728c085":"## Logistic Regression Model\n","29cae3b7":"## Exploratory Data Analysis"}}