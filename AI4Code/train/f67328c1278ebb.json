{"cell_type":{"4067863d":"code","1804ffcd":"code","f7e85a8c":"code","e76a192c":"code","d407fa86":"code","de977c07":"code","5fbcb257":"code","4070f3b6":"code","174b9e0c":"code","dd3e0489":"markdown","4d179879":"markdown","f94b0371":"markdown","3271fb32":"markdown","b8578d77":"markdown","30c3103a":"markdown","b58a8dd1":"markdown","000b7fa9":"markdown"},"source":{"4067863d":"import numpy as np","1804ffcd":"a = np.ones((3,4,5,6))\na.shape","f7e85a8c":"b= np.rollaxis(a, 3, 1) # insert 3 index data into new position index 1 place \nb.shape","e76a192c":"b2= np.moveaxis(a, 3, 1)  # insert 3 index data into new position index 1 place \nb2.shape","d407fa86":"c= np.rollaxis(a, 2)  # insert 2 index data into new position index 0 place \nc.shape","de977c07":"c= np.rollaxis(a, 2, 0)  # insert 2 index data into new position index 0 place \nc.shape","5fbcb257":"c2= np.moveaxis(a, 2, 0)  # insert 2 index data into new position index 0 place \nc2.shape","4070f3b6":"c3 = np.swapaxes(a,0,2)  # swap 0 index data and 2 index data \nprint(c3.shape)\nc3 = np.swapaxes(c3,1,2) # swap 1 index data and 2 index data \nprint(c3.shape)","174b9e0c":"c4 = np.swapaxes(a,0,1) # swap 0 index data and 1 index data \nprint(c4.shape)","dd3e0489":"# moveaxis","4d179879":"-> swap axis 0 and axis 2 ","f94b0371":"Move axes of an array to new positions.\n\nOther axes remain in their original order.","3271fb32":"# rollaxis","b8578d77":"Interchange two axes of an array.","30c3103a":"# rollaxis : default start is 0 axis","b58a8dd1":"Roll the specified axis backwards, until it lies in a given position.\n\nThis function continues to be supported for backward compatibility, but you should prefer moveaxis. The moveaxis function was added in NumPy 1.11.","000b7fa9":"# swapaxis"}}