{"cell_type":{"5ea10b74":"code","aac1ef21":"code","deb5a9e1":"code","b9576dec":"code","912fd03d":"code","d8b83f1f":"code","f7990d54":"code","81022302":"code","31836491":"code","4b2e2512":"code","7dcd9fe3":"code","acc8dd16":"code","36a7016a":"code","37a1d0a2":"code","1ca105dc":"code","15b1f27d":"code","736d99bd":"code","22a44f78":"markdown"},"source":{"5ea10b74":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","aac1ef21":"import pandas as pd \nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","deb5a9e1":"#load data set\ntrain=pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest=pd.read_csv(\"..\/input\/titanic\/test.csv\")\n","b9576dec":"train.head()","912fd03d":"train.info()","d8b83f1f":"train.shape","f7990d54":"train.describe()","81022302":"for i in train.columns:\n    print(len(train[i].value_counts()))","31836491":"##Find the null value\ntrain.isnull().sum()","4b2e2512":"sns.heatmap(train.isna(),yticklabels=False,cbar=False,cmap='viridis')","7dcd9fe3":"\nsns.set_style('whitegrid')\nsns.distplot(train['Age'].dropna(),kde='False',bins=30)","acc8dd16":"\nsns.set_style('whitegrid')\nplt.figure(figsize=(12, 7))\nsns.boxplot(x='Pclass',y='Age',data=train)","36a7016a":"def impute_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n\n        if Pclass == 1:\n            return 37\n\n        elif Pclass == 2:\n            return 29\n\n        else:\n            return 24\n\n    else:\n        return Age\n    \n","37a1d0a2":"\ntrain['Age'] = train[['Age','Pclass']].apply(impute_age,axis=1)","1ca105dc":"sns.heatmap(train.isna(),yticklabels=False,cbar=False,cmap='viridis')","15b1f27d":"train['Embarked'].value_counts()","736d99bd":"sns.set_style('whitegrid')\nsns.boxplot(x='Fare',data=train)","22a44f78":"## Handle the Missing Values******"}}