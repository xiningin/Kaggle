{"cell_type":{"bd9a082b":"code","7a529dd3":"code","b1632a97":"code","6fc8636f":"code","2abf1c37":"code","4313484d":"code","f378563f":"code","706e63fa":"code","90be3635":"code","4be337e1":"code","829025bb":"code","9acb3649":"code","8885bc4b":"code","07224972":"code","3b48323a":"code","31e67a89":"code","18b6ad7c":"code","703291ab":"code","4ddface0":"code","346ddca5":"code","c2fefa2b":"markdown"},"source":{"bd9a082b":"import pandas as pd\nnetflix=pd.read_csv('..\/input\/updated-netflix-stock-price-all-time\/netflix.csv')\nnetflix.head()","7a529dd3":"netflix=netflix[['Date','Close']]\nnetflix.head()","b1632a97":"netflix.info()","6fc8636f":"!pip install pycaret-ts-alpha","2abf1c37":"from pycaret.internal.pycaret_experiment import TimeSeriesExperiment\nfrom sktime.utils.plotting import plot_series","4313484d":"netflix.index = pd.DatetimeIndex(netflix[\"Date\"])\nnetflix.drop([\"Date\"],axis=1,inplace=True)\nnetflix.head()","f378563f":"netflix = netflix.asfreq('d')\nnetflix.index","706e63fa":"netflix.head()","90be3635":"netflix=netflix.fillna(method='ffill')\nnetflix.head()","4be337e1":"data=netflix.Close\ndata","829025bb":"import matplotlib.pyplot as plt\n_ =plot_series(data)\nplt.xticks(rotation=90)\nplt.grid()","9acb3649":"exp = TimeSeriesExperiment()\nexp.setup(data=data,session_id=42,fh=365)","8885bc4b":"## Create a model manually\nmodel = exp.create_model(\"arima\")\nmodel","07224972":"y_train = exp.get_config(\"y_train\")\ny_train[:5]","3b48323a":"y_predict = exp.predict_model(model)\nplot_series(data, y_train, y_predict, labels=['All', 'Train', 'Test Predictions'])\nplt.grid()","31e67a89":"tuned_model = exp.tune_model(model,optimize = 'SMAPE')\ntuned_model","18b6ad7c":"exp.predict_model(tuned_model)","703291ab":"y_predict = exp.predict_model(tuned_model)\nplot_series(data, y_train, y_predict, labels=['All', 'Train', 'Test Predictions'])\nplt.grid()","4ddface0":"# Finalize Model\nfinal_model = exp.finalize_model(tuned_model)\n# Future Predictions\ny_pred_future = exp.predict_model(final_model, verbose=False)\n_=plot_series(data, y_pred_future, labels=['All', 'Future Pred (Unknown)'])\nplt.grid()","346ddca5":"# Test Set Predictions\ny_pred = exp.predict_model(tuned_model)\n\n# Finalize Model\nfinal_model = exp.finalize_model(tuned_model)\n\n# Future Predictions\ny_pred_future = exp.predict_model(final_model, verbose=False)\n\n# Plot Results\ny_train = exp.get_config(\"y_train\")\n_ = plot_series(data, y_train, y_pred, y_pred_future, labels=['All', 'Train', 'Test Predictions', 'Future Pred (Unknown)'])\nplt.grid()","c2fefa2b":"# "}}