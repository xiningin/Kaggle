{"cell_type":{"c42703af":"code","a61ff59e":"code","3e45e5a9":"code","53fe945a":"code","6aee9e00":"code","f480ccc2":"code","b1753f3f":"code","8af35117":"code","4655e274":"code","bffcd685":"code","3f5c0759":"code","3d1d0222":"code","7e800b37":"code","30be2bae":"markdown","d749cf8d":"markdown","9e1b7120":"markdown","c9eacfcf":"markdown"},"source":{"c42703af":"import os\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","a61ff59e":"DATA_PATH = '..\/input\/lish-moa\/'","3e45e5a9":"train_features = pd.read_csv(DATA_PATH + 'train_features.csv')\ntrain_target = pd.read_csv(DATA_PATH + 'train_targets_scored.csv')","53fe945a":"print('Target shape:', train_target.shape)\nprint(train_target.info())\ntrain_target.head()","6aee9e00":"train_target.plot(kind='hist', legend=None, figsize=(20,8), title='Target values')\nplt.show()","f480ccc2":"train_target.sum(axis=1).sort_values()","b1753f3f":"train_target.corr()","8af35117":"print('Shape:',train_features.shape)\nprint(train_features.info())\ntrain_features.head()","4655e274":"plt.figure(figsize=(25,8))\ncolumns = ['cp_dose', 'cp_type', 'cp_time']\nfor i, c in enumerate(columns, 1):\n    plt.subplot(1,3,i)\n    train_features[c].value_counts().plot(kind='bar', title=c)\nplt.show()","bffcd685":"g_columns = [c for c in train_features.columns if c.find('g-') > -1]\n\nplt.figure(figsize=(25,15))\nfunctions = {'Mean': np.mean,\n             'Standard deviation': np.std,\n             'Minimum': np.min,\n             'Maximum': np.max}\n\nfor i, (name, function) in enumerate(functions.items(),1):\n    plt.subplot(2,2,i)\n    function(train_features[g_columns]).plot(kind='hist', title=name)","3f5c0759":"c_columns = [c for c in train_features.columns if c.find('c-') > -1]\n\nplt.figure(figsize=(25,15))\nfunctions = {'Mean': np.mean,\n             'Standard deviation': np.std,\n             'Minimum': np.min,\n             'Maximum': np.max}\n\nfor i, (name, function) in enumerate(functions.items(),1):\n    plt.subplot(2,2,i)\n    function(train_features[c_columns]).plot(kind='hist', title=name)","3d1d0222":"\n\nplt.figure(figsize=(20,10))\ntrain_features[g_columns].mean(axis=0).plot(kind='hist', alpha=0.5)\ntrain_features[g_columns].median(axis=0).plot(kind='hist', alpha=0.5)\nplt.title('Average and Median of g-Features')\nplt.show()","7e800b37":"c_columns = [c for c in train_features.columns if c.find('c-') > -1]\n\nplt.figure(figsize=(20,10))\ntrain_features[c_columns].mean(axis=0).plot(kind='hist', alpha=0.5)\ntrain_features[c_columns].median(axis=0).plot(kind='hist', alpha=0.5)\nplt.title('Average and Median of c-Features')\nplt.show()","30be2bae":"Lets check if all values that need to be predicted are either 0 or 1","d749cf8d":"As we can see the `c-features` mean is skewed due the absence of several maximum values of +10 whereas in the case of `g-features` the minimum and maximum values have some certain balance, making both the mean and median to be centered at zero.","9e1b7120":"### Target","c9eacfcf":"### Features"}}