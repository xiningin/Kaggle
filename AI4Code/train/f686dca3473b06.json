{"cell_type":{"82b9c4f9":"code","6c9dd94e":"code","ea5774b4":"code","7cb45b69":"code","86b9e3ef":"code","ab22aacb":"code","25baba1c":"code","a86dd7c0":"code","3645f221":"code","03930ee1":"code","e69a1c0d":"code","c080ca16":"code","947f55cd":"code","ac4269c7":"code","2378d5fb":"code","9f97ced4":"code","93f63899":"code","cd2090f1":"code","3a7d0612":"code","48dcc316":"code","db19c372":"code","47d680f6":"code","af681c4b":"code","b3c9f0ec":"code","b4ade3b7":"code","104821e9":"code","654660ef":"code","ab7e1183":"code","b9458775":"code","355b7d3e":"code","0127e3d1":"code","8bc3883b":"markdown"},"source":{"82b9c4f9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","6c9dd94e":"import pandas as pd","ea5774b4":"df = pd.read_csv(\"..\/input\/insurance.csv\")","7cb45b69":"df.describe()","86b9e3ef":"df.shape","ab22aacb":"df.isna().sum()","25baba1c":"df.duplicated().sum()","a86dd7c0":"df.drop_duplicates(inplace = True)","3645f221":"df.duplicated().sum()","03930ee1":"from sklearn.preprocessing import LabelEncoder\nlabelencode = LabelEncoder()\ndf.iloc[:,4]= labelencode.fit_transform(df.iloc[:,4])","e69a1c0d":"df.head()","c080ca16":"df.describe()","947f55cd":"import matplotlib.pyplot as plt\nimport seaborn as sns\nage_outlier = sns.boxplot(df['age'])\nage_outlier.set_title('Dispersion of Age')\nplt.show(age_outlier)","ac4269c7":"bmi_outlier = sns.boxplot(df['bmi'])\nbmi_outlier.set_title('Dispersion of BMI')\nplt.show(age_outlier)","2378d5fb":"exp_outlier = sns.boxplot(df['expenses'])\nexp_outlier.set_title(\"Dispersion of Expenses\")\nplt.show(exp_outlier)","9f97ced4":"age_bmi_scatter = sns.scatterplot(x='age', y='bmi', data = df)\nage_bmi_scatter.set_title('Age and BMI')\nplt.show(age_bmi_scatter)","93f63899":"plt.figure(figsize=(15,10))\nax = sns.scatterplot(x='age',y='expenses',hue = 'bmi',size = 'bmi', data=df)\nax = ax.set_title(\"Age vs Expenses by BMI\")\nplt.xlabel(\"Age\")\nplt.ylabel(\"Expenses\")\nplt.show(ax)","cd2090f1":"plt.figure(figsize=(10,7))\nax = sns.scatterplot(x='age',y='expenses', hue='sex',style = 'sex',data=df)\nax.set_title(\"Age vs Expenses by Sex\")\nplt.show(ax)","3a7d0612":"df.corr()","48dcc316":"#Swarm plot shows how smoker feature is influencing the expeneses compare with smoker and non-smoker\nax = sns.swarmplot(x='smoker',y='expenses',data=df)\nax.set_title(\"Smoker vs Expenses\")\nplt.xlabel(\"Smoker (Yes - 1, No - 0)\")\nplt.ylabel(\"Expenses\")\nplt.show(ax)","db19c372":"from sklearn.linear_model import LinearRegression  #Import Linear regression model\nfrom sklearn.model_selection import train_test_split  #To split the dataset into Train and test randomly\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error, mean_squared_log_error, r2_score","47d680f6":"#These three features have relationship with expenses.\nx = df[['age','bmi','smoker']]\ny = df['expenses']\n#train_test_split() to split the dataset into train and test set at random.\n#test size data set should be 30% data\nX_train,X_test,Y_train, Y_test = train_test_split(x,y,test_size=0.3,random_state=42)\n#Creating an linear regression model object\nmodel = LinearRegression()\n#Training the model using training data set\nmodel.fit(X_train, Y_train) \n#X_train_predict = model.predict(X_train)\n#X_test_predict = model.predict(X_test)","af681c4b":"print(\"Intercept value:\", model.intercept_)\nprint(\"Coefficient values:\", model.coef_)","b3c9f0ec":"# Need to understand this syntax\ncoef_df = pd.DataFrame(list(zip(X_train.columns,model.coef_)), columns = ['Features','Predicted Coeff'])\ncoef_df\n#print(\"Features train data:\\n\",X_train.smoker)","b4ade3b7":"#Predicting the Y value from the train set and test set.\nY_train_predict = model.predict(X_train)\nY_train_predict[0:5]\n\nY_test_predict = model.predict(X_test)","104821e9":"#Plot to see the actual expenses and predicted expenses from Train data set\nax = sns.scatterplot(Y_train,Y_train_predict)\nax.set_title(\"Actual Expenses vs Predicted Expenses\")\nplt.xlabel(\"Actual Expenses\")\nplt.ylabel(\"Predicted Expenses\")\nplt.show(ax)","654660ef":"#Train and predict the Y_train for the feature 'smoker'\nsmoker_model = LinearRegression()\nsmoker_model.fit(X_train[['smoker']], Y_train)\nprint(\"intercept:\",smoker_model.intercept_, \"coeff:\", smoker_model.coef_)\n\n#print(\"Train - Mean squared error:\", np.mean((Y_train - model.predict(X_train)) ** 2))\nsmoker_df = pd.DataFrame(list(zip(Y_train, smoker_model.predict(X_train[['smoker']]))), columns = ['Actual Expenses','Predicted Expenses'])\nsmoker_df.head()\n#X_train['smoker'].shape","ab7e1183":"import numpy as np","b9458775":"#MSE for Train data set\nprint(\"MSE:\",np.sqrt(mean_squared_error(Y_train, Y_train_predict)))\nprint(\"MSE only for Smoker:\", np.sqrt(mean_squared_error(Y_train,smoker_model.predict(X_train[['smoker']]))))","355b7d3e":"#R-Squared value for Train data set\nprint(\"R-squared value:\",round(r2_score(Y_train, Y_train_predict),3))\nprint(\"R-squared value only for smoker:\", round(r2_score(Y_train,smoker_model.predict(X_train[['smoker']]))),3)","0127e3d1":"#Mean absolute error for Train data set\nprint(\"Mean absolute error:\",mean_absolute_error(Y_train, Y_train_predict))\nprint(\"Mean absolute Error only for Smoker:\", mean_absolute_error(Y_train,smoker_model.predict(X_train[['smoker']])))","8bc3883b":"df.head()"}}