{"cell_type":{"d49a4c9c":"code","d74d5156":"code","463b5c99":"code","55f857b5":"code","69da3196":"code","18f5772c":"code","414afb85":"code","08a38a64":"code","e89d8de3":"code","af104956":"code","1c17a038":"markdown"},"source":{"d49a4c9c":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom lightgbm import LGBMClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","d74d5156":"df_train = pd.read_csv('..\/input\/pceo-ml-2021summer\/train_data.csv')\ndf_test = pd.read_csv('..\/input\/pceo-ml-2021summer\/test_data.csv')","463b5c99":"y = df_train['cardio']\nX = df_train.drop(['cardio'],axis=1)","55f857b5":"train_x, test_x, train_y, test_y = train_test_split(X, y, test_size=0.2,random_state=42)","69da3196":"def new_feature(X_train):\n    X_train['bmi'] = X_train.weight \/ ((X_train.height\/100.0)**2)\n    hi = X_train.ap_hi >= 130\n    lo = X_train.ap_lo >= 80\n    X_train[\"high_bp\"] = ((hi.astype(int) + lo.astype(int)) == 2).astype(int)\n    return X_train","18f5772c":"train_x = new_feature(train_x)\ntrain_x.head()","414afb85":"model = LGBMClassifier()  \n\nmodel.fit(train_x,train_y,verbose=False)","08a38a64":"test_x = new_feature(test_x)\n\npreds = model.predict(test_x)\n\nacc = accuracy_score(test_y, preds)\nprint(acc)","e89d8de3":"df_test = new_feature(df_test)\npred = model.predict(df_test)\nresults = pd.DataFrame({'id':df_test['id'], 'cardio':pred})\nresults.head()","af104956":"results.to_csv('submission.csv', index=False)","1c17a038":"- bmi : \ud0a4\uc640 \ubab8\ubb34\uac8c\ub97c \uc774\uc6a9\ud574\uc11c BMI \uc9c0\uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.\n- high_bp : \uc2ec\ud608\uad00 \uc9c8\ud658\uc5d0 \uc704\ud5d8\ud55c 130\/80 \uc774\uc0c1\uc758 \ud608\uc555\uc744 \uac00\uc9c4 \ud658\uc790\ub4e4\uc744 1\ub85c \ud45c\uc2dc\ud569\ub2c8\ub2e4."}}