{"cell_type":{"1b7aeb5f":"code","adecce30":"code","5c520598":"code","b766525b":"code","fd89091e":"code","36337106":"code","adf4aa17":"code","c63f2668":"code","1249b5a7":"code","6a02d093":"code","2d885dca":"code","6d8e02f9":"code","73197f83":"code","c9904111":"code","284c38bb":"code","64371115":"code","fbb85ff4":"code","1f850577":"code","41fb745b":"code","a5727095":"code","17a31625":"code","af3000dc":"code","2f1b58f3":"code","46680091":"code","95a86067":"code","c5f15e07":"code","c42992fc":"code","02bf54a0":"code","813d42c2":"code","b3dcbc7c":"code","83b9c7ac":"markdown","5477e971":"markdown","8169f21f":"markdown"},"source":{"1b7aeb5f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","adecce30":"path = \"..\/input\/covid19-cases-caba\/cases_covid19_CABA.csv\"\ndf = pd.read_csv(path)","5c520598":"df.head()","b766525b":"df.shape","fd89091e":"df.isna().sum()","36337106":"df.dropna(inplace = True)","adf4aa17":"fig = plt.figure(figsize = (8, 4), dpi = 100, edgecolor = \"w\", frameon = True)\ndf[\"pandemic_day\"].hist(alpha = 0.75, bins = 100, label = \"Pandemic Day\")\nplt.show()","c63f2668":"sns.set(style=\"whitegrid\")\ndf[\"commune\"].value_counts().plot(kind=\"bar\", figsize=(8, 4), rot=0)\nplt.xlabel(\"Communes\")\nplt.ylabel(\"Amount of Cases\")","1249b5a7":"column_names = pd.Series(range(1, df[\"pandemic_day\"].max()-1))\ndf_final = pd.DataFrame(columns = column_names)\ndf_final[\"barrio\"] = pd.Series(df[\"neighborhood\"].unique()).sort_values()\ndf_final.set_index(\"barrio\", inplace = True)\nbarrios = pd.Series(df[\"neighborhood\"].unique()).sort_values()","6a02d093":"barrios = pd.Series(df[\"neighborhood\"].unique()).sort_values()","2d885dca":"for dia in df_final.columns:\n    for barrio in barrios:\n        casos = sum(np.where(((df[\"pandemic_day\"] == dia) & (df[\"neighborhood\"] == barrio)), 1, 0))\n        df_final.loc[barrio, dia] = casos","6d8e02f9":"df_final.head()","73197f83":"import folium","c9904111":"url = \"https:\/\/raw.githubusercontent.com\/brysonje\/barrios_portenos\/master\"\nbarrios_geo = f'{url}\/Barriosportenos.json'","284c38bb":"df_final = df_final.reset_index()","64371115":"df_final.head()","fbb85ff4":"m = folium.Map(location=[-34.615, -58.42], width=800, height=800, tiles='cartodbpositron', zoom_start=12)","1f850577":"dia = 112\nfolium.Choropleth(geo_data=barrios_geo, name='choropleth', data=df_final,\n    columns=[\"barrio\", dia], key_on='feature.properties.Name', fill_color='YlGnBu', fill_opacity=0.65,\n    line_opacity=0.2, legend_name='Cantidad de Contagios').add_to(m)\nfolium.LayerControl().add_to(m)\nm","41fb745b":"df_final.head()","a5727095":"df_final.set_index(\"barrio\", inplace = True)","17a31625":"df_final.head(2)","af3000dc":"TWeeks = pd.Series(range(1, 1 + int(df_final.shape[1]\/21)))\ncolumn_names = []\nfor TWeek in TWeeks:\n    column_names.append(\"TWeek\" + str(TWeek))\nfor name in column_names:\n    df_final[name] = pd.Series()","2f1b58f3":"df_final.head()","46680091":"def casos_semanales(barrio, semana):\n    casos = 0\n    inicio = 7 * semana - 6\n    fin = 7 * semana + 1\n    for i in range (inicio, fin):\n        casos = casos + df_final.loc[barrio][i]\n    return(casos)","95a86067":"for barrio in df_final.index:\n    for TWeek in column_names:\n        week = column_names.index(TWeek) + 1\n        df_final.at[barrio, TWeek] = casos_semanales(barrio, week)","c5f15e07":"df_final.head()","c42992fc":"df_final = df_final.reset_index()","02bf54a0":"df_final.head()","813d42c2":"m = folium.Map(location=[-34.615, -58.42], width=800, height=800, tiles='cartodbpositron', zoom_start=12)","b3dcbc7c":"TWeek = \"TWeek2\"\nfolium.Choropleth(geo_data=barrios_geo, name='choropleth', data=df_final,\n    columns=[\"barrio\", TWeek], key_on=\"feature.properties.Name\", fill_color='YlGnBu', fill_opacity=0.65,\n    line_opacity=0.2, legend_name='Cantidad de Contagios').add_to(m)\nfolium.LayerControl().add_to(m)\nm","83b9c7ac":"# End Third Part","5477e971":"# End First Part","8169f21f":"# End Second Part"}}