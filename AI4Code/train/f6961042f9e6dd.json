{"cell_type":{"17e6ec98":"code","be42f5f0":"code","6d8b7fbb":"code","6ffe9b85":"code","3a91dc77":"code","f1ea1724":"code","b6a95061":"code","1cf0b96f":"code","affce475":"code","206cbc40":"code","06921744":"code","40337b7f":"code","6e49267e":"code","1db6edb6":"code","2831f6ac":"code","e21dd343":"code","5b5cee8b":"code","ccc04603":"code","7b7a4a15":"code","4e98a677":"code","409b4548":"code","4fd89802":"code","8a0b01e4":"code","344fc6cd":"code","3b4ed8bf":"code","62c7f3e2":"code","1a976ed7":"code","2cfaa74b":"code","31d3bb51":"code","bfd1412c":"code","6963a041":"markdown","7ff733b8":"markdown","33d9e343":"markdown","4554ba42":"markdown","7ddd310c":"markdown","c3421e33":"markdown","43635d10":"markdown","e67016e0":"markdown","17c66817":"markdown","acddf63e":"markdown","9c7492a2":"markdown","de3a2f9d":"markdown","e090a87a":"markdown","ff4c74fa":"markdown","837b819c":"markdown","a6a5742d":"markdown","1f5dc264":"markdown","6b02f750":"markdown","d1f555a2":"markdown","55bbfb37":"markdown","381248e0":"markdown","00a7dfae":"markdown","801c8e06":"markdown","3ceb71af":"markdown","7c56281e":"markdown","c6c504d3":"markdown","249b6635":"markdown","51dbc11f":"markdown","a48543d5":"markdown","f8ef9f20":"markdown","dfe060c7":"markdown","d885af4e":"markdown","596f84b6":"markdown","a6e91414":"markdown","80d3d3bc":"markdown","db72d89c":"markdown","534ac2bc":"markdown","43504050":"markdown","bc07260a":"markdown","0d13b533":"markdown","9d2407cc":"markdown","4471e2b7":"markdown","a2919356":"markdown","1b1e8a21":"markdown","c89583ff":"markdown"},"source":{"17e6ec98":"# Importing libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom plotly import tools\nimport plotly.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\nfrom sklearn.cluster import KMeans\nimport math\nimport warnings\nwarnings.filterwarnings('ignore')\n# Importing data\ndf = pd.read_csv('..\/input\/2016 School Explorer.csv')\nhigh_school_df = pd.read_csv('..\/input\/D5 SHSAT Registrations and Testers.csv')","be42f5f0":"df = df.iloc[:,3:]\ndf.sample(5)","6d8b7fbb":"df[\"School Income Estimate\"] = df[\"School Income Estimate\"].replace('[\\$,]', '', regex=True).astype(float)\ncolor_brewer = ['#57B8FF','#B66D0D','#009FB7','#FBB13C','#FE6847','#4FB5A5','#8C9376','#F29F60','#8E1C4A','#85809B','#515B5D','#9EC2BE','#808080','#9BB58E','#5C0029','#151515','#A63D40','#E9B872','#56AA53','#CE6786','#449339','#2176FF','#348427','#671A31','#106B26','008DD5','#034213','#BC2F59','#939C44','#ACFCD9','#1D3950','#9C5414','#5DD9C1','#7B6D49','#8120FF','#F224F2','#C16D45','#8A4F3D','#616B82','#443431','#340F09']\ndef floater(x):\n    return float(x.strip('%'))\n\ndf[\"Percent Asian\"] = df[\"Percent Asian\"].astype(str).apply(floater)\ndf[\"Percent Black\"] = df[\"Percent Black\"].astype(str).apply(floater)\ndf[\"Percent Hispanic\"] = df[\"Percent Hispanic\"].astype(str).apply(floater)\ndf[\"Percent White\"] = df[\"Percent White\"].astype(str).apply(floater)\ndf[\"Percent Others\"] = (df[\"Percent Black\"] + df[\"Percent Hispanic\"] + df[\"Percent White\"] + df[\"Percent Asian\"]).sub(100).mul(-1)\ndf[\"Rigorous Instruction %\"] = df[\"Rigorous Instruction %\"].astype(str).apply(floater)\ndf[\"Collaborative Teachers %\"] = df[\"Collaborative Teachers %\"].astype(str).apply(floater)\ndf[\"Supportive Environment %\"] = df[\"Supportive Environment %\"].astype(str).apply(floater)\ndf[\"Effective School Leadership %\"] = df[\"Effective School Leadership %\"].astype(str).apply(floater)\ndf[\"Strong Family-Community Ties %\"] = df[\"Strong Family-Community Ties %\"].astype(str).apply(floater)\ndf[\"Trust %\"] = df[\"Trust %\"].astype(str).apply(floater)\ndf[\"Student Attendance Rate\"] = df[\"Student Attendance Rate\"].astype(str).apply(floater)\ndf[\"Percent of Students Chronically Absent\"] = df[\"Percent of Students Chronically Absent\"].astype(str).apply(floater)","6ffe9b85":"df[\"Economic Need Index\"] = df[\"Economic Need Index\"].fillna(df[\"Economic Need Index\"].mean())\ndf[\"School Income Estimate\"] = df[\"School Income Estimate\"].fillna(df[\"School Income Estimate\"].mean())\ndf[\"Student Attendance Rate\"] = df[\"Student Attendance Rate\"].fillna(df[\"Student Attendance Rate\"].mean())\ndf[\"Percent of Students Chronically Absent\"] = df[\"Percent of Students Chronically Absent\"].fillna(df[\"Percent of Students Chronically Absent\"].mean())\ndf[\"Rigorous Instruction %\"] = df[\"Rigorous Instruction %\"].fillna(df[\"Rigorous Instruction %\"].mean())\ndf[\"Collaborative Teachers %\"] = df[\"Collaborative Teachers %\"].fillna(df[\"Collaborative Teachers %\"].mean())\ndf[\"Average ELA Proficiency\"] = df[\"Average ELA Proficiency\"].fillna(df[\"Average ELA Proficiency\"].mean())\ndf[\"Average Math Proficiency\"] = df[\"Average Math Proficiency\"].fillna(df[\"Average Math Proficiency\"].mean())\ndf[\"Percent Asian\"] = df[\"Percent Asian\"].fillna(df[\"Percent Asian\"].mean())\ndf[\"Percent Black\"] = df[\"Percent Black\"].fillna(df[\"Percent Black\"].mean())\ndf[\"Percent Hispanic\"] = df[\"Percent Hispanic\"].fillna(df[\"Percent Hispanic\"].mean())\ndf[\"Percent White\"] = df[\"Percent White\"].fillna(df[\"Percent White\"].mean())\ndf[\"Percent Others\"] = df[\"Percent Others\"].fillna(df[\"Percent Others\"].mean())\ndf[\"Rigorous Instruction %\"] = df[\"Rigorous Instruction %\"].fillna(df[\"Rigorous Instruction %\"].mean())\ndf[\"Collaborative Teachers %\"] = df[\"Collaborative Teachers %\"].fillna(df[\"Collaborative Teachers %\"].mean())\ndf[\"Supportive Environment %\"] = df[\"Supportive Environment %\"].fillna(df[\"Supportive Environment %\"].mean())\ndf[\"Effective School Leadership %\"] = df[\"Effective School Leadership %\"].fillna(df[\"Effective School Leadership %\"].mean())\ndf[\"Strong Family-Community Ties %\"] = df[\"Strong Family-Community Ties %\"].fillna(df[\"Strong Family-Community Ties %\"].mean())\ndf[\"Trust %\"] = df[\"Trust %\"].fillna(df[\"Trust %\"].mean())","3a91dc77":"figure = ff.create_distplot([df[\"Economic Need Index\"]],['ENI'],bin_size=0.01)\niplot(figure, filename='ENI distplot')","f1ea1724":"t2 = go.Box(y=df[\"Economic Need Index\"],name=\"Box plot\")\nt1 = go.Violin(y=df[\"Economic Need Index\"],name=\"Violin plot\")\nfig = tools.make_subplots(rows=1, cols=2, shared_yaxes=True, print_grid=False)\n\nfig.append_trace(t1, 1, 1)\nfig.append_trace(t2, 1, 2)\n\nfig['layout'].update(height=600, width=800, title='Economic Need Index distribution')\niplot(fig, filename='ENI Box Violin')","b6a95061":"colorscale = ['#7A4579', '#D56073', 'rgb(236,158,105)', (1, 1, 0.2), (0.98,0.98,0.98)]\nfig = ff.create_2d_density(\n    df[\"Economic Need Index\"], df[\"School Income Estimate\"], colorscale=colorscale,\n    hist_color='rgb(255, 237, 222)', point_size=3, title=\"Economic Need Index vs. School Income Estimate\"\n)\nfig.layout.yaxis.update({'title': 'School Income Estimate'})\nfig.layout.xaxis.update({'title': 'Economic Need Index'})\niplot(fig, filename='histogram_subplots')","1cf0b96f":"dframe = [('City', df[\"City\"].value_counts(sort=True).index),('Mean ENI',[round(df[\"Economic Need Index\"][df[\"City\"]==i].mean(),3) for i in list(df[\"City\"].value_counts(sort=True).index)])]\ndframe = pd.DataFrame.from_items(dframe)\ndframe = dframe.sort_values(['Mean ENI'],ascending=[False],axis=0)\ndata = [go.Bar(\n            x=dframe[\"City\"],\n            y=dframe[\"Mean ENI\"],\n            text=dframe[\"Mean ENI\"],\n            textposition = 'auto',\n            marker=dict(\n                color='rgb(158,202,225)',\n                line=dict(\n                    color='rgb(8,48,107)',\n                    width=1.5),\n            ),\n            opacity=0.6\n        )]\n\niplot(data, filename='bar-direct-labels')","affce475":"trace0 = go.Box(x=df[\"School Income Estimate\"][df[\"Community School?\"]==\"Yes\"],name=\"Community School\",boxmean=True)\ntrace1 = go.Box(x=df[\"School Income Estimate\"][df[\"Community School?\"]==\"No\"],name=\"Private School\",boxmean=True)\ndata = [trace0, trace1]\nlayout = go.Layout(\n    title = \"Box Plot of estimated income of Community and Private schools\",\n    margin = go.Margin(l=115)\n)\nfig = go.Figure(data=data,layout=layout)\niplot(fig)","206cbc40":"data = [\n    {\n        'x': df[\"Latitude\"],\n        'y': df[\"Longitude\"],\n        'text': df[\"School Name\"],\n        'mode': 'markers',\n        'marker': {\n            'color': df[\"Economic Need Index\"].mul(100),\n            'size': df[\"School Income Estimate\"].div(5000),\n            'showscale': True\n        }\n    }\n]\n\niplot(data, filename='scatter-colorscale')","06921744":"data = []\ncity_list = list(df[\"City\"].value_counts().index)\nfor i in city_list:\n    data.append(\n        go.Bar(\n          y = [df[\"Percent Asian\"][df[\"City\"] == i].mean(), df[\"Percent Black\"][df[\"City\"] == i].mean(), df[\"Percent Hispanic\"][df[\"City\"] == i].mean(), df[\"Percent White\"][df[\"City\"] == i].mean(), df[\"Percent Others\"][df[\"City\"] == i].mean()],\n          x = ['Asian','Black','Hispanic', 'White', 'Others'],\n          name = i,\n          opacity = 0.6\n        )\n    )\nk=0\nfig = tools.make_subplots(rows=15, cols=3, subplot_titles=city_list, print_grid=False)\nfor i in range(1,16):\n    for j in range(1,4):\n        fig.append_trace(data[k], i, j)\n        k = k + 1\nfig['layout'].update(height=2000, title='Average racial distribution in different cities',showlegend=False)\niplot(fig, filename='make-subplots-multiple-with-titles')\n","40337b7f":"fig = ff.create_scatterplotmatrix(df.loc[:,[\"Economic Need Index\",\"Percent Asian\",\"Percent Black\",\"Percent Hispanic\",\"Percent White\",\"Percent Others\"]], index='Economic Need Index', diag='box', size=2, height=800, width=800)\niplot(fig, filename ='Scatterplotmatrix')","6e49267e":"data = [\n    go.Scatterpolar(\n      r = [df[\"Percent Asian\"][df[\"Community School?\"] == \"Yes\"].mean(), df[\"Percent Black\"][df[\"Community School?\"] == \"Yes\"].mean(), df[\"Percent Hispanic\"][df[\"Community School?\"] == \"Yes\"].mean(), df[\"Percent White\"][df[\"Community School?\"] == \"Yes\"].mean(), df[\"Percent Others\"][df[\"Community School?\"] == \"Yes\"].mean(), df[\"Percent Asian\"][df[\"Community School?\"] == \"Yes\"].mean()],\n      theta = ['Asian','Black','Hispanic', 'White', 'Others', 'Asian'],\n      fill = 'toself',\n      name = 'Community School'\n    ),\n    go.Scatterpolar(\n      r = [df[\"Percent Asian\"][df[\"Community School?\"] == \"No\"].mean(), df[\"Percent Black\"][df[\"Community School?\"] == \"No\"].mean(), df[\"Percent Hispanic\"][df[\"Community School?\"] == \"No\"].mean(), df[\"Percent White\"][df[\"Community School?\"] == \"No\"].mean(), df[\"Percent Others\"][df[\"Community School?\"] == \"No\"].mean(), df[\"Percent Asian\"][df[\"Community School?\"] == \"No\"].mean()],\n      theta = ['Asian','Black','Hispanic', 'White', 'Others', 'Asian'],\n      fill = 'toself',\n      name = 'Not Community School'\n    )\n]\n\nlayout = go.Layout(\n  polar = dict(\n    radialaxis = dict(\n      visible = True,\n      range = [0, 60]\n    )\n  ),\n  showlegend = True,\n  title = \"Racial distribution in community and private schools\"\n)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig, filename = \"radar\/multiple\")","1db6edb6":"figure = ff.create_distplot([df[\"Rigorous Instruction %\"]],['RI%'],bin_size=1,colors = ['#F0B100'])\niplot(figure, filename='RI distplot')","2831f6ac":"trace1 = go.Bar(\n    y=df[\"Rigorous Instruction Rating\"].value_counts(sort=True).index,\n    x=df[\"Rigorous Instruction Rating\"].value_counts(sort=True).values,\n    text=df[\"Rigorous Instruction Rating\"].value_counts(sort=True).values,\n    textposition='auto',\n    name='Frequency',\n    orientation = 'h',\n    marker = dict(\n        color = 'rgba(246, 78, 139, 0.6)',\n        line = dict(\n            color = 'rgba(246, 78, 139, 1.0)',\n            width = 3)\n    )\n)\ntrace2 = go.Bar(\n    y=list(df[\"Rigorous Instruction Rating\"].unique()),\n    x=[df[\"Rigorous Instruction %\"][df[\"Rigorous Instruction Rating\"] == i].mean() for i in list(df[\"Rigorous Instruction Rating\"].unique())],\n    text=[df[\"Rigorous Instruction %\"][df[\"Rigorous Instruction Rating\"] == i].mean() for i in list(df[\"Rigorous Instruction Rating\"].unique())],\n    textposition='auto',\n    name='Mean',\n    orientation = 'h',\n    marker = dict(\n        color = 'rgba(58, 71, 80, 0.6)',\n        line = dict(\n            color = 'rgba(58, 71, 80, 1.0)',\n            width = 3)\n    )\n)\n\ntrace3 = go.Bar(\n    y=list(df[\"Rigorous Instruction Rating\"].unique()),\n    x=[df[\"Rigorous Instruction %\"][df[\"Rigorous Instruction Rating\"] == i].median() for i in list(df[\"Rigorous Instruction Rating\"].unique())],\n    text=[df[\"Rigorous Instruction %\"][df[\"Rigorous Instruction Rating\"] == i].median() for i in list(df[\"Rigorous Instruction Rating\"].unique())],\n    textposition='auto',\n    name='Median',\n    orientation = 'h',\n    marker = dict(\n        color = 'rgba(0, 100, 100, 0.6)',\n        line = dict(\n            color = 'rgba(0, 100, 100, 1.0)',\n            width = 3)\n    )\n)\n\nfig = tools.make_subplots(rows=1, cols=3, print_grid=False, shared_yaxes=True)\n\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 1, 2)\nfig.append_trace(trace3, 1, 3)\n\nfig['layout'].update(height=400, width=800, title='Statistical analysis of rigorous instruction rating',margin=go.Margin(l=100),yaxis=dict(tickangle=45))\niplot(fig, filename='simple-subplot-with-annotations')","e21dd343":"figure = ff.create_distplot([df[\"Collaborative Teachers %\"]],['CT%'],bin_size=1,colors = ['#E84855'])\niplot(figure, filename='CT distplot')","5b5cee8b":"trace1 = go.Bar(\n    y=df[\"Collaborative Teachers Rating\"].value_counts(sort=True).index,\n    x=df[\"Collaborative Teachers Rating\"].value_counts(sort=True).values,\n    text=df[\"Collaborative Teachers Rating\"].value_counts(sort=True).values,\n    textposition='auto',\n    name='Frequency',\n    orientation = 'h',\n    marker = dict(\n        color = 'rgba(232, 72, 85, 0.6)',\n        line = dict(\n            color = 'rgba(232, 72, 85, 1.0)',\n            width = 3)\n    )\n)\ntrace2 = go.Bar(\n    y=list(df[\"Collaborative Teachers Rating\"].unique()),\n    x=[df[\"Collaborative Teachers %\"][df[\"Collaborative Teachers Rating\"] == i].mean() for i in list(df[\"Collaborative Teachers Rating\"].unique())],\n    text=[df[\"Collaborative Teachers %\"][df[\"Collaborative Teachers Rating\"] == i].mean() for i in list(df[\"Collaborative Teachers Rating\"].unique())],\n    textposition='auto',\n    name='Mean',\n    orientation = 'h',\n    marker = dict(\n        color = 'rgba(255, 155, 113, 0.6)',\n        line = dict(\n            color = 'rgba(255, 155, 113, 1.0)',\n            width = 3)\n    )\n)\n\ntrace3 = go.Bar(\n    y=list(df[\"Collaborative Teachers Rating\"].unique()),\n    x=[df[\"Collaborative Teachers %\"][df[\"Collaborative Teachers Rating\"] == i].median() for i in list(df[\"Collaborative Teachers Rating\"].unique())],\n    text=[df[\"Collaborative Teachers %\"][df[\"Collaborative Teachers Rating\"] == i].median() for i in list(df[\"Collaborative Teachers Rating\"].unique())],\n    textposition='auto',\n    name='Median',\n    orientation = 'h',\n    marker = dict(\n        color = 'rgba(252, 176, 64, 0.6)',\n        line = dict(\n            color = 'rgba(252, 176, 64, 1.0)',\n            width = 3)\n    )\n)\n\nfig = tools.make_subplots(rows=1, cols=3, print_grid=False, shared_yaxes=True)\n\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 1, 2)\nfig.append_trace(trace3, 1, 3)\n\nfig['layout'].update(height=400, width=800, title='Statistical analysis of collaborative teachers rating',margin=go.Margin(l=100),yaxis=dict(tickangle=45))\niplot(fig, filename='simple-subplot-with-annotations')","ccc04603":"figure = ff.create_distplot([df[\"Average ELA Proficiency\"],df[\"Average Math Proficiency\"]],['ELA proficiency','Math proficiency'],bin_size=0.05,colors = ['#093A3E','#64E9EE'])\niplot(figure, filename='CT distplot')","7b7a4a15":"colorscale = ['#1D7874', '#1C2541', '#E4572E', \"#B5303B\", '#DCF2F2']\nfig = ff.create_2d_density(\n    df[\"Average ELA Proficiency\"], df[\"Average Math Proficiency\"], colorscale=colorscale,\n    hist_color='#1D7874', point_size=3, title=\"ELA proficiency vs Math proficiency\"\n)\nfig.layout.yaxis.update({'title': 'Math proficiency'})\nfig.layout.xaxis.update({'title': 'ELA proficiency'})\niplot(fig, filename='histogram_subplots')","4e98a677":"figure = ff.create_distplot([df[\"Supportive Environment %\"]],['Supportive Environment'],bin_size=1,colors = ['#E88A20'])\niplot(figure, filename='SE distplot')","409b4548":"trace1 = go.Bar(\n    y=df[\"Supportive Environment Rating\"].value_counts(sort=True).index,\n    x=df[\"Supportive Environment Rating\"].value_counts(sort=True).values,\n    text=df[\"Supportive Environment Rating\"].value_counts(sort=True).values,\n    textposition='auto',\n    name='Frequency',\n    orientation = 'h',\n    marker = dict(\n        color = 'rgba(62, 66, 75, 0.6)',\n        line = dict(\n            color = 'rgba(62, 66, 75, 1)',\n            width = 3)\n    )\n)\ntrace2 = go.Bar(\n    y=list(df[\"Supportive Environment Rating\"].unique()),\n    x=[df[\"Supportive Environment %\"][df[\"Supportive Environment Rating\"] == i].mean() for i in list(df[\"Supportive Environment Rating\"].unique())],\n    text=[df[\"Supportive Environment %\"][df[\"Supportive Environment Rating\"] == i].mean() for i in list(df[\"Supportive Environment Rating\"].unique())],\n    textposition='auto',\n    name='Mean',\n    orientation = 'h',\n    marker = dict(\n        color = 'rgba(232, 138, 32, 0.6)',\n        line = dict(\n            color = 'rgba(232, 138, 32, 1)',\n            width = 3)\n    )\n)\n\ntrace3 = go.Bar(\n    y=list(df[\"Supportive Environment Rating\"].unique()),\n    x=[df[\"Supportive Environment %\"][df[\"Supportive Environment Rating\"] == i].median() for i in list(df[\"Supportive Environment Rating\"].unique())],\n    text=[df[\"Supportive Environment %\"][df[\"Supportive Environment Rating\"] == i].median() for i in list(df[\"Supportive Environment Rating\"].unique())],\n    textposition='auto',\n    name='Median',\n    orientation = 'h',\n    marker = dict(\n        color = 'rgba(243, 186, 50, 0.6)',\n        line = dict(\n            color = 'rgba(243, 186, 50, 1)',\n            width = 3)\n    )\n)\n\nfig = tools.make_subplots(rows=1, cols=3, print_grid=False, shared_yaxes=True)\n\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 1, 2)\nfig.append_trace(trace3, 1, 3)\n\nfig['layout'].update(height=400, width=800, title='Statistical analysis of Supportive Environment rating',margin=go.Margin(l=100),yaxis=dict(tickangle=45))\niplot(fig, filename='simple-subplot-with-annotations')","4fd89802":"figure = ff.create_distplot([df[\"Effective School Leadership %\"]],['Effective School Leadership'],bin_size=1,colors = ['#FFE066'])\niplot(figure, filename='ESL distplot')","8a0b01e4":"trace1 = go.Bar(\n    y=df[\"Effective School Leadership Rating\"].value_counts(sort=True).index,\n    x=df[\"Effective School Leadership Rating\"].value_counts(sort=True).values,\n    text=df[\"Effective School Leadership Rating\"].value_counts(sort=True).values,\n    textposition='auto',\n    name='Frequency',\n    orientation = 'h',\n    marker = dict(\n        color = 'rgba(215, 38, 56, 0.6)',\n        line = dict(\n            color = 'rgba(215, 38, 56, 1)',\n            width = 3)\n    )\n)\ntrace2 = go.Bar(\n    y=list(df[\"Effective School Leadership Rating\"].unique()),\n    x=[df[\"Effective School Leadership %\"][df[\"Effective School Leadership Rating\"] == i].mean() for i in list(df[\"Effective School Leadership Rating\"].unique())],\n    text=[df[\"Effective School Leadership %\"][df[\"Effective School Leadership Rating\"] == i].mean() for i in list(df[\"Effective School Leadership Rating\"].unique())],\n    textposition='auto',\n    name='Mean',\n    orientation = 'h',\n    marker = dict(\n        color = 'rgba(244, 157, 55, 0.6)',\n        line = dict(\n            color = 'rgba(244, 157, 55, 1)',\n            width = 3)\n    )\n)\n\ntrace3 = go.Bar(\n    y=list(df[\"Effective School Leadership Rating\"].unique()),\n    x=[df[\"Effective School Leadership %\"][df[\"Effective School Leadership Rating\"] == i].median() for i in list(df[\"Effective School Leadership Rating\"].unique())],\n    text=[df[\"Effective School Leadership %\"][df[\"Effective School Leadership Rating\"] == i].median() for i in list(df[\"Effective School Leadership Rating\"].unique())],\n    textposition='auto',\n    name='Median',\n    orientation = 'h',\n    marker = dict(\n        color = 'rgba(65, 105, 225, 0.6)',\n        line = dict(\n            color = 'rgba(65, 105, 225, 1)',\n            width = 3)\n    )\n)\n\nfig = tools.make_subplots(rows=1, cols=3, print_grid=False, shared_yaxes=True)\n\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 1, 2)\nfig.append_trace(trace3, 1, 3)\n\nfig['layout'].update(height=400, width=800, title='Statistical analysis of Effective School Leadership rating',margin=go.Margin(l=100),yaxis=dict(tickangle=45))\niplot(fig, filename='simple-subplot-with-annotations')","344fc6cd":"figure = ff.create_distplot([df[\"Strong Family-Community Ties %\"]],['Strong Family-Community Ties'],bin_size=1,colors = ['#59CD90'])\niplot(figure, filename='SFCT distplot')","3b4ed8bf":"trace1 = go.Bar(\n    y=df[\"Strong Family-Community Ties Rating\"].value_counts(sort=True).index,\n    x=df[\"Strong Family-Community Ties Rating\"].value_counts(sort=True).values,\n    text=df[\"Strong Family-Community Ties Rating\"].value_counts(sort=True).values,\n    textposition='auto',\n    name='Frequency',\n    orientation = 'h',\n    marker = dict(\n        color = 'rgba(249, 12, 74, 0.6)',\n        line = dict(\n            color = 'rgba(249, 12, 74, 1)',\n            width = 3)\n    )\n)\ntrace2 = go.Bar(\n    y=list(df[\"Strong Family-Community Ties Rating\"].unique()),\n    x=[df[\"Strong Family-Community Ties %\"][df[\"Strong Family-Community Ties Rating\"] == i].mean() for i in list(df[\"Strong Family-Community Ties Rating\"].unique())],\n    text=[df[\"Strong Family-Community Ties %\"][df[\"Strong Family-Community Ties Rating\"] == i].mean() for i in list(df[\"Strong Family-Community Ties Rating\"].unique())],\n    textposition='auto',\n    name='Mean',\n    orientation = 'h',\n    marker = dict(\n        color = 'rgba(75, 183, 236, 0.6)',\n        line = dict(\n            color = 'rgba(75, 183, 236, 1)',\n            width = 3)\n    )\n)\n\ntrace3 = go.Bar(\n    y=list(df[\"Strong Family-Community Ties Rating\"].unique()),\n    x=[df[\"Strong Family-Community Ties %\"][df[\"Strong Family-Community Ties Rating\"] == i].median() for i in list(df[\"Strong Family-Community Ties Rating\"].unique())],\n    text=[df[\"Strong Family-Community Ties %\"][df[\"Strong Family-Community Ties Rating\"] == i].median() for i in list(df[\"Strong Family-Community Ties Rating\"].unique())],\n    textposition='auto',\n    name='Median',\n    orientation = 'h',\n    marker = dict(\n        color = 'rgba(162, 59, 114, 0.6)',\n        line = dict(\n            color = 'rgba(162, 59, 114, 1)',\n            width = 3)\n    )\n)\n\nfig = tools.make_subplots(rows=1, cols=3, print_grid=False, shared_yaxes=True)\n\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 1, 2)\nfig.append_trace(trace3, 1, 3)\n\nfig['layout'].update(height=400, width=800, title='Statistical analysis of Strong Family-Community Ties rating',margin=go.Margin(l=100),yaxis=dict(tickangle=45))\niplot(fig, filename='simple-subplot-with-annotations')","62c7f3e2":"figure = ff.create_distplot([df[\"Trust %\"]],['Trust'],bin_size=1,colors = ['#453E54'])\niplot(figure, filename='Trust distplot')","1a976ed7":"trace1 = go.Bar(\n    y=df[\"Trust Rating\"].value_counts(sort=True).index,\n    x=df[\"Trust Rating\"].value_counts(sort=True).values,\n    text=df[\"Trust Rating\"].value_counts(sort=True).values,\n    textposition='auto',\n    name='Frequency',\n    orientation = 'h',\n    marker = dict(\n        color = 'rgba(255, 127, 80, 0.6)',\n        line = dict(\n            color = 'rgba(255, 127, 80, 1)',\n            width = 3)\n    )\n)\ntrace2 = go.Bar(\n    y=list(df[\"Trust Rating\"].unique()),\n    x=[df[\"Trust %\"][df[\"Trust Rating\"] == i].mean() for i in list(df[\"Trust Rating\"].unique())],\n    text=[df[\"Trust %\"][df[\"Trust Rating\"] == i].mean() for i in list(df[\"Trust Rating\"].unique())],\n    textposition='auto',\n    name='Mean',\n    orientation = 'h',\n    marker = dict(\n        color = 'rgba(240, 101, 67, 0.6)',\n        line = dict(\n            color = 'rgba(240, 101, 67, 1)',\n            width = 3)\n    )\n)\n\ntrace3 = go.Bar(\n    y=list(df[\"Trust Rating\"].unique()),\n    x=[df[\"Trust %\"][df[\"Trust Rating\"] == i].median() for i in list(df[\"Trust Rating\"].unique())],\n    text=[df[\"Trust %\"][df[\"Trust Rating\"] == i].median() for i in list(df[\"Trust Rating\"].unique())],\n    textposition='auto',\n    name='Median',\n    orientation = 'h',\n    marker = dict(\n        color = 'rgba(255, 180, 30, 0.6)',\n        line = dict(\n            color = 'rgba(255, 180, 30, 1)',\n            width = 3)\n    )\n)\n\nfig = tools.make_subplots(rows=1, cols=3, print_grid=False, shared_yaxes=True)\n\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 1, 2)\nfig.append_trace(trace3, 1, 3)\n\nfig['layout'].update(height=400, width=800, title='Statistical analysis of Trust rating',margin=go.Margin(l=100),yaxis=dict(tickangle=45))\niplot(fig, filename='simple-subplot-with-annotations')","2cfaa74b":"d = df.loc[:,[\"Economic Need Index\",\"School Income Estimate\",\"Student Attendance Rate\",\"Percent of Students Chronically Absent\",\"Percent Asian\",\"Percent Black\",\"Percent Hispanic\",\"Percent White\",\"Rigorous Instruction %\",\"Collaborative Teachers %\",\"Supportive Environment %\",\"Effective School Leadership %\",\"Strong Family-Community Ties %\",\"Trust %\"]]\nd = d.convert_objects(convert_numeric=True)","31d3bb51":"wcss = []\nfor i in range(1,11):\n    kmeans = KMeans(n_clusters=i,init='k-means++',max_iter=300,n_init=10,random_state=0)\n    kmeans.fit(d)\n    wcss.append(kmeans.inertia_)\n\ntrace = go.Scatter(\n    x = [i for i in range(1,11)],\n    y = wcss\n)\ndata = [trace]\niplot(data, filename='elbow-line')","bfd1412c":"kmeans = KMeans(n_clusters=4,init='k-means++',max_iter=300,n_init=10,random_state=0) \ny_kmeans = kmeans.fit_predict(d)\nd = d.as_matrix(columns=None)\ntrace0 = go.Scatter(\n    x = d[y_kmeans == 0,0],\n    y = d[y_kmeans == 0,1],\n    mode = 'markers',\n    name = 'Cluster 1'\n)\ntrace1 = go.Scatter(\n    x = d[y_kmeans == 1,0],\n    y = d[y_kmeans == 1,1],\n    mode = 'markers',\n    name = 'Cluster 2'\n)\ntrace2 = go.Scatter(\n    x = d[y_kmeans == 2,0],\n    y = d[y_kmeans == 2,1],\n    mode = 'markers',\n    name = 'Cluster 3'\n)\ntrace3 = go.Scatter(\n    x = d[y_kmeans == 3,0],\n    y = d[y_kmeans == 3,1],\n    mode = 'markers',\n    name = 'Cluster 4'\n)\ndata = [trace0, trace1, trace2, trace3]\niplot(data, filename='line-mode')","6963a041":"# <a id='5'>5. Data cleaning<\/a>","7ff733b8":"# <a id='4'>4. Data preparation<\/a>","33d9e343":"### <a id='12.2'>12.2 Supportive Environment ratings statistical analysis<\/a>","4554ba42":"### <a id='11.2'>11.2 ELA proficiency vs math proficiency distribution<\/a>","7ddd310c":"### <a id='9.2'>9.2 Rigorous instruction ratings statistical analysis<\/a>","c3421e33":"### <a id='14.2'>14.2 Strong Family-Community Ties ratings statistical analysis<\/a>","43635d10":"### <a id='6.3'>6.3 Average Economic Need Index in different cities<\/a>","e67016e0":"### <a id='7.1'>7.1 School Income distribution for community schools<\/a>","17c66817":"### <a id='10.1'>10.1 Collaborative teachers % distribution<\/a>","acddf63e":"### <a id='7.2'>7.2 Bubble chart depicting estimated income and economic need index on map of school locations<\/a>","9c7492a2":"### <a id='13.2'>13.2 Effective School Leadership ratings statistical analysis<\/a>","de3a2f9d":"# <a id='1'>1. Introduction<\/a>\nPASSNYC is a not-for-profit organization that facilitates a collective impact that is dedicated to broadening educational opportunities for New York City's talented and underserved students. New York City is home to some of the most impressive educational institutions in the world, yet in recent years, the City\u2019s specialized high schools - institutions with historically transformative impact on student outcomes - have seen a shift toward more homogeneous student body demographics.\n\nPASSNYC uses public data to identify students within New York City\u2019s under-performing school districts and, through consulting and collaboration with partners, aims to increase the diversity of students taking the Specialized High School Admissions Test (SHSAT). By focusing efforts in under-performing areas that are historically underrepresented in SHSAT registration, we will help pave the path to specialized high schools for a more diverse group of students.\n\n","e090a87a":"Economic Need Index and School Income Estimate are inversely proportional to each other. More the economic need index lesser the estimated income.","ff4c74fa":"# <a id='10'>10. Collaborative Teachers analysis<\/a>","837b819c":"# <a id='9'>9. Rigorous instruction analysis<\/a>","a6a5742d":"### <a id='11.1'>11.1 ELA and math proficiency distribution<\/a>","1f5dc264":"### <a id='14.1'>14.1 Strong Family-Community Ties % distribution<\/a>","6b02f750":"# <a id='13'>13. Effective School Leadership analysis<\/a>","d1f555a2":"### <a id='16.1'>16.1 Elbow method<\/a>","55bbfb37":"### <a id='10.2'>10.2 Collaborative teachers ratings statistical analysis<\/a>","381248e0":"Schools in Rockaway, Bronx and Arverne are in dire need of financial help while Whitestone, Little Neck and Douglaston are financially stable.","00a7dfae":"# <a id='12'>12. Supportive Environment analysis<\/a>","801c8e06":"# <a id='6'>6. Economic Need Index<\/a>","3ceb71af":"### <a id='9.1'>9.1 Rigorous instruction % distribution<\/a>","7c56281e":"### <a id='6.2'>6.2 Economic Need Index vs. School Income Estimate<\/a>","c6c504d3":"### <a id='16.2'>16.2 KMeans clustering implementation and visualization<\/a>","249b6635":"# <a id='8'>8. Racial distribution analysis<\/a>","51dbc11f":"# <a id='7'>7. School Income Estimate<\/a>","a48543d5":"# <a id='11'>11. ELA and math proficiency analysis<\/a>","f8ef9f20":"# <a id='3'>3. Data Impressions<\/a>","dfe060c7":"### <a id='15.2'>15.2 Trust ratings statistical analysis<\/a>","d885af4e":"<img src=\"http:\/\/static1.squarespace.com\/static\/5576f1c0e4b08f31a497b582\/t\/5576fcf6e4b0a6d0afa92d0f\/1527185421758\/\">","596f84b6":"### <a id='13.1'>13.1 Effective School Leadership % distribution<\/a>","a6e91414":"### <a id='8.2'>8.2 Comparing distribution of races with each other with Economic Need Index<\/a>","80d3d3bc":"# <a id='14'>14. Strong Family-Community Ties analysis<\/a>","db72d89c":"# <a id='15'>15. Trust analysis<\/a>","534ac2bc":"#### This is certainly not the end. More awesome things(unsupervised learning) are yet to come. Please upvote and comment so I can make this even better.","43504050":"### <a id='8.1'>8.1 Average racial distribution in schools of different cities<\/a>","bc07260a":"# <a id='2'>2. Loading libraries and retrieving data<\/a>","0d13b533":"### <a id='8.3'>8.3 Racial distribution in community and private schools<\/a>","9d2407cc":"- <a href='#1'>1. Introduction<\/a>  \n- <a href='#2'>2. Loading libraries and retrieving data<\/a>\n- <a href='#3'>3. Data impressions<\/a>\n- <a href='#4'>4. Data cleaning<\/a>\n- <a href='#5'>5.  Data preparation<\/a>\n- <a href='#6'>6.  Economic Need Index<\/a>\n    - <a href='#6.1'>6.1  Distribution of Economic Need Index<\/a>\n    - <a href='#6.2'>6.2  Economic Need Index vs. School Income Estimate<\/a>\n    - <a href='#6.3'>6.3  Average Economic Need Index in different cities<\/a>\n- <a href='#7'>7. School Income Estimate<\/a>\n    - <a href='#7.1'>7.1 School Income distribution for community schools<\/a>\n    - <a href='#7.2'>7.2 Bubble chart depicting estimated income and economic need index on map of school locations<\/a>\n- <a href='#8'>8. Racial distribution analysis<\/a>\n    - <a href='#8.1'>8.1 Average racial distribution in schools of different cities<\/a>\n    - <a href='#8.2'>8.2 Comparing distribution of races with each other with Economic Need Index<\/a>\n    - <a href='#8.3'>8.3 Racial distribution in community and private schools<\/a>\n- <a href='#9'>9. Rigorous instruction analysis<\/a>\n    - <a href='#9.1'>9.1 Rigorous instruction % distribution<\/a>\n    - <a href='#9.2'>9.2 Rigorous instruction ratings statistical analysis<\/a>\n- <a href='#10'>10. Collaborative teachers analysis<\/a>\n    - <a href='#10.1'>10.1 Collaborative teachers % distribution<\/a>\n    - <a href='#10.2'>10.2 Collaborative teachers ratings statistical analysis<\/a>\n- <a href='#11'>11. ELA and math proficiency analysis<\/a>\n    - <a href='#11.1'>11.1 ELA and math proficiency distribution<\/a>\n    - <a href='#11.2'>11.2 ELA proficiency vs math proficiency distribution<\/a>\n- <a href='#12'>12. Supportive Environment analysis<\/a>\n    - <a href='#12.1'>12.1 Supportive Environment % distribution<\/a>\n    - <a href='#12.2'>12.2 Supportive Environment ratings statistical analysis<\/a>\n- <a href='#13'>13. Effective School Leadership analysis<\/a>\n    - <a href='#13.1'>13.1 Effective School Leadership % distribution<\/a>\n    - <a href='#13.2'>13.2 Effective School Leadership ratings statistical analysis<\/a>\n- <a href='#14'>14. Strong Family-Community Ties analysis<\/a>\n    - <a href='#14.1'>14.1 Strong Family-Community Ties % distribution<\/a>\n    - <a href='#14.2'>14.2 Strong Family-Community Ties statistical analysis<\/a>\n- <a href='#15'>15. Trust analysis<\/a>\n    - <a href='#15.1'>15.1 Trust % distribution<\/a>\n    - <a href='#15.2'>15.2 Trust ratings statistical analysis<\/a>\n- <a href='#16'>16. KMeans clustering on explored features<\/a>\n    - <a href='#16.1'>16.1 Elbow method<\/a>\n    - <a href='#16.2'>16.2 KMeans clustering implementation and visualization<\/a>\n    ","4471e2b7":"### <a id='6.1'>6.1 Distribution of Economic Need Index<\/a>","a2919356":"### <a id='15.1'>15.1 Trust % distribution<\/a>","1b1e8a21":"# <a id='16'>16. KMeans clustering on explored features<\/a>","c89583ff":"### <a id='12.1'>12.1 Supportive Environment % distribution<\/a>"}}