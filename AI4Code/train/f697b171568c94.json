{"cell_type":{"7231793c":"code","249a9a2c":"code","03029f1b":"code","6a42b7c4":"code","59ace9e0":"code","44b0134f":"code","3f1043c9":"code","10b99856":"code","4ee992b0":"code","71676183":"code","ddafe3dc":"code","039e1195":"code","4ad4b87a":"code","5bb1e650":"code","98648ac1":"code","4094a64c":"code","8f086bd9":"code","566d812b":"code","be1d2ff1":"code","bcf87c68":"code","aee187b6":"code","4c8f1066":"code","b93225f0":"code","f4cacfd0":"code","02963100":"code","dc8833e7":"code","fbdb236a":"code","45dcc19c":"code","2a01bb5a":"code","47b03537":"code","55bdda55":"code","2311de8d":"code","5d08f8f3":"code","03b7df01":"code","87c4ae0b":"code","bcd53f62":"code","d7fe4f53":"code","5f8a1ff6":"code","3a33d797":"code","a1532499":"code","1dfc431e":"code","b298ea78":"code","8d53359c":"markdown","0accc6d5":"markdown","71d0948a":"markdown","c35c83ca":"markdown","d0bcd9bb":"markdown","85d291cd":"markdown","f0a1b7fd":"markdown","5caaa495":"markdown","257a258a":"markdown","2f1d5fcc":"markdown","6a4af47a":"markdown","2a557bc5":"markdown","5f1bbe35":"markdown","ef813686":"markdown","1bbfbf08":"markdown","517ae6d0":"markdown","ba7d5b36":"markdown","04b3d7d0":"markdown","64f6b50e":"markdown","4c4319c1":"markdown","7b8689b7":"markdown","1f5cf3e3":"markdown","aa292183":"markdown","7c30d64a":"markdown","58a2ffce":"markdown","ce274e42":"markdown","6e66f5c9":"markdown","365cb68e":"markdown","801bdd6b":"markdown","7b0f2a7e":"markdown","2322e04c":"markdown","301fb3b7":"markdown"},"source":{"7231793c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","249a9a2c":"import numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nplt.style.use('seaborn-colorblind')\nsns.set_style('whitegrid')\n\n","03029f1b":"df = pd.read_csv('\/kaggle\/input\/students-performance-in-exams\/StudentsPerformance.csv', encoding=\"windows-1252\")\ndf.sample(10)","6a42b7c4":"pd.options.display.float_format = \"{:,.2f}\".format\n\ncols = list(df.columns)\nnew_cols = []\nfor col in cols:\n    new_cols.append(col.strip().replace('  ', ' ').replace(' ', '_').replace('\/','_').lower())\ndf.columns = new_cols\n\ndf['average'] = (df['math_score']+df['reading_score']+df['writing_score'])\/3","59ace9e0":"df.sample(10)","44b0134f":"education_df = df","3f1043c9":"education_df['gender'].value_counts()","10b99856":"education_df['lunch'].value_counts()","4ee992b0":"education_df['race_ethnicity'].value_counts()","71676183":"education_df['parental_level_of_education'].value_counts()","ddafe3dc":"education_df['test_preparation_course'].value_counts()","039e1195":"plt.figure(figsize=(15, 5))\nplt.subplot(3,1,1)\n\nsns.countplot(y=\"gender\", data=education_df,palette=\"RdBu\")\n\nplt.subplot(3,1,2)\n\nsns.countplot(y=\"lunch\", data=education_df,palette=\"Set2\")\n\nplt.subplot(3,1,3)\n\nsns.countplot(y=\"test_preparation_course\", data=education_df,palette=\"Set1\")\n\nplt.show()","4ad4b87a":"plt.figure(figsize=(15, 5))\nplt.subplot(1,2,1)\nsns.countplot(y=\"parental_level_of_education\", data=education_df,palette=\"Set2\")\n\n\nplt.subplot(1,2,2)\nsns.countplot(y=\"race_ethnicity\", data=education_df,palette=\"Set3\")\n\n","5bb1e650":"df['average'] = (df['math_score']+df['reading_score']+df['writing_score'])\/3\ndef grade(average):\n    if (average>=50) :return 'V'\n    if (average<50) :return 'F'\ndf[\"grade\"] = df.apply(lambda x : grade(x[\"average\"]), axis=1)\ndf[\"grade_math\"] = df.apply(lambda x : grade(x[\"math_score\"]), axis=1)\ndf[\"grade_reading\"] = df.apply(lambda x : grade(x[\"reading_score\"]), axis=1)\ndf[\"grade_writing\"] = df.apply(lambda x : grade(x[\"writing_score\"]), axis=1)","98648ac1":"femall = education_df[education_df.gender == 'female']\nmall = education_df[education_df.gender == 'male']\nahya = femall.iloc[:,9:]\nahyo = mall.iloc[:,9:]\nallfemal = ahya.apply(lambda x: pd.value_counts(x, normalize=True)).reset_index()\nallmal = ahyo.apply(lambda x: pd.value_counts(x, normalize=True)).reset_index()","4094a64c":"fig=plt.figure(figsize=(15, 8))\nplt.subplot(2,2,1)\n\nN=2\nind = np.arange(N)\n\nplt.bar(ind, list(allfemal.iloc[:,1]),width=0.3,label='female')\nplt.bar(ind + 0.3, list(allmal.iloc[:,1]),width=0.3,label='male')\nplt.title(\"average\")\nplt.xticks(ind + 0.6 \/ 2, ('V' , 'F'))\nplt.legend(loc='best')\n\nplt.subplot(2,2,2)\n\nplt.bar(ind, list(allfemal.iloc[:,2]),width=0.3,label='female')\nplt.bar(ind + 0.3, list(allmal.iloc[:,2]),width=0.3,label='male')\nplt.title(\"average math\")\nplt.xticks(ind + 0.6 \/ 2, ('V' , 'F'))\nplt.legend(loc='best')\n\nplt.subplot(2,2,3)\n\nplt.bar(ind, list(allfemal.iloc[:,3]),width=0.3,label='female')\nplt.bar(ind + 0.3, list(allmal.iloc[:,3]),width=0.3,label='male')\nplt.title(\"average reading\")\nplt.xticks(ind + 0.6 \/ 2, ('V' , 'F'))\nplt.legend(loc='best')\n\nplt.subplot(2,2,4)\n\nplt.bar(ind, list(allfemal.iloc[:,4]),width=0.3,label='female')\nplt.bar(ind + 0.3, list(allmal.iloc[:,4]),width=0.3,label='male')\nplt.title(\"average writing\")\nplt.xticks(ind + 0.6 \/ 2, ('V' , 'F'))\nplt.legend(loc='best')\nplt.show()\n","8f086bd9":"notest = df[df.test_preparation_course == 'none']\ntest = df[df.test_preparation_course == 'completed']\naha = test.iloc[:,9:]\nalltest = aha.apply(lambda x: pd.value_counts(x, normalize=True)).reset_index()\nahha = notest.iloc[:,9:]\nallnotest = ahha.apply(lambda x: pd.value_counts(x, normalize=True)).reset_index()","566d812b":"plt.style.use('seaborn-dark-palette')\nplt.figure(figsize=(15, 8))\nplt.subplot(2,2,1)\n\nind = np.arange(2)\n\nplt.bar(ind, list(alltest.iloc[:,1]),width=0.3,label='test completed')\nplt.bar(ind + 0.3, list(allnotest.iloc[:,1]),width=0.3,label='none test')\nplt.title(\"average\")\nplt.xticks(ind + 0.6 \/ 2, ('V' , 'F'))\nplt.legend(loc='best')\nplt.subplot(2,2,2)\n\nplt.bar(ind, list(alltest.iloc[:,2]),width=0.3,label='test completed')\nplt.bar(ind + 0.3, list(allnotest.iloc[:,2]),width=0.3,label='none test')\nplt.title(\"average math test preparation corse\")\nplt.xticks(ind + 0.6 \/ 2, ('V' , 'F'))\nplt.legend(loc='best')\nplt.subplot(2,2,3)\n\nplt.bar(ind, list(alltest.iloc[:,3]),width=0.3,label='test completed')\nplt.bar(ind + 0.3, list(allnotest.iloc[:,3]),width=0.3,label='none test')\nplt.title(\"reading\")\nplt.xticks(ind + 0.6 \/ 2, ('V' , 'F'))\nplt.legend(loc='best')\nplt.subplot(2,2,4)\n\nplt.bar(ind, list(alltest.iloc[:,4]),width=0.3,label='test completed')\nplt.bar(ind + 0.3, list(allnotest.iloc[:,4]),width=0.3,label='none test')\nplt.title(\"writing\")\nplt.xticks(ind + 0.6 \/ 2, ('V' , 'F'))\nplt.legend(loc='best')\n\nplt.show()","be1d2ff1":"lunchfree = education_df[education_df.lunch == 'free\/reduced']\nlunchstandard = education_df[education_df.lunch == 'standard']\nlo = lunchfree.iloc[:,9:]\nmo = lunchstandard.iloc[:,9:]\nlunchfree = lo.apply(lambda x: pd.value_counts(x, normalize=True)).reset_index()\nlunchstandard = mo.apply(lambda x: pd.value_counts(x, normalize=True)).reset_index()","bcf87c68":"plt.figure(figsize=(15, 9))\nplt.style.use('seaborn')\nplt.subplot(2,2,1)\n\n\nind = np.arange(2)\n\nplt.bar(ind, list(lunchfree.iloc[:,1]),width=0.3,label='free\/reduced')\nplt.bar(ind + 0.3, list(lunchstandard.iloc[:,1]),width=0.3,label='standard')\nplt.title(\"average lunch\")\nplt.xticks(ind + 0.6 \/ 2, ('V' , 'F'))\nplt.legend(loc='best')\nplt.subplot(2,2,2)\n\nplt.bar(ind, list(lunchfree.iloc[:,2]),width=0.3,label='free\/reduced')\nplt.bar(ind + 0.3, list(lunchstandard.iloc[:,2]),width=0.3,label='standard')\nplt.title(\"math lunch\")\nplt.xticks(ind + 0.6 \/ 2, ('V' , 'F'))\nplt.legend(loc='best')\nplt.subplot(2,2,3)\n\nplt.bar(ind, list(lunchfree.iloc[:,3]),width=0.3,label='free\/reduced')\nplt.bar(ind + 0.3, list(lunchstandard.iloc[:,3]),width=0.3,label='standard')\nplt.title(\"reading lunch\")\nplt.xticks(ind + 0.6 \/ 2, ('V' , 'F'))\nplt.legend(loc='best')\nplt.subplot(2,2,4)\n\nplt.bar(ind, list(lunchfree.iloc[:,4]),width=0.3,label='free\/reduced')\nplt.bar(ind + 0.3, list(lunchstandard.iloc[:,4]),width=0.3,label='standard')\nplt.title(\"writing lunch\")\nplt.xticks(ind + 0.6 \/ 2, ('V' , 'F'))\nplt.legend(loc='best')\n\nplt.show()\n\n","aee187b6":"high_school = education_df[education_df.parental_level_of_education == 'high school']\nsome_college = education_df[education_df.parental_level_of_education == 'some college']\nmaster_degres = education_df[education_df.parental_level_of_education == \"master's degree\"]\nsome_highschol= education_df[education_df.parental_level_of_education == 'some high school']\nasso= education_df[education_df.parental_level_of_education == \"associate's degree\"]\nbachl= education_df[education_df.parental_level_of_education == \"bachelor's degree\"]","4c8f1066":"gend1 = high_school.iloc[:,9:]\ngender_highschol = gend1.apply(lambda x: pd.value_counts(x, normalize=True)).reset_index()\ngend2 = some_college.iloc[:,9:]\ngender_somecollege = gend2.apply(lambda x: pd.value_counts(x, normalize=True)).reset_index()\ngend3 = master_degres.iloc[:,9:]\ngender_master = gend3.apply(lambda x: pd.value_counts(x, normalize=True)).reset_index()\ngend4 = some_highschol.iloc[:,9:]\ngender_somehighschol = gend4.apply(lambda x: pd.value_counts(x, normalize=True)).reset_index()\ngend5 = asso.iloc[:,9:]\ngender_associate = gend5.apply(lambda x: pd.value_counts(x, normalize=True)).reset_index()\ngend6 = bachl.iloc[:,9:]\ngender_bachelor = gend6.apply(lambda x: pd.value_counts(x, normalize=True)).reset_index()","b93225f0":"plt.figure(figsize=(15, 9))\nplt.subplot(1,2,1)\n\nind = np.arange(2)\n\nplt.bar(ind, list(gender_somehighschol.iloc[:,1]),width=0.1,label='some high school')\nplt.bar(ind + 0.1, list(gender_somecollege.iloc[:,1]),width=0.1,label='some college')\nplt.bar(ind + 0.2, list(gender_master.iloc[:,1]),width=0.1,label='master')\nplt.bar(ind + 0.3, list(gender_highschol.iloc[:,1]),width=0.1,label='highschool')\nplt.bar(ind + 0.4, list(gender_associate.iloc[:,1]),width=0.1,label='associat')\nplt.bar(ind + 0.5, list(gender_bachelor.iloc[:,1]),width=0.1,label='bachelor')\nplt.title(\"average\")\nplt.xticks(ind + 0.6 \/ 6, ('V' , 'F'))\nplt.legend(loc='best')\n\nplt.subplot(1,2,2)\n\n\n\nplt.bar(ind, list(gender_somehighschol.iloc[:,2]),width=0.1,label='some high school')\nplt.bar(ind + 0.1, list(gender_somecollege.iloc[:,2]),width=0.1,label='some college')\nplt.bar(ind + 0.2, list(gender_master.iloc[:,2]),width=0.1,label='master')\nplt.bar(ind + 0.3, list(gender_highschol.iloc[:,2]),width=0.1,label='highschool')\nplt.bar(ind + 0.4, list(gender_associate.iloc[:,2]),width=0.1,label='associat')\nplt.bar(ind + 0.5, list(gender_bachelor.iloc[:,2]),width=0.1,label='bachelor')\nplt.title(\"average math\")\nplt.xticks(ind + 0.6 \/ 6, ('V' , 'F'))\nplt.legend(loc='best')\n\n\n\nplt.show()","f4cacfd0":"plt.figure(figsize=(15, 8))\nplt.subplot(1,2,1)\n\n\nplt.bar(ind, list(gender_somehighschol.iloc[:,3]),width=0.1,label='some high school')\nplt.bar(ind + 0.1, list(gender_somecollege.iloc[:,3]),width=0.1,label='some college')\nplt.bar(ind + 0.2, list(gender_master.iloc[:,3]),width=0.1,label='master')\nplt.bar(ind + 0.3, list(gender_highschol.iloc[:,3]),width=0.1,label='highschool')\nplt.bar(ind + 0.4, list(gender_associate.iloc[:,3]),width=0.1,label='associat')\nplt.bar(ind + 0.5, list(gender_bachelor.iloc[:,3]),width=0.1,label='bachelor')\nplt.title(\"average reading\")\nplt.xticks(ind + 0.6 \/ 6, ('V' , 'F'))\nplt.legend(loc='best')\n\nplt.subplot(1,2,2)\n\nplt.bar(ind, list(gender_somehighschol.iloc[:,4]),width=0.1,label='some high school')\nplt.bar(ind + 0.1, list(gender_somecollege.iloc[:,4]),width=0.1,label='some college')\nplt.bar(ind + 0.2, list(gender_master.iloc[:,4]),width=0.1,label='master')\nplt.bar(ind + 0.3, list(gender_highschol.iloc[:,4]),width=0.1,label='highschool')\nplt.bar(ind + 0.4, list(gender_associate.iloc[:,4]),width=0.1,label='associat')\nplt.bar(ind + 0.5, list(gender_bachelor.iloc[:,4]),width=0.1,label='bachelor')\nplt.title(\"average\")\nplt.xticks(ind + 0.6 \/ 6, ('V' , 'F'))\nplt.legend(loc='best')\nplt.show()","02963100":"groupb = education_df[education_df.race_ethnicity == 'group B']\ngroupc = education_df[education_df.race_ethnicity == 'group C']\ngroupd = education_df[education_df.race_ethnicity == 'group D']\ngroupa = education_df[education_df.race_ethnicity == 'group A']\ngroupe = education_df[education_df.race_ethnicity == 'group E']","dc8833e7":"gropa = groupa.iloc[:,9:]\ngropa = gropa.apply(lambda x: pd.value_counts(x, normalize=True)).reset_index()\ngropb = groupb.iloc[:,9:]\ngropb = gropb.apply(lambda x: pd.value_counts(x, normalize=True)).reset_index()\ngropc = groupc.iloc[:,9:]\ngropc = gropc.apply(lambda x: pd.value_counts(x, normalize=True)).reset_index()\ngropd = groupd.iloc[:,9:]\ngropd = gropd.apply(lambda x: pd.value_counts(x, normalize=True)).reset_index()\ngrope = groupe.iloc[:,9:]\ngrope = grope.apply(lambda x: pd.value_counts(x, normalize=True)).reset_index()","fbdb236a":"plt.figure(figsize=(15, 9))\nplt.subplot(1,2,1)\n\nind = np.arange(2)\n\nplt.bar(ind, list(gropa.iloc[:,1]),width=0.1,label='groupA')\nplt.bar(ind + 0.1, list(gropb.iloc[:,1]),width=0.1,label='groupB')\nplt.bar(ind + 0.2, list(gropc.iloc[:,1]),width=0.1,label='groupC')\nplt.bar(ind + 0.3, list(gropd.iloc[:,1]),width=0.1,label='groupD')\nplt.bar(ind + 0.4, list(grope.iloc[:,1]),width=0.1,label='groupE')\n\nplt.title(\"average groups\")\nplt.xticks(ind + 0.5 \/ 6, ('V' , 'F'))\nplt.legend(loc='best')\n\nplt.subplot(1,2,2)\n\n\nplt.bar(ind, list(gropa.iloc[:,2]),width=0.1,label='groupA')\nplt.bar(ind + 0.1, list(gropb.iloc[:,2]),width=0.1,label='groupB')\nplt.bar(ind + 0.2, list(gropc.iloc[:,2]),width=0.1,label='groupC')\nplt.bar(ind + 0.3, list(gropd.iloc[:,2]),width=0.1,label='groupD')\nplt.bar(ind + 0.4, list(grope.iloc[:,2]),width=0.1,label='groupE')\n\nplt.title(\"average math groups\")\nplt.xticks(ind + 0.4 \/ 6, ('V' , 'F'))\nplt.legend(loc='best')\n\n\n\nplt.show()","45dcc19c":"plt.figure(figsize=(15, 9))\nplt.subplot(1,2,1)\n\n\nplt.bar(ind, list(gropa.iloc[:,3]),width=0.1,label='groupA')\nplt.bar(ind + 0.1, list(gropb.iloc[:,3]),width=0.1,label='groupB')\nplt.bar(ind + 0.2, list(gropc.iloc[:,3]),width=0.1,label='groupC')\nplt.bar(ind + 0.3, list(gropd.iloc[:,3]),width=0.1,label='groupD')\nplt.bar(ind + 0.4, list(grope.iloc[:,3]),width=0.1,label='groupE')\n\nplt.title(\"average reading groups\")\nplt.xticks(ind + 0.4 \/ 6, ('V' , 'F'))\nplt.legend(loc='best')\n\nplt.subplot(1,2,2)\n\nplt.bar(ind, list(gropa.iloc[:,4]),width=0.1,label='groupA')\nplt.bar(ind + 0.1, list(gropb.iloc[:,4]),width=0.1,label='groupB')\nplt.bar(ind + 0.2, list(gropc.iloc[:,4]),width=0.1,label='groupC')\nplt.bar(ind + 0.3, list(gropd.iloc[:,4]),width=0.1,label='groupD')\nplt.bar(ind + 0.4, list(grope.iloc[:,4]),width=0.1,label='groupE')\n\nplt.title(\"average writing groups\")\nplt.xticks(ind + 0.4 \/ 6, ('V' , 'F'))\nplt.legend(loc='best')\nplt.show()","2a01bb5a":"plt.figure(figsize=(15, 9))\nplt.subplot(1,3,1)\nmalfem_df = df.groupby('gender')['math_score','reading_score','writing_score'].mean().reset_index()\nind = np.arange(2)\n\nplt.bar(ind, list(malfem_df.iloc[:,1]),width=0.30,label='math')\nplt.bar(ind + 0.30, list(malfem_df.iloc[:,2]),width=0.30,label='reading')\nplt.bar(ind + 0.60, list(malfem_df.iloc[:,3]),width=0.30,label='writing')\nplt.title(\"average\")\nplt.xticks(ind + 0.60 \/ 3, ('female','male'))\nplt.legend(loc='best')\n\nplt.subplot(1,3,2)\ntests_df = df.groupby('test_preparation_course')['math_score','reading_score','writing_score'].mean().reset_index()\nind = np.arange(2)\n\nplt.bar(ind, list(tests_df.iloc[:,1]),width=0.30,label='math')\nplt.bar(ind + 0.30, list(tests_df.iloc[:,2]),width=0.30,label='reading')\nplt.bar(ind + 0.60, list(tests_df.iloc[:,3]),width=0.30,label='writing')\nplt.title(\"average\")\nplt.xticks(ind + 0.60 \/ 3, ('completed','none'))\nplt.legend(loc='best')\n\nplt.subplot(1,3,3)\nlunch_df = df.groupby('lunch')['math_score','reading_score','writing_score'].mean().reset_index()\nind = np.arange(2)\n\nplt.bar(ind, list(lunch_df.iloc[:,1]),width=0.30,label='math')\nplt.bar(ind + 0.30, list(lunch_df.iloc[:,2]),width=0.30,label='reading')\nplt.bar(ind + 0.60, list(lunch_df.iloc[:,3]),width=0.30,label='writing')\nplt.title(\"average\")\nplt.xticks(ind + 0.60 \/ 3, ('free\/reduced','standard'))\nplt.legend(loc='best')\n\nplt.show()","47b03537":"plt.figure(figsize=(15, 5))\n\ngroupsh_df = df.groupby('parental_level_of_education')['math_score','reading_score','writing_score'].mean().reset_index()\n\nind = np.arange(6)\n\nplt.bar(ind, list(groupsh_df.iloc[:,1]),width=0.25,label='math')\nplt.bar(ind + 0.25, list(groupsh_df.iloc[:,2]),width=0.25,label='reading')\nplt.bar(ind + 0.50, list(groupsh_df.iloc[:,3]),width=0.25,label='writing')\nplt.title(\"average\")\nplt.xticks(ind + 0.50 \/ 3, (\"associate's degree\",\"bachelor's degree\",'high school',\"mater's degree\",'some college','some high school'))\nplt.legend(loc='best')\n\nplt.show()","55bdda55":"sns.catplot(\n    data=df,\n    x='lunch',\n    y='average',\n    hue=\"gender\",\n    kind='violin',\n    height=5, \n    aspect=2);","2311de8d":"sns.catplot(\n    data=df,\n    x='test_preparation_course',\n    y='average',\n    hue=\"gender\",\n    kind='violin',\n    height=4, \n    aspect=2);","5d08f8f3":"sns.catplot(\n    data=df,\n    x='parental_level_of_education',\n    y='average',\n    hue=\"gender\",\n    kind='violin',\n    height=5,\n    aspect=2);","03b7df01":"plt.figure(figsize=(20,15))\nplt.subplot(2,2,1)\nbplot = sns.boxplot(y='average', x='lunch',hue='gender', \n                 data=df, \n                 width=0.5,\n                 palette=\"colorblind\")\nplt.subplot(2,2,2)\nsns.boxplot(y='math_score', x='lunch',hue='gender', \n            data=df, \n            width=0.5,\n            palette=\"colorblind\");\nplt.subplot(2,2,3)\nbplot = sns.boxplot(y='reading_score', x='lunch', hue='gender',\n                 data=df, \n                 width=0.5,\n                 palette=\"colorblind\")\nplt.subplot(2,2,4)\nbplot = sns.boxplot(y='writing_score', x='lunch', hue='gender',\n                 data=df, \n                 width=0.5,\n                 palette=\"colorblind\")\nsns.despine(offset=10, trim=True)\nplt.show()","87c4ae0b":"plt.figure(figsize=(20,15))\nplt.subplot(2,2,1)\nbplot = sns.boxplot(y='average', x='gender',hue='parental_level_of_education', \n                 data=df, \n                 width=0.5,\n                 palette=\"colorblind\")\nplt.subplot(2,2,2)\nbplot = sns.boxplot(y='average', x='gender',hue='race_ethnicity', \n                 data=df, \n                 width=0.5,\n                 palette=\"colorblind\")\n\nsns.despine(offset=10, trim=True)\nplt.show()","bcd53f62":"sns.set_theme(style=\"darkgrid\")\nsns.jointplot(x=\"math_score\", y=\"average\", data=df,kind=\"kde\")\nsns.jointplot(x=\"math_score\", y=\"average\", data=df, kind=\"kde\");\nsns.jointplot(x=\"writing_score\", y=\"average\", data=df, kind=\"kde\");\nsns.despine(offset=10, trim=True)","d7fe4f53":"plt.figure(figsize=(13,8))\nsns.heatmap(df.corr(),annot=True);","5f8a1ff6":"plt.figure(figsize=(15, 7))\nplt.subplot(1,2,1)\n\nsns.histplot(x='math_score',hue=\"gender\", data=df,palette=\"Dark2\",stat=\"probability\")\n\nplt.subplot(1,2,2)\nsns.histplot(x='reading_score',hue=\"gender\", data=df,palette=\"Dark2\",stat=\"probability\")","3a33d797":"plt.figure(figsize=(15, 7))\nplt.subplot(1,2,1)\n\nsns.histplot(x='writing_score',hue=\"gender\", data=df,palette=\"Dark2\",stat=\"probability\")\n\nplt.subplot(1,2,2)\nsns.histplot(x='average',hue=\"gender\", data=df,palette=\"Dark2\",stat=\"probability\")","a1532499":"plt.figure(figsize=(16, 8))\nplt.subplot(2,3,1)\nlabelss=['Male',\"Female\"]\nplt.pie(groupa['gender'].value_counts(),labels=labelss,\n        autopct='%1.2f%%',explode=[0.1,0.1], startangle=90)\n\nplt.title('gender groupA')\nplt.axis('equal')\nplt.subplot(2,3,2)\n\nlabelss=['standard','free\/reduced']\nplt.pie(groupa['lunch'].value_counts(),labels=labelss,\n        autopct='%1.2f%%',explode=[0.1,0], startangle=90)\n\nplt.title('lunch groupA')\nplt.axis('equal')\nplt.subplot(2,3,3)\n\nlabelss=['non','completed']\nplt.pie(groupa['test_preparation_course'].value_counts(),labels=labelss,\n        autopct='%1.2f%%',explode=[0.1,0], startangle=90)\n\nplt.title('test preparation groupA')\nplt.axis('equal')\n\n\nplt.show()","1dfc431e":"plt.figure(figsize=(15, 5))\nplt.subplot(1,3,1)\nplt.style.use('seaborn-colorblind')\nlabelss=['Female',\"Male\"]\nplt.pie(groupe['gender'].value_counts(),labels=labelss,\n        autopct='%1.2f%%',explode=[0.1,0.1], startangle=90)\n\nplt.title('gender groupE')\nplt.axis('equal')\nplt.subplot(1,3,2)\nplt.style.use('seaborn-colorblind')\nlabelss=['standard','free\/reduced']\nplt.pie(groupe['lunch'].value_counts(),labels=labelss,\n        autopct='%1.2f%%',explode=[0.1,0], startangle=90)\n\nplt.title('lunch groupE')\nplt.axis('equal')\nplt.subplot(1,3,3)\n\nlabelss=['non','completed']\nplt.pie(groupe['test_preparation_course'].value_counts(),labels=labelss,\n        autopct='%1.2f%%',explode=[0.1,0], startangle=90)\n\nplt.title('test preparation groupE')\nplt.axis('equal')\n\n\nplt.show()","b298ea78":"plt.figure(figsize=(14, 5))\nplt.subplot(1,2,1)\nlabelss=['some high school',\"some college\",'high school','associate degree','bachelor degree','master degree']\nplt.pie(groupa['parental_level_of_education'].value_counts(),labels=labelss,\n        autopct='%1.2f%%',explode=[0.1,0,0,0,0,0], startangle=90)\n\nplt.title('parental level groupA')\nplt.axis('equal')\nplt.subplot(1,2,2)\nlabelss=['associate degree','some college','high school','bachelor degree','some high school','master degree']\nplt.pie(groupe['parental_level_of_education'].value_counts(),labels=labelss,\n        autopct='%1.2f%%',explode=[0.1,0,0,0,0,0], startangle=90)\n\nplt.title('parental level groupE')\nplt.axis('equal')\nplt.show()","8d53359c":"# Heatmap \n","0accc6d5":"# **Bar plot**","71d0948a":"plt.figure(figsize=(15, 7))\nplt.subplot(1,2,1)\n\nsns.histplot(x='math_score',hue=\"gender\", data=df,palette=\"Dark2\",stat=\"probability\")\n\nplt.subplot(1,2,2)\nsns.histplot(x='reading_score',hue=\"gender\", data=df,palette=\"Dark2\",stat=\"probability\")\n","c35c83ca":"# > ****Visualization\n\n**1.viloin plot**","d0bcd9bb":"# > >  hitsplot","85d291cd":"we now studants have completed test preparation course more succes than studants have no test preparation course\n\nnone:\n\nmale large score between 50 to 65\nfemale large score betwen 65 to 100 \n\ncompleted:\n\nmale large score between 40 to 60\nfemale large score between 60 to 100","f0a1b7fd":"# ****pie plot","5caaa495":"will extract from data two another data first data will be only femall second only mall\n\nafter that will use pandas iloc to split scores grade, math, reading, writing \n\nwill calcul values counts and normalize the values","257a258a":"# box plot","2f1d5fcc":"larg concentration is between 60-80.","6a4af47a":"after make mean of the score well filter the students score how succes and how failed\n\nadd new coulmn named grade students how succes make score > 50 failed < 50","2a557bc5":"bachelor,some college,associate degree,high school:\n\nfemale score more than male\n\nmaster degree,some high school:\n\nmale score more than female\n\n","5f1bbe35":"\nimport data\nread and understad what we need from this data","ef813686":"Female and male all most equal \n\ngroupC predominant groupA minority , the groups not balanced \n\nlevel master are the minority students with bachelor , other level approximate \n\njust 35% have test preparation course and standard lunch","1bbfbf08":"female valedictorian a male in reading and writing\n\nmale valedictorian a female in math","517ae6d0":"groupE students more succes and least failed\ngroupA students most failed and least succes\n\nwe now groupE and groupA have the least students in all groups\nso the question here \nwhy groupE better than groupA?\n\nwe will search reponse this question latter\n","ba7d5b36":"conlusion \ncalcul mean every scroes\n","04b3d7d0":"will detail data if is balanced between gender , level education , groups , lunch and test preparation","64f6b50e":"# # # 1. 1. why groupE best than groupA Although have almost same studants? ","4c4319c1":"studants have standard lunch succes more than students have free or reduced lunch","7b8689b7":"students take test preparaion course scucces more than students don't take test preparation course ","1f5cf3e3":"master degree and bachelor degree femal succes more than male\n\n\ngroupE best group for studants to succes groupA least group for students to succes  ","aa292183":"reading score and writing score have positive correlation","7c30d64a":"first we need remove space betwen words and replace it _ in coulmns\n\nadd new column the mean of scores call it average\n","58a2ffce":"groupA have 10% male more than groupE\n\n\ngroupE have 10% standard lunch more than groupA\n\n\ngroupE have 13% completed test preparation course more than groupA","ce274e42":"# Joint Plot\u00b6\n","6e66f5c9":"groupE have more students master than groupA 3%\n\ngroupA have more students  and high school than groupE 20%\n\nthats way groupE have scores more than groupA","365cb68e":"we now studants have standard lunch more succes than studants have freeor reducted lunch\n\nstandard:\n\nfemal large score between 65 to 80 \nmale large score betwen 40 to 65 \n\nfree or reduced:\n\nmale large score between 40 to 65\nfemale large score between 65 to 85\n\n\n","801bdd6b":"import  Libraries required\n","7b0f2a7e":"average,writing,reading:\n\nFemale valid more than male \nMale failed more than female\n\n\nmath:\n\nMale valid more than female\nFemale filed more than male","2322e04c":"will use matplotlib bar to plot normalize values we have","301fb3b7":"master students more succes and the least failed \n\nsome high school students more failed in math\n\nhigh school students more failed in reading and writing\n\nmath score bachelor more succes than master a little bit"}}