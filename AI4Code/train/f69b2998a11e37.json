{"cell_type":{"d662be96":"code","44566f53":"code","ae7e3304":"code","2e338b8d":"code","1401cccb":"code","39bdf1d2":"code","54f696ec":"code","3911912d":"code","1de29697":"code","dadb70e2":"code","308b6aff":"code","683cda69":"code","9b61ec4c":"code","ebc725bc":"markdown","8fb4b27d":"markdown","0777bfc4":"markdown","dfb452f8":"markdown","761e4234":"markdown","321de398":"markdown","a26bbffc":"markdown","857f3a89":"markdown","95666dd0":"markdown","a784dc03":"markdown","fcb84916":"markdown","082e3abe":"markdown","e92ac88c":"markdown","b4f20557":"markdown","29f25e81":"markdown","dd427842":"markdown"},"source":{"d662be96":"import numpy as np \nimport pandas as pd\n\nfrom sklearn import datasets\nfrom sklearn.cluster import DBSCAN\n\nimport matplotlib.pyplot  as plt\nimport seaborn as sns\n","44566f53":"train = pd.read_csv(\"..\/input\/iris-flower-dataset\/IRIS.csv\")\ntrain.head()","ae7e3304":"train.columns","2e338b8d":"sns.color_palette(\"pastel\")\nsns.pairplot(train,hue='species')\nplt.show()","1401cccb":"TRAIN_LABEL_COL = \"species\"\nTRAIN_FEATURES = [col for col in train.columns if col != TRAIN_LABEL_COL]\nX = train[TRAIN_FEATURES]\ny = train[TRAIN_LABEL_COL]","39bdf1d2":"dbscan = DBSCAN(eps=0.5,min_samples=5)\ny_pred = dbscan.fit_predict(X)","54f696ec":"dbscan.labels_","3911912d":"np.unique(dbscan.labels_)","1de29697":"len(dbscan.core_sample_indices_)","dadb70e2":"dbscan.core_sample_indices_[:10]","308b6aff":"dbscan.components_[:3]","683cda69":"y_pred_df = pd.DataFrame(y_pred)\ny_pred_df.columns=['pred_label']\n\nval = pd.concat([X,y_pred_df],axis=1)\n\nprint(val)","9b61ec4c":"sns.color_palette(\"pastel\")\nsns.pairplot(val,hue='pred_label')\nplt.show()","ebc725bc":"## eps \n\nfloat, default=0.5\n\n**The maximum distance between two samples** for one to be considered as in the neighborhood of the other. \n\nThis is not a maximum bound on the distances of points within a cluster. \n\nThis is the most important DBSCAN parameter to choose appropriately for your data set and distance function.","8fb4b27d":"# create validation dataframe","0777bfc4":"Perform DBSCAN clustering from vector array or distance matrix.\n\nDBSCAN - Density-Based Spatial Clustering of Applications with Noise. Finds core samples of high density and expands clusters from them. Good for data which contains clusters of similar density.","dfb452f8":"# Original Clustering ","761e4234":"## dbscan index count","321de398":"## label values","a26bbffc":"# build DBScan model and predict ","857f3a89":"from 4 clustering to 3 clustering ","95666dd0":"# split data","a784dc03":"## label count","fcb84916":"## min_samples\n\nint, default=5\n\n***The number of samples (or total weight)** in a neighborhood for a point to be considered as a core point. \nThis includes the point itself.","082e3abe":"# dbscan index value","e92ac88c":"# load data","b4f20557":"# dbscan data","29f25e81":"# DBScan (Density-Based Spatial Clustering)","dd427842":"# New Clustering (DBSCAN Predicted Plot)"}}