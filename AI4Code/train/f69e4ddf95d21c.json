{"cell_type":{"7f538025":"code","00d8fb98":"code","0545370d":"code","45d77155":"code","b2d492ae":"code","e5c815e9":"code","322f1d41":"code","cf5df6d8":"code","39e20f3c":"code","5bc77db4":"code","25d77e7c":"code","e44cf3f3":"code","086f7315":"code","3067fb73":"code","ea4d8483":"code","c92655ed":"code","94dc3d3a":"code","dae1614e":"code","8920fdb5":"code","beb82c83":"code","a5ed701e":"code","274ba538":"code","4b0d383c":"code","8a0a2cea":"code","50aec7ad":"code","6ee475f4":"code","ab83ee5a":"code","a0c701db":"code","9b4a32f9":"code","1d7c94b5":"code","160937ea":"code","ea02fde1":"code","23762ddd":"code","cb7424f9":"code","424199f9":"code","8d1eb9a7":"code","c39f539b":"code","78e67a4a":"code","12ed86d5":"code","aaeaa58c":"code","1a70c303":"code","41fba0e1":"code","7858c722":"code","2d54add3":"code","f94d9291":"code","6a38b320":"code","2aa1d539":"code","f3830cde":"code","6aeae268":"code","6d1f2c9a":"code","c3819244":"code","a8f1f7cf":"code","508df701":"code","650cde9e":"code","5f080c64":"code","2e98d532":"code","eefcba5b":"code","fc811f82":"code","ef8613b7":"code","f20837b5":"code","aefb7f32":"code","4faa0615":"code","df17194a":"code","e18cb3af":"code","63dc0f66":"code","dd5492f6":"code","f8a35cca":"code","16287aac":"code","963a82be":"code","ca37bac5":"code","59a49263":"code","bd50168f":"markdown","c960b6ba":"markdown","3f385a51":"markdown","b209d19c":"markdown","6b2e4d13":"markdown","5531eaf1":"markdown","892efa06":"markdown","4af836bd":"markdown","34ddf70d":"markdown","315c2b6d":"markdown","7d028ffa":"markdown","a496d510":"markdown","3785221a":"markdown","9b66fc70":"markdown","152ba9c1":"markdown","94209469":"markdown","8fcc34f5":"markdown","7ac67459":"markdown","89ec10c0":"markdown","dbfb88e1":"markdown","227ca863":"markdown","57b80fd2":"markdown","7683dd8c":"markdown","8808c6de":"markdown","e930345d":"markdown","1100a029":"markdown","a4a6f24d":"markdown","2f23665c":"markdown","c4a347c6":"markdown","eaea33d0":"markdown","5810ff85":"markdown","c1d267ab":"markdown","d53a03fc":"markdown","e5fa0900":"markdown","738e5c61":"markdown","148e6de9":"markdown","3c2bbb53":"markdown","f717d1c8":"markdown","f4027b84":"markdown","63df9bb6":"markdown","846b8a46":"markdown","119d5d0a":"markdown","094cad6a":"markdown","504ad3ee":"markdown","e7f367e7":"markdown","fa680f95":"markdown","1042fef4":"markdown","a5b6dcb9":"markdown","8f4a777a":"markdown","3486afca":"markdown","f8afcedf":"markdown","3a540c81":"markdown","f1dfc147":"markdown","43fd1141":"markdown"},"source":{"7f538025":"import pandas as pd\nimport matplotlib.pyplot as plt\nfrom matplotlib.pyplot import figure\nimport seaborn as sns\nimport numpy as np","00d8fb98":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","0545370d":"\ntrain_dataset = pd.read_csv(\"\/kaggle\/input\/learn-together\/train.csv\")\ntest_dataset = pd.read_csv(\"\/kaggle\/input\/learn-together\/test.csv\")","45d77155":"train_dataset.head()","b2d492ae":"def evaluate_metric_score(y_true, y_pred):\n    if y_true.shape[0] != y_pred.shape[0]:\n        raise Exception(\"Sizes do not match\")\n        return 0\n    else:\n        size = y_true.shape[0]\n        matches = 0\n        y_true_array = np.array(list(y_true))\n        y_pred_array = np.array(list(y_pred))\n        for i in range(0,size):\n            if y_true_array[i]==y_pred_array[i]:\n                matches = matches + 1\n        return matches\/size","e5c815e9":"train_dataset.shape","322f1d41":"test_dataset.shape","cf5df6d8":"X = train_dataset.copy()\nX = X.drop(columns=['Cover_Type'])\ny = train_dataset[['Cover_Type']]","39e20f3c":"X.head()","5bc77db4":"X.columns","25d77e7c":"train_dataset.describe()","e44cf3f3":"train_dataset.info()","086f7315":"test_dataset.describe()","3067fb73":"test_dataset.info()","ea4d8483":"y['Cover_Type'].value_counts()","c92655ed":"len(X['Id'].unique()) == len(X)","94dc3d3a":"#List of continuous numeric data\nlist_contfeatures=['Elevation', 'Aspect', 'Slope', 'Horizontal_Distance_To_Hydrology', 'Vertical_Distance_To_Hydrology', 'Horizontal_Distance_To_Roadways', 'Hillshade_9am', 'Hillshade_Noon', 'Hillshade_3pm','Horizontal_Distance_To_Fire_Points']","dae1614e":"len(list_contfeatures)","8920fdb5":"check = train_dataset.copy()\ncheck_test = test_dataset.copy()","beb82c83":"#Setting values to string type\ncheck['Cover_Type']=check['Cover_Type'].astype(str)","a5ed701e":"for col in list_contfeatures:\n    sns.catplot(x='Cover_Type',y=col,data=check,kind='box')","274ba538":"list_feat_wildarea=[]\nstr1 = \"Wilderness_Area\"\nfor i in range(1,5):\n    str2=str1+str(i)\n    list_feat_wildarea.append(str2)\ncheck['Wilderness_Area_sum']=check[list_feat_wildarea].sum(axis=1)\ncheck_test['Wilderness_Area_sum']=check_test[list_feat_wildarea].sum(axis=1)","4b0d383c":"#Checking in train data whether it contains only 1 unique value and it should be 1\ncheck['Wilderness_Area_sum'].unique()","8a0a2cea":"#Checking in test data whether it contains only 1 unique value and it should be 1\ncheck_test['Wilderness_Area_sum'].unique()","50aec7ad":"list_feat_soiltype=[]\nstr1 = \"Soil_Type\"\nfor i in range(1,41):\n    str2=str1+str(i)\n    list_feat_soiltype.append(str2)\ncheck['Soil_Type_sum']=check[list_feat_soiltype].sum(axis=1)\ncheck_test['Soil_Type_sum']=check_test[list_feat_soiltype].sum(axis=1)","6ee475f4":"#Checking in train data whether it contains only 1 unique value and it should be 1\ncheck['Soil_Type_sum'].unique()","ab83ee5a":"#Checking in test data whether it contains only 1 unique value and it should be 1\ncheck_test['Soil_Type_sum'].unique()","a0c701db":"str1=\"Wilderness_Area\"\nfor i in range(1,5):\n    str2=str1+str(i)\n    check.loc[(check[str2]==1),str1]=str2\n    check_test.loc[(check_test[str2]==1),str1]=str2","9b4a32f9":"#Lets check the uniqueness - should have only 4 categories\ncheck['Wilderness_Area'].unique()","1d7c94b5":"check_test['Wilderness_Area'].unique()","160937ea":"str1=\"Soil_Type\"\nnot_present =[]\nfor i in range(1,41):\n    str2=str1+str(i)\n    check.loc[(check[str2]==1),str1] = str2\n    if len(check.loc[(check[str2]==1),str1]) ==0:\n        not_present.append(str2)\n    check_test.loc[(check_test[str2]==1),str1]=str2","ea02fde1":"check['Soil_Type'].unique()","23762ddd":"not_present","cb7424f9":"len(check_test['Soil_Type'].unique())==40","424199f9":"sns.catplot(x='Wilderness_Area',data=check,kind='count',order=['Wilderness_Area1','Wilderness_Area2','Wilderness_Area3','Wilderness_Area4'])\nplt.xticks(rotation=90)","8d1eb9a7":"plt.figure(figsize=(50,10))\ng= sns.catplot(x='Soil_Type',data=check,kind='count',height=4,aspect=2)\nplt.xticks(rotation=90)","c39f539b":"fig,ax = plt.subplots()\nax.hist(check['Elevation'])\nfig.set_size_inches([5,5])\nplt.show()","78e67a4a":"for col in list_contfeatures:\n    fig,ax=plt.subplots()\n    ax.hist(check[col])\n    ax.set_title(col)\n    ax.set_xlabel(col)\n    ax.set_ylabel(\"Number of occurrences\")\n    fig.set_size_inches([5,5])\n    plt.show()","12ed86d5":"check[list_contfeatures].corr()","aaeaa58c":"check_corr=check[list_contfeatures].corr().abs()","1a70c303":"# Generate a mask for the upper triangle\nmask = np.zeros_like(check_corr, dtype=np.bool)\n# To extract values corresponding to upper(u) triangle(tri) of mask use np.triu_indices_from\nmask[np.triu_indices_from(mask)] = True\n\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(11, 9))\n\n# Generate a custom diverging colormap\ncmap = sns.diverging_palette(220, 10, as_cmap=True)\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(check_corr, mask=mask, cmap=cmap, center=0,\n            square=True, linewidths=.5)","41fba0e1":"xdf=check_corr.mask(check_corr<0.4).mask(check_corr==1)","7858c722":"xdf","2d54add3":"xdf.to_csv(\"correlation_values_with0_5mask.csv\")","f94d9291":"sns.regplot(x=\"Elevation\",y=\"Horizontal_Distance_To_Roadways\",data=check)","6a38b320":"sns.relplot(x=\"Elevation\",y=\"Horizontal_Distance_To_Roadways\",data=check,row=\"Cover_Type\",kind='scatter')","2aa1d539":"sns.regplot(x=\"Aspect\",y=\"Hillshade_3pm\",data=check)","f3830cde":"sns.relplot(x=\"Aspect\",y=\"Hillshade_3pm\",data=check,row=\"Cover_Type\",kind='scatter')","6aeae268":"sns.regplot(x='Slope',y='Hillshade_Noon',data=check)","6d1f2c9a":"sns.relplot(x='Slope',y='Hillshade_Noon',data=check,row='Cover_Type')","c3819244":"sns.regplot(x='Horizontal_Distance_To_Hydrology',y='Vertical_Distance_To_Hydrology',data=check)","a8f1f7cf":"sns.relplot(x='Horizontal_Distance_To_Hydrology',y='Vertical_Distance_To_Hydrology',data=check,row='Cover_Type')","508df701":"sns.regplot(x='Hillshade_9am',y='Hillshade_3pm',data=check)","650cde9e":"sns.relplot(x='Hillshade_9am',y='Hillshade_3pm', data=check,kind='scatter',row='Cover_Type')","5f080c64":"sns.regplot(x='Horizontal_Distance_To_Fire_Points',y='Hillshade_9am',data=check)","2e98d532":"sns.relplot(x='Horizontal_Distance_To_Fire_Points',y='Hillshade_9am',data=check,row='Cover_Type')","eefcba5b":"for col in list_contfeatures:\n    fig1,ax1 = plt.subplots(figsize=(20,10))\n    g=sns.boxplot(ax=ax1,x='Cover_Type',y=col,data=check,hue='Wilderness_Area',hue_order=['Wilderness_Area1','Wilderness_Area2','Wilderness_Area3','Wilderness_Area4'])\n    ax1.set_title(col,fontsize=24)\n    plt.show()","fc811f82":"for col in list_contfeatures:\n    fig1,ax1 = plt.subplots(figsize=(20,10))\n    g=sns.swarmplot(ax=ax1,x='Cover_Type',y=col,data=check,hue='Wilderness_Area',hue_order=['Wilderness_Area1','Wilderness_Area2','Wilderness_Area3','Wilderness_Area4'])\n    ax1.set_title(col,fontsize=24)\n    plt.show()","ef8613b7":"for col in list_contfeatures:\n    fig1,ax1 = plt.subplots(figsize=(20,10))\n    g=sns.violinplot(ax=ax1,x='Cover_Type',y=col,data=check,hue='Wilderness_Area',hue_order=['Wilderness_Area1','Wilderness_Area2','Wilderness_Area3','Wilderness_Area4'])\n    ax1.set_title(col,fontsize=24)\n    plt.show()","f20837b5":"for col in list_contfeatures:\n    fig1,ax1 = plt.subplots(figsize=(20,10))\n    g=sns.boxplot(ax=ax1,x='Wilderness_Area',y=col,data=check,hue='Cover_Type',hue_order=['1','2','3','4','5','6','7'])\n    ax1.set_title(col,fontsize=24)\n    plt.show()","aefb7f32":"check.groupby(['Wilderness_Area','Cover_Type']).size()","4faa0615":"check.groupby(['Wilderness_Area','Soil_Type']).size()","df17194a":"check_test.shape","e18cb3af":"wilderness_area1_dataset = pd.concat([check.loc[check['Wilderness_Area']==\"Wilderness_Area1\",check.columns!='Cover_Type'],check_test.loc[check_test['Wilderness_Area']==\"Wilderness_Area1\"]],axis=0)","63dc0f66":"wilderness_area1_dataset.describe()","dd5492f6":"wilderness_area2_dataset = pd.concat([check.loc[check['Wilderness_Area']==\"Wilderness_Area2\",check.columns!='Cover_Type'],check_test.loc[check_test['Wilderness_Area']==\"Wilderness_Area2\"]],axis=0)","f8a35cca":"wilderness_area2_dataset.describe()","16287aac":"wilderness_area3_dataset = pd.concat([check.loc[check['Wilderness_Area']==\"Wilderness_Area3\",check.columns!='Cover_Type'],check_test.loc[check_test['Wilderness_Area']==\"Wilderness_Area3\"]],axis=0)","963a82be":"wilderness_area3_dataset.describe()","ca37bac5":"wilderness_area4_dataset = pd.concat([check.loc[check['Wilderness_Area']==\"Wilderness_Area4\",check.columns!='Cover_Type'],check_test.loc[check_test['Wilderness_Area']==\"Wilderness_Area4\"]],axis=0)","59a49263":"wilderness_area4_dataset.describe()","bd50168f":"#### 3.A. Cover Type v\/s Numerical Features (for different Wilderness_Areas) Boxplot","c960b6ba":"#### 2.A. Cover Type v\/s Numerical Features (for different Wilderness_Areas) Histogram","3f385a51":"#### 2.C.x) For Horizontal_Distance_To_Fire_Points, Hillshade_9am is the highly correlated feature with correlation at 0.486385","b209d19c":"#### => Confirmed every 30mx30m contains only one Soil Type","6b2e4d13":"#### 2.B. Calculation of Correlation values","5531eaf1":"Checking whether 1 Wilderness Area can have multiple Cover Types","892efa06":"Checking Hypothesis for 2. Wilderness_area in training & testdata just to be sure","4af836bd":"#### 2.C.ii) For Aspect, Hillshade_3pm is the highly correlated feature with correlation at 0.635022","34ddf70d":"#### => There is an equal class distribution","315c2b6d":"Start with general understanding of features\n1. Categorical\n2. Continuous\n3. Categorical v\/s Continuous","7d028ffa":"#### 2.C. Scatter plots","a496d510":"#### Based on description: \n\n#### Below columns seem to have continuous numeric data \n'Elevation', 'Aspect', 'Slope', 'Horizontal_Distance_To_Hydrology', 'Vertical_Distance_To_Hydrology', 'Horizontal_Distance_To_Roadways', 'Hillshade_9am', 'Hillshade_Noon', 'Hillshade_3pm','Horizontal_Distance_To_Fire_Points'\n\n\n#### Below columns seem to have categorical data \nWilderness_Area (4 binary columns, 0 = absence or 1 = presence) - Wilderness area designation\nSoil_Type (40 binary columns, 0 = absence or 1 = presence) - Soil Type designation\nCover_Type (7 types, integers 1 to 7) - Forest Cover Type designation","3785221a":"#### Lets also try analyzing wilderness areas","9b66fc70":"2.C.vi) For Vertical_Distance_To_Hyrdology, Vertical_Distance_To_Hydrology is the highly correlated features (v)","152ba9c1":"#### 2.C.v) For Horizontal_Distance_To_Hydrology, Vertical_Distance_To_Hydrology is the highly correlated feature with correlation at 0.652142","94209469":"#### => Soil types 7 & 15 are absent in train dataset","8fcc34f5":"#### 1.A.  Wilderness Area(Countplot)","7ac67459":"# I. Importing necessary packages & files","89ec10c0":"2.C.ix) For Hillshade_3pm, Hillshade_Noon is the highly correlated feature with correlation at 0.7799647 (vii)","dbfb88e1":"# II. Understand the problem","227ca863":"#### 3.B. Cover Type v\/s Numerical Features (for different Wilderness_Areas) Swarmplot","57b80fd2":"Data Type: Tabluar data\n\nProblem Type: Classification\n\nCompetition Metric: Categorization Accuracy, percentage of correct predictions","7683dd8c":"I dont think it will be useful to create scatter plots blindly. \nHere we had 10 numerical features\nSo this would account for 10C2 (45) plots\nSo lets take hint from correlation metrics","8808c6de":"## A. Size of the data","e930345d":"### 2. Continuous Features","1100a029":"#### 2.C.vii) For Hillshade_9am,Hillshade_3pm is the highly correlated feature with correlation at 0.779965","a4a6f24d":"#### 1.B.  Soil Type (Countplot)","2f23665c":"#### These observations are majorly within the range of 2000 - 3500 meters elevation","c4a347c6":"## B. Properties of target variable","eaea33d0":"#### Yes, 1 wilderness area can have multiple Soil Types","5810ff85":"Lets create 2 columns for:\n    1. 4 feature columns corresponding to Wilderness Areas (naming it 'Wilderness_Area')\n    2. 40 feature columns corresponding to Soil Types (naming it 'Soil_Type')\n=> In essence we have to analyze these categorical features (compressing 44 cols to 2 cols).This will prove useful when for EDA purposes\nHowever for model building we preserve the one-hot encoded features","c1d267ab":"2.C.viii) For Hillshade_Noon, Elevation is the highly correlated feature with correlation at 0.578 (i)","d53a03fc":"# Index:\nI [Import necessary packages & files](#first-bullet)\n\nII [Understanding the problem](#second-bullet)\n\nIII [EDA](#third-bullet)\n\n    A. Looking at size of data\n    \n    B. Properties of the target variable\n    \n    C. Properties of the features: Finding some peculirarities and dependencies between features and target variable\n    \n    D. Generate ideas for feature engineering and future hypothesis","e5fa0900":"### Now lets analyze the relationship of numerical & categorical features\nJust to recap for our EDA, we have:\n\nA. 3 categorical variables: 2 features detailing \n    1. Wilderness_Area & \n    2. Soil_Type \n    3. and (1 Target feature:) Cover_Type\nB. 10 numerical variables (all of which are features currently):\n    1. 'Elevation',\n    2. 'Aspect', \n    3. 'Slope', \n    4. 'Horizontal_Distance_To_Hydrology', \n    5. 'Vertical_Distance_To_Hydrology', \n    6. 'Horizontal_Distance_To_Roadways', \n    7. 'Hillshade_9am', \n    8. 'Hillshade_Noon', \n    9. 'Hillshade_3pm',\n    10. 'Horizontal_Distance_To_Fire_Points'","738e5c61":"#### B. Importing files","148e6de9":"Understanding the distribution of points within these numerical features wrt cover type","3c2bbb53":"#### Looking at how these features are distributed & how these vary with Cover Type (using Boxplot)","f717d1c8":"#### 2.A. Histograms","f4027b84":"#### Creating a new column to compress one-hot encoded features in wilderness area for visualization purposes\nWe know every observation corresponds to 30mx30m patch. We are now checking whether each 30mx30m has unique:\n1. Cover_Type \n2. Wilderness_Area\n3. Soil_Type\n\nWe know that for 1. Cover_Type, this column contains an integer value thus every 30x30 patch is mapped to a cover type\nBut for Wilderness Area  we are unsure as these are one-hot encoded. \nThese being binary values, we will sum it across the different values","63df9bb6":"#### 3.C. Cover Type v\/s Numerical Features to understand distribution for different Wilderness_Areas (ViolinPlot)","846b8a46":"#### 2.C.i) For Elevation, Horizontal Distance is the highly correlated feature with correlation at 0.578659","119d5d0a":"Checking 'Id' Column whether it is unique with entries","094cad6a":"#### A. Importing packages","504ad3ee":".describe() & .info() gave the constant count at 15120 (train dataset) and 565892 (test dataset) across all columns\nThus no null values","e7f367e7":"## C. Properties of features","fa680f95":"#### => Confirmed every 30mx30m belongs to only one Wildereness_Area\nNow next to Soil_Type","1042fef4":"#### => Wilderness Area 3 has higher number of number of observations compared to Wilderness Area 2","a5b6dcb9":"# III. Initial EDA\n\nGoals of EDA:\n* Size of the data\n* Properties of the target variable (check for issues like high class imbalance, skewed distribution in a regression)\n* Properties of the features: Finding some peculirarities and dependencies between features and target variable is always useful\n* Generate ideas for feature engineering and future hypothesis","8f4a777a":"### 3. Categorical v\/s Numerical Features","3486afca":"#### Yes, 1 wilderness area can have multiple Cover Types","f8afcedf":"2.C.vi) For Horizontal_Distance_To_Roadways, Elevation is the highly correlated feature with correlation (i)","3a540c81":"#### D. Generate ideas for feature engineering and formulating any possible hypothesis \nWe visualized different features, their distribution and dependencies with one another and target variable, which helped uncover many patterns such as elevation distribution for cover type 7 is on the higher side and so on\nWe found strong correlations (only taking magnitude) between features such as:\n1. Hillshade @ 9 am and Hillshade @ 3pm \n2. Horizontal Distance to Hydrology & Vertical Distance Hydrology\n....\n\nWhile building models, we can use these insights. With a baseline model ready, we keep on piling these and see whether there is any improvement\nPlus we will be using feature importance from RF, PCA to further drill down feature importance.\n\n### Next up is start building models","f1dfc147":"### 1. Only on Categorical Features (Categorical v\/s Categorical)","43fd1141":"#### 2.C.iii) For Slope, Hillshade_noon is the highly correlated feature with correlation at 0.612613"}}