{"cell_type":{"ab9991c0":"code","ebf4447c":"code","85ab6960":"code","a7c1a0ca":"code","7b4f9575":"code","4b353f7e":"code","1521c857":"code","cf5071c9":"code","b60ef018":"code","d707b702":"code","8c8ae584":"code","34131862":"code","5938a8da":"code","067da624":"code","c76bd717":"code","10f3afcb":"code","098eb25f":"code","db536bfa":"code","c1b95b2f":"code","0a6de501":"code","9d0dbdc4":"code","04aa7aeb":"code","249a557f":"code","45a7c660":"code","d29931a4":"markdown"},"source":{"ab9991c0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","ebf4447c":"meningitis_dataframe = pd.read_csv('..\/input\/meningitis_dataset.csv', delimiter=',')\nnRow, nCol = meningitis_dataframe.shape\nprint(\"Dataset consists of [\", nRow, \"] Rows and [\", nCol, \"] Columns\")","85ab6960":"meningitis_dataframe.head()","a7c1a0ca":"meningitis_dataframe.describe()","7b4f9575":"meningitis_dataframe.info()","4b353f7e":"p_alive, p_dead,P_alive = meningitis_dataframe.groupby('health_status').size()\np_alive=p_alive+P_alive\nmeningitis_dataframe.groupby('health_status').size()","1521c857":"print(p_alive, \"Dead Patients and \", p_dead, \"Patients Alive\")","cf5071c9":"p_confirmed,p_unconfirmed, P_confirmed = meningitis_dataframe.groupby('report_outcome').size()\np_confirmed = P_confirmed + p_confirmed\nmeningitis_dataframe.groupby('report_outcome').size()","b60ef018":"print(p_unconfirmed, \"Clinically Unconfirmed Cases and\", p_confirmed, \"Clinically Confirmed Cases\")","d707b702":"m_NmA,m_NmC, m_NmW, m_Null, m_null = meningitis_dataframe.groupby('serotype').size()\nm_null = m_Null + m_null\nmeningitis_dataframe.groupby('serotype').size()","8c8ae584":"print(m_NmA, \"Neisseria meningitidis group A (NmA) Records,\", m_NmC, \"Neisseria meningitidis group C (NmC) Records,\", m_NmW, \"Neisseria meningitidis group W (NmW) Records, and\", m_null, \"Non Meningitis Records\")","34131862":"m_female, m_male =meningitis_dataframe.groupby('gender').size()\nmeningitis_dataframe.groupby('gender').size()","5938a8da":"print(m_female, \"Female Patients and \", m_male, \"Male Patients\")","067da624":"m_cholera, m_diarrohea, m_ebola, m_malaria, m_marburg, m_measles, m_meningitis, m_rubella, m_viral_fever, m_yellow_fever =meningitis_dataframe.groupby('disease').size()\nmeningitis_dataframe.groupby('disease').size()","c76bd717":"print(m_cholera, \"Choleara Patients,\", m_diarrohea, \"Diarrhoea Patients,\", m_ebola, \"Ebola Patients,\", m_malaria, \"Malaria Patients,\", m_marburg, \"Marburg Virus Patients,\", m_measles, \"Measles Patients,\", m_meningitis,\"Meningitis Patients,\", m_rubella,\"Rubella Mars Patients,\", m_viral_fever,\"Viral Haemmorhaphic Fever,\", m_yellow_fever, \"Yellow Fever Patients\")","10f3afcb":"meningitis_dataframe.groupby('state').size()","098eb25f":"meningitis_dataframe.groupby('settlement').size()","db536bfa":"meningitis_dataframe.groupby('age').size()","c1b95b2f":"meningitis_dataframe.groupby('report_year').size()","0a6de501":"meningitis_dataframe.hist(figsize=(120,80))\nplt.show()","9d0dbdc4":"meningitis_dataframe.hist(edgecolor='black', linewidth=1.2, figsize=(120,80))\nplt.show()","04aa7aeb":"plt.figure(figsize=(60,40))\nplt.subplot(2,2,1)\nsns.violinplot(x='age', y='gender', data=meningitis_dataframe)\nplt.show()","249a557f":"meningitis_dataframe.boxplot(by='age', figsize=(120,80))\nplt.show()","45a7c660":"pd.plotting.scatter_matrix(meningitis_dataframe, figsize=(12,8))\nplt.show()","d29931a4":"plt.figure(figsize=(120,80)\nsns.pairplot(meningitis_dataframe, hue='gender', size=3, aspect=1)\nplt.show()"}}