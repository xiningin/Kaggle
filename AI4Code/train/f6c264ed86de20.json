{"cell_type":{"a9ea72a3":"code","4e0182d2":"code","c19f098a":"code","6951206a":"code","aba99ca0":"code","d7ca2ab7":"code","8b8820d3":"code","87b665fc":"code","f6ef3e5b":"code","33f81fcb":"code","4dd48f14":"code","fc470ee9":"code","eb46dead":"code","55bc596e":"code","536f94a1":"code","7dfa9ad8":"markdown","c8c98770":"markdown","5c78cfd4":"markdown","eb343c4e":"markdown","3e954a0d":"markdown","f1113fbd":"markdown","10d885e9":"markdown","616278ab":"markdown","6a701c54":"markdown"},"source":{"a9ea72a3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np \nimport pandas as pd \n\nimport matplotlib.pyplot as plt\n\nimport seaborn as sns","4e0182d2":"df=pd.read_csv(\"..\/input\/restaurant-and-market-health-inspections.csv\")\ndf.head(3).T","c19f098a":"df.shape","6951206a":"# sore distribution\ndf['score'] = df['score'].astype(int)\nax = df[\"score\"].plot(kind = \"hist\",title = \"Score Distribution\",color = \"forestgreen\",figsize=(10,7),alpha=0.5)\nax.set_xlabel(\"sore value\")","aba99ca0":"# find the abnormal value of grade\ndf[~df['grade'].isin(['A','B','C'])]","d7ca2ab7":"# deal with the abnormal value\ndf.loc[49492,['grade']] = 'C'","8b8820d3":"# list grade distirbution\ngrade_disribution = df.groupby('grade').size()\npd.DataFrame({'Count':grade_disribution.values},index = grade_disribution.index)","87b665fc":"temp = df.groupby('pe_description').size()\ndescription_distribution = pd.DataFrame({'Count':temp.values},index = temp.index)\ndescription_distribution","f6ef3e5b":"description_distribution.plot(kind='barh',color = 'g',figsize=(10,7))","33f81fcb":"def sub_risk(x):\n    return x.split(' ')[-2]\n    \ndf['risk'] = df['pe_description'].astype(str).apply(sub_risk)\ntemp =  df.groupby('risk').size()\nrisk_distribution = pd.DataFrame({'Count':temp.values},index = temp.index)\n\n\nax = risk_distribution['Count'].plot(kind=\"pie\", legend=True,autopct='%.2f', figsize=(6, 6))\nax.set_title(\"Risk Distribution\")","4dd48f14":"def risk2value(x):\n    if x == 'LOW':\n        return 10\n    elif x == 'MODERATE':\n        return 5\n    else:\n        return 0\ndef grade2value(x):\n    if x == 'A':\n        return 10\n    elif x == 'B':\n        return 5\n    else:\n        return 0\ndf['risk_v'] = df['risk'].apply(risk2value)\ndf['grade_v'] = df['grade'].apply(grade2value)\ndf2 = df.loc[:,['score','grade_v','risk_v']]\ncorr = df2.corr()\ncorr = (corr)\nsns.heatmap(corr,xticklabels = corr.columns.values, yticklabels = corr.columns.values, cmap = \"Purples\",center = 0)","fc470ee9":"# list top 20 facilities with most restaurants or markets\nfacility_distirbution = df.groupby(['facility_id','facility_name']).size()\ntop20_facility = facility_distirbution.sort_values(ascending=False).head(20)\npd.DataFrame({'Count':top20_facility.values},index = top20_facility.index)","eb46dead":"# list top 20 owners with most restaurants or markets\nowner_distirbution = df.groupby(['owner_id','owner_name']).size()\ntop20_owner = owner_distirbution.sort_values(ascending=False).head(20)\npd.DataFrame({'Count':top20_owner.values},index = top20_owner.index)","55bc596e":"df2=pd.read_csv(\"..\/input\/restaurant-and-market-health-violations.csv\")\ndf2.head(3).T","536f94a1":"violation_description = df2.groupby('violation_description').size()\npd.DataFrame({'Count':violation_description.values},index = violation_description.index).sort_values(by = 'Count',ascending=False)","7dfa9ad8":"## Analyze Sore and Grade distribution\n\n* Score distribution","c8c98770":"## Analyze Facilities and Owners of these Restaurants and Markets","5c78cfd4":"## Read the inspections data","eb343c4e":"## Risk Analysis","3e954a0d":"Majority of restaurants and markets have very high risks","f1113fbd":"## Common Health Code Violations\n\n\n3 most violated codes:\n    #44. Floors, walls and ceilings: properly built, maintained in good repair and clean\t30289\n    #33. Nonfood-contact surfaces clean and in good repair\t28426\n    #35. Equipment\/Utensils - approved; installed; clean; good repair, capacity","10d885e9":"## Read the violations data","616278ab":"Analyze the correlation between score, grade and risk","6a701c54":"* Grade dirstribution\n\n    first, we need to find the abnormal value of grade"}}