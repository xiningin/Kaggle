{"cell_type":{"3a6cc5a4":"code","1e1b2abb":"code","ba3b369f":"code","5668eb49":"code","eee4a561":"code","d23cd652":"code","1b7dcf62":"markdown","f354c42f":"markdown","784d900b":"markdown","c7849d66":"markdown"},"source":{"3a6cc5a4":"import numpy as np \nimport pandas as pd \nfrom pathlib import Path\nimport matplotlib.pyplot as plt\nfrom scipy import signal\nfrom scipy.fft import fftshift","1e1b2abb":"train_df = pd.read_csv('\/kaggle\/input\/liverpool-ion-switching\/train.csv')\ntest_df = pd.read_csv('\/kaggle\/input\/liverpool-ion-switching\/test.csv')\nsample_sub = pd.read_csv('\/kaggle\/input\/liverpool-ion-switching\/sample_submission.csv')","ba3b369f":"train_df.head()","5668eb49":"plt.figure(figsize=(20,5)); res=1000\nplt.plot(train_df.time[::res], train_df.signal[::res])\nplt.ylabel('signal')\nplt.xlabel('time')\nplt.show()","eee4a561":"sos = signal.butter(5, 10, 'hp', fs=10000, output='sos')\nfiltered = signal.sosfilt(sos, train_df.signal)","d23cd652":"plt.figure(figsize=(20,5)); res=1000\nplt.plot(train_df.time[::res], filtered[::res])","1b7dcf62":"The original signal is plotted as below. You can easily recognize the drifted signal.","f354c42f":"Use a highpass Butterworth signal then use can get a filtered signal without the drift.","784d900b":"In this notebook I review some filtering technique to remove the drifted signal. The idea is conceived when I came across this notebook https:\/\/www.kaggle.com\/cdeotte\/one-feature-model-0-930 .The author manually model the drifted signal (take some points from the graph then fit a polinomial) and it is very natural in this case because the signal is just 1st and 2nd order. But how about in a real case when it is not that evident.\n\nIn signal processing, people normally try to use a high pass filter to remove this low frequency signal","c7849d66":"In the next update, I will try to carrefully choose the cut off frequency by reviewing the frequency spectrum of the parabolic signal. I also need to retain the mean value of signal during each batch because it is removed after filtering."}}