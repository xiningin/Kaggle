{"cell_type":{"1618905a":"code","994f1c8f":"code","46797afa":"code","5733ab5a":"code","b2c905a1":"code","b07db5a2":"markdown","363558dd":"markdown","5cb8b2ff":"markdown"},"source":{"1618905a":"import pandas as pd\nimport numpy as np\nimport os\nimport cv2\nimport matplotlib.pyplot as plt\nfrom pathlib import Path\nimport time","994f1c8f":"x_size = 0.2\ny_size = 0.2","46797afa":"os.getcwd()\nos.listdir('..\/input\/landmark-recognition-2020\/')","5733ab5a":"train = pd.read_csv('..\/input\/landmark-recognition-2020\/train.csv')","b2c905a1":"start = time.time()\n\nfor d1 in os.listdir('..\/input\/landmark-recognition-2020\/train\/'):\n    print(\"d1:\", d1)\n    for d2 in os.listdir('..\/input\/landmark-recognition-2020\/train\/'+d1+'\/')[0]:\n        print(\"d2:\",d2)\n        for d3 in os.listdir('..\/input\/landmark-recognition-2020\/train\/'+d1+'\/'+d2+'\/'):\n            print(\"d3:\",d3)\n            for i in os.listdir('..\/input\/landmark-recognition-2020\/train\/'+d1+'\/'+d2+'\/'+d3+'\/'):\n                img = cv2.imread('..\/input\/landmark-recognition-2020\/train\/'+d1+'\/'+d2+'\/'+d3+'\/'+i)\n                small = cv2.resize(img, (0,0), fx=x_size, fy=y_size)\n                target = str(train[train['id'] == i.replace('.jpg','')].landmark_id.values[0])\n                \n                Path(str(target)).mkdir(parents=True, exist_ok=True)\n                cv2.imwrite(os.path.join(target,i), small)\n        \nend = time.time()\nprint(end - start)","b07db5a2":"### Resizing the images and saving them in the folders as per their category\n#### I'm doing it just for the 1st subfolder due to computation constraints on kaggle kernel, you can edit line 5 in the below cell","363558dd":"#### Since the orignal train size is ~48GB, I'm doing 20% so as to reduce it to ~10GB in order to fit to kaggle kernel for training\n#### You can adjust the ratio as per your need in the 2nd cell\n#### Feel free to provide your feedback and better ways of doing this","5cb8b2ff":"## Resizing images to 20% of orignal size"}}