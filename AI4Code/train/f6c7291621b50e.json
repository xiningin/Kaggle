{"cell_type":{"aaf5e343":"code","81582e52":"code","bd55bf19":"code","0b4ea1a0":"code","7b6bd21a":"code","8f68660c":"code","63bb9329":"code","f03c6576":"code","89e2faa7":"code","5b74b401":"code","ef12c3e3":"code","79f38715":"code","5f3274f0":"code","108f906d":"code","15fafe85":"code","f5073ee7":"markdown","bea161af":"markdown","8d0251d1":"markdown","a864f016":"markdown","27208d4a":"markdown","f4543b43":"markdown","44e668df":"markdown","ce5469d5":"markdown","f3e1e926":"markdown","9a9cb3b7":"markdown","9836f567":"markdown"},"source":{"aaf5e343":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","81582e52":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport seaborn as sns\n%matplotlib inline\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor\nimport sklearn.metrics as metrics\nimport os","bd55bf19":"data = pd.read_csv('\/kaggle\/input\/loan-prediction-based-on-customer-behavior\/Training Data.csv')","0b4ea1a0":"data.head() #displaying head of the .csv file","7b6bd21a":"data = data.drop(\"Id\", axis = 1)\ndata = data.drop(\"CITY\", axis=1)","8f68660c":"data.head() #displaying head of the .csv file","63bb9329":"data.isnull().sum()","f03c6576":"data.describe()","89e2faa7":"en = LabelEncoder()\ncatCols = ['Married\/Single','House_Ownership','Car_Ownership','Profession','STATE']\nfor cols in catCols:\n    data[cols] = en.fit_transform(data[cols])","5b74b401":"data.head() #displaying head of the .csv file","ef12c3e3":"y = data[\"Risk_Flag\"]\nX = data.drop(\"Risk_Flag\",axis = 1)","79f38715":"Y=pd.DataFrame(y)","5f3274f0":"X_train, X_test, y_train, y_test = train_test_split(X, Y, train_size=0.8, test_size=0.2)","108f906d":"from xgboost import XGBClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import confusion_matrix, precision_score, recall_score, f1_score, accuracy_score, roc_auc_score\n# Define the model\n\n    \n    # defining the model\nclf = XGBClassifier(learning_rate=0.1, \n                    n_estimators=1000, \n                    use_label_encoder=False,\n                    random_state=42)\n    \nclf.fit(X_train, y_train, eval_metric='logloss')\npredictions = clf.predict(X_test) \nprint(\"accuracy_score: \" + str(accuracy_score(y_test, predictions)))","15fafe85":"print(\"ROC AUC score: \" + str(roc_auc_score(y_test, predictions)))","f5073ee7":"# Checking for NULL Values","bea161af":"# Encoding The Data","8d0251d1":"# Importing Required Libraries","a864f016":"**This notebook tries to predict the House Loan Defaulters with the help of various features such as Profession, Current House Years, Current Job Years, Income, etc.**","27208d4a":"# Splitting Dataset into Train and Test","f4543b43":"# Creating the XGBoost Model","44e668df":"# Describing the Data","ce5469d5":"# Reading the CSV File ","f3e1e926":"# Dropping the Unecessary Columns","9a9cb3b7":"# Calculating the ROC Score of Model","9836f567":"![](https:\/\/www.paisabazaar.com\/wp-content\/webp-express\/webp-images\/doc-root\/wp-content\/uploads\/2017\/11\/double-whammy.jpg.webp)"}}