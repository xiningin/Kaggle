{"cell_type":{"36891fca":"code","9efd848d":"code","9482acbe":"code","7d6d3552":"code","3e57ba98":"code","1fce6eef":"code","74edea40":"code","17ae74cd":"code","6c33d4cb":"code","46f1318c":"code","cf588aa9":"code","a6662419":"code","24f1c67e":"code","deea141c":"code","b111db39":"code","845b3e87":"code","e2d8c909":"code","06f5235c":"code","48dd6385":"code","eb124d84":"code","fc2a235a":"code","c3eae53f":"code","aa256b64":"code","817caa29":"code","1430b112":"code","61e9559c":"code","2bd688bd":"markdown","6cd7f261":"markdown"},"source":{"36891fca":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in 3\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n","9efd848d":"data = pd.read_csv(\"\/kaggle\/input\/diabetic-retinopathy-resized\/trainLabels.csv\")\ndata.head()","9482acbe":"data.head()","7d6d3552":"data['image_name'] = [i+\".jpeg\" for i in data['image'].values]\ndata.head()","3e57ba98":"data['level'].hist()\ndata['level'].value_counts()","1fce6eef":"from sklearn.model_selection import train_test_split","74edea40":"train, val = train_test_split(data, test_size=0.15)","17ae74cd":"train.shape, val.shape","6c33d4cb":"from keras.preprocessing.image import ImageDataGenerator","46f1318c":"import cv2\ndef load_ben_color(image):\n    IMG_SIZE = 224\n    sigmaX=10\n    image = cv2.resize(image, (IMG_SIZE, IMG_SIZE))\n    image=cv2.addWeighted ( image,4, cv2.GaussianBlur( image , (0,0) , sigmaX) ,-4 ,128)\n    return image","cf588aa9":"data_gen = ImageDataGenerator(rescale=1\/255.,\n                              zoom_range=0.15,\n                              fill_mode='constant',\n                              cval=0.,\n                              horizontal_flip=True,\n                              vertical_flip=True,\n                              preprocessing_function=load_ben_color)","a6662419":"# batch size\nbs = 32\n\ntrain_gen = data_gen.flow_from_dataframe(train, \n                                         \"..\/input\/diabetic-retinopathy-resized\/resized_train\/resized_train\/\",\n                                         x_col=\"image_name\", y_col=\"level\", class_mode=\"raw\",\n                                         batch_size=bs,\n                                         target_size=(224, 224))\nval_gen = data_gen.flow_from_dataframe(val,\n                                       \"..\/input\/diabetic-retinopathy-resized\/resized_train\/resized_train\/\",\n                                       x_col=\"image_name\", y_col=\"level\", class_mode=\"raw\",\n                                       batch_size=bs,\n                                       target_size=(224, 224))","24f1c67e":"from keras.applications.mobilenet import MobileNet\nimport keras.layers as L\nfrom keras.models import Model","deea141c":"base_model = MobileNet(weights='imagenet',\n                   include_top=False,\n                   input_shape=(224, 224, 3))\nx = base_model.output\nx = L.GlobalMaxPooling2D()(x)\nx = L.BatchNormalization()(x)\nx = L.Dropout(0.4)(x)\nx = L.Dense(1024, activation=\"relu\")(x)\nx = L.Dropout(0.2)(x)\nx = L.Dense(64, activation=\"relu\")(x)\npredictions = L.Dense(5, activation='softmax')(x)","b111db39":"model = Model(inputs=base_model.input, outputs=predictions)","845b3e87":"for layer in base_model.layers[:-15]: layer.trainable = False","e2d8c909":"model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])","06f5235c":"model.summary()","48dd6385":"from keras.callbacks import ModelCheckpoint, ReduceLROnPlateau\nmodel_chk = ModelCheckpoint(\"mobilnet_model.h5\", save_best_only=True, monitor=\"val_accuracy\")\nreduce_lr = ReduceLROnPlateau()","eb124d84":"model.fit_generator(train_gen, train_gen.n \/\/ bs,\n                    validation_data=val_gen, validation_steps=val_gen.n \/\/ bs,\n                    epochs=30, workers=4, callbacks=[model_chk])","fc2a235a":"from keras.models import load_model\nmodel = load_model(\"mobilnet_model.h5\")","c3eae53f":"model.evaluate_generator(val_gen, steps=val_gen.n\/bs, verbose=1)","aa256b64":"from PIL import Image\nim = Image.open(\"..\/input\/diabetic-retinopathy-resized\/resized_train\/resized_train\/\" + val.iloc[0].image_name)\nim = np.array(im.resize((224, )*2, resample=Image.LANCZOS))\nim.shape","817caa29":"import matplotlib.pyplot as plt\nplt.imshow(im)","1430b112":"plt.imshow(load_ben_color(im))","61e9559c":"print(\"predicted:\", np.argmax(model.predict(load_ben_color(im).reshape(1, *im.shape))[0]))\nprint(\"actual:\", val.iloc[0].level)","2bd688bd":"test some instances","6cd7f261":"### ResNet50"}}