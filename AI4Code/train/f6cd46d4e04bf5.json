{"cell_type":{"c67bf62d":"code","c9d40ecb":"code","22ca7f8d":"code","f43df926":"code","10b7403a":"code","e3e9d125":"code","bab8b9bc":"code","3fd68135":"code","f6d46ff9":"code","454e8fb1":"code","2bcffcff":"code","d324d402":"code","a0a5a301":"code","393c5a5f":"markdown","8c857d95":"markdown","87c1a387":"markdown","18e3a098":"markdown","55563dee":"markdown","acab3481":"markdown","2879bc8f":"markdown","c831a1b4":"markdown","d7f9335b":"markdown","541b030a":"markdown","4e9b1280":"markdown"},"source":{"c67bf62d":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","c9d40ecb":"data = pd.read_csv('..\/input\/tabular-playground-series-nov-2021\/train.csv')\ndata.head()","22ca7f8d":"num_cols = data.select_dtypes(exclude='object').columns.tolist()\ncat_cols = data.select_dtypes(include='object').columns.tolist()\nprint('There are', len(num_cols), 'numerical columns')\nprint('There are', len(cat_cols), 'categorical features')","f43df926":"print('Number of missing value in this dataset is: ', data.isnull().sum().sum())","10b7403a":"target = data.iloc[:,-1]\ntarget.describe()","e3e9d125":"### Chekcing target varlable\nfig, ax  = plt.subplots(1,2,figsize=(12,4))\nfig.patch.set_facecolor( '#F2F2F2')\n\nsns.histplot(target, bins=30, color='#8abbd0', kde=True, ax=ax[0])\nax[0].patch.set_facecolor( '#F2F2F2')\nax[0].lines[0].set_color('#F97A1F')\n\nsns.boxplot(x=target, ax=ax[1], color='#8abbd0')\nax[1].patch.set_facecolor( '#F2F2F2')\n\nplt.tight_layout()","bab8b9bc":"# Checking statstical summary for numerical columns\ndata = data.iloc[:,1:] # drop ID column\npd.set_option('display.max_rows', None)\ndata.describe().T.sort_values(by=['std'], ascending=False)","3fd68135":"# Calculate correlation between pair of features\ncorrelation_table = pd.DataFrame(data.corr().unstack().sort_values().drop_duplicates(), columns=['correlation'])\ncorrelation_table","f6d46ff9":"# Plots on numerical features to check data quality and data distribution\nnum_cols = data.select_dtypes(exclude='object').columns.tolist()[:-1]\ncolor ='#8abbd0'\nfor feature in num_cols[:20]:\n    fig, ax = plt.subplots(1,3, figsize=(15,3))\n    fig.patch.set_facecolor( '#F2F2F2')\n    sns.histplot(data[feature], bins=20, ax=ax[0],  color=color, kde=True)\n    ax[0].lines[0].set_color('#F97A1F')\n    sns.kdeplot(x=feature,data=data,ax=ax[1],shade=True, alpha=0.3)\n    sns.boxplot(x=feature, data=data,ax=ax[2], color=color)\n            \n    plt.suptitle(feature, fontfamily='serif', fontsize=16, color='#173b56', fontweight='bold')\n    plt.tight_layout()","454e8fb1":"for feature in num_cols[20:40]:\n    fig, ax = plt.subplots(1,3, figsize=(15,3))\n    fig.patch.set_facecolor( '#F2F2F2')\n    sns.histplot(data[feature], bins=20, ax=ax[0],  color=color, kde=True)\n    ax[0].lines[0].set_color('#F97A1F')\n    sns.kdeplot(x=feature,data=data,ax=ax[1],shade=True, alpha=0.3)\n    sns.boxplot(x=feature, data=data,ax=ax[2], color=color)\n            \n    plt.suptitle(feature, fontfamily='serif', fontsize=16, color='#173b56', fontweight='bold')\n    plt.tight_layout()","2bcffcff":"for feature in num_cols[40:60]:\n    fig, ax = plt.subplots(1,3, figsize=(15,3))\n    fig.patch.set_facecolor( '#F2F2F2')\n    sns.histplot(data[feature], bins=20, ax=ax[0],  color=color, kde=True)\n    ax[0].lines[0].set_color('#F97A1F')\n    sns.kdeplot(x=feature,data=data,ax=ax[1],shade=True, alpha=0.3)\n    sns.boxplot(x=feature, data=data,ax=ax[2], color=color)\n            \n    plt.suptitle(feature, fontfamily='serif', fontsize=16, color='#173b56', fontweight='bold')\n    plt.tight_layout()","d324d402":"for feature in num_cols[60:80]:\n    fig, ax = plt.subplots(1,3, figsize=(15,3))\n    fig.patch.set_facecolor( '#F2F2F2')\n    sns.histplot(data[feature], bins=20, ax=ax[0],  color=color, kde=True)\n    ax[0].lines[0].set_color('#F97A1F')\n    sns.kdeplot(x=feature,data=data,ax=ax[1],shade=True, alpha=0.3)\n    sns.boxplot(x=feature, data=data,ax=ax[2], color=color)\n            \n    plt.suptitle(feature, fontfamily='serif', fontsize=16, color='#173b56', fontweight='bold')\n    plt.tight_layout()","a0a5a301":"for feature in num_cols[80:100]:\n    fig, ax = plt.subplots(1,3, figsize=(15,3))\n    fig.patch.set_facecolor( '#F2F2F2')\n    sns.histplot(data[feature], bins=20, ax=ax[0],  color=color, kde=True)\n    ax[0].lines[0].set_color('#F97A1F')\n    sns.kdeplot(x=feature,data=data,ax=ax[1],shade=True, alpha=0.3)\n    sns.boxplot(x=feature, data=data,ax=ax[2], color=color)\n            \n    plt.suptitle(feature, fontfamily='serif', fontsize=16, color='#173b56', fontweight='bold')\n    plt.tight_layout()","393c5a5f":"**Comment**  \n> The distribution of target variable shows:\n> - Binary classification (0\/1 values)\n> - Class balanced (roughly equal numuber of 0 and 1)","8c857d95":"**Comment**  \n> - For the first 20 features, we can consider remove `f0,2,4,9,16,19`, as a lot of values are zero","87c1a387":"**Comment**  \n> - Features `f2` and `f35` are orders of magnitude different from other features, we need to transform these features\n> - Some features have very low variance, we may need to drop these features","18e3a098":"# <font color='\t#2E45B8'> 1. Data Preparation<\/font>\n## <font color='\t#2E45B8'>  1.1 Import libraries and data<\/font>","55563dee":"## <font color='\t#2E45B8'>  2.2 Checking numerical features<\/font>","acab3481":"**Comment**  \n> - Low correlation\n> - The highest negative correlation pair is `f55` and `target` with correlation of -11%\n> - The highest positive correlation pair is `f34` and `target` with correlation of 14%","2879bc8f":"## <font color='\t#2E45B8'> 1.2 Data inspection\u00b6<\/font>\n### <font color='\t#2E45B8'> 1.2.1 Data types<\/font>","c831a1b4":"**Comment**  \n> - For feaures 40 - 59, we can consider remove `f42, 44, ,46, 48, 49, 51, 52, 53, 56, 58, 59`","d7f9335b":"# <font color='\t#2E45B8'> 2. EDA<\/font>\n## <font color='\t#2E45B8'>  2.1 Checking target variable<\/font>","541b030a":"### <font color='\t#2E45B8'> 1.2.2 Explore missing values<\/font>","4e9b1280":"**Comment**  \n> - For feaures 20 - 39, we can consider remove `f20,23,24,27,28,30-33`"}}