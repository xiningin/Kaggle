{"cell_type":{"abfac532":"code","46cf122d":"code","de0b7b90":"code","5d6a73c6":"code","ee59ac3e":"code","93e2e02f":"code","1591a920":"code","cd76ad6b":"code","7f411cb1":"code","b9e948db":"code","24fe1bc5":"code","8350b28c":"code","2a9351a6":"markdown","92a1fb29":"markdown","58465c46":"markdown","9bc49896":"markdown","a9c8b86a":"markdown","0baa12c1":"markdown","d72a492d":"markdown","f6b79839":"markdown","5a3ddf85":"markdown","72a0d36f":"markdown"},"source":{"abfac532":"from sklearn.cluster import DBSCAN\nfrom sklearn.preprocessing import StandardScaler\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","46cf122d":"df = pd.read_csv(\"\/kaggle\/input\/wholesale-customers-data-set\/Wholesale customers data.csv\");\ndata1 = df\nprint(df.head())","de0b7b90":"print(df.info())","5d6a73c6":"print(df.describe())","ee59ac3e":"df.drop([\"Channel\", \"Region\"], axis = 1, inplace = True)","93e2e02f":"print(df.head())","1591a920":"x = df['Grocery']\ny = df['Milk']\n\nplt.scatter(x,y)\nplt.xlabel(\"Groceries\")\nplt.ylabel(\"Milk\")\nplt.show()","cd76ad6b":"df = df[[\"Grocery\", \"Milk\"]]","7f411cb1":"stscaler = StandardScaler().fit(df)\ndf = stscaler.transform(df)","b9e948db":"dbsc = DBSCAN(eps = .5, min_samples = 15).fit(df)","24fe1bc5":"labels = dbsc.labels_\ncore_samples = np.zeros_like(labels, dtype = bool)\ncore_samples[dbsc.core_sample_indices_] = True","8350b28c":"import seaborn as sns\n\nfiltro=list(core_samples)\n\ndata1[\"Filtro\"]=filtro\n\nsns.lmplot(\"Grocery\",\"Milk\",data=data1,fit_reg=False,hue=\"Filtro\",size=10)","2a9351a6":"### Plotting the scatter plot","92a1fb29":"### For this experiment I am using this dataset. \n### https:\/\/www.kaggle.com\/binovi\/wholesale-customers-data-set","58465c46":"### Feature Scaling","9bc49896":"### DBSCAN Algorithm","a9c8b86a":"### Information about the features of the dataset is as follows:\n\n> ### FRESH: annual spending (m.u.) on fresh products (Continuous);\n> ### MILK: annual spending (m.u.) on milk products (Continuous);\n> ### GROCERY: annual spending (m.u.)on grocery products (Continuous);\n> ### FROZEN: annual spending (m.u.)on frozen products (Continuous)\n> ### DETERGENTS_PAPER: annual spending (m.u.) on detergents and paper products (Continuous)\n> ### DELICATESSEN: annual spending (m.u.)on and delicatessen products (Continuous);\n> ### CHANNEL: customers\u00e2\u20ac\u2122 Channel - Horeca (Hotel\/Restaurant\/Caf\u00c3\u00a9) or Retail channel (Nominal) REGION","0baa12c1":"## NAME : JAYNIL GAGLANI\n## ROLL NO : 13\n## BATCH : A\n## DATA WAREHOUSING AND MINING\n## EXPERIMENT NO 7 PART II","d72a492d":"### Plotting the clusters","f6b79839":"## Conclusion\n> ### So,in this experiment we got to know about the prime disadvantages of centroid-based clustering and got familiar with another family of clustering techniques i.e. density-based clustering. They overcome the shortcomings of centroid-based clustering.\n\n> ### DBSCAN (density based clustering algorithm) is implemented on the wholesale customers dataset. Two clusters were observed from the data and the scatter plot \ngives the visualization of two clusters.","5a3ddf85":"## Real life applications of DBSCAN:\n\n> ### Suppose we have an e-commerce and we want to improve our sales by recommending relevant products to our customers. We don\u2019t know exactly what our customers are looking for but based on a data set we can predict and recommend a relevant product to a specific customer. We can apply the DBSCAN to our data set (based on the e-commerce database) and find clusters based on the products that the users have bought. Using this clusters we can find similarities between customers, for example, if customer A has bought a pen, a book and one pair scissors, while customer B purchased a book and one pair of scissors, then you could recommend a pen to customer B.\n\n> ### Before the rise of deep learning based advanced methodologies, researchers used DBSCAN in order to segregate genes from a genes dataset that had the chance of mediating cancer.\n\n> ### Scientists have used DBSCAN in order to detect the stops in the trajectory data generated from mobile GPS devices. Stops represent the most meaningful and most important part of a trajectory.","72a0d36f":"## DBSCAN (Density Based Clustering Algorithm)\n> ### DBSCAN is already beautifully implemented in the popular Python machine learning library Scikit-Learn, and because this implementation is scalable and well-tested, you will be using it to see how DBSCAN works in practice.\n> ### The steps to the DBSCAN algorithm are:\n\n> ### Pick a point at random that has not been assigned to a cluster or been designated as an outlier. Compute its neighborhood to determine if it\u2019s a core point. If yes, start a cluster around this point. If no, label the point as an outlier.\n> ### Once we find a core point and thus a cluster, expand the cluster by adding all directly-reachable points to the cluster. Perform \u201cneighborhood jumps\u201d to find all density-reachable points and add them to the cluster. If an outlier is added, change that point\u2019s status from outlier to border point.\n> ### Repeat these two steps until all points are either assigned to a cluster or designated as an outlier."}}