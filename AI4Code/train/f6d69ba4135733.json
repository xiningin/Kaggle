{"cell_type":{"3ead5f3f":"code","69a08563":"code","0b8424ac":"code","d2636420":"code","7f2dac1d":"code","854bfd87":"code","2c6f40ef":"markdown"},"source":{"3ead5f3f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits import mplot3d\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\nimport seaborn as sb\nsb.set()","69a08563":"# this is a cell","0b8424ac":"#this is another cell\n\nAdvertising = pd.read_csv(\"..\/input\/ISLR-Auto\/Advertising.csv\")\nAuto = pd.read_csv(\"..\/input\/ISLR-Auto\/Auto.csv\")\nCh10Ex11 = pd.read_csv(\"..\/input\/ISLR-Auto\/Ch10Ex11.csv\")\nCollege = pd.read_csv(\"..\/input\/ISLR-Auto\/College.csv\")\nCredit = pd.read_csv(\"..\/input\/ISLR-Auto\/Credit.csv\")\nHeart = pd.read_csv(\"..\/input\/ISLR-Auto\/Heart.csv\")\nIncome1 = pd.read_csv(\"..\/input\/ISLR-Auto\/Income1.csv\")\nIncome2 = pd.read_csv(\"..\/input\/ISLR-Auto\/Income2.csv\")","d2636420":"\n# James Cell\ntrimmed = Income2.drop('Unnamed: 0',1)\nprint(trimmed.head())\n# incomePlot = sb.load_dataset(\"..\/input\/ISLR-Auto\/Income1.csv\")\nsb.lmplot(x=\"Income\", y=\"Education\", data=trimmed)\nfig = plt.figure()\n# ax = plt.axes(projection='3d')\n# ax.scatter3D(trimmed[\"Education\"],trimmed[\"Seniority\"], trimmed[\"Income\"],)","7f2dac1d":"#james \n#Gonna try and make a bunch of sub plots\ntrimcred = Credit.drop(['Unnamed: 0','Student','Married'],1)\n# print(trimcred[trimcred.columns[0]])\nfig, ax = plt.subplots(9,9)\n# fig.axis('off')\nfig.set_figwidth(20)\nfig.set_figheight(20)\nfor i in range(9):\n    for j in range(9):\n        if(i==j):\n            ax[i,j].text(0.5,0.5,trimcred.columns[i], ha='center')\n            ax[i,j].set_xticks([])\n            ax[i,j].set_yticks([])\n        else:\n            ax[i,j].scatter(trimcred[trimcred.columns[i]],trimcred[trimcred.columns[j]],data=trimcred)\n            ax[i,j].set_xticks([])\n            ax[i,j].set_yticks([])\n","854bfd87":"###Garrett\n###I'm just here so I don't get fined\n\n###Calculate the acceptance rate and add it to the data frame\nrate=College['Accept']\/College['Apps']\nCollege['A-Rate']=rate\n\n###Make sure all Private answers are exactly yes and no\nif np.all(np.logical_or(College['Private']=='Yes', College['Private']=='No')):\n    print('We good!')\nelse:\n    print('Noooooooo')\n\n###I feel like there is probably a much better way to go about doing this, but it's what I know at the moment\npriv_ind=np.where(College['Private']=='Yes')[0]\nprint(priv_ind[:20])\npub_ind=np.where(College['Private']=='No')[0]\nprint(pub_ind[:20])\nsb.distplot(College['A-Rate'][priv_ind], label='Private')\nsb.distplot(College['A-Rate'][pub_ind], label='Public')\nplt.legend()\nplt.show()","2c6f40ef":"## Let's play with some data.\nKaggle lets you easily import data, and someone already uploaded everything from the book to make it super ezpz\n### So we don't run into too many issues, lets just each take a cell and keep our work in it\n - A cell is basically a self contained bit of code\n - Make sure to hit Commit in the top right o save your work"}}