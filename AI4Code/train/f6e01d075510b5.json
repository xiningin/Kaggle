{"cell_type":{"8cc795ae":"code","3785762b":"code","4c006275":"code","00a9552c":"code","78aa07dc":"code","e190f1c8":"code","e0c261ba":"code","6d923c73":"code","d0e74d7f":"code","442a519d":"code","988e12bd":"code","e90ba902":"code","30a829b5":"code","7d9af301":"code","31d57d63":"code","7640fdec":"code","c42c1243":"code","2b90a2a3":"code","39d6a549":"code","87e85df1":"code","84cf4454":"code","cf6ef76a":"markdown","5e66ddfb":"markdown","5db78111":"markdown","39a3e171":"markdown","d4d0affd":"markdown","233f717a":"markdown","ef2271e6":"markdown","cdf119a5":"markdown","604a01df":"markdown","d783e829":"markdown"},"source":{"8cc795ae":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3785762b":"dt = pd.read_csv('..\/input\/netflix-shows\/netflix_titles.csv')","4c006275":"dt.head(10)","00a9552c":"dt.shape","78aa07dc":"import re\ndt['duration'] = dt['duration'].map(lambda x : re.sub('[^0-9]','',x))\ndt['duration'] = pd.to_numeric(dt['duration'])","e190f1c8":"dt_movies = dt.loc[dt['type']=='Movie']\ndt_movies\n","e0c261ba":"dt_shows = dt.loc[dt['type']=='TV Show']\ndt_shows","6d923c73":"import seaborn as sns\nimport matplotlib.pyplot as pl\n\nsns.set(style=\"darkgrid\")\nsns.countplot(y=\"country\", data=dt, palette=\"Set2\", order=dt['country'].value_counts().index[0:11])","d0e74d7f":"dt_shows_country = pd.DataFrame({'country':dt_shows['country'].value_counts()})\ndt_shows_country[:11]\n","442a519d":"dt_movies_country = pd.DataFrame({'country':dt_movies['country'].value_counts()})\ndt_movies_country[:11]","988e12bd":"pl.figure(figsize=(12,10))\nsns.countplot(x = \"rating\", data=dt_movies, palette=\"Set1\", order=dt['rating'].value_counts().index[:15])","e90ba902":"top10_shows = dt_shows.sort_values(by=['duration'])[-1:-11:-1]\ntop10_shows[['title','duration']]","30a829b5":"pl.figure(figsize=(15,15))\nsns.barplot(y = top10_shows['title'], x = top10_shows['duration'])","7d9af301":"sns.kdeplot(data = dt_shows['duration'])","31d57d63":"top10_movies = dt_movies.sort_values(by='duration')[-1:-11:-1]\ntop10_movies[['title','duration']]","7640fdec":"pl.figure(figsize=(15,15))\nsns.barplot(x = top10_movies['duration'], y = top10_movies['title'])","c42c1243":"sns.set(style=\"darkgrid\")\nsns.kdeplot(data = dt_movies['duration'])","2b90a2a3":"dt[['title','date_added']]\ndt['date_added'] = pd.to_datetime(dt['date_added'])\n\ndt['month_added'] = dt['date_added'].dt.month\n\ndt['month_added']","39d6a549":"pl.figure(figsize=(7,7))\nsns.countplot(y = 'month_added', data = dt)\n","87e85df1":"sns.kdeplot(x='month_added', data=dt)","84cf4454":"dt['year_added'] = dt['date_added'].dt.year\ndt['year_added']\npl.figure(figsize=(10,10))\nsns.countplot(y = 'year_added', data=dt, order = dt['year_added'].value_counts().index[:15])","cf6ef76a":"# Movies by the country of origin","5e66ddfb":"# Analysis by Date","5db78111":"# Runtime","39a3e171":"# Cleaning data","d4d0affd":"# TV shows by country of origin","233f717a":"# Ratings","ef2271e6":"* by year","cdf119a5":">Will keep updating it in the future","604a01df":"# TV Shows and Movies by the country of origin","d783e829":"* by month"}}