{"cell_type":{"b1b11965":"code","0b46c9f8":"code","429466b2":"code","0a691fce":"code","74f89d76":"code","a325f57d":"code","928de80b":"code","415090b0":"code","713bcd10":"code","610dc454":"code","032b23e5":"code","e6a43769":"code","48c6ede1":"code","030dec41":"code","3c29ea60":"code","d45d7c7f":"code","9d2320f5":"code","95ee0202":"code","54ce4fbe":"code","a34a3d0f":"code","289a6727":"code","6df1b014":"markdown","82b8eeb6":"markdown","ef9db581":"markdown"},"source":{"b1b11965":"#importing the header files\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","0b46c9f8":"#reading the dataset\n\ndata = pd.read_csv('\/kaggle\/input\/iris\/Iris.csv')","429466b2":"data.head()","0a691fce":"#renaming the columns ... just to be comfortable while working (totally optional)\ndata.columns=['Id','SepalLength(cm)','SepalWidth(cm)','PetalLength(cm)','PetalWidth(cm)','Class']\n\n#dropping the Id column\ndata.drop('Id',axis=1,inplace=True)","74f89d76":"data.head()","a325f57d":"#checking the null values\n\ndata.isnull().sum()","928de80b":"data.describe()","415090b0":"data.info()","713bcd10":"sns.set_style('whitegrid')\nsns.pairplot(data,hue='Class')","610dc454":"fig,ax = plt.subplots(1,2,figsize=(15,7.5))\n\nsns.scatterplot(x='PetalWidth(cm)',y='PetalLength(cm)',hue='Class',data=data,ax=ax[0])\nsns.scatterplot(x='SepalLength(cm)',y='PetalLength(cm)',hue='Class',data=data,ax=ax[1])\n\nfig.show()","032b23e5":"#scaling the dataset (can be avoided here since the dimensions of the columns are same i.e cm)\n\nfrom sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nscaler.fit(data.drop('Class',axis=1))","e6a43769":"scaled_features=scaler.transform(data.drop('Class',axis=1))","48c6ede1":"df_scaled = pd.DataFrame(scaled_features,columns=data.columns[:-1])\ndf_scaled.head()","030dec41":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix,classification_report,accuracy_score\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.neighbors import KNeighborsClassifier","3c29ea60":"x_train,x_test,y_train,y_test = train_test_split(df_scaled,data['Class'],test_size=0.2,shuffle=True,random_state=101)","d45d7c7f":"accuracy_rate = []\nfor i in range(1,25):\n  knn = KNeighborsClassifier(n_neighbors=i)\n  score = cross_val_score(knn,df_scaled,data['Class'],cv=10)\n  accuracy_rate.append(score.mean())","9d2320f5":"error_rate = []\nfor i in range(1,25):\n  knn = KNeighborsClassifier(n_neighbors=i)\n  knn.fit(x_train,y_train)\n  pred = knn.predict(x_test)\n  error_rate.append(np.mean(pred != y_test))","95ee0202":"#plotting Error_Rate vs K and Accuracy_Rate vs K\n\nplt.figure(figsize=(20,10))\nplt.subplot(1,2,1)\nplt.plot(range(1,25),error_rate,color='orange',linestyle='solid',marker='o',markerfacecolor='black',markersize=10)\nplt.title('Error Rate vs K')\nplt.xlabel('K')\nplt.ylabel('Error Rate')\nplt.subplot(1,2,2)\nplt.plot(range(1,25),accuracy_rate,color='yellow',linestyle='solid',marker='o',markerfacecolor='green',markersize=10)\nplt.title('Accuracy Rate vs K')\nplt.xlabel('K')\nplt.ylabel('Accuracy Rate')","54ce4fbe":"knn = KNeighborsClassifier(n_neighbors=6)\nknn.fit(x_train,y_train)","a34a3d0f":"prediction = knn.predict(x_test)\nprint(confusion_matrix(y_test,prediction))\nprint(classification_report(y_test,prediction))","289a6727":"print(accuracy_score(prediction,y_test))","6df1b014":"# Defining and fitting the model","82b8eeb6":"# Exploratory Data Analysis","ef9db581":"One can see from the above drawn plots that PetalWidth(cm) and PetalLength(cm) are strongly correlated. Similarly, SepalLength(cm) and PetalLength(cm) are also correlated.To show this we can separately plot them below."}}