{"cell_type":{"e7d1f136":"code","50fc08d4":"code","f0ad0670":"code","2b32998f":"code","c8495ba6":"code","3ee2615f":"code","5033413e":"code","fb3499a2":"code","91fc8be2":"code","f27fec93":"code","fbd9db23":"code","d4928db9":"code","3bd6fd48":"code","977c3a96":"code","7f9a3296":"code","c255823f":"code","0f39ccde":"code","cf32850e":"code","7ee41ee8":"code","a0e3614f":"code","b3470086":"code","44aa9130":"code","8c32c30f":"code","3e7c84b1":"code","b63e489f":"code","d1199c85":"code","b951d6f9":"code","e1795f7e":"code","6baf45b3":"code","769b08de":"code","c2b77877":"code","9406fa6f":"code","e4f7b77a":"code","129a144a":"code","7e9d6fc7":"code","83292361":"code","2d7e1772":"code","651c3a07":"code","a42f9107":"code","ff1865de":"code","99beec62":"code","60b02b5d":"code","2c58fa1a":"code","ee4b3b52":"code","5149c674":"code","a4040fed":"code","2cd66284":"code","88c0e103":"code","3953f875":"code","76235569":"code","99448153":"code","a29d8e09":"code","7b636346":"code","f5dd43b6":"code","9ba1d478":"code","69ae3355":"code","a443d86b":"code","3a7c783b":"code","a5e42cad":"code","249a0692":"code","d6d8df89":"code","57cbe02c":"code","c271e8bd":"code","32103c0d":"code","69b8f08e":"code","01b8d99b":"code","feec8c01":"code","4086890c":"code","7da3e069":"code","c08bbf50":"code","a5455da9":"code","ffc4906f":"code","1a4a7fad":"code","af701650":"code","c618dd6a":"code","883650e9":"code","7b570ca0":"code","fdf51afb":"code","0e37123e":"code","ef2c686b":"code","1843f20f":"code","b25e8bdd":"code","1f63fc3f":"code","a587ecf9":"code","19eb8a62":"code","fcf1882c":"code","12c80d7c":"code","cef01fb1":"code","627d5b8a":"code","15c651a1":"code","20fdc395":"code","22917fe3":"code","420a6326":"code","4a98a9c4":"code","4431524a":"code","fd56e28e":"code","a303e284":"code","bfa26301":"code","22b1a499":"markdown","47bd6d81":"markdown","15bcc434":"markdown","56899fe4":"markdown","6da00864":"markdown","145a3b2e":"markdown","725207cb":"markdown","8fbdbac8":"markdown","4e2bd349":"markdown","b09cb08e":"markdown","a0238f52":"markdown","204e84c8":"markdown"},"source":{"e7d1f136":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","50fc08d4":"data = pd.read_csv(\"..\/input\/sales-analysis\/SalesKaggle3.csv\")","f0ad0670":"data.head()","2b32998f":"data.tail()","c8495ba6":"list(data.columns)","3ee2615f":"data.shape","5033413e":"data.nunique()","fb3499a2":"data.info()","91fc8be2":"data.isnull().sum()","f27fec93":"data.isna().sum()","fbd9db23":"data[\"File_Type\"].unique()","d4928db9":"len(data[\"SKU_number\"].unique())","3bd6fd48":"data_sub = data.groupby([\"File_Type\"])","977c3a96":"data_hist = data_sub.get_group(\"Historical\")","7f9a3296":"data_hist.head()","c255823f":"data_act = data_sub.get_group(\"Active\")","0f39ccde":"len(set(data_act.SKU_number) - set(data_hist.SKU_number))","cf32850e":"len(set(data_hist.SKU_number) - set(data_act.SKU_number))","7ee41ee8":"data_act.shape","a0e3614f":"print(data_hist.shape)\nprint(data_hist.nunique())","b3470086":"print(data_hist.isna().sum())","44aa9130":"import seaborn as sns","8c32c30f":"list(data_hist.columns)","3e7c84b1":"data_hist_tc = data_hist[[\"SKU_number\", \"PriceReg\", \"ItemCount\", \"File_Type\"]]","b63e489f":"data_hist_tc[\"Cost\"] = data_hist_tc[\"PriceReg\"] * data_hist_tc[\"ItemCount\"]","d1199c85":"data_hist_tc.isnull().sum()","b951d6f9":"data_hist_tc.head()","e1795f7e":"data_hist_tc = data_hist_tc.sort_values(by = [\"Cost\"], ascending = False)","6baf45b3":"data_hist_tc.head()","769b08de":"data_hist_tc[\"Cumilative_cost\"] = data_hist_tc[\"Cost\"].cumsum()","c2b77877":"data_hist_tc.head(2)","9406fa6f":"data_hist_tc[\"Total_Cost\"] = data_hist_tc[\"Cost\"].sum()","e4f7b77a":"data_hist_tc.head(2)","129a144a":"data_hist_tc[\"Percentage\"] = (data_hist_tc[\"Cumilative_cost\"]\/data_hist_tc[\"Total_Cost\"])*100","7e9d6fc7":"data_hist_tc.head(2)","83292361":"def classes(Pecentage):\n    \n    if Pecentage>0 and Pecentage<60:\n        return \"A\"\n    elif Pecentage>=60 and Pecentage<85:\n        return \"B\"\n    else:\n        return \"C\"","2d7e1772":"data_hist_tc[\"class\"] = data_hist_tc[\"Percentage\"].apply(classes)","651c3a07":"data_hist_tc.head(2)","a42f9107":"print(data_hist_tc[\"class\"].value_counts())","ff1865de":"print(\" Total Cost Generated under class_A\", data_hist_tc[data_hist_tc[\"class\"] == \"A\"][\"Cost\"].sum())\nprint(\" Total Cost Generated under class_B\", data_hist_tc[data_hist_tc[\"class\"] == \"B\"][\"Cost\"].sum())\nprint(\" Total Cost Generated under class_C\", data_hist_tc[data_hist_tc[\"class\"] == \"C\"][\"Cost\"].sum())","99beec62":"print(\"Pecentage of total cost of class_A\", (data_hist_tc[data_hist_tc[\"class\"] == \"A\"][\"Cost\"].sum()\/data_hist_tc[\"Cost\"].sum())*100)\nprint(\"Pecentage of total cost of class_B\", (data_hist_tc[data_hist_tc[\"class\"] == \"B\"][\"Cost\"].sum()\/data_hist_tc[\"Cost\"].sum())*100)\nprint(\"Pecentage of total cost of class_C\", (data_hist_tc[data_hist_tc[\"class\"] == \"C\"][\"Cost\"].sum()\/data_hist_tc[\"Cost\"].sum())*100)","60b02b5d":"data_hist.head()","2c58fa1a":"data_act.head()","ee4b3b52":"data_hist[\"SKU_number\"].unique().shape, data_hist.shape","5149c674":"data_act[\"SKU_number\"].unique().shape, data_act.shape","a4040fed":"len(set(data_act[\"SKU_number\"]) - set(data_hist[\"SKU_number\"]))","2cd66284":"data_hist[\"ReleaseYear\"].unique().min(), data_hist[\"ReleaseYear\"].unique().max()","88c0e103":"data_act[\"ReleaseYear\"].unique().min(), data_act[\"ReleaseYear\"].unique().max()","3953f875":"years_hist = data_hist[\"ReleaseYear\"].unique()\nyears_act = data_act[\"ReleaseYear\"].unique()","76235569":"np.sort(years_hist), np.sort(years_act)","99448153":"data_hist_00_17 = data_hist.query(\"2000<=ReleaseYear<=2017\")","a29d8e09":"data_hist_00_17.shape, data_hist.shape","7b636346":"data_hist.shape[0] - data_hist_00_17.shape[0] ","f5dd43b6":"data_act_00_17 = data_act.query(\"2000<=ReleaseYear<=2017\")","9ba1d478":"data_act_00_17.shape, data_act.shape","69ae3355":"data_act.shape[0] - data_act_00_17.shape[0]","a443d86b":"len(set(data_act_00_17[\"SKU_number\"]) - set(data_hist_00_17[\"SKU_number\"]))","3a7c783b":"list_1 = list(set(data_act_00_17[\"SKU_number\"]) - set(data_hist_00_17[\"SKU_number\"]))","a5e42cad":"list_2 = list(set(data_hist_00_17[\"SKU_number\"]) - set(data_act_00_17[\"SKU_number\"]))","249a0692":"len(list_2)","d6d8df89":"data_act_00_17 = data_act_00_17.set_index(\"SKU_number\")","57cbe02c":"data_hist_00_17 = data_hist_00_17.set_index(\"SKU_number\")","c271e8bd":"data_act_00_17.loc[list_1]","32103c0d":"data_act_00_17 = data_act_00_17.drop(list_1)","69b8f08e":"data_act_00_17.shape","01b8d99b":"set(data_act_00_17.index) - set(data_hist_00_17.index)","feec8c01":"len(set(data_hist_00_17.index) - set(data_act_00_17.index))","4086890c":"data_hist_00_17 = data_hist_00_17.drop(list_2)","7da3e069":"set(data_hist_00_17.index) - set(data_act_00_17.index)","c08bbf50":"train = data_hist_00_17\ntest = data_act_00_17","a5455da9":"train.shape, test.shape","ffc4906f":"train.columns","1a4a7fad":"train = train[['SoldCount','ReleaseNumber', 'New_Release_Flag', 'PriceReg',\n       'ReleaseYear', 'ItemCount', 'LowUserPrice', 'LowNetPrice']]","af701650":"train.head()","c618dd6a":"test.columns","883650e9":"test = test[['ReleaseNumber', 'New_Release_Flag', 'PriceReg',\n       'ReleaseYear', 'ItemCount', 'LowUserPrice', 'LowNetPrice']]","7b570ca0":"train.shape, test.shape","fdf51afb":"train.head()","0e37123e":"x_train = train.drop(\"SoldCount\", axis = 1)","ef2c686b":"x_target = train[\"SoldCount\"]","1843f20f":"from sklearn.tree import DecisionTreeClassifier","b25e8bdd":"model_01 = DecisionTreeClassifier(random_state = 42)","1f63fc3f":"model_01.fit(x_train, x_target)","a587ecf9":"train_preds = model_01.predict(x_train)","19eb8a62":"from sklearn.metrics import accuracy_score","fcf1882c":"accuracy_score(train_preds, x_target)","12c80d7c":"test_preds = model_01.predict(test)","cef01fb1":"test[\"SoldCount\"] = test_preds","627d5b8a":"test[\"SoldCount\"].value_counts()","15c651a1":"train[\"SoldCount\"].value_counts()","20fdc395":"from sklearn.tree import DecisionTreeRegressor","22917fe3":"model_02 = DecisionTreeRegressor(random_state = 42)","420a6326":"model_02.fit(x_train, x_target)\ntrain_preds = model_02.predict(x_train)\ntest[\"SoldCount\"] = test_preds","4a98a9c4":"from sklearn.metrics import mean_squared_error","4431524a":"train_rmse = mean_squared_error(x_target,train_preds, squared = False)","fd56e28e":"train_rmse","a303e284":"test.head()","bfa26301":"test[\"SoldCount\"].value_counts()","22b1a499":"### Create a new Dataframe by adding cost column","47bd6d81":"## **Introduction**\n\nWhat is active inventory?\nCompanies does have huge stock of variety of their products in their stocks and it is called active inventory. Here we do have data set of historical inventory and active inventory of various products. Product identity could be drawn from the given dataset from the column SKU_number.\n\nWe have to predcit the inventory against active stocks by creating a machine learning algorithms. We are dividing the historical inventories based ABC analysis in order to prioritize the inventory items.\n\nWhat is ABC analysis?\nABC analysis is an approach for classifying inventory items based on the items\u2019 consumption values. Consumption value is the total value of an item consumed over a specified time period, for example a year. We are going to analyse the given data set by using ABC analysis in order to provide advise on product categories which will impact more on company revenues. I.e, some of items may not have sold out from the stores and it is loss of money. Therefore we have to look up on the items which is fastly moving from the stores.\n","15bcc434":"### Create a new DataFrame by arranging the cost column in ascending order","56899fe4":"# Machine Learning Models Generation","6da00864":"## Feature Engineering","145a3b2e":"## 1. Import the Data","725207cb":"### Q2. Find out total sum of costs which have generated under each classes?","8fbdbac8":"### _Create a \"class\" column in order to classify as cumilative products price contribution to the company's margin_\n\n1. **class - A will come under when the products cumilative cost percentage less than 60%**\n2. **claas - B will come in between when the products cumilative cost percenatge in range of greater than or equal to 60% and less than 85%**\n3. **class - B will come under the category when the products cumilative cost percenatge is greater than or equal to 85%**\n\n#### **Note:** We have considered most cost occured item as first and next higher so on. ","4e2bd349":"### Q3. Find out percentage of each classes cost contribution with respest to overall total cost generated?","b09cb08e":"### *Create a \"Percentage\" Column in order to segment different classes(A,B,C) for products*","a0238f52":"### Q1. Find out the total number of items which comes under each classes?","204e84c8":"## _Create a new column named as \"Cost\" in order to obtain the total cost of each item which had been sold out so far_"}}