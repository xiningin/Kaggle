{"cell_type":{"3dea16d5":"code","d1d2d3d5":"code","c2e9332e":"code","95bd22b8":"code","2d641f0d":"code","26f6e0fd":"code","21839c8f":"code","19d3ef06":"code","15f0c760":"code","221a3eb8":"code","db4c832b":"code","458de5a2":"code","ef3bffaf":"code","02bdd6d6":"code","57c63c2a":"code","cb64bd1e":"code","376c075f":"code","fd7a0b8f":"code","bd4dff01":"code","d2538765":"code","c3c3e3f6":"code","78b66f24":"code","eaea0196":"code","5b081205":"code","2b2394e6":"code","f446ef3e":"code","27ff1f84":"code","b083a0af":"code","cbef5a16":"code","645bfc86":"code","7c33213e":"code","eaab4089":"code","2f96ccbc":"code","a21adc63":"code","6edddf32":"code","e53ca25e":"code","730a0791":"code","d0eaa8e0":"code","0f573969":"code","ca511ee8":"code","0521fb3f":"code","d5ba52fb":"code","23f45749":"code","cbb1842f":"code","ccf23c88":"code","a1ef5224":"code","ee3de7dd":"code","7ce82001":"markdown","881d3954":"markdown","fe177102":"markdown","a8a03914":"markdown","df84f30b":"markdown","4af76868":"markdown","6c104d91":"markdown","019c0dd4":"markdown","2d342311":"markdown","4c4accb4":"markdown","35df3068":"markdown","6e792241":"markdown","9fe89569":"markdown","338aef03":"markdown","aa20d495":"markdown","0c6e4162":"markdown"},"source":{"3dea16d5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d1d2d3d5":"nRowsRead = 1000 # specify 'None' if want to read whole file\ndf = pd.read_csv('..\/input\/cusersmarildownloadsfostercsv\/foster.csv', delimiter=';', encoding = \"utf8\", nrows = nRowsRead)\ndf.dataframeName = 'foster.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')\ndf.head()","c2e9332e":"#Chart by Roshan Sharma https:\/\/www.kaggle.com\/roshansharma\/immigration-to-canada\n\nimport plotly_express as px\n\nfig = px.bar_polar(df, r=\"RegionID\", theta=\"AreaID\",color=\"Area\", template=\"plotly_dark\",\n            color_discrete_sequence= px.colors.sequential.Plasma[-2::-1])\nfig.show()","95bd22b8":"import plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nfrom plotly.subplots import make_subplots\n\nimport matplotlib.pyplot as plt\n\nfrom pandas_profiling import ProfileReport\nimport seaborn as sns\nfrom sklearn import metrics\n\nfrom h2o.estimators.gbm import H2OGradientBoostingEstimator","2d641f0d":"import h2o","26f6e0fd":"foster_report = ProfileReport(df)","21839c8f":"foster_report","19d3ef06":"# we can delete constant variables\ndf = df.drop('Year', axis=1)\ndf.shape","15f0c760":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\ny = le.fit_transform(df['RegionID'])","221a3eb8":"model_df = df.copy()\nmodel_df['RegionID'] = y\nmodel_df.head()","db4c832b":"from h2o.estimators import H2OXGBoostEstimator","458de5a2":"h2o.init()","ef3bffaf":"hf = h2o.H2OFrame(model_df)","02bdd6d6":"hf['RegionID'] = hf['RegionID'].asfactor()\npredictors = hf.drop('RegionID').columns\nresponse = 'RegionID'","57c63c2a":"# Split into train and test\ntrain, valid = hf.split_frame(ratios=[.8], seed=1234)","cb64bd1e":"# Build and train the model:\nfoster_xgb = H2OXGBoostEstimator(booster='dart',\n                                  normalize_type=\"tree\",\n                                  seed=1234,\n                                  nfolds=5,\n                                  )","376c075f":"# Train the model\nfoster_xgb.train(x=predictors,\n                  y=response,\n                  training_frame=train,\n                  validation_frame=valid)","fd7a0b8f":"foster_xgb.metric(metric='accuracy', valid=True)","bd4dff01":"foster_xgb.model_performance(valid=True)","d2538765":"foster_xgb.varimp_plot(num_of_features=10)","c3c3e3f6":"foster_xgb.shap_summary_plot(valid)","78b66f24":"from h2o.automl import H2OAutoML","eaea0196":"aml = H2OAutoML(\n    max_models=20,\n    max_runtime_secs=300,\n    seed=1\n)","5b081205":"# Train the model\naml.train(x=predictors,\n        y=response,\n        training_frame=train,\n        validation_frame=valid\n)","2b2394e6":"# View the AutoML Leaderboard\nlb = aml.leaderboard\nlb.head(rows=lb.nrows)  # Print all rows instead of default (10 rows)","f446ef3e":"lb = lb.as_data_frame()\nlb['model_type'] = lb['model_id'].apply(lambda x: x.split('_')[0])\nfig = px.bar(\n    lb, \n    x='model_id',\n    y='mse',\n    color='model_type'\n)\nfig.update_yaxes(range=[0.999, 1])\nfig.show()","27ff1f84":"print('The model performance in Accuracy: {}'.format(aml.leader.mse(valid=True)))\nprint('The model performance in AUC: {}'.format(aml.leader.mse(valid=True)))","b083a0af":"aml.leader.varimp_plot(num_of_features=10)","cbef5a16":"# Label encoding y - dependent variable\nfrom sklearn.preprocessing import LabelEncoder\n\nle = LabelEncoder()\ny = le.fit_transform(df['Area'])","645bfc86":"# One hot encoding independent variable x\n\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder\n\nohe = OneHotEncoder()\nx = ohe.fit_transform(df.drop('Area', axis=1)).toarray()\nx.shape","7c33213e":"from sklearn.decomposition import PCA\npca = PCA()\npca.fit_transform(x)","eaab4089":"covariance = pca.get_covariance()\nexplained_variance = pca.explained_variance_","2f96ccbc":"fig = go.Figure(go.Bar(\n    x=list(range(30)), \n    y=explained_variance[:30],\n))\nfig.update_layout(\n    xaxis_title='Principal components',\n    yaxis_title='Explained variance ratio',\n    legend_title='individual explained variance',\n)\nfig.show()","a21adc63":"pca = PCA(n_components=9)\nx_pca = pca.fit_transform(x)","6edddf32":"x_pca.shape","e53ca25e":"# Splitting the dataset into training set and test set\nfrom sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(x_pca, y, test_size = 0.2, random_state=1234)","730a0791":"# Create a list for the accuracy of all the models we are going to see\nacscore = []","d0eaa8e0":"# Training the Logistic Regression Model on the Training set\nfrom sklearn.linear_model import LogisticRegression\n\nclassifier = LogisticRegression(random_state=1234)\nclassifier.fit(x_train, y_train)","0f573969":"# Predicting the test set\ny_pred = classifier.predict(x_test)\n\n# Making the confusion matrix and calculating accuracy score\naccuracy = metrics.accuracy_score(y_test, y_pred)\nacscore.append(accuracy)\nprint(accuracy)","ca511ee8":"# Training the Naive Bayes Classification model\nfrom sklearn.naive_bayes import GaussianNB\n\nclassifier = GaussianNB()\nclassifier.fit(x_train, y_train)","0521fb3f":"# Predicting the test set\ny_pred = classifier.predict(x_test)\n\n# Making the confusion matrix and calculating accuracy score\naccuracy = metrics.accuracy_score(y_test, y_pred)\nacscore.append(accuracy)\nprint(accuracy)","d5ba52fb":"# Training the XGBoost Classification model\nfrom xgboost import XGBClassifier\n\nclassifier = XGBClassifier()\nclassifier.fit(x_train,y_train)","23f45749":"# Predicting the test set\ny_pred = classifier.predict(x_test)\n\n# Making the confusion matrix and calculating accuracy score\naccuracy = metrics.accuracy_score(y_test, y_pred)\nacscore.append(accuracy)\nprint(accuracy)","cbb1842f":"# Training the Random Forest Classification model\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Lets use a standard 60 n_erstimatoprs\nclassifier = RandomForestClassifier(criterion='entropy', random_state=1234, n_estimators=60)\nclassifier.fit(x_train, y_train)","ccf23c88":"# Predicting the test set\ny_pred = classifier.predict(x_test)\n\n# Making the confusion matrix and calculating accuracy score\naccuracy = metrics.accuracy_score(y_test, y_pred)\nacscore.append(accuracy)\nprint(accuracy)","a1ef5224":"models_names = ['LogisticRegression', 'NaiveBayes', 'XGBoost', 'RandomForest']","ee3de7dd":"fig = go.Figure(go.Bar(\n    x=models_names,\n    y=acscore,\n))\nfig.show()","7ce82001":"I don't Have ACCURACY, so I changed to mse (though I left print Accuracy)","881d3954":"I don't have Accuracy. ","fe177102":"<a id=\"1.1\"><\/a>\n<h3 style=\"background-color:skyblue;font-family:newtimeroman;font-size:200%;text-align:center\">Inspiration: Ireland Apology to unwed mothers<\/h3>\n\nBy Australian Associated Press\n\nThe Irish government is poised to make a formal apology for abuses in church-run homes for unmarried women and their babies, where thousands of infants died and were sometimes buried in mass graves.\n\nPrime Minister Micheal Martin is expected to apologise on behalf of the Irish state later in the week.\n\nThe Sunday Independent newspaper, which disclosed leaked details of the report, said it found that 9000 children died in 18 different homes during the 20th century.\n\nOne in seven of all children born in the homes died, far above Ireland's nationwide infant mortality rate.\n\nChurch-run homes in Ireland housed orphans, unmarried pregnant women and their babies for most of the 20th century.\nhttps:\/\/www.greatlakesadvocate.com.au\/story\/7083842\/ireland-apology-to-unwed-mothers\/?cs=10935","a8a03914":"No Accuracy.","df84f30b":"![](https:\/\/www.irishcentral.com\/uploads\/article\/118315\/cropped_Mother_Baby_home_children_nuns.jpg?t=1597916262)irishcentral.com","4af76868":"#Codes by AndresHG https:\/\/www.kaggle.com\/andreshg\/mushroom-s-h2o-automl-and-clasic-models-auc-1-0\/notebook","6c104d91":"No Accuracy","019c0dd4":"That's what happen with no Accuracy, no AUC, and No skills.\n\nIt was like playing BATTLESHIP: Water! With H2O I only got Water in my BattleShip. \n\n\nH2O has and awesome performance and is really fast. Also, you can check the Sparkling Water parallelization for bigger datasets: H2O original documentation https:\/\/www.h2o.ai\/blog\/how-sparkling-water-brings-h2o-to-spark\/","2d342311":"Failed: Job with key %s failed with an exception: %s\" % -->","4c4accb4":"The institutions have been subject to intense public scrutiny since historian Catherine Corless in 2014 tracked down death certificates for nearly 800 children who died at the former Bon Secours Mother and Baby Home in Tuam, County Galway - but could only find a burial record for one child.\n\nInvestigators later found a mass grave containing the remains of babies and young children in an underground sewage structure on the grounds of the home, which was run by an order of Catholic nuns and closed in 1961.\n\nThe last of Ireland's mother-and-baby homes did not shut down until the late 1990s.\n\nThe inquiry is part of a process of reckoning in overwhelmingly Roman Catholic Ireland to come to terms with a history of abuses in church-run institutions, including the shunning and shaming of unwed mothers, many of whom were pressured into giving up their babies for adoption.\n\nhttps:\/\/www.greatlakesadvocate.com.au\/story\/7083842\/ireland-apology-to-unwed-mothers\/?cs=10935","35df3068":"#Classification Models Comparisson","6e792241":"No Accuracy","9fe89569":"Below, I don't have AUC, therefore I changed to the only column above that didn't result in Error.","338aef03":"ValueError: Value of 'y' is not the name of a column in 'data_frame'. Expected one of 'model_id', 'mean_per_class_error', 'logloss', 'rmse', 'mse', 'model_type' but received: auc.  Then I changed to the only that doesn't result in error. (mse)","aa20d495":"Too good to be true. 1st Error: AttributeError: type object 'ModelBase' has no attribute 'metric'","0c6e4162":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcSVa9preDPmO6qLIYPUXXyVmKcWPifMpp7qxg&usqp=CAU)h2oai-web.herokuapp.com"}}