{"cell_type":{"22953517":"code","8dbcc0a9":"code","f42fdf36":"code","e8a427d0":"code","adde6214":"code","a8c77290":"code","c401eb82":"code","b05231cf":"code","f0a7f72e":"code","c8fabbea":"code","b0ead9d4":"code","5badb6c1":"code","3bbfe7af":"code","374103ad":"code","8e9c4445":"code","dc0d9be1":"code","24f1ee47":"code","a08c327c":"code","a9f217df":"code","11ee8bc7":"code","08088fb4":"code","aa790c66":"code","789b01cf":"code","0276c5be":"code","e95daf53":"code","c6588027":"code","fba256f7":"code","daf97b7e":"code","73497c5d":"code","81e64aba":"code","9a625891":"code","0d0326b4":"code","c6c92014":"code","9555eead":"code","217b8d3b":"markdown","a8cff2b1":"markdown"},"source":{"22953517":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport statsmodels.api as sm\nfrom sklearn import linear_model\nfrom sklearn.metrics import mean_squared_error, r2_score, mean_absolute_error\nimport seaborn as sns\nfrom math import sqrt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import Ridge\nfrom yellowbrick.datasets import load_concrete\nfrom yellowbrick.regressor import ResidualsPlot\nimport calendar\nfrom sklearn.cluster import KMeans\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","8dbcc0a9":" df1 =pd.read_csv('\/kaggle\/input\/Petrol Prices.csv')\ndf1\n\n","f42fdf36":"df1.head(7)","e8a427d0":"df1.tail(4)\n","adde6214":"df1\n","a8c77290":"#delete ug 18 data error\ndf1[df1[\"Date\"]==\"ug 18 2016\"]\n\ndf1 = df1.drop(df1[df1.Date==\"ug 18 2016\"].index)\n\n\n#convert to datetime\n\ndf1.insert(1,\"date2\", pd.to_datetime(df1[\"Date\"]))\n\ndf1\n\n\n\n\n\n","c401eb82":"x =df1['date2'].groupby([df1.date2.dt.month]).agg('count')\n\n\n\n\nx.values","b05231cf":"pltdf = pd.DataFrame({\"Month\": x.index, \"Count\": x.values})\npltdf","f0a7f72e":"pltdf.plot(kind=\"bar\",\n    x='Month',\n    y='Count',\n    title=\"Total per Month\",\n    figsize=(12,8)\n)\nplt.ylabel(\"Count\")\nplt.xlabel(\"Month\")","c8fabbea":"df1","b0ead9d4":"day=df1[\"date2\"].dt.day\n\ndf1.insert(3, \"Day\", day.values)\n\n\n","5badb6c1":"month=df1[\"date2\"].dt.month\n\nmonth.values\n\n\ndf1.insert(2, \"Month\", month.values)\n\ndf1\n","3bbfe7af":"\n\nYear=df1[\"date2\"].dt.year\n\nYear.values\n\n\ndf1.insert(3, \"Year\", Year.values)","374103ad":" df1.replace({'Month' : {1 : \"Jan\", 2 : \"Feb\", 3 : \"Mar\", 4 : \"Apr\", 5 : \"May\", 6 : \"Jun\", 7 : \"Jul\", 8 : \"Aug\", 9 : \"Sept\", 10 : \"Oct\", 11 : \"Nov\", 12 : \"Dec\",   }})","8e9c4445":"df1","dc0d9be1":"#remaking index\ndfIC=pd.DataFrame({\"Gasolene_87\": df1[\"Gasolene_87\"] , \"Gasolene_90\": df1[\"Gasolene_90\"], \"Auto_Diesel\": df1[\"Auto_Diesel\"],\"Kerosene\": df1[\"Kerosene\"], \"Propane\": df1[\"Propane\"],\"Butane\": df1[\"Butane\"],\"HFO\": df1[\"HFO\"],\"Asphalt\": df1[\"Asphalt\"],\"ULSD\": df1[\"ULSD\"],\"Ex_Refinery\": df1[\"Ex_Refinery\"], })\ndfIC = dfIC.reset_index(drop=True)\n\ndfIC","24f1ee47":"dfIC.plot(kind=\"line\",\n    title=\"Gas Prices over Period\",\n   \n    figsize=(12,8)\n)\nplt.ylabel(\"Type\")","a08c327c":"HFO_pc= dfIC[\"HFO\"].pct_change(periods=4)\n\nHFO_pc","a9f217df":"HFO_pc.plot(kind=\"line\",\n    title=\"HFO Percentage Change over Period[4]\",\n   \n    figsize=(12,8)\n)\nplt.ylabel(\"Type\")","11ee8bc7":"df2=pd.DataFrame({\"Day\": df1[\"Day\"], \"Month\": df1[\"Month\"], \"Year\": df1[\"Year\"], \"Gasolene_87\": df1[\"Gasolene_87\"], \"Gasolene_90\": df1[\"Gasolene_90\"] })\n\ndf2","08088fb4":"\n#clustering\n\n\ncluster_data = df2[['Gasolene_87','Gasolene_90']]\ncluster_data.head()\n\n","aa790c66":"#there was data missing\n\nmissing_data_results = cluster_data.isnull().sum()\nprint(missing_data_results)\n\n\ncluster_data = cluster_data.fillna( df2.median() )\n\nmissing_data_results = cluster_data.isnull().sum()\nprint(missing_data_results)\n","789b01cf":"data_values = cluster_data.iloc[ :, :].values\ndata_values","0276c5be":"wcss = []\nfor i in range( 1, 15 ):\n    kmeans = KMeans(n_clusters=i, init=\"k-means++\", n_init=10, max_iter=300) \n    kmeans.fit_predict( data_values )\n    wcss.append( kmeans.inertia_ )\n    \nplt.plot( wcss, 'ro-', label=\"WCSS\")\nplt.title(\"Computing WCSS for KMeans++\")\nplt.xlabel(\"Number of clusters\")\nplt.ylabel(\"WCSS\")\nplt.show()","e95daf53":"kmeans = KMeans(n_clusters=3, init=\"k-means++\", n_init=10, max_iter=300) \ncluster_data[\"cluster\"] = kmeans.fit_predict( data_values )\ncluster_data","c6588027":"cluster_data['cluster'].value_counts()","fba256f7":"cluster_data['cluster'].value_counts().plot(kind='bar',title='Distribution of gas')","daf97b7e":"kmeans = KMeans(n_clusters=3).fit(data_values)\ncentroids = kmeans.cluster_centers_\nprint(centroids)\n\n\n#scatter plot nots showing  correct values\n\n\nplt.scatter(data_values[:,0], data_values[:,1], c= kmeans.labels_.astype(float), s=50, alpha=0.5)\nplt.scatter(centroids[:, 0], centroids[:, 1], c='red', s=50)","73497c5d":"sns.pairplot( cluster_data, hue=\"cluster\")","81e64aba":"grouped_cluster_data1 = cluster_data.groupby('cluster')\ngrouped_cluster_data1","9a625891":"grouped_cluster_data1.describe()","0d0326b4":"grouped_cluster_data2 = cluster_data.groupby(df2['Year'])\ngrouped_cluster_data2","c6c92014":"\ngrouped_cluster_data2.describe()","9555eead":"avg_price_year = df2.groupby('Year')['Gasolene_87','Gasolene_90'].agg(np.mean)\navg_price_year","217b8d3b":"Predicting the elbow at 3. Using 3 clusters","a8cff2b1":"Autoregression\n\nThis time series forcasting method uses the observations of a prior time model to predict the next step in a sequence. \n\nIn other words, it uses previous observations as an input into a regression analysis to predict the value of some factor at a subsequent time. \n\n\n\n                                            example\n                 an auto regresssion can be used to tell the value at time(+1) by using the results of the results                  at the last two time steps; time(-1) and time(-2)\n                 \n      regression formula\n                 \n  y= b0+ b1*z1 \n  \n \n          predicted value of y at time(+1) using values of y at time(-1) and time(-2)\n  y(t+1)= b0 + b1* z(t-1) + b2 * z(t-2)\n  \n  \n  "}}