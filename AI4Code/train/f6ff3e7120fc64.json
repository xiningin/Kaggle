{"cell_type":{"f0cec531":"code","6380130c":"code","e9b6ea01":"code","47b2f108":"code","5476c5ff":"code","44a58467":"code","10dd664e":"code","165e7aaa":"code","efa627e8":"markdown","4b2f4f38":"markdown","1f6149cc":"markdown","d392b16e":"markdown"},"source":{"f0cec531":"STR =\"I love machine learning.I love deep learning.Hello.I like python,android,ios,js.\"","6380130c":"def countLetters(word):\n    counter = {}\n    for letter in word:\n        if letter not in counter:\n            counter[letter] = 0\n        counter[letter] += 1\n    return counter\n\ncountLetters(STR)","e9b6ea01":"from collections import Counter\n\nCounter(STR) ","47b2f108":"from collections import Counter\n\ndef find_max_letter_and_count(word):\n    counter = Counter(word)\n    max_count = -1\n    for letter in counter:\n        if counter[letter] > max_count:\n            max_count = counter[letter]\n            max_letter = letter\n    return max_letter, max_count\n\nfind_max_letter_and_count(STR) ","5476c5ff":"import numpy as np\nimport pandas as pd\nfrom collections import Counter","44a58467":"train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntrain.head()","10dd664e":"def get_outliers(df,numOfOneRowOutlier,features):\n    outlier_indices = []\n    for col in features:\n        Q1 = np.percentile(df[col], 25)\n        Q3 = np.percentile(df[col],75)\n        IQR = Q3 - Q1\n        \n        outlier_step = 1.5 * IQR\n        outlier_list_col = df[(df[col] < Q1 - outlier_step) | (df[col] > Q3 + outlier_step )].index\n        outlier_indices.extend(outlier_list_col)\n    outlier_indices = Counter(outlier_indices)   \n    print(\"outlier_indices = \",outlier_indices)\n    print(\"\")\n    multiple_outliers = list( k for k, v in outlier_indices.items() if v > numOfOneRowOutlier )\n    print(\"multiple_outliers = \",multiple_outliers)\n    \n    return multiple_outliers   \n\n\nnum_cols = ['Age', 'SibSp', 'Parch', \"Fare\"]\noutliers_rows = get_outliers(train,2,num_cols)\nprint(\"\")\n\"outliers_rows :\",len(outliers_rows)","165e7aaa":"print(\"train total rows before drop:\",len(train))\ntrain = train.drop(outliers_rows, axis = 0).reset_index(drop=True)\nprint(\"train total rows after drop:\",len(train))","efa627e8":"# Titanic Get Outlier and Detete seleected rows","4b2f4f38":"# count letter count by python default ","1f6149cc":"# get max letter count and letter","d392b16e":"# count letter by Counter Library "}}