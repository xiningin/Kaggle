{"cell_type":{"984006ed":"code","1b713717":"code","620551dd":"code","986db5ab":"code","e04ad1a1":"code","8a733650":"code","e4116aa6":"code","cf767b1c":"code","fa09ac8c":"code","359354bd":"code","8dcd5048":"code","ddf93dec":"code","360e513c":"code","7e9668b1":"code","26c88ba4":"code","139f444e":"code","7c614481":"code","a51350c7":"code","9e080a52":"code","8c2527a6":"code","74576978":"code","0c60ea0c":"code","8fdcdd8c":"markdown","9dcb6b60":"markdown","e235b756":"markdown","8908a2cd":"markdown","3061df36":"markdown","df5753d2":"markdown","0dd2b96b":"markdown","63029684":"markdown","c7381145":"markdown","77d361c3":"markdown","fe2cec9f":"markdown","127cf83b":"markdown","5c189d36":"markdown","83d8abf1":"markdown","b38ce011":"markdown","8d5daf52":"markdown","a017d88c":"markdown","97b24850":"markdown","a109ebcd":"markdown","233476b0":"markdown","3ad0d7bd":"markdown"},"source":{"984006ed":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.cm as cm\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfigure = plt.figure()\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1b713717":"#read data\ntrain = pd.read_csv(\"\/kaggle\/input\/insurance-churn-prediction-weekend-hackathon\/Insurance_Churn_ParticipantsData\/Train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/insurance-churn-prediction-weekend-hackathon\/Insurance_Churn_ParticipantsData\/Test.csv\")","620551dd":"train.head()","986db5ab":"test.head()","e04ad1a1":"train.describe()","8a733650":"train.dtypes","e4116aa6":"train.isnull().sum()","cf767b1c":"for col in train.columns:\n    plot = plt.boxplot(train[col])\n    print(f'plot of feature {col} is {plot}')\n    plt.show()","fa09ac8c":"train[train['feature_1']>24].index","359354bd":"train[train['feature_3']>15].index","8dcd5048":"train[train['feature_4']>16].index","ddf93dec":"train[train['feature_6']>20].index","360e513c":"train1 = train.drop([5445, 5606, 29608, 20042, 17893, 20894, 32159, 7705])","7e9668b1":"plt.figure(figsize=(16,8))\ncorr = train.corr()\nax = sns.heatmap(\n    corr, \n    vmin=-1, vmax=1, center=0,\n    cmap=sns.diverging_palette(20, 220, n=200),\n    square=True\n)\nax.set_xticklabels(\n    ax.get_xticklabels(),\n    rotation=45,\n    horizontalalignment='right'\n);","26c88ba4":"X = train[[col for col in train.columns if not col == 'labels']]\nX = X.set_index('feature_0')\nX.shape","139f444e":"y = train['labels']\ny.shape","7c614481":"from sklearn.model_selection import train_test_split\ntrain_X, val_X, train_y, val_y = train_test_split(X, y,train_size=0.8, test_size=0.2,random_state = 0)","a51350c7":"from xgboost import XGBClassifier\nmodel_xgb  = XGBClassifier(n_estimators = 178,\n                       eta = 0.17,\n                       booster_pram = 'dart',\n                       tree_method = 'hist',\n                       scale_pos_weight= 5,\n                       max_bin=215,\n                       random_state = 0)","9e080a52":"model_xgb.fit(train_X,\n          train_y)","8c2527a6":"predict = model_xgb.predict(val_X)","74576978":"from sklearn.metrics import f1_score\nf1_score(val_y,predict)","0c60ea0c":"from sklearn.metrics import confusion_matrix\nprint(\"Confusion matrix \\n\",confusion_matrix(val_y,predict))","8fdcdd8c":"# 3. Split the features and lables from data","9dcb6b60":"# 5. Create Model\n\nHere I'm using XGBOOST for classification.\n\nXGBoost is an optimized distributed gradient boosting library designed to be highly efficient, flexible and portable. It implements machine learning algorithms under the Gradient Boosting framework. XGBoost provides a parallel tree boosting (also known as GBDT, GBM) that solve many data science problems in a fast and accurate way.","e235b756":"### 2.3 Univirate Analysis\n\nThis analysis helps us in removing the outliers present in the dataset that may lead to overfit the model with noise.","8908a2cd":"### 4.5  Confusion Matrix\n\nA confusion matrix is a table that is often used to describe the performance of a classification model (or \"classifier\") on a set of test data for which the true values are known.\n","3061df36":"# 4. Splitting the dataset into the Training set and Test set\n\nWe divide the data here into 80% train set and 20% test set.","df5753d2":"# 1. Read and import all data files","0dd2b96b":"Keep supporting!\n\n\n## Any advice would be appreciated.","63029684":"### 2.4 Bi-variate Analysis\nCheck which feature is relevant or not.","c7381145":"### 4.1 Import model\n\nHere the tuning of parameters is alraedy done by me.","77d361c3":"### 4.3 Make the Prediction on test data","fe2cec9f":"There is no missing value.","127cf83b":"# Insurance Churn Prediction\n\nInsurance companies around the world operate in a very competitive environment. With various aspects of data collected from millions of customers, it is painstakingly hard to analyze and understand the reason for a customer\u2019s decision to switch to a different insurance provider.\n\nFor an industry where customer acquisition and retention are equally important, and the former being a more expensive process, insurance companies rely on data to understand customer behavior to prevent retention. Thus knowing whether a customer is possibly going to switch beforehand gives Insurance companies an opportunity to come up with strategies to prevent it from actually happening.\n\n# Task\n\nGiven are 16 distinguishing factors that can help in understanding the customer churn, your objective as a data scientist is to build a Machine Learning model that can predict whether the insurance company will lose a customer or not using these factors.\n\nYou are provided with 16 anonymized factors (feature_0 to feature 15) that influence the churn of customers in the insurance industry.\n\n*Build a Machine Learning model that can predict whether the insurance company will lose a customer or not using these factors.*","5c189d36":"With the help of plots, lets check the index of main outliers so we can delete them.","83d8abf1":"### 4.2 Fit the model","b38ce011":"0.63 is pretty good score on this dataset. It is improved by doing some feature engineering, etc. \nYou can try different algorithms too.","8d5daf52":"### 2.2 **Check missing values**","a017d88c":"### 4.4 Evaluate these predictions using F1 score metric\n\nThe F1 score can be interpreted as a weighted average of the precision and recall, where an F1 score reaches its best value at 1 and worst score at 0. The relative contribution of precision and recall to the F1 score are equal. The formula for the F1 score is:\n\nF1 = 2 * (precision * recall) \/ (precision + recall)","97b24850":"Now let us drop these outliers from dataset.","a109ebcd":"### 2.1 **Check Categorical features**","233476b0":"# 2. Features Analysis:","3ad0d7bd":"As it is clearly seen there is no categorical feature so there is no need of categorical mapping"}}