{"cell_type":{"a6b01ea0":"code","098d3dd6":"code","716d0a7d":"code","604f1059":"code","38ed75cc":"code","62675e31":"code","cc7c11a5":"code","82744bcc":"code","7b742f2c":"code","aee1d80a":"code","2fcadc23":"code","8e34f966":"code","5884fefc":"markdown","9cc38358":"markdown","aafeac33":"markdown","5d1fb581":"markdown","bd29f3e7":"markdown","ed183f91":"markdown","23a78291":"markdown","bc93b085":"markdown","7083d831":"markdown","a4b63b8b":"markdown","059e9238":"markdown","c757f2cb":"markdown","9f39956c":"markdown","483ceccc":"markdown"},"source":{"a6b01ea0":"!pip install geoviews --upgrade","098d3dd6":"import xarray as xr\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport datetime as dt\nfrom holoviews.operation.datashader import regrid\nimport cartopy.crs as crs\nimport cartopy.feature as cfeature\nimport geoviews as gv \nimport geoviews.feature as gf\nfrom geoviews import opts\nimport geoviews.tile_sources as gts\ngv.extension(\"bokeh\")\n","716d0a7d":"zone = \"NW\"     #geographic zone (NW here for North-West of France)\nmodel = 'arome' #weather model (arome or arpege)\nMODEL = 'AROME' #weather model (AROME or ARPEGE)\nlevel = '2m'      #vertical level (2m, 10m, P_sea_level or PRECIP)\ndate = dt.datetime(2016, 2, 14,0,0) # Day example \n#parameter name in the file (cf cells below to know the parameter names -> exploration of metadata)\nif level == '2m':\n    param = 't2m'\nelif level == '10m':\n    param = 'u10'\nelif level == 'PRECIP':\n    param = 'tp'\nelse:\n    param = 'msl'\ndirectory = '\/kaggle\/input\/meteonet\/' + zone + '_weather_models_2D_parameters_' + str(date.year) + str(date.month).zfill(2) + '\/' + str(date.year) + str(date.month).zfill(2) + '\/'\nfname = directory + f'{MODEL}\/{level}\/{model}_{level}_{zone}_{date.year}{str(date.month).zfill(2)}{str(date.day).zfill(2)}000000.nc'\ndata = xr.open_dataset(fname)  ","604f1059":"data.head()","38ed75cc":"# Changing the time dimension\ndata = data.swap_dims({\"step\":\"valid_time\"})","62675e31":"coastline = gf.coastline(line_width=3,line_color='white').opts(projection=crs.GOOGLE_MERCATOR,scale='50m')\nborders = gf.borders(line_width=3,line_color=\"black\").options(scale='50m')\ntile = gts.EsriImagery().opts(width=600, height=700)","cc7c11a5":"gv_t2m = gv.Dataset(data,vdims=[\"t2m\"],crs=crs.PlateCarree())\nt2m_image= gv_t2m.to(gv.Image,['longitude', 'latitude'],\"t2m\",dynamic=True).opts(opts.Image(projection=crs.GOOGLE_MERCATOR,colorbar=True,cmap=\"jet\",tools=[\"hover\"],alpha=0.8))","82744bcc":"t2m_image.opts(opts.Image(title=\"Temperature (in Kelvin)\"))* tile * borders * coastline","7b742f2c":"regrid(t2m_image.opts(opts.Image(title=\"Temperature (in Kelvin)\",color_levels=None)),interpolation=\"nearest\")* tile * borders * coastline ","aee1d80a":"t2m_image.opts(opts.Image(title=\"Temperature (in Kelvin)\",color_levels=10,clim=(265,290),alpha=1))","2fcadc23":"ds_r = gv.Dataset(data,vdims=[\"r\"],crs=crs.PlateCarree())\nr_contours = ds_r.to(gv.LineContours,['longitude', 'latitude'],dynamic=True,name=\"Humidity\").opts(cmap='RdBu_r',levels=5,show_legend=False,line_width=3,alpha=0.9,width=600, height=700,tools=[\"hover\"])","8e34f966":"(r_contours * t2m_image.opts(alpha=0.5)*tile).opts(title = \"Relative humidity (in %) on top of temperature\") + r_contours.opts(title = \"Relative humidity alone (in %)\",show_legend=True)","5884fefc":"# Data visualization challenge : examples with geoviews","9cc38358":" ### 3. Plotting nice graphs with geoviews! ","aafeac33":" ### 2. Preprocessing the data ","5d1fb581":"#### Then, we define the tile, the borders and the coastline we will plot on the image","bd29f3e7":"We explore the dimension of the file. \nWe can see that this file has 3 dimension : (step,latitude,longitude). \nWe can also see that step is a *timedelta* in nanoseconds (which is not so fun to use). ","ed183f91":"### Plotting the image using a tile, border and coastline\nIn order to add element to a a plot geoview use * operator. \nSo here we produce a plot with our temperature field as well as the tile, borders and coastline","23a78291":"### Doing the same job but using regrid from datashader. \nThe plot should be more reactive. However as the dataset is very small, we cannot see a major difference here","bc93b085":"# Adding relative humidity on top of temperature \nLet's now add a second field to the plot.\nFirst we define the contours for this variable. ","7083d831":"### Now we use our dataset to extract an image of the temperature. \nWe specify that we will render it using GOOGLE_MERCATOR projection in order to be able to add the tile and the coastline","a4b63b8b":"#### First, we swap dimension to get valid_time (which is a datetime) instead of step","059e9238":"### Then we plot it \nWhen you use the widget on the right, both plots change.","c757f2cb":"### 1. Opening the data ","9f39956c":"### We can also decide to join some levels and to  decide a specific limitation for colorbar (such that colorbar is fix for different time)","483ceccc":" <font size=\"4\">This notebook gives you some useful tips about the data visualization challenge (cf task https:\/\/www.kaggle.com\/katerpillar\/meteonet\/tasks?taskId=710). You can find here some examples with the **geoviews** library. If you have new ideas, solutions, do not hesitate to share it!  \n    **Note** : the internet connection of this notebook must be *on* to allow the basemap downloading.  \n <\/font>"}}