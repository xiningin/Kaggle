{"cell_type":{"9e511a6f":"code","29b7fa42":"code","ae3fe934":"code","b678c1e6":"code","44f13e69":"code","eff7c291":"code","e60e4294":"code","f9fba04b":"code","88c7b890":"code","31456224":"code","95e11a97":"code","d93897a3":"code","d49ec379":"code","15baad19":"code","f6003200":"code","78db44b7":"code","b68580ec":"code","5c4a165f":"code","51600eb0":"code","1c89ca7c":"code","6c1affa1":"code","b93d3677":"code","50fde17d":"code","93cc18e9":"code","aac5f3f8":"code","191aabaf":"markdown","32cbe5a0":"markdown","7f2ac407":"markdown","51910d5e":"markdown","4698fd1b":"markdown","105ce79b":"markdown","9e4ebf5c":"markdown","f3e21ea8":"markdown","632b5e1d":"markdown","40450961":"markdown","b65e2df3":"markdown","a92393d6":"markdown","2941e3b2":"markdown","6b39ec04":"markdown","dddd2243":"markdown","bcbeb074":"markdown","48e3eddf":"markdown","5fee4320":"markdown","12f58714":"markdown","f45ed88d":"markdown","71ca59ab":"markdown"},"source":{"9e511a6f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","29b7fa42":"import matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split","ae3fe934":"train = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-may-2021\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-may-2021\/test.csv\")\nsubmission = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-may-2021\/sample_submission.csv\")","b678c1e6":"train.head()","44f13e69":"test.head()","eff7c291":"train.columns","e60e4294":"train.drop(columns=['id'])\ntest.drop(columns=['id'])","f9fba04b":"train['target'].value_counts(normalize=True).plot(kind='bar')","88c7b890":"train['target'].value_counts()","31456224":"sns.heatmap(train.corr(method='pearson'),cmap=\"YlGnBu\",vmin=-1)","95e11a97":"#If you want to dig deep and see\nfeature_list = ['feature_0', 'feature_1', 'feature_2', 'feature_3', 'feature_4','feature_5']\nfig_dims = (15,15)\nfig, ax = plt.subplots(figsize=fig_dims)\nsns.heatmap(train[feature_list].corr(method='pearson'),cmap=\"YlGnBu\",vmin=-1,annot=True,fmt='.1f',ax=ax)","d93897a3":"SS = pd.crosstab(train['target'],train['feature_0'])\nSS.div(SS.sum(1),axis=0).plot(kind='bar',stacked=True)","d49ec379":"X = train.iloc[:,:-1]\n# Dependant variable\ny = train['target']","15baad19":"X_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=0.2, random_state=1)","f6003200":"print(X_train.shape)\nprint(y_train.shape)\nprint(X_valid.shape)\nprint(y_valid.shape)","78db44b7":"from xgboost import XGBClassifier\nmodel = XGBClassifier(random_state=1, use_label_encoder=True, n_estimators=128)\nmodel.fit(X_train, y_train)","b68580ec":"#importance = model.feature_importances_\n# summarize feature importance\n#for i,v in enumerate(importance):\n    #print('Feature: %0d, Score: %.5f' % (i,v))\n# plot feature importance","5c4a165f":"plt.bar(range(len(model.feature_importances_)), model.feature_importances_)\nplt.show()","51600eb0":"pred = model.predict(X_valid)","1c89ca7c":"from sklearn.metrics import accuracy_score\naccuracy = accuracy_score(pred,y_valid)\nprint(accuracy)","6c1affa1":"y_pred = model.predict_proba(test)\nprint(y_pred)","b93d3677":"submission_xgb = pd.DataFrame(y_pred,columns=['Class_1','Class_2','Class_3','Class_4'])\nsubmission_xgb['id'] = submission['id']","50fde17d":"submission_xgb = submission_xgb[['id','Class_1','Class_2','Class_3','Class_4']]","93cc18e9":"submission_xgb","aac5f3f8":"submission_xgb.to_csv('submission_xgb',index=False)","191aabaf":"## If you have any questions, post them below. Would love to hear your suggestions and ideas for improvement of the notebook.","32cbe5a0":"## Scope of Improvement\n<B>1. The data is imbalanced. You can use smote, undersampling and oversampling to correct it <\/B>\n\n<B>2. You might want to use some data dimensionality reduction techniques like PCA <\/B>\n","7f2ac407":"# Making submission file","51910d5e":"### Such kind of graph would be seen for almost all variables as '0' is used maximum times. But the distribution is same across all 4 classes.","4698fd1b":"# Bivariate Analysis","105ce79b":"### There is almost no correlation between any of the features.","9e4ebf5c":"### ID column shouldn't have any impact on Target, so we delete it from both test and train","f3e21ea8":"# <U> <B> A Introductory Notebook for XGBClassfier <\/B> <\/U>","632b5e1d":"### XGBoost is an implementation of gradient boosted decision trees designed for speed and performance. The XGBoost model for classification is known as XGBClassifier.","40450961":"# Viewing Data","b65e2df3":"### model.fit is used to fit the XGBClassifier to out training Dataset","a92393d6":"# Predicting","2941e3b2":"### Mostly data (60%) is for class 2. ","6b39ec04":"# Importing Libraries","dddd2243":"# Analysis","bcbeb074":"# Using XGBClassifier","48e3eddf":"### All variables seem to be equally important except two which are considerably more important.","5fee4320":"# Correlation Analysis","12f58714":"# Data Preparation","f45ed88d":"# Loading Data","71ca59ab":"### <U> <B> Topics Covered: <\/B><\/U>\n\n### 1. Importing Libraries\n### 2. Loading Data\n### 3. Viewing Data\n### 4. Analysis\n### 5. Correlation Analysis\n### 6. Bivariate Analysis\n### 7. Using XGBClassifier\n### 8. Predicting\n### 9. Making Submission File"}}