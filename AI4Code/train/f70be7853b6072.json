{"cell_type":{"b956c72f":"code","fc6b8358":"code","65295d19":"code","f961e6a3":"code","42d9ff47":"code","577c7d08":"code","0a3b7d23":"code","244da13e":"code","a431b59e":"code","e7826015":"code","bdeefb56":"code","f83382bb":"code","c2302931":"code","fc8de716":"code","a9819b34":"code","1f0d29cc":"code","b2c31691":"code","8b936b3c":"code","0efb4d17":"code","7a98d143":"code","29f50db9":"markdown"},"source":{"b956c72f":"!pip install keras-tuner --upgrade --quiet","fc6b8358":"import tensorflow as tf\nfrom tensorflow import keras\nimport numpy as np","65295d19":"print(tf.__version__)","f961e6a3":"fashion_mnist = keras.datasets.fashion_mnist","42d9ff47":"(train_images,train_labels),(test_images,test_lables)=fashion_mnist.load_data()","577c7d08":"import matplotlib.pyplot as plt\n%matplotlib inline\nprint(train_labels[0])","0a3b7d23":"print(train_images[0])\nplt.imshow(train_images[0])\nprint(train_labels[0])\nprint('\\n',train_images[0].shape,'\\n')","244da13e":"train_images=train_images\/255.0\ntest_images=test_images\/255.0","a431b59e":"print(train_images[0])","e7826015":"train_images=train_images.reshape(len(train_images),28,28,1)\ntest_images=test_images.reshape(len(test_images),28,28,1)","bdeefb56":"def build_model(hp):\n    model = keras.Sequential([\n      keras.layers.Conv2D(\n      filters=hp.Int('conv_1_filter', min_value=32,max_value=128, step=16),\n      kernel_size=hp.Choice('conv_1_kernal', values = [3,5]),\n      activation='relu',\n      input_shape=(28,28,1)\n      ),\n      keras.layers.Conv2D(\n      filters=hp.Int('conv_2_filter', min_value=32, max_value=64, step=16),\n      kernel_size=hp.Choice('conv_2_kernel', values = [3,5]),\n      activation='relu'\n      ),\n      keras.layers.Flatten(),\n      keras.layers.Dense(\n          units=hp.Int('Dense_1_units', min_value=32, max_value=128, step=16),\n          activation='relu'\n      ),\n      keras.layers.Dense(10,activation='softmax')\n  ])\n\n\n    model.compile(optimizer=keras.optimizers.Adam(hp.Choice('learning_rate', values=[1e-2,1e-3])),\n                loss='sparse_categorical_crossentropy',\n                metrics=['accuracy'])\n    return model","f83382bb":"def build_model(hp):\n    \n    model = keras.Sequential([\n    keras.layers.Conv2D(\n    filters=hp.Int('conv_1_filter', min_value=32, max_value=128, step=16),\n    kernel_size=hp.Choice('conv_1_kernel', values = [3,5]),\n    activation='relu',\n    input_shape=(28,28,1)\n    ),\n    keras.layers.Conv2D(\n    filters=hp.Int('conv_2_filter', min_value=32, max_value=64, step=16),\n    kernel_size=hp.Choice('conv_2_kernel', values = [3,5]),\n    activation='relu'\n    ),\n    keras.layers.Flatten(),\n    keras.layers.Dense(\n    units=hp.Int('dense_1_units', min_value=32, max_value=128, step=16),\n    activation='relu'\n    ),\n    keras.layers.Dense(10, activation='softmax')\n    ])\n\n    model.compile(optimizer=keras.optimizers.Adam(hp.Choice('learning_rate', values=[1e-2, 1e-3])),\n    loss='sparse_categorical_crossentropy',\n    metrics=['accuracy'])\n\n    return model","c2302931":"from kerastuner import RandomSearch\nfrom kerastuner.engine.hyperparameters import HyperParameters","fc8de716":"tuner_search=RandomSearch(build_model,\n                          objective='val_accuracy',\n                          max_trials=5,directory='output',\n                          project_name=\"Mnist Fasshion\")","a9819b34":"tuner_search.search(train_images,train_labels,epochs=3,validation_split=0.1)","1f0d29cc":"model=tuner_search.get_best_models(num_models=1)[0]","b2c31691":"model.summary()","8b936b3c":"!pip install jovian --upgrade --quiet","0efb4d17":"import jovian","7a98d143":"jovian.commit(project='kersastuner')","29f50db9":"Scaling down images between 0 to 1"}}