{"cell_type":{"3cace623":"code","ec643189":"code","6ad5f75b":"code","c4d15faf":"code","ae8aa06f":"code","fadfd02c":"code","dd8c0b29":"code","246ccc9a":"code","ec2cc93c":"code","00ebe03b":"code","b556d03a":"code","4986b499":"code","b44ea8af":"code","9a7010ef":"code","b01e416b":"code","5d0a3fc1":"code","ac63f189":"code","6d8eac9c":"code","e91dc5bb":"code","b847e4cd":"code","30d89b73":"code","ce64a749":"markdown","a691f809":"markdown","adc7fc00":"markdown","2f17b62c":"markdown","6acfc5cc":"markdown","b0d8c9b3":"markdown","68ceba32":"markdown","6d6a63b1":"markdown","3db73172":"markdown"},"source":{"3cace623":"import numpy as np \nimport pandas as pd \nimport datetime as dt\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom matplotlib.ticker import PercentFormatter\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","ec643189":"df_ecom = pd.read_csv('\/kaggle\/input\/us-ecommerce-record-2020\/US  E-commerce records 2020.csv', encoding='windows-1252')\ndf_ecom.head()","6ad5f75b":"df_ecom.info()","c4d15faf":"df_ecom.apply(lambda x: sum(x.isna()))","ae8aa06f":"df_ecom['Order Date'] = pd.to_datetime(df_ecom['Order Date'])\n\nprint('Min date: {} \\nMax date: {}'.format(df_ecom['Order Date'].min(), df_ecom['Order Date'].max()))\nprint('Time difference is: {}'.format(df_ecom['Order Date'].max() - df_ecom['Order Date'].min()))","fadfd02c":"#Getting customer's first activity \ndef get_month(x): \n    return dt.datetime(x.year, x.month, 1) \n\ndf_ecom['Trans Month'] = df_ecom['Order Date'].apply(get_month)\ndf_ecom['1st Trans Month'] = pd.to_datetime(df_ecom.groupby('Customer ID')['Trans Month'].transform('min'))\n\ndf_ecom.head()","dd8c0b29":"#Calculate month difference\ndef month_diff(start, end):\n    return (end.dt.year - start.dt.year)*12 + end.dt.month - start.dt.month\n\ndf_ecom['Month Diff'] = month_diff(df_ecom['1st Trans Month'], df_ecom['Trans Month'])\n\n\ndf_ecom[['Customer ID', 'Trans Month', '1st Trans Month', 'Month Diff']]","246ccc9a":"#Calculate number of customers in each segment\ndf_cohort = df_ecom.groupby(['1st Trans Month', 'Month Diff'])['Customer ID'].apply(pd.Series.nunique).reset_index()\n\ndf_cohort.head()","ec2cc93c":"#Pivot the cohort table\ndf_cohort.pivot(index='1st Trans Month', columns='Month Diff', values='Customer ID')","00ebe03b":"df_new_cus = df_cohort.loc[df_cohort['Month Diff']==0, ['1st Trans Month', 'Customer ID']]\n\ndf_new_cus.rename(columns={'Customer ID' : 'New Cus'}, inplace=True)\n\ndf_new_cus.head()","b556d03a":"df_retention = pd.merge(df_cohort, df_new_cus, how='left', on='1st Trans Month')\n\ndf_retention.head()","4986b499":"df_retention['Retention Rate'] = df_retention['Customer ID'] \/ df_retention['New Cus']\n\ndf_retention.head()","b44ea8af":"retention = df_retention.pivot(index='1st Trans Month', columns='Month Diff', values='Retention Rate')\n\nretention.index = retention.index.strftime(\"%Y-%m\")\n\nretention","9a7010ef":"plt.rcParams['axes.facecolor'] = 'white'\nfig, ax = plt.subplots(figsize = (15, 8))\n\nsns.heatmap(retention, cmap = 'Blues', annot = True, fmt = '.2%', annot_kws = {'fontsize': 12}, cbar = False, ax = ax)\n\nplt.title('Retention Rate - Monthly Cohorts', fontsize=15)\nplt.yticks(rotation = 0)\nplt.show()","b01e416b":"customer_per_month = df_ecom.groupby('1st Trans Month')['Customer ID'].nunique().values\ncustomers = customer_per_month.cumsum()\ncustomers = customers[::-1]\ncustomers","5d0a3fc1":"customers_monthly = df_ecom.groupby('Month Diff')['Customer ID'].nunique()\ncustomers_monthly","ac63f189":"plt.rcParams['axes.facecolor'] = 'white'\nfig, ax = plt.subplots(figsize = (15, 8))\nax.grid(False)\nx = customers_monthly.index\ny = 100*(customers_monthly \/ customers)\n\nsns.lineplot(x = x, y = y, color = '#43628d', marker = 'o', markerfacecolor = '#79ace6', markeredgecolor = '#000000')\n\nfor x, y in zip(x, y):\n    plt.text(x, y +0.5, s = round(y, 2))\n\nplt.xlabel('Month Diff')\nplt.ylabel('Retention Rate')\nplt.title('Monthly Retention Rate for All Customers', fontsize=15)\nsns.despine()\nplt.show()","6d8eac9c":"monthly_gross = df_ecom.groupby('Trans Month').agg({'Sales': 'sum',\n                                                            'Customer ID': 'nunique'})\n\nmonthly_gross","e91dc5bb":"fig, ax = plt.subplots(figsize = (15, 8))\nsns.set_style('whitegrid')\n\nchart = sns.barplot(x = np.arange(len(monthly_gross.index)), y = monthly_gross.Sales, ax = ax,\n           color = '#79ace6')\n\nfor y in chart.patches:\n             chart.annotate('%.0f' % y.get_height(), (y.get_x() + y.get_width() \/ 2., y.get_height()),\n                 ha='center', va='center', fontsize=10, color='black', xytext=(0, 5),\n                 textcoords='offset points')\n\nplt.title('Total Gross Revenue per Month', fontsize=15)\n\nsns.despine(left = True, right = True, bottom = True, top = True)\nplt.show()","b847e4cd":"monthly_net = df_ecom.groupby('Trans Month').agg({'Profit': 'sum',\n                                                            'Customer ID': 'nunique'})\n\nmonthly_net","30d89b73":"fig, ax = plt.subplots(figsize = (15, 8))\nsns.set_style('whitegrid')\n\nchart = sns.barplot(x = np.arange(len(monthly_net.index)), y = monthly_net.Profit, ax = ax,\n           color = '#c8d2c4')\n\nfor y in chart.patches:\n             chart.annotate('%.0f' % y.get_height(), (y.get_x() + y.get_width() \/ 2., y.get_height()),\n                 ha='center', va='center', fontsize=10, color='black', xytext=(0, 5),\n                 textcoords='offset points')\n\nplt.title('Total Net Revenue per Month', fontsize=15)\n\nsns.despine(left = True, right = True, bottom = True, top = True)\nplt.show()","ce64a749":"In the customer group who made a purchase in January 2020, 19.79% of them decided to order again after 12 months.\n\nLet's have a look at the monthly retention rate of all customers.","a691f809":"**Retention rates fluctuated month to month but they seems quite stable in general. The percentages had only dropped in month 4th, 9th and 10th, then recovered right after that.**","adc7fc00":"This dataset recorded exact 1 year of online purchases, and thus is applicable for a monthly cohort analysis.","2f17b62c":"A lot of discounts were applied in April, making it the only loss-making month of the year. \n\nCompared with the previous monthly retention rate table, this campaign might only affected the customer group who made their first purchase in January, with the retention rate in the 3rd month being 23.96%. Having said that, the figures were fairly normal in other groups. ","6acfc5cc":"The above cohort table interprets customership retention over months. In detail, 96 customers made their first transactions in Jan 2020, we say their cohort month is 2020-01 and cohort index is 0. Looking at the next right cell, there were 10 unique customers among 96 decided to make other purchases after one month.\n\nFrom this point, let's examine how the retention rate is.","b0d8c9b3":"<a id=\"Monthly Revenue\"><\/a>\n# Monthly Revenue","68ceba32":"As shown in the bar chart, sales volume in September (index 10) was the highest among other months in the year. \n\nLet's examine the net profit.","6d6a63b1":"<a id=\"Cohort Calculation\"><\/a>\n# Cohort Calculation\n","3db73172":"<a id=\"Data Preprocessing\"><\/a>\n# Data Preprocessing"}}