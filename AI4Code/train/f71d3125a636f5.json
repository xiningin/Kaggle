{"cell_type":{"8caa134d":"code","7099c0d7":"code","a3cdcf3c":"code","47a0b942":"code","76966fa9":"code","36bb69d7":"code","b782e4ee":"code","38d33018":"code","58651714":"code","507339ac":"code","6bd96464":"code","4ee109ea":"code","7c015907":"code","f497a0e2":"code","0991bae7":"code","60833496":"code","37c5ae39":"markdown","e8ac4409":"markdown"},"source":{"8caa134d":"import os\nimport json\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Any results you write to the current directory are saved as output.","7099c0d7":"%matplotlib inline","a3cdcf3c":"print(os.listdir(\"..\/input\"))\n","47a0b942":"COLLISIONS_CSV = '..\/input\/nypd-motor-vehicle-collisions.csv'\nMETADATA_JSON = '..\/input\/socrata_metadata.json'\nDATADICT = '..\/input\/Collision_DataDictionary.xlsx'","76966fa9":"collisions = pd.read_csv(COLLISIONS_CSV)","36bb69d7":"collisions.head()","b782e4ee":"collisions.tail()","38d33018":"collisions.info()","58651714":"print(f'Number of columns: {len(collisions.columns)}')","507339ac":"collisions.describe()","6bd96464":"# Assuming that the DATE and Time columns are sorted (meaning row 0 is latest date and last row represents the earliest date)\nlatest_date = collisions.iloc[0].DATE\nearliest_date = collisions.iloc[-1].DATE","4ee109ea":"latest_date","7c015907":"earliest_date","f497a0e2":"# Filter the dataframes into number of injured and number of deaths\ninjured_df = collisions[collisions['NUMBER OF PERSONS INJURED'] > 0]\nkilled_df = collisions[collisions['NUMBER OF PERSONS KILLED'] > 0]","0991bae7":"# Now plot these dataframes per borough\nfig, ax = plt.subplots(1, figsize=(12,8))\ninjured_df.BOROUGH.value_counts().plot(kind='bar', color='blue', position=0, ax=ax)\nkilled_df.BOROUGH.value_counts().plot(kind='bar', color='red', position=1, ax=ax)\nax.set_title('Number of persons injured and killed per borough', fontsize=20, fontweight='bold')\nax.set_ylabel('Number of persons injured\/killed')\nplt.show()","60833496":"fig = plt.figure(figsize=(12,8))\n\nbx = fig.add_subplot(111)\nbx2 = bx.twinx() # Create another axes that shares the same x-axis as bx.\ninjured_df.BOROUGH.value_counts().plot(kind='bar', color='blue', width=0.4, position=0, ax=bx)\nkilled_df.BOROUGH.value_counts().plot(kind='bar', color='red', width=0.4, position=1, ax=bx2)\nbx.set_title('Number of persons injured and killed per borough', fontsize=20, fontweight='bold')\nbx.set_ylabel('Number of persons injured')\nbx2.set_ylabel('Number of persons killed')\n\nplt.show()","37c5ae39":"***As can be seen, number of persons killed is way less that injuries, which is encouraging***","e8ac4409":"**As can be seen, number of deaths compared to injured is so small its hard to see. So re-plotting it on two axes. Maybe this is confusing, maybe a box plot or something else may be more appropriate******"}}