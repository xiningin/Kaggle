{"cell_type":{"31e45bdc":"code","50ffd130":"code","e86370b2":"code","6bf2213e":"code","4dda8b98":"code","c4fb4f99":"code","8875883d":"code","8ecd058f":"code","914448c8":"code","a83e66e6":"code","b12ff1f8":"code","e44f0102":"code","da61221e":"code","1291a280":"code","c07f84e7":"code","a3e6241c":"code","94284e96":"code","8d5fc4d3":"markdown","af25b440":"markdown","6cde0a41":"markdown","bc65e17f":"markdown","eefe5773":"markdown","9e558d98":"markdown","5f1c1971":"markdown"},"source":{"31e45bdc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","50ffd130":"#Import libraries\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","e86370b2":"data = pd.read_csv(\"..\/input\/mall-customers\/Mall_Customers.csv\")","6bf2213e":"data.head()","4dda8b98":"data.tail()","c4fb4f99":"data.shape","8875883d":"data.info()","8ecd058f":"data.isnull().sum()","914448c8":"data.duplicated().any()","a83e66e6":"plt.figure(figsize=(10,8))\nsns.barplot(x='Genre',y='Age',data=data,palette=\"Blues\")\nplt.show()","b12ff1f8":"plt.figure(figsize=(14,6))\nsns.scatterplot(x='Annual Income (k$)',y='Age',hue='Genre',data=data)\nplt.show()","e44f0102":"plt.figure(figsize=(14,6))\nsns.scatterplot(x='Spending Score (1-100)',y='Age',hue='Genre',palette = \"viridis\",data=data)\nplt.show()","da61221e":"plt.figure(figsize=(14,6))\nsns.scatterplot(x='Spending Score (1-100)',y='Annual Income (k$)',hue='Genre',palette = \"icefire\",data=data)\nplt.show()","1291a280":"#in clustering there is no dependent data\nx = data.iloc[:,[3,4]].values","c07f84e7":"from sklearn.cluster import KMeans\nwcss = []\nfor i in range(1, 11):\n    kmeans = KMeans(n_clusters = i, init = 'k-means++', random_state = 42)\n    kmeans.fit(x)\n    wcss.append(kmeans.inertia_)\nplt.plot(range(1, 11), wcss,marker='o')\nplt.title('The Elbow Method')\nplt.xlabel('Number of clusters')\nplt.ylabel('WCSS')\nplt.show()","a3e6241c":"kmeans = KMeans(n_clusters = 5, init = 'k-means++', random_state = 42)\ny_kmeans = kmeans.fit_predict(x)\nprint(y_kmeans)","94284e96":"plt.figure(figsize=(18,7))\nplt.scatter(x[y_kmeans == 0, 0], x[y_kmeans == 0, 1], s = 100, c = 'red', label = 'Cluster 1')\nplt.scatter(x[y_kmeans == 1, 0], x[y_kmeans == 1, 1], s = 100, c = 'blue', label = 'Cluster 2')\nplt.scatter(x[y_kmeans == 2, 0], x[y_kmeans == 2, 1], s = 100, c = 'green', label = 'Cluster 3')\nplt.scatter(x[y_kmeans == 3, 0], x[y_kmeans == 3, 1], s = 100, c = 'cyan', label = 'Cluster 4')\nplt.scatter(x[y_kmeans == 4, 0], x[y_kmeans == 4, 1], s = 100, c = 'magenta', label = 'Cluster 5')\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 300, c = 'yellow', label = 'Centroids')\nplt.title('Clusters of customers')\nplt.xlabel('Annual Income (k$)')\nplt.ylabel('Spending Score (1-100)')\nplt.legend()\nplt.show()","8d5fc4d3":"# Visual the clusters","af25b440":"* y_kmeans =3 means first customer ID present in cluster number 4.\n* And y_kmeans =0 means second customer present in cluster number 1.\n* Like this all y_kmeans present different number of cluster.","6cde0a41":"# Training the K-Means model on the dataset","bc65e17f":"**Feel Free to ask your queries....\ud83d\ude00**","eefe5773":"![](https:\/\/thumbs.gfycat.com\/MeaslyOptimisticAfricanwildcat-size_restricted.gif)","9e558d98":"**By this elbow method we get 5 is the cluster number(n_cluster)**","5f1c1971":"# Using the elbow method to find the optimal number of clusters"}}