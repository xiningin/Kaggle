{"cell_type":{"ae1cc411":"code","91f6d245":"code","fe93d037":"code","1d224d61":"code","8e43f64b":"code","40780d2b":"code","629fafe3":"code","454d8da0":"code","2c36109e":"code","09f2bfc5":"code","1194921e":"code","f38e206b":"code","a8e384e3":"code","7c519a21":"code","5536688d":"code","f9ab4f08":"code","e711f4b8":"code","7bf8c8d5":"code","3459a365":"code","d1410763":"code","fbe6d201":"code","e37bed26":"code","27af270d":"code","1ae3bace":"code","776838ce":"code","9367ac1e":"code","332c9585":"code","9ce72017":"code","900027f2":"code","10c396cd":"code","7ce86c21":"code","7fac111f":"code","49446dd1":"code","7ebbf136":"code","caa112eb":"code","3020310a":"code","6771cb75":"code","7a27e4a0":"code","7fe383f0":"code","c8351427":"markdown","12a588e9":"markdown","7521bc6f":"markdown","afb0edda":"markdown","402e6e64":"markdown","35d8fdc8":"markdown","399cbc26":"markdown"},"source":{"ae1cc411":"import numpy as np\nimport pandas as pd\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline","91f6d245":"import plotly\nimport plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)","fe93d037":"mpl.style.use(\"seaborn\")\nplt.style.use(\"seaborn\")\n\nbtui = [\n    \"#b2182b\", \"#d6604d\", \"#f4a582\", \"#92c5de\", \"#4393c3\", \"#2166ac\", \"#762a83\",\n    \"#9970ab\", \"#c2a5cf\", \"#a6dba0\", \"#5aae61\", \"#1b7837\", \"#c51b7d\", \"#de77ae\",\n    \"#f1b6da\", \"#8c510a\", \"#bf812d\", \"#dfc27d\", \"#80cdc1\", \"#35978f\", \"#01665e\",\n    ]\nimport random\nbtui_reversed = btui[::-1]\nbtui_shuffled=random.sample(btui, len(btui))\n\nsns.set(context=\"notebook\", style=\"darkgrid\", font=\"monospace\", font_scale=1.5, palette=btui)\nsns.color_palette(btui)\nsns.set_palette(btui)\nsns.set(rc={\"figure.figsize\": (14, 10)})","1d224d61":"dataset_gunviolence = pd.read_csv(\"..\/input\/gun-violence-data_01-2013_03-2018.csv\")\ndataset_gunviolence.head()","8e43f64b":"dataset_gunviolence.shape","40780d2b":"dataset_gunviolence.describe()","629fafe3":"dataset_gunviolence.info()","454d8da0":"dataset_gunviolence.columns.values","2c36109e":"# After executions found that isnull and isna gives same counts\/values\n#dataset_gunviolence.isnull().values.any()\n#dataset_gunviolence.isnull().sum()\n#dataset_gunviolence.isna().values.any()\n\nmissing_data_sum=dataset_gunviolence.isna().sum()\nmissing_data_count=dataset_gunviolence.isna().count()\npercentage_missing_data=(missing_data_sum\/missing_data_count) * 100\nmissing_data = pd.concat([missing_data_sum, percentage_missing_data], axis=1)\nmissing_data\ndel(missing_data_sum, missing_data_count, percentage_missing_data)","09f2bfc5":"# https:\/\/stackoverflow.com\/questions\/21925114\/is-there-an-implementation-of-missingmaps-in-pythons-ecosystem\nfrom matplotlib import collections as collections\nfrom matplotlib.patches import Rectangle\nfrom itertools import cycle\n\ndef missmap(df, ax=None, colors=None, aspect=4, sort='descending',\n            title=None, **kwargs):\n    \"\"\"\n    Plot the missing values of df.\n\n    Parameters\n    ----------\n    df : pandas DataFrame\n    ax : matplotlib axes\n        if None then a new figure and axes will be created\n    colors : dict\n        dict with {True: c1, False: c2} where the values are\n        matplotlib colors.\n    aspect : int\n        the width to height ratio for each rectangle.\n    sort : one of {'descending', 'ascending', None}\n    title : str\n    kwargs : dict\n        matplotlib.axes.bar kwargs\n\n    Returns\n    -------\n    ax : matplotlib axes\n\n    \"\"\"\n\n    if ax is None:\n        (fig, ax) = plt.subplots()\n\n    # setup the axes\n\n    dfn = pd.isnull(df)\n\n    if sort in ('ascending', 'descending'):\n        counts = dfn.sum()\n        sort_dict = {'ascending': True, 'descending': False}\n        counts = counts.sort_values(ascending=sort_dict[sort])\n        dfn = dfn[counts.index]\n\n    # Up to here\n\n    ny = len(df)\n    nx = len(df.columns)\n\n    # each column is a stacked bar made up of ny patches.\n\n    xgrid = np.tile(np.arange(nx), (ny, 1)).T\n    ygrid = np.tile(np.arange(ny), (nx, 1))\n\n    # xys is the lower left corner of each patch\n\n    xys = (zip(x, y) for (x, y) in zip(xgrid, ygrid))\n\n    if colors is None:\n        colors = {True: '#EAF205', False: 'k'}\n\n    widths = cycle([aspect])\n    heights = cycle([1])\n\n    for (xy, width, height, col) in zip(xys, widths, heights,\n            dfn.columns):\n        color_array = dfn[col].map(colors)\n\n        rects = [Rectangle(xyc, width, height, **kwargs) for (xyc,\n                 c) in zip(xy, color_array)]\n\n        p_coll = collections.PatchCollection(rects, color=color_array,\n                edgecolor=color_array, **kwargs)\n        ax.add_collection(p_coll, autolim=False)\n\n    # post plot aesthetics\n\n    ax.set_xlim(0, nx)\n    ax.set_ylim(0, ny)\n\n    ax.set_xticks(.5 + np.arange(nx))  # center the ticks\n    ax.set_xticklabels(dfn.columns)\n    \n    for t in ax.get_xticklabels():\n        t.set_rotation(90)\n\n    # remove tick lines\n\n    ax.tick_params(axis='both', which='both', bottom='off', left='off',\n                   labelleft='off')\n    ax.grid(False)\n\n    if title:\n        ax.set_title(title)\n    return ax\n\n\ncolours = {True: \"#fde725\", False: \"#440154\"}\nax = missmap(dataset_gunviolence, colors = colours)\nplt.show(ax)","1194921e":"dataset_gunviolence.drop([\n    \"incident_id\",\n    \"incident_url\",\n    \"sources\",\n    \"source_url\",\n    \"incident_url_fields_missing\",\n    \"location_description\",\n    \"participant_relationship\",\n    ], axis=1, inplace=True)","f38e206b":"dataset_gunviolence[\"date\"] = pd.to_datetime(dataset_gunviolence[\"date\"])\n\ndataset_gunviolence[\"day\"] = dataset_gunviolence[\"date\"].dt.day\ndataset_gunviolence[\"month\"] = dataset_gunviolence[\"date\"].dt.month\ndataset_gunviolence[\"year\"] = dataset_gunviolence[\"date\"].dt.year\ndataset_gunviolence[\"weekday\"] = dataset_gunviolence[\"date\"].dt.weekday\ndataset_gunviolence[\"week\"] = dataset_gunviolence[\"date\"].dt.week\ndataset_gunviolence[\"quarter\"] = dataset_gunviolence[\"date\"].dt.quarter","a8e384e3":"dataset_gunviolence[\"participant_gender\"] = dataset_gunviolence[\"participant_gender\"].fillna(\"0::Unknown\")\n\n\ndef clean_participant_gender(row) :\n    gender_row_values = []\n    gender_row = str(row).split(\"||\")\n    for x in gender_row :\n        gender_row_value = str(x).split(\"::\")\n        if len(gender_row_value) > 1 :\n            gender_row_values.append(gender_row_value[1])\n            \n    return gender_row_values\n\n\nparticipant_genders = dataset_gunviolence.participant_gender.apply(clean_participant_gender)\ndataset_gunviolence[\"participant_gender_total\"] = participant_genders.apply(lambda x: len(x))\ndataset_gunviolence[\"participant_gender_male\"] = participant_genders.apply(lambda x: x.count(\"Male\"))\ndataset_gunviolence[\"participant_gender_female\"] = participant_genders.apply(lambda x: x.count(\"Female\"))\ndataset_gunviolence[\"participant_gender_unknown\"] = participant_genders.apply(lambda x: x.count(\"Unknown\"))\ndel(participant_genders)","7c519a21":"dataset_gunviolence[\"n_guns_involved\"] = dataset_gunviolence[\"n_guns_involved\"].fillna(0)\ndataset_gunviolence[\"gun_stolen\"] = dataset_gunviolence[\"gun_stolen\"].fillna(\"0::Unknown\")\n# Prints a lot but gives all the unique values of a column\n#dataset_gunviolence[\"gun_stolen\"].unique()\n\ndef clean_gun_stolen(row) :\n    unknownCount = 0\n    stolenCount = 0\n    notstolenCount = 0\n    gunstolen_row_values = []\n    \n    gunstolen_row = str(row).split(\"||\")\n    for x in gunstolen_row :\n            gunstolen_row_value = str(x).split(\"::\")\n            if len(gunstolen_row_value) > 1 :\n                gunstolen_row_values.append(gunstolen_row_value[1])\n                if \"Stolen\" in gunstolen_row_value :\n                    stolenCount += 1\n                elif \"Not-stolen\" in gunstolen_row_value :\n                    notstolenCount += 1\n                else :\n                    unknownCount += 1\n                    \n    return gunstolen_row_values\n\n\ngunstolenvalues = dataset_gunviolence.gun_stolen.apply(clean_gun_stolen)\ndataset_gunviolence[\"gun_stolen_stolen\"] = gunstolenvalues.apply(lambda x: x.count(\"Stolen\"))\ndataset_gunviolence[\"gun_stolen_notstolen\"] = gunstolenvalues.apply(lambda x: x.count(\"Not-stolen\"))\ndel(gunstolenvalues)","5536688d":"#dataset_gunviolence.participant_age_group.unique()\ndataset_gunviolence[\"participant_age_group\"] = dataset_gunviolence[\"participant_age_group\"].fillna(\"0::Unknown\")\n\ndef clean_participant_age_group(row) :\n    unknownCount = 0\n    childCount = 0\n    teenCount = 0\n    adultCount = 0\n    agegroup_row_values = []\n    \n    agegroup_row = str(row).split(\"||\")\n    for x in agegroup_row :\n        agegroup_row_value = str(x).split(\"::\")\n        if len(agegroup_row_value) > 1 :\n            agegroup_row_values.append(agegroup_row_value[1])\n            if \"Child 0-11\" in agegroup_row_value :\n                childCount += 1\n            elif \"Teen 12-17\" in agegroup_row_value :\n                teenCount += 1\n            elif \"Adult 18+\" in agegroup_row_value :\n                adultCount += 1\n            else :\n                unknownCount += 1\n                \n    return agegroup_row_values\n\nagegroupvalues = dataset_gunviolence.participant_age_group.apply(clean_participant_age_group)\ndataset_gunviolence[\"agegroup_child\"] = agegroupvalues.apply(lambda x: x.count(\"Child 0-11\"))\ndataset_gunviolence[\"agegroup_teen\"] = agegroupvalues.apply(lambda x: x.count(\"Teen 12-17\"))\ndataset_gunviolence[\"agegroup_adult\"] = agegroupvalues.apply(lambda x: x.count(\"Adult 18+\"))\ndel(agegroupvalues)","f9ab4f08":"sns.heatmap(dataset_gunviolence.corr(), cmap=btui, annot=True, fmt=\".2f\")","e711f4b8":"statewise_crime_rate = dataset_gunviolence[\"state\"].value_counts()\nstatewise_crime_rate","7bf8c8d5":"plt.pie(statewise_crime_rate, labels=statewise_crime_rate.index, colors=btui, autopct=\"%1.1f%%\", shadow=True, startangle=195)\nplt.title(\"State-wise Gun Violence Percentage\")\nplt.axis(\"equal\")","3459a365":"statewise_crime_rate = sns.countplot(x=dataset_gunviolence[\"state\"], data=dataset_gunviolence, palette=btui, order=dataset_gunviolence[\"state\"].value_counts().index)\nstatewise_crime_rate.set_xticklabels(statewise_crime_rate.get_xticklabels(), rotation=90)\nstatewise_crime_rate.set_title(\"State(s) with highest number of Gun Violence\")","d1410763":"topcitywise_crime_rate = dataset_gunviolence[\"city_or_county\"].value_counts().head(50)\nplt.pie(topcitywise_crime_rate, labels=topcitywise_crime_rate.index, colors=btui, autopct=\"%1.1f%%\", shadow=True, startangle=195)\nplt.title(\"City-wise Gun Violence Percentage\")\nplt.axis(\"equal\")","fbe6d201":"#Following line creates a Map but unreadable as there are lots of distint cities involved\n#citywise_crime_rate = sns.countplot(x=dataset_gunviolence[\"city_or_county\"], data=dataset_gunviolence, palette=btui, order=dataset_gunviolence[\"city_or_county\"].value_counts().index)\n\ntopcitywise_crime_rate = dataset_gunviolence[\"city_or_county\"].value_counts().head(50)\ntopcitywise_crime_rate_plot = sns.barplot(x=topcitywise_crime_rate.index, y=topcitywise_crime_rate, palette=btui)\ntopcitywise_crime_rate_plot.set_xticklabels(topcitywise_crime_rate_plot.get_xticklabels(), rotation=75)\ntopcitywise_crime_rate_plot.set_title(\"Cities or Counties with highest number of Gun Violence\")","e37bed26":"sns.jointplot(x=dataset_gunviolence[\"n_guns_involved\"], y=dataset_gunviolence[\"gun_stolen_stolen\"], kind=\"scatter\", color=\"#D81B60\")\nsns.jointplot(x=dataset_gunviolence[\"n_guns_involved\"], y=dataset_gunviolence[\"gun_stolen_notstolen\"], kind=\"scatter\", color=\"#1E88E5\")","27af270d":"sns.jointplot(x=dataset_gunviolence.participant_gender_total, y=dataset_gunviolence.n_killed, data=dataset_gunviolence, space=0, dropna=True, color=\"#D81B60\")\nsns.jointplot(x=dataset_gunviolence.participant_gender_total, y=dataset_gunviolence.n_injured, data=dataset_gunviolence, space=0, dropna=True, color=\"#1E88E5\")","1ae3bace":"sns.jointplot(x=dataset_gunviolence.n_guns_involved, y=dataset_gunviolence.n_killed, data=dataset_gunviolence, space=0, dropna=True, color=\"#D81B60\")","776838ce":"# https:\/\/www.shanelynn.ie\/summarising-aggregation-and-grouping-data-in-python-pandas\/\nfor tmpYear in range(2013,2019) :\n        yeargunviolence = dataset_gunviolence[dataset_gunviolence[\"year\"] == tmpYear].groupby([dataset_gunviolence[\"date\"], dataset_gunviolence[\"week\"]]).agg({\"n_killed\" : \"sum\", \"n_injured\" : \"sum\", \"participant_gender_total\" : \"sum\"})\n        yeargunviolence.index = yeargunviolence.index.droplevel(1)\n        fig, axs = plt.subplots()\n        sns.pointplot(x=yeargunviolence.index, y=yeargunviolence.n_killed, data=yeargunviolence, ax=axs, color=\"#D81B60\", scale=0.5, markers=\"x\", label=\"n_killed\")\n        sns.pointplot(x=yeargunviolence.index, y=yeargunviolence.n_injured, data=yeargunviolence, ax=axs, color=\"#FFC107\", scale=0.5, markers=\"X\", label=\"n_injured\")\n        sns.pointplot(x=yeargunviolence.index, y=yeargunviolence.participant_gender_total, data=yeargunviolence, ax=axs, color=\"#1E88E5\", scale=0.5, label=\"n_people\")\n        axs.set_title(\"Year {0} Gun Violence incidents in USA\".format(tmpYear))\n        plt.gcf().autofmt_xdate()\n        plt.show()\n","9367ac1e":"fig, axs = plt.subplots(ncols=2)\n\nn_crimes_by_year_k = dataset_gunviolence.groupby(dataset_gunviolence[\"year\"]).apply(lambda x: pd.Series(dict(total_killed_per_year = x.n_killed.sum())))\nn_crimes_by_year_plot_k = sns.barplot(x=n_crimes_by_year_k.index, y=n_crimes_by_year_k.total_killed_per_year, palette=btui, ax=axs[0])\nn_crimes_by_year_plot_k.set_title(\"Killed each year\")\ndel(n_crimes_by_year_k)\n\nn_crimes_by_year_i = dataset_gunviolence.groupby(dataset_gunviolence[\"year\"]).apply(lambda x: pd.Series(dict(total_injured_per_year = x.n_injured.sum())))\nn_crimes_by_year_plot_i = sns.barplot(x=n_crimes_by_year_i.index, y=n_crimes_by_year_i.total_injured_per_year, palette=btui, ax=axs[1])\nn_crimes_by_year_plot_i.set_title(\"Injured each year\")\ndel(n_crimes_by_year_i)","332c9585":"fig, axs = plt.subplots(ncols=2)\n\nn_crimes_by_quarter_k = dataset_gunviolence.groupby(dataset_gunviolence[\"quarter\"]).apply(lambda x: pd.Series(dict(total_killed_per_quarter = x.n_killed.sum())))\nn_crimes_by_quarter_plot_k = sns.barplot(x=n_crimes_by_quarter_k.index, y=n_crimes_by_quarter_k.total_killed_per_quarter, palette=btui, ax=axs[0])\nn_crimes_by_quarter_plot_k.set_title(\"Killed per quarter\")\ndel(n_crimes_by_quarter_k)\n\nn_crimes_by_quarter_i = dataset_gunviolence.groupby(dataset_gunviolence[\"quarter\"]).apply(lambda x: pd.Series(dict(total_injured_per_quarter = x.n_injured.sum())))\nn_crimes_by_quarter_plot_i = sns.barplot(x=n_crimes_by_quarter_i.index, y=n_crimes_by_quarter_i.total_injured_per_quarter, palette=btui, ax=axs[1])\nn_crimes_by_quarter_plot_i.set_title(\"Injured per quarter\")\ndel(n_crimes_by_quarter_i)","9ce72017":"fig, axs = plt.subplots(nrows=2)\nplt.subplots_adjust(hspace = 0.3)\n\nn_crimes_by_yearquarter_k = dataset_gunviolence.groupby([dataset_gunviolence[\"year\"], dataset_gunviolence[\"quarter\"]]).apply(lambda x: pd.Series(dict(total_killed_per_yearquarter = x.n_killed.sum())))\nn_crimes_by_yearquarter_plot_k = sns.barplot(x=n_crimes_by_yearquarter_k.index, y=n_crimes_by_yearquarter_k.total_killed_per_yearquarter, palette=btui, ax=axs[0])\nn_crimes_by_yearquarter_plot_k.set_xticklabels(n_crimes_by_yearquarter_plot_k.get_xticklabels(),rotation=45)\nn_crimes_by_yearquarter_plot_k.set_title(\"Killed per Year-Quarter\")\n\ndel(n_crimes_by_yearquarter_k)\n\nn_crimes_by_yearquarter_i = dataset_gunviolence.groupby([dataset_gunviolence[\"year\"], dataset_gunviolence[\"quarter\"]]).apply(lambda x: pd.Series(dict(total_injured_per_yearquarter = x.n_injured.sum())))\nn_crimes_by_yearquarter_plot_i = sns.barplot(x=n_crimes_by_yearquarter_i.index, y=n_crimes_by_yearquarter_i.total_injured_per_yearquarter, palette=btui, ax=axs[1])\nn_crimes_by_yearquarter_plot_i.set_xticklabels(n_crimes_by_yearquarter_plot_i.get_xticklabels(),rotation=45)\nn_crimes_by_yearquarter_plot_i.set_title(\"Injured per Year-Quarter\")\ndel(n_crimes_by_yearquarter_i)","900027f2":"fig, axs = plt.subplots(ncols=2)\n\nn_crimes_by_month_k = dataset_gunviolence.groupby(dataset_gunviolence[\"month\"]).apply(lambda x: pd.Series(dict(total_killed_per_month = x.n_killed.sum())))\nn_crimes_by_month_plot_k = sns.barplot(x=n_crimes_by_month_k.index, y=n_crimes_by_month_k.total_killed_per_month, palette=btui, ax=axs[0])\nn_crimes_by_month_plot_k.set_title(\"Killed per Month\")\ndel(n_crimes_by_month_k)\n\nn_crimes_by_month_i = dataset_gunviolence.groupby(dataset_gunviolence[\"month\"]).apply(lambda x: pd.Series(dict(total_injured_per_month = x.n_injured.sum())))\nn_crimes_by_month_plot_i = sns.barplot(x=n_crimes_by_month_i.index, y=n_crimes_by_month_i.total_injured_per_month, palette=btui, ax=axs[1])\nn_crimes_by_month_plot_i.set_title(\"Injured per Month\")\ndel(n_crimes_by_month_i)","10c396cd":"fig, axs = plt.subplots(nrows=2)\nplt.subplots_adjust(hspace = 0.3)\n\nn_crimes_by_yearmonth_k = dataset_gunviolence.groupby([dataset_gunviolence[\"year\"], dataset_gunviolence[\"month\"]]).apply(lambda x: pd.Series(dict(total_killed_per_yearmonth = x.n_killed.sum())))\nn_crimes_by_yearmonth_plot_k = sns.barplot(x=n_crimes_by_yearmonth_k.index, y=n_crimes_by_yearmonth_k.total_killed_per_yearmonth, palette=btui, ax=axs[0])\nn_crimes_by_yearmonth_plot_k.set_xticklabels(n_crimes_by_yearmonth_plot_k.get_xticklabels(), rotation=45)\nn_crimes_by_yearmonth_plot_k.set_title(\"Killed per Year-Month\")\ndel(n_crimes_by_yearmonth_k)\n\nn_crimes_by_yearmonth_i = dataset_gunviolence.groupby([dataset_gunviolence[\"year\"], dataset_gunviolence[\"month\"]]).apply(lambda x: pd.Series(dict(total_injured_per_yearmonth = x.n_injured.sum())))\nn_crimes_by_yearmonth_plot_i = sns.barplot(x=n_crimes_by_yearmonth_i.index, y=n_crimes_by_yearmonth_i.total_injured_per_yearmonth, palette=btui, ax=axs[1])\nn_crimes_by_yearmonth_plot_i.set_xticklabels(n_crimes_by_yearmonth_plot_i.get_xticklabels(), rotation=45)\nn_crimes_by_yearmonth_plot_i.set_title(\"Injured per Year-Month\")\ndel(n_crimes_by_yearmonth_i)","7ce86c21":"fig, axs = plt.subplots(nrows=2)\nplt.subplots_adjust(hspace = 0.3)\n\nn_crimes_by_week_k = dataset_gunviolence.groupby(dataset_gunviolence[\"week\"]).apply(lambda x: pd.Series(dict(total_killed_per_week = x.n_killed.sum())))\nn_crimes_by_week_plot_k = sns.barplot(x=n_crimes_by_week_k.index, y=n_crimes_by_week_k.total_killed_per_week, palette=btui, ax=axs[0])\nn_crimes_by_week_plot_k.set_title(\"Killed per week over the years\")\ndel(n_crimes_by_week_k)\n\nn_crimes_by_week_i = dataset_gunviolence.groupby(dataset_gunviolence[\"week\"]).apply(lambda x: pd.Series(dict(total_injured_per_week = x.n_injured.sum())))\nn_crimes_by_week_plot_i = sns.barplot(x=n_crimes_by_week_i.index, y=n_crimes_by_week_i.total_injured_per_week, palette=btui, ax=axs[1])\nn_crimes_by_week_plot_i.set_title(\"Injured per Week over the years\")\ndel(n_crimes_by_week_i)","7fac111f":"fig, axs = plt.subplots(nrows=2)\nplt.subplots_adjust(hspace = 0.3)\n\nn_crimes_by_monthweek_k = dataset_gunviolence.groupby([dataset_gunviolence[\"month\"], dataset_gunviolence[\"week\"]]).apply(lambda x: pd.Series(dict(total_killed_per_monthweek = x.n_killed.sum())))\nn_crimes_by_monthweek_plot_k = sns.barplot(x=n_crimes_by_monthweek_k.index, y=n_crimes_by_monthweek_k.total_killed_per_monthweek, palette=btui, ax=axs[0])\nn_crimes_by_monthweek_plot_k.set_xticklabels(n_crimes_by_monthweek_plot_k.get_xticklabels(), rotation=45)\nn_crimes_by_monthweek_plot_k.set_title(\"Killed per Month-Week\")\ndel(n_crimes_by_monthweek_k)\n\nn_crimes_by_monthweek_i = dataset_gunviolence.groupby([dataset_gunviolence[\"month\"], dataset_gunviolence[\"week\"]]).apply(lambda x: pd.Series(dict(total_injured_per_monthweek = x.n_injured.sum())))\nn_crimes_by_monthweek_plot_i = sns.barplot(x=n_crimes_by_monthweek_i.index, y=n_crimes_by_monthweek_i.total_injured_per_monthweek, palette=btui)\nn_crimes_by_monthweek_plot_i.set_xticklabels(n_crimes_by_monthweek_plot_i.get_xticklabels(), rotation=45)\nn_crimes_by_monthweek_plot_i.set_title(\"Injured per Month-Week\")\ndel(n_crimes_by_monthweek_i)","49446dd1":"n_crimes_by_yearweek = dataset_gunviolence.groupby([dataset_gunviolence[\"year\"], dataset_gunviolence[\"week\"]]).apply(lambda x: pd.Series(dict(total_killed_per_yearweek = x.n_killed.sum())))\nn_crimes_by_yearweek_plot = sns.barplot(x=n_crimes_by_yearweek.index, y=n_crimes_by_yearweek.total_killed_per_yearweek, palette=btui)\nn_crimes_by_yearweek_plot.set_xticklabels(n_crimes_by_yearweek_plot.get_xticklabels(), rotation=45)\nn_crimes_by_yearweek_plot.set_title(\"Killed per Year-Week\")\ndel(n_crimes_by_yearweek)","7ebbf136":"n_crimes_by_yearweek = dataset_gunviolence.groupby([dataset_gunviolence[\"year\"], dataset_gunviolence[\"week\"]]).apply(lambda x: pd.Series(dict(total_injured_per_yearweek = x.n_injured.sum())))\nn_crimes_by_yearweek_plot = sns.barplot(x=n_crimes_by_yearweek.index, y=n_crimes_by_yearweek.total_injured_per_yearweek, palette=btui)\nn_crimes_by_yearweek_plot.set_xticklabels(n_crimes_by_yearweek_plot.get_xticklabels(), rotation=45)\nn_crimes_by_yearweek_plot.set_title(\"Injured per Year-Week\")\ndel(n_crimes_by_yearweek)","caa112eb":"participant_genders_sum = dataset_gunviolence[[\"state\", \"participant_gender_total\", \"participant_gender_male\", \"participant_gender_female\", \"participant_gender_unknown\"]].groupby(dataset_gunviolence[\"state\"]).sum()\nsns.boxplot(data=participant_genders_sum, palette=btui)","3020310a":"g=sns.barplot(x=participant_genders_sum.index,y=participant_genders_sum.participant_gender_total,data=participant_genders_sum,color=\"#ffc266\")\ng=sns.barplot(x=participant_genders_sum.index,y=participant_genders_sum.participant_gender_male,data=participant_genders_sum,color=\"#8784db\")\ng=sns.barplot(x=participant_genders_sum.index,y=participant_genders_sum.participant_gender_female,data=participant_genders_sum,color=\"#d284bd\")\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\nplt.show()","6771cb75":"state_house_district_plot = sns.countplot(x=dataset_gunviolence.state_house_district, data=dataset_gunviolence, order=dataset_gunviolence.state_house_district.value_counts().index, palette=btui)\nstate_house_district_plot.set_xticklabels(state_house_district_plot.get_xticklabels(), rotation=90)\nstate_house_district_plot.set_title(\"Gun Violence per State-House District\")\nplt.show()","7a27e4a0":"state_senate_district_plot = sns.countplot(x=dataset_gunviolence.state_senate_district, data=dataset_gunviolence, order=dataset_gunviolence.state_senate_district.value_counts().index, palette=btui)\nstate_senate_district_plot.set_xticklabels(state_senate_district_plot.get_xticklabels(), rotation=90)\nstate_senate_district_plot.set_title(\"Gun Violence per State Senate District\")\nplt.show()","7fe383f0":"agegroup_sum = dataset_gunviolence[[\"state\",\"agegroup_child\", \"agegroup_teen\", \"agegroup_adult\"]].groupby(dataset_gunviolence[\"state\"]).sum()\ng=sns.pointplot(x=agegroup_sum.index, y=agegroup_sum.agegroup_child, data=agegroup_sum, color=\"#c51b7d\", scale=0.5, dodge=True, capsize=.2, label=\"agegroup_adult\")\ng=sns.pointplot(x=agegroup_sum.index, y=agegroup_sum.agegroup_teen, data=agegroup_sum, color=\"#1b7837\", scale=0.5, dodge=True, capsize=.2, linestyles=\"--\", markers=\"x\", label=\"agegroup_adult\")\ng=sns.pointplot(x=agegroup_sum.index, y=agegroup_sum.agegroup_adult, data=agegroup_sum, color=\"#2166ac\", scale=0.5, dodge=True, capsize=.2, linestyles=\"-\", markers=\"X\", label=\"agegroup_adult\")\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\ng.set_title(\"Gun Violence per various Age Group\")\nplt.show()","c8351427":"## Setting up Matplotlib, Seaborn map styles","12a588e9":"## Exploratory Data Analysis","7521bc6f":"## Importing Libraries","afb0edda":"# Gun Violence Data - Data Preparation, Feature Engineering, and Exploratory Analysis\n\n#### PLEASE UP VOTE THE KERNEL IF YOU LIKE THE CONTENT AND INFORMATION\n\nGun Violence Archive (GVA) is a not for profit corporation formed in 2013 to provide free online public access to accurate information about gun-related violence in the United States. GVA will collect and check for accuracy, comprehensive information about gun-related violence in the U.S. and then post and disseminate it online.\n\n## Dataset Information\n\n### File Descriptions\n- <code>gun-violence-data_01-2013_03-2018.csv (142.76 MB)<\/code> - Gun Violence\n\n### Content\n- incident_id - ID of the crime report\n- date - Date of crime\n- state - State of crime\n- city_or_county - City\/ County of crime\n- address - Address of the location of the crime\n- n_killed - Number of people killed\n- n_injured - Number of people injured\n- incident_url - URL regarding the incident\n- source_url - Reference to the reporting source\n- incident_url_fields_missing - TRUE if the incident_url is present, FALSE otherwise\n- congressional_district - Congressional district id\n- gun_stolen - Status of guns involved in the crime (i.e. Unknown, Stolen, etc...)\n- gun_type - Typification of guns used in the crime\n- incident_characteristics - Characteristics of the incidence\n- latitude - Location of the incident\n- location_description\n- longitude - Location of the incident\n- n_guns_involved - Number of guns involved in incident\n- notes - Additional information of the crime\n- participant_age - Age of participant(s) at the time of crime\n- participant_age_group - Age group of participant(s) at the time crime\n- participant_gender - Gender of participant(s)\n- participant_name - Name of participant(s) involved in crime\n- participant_relationship - Relationship of participant to other participant(s)\n- participant_status - Extent of harm done to the participant\n- participant_type - Type of participant\n- sources\n- state_house_district\n- state_senate_district\n\nNow, lets begin !!!","402e6e64":"Imported plotly but not used - still learning.","35d8fdc8":"## Feature Engineering","399cbc26":"## Loading Dataset and performing inspections on Dataset"}}