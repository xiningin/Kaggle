{"cell_type":{"83324b95":"code","c8378ed1":"code","14f2f305":"code","b0de210f":"code","a4c8cbbd":"code","6ffe5a52":"code","bf3b4af9":"code","969b521b":"code","6b545c89":"code","a5dd06c2":"code","aa18bfdf":"code","ad4f6536":"code","4790536d":"code","47457a9c":"code","4e10e3ee":"markdown","48fbbbe6":"markdown","2819369d":"markdown","e423e55a":"markdown","05dbb8bd":"markdown","8cfd3422":"markdown","c31cd80c":"markdown"},"source":{"83324b95":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport plotly\nimport plotly.figure_factory as ff\nimport cufflinks as cf\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nfrom datetime import date, datetime\nimport scipy as sc\nimport plotly.express as px\nimport requests\n\ninit_notebook_mode(connected=True)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n# import os\n# for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#     for filename in filenames:\n#         print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\n\ncum_death_threshold = 100\npop_cum_death_threshold = 2\nmax_days_study = 90\nmin_days_study = 15\nsmooth_halflife = 4\ndebug=False\n\ntoday = date.today()\n# print(\"Today's date:\", today)\ntoday_ymd = today.strftime('%Y-%m-%d')\ntimestamp_str = datetime.now().strftime(\"%Y-%m-%d, %H:%M:%S\")\ndownload_url = 'https:\/\/opendata.ecdc.europa.eu\/covid19\/casedistribution\/csv'\ndownload_file = f'\/kaggle\/working\/download-{today_ymd}.csv'\nmyfile = requests.get(download_url, allow_redirects=True)\nopen(download_file, 'wb').write(myfile.content)\n# download_file = '\/kaggle\/input\/covid19qutesol\/download-2020-04-08.csv'\ndaily_df = pd.read_csv(download_file, encoding='latin-1')\ndaily_df = daily_df[daily_df.popData2018 >= 10000000]\ndaily_df.rename(columns={'countriesAndTerritories': 'Country'}, inplace=True)\ndaily_df.sort_values(['Country', 'year', 'month', 'day'], inplace=True)\ndaily_df.head(5)","c8378ed1":"daily_df['cum_cases'] = daily_df[['Country', 'cases']].groupby('Country').cumsum()\ndaily_df['cum_deaths'] = daily_df[['Country', 'deaths']].groupby('Country').cumsum()\ndaily_df['ewm_deaths'] = daily_df.groupby(['Country'])['deaths'].transform(lambda x: x.ewm(halflife=smooth_halflife).mean())\n\ndaily_df['pop_cum_cases'] = daily_df['cum_cases'] \/ daily_df['popData2018'] * 1000000\ndaily_df['pop_cum_deaths'] = daily_df['cum_deaths'] \/ daily_df['popData2018'] * 1000000\ndaily_df['pop_ewm_deaths'] = daily_df['ewm_deaths'] \/ daily_df['popData2018'] * 1000000\ndaily_df[(daily_df.Country == 'Brazil') & (daily_df.pop_cum_deaths > 2)].tail(5)","14f2f305":"rebase_series = daily_df[(daily_df['pop_cum_deaths'] >= pop_cum_death_threshold)]\nrebase_series = rebase_series.copy()\nrebase_series['day_count'] = rebase_series.copy().groupby('Country')['cum_deaths'].cumcount()\nrebase_series[(rebase_series.Country == 'Brazil')].tail(5)","b0de210f":"rebase_series = rebase_series.groupby('Country').filter(lambda x: (x['geoId'].head(1) == 'BR') | (x['day_count'].max() >= min_days_study))\nrebase_series.groupby('Country')['day_count'].max().sort_values()","a4c8cbbd":"bcg_coverage = pd.read_csv('\/kaggle\/input\/who-immunization-coverage\/BCG.csv', skipinitialspace=True)\n# bcg_coverage = pd.read_csv('\/kaggle\/input\/who-immunization-coverage\/BCG.csv', usecols=[0, 1]).set_index('Country')\nbcg_coverage= bcg_coverage.melt(id_vars=['Country'], var_name='Year', value_name='Percent')\nbcg_coverage = bcg_coverage.sort_values(by=['Country', 'Year'], ascending=[True, False]).dropna()\n\npx.choropleth(bcg_coverage, locations=bcg_coverage['Country'], locationmode='country names', color = bcg_coverage['Percent'], hover_name=bcg_coverage['Country'], animation_frame=bcg_coverage['Year'],\n              color_continuous_scale=px.colors.sequential.RdBu, projection='natural earth')","6ffe5a52":"bcg_headline = bcg_coverage.groupby('Country').head(1)\nbcg_headline = bcg_headline.set_index('Country')\nbcg_headline.rename(columns={bcg_headline.columns[1]: 'BCG Coverage'}, inplace=True)\nbcg_headline.tail(50)","bf3b4af9":"px.choropleth(bcg_coverage, locations=bcg_headline.index, locationmode='country names', color = bcg_headline['BCG Coverage'], hover_name=bcg_headline.index,\n              color_continuous_scale=px.colors.sequential.RdBu, projection='natural earth')\n","969b521b":"base = rebase_series[rebase_series['day_count'] == 0].sort_values(['year', 'month', 'day']).drop(columns=['day', 'month', 'year', 'geoId', 'cases', 'deaths', 'cum_deaths', 'cum_cases', 'day_count'])\n# display(base, show_index=False)\n# base = base.style.hide_index()\nbase = base[['Country', 'dateRep']]\nbase.rename(columns={'dateRep': 'Date of Country Onset'}, inplace=True)\nrebase_pivot = pd.pivot_table(rebase_series, values=['pop_cum_deaths'], index='day_count', columns='Country')\nrebase_pivot.columns = rebase_pivot.columns.droplevel(0)\nrebase_pivot = rebase_pivot.reset_index()\nrebase_pivot = rebase_pivot[rebase_pivot['day_count'] <= max_days_study]\nrebase_pivot.drop(columns=['day_count'], inplace =True)\n\nrebase_pivot_ewm = pd.pivot_table(rebase_series, values=['pop_ewm_deaths'], index='day_count', columns='Country')\nrebase_pivot_ewm.columns = rebase_pivot_ewm.columns.droplevel(0)\nrebase_pivot_ewm = rebase_pivot_ewm.reset_index()\nrebase_pivot_ewm = rebase_pivot_ewm[rebase_pivot_ewm['day_count'] <= max_days_study]\nrebase_pivot_ewm.drop(columns=['day_count'], inplace =True)\n\nbcg_headline.drop(columns=['Year'], inplace =True, errors='ignore')\nn_days = 12\ntotal_deaths_col='Day {} Total Deaths Per Million'.format(n_days)\ndeath_scores = rebase_pivot[rebase_pivot.index == n_days].melt(value_name=total_deaths_col).set_index('Country').join(bcg_headline).reset_index()\ndeath_scores = death_scores[(death_scores[total_deaths_col] > 0)]\ndeath_scores = death_scores.fillna(0)\ndeath_scores.sort_values(by=total_deaths_col, ascending=False)","6b545c89":"slope, intercept, r_value, p_value, std_err = \\\n        sc.stats.linregress(death_scores['BCG Coverage'],death_scores[total_deaths_col])\ntitle = 'R^2 = %s, y = %sx+ %s, p-value = %s' % (round(r_value*r_value,2), round(slope,2), round(intercept,2), round(p_value,4))\n\nscat_fig_bcg = px.scatter(death_scores, title=title, text='Country', x='BCG Coverage', y=total_deaths_col, trendline=\"ols\", hover_data=['Country'], trendline_color_override=False)\nscat_fig_bcg.update_traces(marker=dict(size=12)) \nscat_fig_bcg.update_traces(textposition='top center')\nresults = px.get_trendline_results(scat_fig_bcg)\n\n\nscat_fig_bcg.show()\n","a5dd06c2":"import plotly.graph_objects as go\ndeath_scores.sort_values(by=total_deaths_col, inplace=True)\ncountries=death_scores['Country'].values\n\nfig = go.Figure(data=[\n    go.Bar(name='BCG Coverage', x=countries, y=death_scores['BCG Coverage']),\n    go.Bar(name=total_deaths_col, x=countries, y=death_scores[total_deaths_col])\n])\n# Change the bar mode\nfig.update_layout(barmode='group')\nfig.show()","aa18bfdf":"tot_fig = rebase_pivot.iplot(asFigure=True, legend=True, kind='scatter',xTitle='Days Since Country Onset',yTitle='Total Deaths per million people',title='Total Deaths')\ntot_fig.update_traces(line_width=4)\ntot_fig['layout'].update(annotations=[dict(\n        showarrow = True,\n        x = 12,\n        y = 0,\n        text = \"Day 12\",\n        xanchor = \"center\",\n        ax=0,\n        ay=-150,\n        yshift = 0,\n        arrowsize = 2,\n        arrowhead = 1,\n        opacity = 0.9)])\niplot(tot_fig)","ad4f6536":"ewm_fig = rebase_pivot_ewm.iplot(asFigure=True, kind='scatter',xTitle='Days Since Country Onset',yTitle='Death Rate per Million People',title=f'Daily Death Rate')\newm_fig.update_traces(line_width=4)\niplot(ewm_fig)","4790536d":"table = ff.create_table(base)\nbase.to_csv('onset.csv')\niplot(table, filename='covid19_start_date.html')","47457a9c":"results.iloc[0][0].summary()","4e10e3ee":"## Death rate with time since country onset\nIt is also interesting to look at the population weighted death rate lined up by days since country onset.  We apply exponential smoothing with a halflife of 4 due to the volitility in death rates.","48fbbbe6":"## Table of country onset date\nCountry onset date is the day on which there are more than 2 deaths per million people in that country","2819369d":"## Regression statistics","e423e55a":"## Virulence and BCG coverage\nIt appears that counties that have done more BCG injections for tuberculosis have less deaths per million people after 12 days of epidemic in that country.  This does not establish any causual relation but it is worth further investigation such as the clinical trials that have begun e.g. https:\/\/clinicaltrials.gov\/ct2\/show\/NCT04327206","05dbb8bd":"## Total deaths with time since country onset\n\nWe line up the progression of mortality in each country since country onset and take the value at day 12 value of total deaths per million people on the graph below to measure virulence in each country","8cfd3422":"Another way to look at the same data is to sort by ascending day 12 deaths in a bar chart - you can see that the countries that have lower deaths tend to have higher coverage in BCG.  Again this might not be causation - maybe there is something in the way these countries run public health... or maybe prevalence of BCG offers some dampening of the spread of COVID-19.  Further investigation could be made comparing mortality from COVID-19 and coverage of BCG by age.  Much more of the younger population of the world have had BCG and in general they have also had it more recently than older people.","c31cd80c":"# Investigate Relation of BCG Injection Coverage with Covid-19 Mortality by Country\nCovid-19 spread data from https:\/\/opendata.ecdc.europa.eu\/covid19\/casedistribution\/csv\n\nBCG coverage estimate data by combining https:\/\/apps.who.int\/gho\/data\/node.main.A830?lang=en and https:\/\/www.ncbi.nlm.nih.gov\/pmc\/articles\/PMC3062527\/\n\nWe take the onset of this horrible desease in a country to be the day on which there are more than 2 deaths per million people.  Countries with less than 1 million population are excluded.  Countries with less than 15 days since onset are excluded.  The total number of deaths per million people on day 12 is taken as the measure of the virulence in a given country and compared with BCG coverage estimates below.\n\nThis study is inspired by https:\/\/www.medrxiv.org\/content\/10.1101\/2020.03.24.20042937v1"}}