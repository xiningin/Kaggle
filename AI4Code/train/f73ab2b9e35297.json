{"cell_type":{"1f175867":"code","eec9a2cc":"code","a6ef615b":"code","2643baa1":"code","c175cf13":"code","56cb4e81":"code","1e2a1fa9":"code","2d93913f":"code","43d87305":"code","c91d9e7c":"code","7785317b":"code","5164d5ae":"code","1b04f8fc":"code","721819cd":"code","21cb47f0":"code","49b868bc":"code","9bb8ef57":"code","0c695a1e":"code","723ea18c":"code","6d9ab8b6":"markdown","049af719":"markdown","07e6c54a":"markdown","f001d843":"markdown","39e29d70":"markdown"},"source":{"1f175867":"!pip install geopandas\n!pip install folium\n!pip install shapely\n!pip install unidecode","eec9a2cc":"import json\nimport pandas as pd\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\nimport shapely\nimport folium\nfrom folium.plugins import MarkerCluster,FastMarkerCluster, HeatMap\nimport base64\nimport random\nfrom unidecode import unidecode","a6ef615b":"def _repr_html_(self, **kwargs):\n    html = base64.b64encode(self.render(**kwargs).encode('utf8')).decode('utf8')\n    onload = (\n        'this.contentDocument.open();'\n        'this.contentDocument.write(atob(this.getAttribute(\\'data-html\\')));'\n        'this.contentDocument.close();'\n    )\n    if self.height is None:\n        iframe = (\n            '<div style=\"width:{width};\">'\n            '<div style=\"position:relative;width:100%;height:0;padding-bottom:{ratio};\">'\n            '<iframe src=\"about:blank\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;'\n            'border:none !important;\" '\n            'data-html={html} onload=\"{onload}\" '\n            'allowfullscreen webkitallowfullscreen mozallowfullscreen>'\n            '<\/iframe>'\n            '<\/div><\/div>').format\n        iframe = iframe(html=html, onload=onload, width=self.width, ratio=self.ratio)\n    else:\n        iframe = ('<iframe src=\"about:blank\" width=\"{width}\" height=\"{height}\"'\n                  'style=\"border:none !important;\" '\n                  'data-html={html} onload=\"{onload}\" '\n                  '\"allowfullscreen\" \"webkitallowfullscreen\" \"mozallowfullscreen\">'\n                  '<\/iframe>').format\n        iframe = iframe(html=html, onload=onload, width=self.width, height=self.height)\n    return iframe\n\nfolium.branca.element.Figure._repr_html_ = _repr_html_","2643baa1":"with open(\"..\/input\/istanbul-municipality-bus-stops-dataset\/durak_datasi.json\", \"r\") as f:\n    durak_data = json.load(f)\n\n\ndf = pd.DataFrame(durak_data)\n","c175cf13":"len(df)","56cb4e81":"df.columns","1e2a1fa9":"df[\"ILCEADI\"].unique()","2d93913f":"df[\"SYON\"].unique()","43d87305":"df[\"DURAK_TIPI\"].unique()","c91d9e7c":"df[\"FIZIKI\"].unique()","7785317b":"df[\"AKILLI\"].unique()","5164d5ae":"gdf = gpd.GeoDataFrame(df, geometry=[shapely.wkt.loads(x) for x in df[\"KOORDINAT\"]])\ngdf = gdf.drop(columns=[\"KOORDINAT\"])\n","1b04f8fc":"def create_map():\n    return folium.Map(location=[41.0082, 28.9784], zoom_level=15, tiles=\"cartodbpositron\")","721819cd":"durak_map = create_map()\n\nfor i,g in enumerate(gdf.iterrows()):\n    g = g[1] # get the row\n    name = g[\"SDURAKADI\"]\n    if name == None:\n        name = \"Ads\u0131z\"\n        \n    folium.vector_layers.CircleMarker(location=(g.geometry.y, g.geometry.x), radius=3, \n                                      color=\"darkblue\", fill=True, stroke=True, popup=unidecode(name)).add_to(durak_map)\n    \ndurak_map","21cb47f0":"isi_map = create_map()\nall_markers = [(m.y, m.x) for m in gdf.geometry]\n\nisi_map.add_child(HeatMap(all_markers, radius=5, blur=2))\nisi_map","49b868bc":"ilce_durak_map = create_map()\n\n# associate every region with a separate color\nregions = df[\"ILCEADI\"].unique().tolist()\ncolors  = [\"#{:03x}\".format(random.randint(0, 0xFFF)) for x in regions] # hex colors\n\ncolors_dict = dict(zip(regions,colors))\n\nfor i,g in enumerate(gdf.iterrows()):\n    g = g[1]\n    c = colors_dict[g[\"ILCEADI\"]]\n    folium.vector_layers.CircleMarker(location=(g.geometry.y, g.geometry.x), radius=3, \n                                      color=c, fill=True, stroke=True, popup=unidecode(g[\"ILCEADI\"])).add_to(ilce_durak_map)\n\nilce_durak_map","9bb8ef57":"ilce_durak_map = create_map()\ngrp = gdf.groupby(gdf[\"ILCEADI\"])\n\nfor g in grp:\n    ilce_name = g[0]\n    ilce_df = g[1]\n    \n    mc = MarkerCluster(name=ilce_name)\n    for point in ilce_df.iterrows():\n        point = point[1] # get the series\n        mc.add_child(folium.Marker(location=(point.geometry.y, point.geometry.x), \n                                   popup=unidecode(f\"{point['SDURAKADI']}, {ilce_name}\")))\n    ilce_durak_map.add_child(mc)\n\nfolium.LayerControl(hideSingleBase=True).add_to(ilce_durak_map)\nilce_durak_map","0c695a1e":"tip_durak_map = create_map()\n\ntypes = df[\"DURAK_TIPI\"].unique().tolist()\ncolors  = [\"#{:03x}\".format(random.randint(0, 0xFFF)) for x in regions] # hex colors\n\ncolors_dict = dict(zip(types,colors))\nfeat_groups = dict(zip(types, [folium.FeatureGroup(name=t) for t in types]))\n\n\nfor i,g in enumerate(gdf.iterrows()):\n    g = g[1]\n    c = colors_dict[g[\"DURAK_TIPI\"]]\n    cm = folium.vector_layers.CircleMarker(location=(g.geometry.y, g.geometry.x), \n                                      radius=3, color=c, fill=True, stroke=True, \n                                      popup=unidecode(g[\"DURAK_TIPI\"]))\n    feat_groups[g[\"DURAK_TIPI\"]].add_child(cm)\n\nfor f in feat_groups.values():\n    tip_durak_map.add_child(f)\n    \nfolium.LayerControl(hideSingleBase=True).add_to(tip_durak_map)\ntip_durak_map","723ea18c":"mesafe_map = create_map()\n\nfor i,g in enumerate(gdf.iterrows()):\n    g = g[1]\n    folium.vector_layers.Circle(location=(g.geometry.y, g.geometry.x), radius=250, \n                                color=\"lightgreen\", fill=True, stroke=False, fillOpacity=0.1).add_to(mesafe_map)\n\nmesafe_map\n\n","6d9ab8b6":"\n## Mesafe bazl\u0131 durak noktalar\u0131, (her noktan\u0131n yar\u0131\u00e7ap\u0131 250 metredir)","049af719":"## Duraklar\u0131n \u0131s\u0131 haritas\u0131","07e6c54a":"## Duraklar\u0131n t\u00fcm\u00fc, il\u00e7e bazl\u0131 renk kodlamas\u0131","f001d843":"\n## Nokta olarak, t\u00fcm duraklar","39e29d70":"\n## K\u00fcmele\u015fmi\u015f il\u00e7e bazl\u0131 g\u00f6rsel"}}