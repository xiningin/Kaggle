{"cell_type":{"fbc4ea5c":"code","1a3e0783":"code","a37c094f":"code","892e6737":"code","240583fb":"code","133acdd1":"code","1e6414cb":"code","93696e5f":"code","c7f59e37":"code","1be960a3":"markdown"},"source":{"fbc4ea5c":"#import necessary library\nimport os\nimport matplotlib.pyplot as plt\nimport numpy as np \nimport pandas as pd \nimport ast\nfrom matplotlib.patches import Rectangle","1a3e0783":"#count of total imagea in each folder\nprint(\"Total Number of frames in Video_0:\")\nprint(len(os.listdir(\"..\/input\/tensorflow-great-barrier-reef\/train_images\/video_0\/\")))\nprint(\"Total Number of frames in Video_1:\")\nprint(len(os.listdir(\"..\/input\/tensorflow-great-barrier-reef\/train_images\/video_1\/\")))\nprint(\"Total Number of frames in Video_2:\")\nprint(len(os.listdir(\"..\/input\/tensorflow-great-barrier-reef\/train_images\/video_2\/\")))","a37c094f":"#check sample image in frame of video_0\nimg=plt.imread(\"..\/input\/tensorflow-great-barrier-reef\/train_images\/video_0\/\"+os.listdir(\"..\/input\/tensorflow-great-barrier-reef\/train_images\/video_2\/\")[2])\nplt.rcParams[\"figure.figsize\"] = (10,10)\nplt.axis(\"off\")\nplt.imshow(img)","892e6737":"#load annotation data\ntrain=pd.read_csv(\"..\/input\/tensorflow-great-barrier-reef\/train.csv\")\n#displaying 10 rows from 100 to 110 in dataframe 'train'\ntrain.iloc[100:110]","240583fb":"#checking the number of rows and columns in dataframe\nprint(\"Rows:\",train.shape[0])\nprint(\"Columns:\",train.shape[1])","133acdd1":"#check if there are more than one annnotation for a frame (concl. there are more than one annotation for a frame)\nannotation_len=[]\nfor i in range(0,len(train),5):\n    ann=ast.literal_eval(train.iloc[i,5])\n    annotation_len.append(len(ann))\nprint(\"First Annotation length\",annotation_len[0])\nprint(\"Minimum annotation in one frame\",min(annotation_len))\nprint(\"Maximum annotation in one frame\",max(annotation_len))\nprint(\"mean of Annotation length\",np.mean(annotation_len))","1e6414cb":"#converts the annotation of string format  to list containing x,y,width,height in integer format\ndef get_bboxes(annotations):\n    annotations=ast.literal_eval(annotations)\n    if len(annotations)==0:\n        return [[0,0,0,0]]\n    boxes = pd.DataFrame(annotations, columns=['x', 'y', 'width', 'height']).astype(np.int32).values\n    return boxes \n","93696e5f":"#plotting annotation over image\ndef plot_annotation_on_img(video_id,video_frame,annotations):\n    bbox=get_bboxes(annotations)\n    img_url=\"..\/input\/tensorflow-great-barrier-reef\/train_images\/video_\"+str(video_id)+\"\/\"+str(video_frame)+\".jpg\"\n    img=plt.imread(img_url)\n    for i in range(len(bbox)):        \n        plt.gca().add_patch(Rectangle((bbox[i][0] ,bbox[i][1]), bbox[i][2], bbox[i][3],edgecolor='red',\n                        facecolor='none',\n                        lw=4))\n    plt.rcParams[\"figure.figsize\"] = (15,15)\n    plt.axis(\"off\")\n    plt.imshow(img)\n    print(video_id,video_frame,annotations)","c7f59e37":"#given imnage number the annotation are draan on image\nimg_no=1345\nvi=train.iloc[img_no,0]\nvf=train.iloc[img_no,2]\nann=train.iloc[img_no,5]\nplot_annotation_on_img(vi,vf,ann)","1be960a3":"checking cordinates of frames"}}