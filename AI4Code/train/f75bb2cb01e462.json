{"cell_type":{"93bfda8f":"code","ec16a95d":"code","b71d1c88":"code","f14f89a0":"code","d3d26e49":"code","245a78be":"code","1c492ea0":"code","e3753e37":"code","01a75585":"code","dc533657":"code","f86f6436":"markdown","0ec38991":"markdown"},"source":{"93bfda8f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ec16a95d":"from sklearn.datasets import make_blobs\nfrom matplotlib import pyplot\nfrom pandas import DataFrame","b71d1c88":"X,y = make_blobs(n_samples=100, n_features=2)\ndf = DataFrame(dict(x=X[:,0], y=X[:,1], label=y))\ncolors = {0:'red', 1:'blue', 2:'green'}\nfig, ax = pyplot.subplots()\ngrouped = df.groupby('label')\nfor key, group in grouped:\n    group.plot(ax=ax, kind='scatter', x='x', y='y', label=key, color=colors[key])\npyplot.show()","f14f89a0":"df","d3d26e49":"df.columns","245a78be":"df_X = df[['x','y']]\ndf_X","1c492ea0":"import sklearn.cluster\nkmeans = sklearn.cluster.KMeans(n_clusters=3,init='k-means++',random_state=0).fit(df_X)\n","e3753e37":"print(kmeans.cluster_centers_)","01a75585":"print(kmeans.labels_)","dc533657":"pyplot.scatter(df_X['x'],df_X['y'], c=kmeans.labels_, cmap='rainbow')","f86f6436":"As we have passed n_clusters to be 3 we get 3 centres of the clusters","0ec38991":"Clusters assigned to 100 data points"}}