{"cell_type":{"eb12ffaa":"code","1ebbbf1b":"code","68071c94":"code","9854dbef":"code","34e1f713":"code","88781013":"code","dcff4cb3":"code","91ff4038":"code","eaffb828":"code","1e08f335":"code","716d3106":"code","bd3dd781":"code","bb7d062a":"code","49be05d3":"code","4e210570":"code","b1d09795":"code","d66b991e":"code","dae607ac":"code","444ed3d5":"code","706971d8":"code","8097c4af":"code","1dd1a432":"code","3fafdb87":"code","01f57519":"code","c4127c50":"code","732cddbe":"code","9b82f5b3":"code","d1b65f17":"code","1860a2a2":"code","11ad1476":"code","5d413b0e":"code","3710bee9":"code","1324d42c":"code","62e0811e":"code","b126df96":"code","2ea4b793":"code","1a5076c4":"markdown","74c6908a":"markdown","a5afb162":"markdown","a077979d":"markdown","cb078ddf":"markdown","908a7598":"markdown","3258d2f6":"markdown","6872fb84":"markdown","215bc7f3":"markdown","734c5f42":"markdown","7c777c88":"markdown","c7442bde":"markdown","90bb0a57":"markdown","04b69ce2":"markdown","02ec360c":"markdown","0fa11697":"markdown","55554960":"markdown","e67f4706":"markdown","70af6a2e":"markdown","7352d18f":"markdown","5201d9fc":"markdown","95930046":"markdown","d9a752a4":"markdown","d3a60002":"markdown","ada14e67":"markdown","37d16be8":"markdown","c9c4a0e1":"markdown","770469cb":"markdown","5f06bfa8":"markdown"},"source":{"eb12ffaa":"from IPython.display import HTML","1ebbbf1b":"HTML('<iframe width=\"800\" height=\"500\" src=\"https:\/\/www.youtube.com\/embed\/4C6BB56fG1M\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>')","68071c94":"# linear algebra\nimport numpy as np\n# data processing, CSV file I\/O (e.g. pd.read_csv)\nimport pandas as pd\n#Unix commands\nimport os\n\n# import useful tools\nfrom glob import glob\nfrom PIL import Image\nimport cv2\nimport pydicom\nimport scipy.ndimage\nfrom skimage import measure \nfrom mpl_toolkits.mplot3d.art3d import Poly3DCollection\nfrom skimage.morphology import disk, opening, closing\nfrom tqdm import tqdm\nfrom os import listdir, mkdir\n\nfrom PIL import Image\n\n\n# import data visualization\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as patches\nimport seaborn as sns\n\nfrom bokeh.plotting import figure\nfrom bokeh.io import output_notebook, show, output_file\nfrom bokeh.models import ColumnDataSource, HoverTool, Panel\nfrom bokeh.models.widgets import Tabs\n\n# import data augmentation\nimport albumentations as albu\n\n# import math module\nimport math\n\n#Libraries\nimport pandas_profiling\nimport xgboost as xgb\nfrom sklearn.metrics import log_loss\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn import preprocessing\nfrom sklearn.model_selection import KFold\nfrom sklearn.tree import DecisionTreeRegressor\n\n#used for changing color of text in print statement\nfrom colorama import Fore, Back, Style\ny_ = Fore.YELLOW\nr_ = Fore.RED\ng_ = Fore.GREEN\nb_ = Fore.BLUE\nm_ = Fore.MAGENTA\nsr_ = Style.RESET_ALL\n\n# One-hot encoding\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.ensemble import RandomForestRegressor","9854dbef":"# Setup the paths to train and test images\nDATASET = '..\/input\/rsna-str-pulmonary-embolism-detection'\nTEST_DIR = '..\/input\/rsna-str-pulmonary-embolism-detection\/test\/'\nTRAIN_DIR = '..\/input\/rsna-str-pulmonary-embolism-detection\/'\nSCAN_DIR = '..\/input\/pulmonary-embolism-ct-data\/'","34e1f713":"# Display some of the training data\ntrain = pd.read_csv(TRAIN_DIR + \"train.csv\")\ntrain.head(10).style.applymap(lambda x: 'background-color:lightsteelblue')","88781013":"print(f\"{b_}Number of rows in sample data: {r_}{train.shape[0]}\\n{b_}Number of columns in sample data: {r_}{train.shape[1]}\")","dcff4cb3":"# Display some of the training data\ntrain.info()","91ff4038":"# Display some of the scan data\nscan = pd.read_csv(SCAN_DIR + \"Pulmonary_Embolism_CT_scans_data.csv\")\nscan.head(5).style.applymap(lambda x: 'background-color:lightsteelblue')","eaffb828":"print(f\"{b_}Number of rows in sample data: {r_}{scan.shape[0]}\\n{b_}Number of columns in sample data: {r_}{scan.shape[1]}\")","1e08f335":"sample = pd.read_csv(TRAIN_DIR + \"sample_submission.csv\")\n# Confirmation of the format of samples for submission\nsample.head(3).style.applymap(lambda x: 'background-color:lightsteelblue')","716d3106":"print('The number of SOPInstanceUID is ' + str(len(train['SOPInstanceUID'].unique())))\nprint('The number of StudyInstanceUID is ' + str(len(train['StudyInstanceUID'].unique())))\nprint('The number of SeriesInstanceUID is ' + str(len(train['SeriesInstanceUID'].unique())))","bd3dd781":"# display IDs of the training data without duplicates\nprint(train['SOPInstanceUID'].drop_duplicates())\nprint(train['StudyInstanceUID'].drop_duplicates())\nprint(train['SeriesInstanceUID'].drop_duplicates())","bb7d062a":"# Display of test data\ntest = pd.read_csv(TRAIN_DIR + \"test.csv\")\ntest.head(10).style.applymap(lambda x: 'background-color:lightsteelblue')","49be05d3":"# Display of test data\ntest.info(10)","4e210570":"# Check for missing values in the training data\ntrain.isnull().sum()","b1d09795":"# coding: utf-8\nfrom tqdm import tqdm\nimport time\n\n# Set the total value \nbar = tqdm(total = 1000)\n# Add description\nbar.set_description('Progress rate')\nfor i in range(100):\n    # Set the progress\n    bar.update(25)\n    time.sleep(1)","d66b991e":"# Let's check the max value and the max value for pe_present_on_image\nprint(\"Minimum number of value for pe_present_on_image is: {}\".format(train['pe_present_on_image'].min()), \"\\n\" +\n      \"Maximum number of value for pe_present_on_image is: {}\".format(train['pe_present_on_image'].max() ))\n# Let's check the max value and the max value for negative_exam_for_pe\nprint(\"Minimum number of value for negative_exam_for_pe is: {}\".format(train['negative_exam_for_pe'].min()), \"\\n\" +\n      \"Maximum number of value for negative_exam_for_pe is: {}\".format(train['negative_exam_for_pe'].max() ))\n# Let's check the max value and the max value for qa_motion\nprint(\"Minimum number of value for qa_motion is: {}\".format(train['qa_motion'].min()), \"\\n\" +\n      \"Maximum number of value for qa_motion is: {}\".format(train['qa_motion'].max() ))\n# Let's check the max value and the max value for qa_contrast\nprint(\"Minimum number of value for qa_contrast is: {}\".format(train['qa_contrast'].min()), \"\\n\" +\n      \"Maximum number of value for qa_contrast is: {}\".format(train['qa_contrast'].max() ))\n# Let's check the max value and the max value for flow_artifact\nprint(\"Minimum number of value for flow_artifact is: {}\".format(train['flow_artifact'].min()), \"\\n\" +\n      \"Maximum number of value for flow_artifact is: {}\".format(train['flow_artifact'].max() ))\n# Let's check the max value and the max value for rv_lv_ratio_gte_1\nprint(\"Minimum number of value for rv_lv_ratio_gte_1 is: {}\".format(train['rv_lv_ratio_gte_1'].min()), \"\\n\" +\n      \"Maximum number of value for rv_lv_ratio_gte_1 is: {}\".format(train['rv_lv_ratio_gte_1'].max() ))\n# Let's check the max value and the max value for rv_lv_ratio_lt_1\nprint(\"Minimum number of value for rv_lv_ratio_lt_1 is: {}\".format(train['rv_lv_ratio_lt_1'].min()), \"\\n\" +\n      \"Maximum number of value for rv_lv_ratio_lt_1 is: {}\".format(train['rv_lv_ratio_lt_1'].max() ))\n# Let's check the max value and the max value for leftsided_pe\nprint(\"Minimum number of value for leftsided_pe is: {}\".format(train['leftsided_pe'].min()), \"\\n\" +\n      \"Maximum number of value for leftsided_pe is: {}\".format(train['leftsided_pe'].max() ))\n# Let's check the max value and the max value for true_filling_defect_not_pe\nprint(\"Minimum number of value for true_filling_defect_not_pe is: {}\".format(train['true_filling_defect_not_pe'].min()), \"\\n\" +\n      \"Maximum number of value for true_filling_defect_not_pe is: {}\".format(train['true_filling_defect_not_pe'].max() ))\n# Let's check the max value and the max value for rightsided_pe\nprint(\"Minimum number of value for rightsided_pe is: {}\".format(train['rightsided_pe'].min()), \"\\n\" +\n      \"Maximum number of value for rightsided_pe is: {}\".format(train['rightsided_pe'].max() ))\n# Let's check the max value and the max value for central_pe\nprint(\"Minimum number of value for central_pe is: {}\".format(train['central_pe'].min()), \"\\n\" +\n      \"Maximum number of value for central_pe is: {}\".format(train['central_pe'].max() ))\n# Let's check the max value and the max value for indeterminate\nprint(\"Minimum number of value for rightsided_pe is: {}\".format(train['indeterminate'].min()), \"\\n\" +\n      \"Maximum number of value for rightsided_pe is: {}\".format(train['indeterminate'].max() ))","dae607ac":"# Draw a pie chart about pe_present_on_image.\nplt.pie(train[\"pe_present_on_image\"].value_counts(),labels=[\"0\",\"1\"],autopct=\"%.1f%%\")\nplt.title(\"Ratio of pe_present_on_image\")\nplt.show()","444ed3d5":"# Draw a pie chart about qa_motion.\nplt.pie(train[\"qa_motion\"].value_counts(),labels=[\"0\",\"1\"],autopct=\"%.1f%%\")\nplt.title(\"Ratio of qa_motion\")\nplt.show()","706971d8":"# Draw a pie chart about negative_exam_for_pe.\nplt.pie(train[\"negative_exam_for_pe\"].value_counts(),labels=[\"0\",\"1\"],autopct=\"%.1f%%\")\nplt.title(\"Ratio of negative_exam_for_pe\")\nplt.show()","8097c4af":"# Draw a pie chart about qa_contrast.\nplt.pie(train[\"qa_contrast\"].value_counts(),labels=[\"0\",\"1\"],autopct=\"%.1f%%\")\nplt.title(\"Ratio of qa_contrast\")\nplt.show()","1dd1a432":"# Draw a pie chart about flow_artifact.\nplt.pie(train[\"flow_artifact\"].value_counts(),labels=[\"0\",\"1\"],autopct=\"%.1f%%\")\nplt.title(\"Ratio of flow_artifact\")\nplt.show()","3fafdb87":"# Draw a pie chart about rv_lv_ratio_gte_1.\nplt.pie(train[\"rv_lv_ratio_gte_1\"].value_counts(),labels=[\"0\",\"1\"],autopct=\"%.1f%%\")\nplt.title(\"Ratio of rv_lv_ratio_gte_1\")\nplt.show()","01f57519":"# Draw a pie chart about rv_lv_ratio_lt_1.\nplt.pie(train[\"rv_lv_ratio_lt_1\"].value_counts(),labels=[\"0\",\"1\"],autopct=\"%.1f%%\")\nplt.title(\"Ratio of rv_lv_ratio_lt_1\")\nplt.show()","c4127c50":"# Draw a pie chart about Ratio of leftsided_pe.\nplt.pie(train[\"leftsided_pe\"].value_counts(),labels=[\"0\",\"1\"],autopct=\"%.1f%%\")\nplt.title(\"Ratio of leftsided_pe\")\nplt.show()","732cddbe":"# Draw a pie chart about Ratio of true_filling_defect_not_pe.\nplt.pie(train[\"true_filling_defect_not_pe\"].value_counts(),labels=[\"0\",\"1\"],autopct=\"%.1f%%\")\nplt.title(\"Ratio of true_filling_defect_not_pe\")\nplt.show()","9b82f5b3":"# Draw a pie chart about Ratio of rightsided_pe.\nplt.pie(train[\"rightsided_pe\"].value_counts(),labels=[\"0\",\"1\"],autopct=\"%.1f%%\")\nplt.title(\"Ratio of rightsided_pe\")\nplt.show()","d1b65f17":"# Draw a pie chart about Ratio of central_pe.\nplt.pie(train[\"central_pe\"].value_counts(),labels=[\"0\",\"1\"],autopct=\"%.1f%%\")\nplt.title(\"Ratio of central_pe\")\nplt.show()","1860a2a2":"# Draw a pie chart about Ratio of indeterminate.\nplt.pie(train[\"indeterminate\"].value_counts(),labels=[\"0\",\"1\"],autopct=\"%.1f%%\")\nplt.title(\"Ratio of indeterminate\")\nplt.show()","11ad1476":"# Find the unique number of pixelspacing_area. \nn = scan['pixelspacing_area'].nunique()\n# First, I'll use Sturgess's formula to find the appropriate number of classes in the histogram \nk = 1 + math.log2(n)\n# Display a histogram of the pixelspacing_area of the training data\nsns.distplot(scan['pixelspacing_area'], kde=True, rug=False, bins=int(k)) \n# Graph Title\nplt.title('pixelspacing_area')\n# Show Histogram\nplt.show() ","5d413b0e":"# Find the unique number of pixelspacing_c. \nn = scan['pixelspacing_c'].nunique()\n# First, I'll use Sturgess's formula to find the appropriate number of classes in the histogram \nk = 1 + math.log2(n)\n# Display a histogram of the pixelspacing_c of the training data\nsns.distplot(scan['pixelspacing_c'], kde=True, rug=False, bins=int(k)) \n# Graph Title\nplt.title('pixelspacing_c')\n# Show Histogram\nplt.show() ","3710bee9":"# Find the unique number of pixelspacing_r. \nn = scan['pixelspacing_r'].nunique()\n# First, I'll use Sturgess's formula to find the appropriate number of classes in the histogram \nk = 1 + math.log2(n)\n# Display a histogram of the pixelspacing_c of the training data\nsns.distplot(scan['pixelspacing_r'], kde=True, rug=False, bins=int(k)) \n# Graph Title\nplt.title('pixelspacing_r')\n# Show Histogram\nplt.show() ","1324d42c":"# View the correlation heat map\ncorr_mat = train.corr(method='pearson')\nsns.heatmap(corr_mat,\n            vmin=-1.0,\n            vmax=1.0,\n            center=0,\n            annot=True, # True:Displays values in a grid\n            fmt='.1f',\n            xticklabels=corr_mat.columns.values,\n            yticklabels=corr_mat.columns.values\n           )\nplt.show()","62e0811e":"def extract_num(s, p, ret=0):\n    search = p.search(s)\n    if search:\n        return int(search.groups()[0])\n    else:\n        return ret","b126df96":"import pydicom\n\ndef plot_pixel_array(dataset, figsize=(5,5)):\n    plt.figure(figsize=figsize)\n    plt.imshow(dataset.pixel_array, cmap=plt.cm.bone)\n    plt.show()","2ea4b793":"file_path = \"..\/input\/rsna-str-pulmonary-embolism-detection\/train\/0003b3d648eb\/d2b2960c2bbf\/00ac73cfc372.dcm\"\ndataset = pydicom.dcmread(file_path)\nplot_pixel_array(dataset)","1a5076c4":"* leftsided_pe - exam-level, indicates that there is PE present on the left side of the images in the study","74c6908a":"# Set up","a5afb162":"* negative_exam_for_pe - exam-level, whether there are any images in the study that have PE present.","a077979d":"![image](https:\/\/prod-images-static.radiopaedia.org\/images\/17056972\/2ef2ae41c8a0b5a070aa21140a14e0_gallery.jpeg)","cb078ddf":"* indeterminate -exam-level, indicates that while the study is not negative for PE, an ultimate set of exam-level labels could not be created, due to QA issues","908a7598":"* true_filling_defect_not_pe - informational, indicates a defect that is NOT PE","3258d2f6":"* rv_lv_ratio_lt_1 - exam-level, indicates whether the RV\/LV ratio present in the study is < 1","6872fb84":"* flow_artifact - informational","215bc7f3":"# Overview of Correlation","734c5f42":"* rightsided_pe - exam-level, indicates that there is PE present on the right side of the images in the study","7c777c88":"* The correlation between qa_contrast and indeterminate appears to be high.","c7442bde":"# Acknowledgements\n\n* [Pulmonary Embolism Dicom preprocessing & EDA](https:\/\/www.kaggle.com\/nitindatta\/pulmonary-embolism-dicom-preprocessing-eda)\n* [Pulmonary Dicom Preprocessing](https:\/\/www.kaggle.com\/allunia\/pulmonary-dicom-preprocessing)","90bb0a57":"**Your upvote is the source of my motivation.**","04b69ce2":"* rv_lv_ratio_gte_1 - exam-level, indicates whether the RV\/LV ratio present in the study is >= 1","02ec360c":"* central_pe - exam-level, indicates that there is PE present in the center of the images in the study","0fa11697":"# Loading data","55554960":"* Therefore, we can conclude that there is no missing training data","e67f4706":"* You can see that there are 3 rows of IDs and 14 other rows of IDs.","70af6a2e":"* qa_contrast - informational, indicates whether radiologists noted an issue with contrast in the study.","7352d18f":"* StudyInstanceUID - unique ID for each study (exam) in the data.\n* SeriesInstanceUID - unique ID for each series within the study.\n* SOPInstanceUID - unique ID for each image within the study (and data).","5201d9fc":"* For dicom preprocessing, [Full Preprocessing Tutorial](https:\/\/www.kaggle.com\/gzuidhof\/full-preprocessing-tutorial) is usefull.","95930046":"# Have a look\n\n* [Code Requirements](https:\/\/www.kaggle.com\/c\/rsna-str-pulmonary-embolism-detection\/overview\/code-requirements) say that no internet access enabled.Let's turn off the Internet.\n\n# What is Pulmonary Embolism ?\n* Wikipedia says that [Pulmonary embolism (PE)](https:\/\/en.wikipedia.org\/wiki\/Pulmonary_embolism) is a blockage of an artery in the lungs by a substance that has moved from elsewhere in the body through the bloodstream.There is also a simple information about pulmonary thromboembolism posted in [this thread](https:\/\/www.kaggle.com\/c\/rsna-str-pulmonary-embolism-detection\/discussion\/182376) as well.","d9a752a4":"* pe_present_on_image - image-level, notes whether any form of PE is present on the image.","d3a60002":"# Dicom Preprocessing","ada14e67":"* We found that a minimum value of all column values except ID were 0.At the same time,we found that a maximum value of all column values except ID were 1.","37d16be8":"* qa_motion - informational, indicates whether radiologists noted an issue with motion in the study.","c9c4a0e1":"* You'll find that the format of giving each ID a numerical value as a label is good.\n* [The page of this competition](https:\/\/www.kaggle.com\/c\/rsna-str-pulmonary-embolism-detection\/data) says that we have to predict a number of labels, at both the image and study level. ","770469cb":"The relationship between these IDs has been discussed in [this thread](https:\/\/www.kaggle.com\/c\/rsna-str-pulmonary-embolism-detection\/discussion\/182736).","5f06bfa8":"# Checking data statistics"}}