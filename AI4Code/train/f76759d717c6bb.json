{"cell_type":{"e1f4800f":"code","ac3d6e27":"code","f57e9437":"code","48bb4db4":"code","31c968a8":"code","e252300d":"code","916822ba":"code","bf22ece3":"code","cea5e0fc":"code","0fb5714d":"code","34ec179b":"code","9eeecce8":"code","b82c338b":"code","a7006ef3":"code","a6c3e366":"code","a437534a":"code","e005648c":"code","b77fde34":"code","ddecce76":"markdown","e1dbd5ad":"markdown","1ab6eb89":"markdown","59a0175a":"markdown","6aef069e":"markdown","55f7ca06":"markdown","c4f48632":"markdown","4edc313b":"markdown","3650ae42":"markdown","1d460950":"markdown"},"source":{"e1f4800f":"#Import the relevant libraries to complete the stated goals.\nimport pandas as pd\nimport seaborn as sns\nsns.set()","ac3d6e27":"#Load the iris dataset using pandas.\niris = pd.read_csv('..\/input\/iris\/Iris.csv')","f57e9437":"#View the first 5 entries to understand format of the data set.\niris.head()","48bb4db4":"#View data types of the data set.\niris.dtypes","31c968a8":"#Plot designated variables.\nsns.pairplot(iris, vars=['SepalLengthCm','SepalWidthCm','PetalLengthCm','PetalWidthCm'], hue='Species')","e252300d":"#Read the iris species and returns a integer.\ndef iris_species(x):\n    if x == 'Iris-versicolor':\n        return 0\n    elif x == 'Iris-virginica':\n        return 1\n    else:\n        return 2","916822ba":"#Create a new column labeled 'Species_Target' and apply the function 'iris_species'.\niris['Species_Target'] = iris['Species'].apply(iris_species)","bf22ece3":"#Check to ensure our formula properly coded the species into integers. Appears correct.\niris['Species_Target'].value_counts()","cea5e0fc":"x_iris = iris.drop(['Id','Species','Species_Target'], axis=1)\ny_iris = iris['Species_Target']","0fb5714d":"#Check to view correct dimensions of independent and dependent variables.\nprint(x_iris.shape)\nprint(y_iris.shape)","34ec179b":"#Randomely split data observations into training and testing sets.\nfrom sklearn.model_selection import train_test_split \nXtrain, Xtest, ytrain, ytest = train_test_split(x_iris,y_iris,test_size = 0.25,random_state=1)","9eeecce8":"#Import model for normally distributed data (AKA Gaussian distributed data), train our model, and test the accuracy of our model.\nfrom sklearn.naive_bayes import GaussianNB\nmodel = GaussianNB()\nmodel.fit(Xtrain, ytrain)\ny_model = model.predict(Xtest)","b82c338b":"#To read the accuracy of how our model performed on our test data.\nfrom sklearn.metrics import accuracy_score\nprint('Model accuracy: ',accuracy_score(ytest, y_model))","a7006ef3":"#Create a heatmap of the standard correlation coefficients.\nsns.heatmap(iris.drop(['Species_Target'], axis=1).corr().round(decimals=2),annot=True,cmap='coolwarm')","a6c3e366":"x_iris_s = iris.drop(['Id','Species','PetalLengthCm','PetalWidthCm','Species_Target'], axis=1)\nx_iris_p = iris.drop(['Id','Species','SepalLengthCm','SepalWidthCm','Species_Target'], axis=1)","a437534a":"#Randomly split data observations into training and testing sets.\nfrom sklearn.model_selection import train_test_split \nXtrain_s, Xtest_s, ytrain_s, ytest_s = train_test_split(x_iris_s,y_iris,test_size = 0.25,random_state=1)\nXtrain_p, Xtest_p, ytrain_p, ytest_p = train_test_split(x_iris_p,y_iris,test_size = 0.25,random_state=1)","e005648c":"#Import model for normally distributed data (AKA Gaussian distributed data), train our model, and test the accuracy of our model.\nfrom sklearn.naive_bayes import GaussianNB\nmodel = GaussianNB()\nmodel.fit(Xtrain_s, ytrain_s)\ny_model_s = model.predict(Xtest_s)\n\nmodel.fit(Xtrain_p, ytrain_p)\ny_model_p = model.predict(Xtest_p)","b77fde34":"#To read the accuracy of how our model performed on our test data.\nfrom sklearn.metrics import accuracy_score\nprint('Model accuracy using sepal measurements: ',accuracy_score(ytest_s, y_model_s))\nprint('Model accuracy using petal measurements: ',accuracy_score(ytest_p, y_model_p))","ddecce76":"## Thought Experiment\n\nLet's imagine we had constraints placed upon the amount of independent variables we could build into our model. In this case, to obtain the highest predictive power, we would choose to capture only the 'PetalLengthCm' and 'PetalWidthCm' variables because those have the highest absolute linear correlations out of the four variables at 0.96.\n\nLets create two new models, one model using 'SepalLengthCm' and 'SepalWidthCm' and the other using 'PetalLengthCm' and 'PetalWidthCm' to confirm our understanding of the standard correlation coeffiecients and their contribution to prediction accuracy.","e1dbd5ad":"## Results\n\nThe supervised machine learning model acheived approximately 97% accuracy in identifying the species of iris.\n\nTo increase our understanding of the model, we can identify how each independent variable is contributing to the model by examining the standard correlation coefficient.\n\nKeep in mind:\n- 1 = Total positive linear correlation\n- 0 = No linear correlation\n- -1 = Total negative linear correlation","1ab6eb89":"## Conclusion\n\nCreating a program to predict a flower species is insignificant compared to how the machine learning can be applied.\n\n[Google](https:\/\/www.blog.google\/technology\/health\/lung-cancer-prediction\/) is using machine learning to read images of CT scans to detect lung cancer. The model detected 5% more cancer cases and reduced false positives by 11% compared to six certified radiologists. According to the [CDC](https:\/\/gis.cdc.gov\/Cancer\/USCS\/DataViz.html), lung and bronchus cancers claimed the most lives in 2017 with 145,849 deaths, which is almost three times as many as the second leading cause of cancer death, colon and rectum cancer, at 52,547. \n\nThis technology will not replace doctors in the foreseeable future, but it can become a powerful tool to assist doctors in how they care for patients. The ability to apply this technology to help others live a longer life is not trivial. \n\nData isn't numbers, it's people.","59a0175a":"## Supervised Machine Learning Classification Model Building\n\nWe will use the scikit-learn library to create the supervised machine learning model. Scikit-learn requires the independent and dependent variables to be segregated into separate arrays. Dependent variables must be entered as numerical values.","6aef069e":"## Visual Relationships\n\nUsing the seaborn library, each independent variable combination is plotted to visually examine relationships.","55f7ca06":"To obtain a better performing model, we will randomize the order of each observation in the data set then split our data into a training set and a testing set. The model will be trained using seventy five percent of our observations, the remanining twenty percent will test how accurate our model is at predicting iris species given new measurements. ","c4f48632":"When viewing the plots above, it's clear that each species of iris have inherent length and width characteristics that differentiate itself from other iris species . As such, the data is well suited to create a supervised machine learning algorithm. \n\nIt apears that Iris-setosa is more distinct across all measured variables than is Iris-versicolor and Iris-verginica, as evidenced by its isolated cluster on each plot. It will be harder for a machine learning model to decipher the difference between Iris-versicolor and Iris-virginica, as some observations overlap. However, the underlying characteristics between species appear distinct enough to create a model that makes reasonably accurate predictions.","4edc313b":"## Supervised Machine Learning with Iris Flower Data Set\n\nThis jupyter notebook will use the [Iris dataset](https:\/\/en.wikipedia.org\/wiki\/Iris_flower_data_set) collected by Edgar Anderson to:\n\n- Examine visual relationships between three species of iris flower through plotting its sepal and petal measurements.\n- Create a supervised machine learning classification model using scikit-learn to predict the species of iris given new measurements.\n\nLet's assume the sample data is drawn from a population that is normally distributed. I believe this is a reasonable assumption considering the normal distribution is frequently observed in nature and our sample data are objects (flower measurements) derived from nature.","3650ae42":"## Results\n\nThe model containing  'PetalLengthCm' and 'PetalWidthCm' performed as well as our first model, which contained 'PetalLengthCm' and 'PetalWidthCm' and 'SepalLengthCm' and 'SepalWidthCm'. Using only two variables, we can accurately predict three species of iris with approximately 97% accuracy.","1d460950":"Note 'PetalWidthCm' has a positive .96 correlation with 'PetalLengthCm'. The relationships are more easily understood with the color spectrum of the heatmap. The standard error coefficients are the numberical representation of the plotted relationships in the 'Visual Relationships' section."}}