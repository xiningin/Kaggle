{"cell_type":{"5c4b83a9":"code","1c6e9ab3":"code","4908aae9":"code","5c9cd1e4":"code","2d8ef4e2":"code","ad2b0f68":"code","badccfef":"code","d3008ad3":"code","b6f5acb8":"code","a8d5962f":"code","a7effeae":"code","c6ced3f4":"code","b05e11bb":"code","d640d5d3":"code","64e5bbec":"code","ebc6ef92":"code","263a6083":"code","84366c80":"code","b34a040f":"code","914cdcb5":"code","139ccf9e":"code","eed86a15":"markdown","6270575c":"markdown","3c634f65":"markdown","6f6cb80b":"markdown","260113cd":"markdown","82b31322":"markdown","4d85c4cf":"markdown","d3b061f5":"markdown","f1ec18ac":"markdown","c72a8569":"markdown","e3159af7":"markdown","ca7c8d2c":"markdown","bccfde81":"markdown","0eecdb4d":"markdown","b7f9518c":"markdown","919bde2a":"markdown"},"source":{"5c4b83a9":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","1c6e9ab3":"df = pd.read_csv('..\/input\/student\/student.csv')\ndf.head()","4908aae9":"df.corr()","5c9cd1e4":"df.head()","2d8ef4e2":"df.info()","ad2b0f68":"df.isnull().sum()","badccfef":"import seaborn as sns\n\nsns.set_theme(style=\"whitegrid\")\nsns.boxplot(x=\"Hours\", data=df, palette=\"Set3\")\nplt.title(\"Hours Distribution\")","d3008ad3":"df.Hours.min(),df.Hours.max()","b6f5acb8":"sns.set_theme(style=\"whitegrid\")\nsns.boxplot(x=\"Scores\", data=df, palette=\"Set1\")\nplt.title(\"Scores Distribution\")","a8d5962f":"df.Scores.min(),df.Scores.max()","a7effeae":"plt.scatter(df.Hours, df.Scores)\nplt.show()","c6ced3f4":"X = df['Hours']\nY = df['Scores']","b05e11bb":"x_bar = X.sum()\/X.count()\ny_bar = Y.sum()\/Y.count()\nprint(x_bar,y_bar)","d640d5d3":"n = ((X-x_bar) * (Y-y_bar)).sum()\nd = ((X-x_bar)**2).sum()\nm = n\/d\nb = y_bar - m* x_bar\nprint(m, b)","64e5bbec":"predicted_df = pd.DataFrame(data = range(0,int(X.max())), columns={'X'})\npredicted_df['Y'] = predicted_df.X*m + (b)","ebc6ef92":"x = predicted_df['X']\ny = predicted_df['Y']\n","263a6083":"plt.plot(x,y,c='black')\nplt.scatter(X, Y)\nplt.xlabel('X')\nplt.ylabel('Y')\nplt.title('Plot for Regression line fit')\n#plt.legend()\nplt.show()","84366c80":"from math import sqrt\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import r2_score\nY_pred = m*X + b\nprint(\"RMSE: \", sqrt(mean_squared_error(Y,Y_pred)),\"R2 score\", r2_score(Y,Y_pred))","b34a040f":"m = 0\nc = 0\n\nL      = 0.00001  # The learning Rate\nepochs = 2500  # The number of iterations to perform gradient descent\n\nn = float(len(X)) # Number of elements in X\n\n# Performing Gradient Descent \nfor i in range(epochs): \n    Y_pred = m*X + c  # The current predicted value of Y\n    D_m = (-2\/n) * sum(X * (Y - Y_pred))  # Derivative wrt m\n    D_c = (-2\/n) * sum(Y - Y_pred)  # Derivative wrt c\n    m = m - L * D_m  # Update m\n    c = c - L * D_c  # Update c\nprint (m, c)","914cdcb5":"\nY_pred = m*X + c\nprint(\"RMSE: \", sqrt(mean_squared_error(Y,Y_pred)),\"R2 score\", r2_score(Y,Y_pred))","139ccf9e":"from sklearn import linear_model\n# This is using SKlearn API\nX = pd.DataFrame(df.Hours)\nY = df.Scores\n\n# Create object of algorithm\nrg = linear_model.LinearRegression()\n# Create model by fitting data\nrg.fit(X, Y)\n\n# RMSE and R2 Score\nprint(\"RMSE: \", sqrt(mean_squared_error(Y,rg.predict(X))), \"R2 Score:\", r2_score(Y,rg.predict(X)))","eed86a15":"**How many total observations in data?**\n\nthere are 25 observations.\n","6270575c":"**Scores Column**","3c634f65":"#  Implement linear regression using sklearn API","6f6cb80b":"# Implement linear regression using Gradient Descent from scratch","260113cd":"# Loading data","82b31322":"**Importing Libraries**","4d85c4cf":"**Thank You**","d3b061f5":"**Finding Missing Values**","f1ec18ac":"**Which is dependent variable?**\n\nDependent variable is Scores","c72a8569":"# Implement linear regression using OLS method","e3159af7":"**Hours column**","ca7c8d2c":"**Which are most useful variable in estimation? Prove using correlation.**\n\nIn this dataset there is only one independent variable. So there is no selection of most useful variable. But following is correlation between independent and dependent variable.","bccfde81":"**Why you want to apply regression on selected dataset?**\n\nBecause our Y which is target variable is of continuous type so we can apply regression","0eecdb4d":"**Regression using SKlearn Api and OLS gives same RMSE and R2 Score which is good as it gives highest R2 score and low RMSE.**","b7f9518c":"# Data Preparation","919bde2a":"**How many independent variables?**\n\nThere is only one independent variable which is Hours"}}