{"cell_type":{"e237e5e0":"code","99ab060b":"code","c9403e18":"code","ea11e60a":"markdown","a4894497":"markdown","1553a2b2":"markdown"},"source":{"e237e5e0":"#imports\nimport numpy as np\nimport pandas as pd \n\nfrom sklearn.model_selection import train_test_split # split data\nimport xgboost # build model \nfrom sklearn.metrics import mean_squared_error #evaluate model\n\n# variables\nDATASET_PATH = \"..\/input\/simple-regression-dataset-2002-01-25\/regression_big_data.csv\"\nID =\"id\"\nTARGET = \"target\"\nSEED = 42\n\nTEST_SIZE = 0.25\nVAL_SIZE = 0.2\n\nMODEL_ESR = 5 \n\ndf = pd.read_csv(DATASET_PATH)\ndf.head()","99ab060b":"X = df.drop([ID,TARGET],axis=1)\ny= df[TARGET]\n\nX_train_val, X_test, y_train_val, y_test = train_test_split(X, y, test_size=TEST_SIZE, random_state=SEED)\nX_train, X_val, y_train, y_val = train_test_split(X, y, test_size=VAL_SIZE, random_state=SEED)\n\nxgb_reg = xgboost.XGBRegressor(random_state=SEED)\nxgb_reg.fit(X_train, y_train,eval_set=[(X_val, y_val)], early_stopping_rounds=MODEL_ESR)\ny_pred = xgb_reg.predict(X_val)\nval_error = mean_squared_error(y_val, y_pred,squared=False)  \nprint(\"Validation DATA RMSE:\", val_error)   ","c9403e18":"pred_test = xgb_reg.predict(X_test)\nprint(pred_test[:5])\n\ntest_error = mean_squared_error(y_test, pred_test,squared=False)  \nprint(\"TEST DATA RMSE:\", test_error) ","ea11e60a":"# Before building model","a4894497":"# Build Model","1553a2b2":"# After building model\n\npredict & evaluate "}}