{"cell_type":{"2402a369":"code","1231b0ab":"code","3586360a":"code","ee097ee2":"code","f02abb83":"code","95a55a70":"code","6bb106e1":"code","6551378e":"code","d8d0ea96":"code","fab4a24a":"code","84425bb6":"markdown","91d3db70":"markdown","ff580da2":"markdown","1d38816e":"markdown","295fd115":"markdown","b6ec869d":"markdown","f2255acc":"markdown"},"source":{"2402a369":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1231b0ab":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","3586360a":"df = pd.read_csv('\/kaggle\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv')\ndf.head()","ee097ee2":"ne_gp = df[['neighbourhood_group','name','room_type','price','id']]\nne_gp_hotelcount = ne_gp[['neighbourhood_group','id']]\nne_gp_hotelcount = ne_gp_hotelcount.groupby('neighbourhood_group').count()\nne_gp_hotelcount.reset_index(inplace=True)\nne_gp_hotelcount.rename(columns={'id':'Stays_Count'},inplace=True)\nne_gp_hotelcount['Stays_Count_InPercent'] = ne_gp_hotelcount['Stays_Count'] \/ sum(ne_gp_hotelcount['Stays_Count']) * 100\nne_gp_hotelcount","f02abb83":"plt.figure(figsize=(15,10))\nplt.pie('Stays_Count_InPercent', labels = 'neighbourhood_group',autopct = '%1.2f%%',data = ne_gp_hotelcount)\nplt.title('No.of Stays in Percent by Neighbourhood group')\nplt.show()","95a55a70":"ne_gp_roomtype = ne_gp[['neighbourhood_group','room_type','id']]\nne_gp_roomtype = ne_gp_roomtype.groupby(['neighbourhood_group','room_type']).count()\nne_gp_roomtype.reset_index(inplace=True)\nne_gp_roomtype.rename(columns = {'id': 'RoomType_Count'}, inplace=True)\nne_gp_roomtype1 = ne_gp_roomtype[['neighbourhood_group','RoomType_Count']]\nne_gp_roomtype1 = ne_gp_roomtype1.groupby('neighbourhood_group').sum()\nne_gp_roomtype1.reset_index(inplace=True)\n#ne_gp_roomtype['RoomType_Total'] = ne_gp_roomtype1['RoomType_Count']\nne_gp_roomtype2 = pd.merge(ne_gp_roomtype,ne_gp_roomtype1,on='neighbourhood_group')\nne_gp_roomtype2['RoomType_InPercent'] = ne_gp_roomtype2['RoomType_Count_x'] \/ ne_gp_roomtype2['RoomType_Count_y'] * 100\nne_gp_roomtype2","6bb106e1":"plt.figure(figsize=(10,8))\nsns.barplot('neighbourhood_group', 'RoomType_InPercent', hue = 'room_type',data = ne_gp_roomtype2)\nplt.show()","6551378e":"ne_gp_price = ne_gp[['neighbourhood_group','price']]\nne_gp_price = ne_gp_price.groupby('neighbourhood_group').mean()\nne_gp_price.reset_index(inplace=True)\nne_gp_price['price'] = round(ne_gp_price['price'],2)\nne_gp_price.sort_values('price',ascending=False,inplace=True)  #Sorting based on Price\nne_gp_price","d8d0ea96":"ne_gp_price_dist = ne_gp[['neighbourhood_group','room_type','price']]\n\n#Replacing Private room to P, Entire home\/apt to E and Shared room to S\nne_gp_price_dist['room_type'].replace('Private room','P',inplace=True)\nne_gp_price_dist['room_type'].replace('Entire home\/apt','E',inplace=True)\nne_gp_price_dist['room_type'].replace('Shared room','S',inplace=True)\n\n#Filter to extract only Bronx neighbourhood group\nne_gp_price_dist_Bronx_P = ne_gp_price_dist[(ne_gp_price_dist['neighbourhood_group'] == 'Bronx') & (ne_gp_price_dist['room_type'] == 'P')]\nne_gp_price_dist_Bronx_S = ne_gp_price_dist[(ne_gp_price_dist['neighbourhood_group'] == 'Bronx') & (ne_gp_price_dist['room_type'] == 'S')]\nne_gp_price_dist_Bronx_E = ne_gp_price_dist[(ne_gp_price_dist['neighbourhood_group'] == 'Bronx') & (ne_gp_price_dist['room_type'] == 'E')]\n\n#Average price of room type in Bronx\nprint('Average Price of room type in Bronx:')\nprint('------------------------------------')\nprint('Average Price of Private Room in Bronx: {}'.format(round(ne_gp_price_dist_Bronx_P.groupby('neighbourhood_group').mean()['price'][0],2)))\nprint('Average Price of Entire home\/apt in Bronx: {}'.format(round(ne_gp_price_dist_Bronx_E.groupby('neighbourhood_group').mean()['price'][0],2)))\nprint('Average Price of Shared Room in Bronx: {}'.format(round(ne_gp_price_dist_Bronx_S.groupby('neighbourhood_group').mean()['price'][0],2)))\n\nprint('')\n#Median price of room type in Bronx\nprint('Median Price of room type in Bronx:')\nprint('------------------------------------')\nprint('Median Price of Private Room in Bronx: {}'.format(round(ne_gp_price_dist_Bronx_P.groupby('neighbourhood_group').median()['price'][0],2)))\nprint('Median Price of Entire home\/apt in Bronx: {}'.format(round(ne_gp_price_dist_Bronx_E.groupby('neighbourhood_group').median()['price'][0],2)))\nprint('Median Price of Shared Room in Bronx: {}'.format(round(ne_gp_price_dist_Bronx_S.groupby('neighbourhood_group').median()['price'][0],2)))\n\n\n#Filter to extract only Brooklyn neighbourhood group\nne_gp_price_dist_Brooklyn_P = ne_gp_price_dist[(ne_gp_price_dist['neighbourhood_group'] == 'Brooklyn') & (ne_gp_price_dist['room_type'] == 'P')]\nne_gp_price_dist_Brooklyn_S = ne_gp_price_dist[(ne_gp_price_dist['neighbourhood_group'] == 'Brooklyn') & (ne_gp_price_dist['room_type'] == 'S')]\nne_gp_price_dist_Brooklyn_E = ne_gp_price_dist[(ne_gp_price_dist['neighbourhood_group'] == 'Brooklyn') & (ne_gp_price_dist['room_type'] == 'E')]\n\nprint('')\n#Average price of room type in Brooklyn\nprint('Average Price of room type in Brooklyn:')\nprint('----------------------------------------')\nprint('Average Price of Private Room in Brooklyn: {}'.format(round(ne_gp_price_dist_Brooklyn_P.groupby('neighbourhood_group').mean()['price'][0],2)))\nprint('Average Price of Entire home\/apt in Brooklyn: {}'.format(round(ne_gp_price_dist_Brooklyn_E.groupby('neighbourhood_group').mean()['price'][0],2)))\nprint('Average Price of Shared Room in Brooklyn: {}'.format(round(ne_gp_price_dist_Brooklyn_S.groupby('neighbourhood_group').mean()['price'][0],2)))\n\nprint('')\n#Median price of room type in Brooklyn\nprint('Median Price of room type in Brooklyn:')\nprint('----------------------------------------')\nprint('Median Price of Private Room in Brooklyn: {}'.format(round(ne_gp_price_dist_Brooklyn_P.groupby('neighbourhood_group').median()['price'][0],2)))\nprint('Median Price of Entire home\/apt in Brooklyn: {}'.format(round(ne_gp_price_dist_Brooklyn_E.groupby('neighbourhood_group').median()['price'][0],2)))\nprint('Median Price of Shared Room in Brooklyn: {}'.format(round(ne_gp_price_dist_Brooklyn_S.groupby('neighbourhood_group').median()['price'][0],2)))\n\n\n#Filter to extract only Manhattan neighbourhood group\nne_gp_price_dist_Manhattan_P = ne_gp_price_dist[(ne_gp_price_dist['neighbourhood_group'] == 'Manhattan') & (ne_gp_price_dist['room_type'] == 'P')]\nne_gp_price_dist_Manhattan_S = ne_gp_price_dist[(ne_gp_price_dist['neighbourhood_group'] == 'Manhattan') & (ne_gp_price_dist['room_type'] == 'S')]\nne_gp_price_dist_Manhattan_E = ne_gp_price_dist[(ne_gp_price_dist['neighbourhood_group'] == 'Manhattan') & (ne_gp_price_dist['room_type'] == 'E')]\n\nprint('')\n#Average price of room type in Manhattan\nprint('Average Price of room type in Manhattan:')\nprint('----------------------------------------')\nprint('Average Price of Private Room in Manhattan: {}'.format(round(ne_gp_price_dist_Manhattan_P.groupby('neighbourhood_group').mean()['price'][0],2)))\nprint('Average Price of Entire home\/apt in Manhattan: {}'.format(round(ne_gp_price_dist_Manhattan_E.groupby('neighbourhood_group').mean()['price'][0],2)))\nprint('Average Price of Shared Room in Manhattan: {}'.format(round(ne_gp_price_dist_Manhattan_S.groupby('neighbourhood_group').mean()['price'][0],2)))\n\n\nprint('')\n#Median price of room type in Manhattan\nprint('Median Price of room type in Manhattan:')\nprint('----------------------------------------')\nprint('Median Price of Private Room in Manhattan: {}'.format(round(ne_gp_price_dist_Manhattan_P.groupby('neighbourhood_group').median()['price'][0],2)))\nprint('Median Price of Entire home\/apt in Manhattan: {}'.format(round(ne_gp_price_dist_Manhattan_E.groupby('neighbourhood_group').median()['price'][0],2)))\nprint('Median Price of Shared Room in Manhattan: {}'.format(round(ne_gp_price_dist_Manhattan_S.groupby('neighbourhood_group').median()['price'][0],2)))\n\n\n#Filter to extract only Queens neighbourhood group\nne_gp_price_dist_Queens_P = ne_gp_price_dist[(ne_gp_price_dist['neighbourhood_group'] == 'Queens') & (ne_gp_price_dist['room_type'] == 'P')]\nne_gp_price_dist_Queens_S = ne_gp_price_dist[(ne_gp_price_dist['neighbourhood_group'] == 'Queens') & (ne_gp_price_dist['room_type'] == 'S')]\nne_gp_price_dist_Queens_E = ne_gp_price_dist[(ne_gp_price_dist['neighbourhood_group'] == 'Queens') & (ne_gp_price_dist['room_type'] == 'E')]\n\nprint('')\n#Average price of room type in Queens\nprint('Average Price of room type in Queens:')\nprint('----------------------------------------')\nprint('Average Price of Private Room in Queens: {}'.format(round(ne_gp_price_dist_Queens_P.groupby('neighbourhood_group').mean()['price'][0],2)))\nprint('Average Price of Entire home\/apt in Queens: {}'.format(round(ne_gp_price_dist_Queens_E.groupby('neighbourhood_group').mean()['price'][0],2)))\nprint('Average Price of Shared Room in Queens: {}'.format(round(ne_gp_price_dist_Queens_S.groupby('neighbourhood_group').mean()['price'][0],2)))\n\n\nprint('')\n#Median price of room type in Queens\nprint('Median Price of room type in Queens:')\nprint('----------------------------------------')\nprint('Median Price of Private Room in Queens: {}'.format(round(ne_gp_price_dist_Queens_P.groupby('neighbourhood_group').median()['price'][0],2)))\nprint('Median Price of Entire home\/apt in Queens: {}'.format(round(ne_gp_price_dist_Queens_E.groupby('neighbourhood_group').median()['price'][0],2)))\nprint('Median Price of Shared Room in Queens: {}'.format(round(ne_gp_price_dist_Queens_S.groupby('neighbourhood_group').median()['price'][0],2)))\n\n\n#Filter to extract only Staten Island neighbourhood group\nne_gp_price_dist_StatenIsland_P = ne_gp_price_dist[(ne_gp_price_dist['neighbourhood_group'] == 'Staten Island') & (ne_gp_price_dist['room_type'] == 'P')]\nne_gp_price_dist_StatenIsland_S = ne_gp_price_dist[(ne_gp_price_dist['neighbourhood_group'] == 'Staten Island') & (ne_gp_price_dist['room_type'] == 'S')]\nne_gp_price_dist_StatenIsland_E = ne_gp_price_dist[(ne_gp_price_dist['neighbourhood_group'] == 'Staten Island') & (ne_gp_price_dist['room_type'] == 'E')]\n\nprint('')\n#Average price of room type in Staten Island\nprint('Average Price of room type in Staten Island:')\nprint('----------------------------------------')\nprint('Average Price of Private Room in Staten Island: {}'.format(round(ne_gp_price_dist_StatenIsland_P.groupby('neighbourhood_group').mean()['price'][0],2)))\nprint('Average Price of Entire home\/apt in Staten Island: {}'.format(round(ne_gp_price_dist_StatenIsland_E.groupby('neighbourhood_group').mean()['price'][0],2)))\nprint('Average Price of Shared Room in Staten Island: {}'.format(round(ne_gp_price_dist_StatenIsland_S.groupby('neighbourhood_group').mean()['price'][0],2)))\n\n\nprint('')\n#Median price of room type in Staten Island\nprint('Median Price of room type in Staten Island:')\nprint('----------------------------------------')\nprint('Median Price of Private Room in Staten Island: {}'.format(round(ne_gp_price_dist_StatenIsland_P.groupby('neighbourhood_group').median()['price'][0],2)))\nprint('Median Price of Entire home\/apt in Staten Island: {}'.format(round(ne_gp_price_dist_StatenIsland_E.groupby('neighbourhood_group').median()['price'][0],2)))\nprint('Median Price of Shared Room in Staten Island: {}'.format(round(ne_gp_price_dist_StatenIsland_S.groupby('neighbourhood_group').median()['price'][0],2)))\n\n","fab4a24a":"#Quantile price of private room type in Bronx\nprint('Quantile Price of private room type in Bronx:')\nprint('------------------------------------')\nprint('25% of Private room is less than :', np.quantile(ne_gp_price_dist_Bronx_P['price'],0.25))\nprint('50% of Private room is less than :', np.quantile(ne_gp_price_dist_Bronx_P['price'],0.50))\nprint('75% of Private room is less than :', np.quantile(ne_gp_price_dist_Bronx_P['price'],0.75))\n\nprint('90 Percentile of Private room price is :', np.percentile(ne_gp_price_dist_Bronx_P['price'],90))\n\nprint('')\n\nprint('Quantile Price of Entire Apt room type in Bronx:')\nprint('------------------------------------')\nprint('25% of Entire Apt is less than :', np.quantile(ne_gp_price_dist_Bronx_E['price'],0.25))\nprint('50% of Entire Apt is less than :', np.quantile(ne_gp_price_dist_Bronx_E['price'],0.50))\nprint('75% of Entire Apt is less than :', np.quantile(ne_gp_price_dist_Bronx_E['price'],0.75))\nprint('85 Percentile of Entire Apt price is :', np.percentile(ne_gp_price_dist_Bronx_E['price'],85))\n\nprint('')\n\nprint('Quantile Price of Shared room type in Bronx:')\nprint('------------------------------------')\nprint('25% of Shared room is less than :', np.quantile(ne_gp_price_dist_Bronx_S['price'],0.25))\nprint('50% of Shared room is less than :', np.quantile(ne_gp_price_dist_Bronx_S['price'],0.50))\nprint('75% of Shared room is less than :', np.quantile(ne_gp_price_dist_Bronx_S['price'],0.75))\nprint('95 Percentile of Shared room price is :', np.percentile(ne_gp_price_dist_Bronx_S['price'],95))\n\n\n\n\n\n","84425bb6":"# Room Type By Neighbourhood_group:","91d3db70":"> # Average & Median Price of Neighbourhood Group By Room Type","ff580da2":"# No. of Stays by Neighbourhood Group:\n\nDescriptive Statistics: \n\nPercentage of Stays Count:\nManhattan  - 44%\nBrooklyn - 41%\nQueens - 12%\nBronx - 2%","1d38816e":"# Least 25% and Top 25% room type price by neighbourhood:","295fd115":"# % of RoomType by Neighbourhood Group:\n\n* Descriptive Statistics: \n\n* Percentage of types of stays count:\n* Manhattan  - Entire home\/apt -  61%, Private room - 37%, Shared room - 2%\n* Brooklyn - Entire home\/apt - 48%, Private room - 50%, Shared room - 2%\n* Queens - Entire home\/apt - 37%, Private room - 60%, Shared room - 3%\n* Bronx - Entire home\/apt - 35%, Private room - 60%, Shared room - 5%","b6ec869d":"# Neighbourhood_Group Analysis:\n","f2255acc":"# Average Price by Neighbourhood Group:"}}