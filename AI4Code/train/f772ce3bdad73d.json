{"cell_type":{"802e7fa2":"code","efc2ba77":"code","93b6fc47":"code","ec02e3c9":"code","51973016":"code","5d310d38":"code","de0fc807":"code","8d2f6049":"code","0eabafc8":"code","9c98b865":"code","5d351206":"code","20ce8e5a":"code","b4f4c4e8":"code","43eff78d":"code","e7510c0a":"code","cfee1e83":"code","5689ab8d":"code","3ccb0ad7":"code","8bfbd1a7":"code","cd60738f":"code","ffdd784d":"code","dc089595":"code","f505e4d1":"code","300daaa8":"code","3184ae44":"code","26944eb0":"code","d4fc0bca":"code","f69f880d":"code","76e9def3":"code","4560561b":"code","c3448172":"code","b67968f4":"code","d2c1c2f4":"code","bd0fae3b":"code","06511247":"code","c70219f5":"code","9f14f347":"code","ce6ec7aa":"code","de304807":"code","c4aa4dfd":"code","452e664e":"markdown","306a0c55":"markdown","cb9a9ff5":"markdown","5d88dc5f":"markdown","2352854b":"markdown","22990e06":"markdown","c8cbbd75":"markdown","8ed52fe3":"markdown"},"source":{"802e7fa2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","efc2ba77":"import pandas as pd\nimport matplotlib.pyplot as plt\ndata=pd.read_csv('\/kaggle\/input\/co2-emission-by-vehicles\/CO2 Emissions_Canada.csv')\ndata","93b6fc47":"data.isnull().sum()","ec02e3c9":"data.hist()","51973016":"data.corr()","5d310d38":"data.columns\n","de0fc807":"plt.boxplot(data['Fuel Consumption Comb (L\/100 km)'])","8d2f6049":"plt.boxplot(data['CO2 Emissions(g\/km)'])","0eabafc8":"plt.scatter(data['Fuel Consumption Comb (L\/100 km)'],data['CO2 Emissions(g\/km)'])","9c98b865":"data1=data[data['Fuel Consumption Comb (L\/100 km)']<data['Fuel Consumption Comb (L\/100 km)'].quantile(0.95)]\ndata1","5d351206":"plt.scatter(data1['Fuel Consumption Comb (L\/100 km)'],data1['CO2 Emissions(g\/km)'])","20ce8e5a":"plt.boxplot(data1['Fuel Consumption Comb (L\/100 km)'])","b4f4c4e8":"plt.boxplot(data1['CO2 Emissions(g\/km)'])","43eff78d":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.metrics import mean_squared_error","e7510c0a":"x=data1['Fuel Consumption City (L\/100 km)'].values.reshape(-1,1)\ny=data1['CO2 Emissions(g\/km)'].values.reshape(-1,1)\n","cfee1e83":"x.shape","5689ab8d":"y.shape","3ccb0ad7":"test_size=int(len(data1)*0.2)\n\ntrain_set=data1[:-test_size]\ntest_set=data1[-test_size:]\ntrain_set_x=train_set['Fuel Consumption City (L\/100 km)']\ntrain_set_x=train_set_x[:,np.newaxis]\nprint(train_set_x)\ntest_set_x=test_set['Fuel Consumption City (L\/100 km)']\ntest_set_x=test_set_x[:,np.newaxis]\ntrain_set_y=train_set['CO2 Emissions(g\/km)']\ntrain_set_y=train_set_y[:,np.newaxis]\ntest_set_y=test_set['CO2 Emissions(g\/km)']\ntest_set_y=test_set_y[:,np.newaxis]\n\n","8bfbd1a7":"print(train_set_x)\nprint(train_set_y)\nprint(test_set_x)\nprint(test_set_y)\nprint(train_set_x.shape)\nprint(train_set_y.shape)\nprint(test_set_x.shape)\nprint(test_set_y.shape)","cd60738f":"from sklearn.model_selection import train_test_split\ntrain_set,test_set=train_test_split(data,test_size=0.2,shuffle=True)\ntrain_set.head()","ffdd784d":"data1['CO2 Emissions(g\/km)'].hist(bins=50,figsize=(10,5))\nplt.show()","dc089595":"model=LinearRegression()\nmodel.fit(train_set_x,train_set_y)","f505e4d1":"y_test_pred=model.predict(test_set_x)\ny_train_pred=model.predict(train_set_x)\nprint(y_train_pred)\nprint(train_set_y)\nprint(y_test_pred)\nprint(test_set_y)","300daaa8":"plt.scatter(train_set_x,train_set_y)\nplt.scatter(train_set_x,y_train_pred)\nplt.plot(test_set_x,y_test_pred)","3184ae44":"newval=pd.DataFrame({'cons':[12]})\np1=model.predict(newval)\nprint(p1)","26944eb0":"y_train_pred=model.predict(train_set_x)\nmean_absolute_error(train_set_y,y_train_pred)","d4fc0bca":"y_test_pred=model.predict(test_set_x)\nmean_absolute_error(test_set_y,y_test_pred)","f69f880d":"mean_squared_error(test_set_y,y_test_pred)","76e9def3":"data1.columns","4560561b":"data1","c3448172":"data1.corr()","b67968f4":"test_size=int(len(data1)*0.2)\ntrain_set_x1=data1[['Fuel Consumption Comb (L\/100 km)','Engine Size(L)']]\ntrain_set_x1=train_set_x1[:-test_size]\ntrain_set_y1=data1['CO2 Emissions(g\/km)'][:-test_size]\ntest_set_x1=data1[['Fuel Consumption Comb (L\/100 km)','Engine Size(L)']]\ntest_set_x1=test_set_x1[-test_size:]\ntest_set_y1=data1['CO2 Emissions(g\/km)'][-test_size:]\n","d2c1c2f4":"print(train_set_y1)","bd0fae3b":"print(train_set_x1.shape)\nprint(train_set_y1.shape)\nprint(test_set_x1.shape)\nprint(test_set_y1.shape)","06511247":"model1=LinearRegression()\nmodel1.fit(train_set_x1,train_set_y1)\n","c70219f5":"y1_test_pred=model1.predict(test_set_x1)\ny1_train_pred=model1.predict(train_set_x1)\nprint(y1_train_pred)\nprint(train_set_y1[:,np.newaxis])\nprint(y1_test_pred)\nprint(test_set_y1[:,np.newaxis])","9f14f347":"newval1=pd.DataFrame({'fc':[12],'es':[3]})\npm=model1.predict(newval1)\nprint(pm)","ce6ec7aa":"\nmean_absolute_error(train_set_y1,y1_train_pred)","de304807":"mean_absolute_error(test_set_y1,y1_test_pred)","c4aa4dfd":"mean_squared_error(test_set_y1,y1_test_pred)","452e664e":"# Visualize Data","306a0c55":"# New value prediction in mulreg","cb9a9ff5":"# Fitting Linear Regression model with SKLEARN","5d88dc5f":"# Multiple Regression","2352854b":"# Evaluation by finding error","22990e06":"# Predicting a new value","c8cbbd75":"# Training the Model","8ed52fe3":"# Get Data"}}