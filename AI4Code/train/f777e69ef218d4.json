{"cell_type":{"ab470b7e":"code","48361dfd":"code","ca34f36e":"code","cadee156":"code","88e86c60":"code","dbe39ccc":"code","25ef6a07":"code","a504517a":"code","9f94f1f3":"code","6cc1d2ef":"code","954991cc":"code","41f35567":"code","8d243194":"code","68b38516":"code","b912ea29":"code","8df018a3":"code","27584d2e":"code","be943cf9":"code","9643c85a":"code","97492d6f":"code","aab56abd":"markdown"},"source":{"ab470b7e":"import pandas as pd\nnetflix=pd.read_csv('..\/input\/tesla-share\/TSLA (1).csv')\nnetflix.head()","48361dfd":"netflix=netflix[['Date','Close']]\nnetflix.head()","ca34f36e":"netflix.info()","cadee156":"!pip install pycaret-ts-alpha","88e86c60":"from pycaret.internal.pycaret_experiment import TimeSeriesExperiment\nfrom sktime.utils.plotting import plot_series","dbe39ccc":"netflix.index = pd.DatetimeIndex(netflix[\"Date\"])\nnetflix.drop([\"Date\"],axis=1,inplace=True)\nnetflix.head()","25ef6a07":"netflix = netflix.asfreq('d')\nnetflix.index","a504517a":"netflix.head()","9f94f1f3":"netflix=netflix.fillna(method='ffill')\nnetflix.head()","6cc1d2ef":"data=netflix.Close\ndata","954991cc":"import matplotlib.pyplot as plt\n_ =plot_series(data)\nplt.xticks(rotation=90)\nplt.grid()","41f35567":"exp = TimeSeriesExperiment()\nexp.setup(data=data,session_id=42,fh=365)","8d243194":"## Create a model manually\nmodel = exp.create_model(\"knn_cds_dt\")\nmodel","68b38516":"y_train = exp.get_config(\"y_train\")\ny_train[:5]","b912ea29":"y_predict = exp.predict_model(model)\nplot_series(data, y_train, y_predict, labels=['All', 'Train', 'Test Predictions'])\nplt.grid()","8df018a3":"tuned_model = exp.tune_model(model,optimize = 'MAPE')\ntuned_model","27584d2e":"exp.predict_model(tuned_model)","be943cf9":"y_predict = exp.predict_model(tuned_model)\nplot_series(data, y_train, y_predict, labels=['All', 'Train', 'Test Predictions'])\nplt.grid()","9643c85a":"# Finalize Model\nfinal_model = exp.finalize_model(tuned_model)\n# Future Predictions\ny_pred_future = exp.predict_model(final_model, verbose=False)\n_=plot_series(data, y_pred_future, labels=['All', 'Future Pred (Unknown)'])\nplt.grid()","97492d6f":"# Test Set Predictions\ny_pred = exp.predict_model(tuned_model)\n\n# Finalize Model\nfinal_model = exp.finalize_model(tuned_model)\n\n# Future Predictions\ny_pred_future = exp.predict_model(final_model, verbose=False)\n\n# Plot Results\ny_train = exp.get_config(\"y_train\")\n_ = plot_series(data, y_train, y_pred, y_pred_future, labels=['All', 'Train', 'Test Predictions', 'Future Pred (Unknown)'])\nplt.grid()","aab56abd":"# "}}