{"cell_type":{"e188e187":"code","26f07a30":"code","897cfdfc":"code","ea19d9a6":"code","456c6b4e":"code","f9c5a4f7":"code","cf4e76d4":"code","2ec0b85e":"code","0ac77a5c":"code","fe4160bf":"code","78935250":"code","54cc8e0d":"code","04bb1fe2":"markdown","fa5aa213":"markdown","aae2550f":"markdown","e5138b21":"markdown"},"source":{"e188e187":"# Library\nimport pandas as pd\nimport numpy as np\nfrom sklearn.cluster import KMeans\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn import datasets, linear_model\nimport matplotlib.pyplot as plt","26f07a30":"wq =pd.read_csv('..\/input\/winequalityred\/winequality-red.csv')\nwq","897cfdfc":"wq.isnull().sum()","ea19d9a6":"wq4= wq.fillna(wq.mean(), inplace=True)","456c6b4e":"# Extract Feature In Give dataset\nwq1 = wq.iloc[:, 1:12].values # feature Values\nwq2 = wq.iloc[:,:12].values# Traget Value","f9c5a4f7":"#Standardize the data\nfrom sklearn.preprocessing import StandardScaler\n# First Standardizing the features\nsce= StandardScaler()\nx=sce.fit_transform(wq1)\nwq1","cf4e76d4":"# Import PCA and Decompose\nfrom sklearn.decomposition import PCA\n\npca = PCA(n_components=2)\nprincipalComponents = pca.fit_transform(wq1)\nprincipalComponents","2ec0b85e":"principalDf = pd.DataFrame(data = principalComponents\n             , columns = ['principal component 1', 'principal component 2'])\n\nfinalDf = pd.concat([principalDf, wq.iloc[:,:12]], axis = 1)\nfinalDf","0ac77a5c":"import matplotlib.pyplot as plt\n\nplt.scatter(wq1[:,0],wq1[:,1], label='True Position')\n\nplt.show()  ","fe4160bf":"#Applying kmeans to the dataset \/ Creating the kmeans classifier\nkmeans = KMeans(n_clusters = 3, init = 'k-means++', max_iter = 300, n_init = 10, random_state = 0)\ny_kmeans = kmeans.fit_predict(wq1)\nprint(y_kmeans)","78935250":"#Now clustering the data points\nfrom sklearn.cluster import AgglomerativeClustering\n\ncluster = AgglomerativeClustering(n_clusters=3, affinity='euclidean', linkage='complete')  \ncluster_labels1=cluster.fit_predict(wq1)  \nprint(cluster.labels_) \nprint(cluster_labels1) \n\nplt.scatter(wq1[:,0],wq1[:,1], c=cluster_labels1, cmap='rainbow')","54cc8e0d":"# Using Silhouette_score\nfrom sklearn.metrics import silhouette_score\nsilhouette_avg = silhouette_score(wq1, cluster_labels1)\nprint(\"For n_clusters =\", 3,\n          \"The average silhouette_score is :\", silhouette_avg)","04bb1fe2":"# Plot the scatter plot for the extracted components of wine dataset.","fa5aa213":"# Implement Pre-processing functions\n- check for NULL values in the dataset. If any NULL value is present then treat it \naccordingly.\n- extract only feature columns from the dataset","aae2550f":"# Now apply k-means clustering using the value of k=3 (as there are three different wine qualities in the target variable).","e5138b21":"# Apply Principal component analysis and extract 2 principal components from the dataset."}}