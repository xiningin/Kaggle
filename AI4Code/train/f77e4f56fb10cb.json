{"cell_type":{"28539b68":"code","5d7a0d22":"code","3a6b6e2b":"code","e40b8675":"code","96b38586":"code","60a1e8ed":"code","33d0b0c3":"code","0aeec1b6":"code","ad95866e":"code","38b1e430":"code","9052ebdb":"code","be80ffe7":"code","c5b105fe":"code","46f4f4a0":"code","d721b3db":"code","7dcc20d7":"code","e56b2e6a":"code","bbba0825":"code","dfc19595":"code","ba6fdc26":"code","daea1fd9":"code","191e9f51":"code","4be2fe19":"code","008f3abb":"code","89db67d1":"code","f330bc5b":"code","776acbf0":"code","fdcc0982":"code","20141007":"code","b890ed2c":"code","48489008":"code","2883636d":"code","aa98bdd4":"code","fc8dfc36":"code","78e1d510":"markdown","d5856325":"markdown","5026265d":"markdown","537d3d07":"markdown","e37a4bc8":"markdown","fb0b356f":"markdown","cf96290d":"markdown","26a3aa6a":"markdown","2085a14c":"markdown","aeeab0d2":"markdown","fe682fc3":"markdown"},"source":{"28539b68":"!pip install -q '..\/input\/klib-library-python\/klib-0.1.3-py3-none-any.whl'","5d7a0d22":"import pandas as pd\nfrom pandas import Series, DataFrame\nfrom scipy.stats import ttest_ind\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nimport klib\n%pylab inline","3a6b6e2b":"df = pd.read_csv('..\/input\/kickstarter-campaigns-dataset\/kickstarter_data_with_features.csv', index_col = 0)\ndf.head()","e40b8675":"klib.missingval_plot(df)","96b38586":"klib.corr_mat(df)","60a1e8ed":"klib.corr_plot(df)","33d0b0c3":"kickstarter = klib.data_cleaning(df)","0aeec1b6":"kickstarter.columns","ad95866e":"print(\"This dataset has information on \", len(kickstarter),\" project campaigns.\")","38b1e430":"pd.qcut(kickstarter['goal'], 10).value_counts().sort_index()\n# df.plot(kind='bar')","9052ebdb":"plot_df = pd.concat([kickstarter['launched_at_weekday'].value_counts(),\n                     kickstarter['deadline_weekday'].value_counts(),\n                    kickstarter['created_at_weekday'].value_counts()], axis=1)\nplot_df.index = [\"(5) Friday\",\"(1) Monday\",\"(6) Saturday\",\"(7) Sunday\",\"(4) Thursday\",\"(2) Tuesday\",\"(3) Wednesday\"]\nplot_df = plot_df.sort_index()\nplot_df.plot(kind='line', figsize=(10,5), title = \"Distribution of Campaigns over Weekdays\")","be80ffe7":"plot_df = pd.concat([kickstarter['deadline_hr'].value_counts(),\n                     kickstarter['created_at_hr'].value_counts(),\n                    kickstarter['launched_at_hr'].value_counts()], axis=1)\nplot_df = plot_df.sort_index()\nplot_df.plot(kind='line', figsize=(10,5), title = \"Distribution of Campaigns over UTC Day by hour\")","c5b105fe":"fig, axes = plt.subplots(nrows=5, ncols=2)\nfig.subplots_adjust(hspace=1, wspace = 1)\n\nkickstarter['country'].value_counts().plot(kind = 'bar',ax=axes[0,0], title = 'Country Distribution', figsize=(15,15))\nkickstarter['currency'].value_counts().plot(kind = 'bar',ax=axes[0,1], title = 'Currency Distribution', figsize=(15,15))\nkickstarter['category'].value_counts().plot(kind = 'bar',ax=axes[1,0], title = 'Category Distribution', figsize=(15,15))\nkickstarter['deadline_weekday'].value_counts().plot(kind = 'bar',ax=axes[1,1], title = 'Deadline Weekday Distribution', figsize=(15,15))\nkickstarter['created_at_weekday'].value_counts().plot(kind = 'bar',ax=axes[2,0], title = 'Created At Weekday Distribution', figsize=(15,15))\nkickstarter['launched_at_weekday'].value_counts().plot(kind = 'bar',ax=axes[2,1], title = 'Launched At Weekday Distribution', figsize=(15,15))\nkickstarter['deadline_hr'].value_counts().sort_index().plot(kind = 'bar',ax=axes[3,0], title = 'Deadline Hour Distribution', figsize=(15,15))\nkickstarter['created_at_hr'].value_counts().sort_index().plot(kind = 'bar',ax=axes[3,1], title = 'Created at Hour Distribution', figsize=(15,15))\nkickstarter['launched_at_hr'].value_counts().sort_index().plot(kind = 'bar',ax=axes[4,0], title = 'Launched at Hour Distribution', figsize=(15,15))\nkickstarter['state'].value_counts().plot(kind = 'bar',ax=axes[4,1], title = 'State Distribution', figsize=(15,15))","46f4f4a0":"def extract_days(val):\n    try:\n        l = val.split(\" \")\n        return int(l[0])\n    except:\n        return np.nan\n\nkickstarter['create_to_launch_days'] = kickstarter['create_to_launch'].map(extract_days)\nkickstarter['launch_to_deadline_days'] = kickstarter['launch_to_deadline'].map(extract_days)\nkickstarter['launch_to_state_change_days'] = kickstarter['launch_to_state_change'].map(extract_days)\nkickstarter.head(1)","d721b3db":"def return_week_bins(val):\n    if val < 7:\n        return \"< 1 week\"\n    elif val < 14:\n        return \"1-2 weeks\"\n    elif val < 28:\n        return \"2-4 weeks\"\n    elif val < 35:\n        return \"4-5 weeks\"\n    elif val < 42:\n        return \"5-6 weeks\"\n    elif val < 56:\n        return \"6-8 weeks\"\n    else:\n        return \"8+ weeks\"\n\nsuccessful_state_series = kickstarter[kickstarter['state'] == \"successful\"]['launch_to_deadline_days']\nsuccessful_state_series.map(return_week_bins).value_counts().plot(kind='bar')","7dcc20d7":"def return_date_bins(val):\n    if val < 1:\n        return \"0-1 day\"\n    elif val < 2:\n        return \"01-2 days\"\n    elif val < 7:\n        return \"02-7 days\"\n    elif val < 21:\n        return \"07-21 days\"\n    elif val < 42:\n        return \"21-42 days\"\n    elif val < 63:\n        return \"42-63 days\"\n    else:\n        return \"63+ days\"\n\ncreate_launch_series = kickstarter['create_to_launch_days']\ncreate_launch_series.map(return_date_bins).value_counts().plot(kind='bar')","e56b2e6a":"successful_kickstarter = kickstarter[kickstarter['state'] == \"successful\"]\nfailed_kickstarter = kickstarter[kickstarter['state'] == \"failed\"]\ncancelled_kickstarter = kickstarter[kickstarter['state'] == \"canceled\"]\nprint(len(successful_kickstarter),\" successful campaigns\")\nprint(len(failed_kickstarter),\" failed campaigns\")\nprint(len(cancelled_kickstarter),\" cancelled campaigns\")","bbba0825":"n = 'name_len_clean'\ncompare_name_len_clean = pd.concat([kickstarter[n].value_counts(),successful_kickstarter[n].value_counts(),failed_kickstarter[n].value_counts(),cancelled_kickstarter[n].value_counts()], axis=1)\ncompare_name_len_clean.columns = ['all','successful','failed','cancelled']\ncompare_name_len_clean.loc['total'] = compare_name_len_clean.sum(axis=0)\n\ndef get_perc(val, col):\n    return (val \/ compare_name_len_clean[col]['total'])*100\n\ncompare_name_len_clean['all_perc'] = compare_name_len_clean['all'].apply(get_perc, args=('all',))\ncompare_name_len_clean['success_perc'] = compare_name_len_clean['successful'].apply(get_perc, args=('successful',))\ncompare_name_len_clean['failed_perc'] = compare_name_len_clean['failed'].apply(get_perc, args=('failed',))\ncompare_name_len_clean['cancelled_perc'] = compare_name_len_clean['cancelled'].apply(get_perc, args=('cancelled',))\n\ncompare_name_len_clean[['success_perc','failed_perc']][:14].sort_index().plot(kind='bar', figsize=(10,5), title = \"Distribution of length of name for successful and failed campaigns\")\n\nprint(ttest_ind(failed_kickstarter[n], successful_kickstarter[n]))\nprint(\"Failed mean: \", failed_kickstarter[n].mean())\nprint(\"Successful mean: \", successful_kickstarter[n].mean())\n","dfc19595":"print(failed_kickstarter['name_len_clean'].value_counts().sum())\nprint(successful_kickstarter['name_len_clean'].value_counts().sum())","ba6fdc26":"n = 'blurb_len_clean'\ncompare_blurb_len_clean = pd.concat([kickstarter[n].value_counts(),successful_kickstarter[n].value_counts(),failed_kickstarter[n].value_counts(),cancelled_kickstarter[n].value_counts()], axis=1)\ncompare_blurb_len_clean.columns = ['all','successful','failed','cancelled']\ncompare_blurb_len_clean.loc['total'] = compare_blurb_len_clean.sum(axis=0)\n\ndef get_perc(val, col):\n    return (val \/ compare_blurb_len_clean[col]['total'])*100\n\ncompare_blurb_len_clean['all_perc'] = compare_blurb_len_clean['all'].apply(get_perc, args=('all',))\ncompare_blurb_len_clean['success_perc'] = compare_blurb_len_clean['successful'].apply(get_perc, args=('successful',))\ncompare_blurb_len_clean['failed_perc'] = compare_blurb_len_clean['failed'].apply(get_perc, args=('failed',))\ncompare_blurb_len_clean['cancelled_perc'] = compare_blurb_len_clean['cancelled'].apply(get_perc, args=('cancelled',))\n\ncompare_blurb_len_clean[['success_perc','failed_perc']][:14].sort_index().plot(kind='bar',figsize=(10,5), title = \"Distribution of length of blurb for successful and failed campaigns\")\n\nprint(ttest_ind(failed_kickstarter[n], successful_kickstarter[n]))\nprint(\"Failed mean: \", failed_kickstarter[n].mean())\nprint(\"Successful mean: \", successful_kickstarter[n].mean())","daea1fd9":"n = 'launch_to_deadline_days'\ncompare_L2D = pd.concat([kickstarter[n].apply(return_week_bins).value_counts(),successful_kickstarter[n].apply(return_week_bins).value_counts(),failed_kickstarter[n].apply(return_week_bins).value_counts(),cancelled_kickstarter[n].apply(return_week_bins).value_counts()], axis=1)\ncompare_L2D.columns = ['all','successful','failed','cancelled']\ncompare_L2D.loc['total'] = compare_L2D.sum(axis=0)\n\ndef get_perc(val, col):\n    return (float(val) \/ float(compare_L2D[col]['total']))*100\n\ncompare_L2D['all_perc'] = compare_L2D['all'].apply(get_perc, args=('all',))\ncompare_L2D['success_perc'] = compare_L2D['successful'].apply(get_perc, args=('successful',))\ncompare_L2D['failed_perc'] = compare_L2D['failed'].apply(get_perc, args=('failed',))\ncompare_L2D['cancelled_perc'] = compare_L2D['cancelled'].apply(get_perc, args=('cancelled',))\n\ncompare_L2D[['success_perc','failed_perc']][:6].sort_index().plot(kind='bar', figsize=(10,5), title = \"Distribution of time between launch and deadline for successful and failed campaigns\")","191e9f51":"n = 'create_to_launch_days'\ncompare_C2L = pd.concat([kickstarter[n].apply(return_date_bins).value_counts(),successful_kickstarter[n].apply(return_date_bins).value_counts(),failed_kickstarter[n].apply(return_date_bins).value_counts(),cancelled_kickstarter[n].apply(return_date_bins).value_counts()], axis=1)\ncompare_C2L.columns = ['all','successful','failed','cancelled']\ncompare_C2L.loc['total'] = compare_C2L.sum(axis=0)\n\ncompare_C2L['all_perc'] = compare_C2L['all'].apply(get_perc, args=('all',))\ncompare_C2L['success_perc'] = compare_C2L['successful'].apply(get_perc, args=('successful',))\ncompare_C2L['failed_perc'] = compare_C2L['failed'].apply(get_perc, args=('failed',))\ncompare_C2L['cancelled_perc'] = compare_C2L['cancelled'].apply(get_perc, args=('cancelled',))\n\nprint(ttest_ind(failed_kickstarter[n], successful_kickstarter[n]))\nprint(\"Failed mean: \", failed_kickstarter[n].mean())\nprint(\"Successful mean: \", successful_kickstarter[n].mean())\n\ncompare_C2L[['success_perc','failed_perc']][:7].sort_index().plot(kind='bar', figsize=(10,5), title = \"Distribution of time between creation to launch for successful and failed campaigns\")","4be2fe19":"# Are campaigns that have longer than 1 week between creation and launch more likely to be successful?\ncompare_C2L","008f3abb":"compare_L2D[['cancelled_perc','all_perc']][:6].sort_index().plot(kind='bar', figsize=(10,5), title = \"Distribution of time between launch and deadline for cancelled versus all campaigns\")","89db67d1":"def get_goal_buckets(val):\n    if val < 1001:\n        return \"0-1000\"\n    elif val < 5001:\n        return \"1001-5000\"\n    elif val < 10001:\n        return \"5001-10000\"\n    elif val < 50001:\n        return \"10001-50000\"\n    else:\n        return \"50001+\"\n\nn = 'goal'\ncompare_goal = pd.concat([kickstarter[n].apply(get_goal_buckets).value_counts(),successful_kickstarter[n].apply(get_goal_buckets).value_counts(),failed_kickstarter[n].apply(get_goal_buckets).value_counts(),cancelled_kickstarter[n].apply(get_goal_buckets).value_counts()], axis=1)\ncompare_goal.columns = ['all','successful','failed','cancelled']\ncompare_goal.loc['total'] = compare_goal.sum(axis=0)\n\ncompare_goal['all_perc'] = compare_goal['all'].apply(get_perc, args=('all',))\ncompare_goal['success_perc'] = compare_goal['successful'].apply(get_perc, args=('successful',))\ncompare_goal['failed_perc'] = compare_goal['failed'].apply(get_perc, args=('failed',))\ncompare_goal['cancelled_perc'] = compare_goal['cancelled'].apply(get_perc, args=('cancelled',))\n\ncompare_goal[['success_perc','failed_perc','cancelled_perc']][:5].sort_index().plot(kind='bar', figsize=(10,5), title = \"Distribution of goal for successful, failed and cancelled campaigns\")","f330bc5b":"# What failure rate does a goal above 50K have?\n\nprint(\"Number of successful kickstarters with goal over 50k:\", len(successful_kickstarter[successful_kickstarter['goal'] >= 50000]))\nprint(\"Number of successful kickstarters with goal under 50k:\", len(successful_kickstarter[successful_kickstarter['goal'] < 50000]))\nprint(\"Number of failed kickstarters with goal over 50k:\", len(failed_kickstarter[failed_kickstarter['goal'] >= 50000]))\nprint(\"Number of failed kickstarters with goal over 50k:\", len(failed_kickstarter[failed_kickstarter['goal'] < 50000]))\n\nprint(\"Success mean:\", successful_kickstarter['goal'].median())\nprint(\"Failed mean:\", failed_kickstarter['goal'].median())","776acbf0":"from scipy.stats import ttest_ind\n\nprint(ttest_ind(successful_kickstarter['name_len_clean'], failed_kickstarter['name_len_clean']))\nprint(ttest_ind(successful_kickstarter['blurb_len_clean'], failed_kickstarter['blurb_len_clean']))\nprint(ttest_ind(failed_kickstarter['launch_to_deadline_days'], successful_kickstarter['launch_to_deadline_days']))\nprint(ttest_ind(successful_kickstarter['create_to_launch_days'], failed_kickstarter['create_to_launch_days']))\nprint(ttest_ind(failed_kickstarter['goal'], successful_kickstarter['goal']))\n\nprint(\"Failed kickstarter average goal\", failed_kickstarter['goal'].mean())\nprint(\"Successful kickstarter average goal\", successful_kickstarter['goal'].mean())","fdcc0982":"# Launched weekday distribution by state\ncompare_launched_df = pd.concat([successful_kickstarter['launched_at_weekday'].value_counts(), failed_kickstarter['launched_at_weekday'].value_counts()], axis=1)\ncompare_launched_df.columns = ['successful','failed']\ncompare_L2D.loc['total'] = compare_C2L.sum(axis=0)\n\ncompare_launched_df['success_perc'] = compare_launched_df['successful'].apply(get_perc, args=('successful',))\ncompare_launched_df['failed_perc'] = compare_launched_df['failed'].apply(get_perc, args=('failed',))\ncompare_launched_df.index = [\"(5) Friday\",\"(1) Monday\",\"(6) Saturday\",\"(7) Sunday\",\"(4) Thursday\",\"(2) Tuesday\",\"(3) Wednesday\"]\ncompare_launched_df = compare_launched_df.sort_index()\n\ncompare_launched_df[['success_perc','failed_perc']].plot(kind='bar', figsize=(10,5), title = \"Distribution of weekday launch for successful and failed campaigns\")","20141007":"# How much likely are campaigns launched on a Tuesday to be successful than average?\nprint(compare_launched_df)","b890ed2c":"# Deadline weekday distribution by state\ncompare_deadline_df = pd.concat([successful_kickstarter['deadline_weekday'].value_counts(), failed_kickstarter['deadline_weekday'].value_counts()], axis=1)\ncompare_deadline_df.columns = ['successful','failed']\ncompare_L2D.loc['total'] = compare_C2L.sum(axis=0)\n\ncompare_deadline_df['success_perc'] = compare_deadline_df['successful'].apply(get_perc, args=('successful',))\ncompare_deadline_df['failed_perc'] = compare_deadline_df['failed'].apply(get_perc, args=('failed',))\n\ncompare_deadline_df[['success_perc','failed_perc']].plot(kind='bar', figsize=(10,5), title = \"Distribution of weekday deadline for successful and failed campaigns\")","48489008":"def launched_tues(val):\n    if val == \"Tuesday\":\n        return 1\n    else:\n        return 0\n    \nkickstarter['LaunchedTuesday'] = kickstarter['launched_at_weekday'].apply(launched_tues)\n\ndef deadline_weekend(val):\n    if val == \"Saturday\":\n        return 1\n    elif val == \"Sunday\":\n        return 1\n    else:\n        return 0\n    \nkickstarter['DeadlineWeekend'] = kickstarter['deadline_weekday'].apply(deadline_weekend)","2883636d":"kickstarter['category'].value_counts().plot(kind = 'bar',title = 'Category Distribution', figsize=(15,5))","aa98bdd4":"# What is the average goal amount per category?\nkickstarter_cat_goal = kickstarter.groupby(['category'])[['goal']].mean()\nkickstarter_cat_goal = kickstarter_cat_goal.unstack()\nkickstarter_cat_goal['goal'].sort_values(ascending=False).plot(kind='bar', figsize=(15,5), title = \"Average goal amount per category\")","fc8dfc36":"# What is the range of goal amount per category?\nkickstarter_cat_goal_2 = kickstarter.groupby(['category'])[['goal']].agg([min,max])\nkickstarter_cat_goal_2 = kickstarter_cat_goal_2['goal']\nkickstarter_cat_goal_2['range'] = kickstarter_cat_goal_2['max'] - kickstarter_cat_goal_2['min']\nkickstarter_cat_goal_2['range'].sort_values(ascending=False).plot(kind='bar', figsize=(15,5), title = \"Range of goal amount per category\")","78e1d510":"We can see that campaigns are more likely to be successful if they are launched on a Tuesday. And are more likely to fail if they have a deadline on a weekend. So, we will create new boolean variables for LaunchedTuesday and DeadlineWeekend.","d5856325":"### Summarizing and exploring the data","5026265d":"As you can see, using a p-value of <.001, the differences in sample distribution for successful and failed campaigns are *statistically significant* for \"name length cleaned\", \"blurb length cleaned\", \"launch to deadline days\" and \"goal\", but not for \"create to launch days\".","537d3d07":"### Comparing successful, failed and cancelled campaigns","e37a4bc8":"### Are there statistically significant differences between successful campaigns and failed campaigns?","fb0b356f":"# Kickstarter Campaign Analysis\n\n- Understand the marketplace of Kickstarter including timing of campaigns posted, types of projects, location of campaigns, description of campaigns and more.\n- Provide insight into attributes that set campaigns up for a higher rate of success to inform campaign creation in the future.\n- Build a predictive model that allows us to identify high-failure-risk campaigns before they fail and maybe provide supplemental advice.","cf96290d":"Odds Ratio: \n- Number of successful campaigns with C2L less than 1 week: 1590\n- Number of successful campaigns with C2L greater than 1 week: 4428\n- Number of failed campaigns with C2L less than 1 week: 4528\n- Number of failed campaigns with C2L greater than 1 week: 6888\nOdds Ratio: 1.83 times more likely to be successful if the C2L days is greater than 1 week","26a3aa6a":"### Let's explore the categories of Kickstarter campaigns further.","2085a14c":"# Weekday versus success rates","aeeab0d2":"**NOTE:** skewed by categories with low volume.","fe682fc3":"### How do the goals vary based on successful, failed or cancelled campaigns?"}}