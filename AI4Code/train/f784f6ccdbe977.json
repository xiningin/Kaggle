{"cell_type":{"96be7f25":"code","e36c7bd8":"code","a6d68486":"markdown"},"source":{"96be7f25":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e36c7bd8":"import cv2 \nimport os\ndef eachFile(filepath):\n    pathDir = os.listdir(filepath);\n    for allDir in pathDir:\n        child = os.path.join('%s%s' % (filepath, allDir))\n        print(str(child)) # .decode('gbk')\u662f\u89e3\u51b3\u4e2d\u6587\u663e\u793a\u4e71\u7801\u95ee\u9898\n        #\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u901a\u9053\u6570\u548c\u4f4d\u6df1\u7684\u53c2\u6570\uff0c\n        #IMREAD_UNCHANGED = -1#\u4e0d\u8fdb\u884c\u8f6c\u5316\uff0c\u6bd4\u5982\u4fdd\u5b58\u4e3a\u4e8616\u4f4d\u7684\u56fe\u7247\uff0c\u8bfb\u53d6\u51fa\u6765\u4ecd\u7136\u4e3a16\u4f4d\u3002\n        #IMREAD_GRAYSCALE = 0#\u8fdb\u884c\u8f6c\u5316\u4e3a\u7070\u5ea6\u56fe\uff0c\u6bd4\u5982\u4fdd\u5b58\u4e3a\u4e8616\u4f4d\u7684\u56fe\u7247\uff0c\u8bfb\u53d6\u51fa\u6765\u4e3a8\u4f4d\uff0c\u7c7b\u578b\u4e3aCV_8UC1\u3002\n        #IMREAD_COLOR = 1#\u8fdb\u884c\u8f6c\u5316\u4e3aRGB\u4e09\u901a\u9053\u56fe\u50cf\uff0c\u56fe\u50cf\u6df1\u5ea6\u8f6c\u4e3a8\u4f4d\n        #IMREAD_ANYDEPTH = 2#\u4fdd\u6301\u56fe\u50cf\u6df1\u5ea6\u4e0d\u53d8\uff0c\u8fdb\u884c\u8f6c\u5316\u4e3a\u7070\u5ea6\u56fe\u3002\n        #IMREAD_ANYCOLOR = 4#\u82e5\u56fe\u50cf\u901a\u9053\u6570\u5c0f\u4e8e\u7b49\u4e8e3\uff0c\u5219\u4fdd\u6301\u539f\u901a\u9053\u6570\u4e0d\u53d8\uff1b\u82e5\u901a\u9053\u6570\u5927\u4e8e3\u5219\u53ea\u53d6\u53d6\u524d\u4e09\u4e2a\u901a\u9053\u3002\u56fe\u50cf\u6df1\u5ea6\u8f6c\u4e3a8\u4f4d\n        img = cv2.imread(str(child),-1);\n        #print (img);\n        #print (img.shape);\n        #print (img.dtype) ;\n        #print (img.min())\n        #print (img.max())\n        #print(img.shape[0])\n        #print(img.shape[1])\n        count0=0;\n        count1=0;\n        for i in range(0,img.shape[0]):\n            for j in range(0,img.shape[1]):\n                if(img[i][j]==0): count0+=1;\n                else: count1+=1;\n        #print(count0);\n        #print(count1);\n        print(count1\/(count0+count1),end = '\\n');\nfilePathC = \"..\/input\/remote-sensing-images-of-cultivated-land\/test\/\"\neachFile(filePathC)\n##\u521b\u5efa\u7a97\u53e3\u5e76\u663e\u793a\u56fe\u50cf\n#cv2.namedWindow(\"Image\")\n#cv2.imshow(\"Image\",img)\n#cv2.waitKey(0)\n##\u91ca\u653e\u7a97\u53e3\n#cv2.destroyAllWindows() ","a6d68486":"Calculate the proportion of cultivated land."}}