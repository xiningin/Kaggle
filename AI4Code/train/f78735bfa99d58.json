{"cell_type":{"59b915e5":"code","3098a083":"code","194afae5":"code","32a73220":"code","53044de5":"code","2b1569f7":"code","29a16758":"code","cf4646dd":"code","e3eb26c4":"code","fa948575":"code","58503136":"code","b737c1ca":"code","024da702":"code","224a3aa4":"code","21c7108c":"code","6cd446f9":"code","cb73cc1f":"markdown","c1c3c2ce":"markdown","3220e9ad":"markdown","9c4f44c5":"markdown","848e5323":"markdown","8b146ffe":"markdown","9c5e8f11":"markdown","8114d041":"markdown","81a8a085":"markdown","1ea949e2":"markdown","00d9afb2":"markdown","e0e5156c":"markdown","f41879ed":"markdown","b0620166":"markdown","f361766c":"markdown","48920ff4":"markdown","79b8bbc0":"markdown","95fe0f3d":"markdown"},"source":{"59b915e5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","3098a083":"df = pd.read_csv(\"\/kaggle\/input\/superbowl-history-1967-2020\/superbowl.csv\")\ndf.head()","194afae5":"df['year']= df['Date'].apply(lambda x: x.split()[2])\ndf.head()","32a73220":"df.dtypes","53044de5":"df = df.astype({'year': 'int'})\ndf.dtypes","2b1569f7":"import matplotlib.pyplot as plt\nstyle = dict(size = 10, color = 'gray')\nplt.style.use('seaborn-whitegrid')\nplt.rcParams[\"figure.figsize\"] = (20,6)\nplt.plot(df['year'], df['Loser Pts'], marker = \"o\")\nplt.plot(df['year'], df['Winner Pts'], marker = \"o\")\nplt.title(\"Number of Points Scored by the Winners and Losers of Each SuperBowl Game\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"Number of Points\")\nplt.legend()\nplt.annotate('Very close!', xy = (1991,18), xytext=(1992,5), arrowprops = dict(facecolor = 'green', shrink = 0.05))\nplt.annotate('Blowout!', xy = (1990,55), xytext=(1992,55), arrowprops = dict(facecolor = 'green', shrink = 0.05))\nplt.annotate('Wide Margins of Victory for a few years', xy = (1984,40), xytext=(1970,50), arrowprops = dict(facecolor = 'green', shrink = 0.05))\nplt.annotate(\"Fairly Tight Margins of Victory Since the Mid 2000's\", xy = (2004,35), xytext=(2010,50), ha = \"center\", arrowprops = dict(facecolor = 'green', shrink = 0.15))\nplt.show()","29a16758":"df[df['year'] == 1991]","cf4646dd":"df['Margin'] = df['Winner Pts'] - df['Loser Pts']\ndf['Margin'].describe()","e3eb26c4":"from scipy.interpolate import InterpolatedUnivariateSpline\ndf = df.sort_values('year')\nius = InterpolatedUnivariateSpline(df['year'],df['Margin'])\nxi = np.linspace(1967,2020, 1000)\nyi = ius(xi)\n\n# Mean Margin\nplt.plot(df['year'], np.ones(df['year'].shape[0])*13.907407)\n# One Standard Deviation Above\nplt.plot(df['year'], np.ones(df['year'].shape[0])*13.907407 + 10.314431)\n# One Standard Deviation Below\nplt.plot(df['year'], np.ones(df['year'].shape[0])*13.907407 - 10.314431)\n\nplt.scatter(df['year'], df['Margin'])\nplt.plot(xi, yi)\n\nplt.title(\"Is there any pattern in 'Margin of Victory' over the years?\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"Margin of Victory\")\nplt.show()","fa948575":"# entered by hand from wikipedia\nwinningConferenceEncoded = [0,0,1,1,1,0,1,1,1,1,1,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1,1,1,1,0,1,0,0,0,1,0,1,1,1,0,1,1]\npast70 = df[df['year'] >= 1970].copy()\npast70['WinningConferenceEncoded'] = pd.Series(winningConferenceEncoded)\npast70['LosingConferenceEncoded'] = 1 - past70['WinningConferenceEncoded']\npast70['WinningConference'] = past70['WinningConferenceEncoded'].map({0:'NFC', 1:'AFC'})\npast70['LosingConference'] = past70['LosingConferenceEncoded'].map({0:'NFC', 1:'AFC'})\npast70.drop('WinningConferenceEncoded', axis = 1, inplace = True)\npast70.drop('LosingConferenceEncoded', axis = 1, inplace = True)\npast70.head()","58503136":"winCols = ['WinningConference', 'Winner Pts' , 'year']\nloseCols = ['LosingConference', 'Loser Pts' , 'year']\n\n\nwin_df = past70[winCols].copy()\nwin_df = win_df.rename(columns = {'WinningConference':'Conference', 'Winner Pts' :'Points', 'year':\"Year\"})\nwin_df['Win'] = 1\n\nlose_df = past70[loseCols].copy()\nlose_df = lose_df.rename(columns = {'LosingConference':'Conference', 'Loser Pts' :'Points', 'year':\"Year\"})\nlose_df['Win'] = 0\n\nconference_info = win_df.append(lose_df, ignore_index = True, sort = False)\nconference_info.head()","b737c1ca":"nfc_info = conference_info[conference_info['Conference']  == 'NFC'].copy()\nnfc_info.rename(columns = {'Points':'NFC'}, inplace = True)\nnfc_info.sort_values('Year', inplace= True)\n\nafc_info = conference_info[conference_info['Conference']  == 'AFC'].copy()\nafc_info.rename(columns = {'Points':'AFC'}, inplace = True)\nafc_info.sort_values('Year', inplace= True)","024da702":"\nnfc_info['NFC Cumulative Wins'] = nfc_info['Win'].cumsum()\nafc_info['AFC Cumulative Wins'] = afc_info['Win'].cumsum()","224a3aa4":"import matplotlib.pyplot as plt\nstyle = dict(size = 10, color = 'gray')\nplt.style.use('seaborn-whitegrid')\nplt.rcParams[\"figure.figsize\"] = (20,6)\nplt.plot(nfc_info['Year'], nfc_info['NFC'], marker = \"o\")\nplt.plot(afc_info['Year'], afc_info['AFC'], marker = \"o\")\nplt.title(\"Number of Points Scored by the AFC and NFC of Each SuperBowl Game since 1970\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"Number of Points\")\nplt.legend()\nplt.annotate('The NFC Reigned for Several Years Here', xy = (1996,40), xytext=(1998,52), ha = \"left\", arrowprops = dict(facecolor = 'green', shrink = 0.05))\nplt.show()\n","21c7108c":"import matplotlib.pyplot as plt\nstyle = dict(size = 10, color = 'gray')\nplt.style.use('seaborn-whitegrid')\nplt.rcParams[\"figure.figsize\"] = (20,6)\nplt.title(\"Number of Superbowl Wins Accumulated by the AFC and NFC since 1970\")\nplt.plot(nfc_info['Year'], nfc_info['NFC Cumulative Wins'], marker = \"o\")\nplt.plot(afc_info['Year'], afc_info['AFC Cumulative Wins'], marker = \"o\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"Number of Wins\")\nplt.legend()\nplt.show()\n","6cd446f9":"conference_info['Tally'] = 1\nprint(conference_info.groupby(['Conference', 'Win']).count()['Tally'])\n\n","cb73cc1f":"# Conclusion\n\nWIth this notebook, I mainly wanted to brush up on my `matplotlib` skills.  Still, I found out a couple of interesting facts:\n\n * Ace Ventura: Pet Detective based a key plot point off of a real-life event (SuperBowl 25)\n * The NFC and the AFC are very close when it comes to \"total number of SuperBowl wins\" (26 to 25).\n \nAlso, this notebook showed how to use `scipy.interpolate`'s `InterpolatedUnivariateSpline` to smooth out time series data (in the Victory Margins plot).\n\n","c1c3c2ce":"# Loading in the Data\n\nWe begin by loading in the data and taking a look at the first five observations.","3220e9ad":"I don't really see a pattern.","9c4f44c5":"The next is the \"running total\" of superbowl wins by conference.","848e5323":"# Separating Years from the Dates\n\nIt would be useful to have a `year` column, so let's do that.","8b146ffe":"Now let's plot the margin of victory over time.","9c5e8f11":"Then we create a \"Cumulative Wins\" column.","8114d041":"You can see highlights of the game on [YouTube](https:\/\/www.youtube.com\/watch?v=XxsZf9G_W14).  The Bills kicked a field goal with a few seconds left to try to win the game, but they missed!  It appears as though the story of the [kicker](https:\/\/en.wikipedia.org\/wiki\/Scott_Norwood) was the insipration for Ray Finkle in [Ace Ventura: Pet Detective](https:\/\/en.wikipedia.org\/wiki\/Ace_Ventura:_Pet_Detective).","81a8a085":"> Now we can make two plots.  One is the the scores over the years by conference.","1ea949e2":"It looks like the NFC has had 26 superbowl victories since 1970, while the AFC has had 25 victories.  We can check this as follows.","00d9afb2":"# Dealing with Data Types\n\nLet's check to see what data types are we dealing with.","e0e5156c":"To help create the next couple of plots, I want to create two dataframes:  \n\n * one with all of the AFC info (including whether they won or not) and\n * one with all of the NFC info (including whether they won or not).\n \nThere may be a better way to do this, but, for now, we begin by creating a long data frame with the following variables:\n\n * Conference\n * Points\n * Year\n * Won\/Lost","f41879ed":"# Winners by Conference\n\n[Wikipedia](https:\/\/en.wikipedia.org\/wiki\/List_of_Super_Bowl_champions) has information on the conferences of the winners.  \n\nIt appears as though the NFL had a different conference structure before 1970 onwards, so we will restrict our attention to 1970 and onwards.","b0620166":"# A Closer Look at Victory Margins\n\nHas there been any sort of change in 'Victory Margins' over time?\n\nLet's create a variable called 'Victory Margin' and then compute its mean and standard deviation.","f361766c":"Let's make the `year` column an integer column.","48920ff4":"Then we split this up into an \"NFC\" data frame and an \"AFC\" data frame.","79b8bbc0":"Out of curiousity, what was the very close game in 1991?","95fe0f3d":"# Data Visualization\n\nLet's make a plot that helps us think about the following questions:\n\n * How many points did the winners and losers of each SuperBowl game score?\n * Were there any games that were very close?\n * Were there any blowouts?\n * Is there a \"trend\" in margin of victory over time?  In other words, are games getting \"closer\"?\n"}}