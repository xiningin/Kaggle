{"cell_type":{"c537f237":"code","6c5667dd":"code","4fac9c82":"code","f1033d2d":"code","966cfeff":"code","6b84ac7e":"code","32d9d1e4":"code","faa989b7":"code","651a34db":"code","0ead344c":"code","a9019e7f":"markdown","fe118189":"markdown","c298ea08":"markdown","ac6e8894":"markdown","96b32e76":"markdown","e5890fef":"markdown","c44abcd2":"markdown","ae0e5ead":"markdown","721a5e84":"markdown","4006c3d6":"markdown","6f3499c1":"markdown","b85f7c0c":"markdown","5498ea17":"markdown","2cb2a8fa":"markdown","8a1aa103":"markdown","f240ff81":"markdown"},"source":{"c537f237":"import string\nimport numpy as np\nimport pandas as pd","6c5667dd":"morse_to_alphanumeric = {'.-':'A','-...':'B','-.-.':'C', '-..':'D','.':'E',\n                         '..-.':'F','--.':'G','....':'H','..':'I','.---':'J',\n                         '-.-':'K','.-..':'L','--':'M','-.':'N','---':'O',\n                         '.--.':'P','--.-':'Q','.-.':'R','...':'S','-':'T',\n                         '..-':'U','...-':'V','.--':'W','-..-':'X','-.--':'Y','--..':'Z',\n                        \n                         '.----':'1','..---':'2','...--':'3','....-':'4','.....':'5',\n                         '-....':'6','--...':'7','---..':'8','----.':'9','-----':'0',\n                        \n                         '.-...':'&','.----.':\"'\",'.--.-.':'@','-.--.-':')','-.--.':'(',\n                         '---...':':','--..--':',','-...-':'=','-.-.--':'!','.-.-.-':'.',\n                         '-....-':'-','.-.-.':'+','..--..':'?','-..-.':'\/'\n                        }\n\nalphanumeric_to_morse = {'A':'.-','B':'-...','C':'-.-.', 'D':'-..','E':'.',\n                         'F':'..-.','G':'--.','H':'....','I':'..','J':'.---',\n                         'K':'-.-','L':'.-..','M':'--','N':'-.','O':'---',\n                         'P':'.--.','Q':'--.-','R':'.-.','S':'...','T':'-',\n                         'U':'..-','V':'...-','W':'.--','X':'-..-','Y':'-.--','Z':'--..',\n                        \n                         '1':'.----','2':'..---','3':'...--','4':'....-','5':'.....',\n                         '6':'-....','7':'--...','8':'---..','9':'----.','0':'-----',\n                        \n                         '&':'.-...',\"'\":'.----.','@':'.--.-.',')':'-.--.-','(':'-.--.',\n                         ':':'---...',',':'--..--','=':'-...-','!':'-.-.--','.':'.-.-.-',\n                         '-':'-....-','+':'.-.-.','?':'..--..','\/':'-..-.'}","4fac9c82":"def preprocess_sentence(sentence):\n    '''\n    Returns a list of alphanumeric words\n    sentence: string (the sentence to be translated)\n        Example: sentence = 'Hello, how are you ?'\n    '''\n    \n    assert type(sentence) == str, \"Error, Argument 'sentence' is not a string\"\n    \n    upper_sentence = sentence.upper()\n    \n    for pct in string.punctuation:\n        upper_sentence = upper_sentence.replace(pct, \"\")\n        \n    words = [elm.replace(\" \",\"\") for elm in upper_sentence.split()]\n    \n    return words\n\ndef get_morse_words(words):\n    '''\n    Returns the list of morse words\n    words: list of alphanumeric words\n        Example: words = ['HELLO', 'HOW', 'ARE', 'YOU']\n    '''\n\n    assert type(words) == list, \"Error, Argument 'words' is not a list\"\n    for word in words:\n        assert type(word) == str, \"Error, At least one word is not a string\"\n    \n    new_words = []\n    for word in words:\n        new_word = ''\n        for letter in word:\n            new_word += ' '+str(np.vectorize(alphanumeric_to_morse.get)(letter))\n        new_words.append(new_word.lstrip())\n        \n    return new_words\n\ndef get_morse_sentence(list_of_morse_words):\n    '''\n    Returns the aggregated string of morse words\n    list_of_morse_words: list of morse words\n        Example: list_of_morse_words = ['.... . .-.. .-.. ---', '.... --- .--', '.- .-. .', '-.-- --- ..-']\n    '''\n    \n    assert type(list_of_morse_words) == list, \"Error, Argument 'list_of_morse_words' is not a list\"\n    for morse_word in list_of_morse_words:\n        assert type(morse_word) == str, \"Error, At least one word is not a string\"\n        \n    new_translated_sentence = ''\n    for i in list_of_morse_words:\n        if list_of_morse_words[-1] != i:\n            new_translated_sentence += i + ' \/ '\n        else:\n            new_translated_sentence += i\n            \n    return new_translated_sentence","f1033d2d":"def translation_to_morse(sentence, verbose=0):\n    '''\n    Return translation of sentence in morse code\n    sentence: the string to be translated\n    verbose: boolean (1 for verbose, 0 otherwise)\n        Example: sentence = 'Hello, how are you ?', verbose=1\n    '''\n    \n    assert type(sentence) == str, \"Error, Argument 'sentence' is not a string\"\n    \n    words = preprocess_sentence(sentence)\n    if verbose==1:\n        print('List of Alphanumeric words: ',words)\n        print('Step 1 out of 3 completed\\n')\n        \n    translated_sentence = get_morse_words(words)\n    if verbose==1:\n        print('List of Morse words: ',translated_sentence)\n        print('Step 2 out of 3 completed\\n')\n        \n    result = get_morse_sentence(translated_sentence)\n    if verbose==1:\n        print('Translated sentence: ', result)\n        print('Step 3 out of 3 completed\\n')\n        \n    print('Execution Successful')\n    return result","966cfeff":"sentence = 'Hello, how are you'\ntranslation_to_morse(sentence, verbose=1)","6b84ac7e":"def translation_to_alphanumeric(sentence, verbose=0):\n    \n    assert type(sentence) == str, \"Error, Argument 'sentence' is not a string\"\n    \n    words = sentence.split('\/')\n    words = [word.lstrip().rstrip().split(' ') for word in words]\n    if verbose==1:\n        print('List of Morse words: ',words)\n        print('Step 1 out of 3 completed\\n')\n        \n    alpha_words = []\n    for word in words:\n        alpha_word = ''\n        for morse_letter in word:\n            alpha_word += str(np.vectorize(morse_to_alphanumeric.get)(morse_letter))\n        alpha_words.append(alpha_word)\n    if verbose==1:\n        print('List of Alphanumeric words: ',alpha_words)\n        print('Step 2 out of 3 completed\\n')\n        \n    result = ''\n    for elm in alpha_words:\n        result+=' '+elm\n    if verbose==1:\n        print('Translated sentence sentence: ',result.lstrip())\n        print('Step 3 out of 3 completed\\n')\n        \n    print('Execution Successful')\n    return result.lstrip()","32d9d1e4":"sentence = '.... .- .--. .--. -.-- \/ -- --- .-. ... . \/ -.-. --- -.. . \/ -.. .- -.--'\ntranslation_to_alphanumeric(sentence, verbose=1)","faa989b7":"data = {'index':np.arange(4),'Alphanumeric_Sentences':['Hello, how are you ?', \"What's up ?\", 'I want to read more data science articles !', 'Happy morse code day']}\ndf = pd.DataFrame(data)","651a34db":"df['Alphanumeric_to_Morse'] = df['Alphanumeric_Sentences'].apply(translation_to_morse)\ndf['Morse_to_Alphanumeric'] = df['Alphanumeric_to_Morse'].apply(translation_to_alphanumeric)","0ead344c":"df.head()","a9019e7f":"<font color='blue' size='4'>Applying previous converters on the dataframe<br><br>.- .--. .--. .-.. -.-- .. -. --. \/ .--. .-. . ...- .. --- ..- ... \/ -.-. --- -. ...- . .-. - . .-. ... \/ --- -. \/ - .... . \/ -.. .- - .- ..-. .-. .- -- .<\/font>","fe118189":"# **References** \n## .-. . ..-. . .-. . -. -.-. . ...\n\n* https:\/\/morsecode.world\/international\/morse.html\n\n* https:\/\/www.daysoftheyear.com\/days\/morse-code-day\/","c298ea08":"<img src = 'https:\/\/hamseatingchicken.files.wordpress.com\/2017\/04\/happy-morse-code-day.jpg?w=840'>","ac6e8894":"<font color='blue' size='4'>Creating both Morse to Aplhanumeric and Alphanumeric to Morse dictionaries<br><br>-.-. .-. . .- - .. -. --. \/ -... --- - .... \/ -- --- .-. ... . \/ - --- \/ .- .--. .-.. .... .- -. ..- -- . .-. .. -.-. \/ .- -. -.. \/ .- .-.. .--. .... .- -. ..- -- . .-. .. -.-. \/ - --- \/ -- --- .-. ... . \/ -.. .. -.-. - .. --- -. .- .-. .. . ...<\/font>","96b32e76":"**<font color=\"red\" size=\"4\">- .... .- -. -.- \/ -.-- --- ..- \/ ..-. --- .-. \/ - .- -.- .. -. --. \/ - .... . \/ - .. -- . \/ - --- \/ .-. . .- -.. \/ - .... .. ... \/ -. --- - . -... --- --- -.- \/ .. \/ .... --- .--. . \/ - .... .- - \/ .. \/ .-- .- ... \/ .- -... .-.. . \/ - --- \/ .- -. ... .-- . .-. \/ -.-- --- ..- .-. \/ --.- ..- . ... - .. --- -. ... \/ --- .-. \/ -.-- --- ..- .-. \/ -.-. ..- .-. .. --- ... .. - -.-- \/ .- -. -.. \/ - .... .- - \/ .. - \/ .-- .- ... \/ --.- ..- .. - . \/ ..- -. -.. . .-. ... - .- -. -.. .- -... .-.. . \/ .. ..-. \/ -.-- --- ..- \/ .-.. .. -.- . -.. \/ - .... .. ... \/ - . -..- - \/ .--. .-.. . .- ... . \/ ..- .--. ...- --- - . \/ .. - \/ .. \/ .-- .. .-.. .-.. \/ .-. . .- .-.. .-.. -.-- \/ .- .--. .--. .-. . -.-. .. .- - . \/ .- -. -.. \/ - .... .. ... \/ .-- .. .-.. .-.. \/ -- --- - .. ...- .- - . \/ -- . \/ - --- \/ -- .- -.- . \/ -- --- .-. . \/ .- -. -.. \/ -... . - - . .-. \/ -.-. --- -. - . -. -<\/font>**","e5890fef":"<font color='blue' size='4'>Example<br><br>. -..- .- -- .--. .-.. .<\/font>\n","c44abcd2":"# **Mapping dictionaries** \n## -- .- .--. .--. .. -. --. \/ -.. .. -.-. - .. --- -. .- .-. .. . ...","ae0e5ead":"<font color='blue' size='4'>Results<br><br>.-. . ... ..- .-.. - ...<\/font>","721a5e84":"# **Import libraries** \n## .. -- .--. --- .-. - \/ .-.. .. -... .-. .- .-. .. . ...","4006c3d6":"**<font size=\"4\">.. \/ .... --- .--. . \/ -.-- --- ..- \/ .-- .. .-.. .-.. \/ . -. .--- --- -.-- \/ - .... .. ... \/ -. --- - . -... --- --- -.-<\/font>**","6f3499c1":"# **Morse to Alphanumeric** \n## -- --- .-. ... . \/ - --- \/ .- .-.. .--. .... .- -. ..- -- . .-. .. -.-.","b85f7c0c":"# **Alphanumeric to Morse** \n## .- .-.. .--. .... .- -. ..- -- . .-. .. -.-. \/ - --- \/ -- --- .-. ... .","5498ea17":"<font color='blue' size='4'>Example<br><br>. -..- .- -- .--. .-.. .<\/font>","2cb2a8fa":"<font color='red' size='4'>Thank you for taking the time to read this notebook. I hope that I was able to answer your questions or your curiosity and that it was quite understandable. If you liked this notebook, please upvote it. I will really appreciate and this will motivate me to make more and better content !<\/font>","8a1aa103":"<font color='blue' size='4'>Creating dataframe<br><br>-.-. .-. . .- - .. -. --. \/ -.. .- - .- ..-. .-. .- -- .<\/font>","f240ff81":"# **With Pandas**\n## .-- .. - .... \/ .--. .- -. -.. .- ..."}}