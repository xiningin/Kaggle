{"cell_type":{"d8309bd3":"code","fc752e7b":"code","3549496d":"code","42df3486":"code","bc87e5d3":"code","fadadff8":"code","deb78b22":"code","6df71f77":"code","697400cb":"code","d2da062d":"code","73e07a07":"code","e6c65337":"code","e621ca4d":"code","f977cf37":"code","4d4bde31":"code","5a0a7c82":"code","e2920895":"code","b4d1eedd":"code","b7db0ed4":"code","a600ffea":"code","918ee1ce":"code","d38eb61f":"code","e7251e28":"code","142302fd":"code","31382f52":"code","55942c1e":"code","a36457e5":"code","0c64d2bc":"code","ee0c524f":"code","0f8b5cb3":"code","10f0c6d2":"markdown","a638d4db":"markdown","d6f4809c":"markdown","e5608214":"markdown","cf522f36":"markdown","3c42be4c":"markdown","d98c88bd":"markdown","5f6123c9":"markdown","6e278d68":"markdown","eb430909":"markdown","edfb962c":"markdown"},"source":{"d8309bd3":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport math\npd.options.display.max_columns = 999\n\nfrom catboost import CatBoostRegressor\nfrom sklearn.model_selection import train_test_split","fc752e7b":"pitch_stat = pd.read_csv('\/kaggle\/input\/mlb-statcast-data\/Statcast_2019.csv')\npitch_stat = pitch_stat[(pitch_stat['balls'] <= 3)& (pitch_stat['strikes'] <= 2)]","3549496d":"pitch_stat = pitch_stat[(pitch_stat.plate_z > 0) & (pitch_stat.plate_z < 5)]","42df3486":"pitch_stat['yR'] = 36.7-pitch_stat.release_extension\npitch_stat['tR'] = (-pitch_stat.vy0 - (pitch_stat.vy0**2-2*pitch_stat.ay*(50-pitch_stat.yR))**0.5)\/pitch_stat.ay\npitch_stat['vxR'] = pitch_stat.vx0 + pitch_stat.ax * pitch_stat.tR\npitch_stat['vyR'] = pitch_stat.vy0 + pitch_stat.ay * pitch_stat.tR\npitch_stat['vzR'] = pitch_stat.vz0 + pitch_stat.az * pitch_stat.tR\npitch_stat['dv0'] = pitch_stat.release_speed - (pitch_stat.vxR**2+pitch_stat.vyR**2+pitch_stat.vzR**2)**0.5\/1.467\npitch_stat['tf'] = (-pitch_stat.vyR-(pitch_stat.vyR**2-2*pitch_stat.ay*(pitch_stat.yR-17\/12))**0.5)\/pitch_stat.ay\n\npitch_stat['x_tunnel'] = pitch_stat.release_pos_x + pitch_stat.vxR * pitch_stat.tf + pitch_stat.ax * pitch_stat.tf*pitch_stat.tf \npitch_stat['z_tunnel'] = pitch_stat.release_pos_z + pitch_stat.vzR * pitch_stat.tf + pitch_stat.az * pitch_stat.tf*pitch_stat.tf \n\npitch_stat['vxbar'] = (2*pitch_stat.vxR+pitch_stat.ax*pitch_stat.tf)\/2\npitch_stat['vybar'] = (2*pitch_stat.vyR+pitch_stat.ay*pitch_stat.tf)\/2\npitch_stat['vzbar'] = (2*pitch_stat.vzR+pitch_stat.az*pitch_stat.tf)\/2\npitch_stat['vbar'] = (pitch_stat.vxbar**2+pitch_stat.vybar**2+pitch_stat.vzbar**2)**0.5\n\n","bc87e5d3":"pitch_stat['inning_diff'] = pitch_stat['inning_topbot'].ne(pitch_stat['inning_topbot'].shift(-1)).astype(int)\npitch_stat['AB_diff'] =  pitch_stat['at_bat_number'].diff(-1)","fadadff8":"pitch_stat['pitch_type_diff'] = pitch_stat['pitch_type'].ne(pitch_stat['pitch_type'].shift(-1)).astype(int)","deb78b22":"pitch_stat  = pitch_stat[(pitch_stat['inning_diff'] == 0) & (pitch_stat['AB_diff'] == 0) & (pitch_stat['pitch_type_diff'] == 1)]","6df71f77":"pitch_stat['tunnel_xdiff'] = pitch_stat['x_tunnel'].diff(-1)\npitch_stat['tunnel_zdiff'] = pitch_stat['z_tunnel'].diff(-1)","697400cb":"pitch_stat['on_1b_code'] = 1-pitch_stat.on_1b.isna().astype(int)\npitch_stat['on_2b_code'] = 1-pitch_stat.on_2b.isna().astype(int)\npitch_stat['on_3b_code'] = 1-pitch_stat.on_3b.isna().astype(int)","d2da062d":"pitch_stat = pitch_stat.dropna(subset=['release_speed','pitch_type','plate_x' ,'plate_z', 'balls', 'strikes','on_1b_code','on_2b_code','on_3b_code','delta_run_exp','home_team','stand','p_throws'])","73e07a07":"X = pitch_stat[['pitch_type','plate_x' ,'plate_z', 'balls', 'strikes','on_1b_code','on_2b_code','on_3b_code','home_team','stand','p_throws']]\ny = pitch_stat['delta_run_exp']","e6c65337":"X_train, X_test, y_train, y_test = train_test_split( X, y, test_size=0.5, random_state=42)","e621ca4d":"cat_features = [0,3,4,5,6,7,8,9,10]\nmodel = CatBoostRegressor()\n# Fit model\nmodel.fit(X_train, y_train, cat_features)","f977cf37":"pitch_stat['expected_run'] =  model.predict(X)\npitch_stat['excess_run'] =  pitch_stat['delta_run_exp'] - pitch_stat['expected_run']","4d4bde31":"plt.ylim([-0.02,0.02])\nplt.xlim([85,100])\nplt.title('Excess run vs fastball release speed')\nsns.regplot(pitch_stat[pitch_stat['pitch_type'] == 'FF']['release_speed'],pitch_stat[pitch_stat['pitch_type'] == 'FF']['excess_run'],scatter=False)","5a0a7c82":"X = pitch_stat[['pitch_type','plate_x' ,'plate_z', 'balls', 'strikes','on_1b_code','on_2b_code','on_3b_code','home_team','stand','p_throws','release_speed']]\ny = pitch_stat['delta_run_exp']","e2920895":"X_train, X_test, y_train, y_test = train_test_split( X, y, test_size=0.2, random_state=42)","b4d1eedd":"cat_features = [0,3,4,5,6,7,8,9,10]\nmodel = CatBoostRegressor()\n# Fit model\nmodel.fit(X_train, y_train, cat_features)","b7db0ed4":"pitch_stat['expected_run'] =  model.predict(X)\npitch_stat['excess_run'] =  pitch_stat['delta_run_exp'] - pitch_stat['expected_run']","a600ffea":"plt.ylim([-0.01,0.01])\nplt.xlim([85,100])\nsns.regplot(pitch_stat[pitch_stat['pitch_type'] == 'FF']['release_speed'],pitch_stat[pitch_stat['pitch_type'] == 'FF']['excess_run'],scatter=False)\nplt.title('Excess run vs fastball release speed')","918ee1ce":"plt.xlim([0,3])\nplt.ylim([-0.01,0.01])\nsns.regplot(abs(pitch_stat[pitch_stat['pitch_type'] == 'FF']['tunnel_xdiff']),pitch_stat[pitch_stat['pitch_type'] == 'FF']['excess_run'],scatter=False,order=2)\nplt.title('Excess run fastball vs horizontal tunnel distance')","d38eb61f":"plt.xlim([-1,3])\nplt.ylim([-0.01,0.01])\nsns.regplot(pitch_stat[pitch_stat['pitch_type'] == 'FF']['tunnel_zdiff'],pitch_stat[pitch_stat['pitch_type'] == 'FF']['excess_run'],scatter=False,order=2)\nplt.title('Excess run fastball vs vertical tunnel distance')","e7251e28":"plt.xlim([0,3])\nplt.ylim([-0.01,0.01])\nsns.regplot(abs(pitch_stat[pitch_stat['pitch_type'] == 'CH']['tunnel_xdiff']),pitch_stat[pitch_stat['pitch_type'] == 'CH']['excess_run'],scatter=False,order=2)\nplt.title('Excess run changeup vs horizontal tunnel distance')","142302fd":"plt.xlim([-1.5,2])\nplt.ylim([-0.01,0.01])\nsns.regplot(pitch_stat[pitch_stat['pitch_type'] == 'CH']['tunnel_zdiff'],pitch_stat[pitch_stat['pitch_type'] == 'CH']['excess_run'],scatter=False,order=2)\nplt.title('Excess run fastball vs vertical tunnel distance')","31382f52":"plt.xlim([0,3])\nplt.ylim([-0.01,0.01])\nsns.regplot(abs(pitch_stat[pitch_stat['pitch_type'] == 'FC']['tunnel_xdiff']),pitch_stat[pitch_stat['pitch_type'] == 'FC']['excess_run'],scatter=False,order=2)\nplt.title('Excess run cutter vs horizontal tunnel distance')","55942c1e":"plt.xlim([-1.5,2])\nplt.ylim([-0.01,0.01])\nsns.regplot(pitch_stat[pitch_stat['pitch_type'] == 'FC']['tunnel_zdiff'],pitch_stat[pitch_stat['pitch_type'] == 'FC']['excess_run'],scatter=False,order=2)\nplt.title('Excess run cutter vs vertical tunnel distance')","a36457e5":"plt.xlim([0,3])\nplt.ylim([-0.01,0.01])\nsns.regplot(abs(pitch_stat[pitch_stat['pitch_type'] == 'SL']['tunnel_xdiff']),pitch_stat[pitch_stat['pitch_type'] == 'SL']['excess_run'],scatter=False,order=2)\n\nplt.title('Excess run slider vs horizontal tunnel distance')","0c64d2bc":"plt.xlim([-2.5,1.5])\nplt.ylim([-0.01,0.01])\nsns.regplot(pitch_stat[pitch_stat['pitch_type'] == 'SL']['tunnel_zdiff'],pitch_stat[pitch_stat['pitch_type'] == 'SL']['excess_run'],scatter=False,order=2)\n\nplt.title('Excess run slider vs vertical tunnel distance')","ee0c524f":"plt.xlim([0,3])\nplt.ylim([-0.01,0.01])\nsns.regplot(abs(pitch_stat[pitch_stat['pitch_type'] == 'CU']['tunnel_xdiff']),pitch_stat[pitch_stat['pitch_type'] == 'CU']['excess_run'],scatter=False,order=2)\n\nplt.title('Excess run curveball vs horizontal tunnel distance')","0f8b5cb3":"plt.xlim([-2.5,1])\nplt.ylim([-0.01,0.01])\nsns.regplot(pitch_stat[pitch_stat['pitch_type'] == 'CU']['tunnel_zdiff'],pitch_stat[pitch_stat['pitch_type'] == 'CU']['excess_run'],scatter=False,order=2)\n\nplt.title('Excess run curveball vs vertical tunnel distance')","10f0c6d2":"The methodology is to try to measure the excess run brought by tunneling. In Statcast data, 'delta_run_exp' is provided to represent the run expectancy change between pitches, and if tunneling effect exist it should yield a lower run expactency than prediction by a model that don't include tunneling effect. Let create a model without pitch speed as an example:","a638d4db":"The model use Catboost to regress upon change in run expectancy:","d6f4809c":"The code below try to quatify the effect of pitch tunnel accorss different pitch type. There are multiple article talks about pitch tunneling from [Baseball Prospectus](https:\/\/www.baseballprospectus.com\/news\/article\/31030\/prospectus-feature-introducing-pitch-tunnels\/) or [Fangraphs](https:\/\/tht.fangraphs.com\/pitch-tunneling-is-it-real-and-how-do-pitchers-actually-pitch\/). However, it could couple with other effect, for example a pitch that land way outside the strike zone can't really tunnel with other pitches, but the pitch is bad due to lack of control anyway. So for better modelling a model that control for pitch location (and other factors) are needed.","e5608214":"Calculate inferred pitch data using [Alan Nathan](https:\/\/twitter.com\/pobguy) calculator","cf522f36":"From above figures besides changeup and curveball tunneling don't seems to really make an impact on run scored","3c42be4c":"Here pitch tunneling is defined by difference of ball tracjectory on 23 feet 8 inches from home plate, per Baseball Prospectus definition.","d98c88bd":"For pitches in sample there is a difference in pitch two in two conseqence pitches and it's on the same at bat.","5f6123c9":"Excess run is defined by true change of run expectancy minus the model output","6e278d68":"The above show for higher release speed the excess run is more negative, which means faster pitches give up less run and hence are better than slower one and exactly what we would expect.\n\nNow we add back release speed in to see effect of pitch tunneling","eb430909":"The above graph show roughly no excess run accross release speed, which mean it's well calibrated with respect to speed. Next ","edfb962c":"Plot a graph of release speed of fastball vs excess run"}}