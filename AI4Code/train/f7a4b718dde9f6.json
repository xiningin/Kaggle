{"cell_type":{"87598c2f":"code","1a5ed3d1":"code","5d4b394b":"code","8f1793f9":"code","362f64dd":"code","2a9151fb":"code","a95e9899":"code","8f55846f":"code","0d3f807b":"code","e3665a74":"code","6878d120":"code","da53c153":"code","98ae070e":"code","3f5f6d40":"code","acaa05bd":"code","d9c62f51":"code","0fe0c04a":"code","6651abc8":"code","5a12776d":"code","4472a983":"code","86aa3322":"code","f3bc5041":"code","779015a5":"code","e46f102c":"code","6be8b0a8":"code","b1405f1f":"code","95cd535b":"code","5fba8b56":"code","639237fe":"code","62f414d9":"code","8dac820c":"code","13acf4e0":"code","656ea110":"code","6e0d78ec":"code","1ecc8e55":"markdown","309fff41":"markdown","ca4b13a0":"markdown","486235be":"markdown","7376aa55":"markdown","62b32a87":"markdown","59086ffb":"markdown","ba99c0b1":"markdown","a766e851":"markdown","3e46f3ea":"markdown","309b71e0":"markdown","e836350a":"markdown","54fc762d":"markdown","0ae80853":"markdown","1877d8bb":"markdown","4c943748":"markdown","353276d3":"markdown"},"source":{"87598c2f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom collections import Counter\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1a5ed3d1":"#to read data\ndf = pd.read_csv(\"..\/input\/students-performance-in-exams\/StudentsPerformance.csv\")","5d4b394b":"#first look at data\ndf.info()","8f1793f9":"df.head()","362f64dd":"#Convert object race\/ethnicity values into integer values\nrace = {'group A':1, 'group B':2,'group C':3, 'group D':4, 'group E':5} \ndf['race\/ethnicity'] = [race[item] for item in df['race\/ethnicity']] \n#to convert int into object\n#race = {1:'group A', 2:'group B',3: 'group C', 4: 'group D', 5: 'group E'} \n#df['race\/ethnicity'] = [race[item] for item in df['race\/ethnicity']] ","2a9151fb":"# Convert object gender values into integer values\ngender = {'male':1,'female':2} \ndf.gender = [gender[item] for item in df.gender]\n#to convert int into object\n#gender = {1:'male',2:'female'} \n#df.gender = [gender[item] for item in df.gender]","a95e9899":"gender_list = list(df['gender'].unique())\nrace_list = list(df['race\/ethnicity'].unique())","8f55846f":"df.info()","0d3f807b":"#Gender--Math Score ratio\ngender_math_ratio = []\nfor i in gender_list:\n    x = df[df['gender']==i]\n    gender_math_rate = sum(x['math score'])\/len(x)\n    gender_math_ratio.append(gender_math_rate)\ndata = pd.DataFrame({'gender_list': gender_list, 'gender_math_ratio':gender_math_ratio})\nnew_index = (data['gender_math_ratio'].sort_values(ascending=False)).index.values\nsorted_data = data.reindex(new_index)\n\n#visualization\nplt.figure(figsize=(5,5))\nax = sns.barplot(x=sorted_data['gender_list'], y=sorted_data['gender_math_ratio'])\nplt.xticks(rotation=0)\nplt.xlabel('Genders')\nplt.ylabel('Math scores')\nplt.title('Math Scores Rate Given Gender')\nplt.show()","e3665a74":"#Gender--Writing Score ratio\ngender_writing_ratio = []\nfor i in gender_list:\n    x = df[df['gender']==i]\n    gender_writing_rate = sum(x['writing score'])\/len(x)\n    gender_writing_ratio.append(gender_writing_rate)\ndata = pd.DataFrame({'gender_list': gender_list, 'gender_writing_ratio':gender_writing_ratio})\nnew_index = (data['gender_writing_ratio'].sort_values(ascending=True)).index.values\nsorted_data2 = data.reindex(new_index)\n\n#visualization\nplt.figure(figsize=(5,5))\nax = sns.barplot(x=sorted_data2['gender_list'], y=sorted_data2['gender_writing_ratio'])\nplt.xticks(rotation=0)\nplt.xlabel('Genders')\nplt.ylabel('Writing scores')\nplt.title('Writing Scores Rate Given Gender')\nplt.show()","6878d120":"#Gender--Reading Score ratio\ngender_reading_ratio = []\nfor i in gender_list:\n    x = df[df['gender']==i]\n    gender_reading_rate = sum(x['reading score'])\/len(x)\n    gender_reading_ratio.append(gender_reading_rate)\ndata = pd.DataFrame({'gender_list': gender_list, 'gender_reading_ratio':gender_reading_ratio})\nnew_index = (data['gender_reading_ratio'].sort_values(ascending=True)).index.values\nsorted_data3 = data.reindex(new_index)\n\n#visualization\nplt.figure(figsize=(5,5))\nax = sns.barplot(x=sorted_data3['gender_list'], y=sorted_data3['gender_reading_ratio'])\nplt.xticks(rotation=0)\nplt.xlabel('Genders')\nplt.ylabel('Reading scores')\nplt.title('Reading Scores Rate Given Gender')\nplt.show()","da53c153":"#Race--Math Score ratio\nrace_math_ratio = []\nfor i in race_list:\n    x = df[df['race\/ethnicity']==i]\n    race_math_rate = sum(x['math score'])\/len(x)\n    race_math_ratio.append(race_math_rate)\ndata = pd.DataFrame({'race_list': race_list, 'race_math_ratio':race_math_ratio})\nnew_index = (data['race_math_ratio'].sort_values(ascending=False)).index.values\nsorted_data4 = data.reindex(new_index)\n\n#visualization\nplt.figure(figsize=(5,5))\nax = sns.barplot(x=sorted_data4['race_list'], y=sorted_data4['race_math_ratio'])\nplt.xticks(rotation=0)\nplt.xlabel('Race\/Ethnicities')\nplt.ylabel('Math scores')\nplt.title('Math Scores Rate Given Race\/Ethnicities')\nplt.show()","98ae070e":"sns.countplot(data=df,x='test preparation course',hue='gender')\nplt.show()","3f5f6d40":"sorted_data['gender_math_ratio'] = sorted_data['gender_math_ratio']\/max( sorted_data['gender_math_ratio'])\nsorted_data2['gender_writing_ratio'] = sorted_data2['gender_writing_ratio']\/max( sorted_data2['gender_writing_ratio'])\n\n#concatenate these two values\ndata = pd.concat([sorted_data,sorted_data2['gender_writing_ratio']],axis=1)\n\ndata.sort_values('gender_list',inplace=True)","acaa05bd":"# visualization\nf,ax = plt.subplots(figsize =(25,10))\nsns.pointplot(x='math score',y='race\/ethnicity',data=df,color='seagreen',alpha=0.8, ax=ax)\nsns.pointplot(x='math score',y='parental level of education',data=df,color='orange',alpha=0.8,ax=ax)\n\nplt.text(40,0.6,'math score ratio',color='orange',fontsize = 15,style = 'italic')\nplt.text(40,0.2,'writing score ratio',color='seagreen',fontsize = 15,style = 'italic')\n\nplt.xlabel('Math Scores',fontsize = 10,color='dodgerblue')\nplt.ylabel('Education Level',fontsize = 10,color='dodgerblue')\n\nplt.title('Parental Level of Education  VS  Math Scores',fontsize = 20,color='dodgerblue')\n#background\nplt.grid()","d9c62f51":"g = sns.jointplot(x = \"math score\", y = \"reading score\", data=df,height=5, ratio=3, color=\"r\")","0fe0c04a":"df['race\/ethnicity'].value_counts()","6651abc8":"labels = df['race\/ethnicity'].value_counts().index \ncolors = ['coral','orange','deepskyblue','yellow','seagreen']\nexplode = [0,0,0,0,0]\nsizes = df['race\/ethnicity'].value_counts().values\n\n# visualization\nplt.figure(figsize = (7,7))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%') \nplt.title('Percentage of People According to Race\/Ethnicity',color = 'blue',fontsize = 15)\nplt.show()","5a12776d":"sns.lmplot(x=\"math score\", y=\"writing score\", data=df)\nplt.show()","4472a983":"sns.lmplot(x=\"reading score\", y=\"writing score\", data=df)\nplt.show()","86aa3322":"sns.lmplot(x=\"math score\", y=\"reading score\", data=df)\nplt.show()","f3bc5041":"sns.kdeplot(x = df['writing score'], y = df['math score'], shade=True, cut=5)\n\nplt.show()","779015a5":"data.head()","e46f102c":"data.sort_values(by='gender_math_ratio', ascending=False)\npal = sns.cubehelix_palette(2, rot=.5, dark=.4) \nf,ax= plt.subplots(figsize=(7, 7))\nsns.violinplot(data=data, palette=pal, inner=\"points\", ax=ax)\nplt.show()","6be8b0a8":"df.corr()","b1405f1f":"f,ax = plt.subplots(figsize=(10, 10))\nsns.heatmap(df.corr(), annot=True, linewidths=0.2,linecolor=\"gray\", fmt= '.2f',ax=ax)\nplt.show()","95cd535b":"f,ax = plt.subplots(figsize=(10, 8)) \nsns.boxplot(x=\"gender\", y=\"race\/ethnicity\", hue=\"parental level of education\", data=df, palette=\"PRGn\", ax=ax)\nplt.show()","5fba8b56":"f,ax = plt.subplots(figsize=(15, 15)) \nsns.swarmplot(x=\"race\/ethnicity\", y=\"math score\",hue=\"parental level of education\", data=df, size=8, ax=ax) \nplt.show()","639237fe":"sns.pairplot(df)\nplt.show()","62f414d9":"f,ax = plt.subplots(figsize=(10, 8)) \nsns.countplot(x = df['parental level of education'], ax=ax) \nplt.title(\"Parental level of education\",fontsize=15)\nplt.show()","8dac820c":"lunch = df.lunch.value_counts()\n\nplt.figure(figsize=(5,5))\nsns.barplot(x=lunch[:].index,y=lunch[:].values)\nplt.ylabel('Number of Lunch')\nplt.xlabel('Lunch Types')\nplt.title('Lunch Types',fontsize=15)\nplt.show()","13acf4e0":"sns.histplot(df['math score'])\nplt.show()","656ea110":"#compare multiple values\ndef hist_plot(data, x, ax) :\n    sns.histplot(df[x], ax=ax)","6e0d78ec":"fig, ax = plt.subplots(1, 3, figsize=(27,6))\nfor idx, i in enumerate(['writing score','reading score', 'math score']) :\n    print(idx,i)\n    hist_plot(df,i,ax[idx])","1ecc8e55":"<a id=35><\/a>\n* ## LM Plot ","309fff41":"<a id=39><\/a>\n* ## Box Plot ","ca4b13a0":"<a id=310><\/a>\n* ## Swarm Plot ","486235be":"<a id=311><\/a>\n* ## Pair Plot ","7376aa55":"<a id=1><\/a>\n## Loading Data and Explanation of Features","62b32a87":">In this notebook, I worked on data visiualization using Seaborn. If you find this notebook useful, to share with other people please give upvote and comment. Thank you.","59086ffb":"<a id=31><\/a>\n* ## Bar Plot ","ba99c0b1":"<a id=33><\/a>\n* ## Joint Plot ","a766e851":"<a id=34><\/a>\n* ## Pie Plot ","3e46f3ea":"<a id=36><\/a>\n* ## KDE Plot ","309b71e0":"<a id=32><\/a>\n* ## Point Plot ","e836350a":"<a id=313><\/a>\n* ## Histogram","54fc762d":"<a id=38><\/a>\n* ## Heat Map","0ae80853":"<a id=312><\/a>\n* ## Count Plot ","1877d8bb":"# Introduction\nSuccess is important in education life. A student's success is depends on scores in taken exams. Let's examine some features that effects success in exams. \n\n1. [Loading Data and Explanation of Features](#1)\n2. [Visualization with Seaborn](#2)\n    * [Bar Plot](#31)\n    * [Point Plot](#32)\n    * [Joint Plot](#33)\n    * [Pie Chart](#34)\n    * [Lm Plot](#35)\n    * [Kde Plot](#36)\n    * [Violin Plot](#37)\n    * [Heatmap](#38)\n    * [Box Plot](#39)\n    * [Swarm Plot](#310)\n    * [Pair Plot](#311)\n    * [Count Plot](#312)\n    * [Histogram](#313)\n","4c943748":"<a id=37><\/a>\n* ## Violin Plot ","353276d3":"<a id=2><\/a>\n## Visualization with Seaborn "}}