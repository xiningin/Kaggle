{"cell_type":{"e33df396":"code","0ff56034":"code","0c2cd515":"code","8401dd2f":"code","34ede961":"code","d1943a72":"code","065cdd2d":"code","31c26da6":"code","6d1e2a3a":"code","b44802f2":"code","c9fff41f":"code","06c6ebd4":"code","f503d43d":"code","b85ce7e9":"code","0acd1046":"code","9b8dd1ab":"code","38a753f5":"code","26bb9f41":"code","7052d6d5":"code","610b3f2e":"code","1be16a09":"code","6f250ac3":"markdown","a622484f":"markdown","9e91942e":"markdown","6581cac5":"markdown"},"source":{"e33df396":"import os\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\nimport plotly.express as px\n\n%matplotlib inline","0ff56034":"\ndata = pd.read_csv('..\/input\/hackerearth-employee-attrition-rate\/Train.csv')\nsubmission_data = pd.read_csv('..\/input\/hackerearth-employee-attrition-rate\/Test.csv')","0c2cd515":"data.shape","8401dd2f":"submission_data.shape","34ede961":"data.head()","d1943a72":"data.describe()","065cdd2d":"data.columns","31c26da6":"features = ['Age', 'Compensation_and_Benefits', 'Work_Life_balance', 'Post_Level', 'growth_rate', 'Time_of_service', 'Pay_Scale', 'Hometown', 'Education_Level']","6d1e2a3a":"data[features].isna().sum()","b44802f2":"# Convert the categorical data into numaric value\n\nfor feature in features:\n    if data[feature].dtype == 'object':\n        data[feature] = data[feature].astype('category')\n        data[feature] = data[feature].cat.codes","c9fff41f":"data['Age'].fillna(52, inplace=True)\ndata['Work_Life_balance'].fillna(3, inplace=True)\ndata['Time_of_service'].fillna(21, inplace=True) \ndata['Pay_Scale'].fillna(8, inplace=True)","06c6ebd4":"data[features].isna().sum()","f503d43d":"submission_data['Age'].fillna(52, inplace=True)\nsubmission_data['Work_Life_balance'].fillna(3, inplace=True)\nsubmission_data['Time_of_service'].fillna(21, inplace=True) \nsubmission_data['Pay_Scale'].fillna(8, inplace=True)","b85ce7e9":"submission_data[features].isna().sum()","0acd1046":"from sklearn.model_selection import train_test_split\nfrom sklearn import metrics \nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.preprocessing import OrdinalEncoder","9b8dd1ab":"X, y = data[features].values, data['Attrition_rate'].values\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=1)\n\ndef prepare_inputs(X_train, X_test):\n    ohe = OrdinalEncoder()\n    ohe.fit(X_train)\n    X_train_enc = ohe.transform(X_train)\n    X_test_enc = ohe.transform(X_test)\n    return X_train_enc, X_test_enc\n\nX_train, X_test = prepare_inputs(X_train, X_test)","38a753f5":"from sklearn.linear_model import LinearRegression\nfrom sklearn import metrics\n\n\nmodel = LinearRegression()\nmodel.fit(X_train, y_train)\n\nprint('Intercept: \\n', model.intercept_)\nprint('Coefficients: \\n', model.coef_)","26bb9f41":"output = model.predict(X_test)\n\ndf = pd.DataFrame({'Actual': y_test.flatten(), 'Predicted': output.flatten()})\ndf","7052d6d5":"print('Mean Absolute Error:', metrics.mean_absolute_error(y_test, output))  \nprint('Mean Squared Error:', metrics.mean_squared_error(y_test, output))  \nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, output)))","610b3f2e":"XX = submission_data[features].values\n\nohe = OrdinalEncoder()\nohe.fit(XX)\nXX = ohe.transform(XX)","1be16a09":"y_predict = model.predict(XX)\n\nimport csv\n\nwith open('5th_submission.csv', 'w', newline='') as file:\n    writer = csv.writer(file)\n    writer.writerow([\"Employee_ID\", \"Attrition_rate\"])\n    \n    for i in range(3000):\n        writer.writerow([submission_data['Employee_ID'][i], y_predict[i]])","6f250ac3":"## Load the dataset as trainning data and submission data","a622484f":"### Competition Link:\n[click here](https:\/\/www.hackerearth.com\/challenges\/competitive\/hackerearth-machine-learning-challenge-predict-employee-attrition-rate\/machine-learning\/predict-the-employee-attrition-rate-in-organizations-1d700a97\/) \n\n### Problem statement\nEmployees are the most important part of an organization. Successful employees meet deadlines, make sales, and build the brand through positive customer interactions.\n\nEmployee attrition is a major cost to an organization and predicting such attritions is the most important requirement of the Human Resources department in many organizations. In this problem, your task is to predict the attrition rate of employees of an organization. \n\n### Data\n    * Train.csv\n    * Test.csv\n\n### Submission format\nYou are required to write your predictions in a .csv file that contain the following columns:\n    * Employee_ID\n    * Attrition_rate","9e91942e":"## List the important features through xgboost features importance \n### Tutorial\n1. [DataCamp](https:\/\/www.datacamp.com\/community\/tutorials\/xgboost-in-python)\n2. [machinelearningmastery](https:\/\/machinelearningmastery.com\/develop-first-xgboost-model-python-scikit-learn\/#:~:text=XGBoost%20is%20an%20implementation%20of,first%20XGBoost%20model%20in%20Python.)\n\nI have done this on seperate notebook","6581cac5":"## Observation after many iterations \n    * mean value ->(null value replace with mean will get 81.208% score)\n    * 75% value ->(null value replace with mean will get 81.283% score)\n    * Highest score is 81.668%"}}