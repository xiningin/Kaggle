{"cell_type":{"38c0f54b":"code","900ace2a":"code","297c1598":"code","70bd290e":"code","90a7cca0":"code","13e226aa":"code","514ddb5e":"code","e3e8dd0c":"code","855a7e5b":"code","85c467cf":"code","cad79964":"code","a2e56ef2":"code","f4242b73":"code","69b99550":"code","06d9c154":"code","6ab66851":"code","31eaf247":"code","46f7f8a6":"code","34f3d7c7":"code","ee0ce168":"code","a5e6b077":"code","097ffb22":"code","dd9ba4e0":"code","9386501e":"code","8dcccc76":"code","1a08557a":"code","7329a91d":"code","cb692f1f":"code","28046260":"code","7cd2cd88":"code","af00be28":"code","3b113b4e":"code","c37eda21":"code","b733a8c6":"code","82636e0b":"code","85d3e577":"code","983b66e3":"code","a42bb214":"code","f93fe27f":"code","26e3823f":"code","acf96ce4":"code","6cd41638":"code","2afd60dd":"code","24ceb465":"code","ad19cb95":"code","7f56be9d":"code","5c673add":"code","7927ab3c":"code","59aaa138":"code","2c5e733c":"code","ccfb491e":"code","834d31f7":"code","be813451":"code","6205eb45":"code","6e85d5ac":"code","14417a86":"code","0ba77e6f":"code","3b28d873":"code","12229734":"code","0641967c":"code","35eff98c":"code","b5f69753":"code","62018556":"code","b0b54e70":"code","b9702abe":"code","9a2008ea":"code","545fba66":"code","552f5775":"code","66363b22":"code","2de69d01":"code","d0b6809b":"markdown","1102d090":"markdown","ee1abc80":"markdown","17f28fce":"markdown","db4f352a":"markdown","3c83845d":"markdown","f6757c0b":"markdown","41dfbbe5":"markdown","6d334e64":"markdown","4e89535e":"markdown","c19dddc6":"markdown","a9166b46":"markdown","0f3722e5":"markdown","7500c3ea":"markdown","391d49ad":"markdown","eef7ecc8":"markdown","a503d9be":"markdown"},"source":{"38c0f54b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","900ace2a":"data_types_dict = {\n    'row_id': 'int64',\n    'timestamp': 'int64',\n    'user_id': 'int32',\n    'content_id': 'int16',\n    'content_type_id': 'int8',\n    'task_container_id': 'int16',\n    'user_answer': 'int8',\n    'answered_correctly': 'int8',\n    'prior_question_elapsed_time': 'float16',\n    'prior_question_had_explanation': 'boolean'\n}","297c1598":"train_df = pd.read_csv('\/kaggle\/input\/riiid-test-answer-prediction\/train.csv',\n                       low_memory=False,\n                       nrows=10**7,\n                       dtype=data_types_dict, \n                      )","70bd290e":"train_df.head(10)","90a7cca0":"train_df.info()","13e226aa":"train_df.describe()","514ddb5e":"train_df['timestamp'].hist(bins=100);","e3e8dd0c":"grouped_by_user_df = train_df.groupby('user_id')","855a7e5b":"grouped_by_user_df.agg({'timestamp':'max'}).hist(bins=100);","85c467cf":"# \u8b1b\u7fa9\u306e\u5272\u5408  # \u5e73\u5747 -1 (True)\u306e\u5272\u5408\n(train_df['answered_correctly'] == -1).mean()","cad79964":"train_questions_only_df = train_df[train_df['answered_correctly'] != -1]\ntrain_questions_only_df['answered_correctly'].mean()","a2e56ef2":"grouped_by_user_df = train_questions_only_df.groupby('user_id')","f4242b73":"# \u56de\u7b54\u7387('mean')\u3068\u56de\u7b54\u6570\uff08'count'\uff09\u3067\u5206\u3051\u308b\nuser_answers_df = grouped_by_user_df.agg({'answered_correctly': ['mean', 'count']})\nuser_answers_df[('answered_correctly', 'mean')].hist(bins=100); # bins = \u68d2\u306e\u6570","69b99550":"user_answers_df","06d9c154":"user_answers_df[('answered_correctly', 'count')].hist(bins=100);","6ab66851":"(user_answers_df[('answered_correctly','count')]< 50).mean()","31eaf247":"# \u521d\u5fc3\u8005\u306e\u6b63\u7b54\u7387\nuser_answers_df[user_answers_df[('answered_correctly', 'count')] < 50][('answered_correctly', 'mean')].mean()","46f7f8a6":"user_answers_df[user_answers_df[('answered_correctly', 'count')] < 50][('answered_correctly', 'mean')].hist(bins=100);","34f3d7c7":"# \u30a2\u30af\u30c6\u30a3\u30d6\u30e6\u30fc\u30b6\u30fc\u306e\u6b63\u7b54\u7387\nuser_answers_df[user_answers_df[('answered_correctly', 'count')] >= 50][('answered_correctly', 'mean')].mean()","ee0ce168":"user_answers_df[user_answers_df[('answered_correctly', 'count')] >= 50][('answered_correctly', 'mean')].hist(bins=100);","a5e6b077":"# \u30d8\u30d3\u30fc\u30e6\u30fc\u30b6\u30fc\u306e\u5272\u5408 500\u4ee5\u4e0aquestion\u3092\u56de\u7b54\u3057\u3066\u3044\u308b\u30e6\u30fc\u30b6\u30fc\u306e\u5272\u5408\n(user_answers_df[('answered_correctly','count')] >= 500).mean()","097ffb22":"# \u30d8\u30d3\u30fc\u30e6\u30fc\u30b6\u30fc\u306e\u56de\u7b54\u7387\u306e\u5206\u5e03\nuser_answers_df[user_answers_df[('answered_correctly', 'count')] >= 500][('answered_correctly', 'mean')].hist(bins=100);","dd9ba4e0":"# \u30d8\u30d3\u30fc\u30e6\u30fc\u30b6\u30fc\u306e\u6b63\u7b54\u7387\nuser_answers_df[user_answers_df[('answered_correctly', 'count')] >= 500][('answered_correctly', 'mean')].mean()","9386501e":"plt.scatter(x = user_answers_df[('answered_correctly', 'count')], y = user_answers_df[('answered_correctly', 'mean')]);","8dcccc76":"grouped_by_content_df = train_questions_only_df.groupby('content_id')","1a08557a":"content_answers_df = grouped_by_content_df.agg({'answered_correctly': ['mean', 'count']})","7329a91d":"content_answers_df","cb692f1f":"content_answers_df[('answered_correctly', 'count')].hist(bins=100);","28046260":"content_answers_df[('answered_correctly', 'mean')].hist(bins=100);","7cd2cd88":"content_answers_df[content_answers_df[('answered_correctly','count')]>50][('answered_correctly','mean')].hist(bins = 100);","af00be28":"questions_df = pd.read_csv('..\/input\/riiid-test-answer-prediction\/questions.csv')","3b113b4e":"questions_df","c37eda21":"print(f\"There are {len(questions_df['part'].unique())} different parts\")","b733a8c6":"questions_df['tags'].values[-1] # \u306a\u3093\u3067\u6700\u5f8c\u306e\u884c\u306etag\u3092\u53d6\u5f97\u3057\u3066\u308b\u306e\u304b\uff1f","82636e0b":"unique_tags = set().union(*[y.split() for y in questions_df['tags'].astype(str).values])\n\nprint(f\"There are {len(unique_tags)} different tags\")","85d3e577":"# [question_id] content_type_id\u304c\u8cea\u554f(0)\u306e\u3068\u304d\u3001train\/test content_id\u5217\u306e\u5916\u90e8\u30ad\u30fc \/ [bundle_id] \u8cea\u554f\u3068\u4e00\u7dd2\u306b\u63d0\u4f9b\u3055\u308c\u308b\u30b3\u30fc\u30c9\n(questions_df['question_id'] != questions_df['bundle_id']).mean()","983b66e3":"train_df = pd.read_csv('\/kaggle\/input\/riiid-test-answer-prediction\/train.csv',\n                       low_memory=False,\n                       nrows=10**7,\n                       dtype=data_types_dict, \n                      )","a42bb214":"# 900\u4e07\u884c\nfeatures_part_df = train_df.iloc[:int( 9 \/ 10 * len(train_df) )]\n# 100\u4e07\u884c\ntrain_part_df = train_df.iloc[int( 9 \/ 10 * len(train_df) ):]","f93fe27f":"train_questions_only_df = features_part_df[features_part_df['answered_correctly'] != -1]\n\ngrouped_by_user_df = train_questions_only_df.groupby('user_id')\n\nuser_answers_df = grouped_by_user_df.agg({'answered_correctly': ['mean', 'count']}).copy()\nuser_answers_df.columns = ['mean_user_accuracy', 'questions_answered']","26e3823f":"user_answers_df","acf96ce4":"grouped_by_content_df = train_questions_only_df.groupby('content_id')\n\ncontent_answers_df = grouped_by_content_df.agg({'answered_correctly': ['mean', 'count'] }).copy()\ncontent_answers_df.columns = ['mean_accuracy', 'question_asked']","6cd41638":"content_answers_df","2afd60dd":"questions_df = questions_df.merge(content_answers_df, left_on = 'question_id', right_on = 'content_id', how = 'left')\n\n# [question_id] content_id\u5217\u306e\u5916\u90e8\u30ad\u30fc \u30fb\u30fb\u30fb\u3000content_type_id\u304c\u8cea\u554f(0)\u306e\u3068\u304d\u3001train\/test content_id\u5217\u306e\u5916\u90e8\u30ad\u30fc","24ceb465":"questions_df","ad19cb95":"bundle_dict = questions_df['bundle_id'].value_counts().to_dict()\n# value_count \u30fb\u30fb\u30fb\u3000\u30e6\u30cb\u30fc\u30af\u306a\u8981\u7d20\u306e\u5024\u3068\u305d\u306e\u51fa\u73fe\u56de\u6570\u3092pandas.Series\u3067\u8fd4\u3059","7f56be9d":"# [bundle_id] \u8cea\u554f\u3068\u4e00\u7dd2\u306b\u63d0\u4f9b\u3055\u308c\u308b\u30b3\u30fc\u30c9\nbundle_dict","5c673add":"# right_answers \u6b63\u89e3\u6570\nquestions_df['right_answers'] = questions_df['mean_accuracy'] * questions_df['question_asked']\n\nquestions_df['bundle_size'] = questions_df['bundle_id'].apply(lambda x: bundle_dict[x])","7927ab3c":"questions_df","59aaa138":"grouped_by_bundle_df = questions_df.groupby('bundle_id')\n\nbundle_answers_df = grouped_by_bundle_df.agg({'right_answers': 'sum', 'question_asked': 'sum'}).copy()\nbundle_answers_df.columns = ['bundle_right_answers', 'bundle_questions_asked']\n\nbundle_answers_df['bundle_accuracy'] = bundle_answers_df['bundle_right_answers'] \/ bundle_answers_df['bundle_questions_asked']\n\nbundle_answers_df","2c5e733c":"grouped_by_part_df = questions_df.groupby('part')\n\npart_answers_df = grouped_by_part_df.agg({'right_answers': 'sum', 'question_asked': 'sum'}).copy()\n\npart_answers_df.columns = ['part_right_answers', 'part_questions_asked']\npart_answers_df['part_accuracy'] = part_answers_df['part_right_answers'] \/ part_answers_df['part_questions_asked']\n\npart_answers_df","ccfb491e":"del train_df\ndel features_part_df\ndel grouped_by_user_df\ndel grouped_by_content_df","834d31f7":"# python \u306e\u30e1\u30e2\u30ea\u7ba1\u7406\nimport gc\n# \u4f55\u3082\u8003\u3048\u305a\u306b\u3068\u308a\u3042\u3048\u305aGC\u3092\u52d5\u304b\u3059\u306b\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\u56de\u53ce\u53ef\u80fd\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u524a\u9664\u3002\ngc.collect()","be813451":"features = [\n    'timestamp','mean_user_accuracy', 'questions_answered','mean_accuracy',\n    'question_asked','prior_question_elapsed_time', 'prior_question_had_explanation',\n    'bundle_size', 'bundle_accuracy','part_accuracy', 'right_answers'\n]\n\ntarget = 'answered_correctly'","6205eb45":"# \u8b1b\u7fa9(-1)\u4ee5\u5916\u3092\u62bd\u51fa train\ntrain_part_df = train_part_df[train_part_df[target] != -1]","6e85d5ac":"train_part_df.head()","14417a86":"# \u8ffd\u52a0\u3057\u305f\u7279\u5fb4\u91cf\u306edf\u3092\u30de\u30fc\u30b8\n\n# user_answers_df\ntrain_part_df = train_part_df.merge(user_answers_df, how='left', on='user_id')\n\n# questions_df\ntrain_part_df = train_part_df.merge(questions_df, how='left', left_on='content_id', right_on='question_id')\n\n# bundle_answers_df\ntrain_part_df = train_part_df.merge(bundle_answers_df, how='left', on='bundle_id')\n\n# part_answers_df\ntrain_part_df = train_part_df.merge(part_answers_df, how='left', on='part')","0ba77e6f":"train_part_df.head()","3b28d873":"# \u30e6\u30fc\u30b6\u30fc\u304c\u8cea\u554f\u306b\u56de\u7b54\u3057\u305f\u5f8c\u3001\u8aac\u660e\u3068\u6b63\u3057\u3044\u56de\u7b54\u3092\u78ba\u8a8d\u3057\u305f\u304b\u3069\u3046\u304b \u6b20\u640d\u5024\u3092False\u3068\u7f6e\u304f\u3001 astype\u3067\u30c7\u30fc\u30bf\u578b\u306e\u5909\u63db(\u30ad\u30e3\u30b9\u30c8)\ntrain_part_df['prior_question_had_explanation'] = train_part_df['prior_question_had_explanation'].fillna(value=False).astype(bool)\n\ntrain_part_df.fillna(value = -1, inplace = True)","12229734":"train_part_df","0641967c":"train_part_df.columns","35eff98c":"train_part_df = train_part_df[features + [target]]","b5f69753":"train_part_df","62018556":"from sklearn.metrics import roc_auc_score","b0b54e70":"from lightgbm import LGBMClassifier","b9702abe":"lgbm = LGBMClassifier(\n    num_leaves=31, \n    max_depth= 2, \n    n_estimators = 25, \n    min_child_samples = 1000, \n    subsample=0.7, \n    subsample_freq=5,\n    n_jobs= -1,\n    is_higher_better = True,\n    first_metric_only = True\n)","9a2008ea":"lgbm.fit(train_part_df[features], train_part_df[target])","545fba66":"roc_auc_score(train_part_df[target].values, lgbm.predict_proba(train_part_df[features])[:,1])","552f5775":"import riiideducation\n\nenv = riiideducation.make_env()","66363b22":"iter_test = env.iter_test()","2de69d01":"for (test_df, sample_prediction_df) in iter_test:\n    test_df = test_df.merge(user_answers_df, how = 'left', on = 'user_id')\n    test_df = test_df.merge(questions_df, how = 'left', left_on = 'content_id', right_on = 'question_id')\n    test_df = test_df.merge(bundle_answers_df, how = 'left', on = 'bundle_id')\n    test_df = test_df.merge(part_answers_df, how = 'left', on = 'part')\n    \n    test_df['prior_question_had_explanation'] = test_df['prior_question_had_explanation'].fillna(value = False).astype(bool)\n    test_df.fillna(value = -1, inplace = True)\n\n    test_df['answered_correctly'] = lgbm.predict_proba(test_df[features])[:,1]\n    env.predict(test_df.loc[test_df['content_type_id'] == 0, ['row_id', 'answered_correctly']])","d0b6809b":"### \u3053\u308c\u307e\u3067\u306e\u307e\u3068\u3081\n\u30fbTimestamp, \u30fb\u30a2\u30af\u30c6\u30a3\u30d6\u30e6\u30fc\u30b6\u30fc\u306e\u5e73\u5747\u30b9\u30b3\u30a2, \u30fb\u56de\u7b54\u3055\u308c\u305f\u8cea\u554f\u306e\u6570\u3001\u306f\u30d9\u30fc\u30b9\u30e9\u30a4\u30f3\u306e\u4f5c\u6210\u306b\u5f79\u7acb\u3061\u305d\u3046\u3002","1102d090":"\u2191\u5404\u30e6\u30fc\u30b6\u30fc\u306e\u6700\u5927\u306etimestamp\u306e\u5206\u5e03\u30fb\u30fb\u30fb\u307b\u3068\u3093\u3069\u306e\u30e6\u30fc\u30b6\u30fc\u304c\u3059\u3050\u306b\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3092\u96e2\u308c\u308b\u3088\u3046\u3060\u3002","ee1abc80":"### timestamp","17f28fce":"# Model","db4f352a":"# train.csv","3c83845d":"# Questions.csv","f6757c0b":"train\u30c7\u30fc\u30bf\u306e\u7d042%\u306f\u3001\u300c\u8b1b\u7fa9\u300d\u3067\u3042\u308b\u3002\u2192\u56de\u7b54\u5206\u6790\u304b\u3089\u9664\u5916\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002","41dfbbe5":"timestamp\u30fb\u30fb\u30fb\u30e6\u30fc\u30b6\u30fc\u3068\u306e\u5bfe\u8a71\u304b\u3089\u305d\u306e\u30a4\u30d9\u30f3\u30c8\u7d42\u4e86\u307e\u3067\u306e\u6642\u9593","6d334e64":"### Answers by content","4e89535e":"\u30e6\u30fc\u30b6\u30fc\u306e54\uff05\u304c\u300150\u672a\u6e80\u306e\u8cea\u554f\u306b\u56de\u7b54\u3002 \u2192 \u3059\u3079\u3066\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u300c\u521d\u5fc3\u8005\u300d\u3068\u300c\u30a2\u30af\u30c6\u30a3\u30d6\u30e6\u30fc\u30b6\u30fc\u300d\u306b\u5206\u3051\u3066\u307f\u308b\u3002","c19dddc6":"### Answers by users","a9166b46":"\u30a2\u30af\u30c6\u30a3\u30d6\u30e6\u30fc\u30b6\u30fc\u306f\u3001\u521d\u5fc3\u8005\u3088\u308a\u3082\u306f\u308b\u304b\u306b\u512a\u308c\u3066\u3044\u308b\u3002 \\\n\u5168\u4f53\u306e\u5e73\u574766%\u3000\u3057\u304b\u3057\u3001\u5e73\u5747\u30e6\u30fc\u30b6\u30fc\u30b9\u30b3\u30a2\u306f\u3001\u6b63\u89e3\u306e\u5168\u4f53\u306e66\uff05\u3088\u308a\u3082\u4f4e\u304f\u306a\u3063\u3066\u3044\u308b\u3002\u2192\u3053\u308c\u306f\u3001\u30d8\u30d3\u30fc\u30e6\u30fc\u30b6\u30fc\u306e\u30b9\u30b3\u30a2\u304c\u3055\u3089\u306b\u9ad8\u304f\u306a\u308b\u3053\u3068\u3092\u610f\u5473\u3059\u308b\u3002","0f3722e5":"# Baseline\n\n\u3053\u308c\u307e\u3067\u306e\u767a\u898b\u3057\u305f\u7279\u5fb4\u3092\u30e2\u30c7\u30eb\u3067\u4f7f\u7528\u3057\u3066\u3001\u6b63\u89e3\u306e\u78ba\u7387\u3092\u4e88\u6e2c\u3059\u308b\u3002","7500c3ea":"\u5e73\u5747\u3057\u3066\u3001\u30e6\u30fc\u30b6\u30fc\u306f\u6700\u5927\uff16\uff16\uff05\u306e\u8cea\u554f\u306b\u6b63\u3057\u304f\u7b54\u3048\u3066\u3044\u308b\u3002 \u2192\u30e6\u30fc\u30b6\u30fc\u3054\u3068\u306b\u3069\u306e\u304f\u3089\u3044\u9055\u3046\u304b\u3082\u898b\u3066\u307f\u308b","391d49ad":"### Answered correctly\n \u30e6\u30fc\u30b6\u30fc\u304c\u6b63\u3057\u304f\u5fdc\u7b54\u3057\u305f\u304b\u3069\u3046\u304b\u3002\u8b1b\u7fa9\u3068\u8cea\u554f\u304c\u3042\u308b\u3002\u8b1b\u7fa9\uff08lectures\uff09\u306e\u5834\u5408\u306f\u3001-1\u3092null\u3068\u3057\u3066\u8aad\u307f\u53d6\u308a\u307e\u3059\u3002\u8cea\u554f\u306e\u5834\u5408\u306f\u3001\u6b63\u7b54\uff11\u3001\u8aa4\u7b54\uff10","eef7ecc8":"\u8cea\u554f(content_id)\u304c\u7570\u306a\u308c\u3070\u3001answered_correctly\u3082\u7570\u306a\u308b\u305f\u3081\u3001\u30d9\u30fc\u30b9\u30e9\u30a4\u30f3\u306b\u4f7f\u3048\u305d\u3046\u3002","a503d9be":"questions_df\u3000\u3092\u4f7f\u7528\u3057\u3066\u8ffd\u52a0\u306e\u7279\u5fb4\u91cf\u3092\u4f5c\u6210"}}