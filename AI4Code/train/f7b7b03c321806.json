{"cell_type":{"c2f6dda8":"code","f86f893e":"code","cdf5c36b":"code","4093de39":"code","56e7b320":"code","58606a50":"code","5f4e90ad":"code","a870a965":"markdown","06900af2":"markdown","a8955b3f":"markdown","31dacc34":"markdown","784337e7":"markdown"},"source":{"c2f6dda8":"import numpy as np \nimport matplotlib.pyplot as plt\nimport pandas as pd","f86f893e":"train_set = pd.read_csv('..\/input\/random-linear-regression\/train.csv')\n\ntrain_set.dropna(inplace= True)     #handling missing data\n\nX_train = train_set.iloc[:, :-1].values.reshape(-1,1)\ny_train = train_set.iloc[:, -1].values.reshape(-1,1)","cdf5c36b":"test_set = pd.read_csv('..\/input\/random-linear-regression\/test.csv')\n\nX_test = test_set.iloc[:, :-1].values\ny_test = test_set.iloc[:, -1].values","4093de39":"from sklearn.linear_model import LinearRegression\nregressor = LinearRegression()\nregressor.fit(X_train, y_train)","56e7b320":"y_pred = regressor.predict(X_test)\n# print(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))","58606a50":"plt.figure(figsize=(32,18))\nplt.scatter(X_test, y_test, color='red')\nplt.plot(X_test, y_pred, color='blue')\nplt.axis('scaled')","5f4e90ad":"from sklearn.metrics import r2_score\nr2_score(y_test, y_pred)","a870a965":"## Predicting Training Results","06900af2":"## Importing the dataset","a8955b3f":"## Training the Model","31dacc34":"## Visualizing Results","784337e7":"## Evaluating Model Performance"}}