{"cell_type":{"f6e4ffad":"code","74570f2c":"code","fc5b06c1":"code","b6f19c01":"code","32203292":"code","22081a5b":"markdown","6391048d":"markdown","e2156703":"markdown","fb944b3e":"markdown","08ef57c1":"markdown","4dc031ed":"markdown","3226d3a1":"markdown","478b7480":"markdown","be93df81":"markdown","ef0b865b":"markdown","4983be52":"markdown"},"source":{"f6e4ffad":"# \ub77c\uc774\ube0c\ub7ec\ub9ac \ubd88\ub7ec\uc624\uae30\nimport os, warnings # os: \uc6b4\uc601\uccb4\uc81c \uc81c\uc5b4(\ud30c\uc77c\/\ud3f4\ub354 \ub9cc\ub4e4\uace0 \ubcf5\uc0ac\ud558\uae30), warnings: \uacbd\uace0 \uc81c\uc5b4\nimport matplotlib.pyplot as plt # matplotlib \ud328\ud0a4\uc9c0 \uc911 \uadf8\ub798\ud504\ub97c \uadf8\ub9b4 \uc218 \uc788\ub294 pyplot \ubaa8\ub4c8\nfrom matplotlib import gridspec  # gridspec: \ub2e4\uc911 \ud50c\ub86f\n\nimport numpy as np # numpy: \ubca1\ud130\/\ud589\ub82c \uc5f0\uc0b0\uc5d0 \uc6a9\uc774\ud55c \ub77c\uc774\ube0c\ub7ec\ub9ac\nimport tensorflow as tf  # tensorflow: \ub370\uc774\ud130 \ud750\ub984 \ud504\ub85c\uadf8\ub798\ubc0d\uc744 \uc704\ud55c \ub77c\uc774\ube0c\ub7ec\ub9ac\nfrom tensorflow.keras.preprocessing import image_dataset_from_directory\n\n# \ub79c\ub364 \uc2dc\ub4dc \n# : \ucef4\ud4e8\ud130 \ud504\ub85c\uadf8\ub7a8\uc5d0\uc11c\uc758 '\ub79c\ub364' \uc218\ub294 \uc2e4\uc81c\ub85c \ub79c\ub364\ud558\uc9c0 \uc54a\uace0, \uc2dc\uc791 \uc22b\uc790\ub97c \uc815\ud574\uc8fc\uba74 \ucef4\ud4e8\ud130\uac00 \uc815\ud574\uc9c4\n# \uc54c\uace0\ub9ac\uc998\uc5d0 \uc758\ud574 \ub79c\ub364\uc73c\ub85c \ubcf4\uc774\ub294 \uc218\uc5f4\uc744 \uc0dd\uc131. \uc774 '\uc2dc\uc791 \uc22b\uc790'\uac00 '\uc2dc\ub4dc(seed)'\ndef set_seed(seed=31415):\n    np.random.seed(seed)\n    tf.random.set_seed(seed)\n    os.environ['PYTHONHASHSEED'] = str(seed)\n    os.environ['TF_DETERMINISTIC_OPS'] = '1'\nset_seed(31415)\n\n# Matplotlib \uc870\uac74 \uc124\uc815\n# : plt.rc()\ub97c \ud1b5\ud558\uba74 \uacbd\uace0 \uba54\uc138\uc9c0 \uc5c6\uc774 \uae30\ubcf8 \uc124\uc815\uc744 \ubcc0\uacbd\ud560 \uc218 \uc788\uc74c\nplt.rc('figure', autolayout = True)\nplt.rc('axes', labelweight = 'bold',labelsize = 'large', \n       titleweight = 'bold', titlesize = 18, titlepad = 10)\nplt.rc('image', cmap = 'magma')\nwarnings.filterwarnings('ignore')\n\n# \ud6c8\ub828\/\uac80\uc99d \ub370\uc774\ud130\uc14b \ubd88\ub7ec\uc624\uae30\n# image_dataset_from_directory: \ub514\ub809\ud1a0\ub9ac \ub0b4 \uc774\ubbf8\uc9c0 \ud30c\uc77c\ub85c tf.data.Dataset \uc0dd\uc131\nds_train_ = image_dataset_from_directory('..\/input\/car-or-truck\/train',\n                                    labels = 'inferred',\n                                    # inferred: \ub514\ub809\ud1a0\ub9ac \uad6c\uc870\ub85c \ub808\uc774\ube14 \uc608\uce21\n                                    label_mode = 'binary', \n                                    # binary: \ub808\uc774\ube14\uc774 0 \ub610\ub294 1\uc758 float32 \uc2a4\uce7c\ub77c\uac12\uc73c\ub85c \uc778\ucf54\ub529\n                                    image_size = [128,128],\n                                    interpolation = 'nearest',\n                                    batch_size = 64,\n                                    shuffle = True)\n\nds_valid_ = image_dataset_from_directory('..\/input\/car-or-truck\/valid',\n                                    labels = 'inferred',\n                                    label_mode = 'binary',\n                                    image_size = [128,128],\n                                    interpolation = 'nearest',\n                                    batch_size = 64,\n                                    shuffle = False)\n\n# \ub370\uc774\ud130 \ud30c\uc774\ud504\ub77c\uc778\ndef convert_to_float(image, label):\n    image = tf.image.convert_image_dtype(image, dtype = tf.float32)\n    return image, label\n\nAUTOTUNE = tf.data.experimental.AUTOTUNE \n\nds_train = ds_train_.map(convert_to_float).cache().prefetch(buffer_size = AUTOTUNE)\nds_valid = ds_valid_.map(convert_to_float).cache().prefetch(buffer_size = AUTOTUNE)\n\n''' \ntf.data.Dataset.prefetch \n= \ubc31\uadf8\ub77c\uc6b4\ub4dc \uc2a4\ub808\ub4dc & \ub0b4\ubd80 \ubc84\ud37c\ub97c \ud1b5\ud574 \uc694\uccad\ub41c \uc2dc\uac04 \uc804\uc5d0 \uc785\ub825 \ub370\uc774\ud130\uc14b\uc5d0\uc11c \ub370\uc774\ud130\ub97c \uac00\uc838\uc634\n    - \uac00\uc838\uc62c \ub370\uc774\ud130 \uc218\ub294 >= (\ud55c \ubc88\uc758 \ud6c8\ub828\uc5d0\uc11c) \uc18c\ube44\ud55c \ubc30\uce58\uc758 \uc218\n    - tf.data.experimental.AUTOTUNE\uc73c\ub85c \uc124\uc815\ud558\uba74 tf.data \ub7f0\ud0c0\uc784\uc774 \uc2e4\ud589 \uc2dc\uc5d0 \ub3d9\uc801\uc73c\ub85c \uac12\uc744 \uc870\uc815\ud568\n            \ntf.data.Dataset.map\n= \uc0ac\uc6a9\uc790 \uc815\uc758 \ud568\uc218\ub97c \ub370\uc774\ud130\uc14b\uc758 \uac01 \ub370\uc774\ud130\uc5d0 \uc801\uc6a9\n\ntf.data.Dataset.cache\n= \ub370\uc774\ud130\uc14b\uc744 \uba54\ubaa8\ub9ac\/\ub85c\uceec \uc800\uc7a5\uc18c\uc5d0 \uc800\uc7a5 (\uac01 \ub7f0\ud0c0\uc784\uc774 \uc2e4\ud589\ub418\ub294 \ub3d9\uc548\uc758 \uc77c\ubd80 \uc791\uc5c5\uc744 \uc800\uc7a5)\n'''","74570f2c":"pretrained_base = tf.keras.models.load_model(\n    '..\/input\/cv-course-models\/cv-course-models\/vgg16-pretrained-base')\n# .load_model : \uc0ac\uc804 \ud559\uc2b5\ub418\uc5b4 \uc800\uc7a5\ub41c \ubaa8\ub378\uc744 \ubd88\ub7ec\uc634\n\npretrained_base.trainable = False ","fc5b06c1":"import tensorflow.keras as keras\nimport tensorflow.keras.layers as layers\n\nmodel = keras.Sequential([\n    pretrained_base,\n    layers.Flatten(),\n    layers.Dense(6, activation = 'relu'),\n    layers.Dense(1, activation = 'sigmoid')\n])","b6f19c01":"# \ubaa8\ub378\uc744 \ud559\uc2b5\uc2dc\ud0a4\uae30 \uc804, compile() \uba54\uc18c\ub4dc\ub85c \ud559\uc2b5 \ubc29\uc2dd\uc5d0 \ub300\ud55c \ud658\uacbd \uc124\uc815\nmodel.compile(\n    optimizer = 'adam',  # \ucd5c\uc801\ud654 \ubc29\ubc95\n    loss = 'binary_crossentropy', # \uc624\ucc28 \uacc4\uc0b0 \ubc29\ubc95(\uc190\uc2e4 \ud568\uc218)\n    metrics = ['binary_accuracy'] # \uae30\uc900(metric) \ub9ac\uc2a4\ud2b8 : \ubd84\ub958 \ubb38\uc81c\ub294 accuracy\ub85c \uc9c0\uc815\ud568\n)\n\n# \ubaa8\ub378 \ud559\uc2b5\uc2dc\ud0a4\uae30 fit()\nhistory = model.fit(\n    ds_train, # \ud6c8\ub828 \ub370\uc774\ud130\n    validation_data = ds_valid, # \uac80\uc99d \ub370\uc774\ud130 \n    epochs = 30  # \ud6c8\ub828 \ud69f\uc218(epoch)\n)","32203292":"import pandas as pd\n\nhistory_frame = pd.DataFrame(history.history)  # \uc624\ucc28\uc640 \uae30\uc900 \uc815\ubcf4\ub97c \ub370\uc774\ud130\ud504\ub808\uc784\uc73c\ub85c \uc804\ud658\n# \uadf8\ub798\ud504 1 : \uac00\ub85c\ucd95 epoch, \uc138\ub85c\ucd95 loss(\ud6c8\ub828 \uc624\ucc28) & val_loss(\uac80\uc99d \uc624\ucc28)\nhistory_frame.loc[:, ['loss','val_loss']].plot()\n# \uadf8\ub798\ud504 2 : \uac00\ub85c\ucd95 epoch, \uc138\ub85c\ucd95 binary_accuracy(\ud6c8\ub828 \uc815\ud655\ub3c4) & val_binary_accuracy(\uac80\uc99d \uc815\ud655\ub3c4)\nhistory_frame.loc[:, ['binary_accuracy','val_binary_accuracy']].plot()","22081a5b":"# \uc18c\uac1c\n\ucef4\ud4e8\ud130 \ube44\uc804 \ubd84\uc57c\uc758 \uac00\uc7a5 \uadfc\ubcf8\uc801\uc778 \ubaa9\ud45c\ub294 \uc778\uac04\uc758 \uc2dc\uac01 \uc778\uc9c0 \ub2a5\ub825\uc5d0 \ubc84\uae08\uac00\ub294 \uc778\uacf5\uc2e0\uacbd\ub9dd \ud504\ub85c\uadf8\ub7a8\uc744 \ub9cc\ub4dc\ub294 \uac83\uc774\ub2e4. \uc989, **\uc778\uacf5\uc2e0\uacbd\ub9dd\uc774 \uc778\uac04\ub9cc\ud07c \uc790\uc5f0 \uc0c1\ud0dc\uc758 \uc774\ubbf8\uc9c0\ub97c \uc798 '\uc774\ud574\ud560 \uc218 \uc788\ub3c4\ub85d'** \ud558\ub294 \uac83\uc774\ub2e4.  \n  \n\uc774\ub7f0 \ubaa9\ud45c\ub97c \uac00\uc7a5 \uc798 \uc218\ud589\ud560 \uc218 \uc788\ub294 \uc2e0\uacbd\ub9dd \ub124\ud2b8\uc6cc\ud06c\ub294 '**\ud569\uc131\uacf1 \uc2e0\uacbd\ub9dd \ub124\ud2b8\uc6cc\ud06c(Convolutional Neural Networks, ConvNet, CNN)**'\uc774\ub2e4. \uc5ec\uae30\uc11c \ud569\uc131\uacf1\uc740 ConvNet\uc774 \uac00\uc9c0\ub294 \ud2b9\uc218\ud55c \uad6c\uc870\ub97c \uc124\uba85\ud558\ub294 \uc218\ud559\uc801 \uacc4\uc0b0 \uacfc\uc815\uc774\ub2e4. \uc774 \ud569\uc131\uacf1 \uad6c\uc870\uac00 \uc65c \uc774\ubbf8\uc9c0 \ucc98\ub9ac\uc5d0 \uc801\ud569\ud55c\uc9c0\ub294 \ub098\uc911\uc5d0 \uc0b4\ud3b4\ubcfc \uac83\uc774\ub2e4.  \n  \n\uc774\uc81c **\uc774\ubbf8\uc9c0 \ubd84\ub958(image classification)** \ubb38\uc81c\uc5d0 \ud569\uc131\uacf1 \uc2e0\uacbd\ub9dd\uc744 \uc801\uc6a9\ud574\ubcf4\uc790. \uc0ac\uc9c4 \uc18d \uc2dd\ubb3c\uc744 \ubd84\ub958\ud558\ub294 \uc571\uacfc \uac19\uc740 \uc11c\ube44\uc2a4\uac00 \uc774\ubbf8\uc9c0 \ubd84\ub958\uc790(image classifier)\uc774\ub2e4. \uc774 \ucf54\uc2a4\uc5d0\uc120 \uc2e4\uc81c\ub85c \uc0ac\uc6a9\ub418\ub294 \ubd84\ub958\uc790\ub9cc\ud07c \ud6a8\uacfc\uac00 \uc88b\uc740 \ubd84\ub958\uc790\ub97c \ub9cc\ub4e4\uc5b4 \ubcfc \uac83\uc774\ub2e4.  \n\n\uc774\ubbf8\uc9c0 \ubd84\ub958\uc5d0 \ub354 \ub9ce\uc740 \ube44\uc911\uc744 \ub450\uace0 \uc124\uba85\uc744 \ud560 \uac83\uc774\uc9c0\ub9cc, \uc774 \ucf54\uc2a4\uc758 \ub0b4\uc6a9\uc740 \ubaa8\ub4e0 \ucef4\ud4e8\ud130 \ube44\uc804 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\ub294\ub370\uc5d0 \ub3c4\uc6c0\uc774 \ub41c\ub2e4. \ub05d\uc5d0 \ub2e4\ub2e4\ub97c\ub54c\uba74 '\uc0dd\uc0b0\uc801 \uc801\ub300 \uc2e0\uacbd\ub9dd(Generative Adversarial Networks)'\uacfc '\uc774\ubbf8\uc9c0 \ubd84\ud560(image segmentation)'\ucc98\ub7fc \ubcf4\ub2e4 \uc5b4\ub824\uc6b4 \uacf3\uc5d0 \uc801\uc6a9\ud560 \uc218 \uc788\uc744 \uac83\uc774\ub2e4.","6391048d":"### Step 2 - \uc0ac\uc804 \ud559\uc2b5\ub41c \ubca0\uc774\uc2a4 \uc815\uc758\ud558\uae30   \n\n\ud754\ud788 \uc0ac\uc804 \ud559\uc2b5\uc744 \uc704\ud574 \uc0ac\uc6a9\ud558\ub294 \ub370\uc774\ud130\uc14b\uc740 'ImageNet'\uc774\ub2e4.  \nKeras\uc758 applications \ubaa8\ub4c8\uc5d0\ub294 ImageNet\uc5d0 \ub300\ud574 \uc0ac\uc804 \ud559\uc2b5\ub41c \ub2e4\uc591\ud55c \ubaa8\ub378\uc774 \uc788\ub2e4.  \n\uc608\uc2dc\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc0ac\uc804 \ud559\uc2b5\ub41c \ubaa8\ub378\uc740 VGG16\uc774\ub2e4.","e2156703":"### Step 4 - \ud6c8\ub828\ud558\uae30    \n\n\ub9c8\uc9c0\ub9c9\uc73c\ub85c \ubaa8\ub378\uc744 \ud6c8\ub828\uc2dc\ud0a4\uc790.  \n\ud074\ub798\uc2a4\uac00 2\uac1c\uc778 \ubb38\uc81c\uc774\ubbc0\ub85c, crossentropy\uc640 accuracy\ub97c \uc774\uc9c4 \ubc84\uc83c\uc73c\ub85c \uc0ac\uc6a9\ud55c\ub2e4.  \nadam \ucd5c\uc801\ud654\ub294 \ub300\ubd80\ubd84 \uc798 \uc791\ub3d9\ud558\ubbc0\ub85c, \uc774\ubc88 \uc608\uc2dc\uc5d0\uc11c\ub3c4 \uc774\ub97c \uc0ac\uc6a9\ud55c\ub2e4.","fb944b3e":"# Kaggle Courses - Computer Vision\n## 01. \ud569\uc131\uacf1 \ubd84\ub958\uc790\n\uce90\uae00 \ucf54\uc2a4\uc758 \ucef4\ud4e8\ud130 \ube44\uc804 \uac15\uc758\ub97c \ubc88\uc5ed \ubc0f \uc815\ub9ac\ud55c \ub0b4\uc6a9\uc785\ub2c8\ub2e4.  \nby. yhee3000","08ef57c1":"# \uacb0\ub860  \n\uccab \ubc88\uc9f8 \ub808\uc2a8\uc5d0\uc11c\ub294 ConvNet \ubd84\ub958\uc790\uc758 \uad6c\uc870\ub97c \uc54c \uc218 \uc788\uc5c8\ub2e4 : (\uc774\ubbf8\uc9c0) \ud2b9\uc131\uc744 \ucd94\ucd9c\ud558\ub294 \ubca0\uc774\uc2a4(base)\uc640 \uc2e4\uc81c \ubd84\ub958 \uc791\uc5c5\uc744 \ud558\ub294 \ud5e4\ub4dc(head).  \n  \n\ud5e4\ub4dc\ub294 \uc77c\ubc18\uc801\uc778 \ubd84\ub958\uc790\uc640 \uac19\ub2e4. \ud2b9\uc131\ub4e4\uc740 \ubca0\uc774\uc2a4\ub85c\ubd80\ud130 \uc5bb\uc744 \uc218 \uc788\ub2e4. \uc774\ub807\uac8c \ubd84\ub958\uc790 \uc790\uccb4\uc5d0 \ud2b9\uc131 \uacf5\ud559(feature engineering)\uc744 \uc801\uc6a9\ud558\ub294 \uc694\uc18c(unit)\ub97c \uc9c1\uc811 \ub354\ud560 \uc218 \uc788\ub2e4\ub294 \uac83\uc774 \ud569\uc131\uacf1 \ubd84\ub958\uc790\uc758 \uae30\ubcf8\uc801\uc778 \uc544\uc774\ub514\uc5b4\uc774\ub2e4.   \n  \n\uc989, \uc62c\ubc14\ub978 \ub124\ud2b8\uc6cc\ud06c \uad6c\uc870\ub97c \uac00\uc9c0\uba74 \ub525\uc2e0\uacbd\ub9dd\uc740 \ud574\ub2f9 \ubb38\uc81c(ex. \ubd84\ub958)\ub97c \ud574\uacb0\ud558\uae30 \uc704\ud574 \ud2b9\uc131\uc744 \uc870\uc808\ud560 \uc218 \uc788\ub2e4. \uc774\uac83\uc774 \uae30\uc874 \uba38\uc2e0\ub7ec\ub2dd \ubaa8\ub378\uacfc \ube44\uad50\ud558\uc5ec \ub525\uc2e0\uacbd\ub9dd \uad6c\uc870\ub4e4\uc774 \uac00\uc9c0\ub294 \uac00\uc7a5 \ud070 \uc7a5\uc810 \uc911 \ud558\ub098\uc774\ub2e4. ","4dc031ed":"# \ud569\uc131\uacf1 \ubd84\ub958\uc790\n\uc774\ubbf8\uc9c0 \ubd84\ub958\ub97c \uc704\ud574 \uc0ac\uc6a9\ub418\ub294 ConvNet\uc740 \ub450 \uac1c\uc758 \uc694\uc18c\ub97c \uac00\uc9c4\ub2e4   \n: \ud569\uc131\uacf1 \ubca0\uc774\uc2a4(convolutional base)\uc640 \ubc00\uc9d1\ud55c \ud5e4\ub4dc(dense head) \n![image.png](attachment:image.png)\n  \n* **\ubca0\uc774\uc2a4 : \uc774\ubbf8\uc9c0\uc758 \ud2b9\uc131(feature)\ub97c \ucd94\ucd9c\ud558\uae30 \uc704\ud568.**   \n\ub300\ubd80\ubd84 \ud569\uc131\uacf1 \uacc4\uc0b0\uc744 \ud558\ub294 \ub808\uc774\uc5b4\ub85c \uc774\ub8e8\uc5b4\uc9c0\uc9c0\ub9cc \ub2e4\ub978 \ub808\uc774\uc5b4\ub3c4 \ud3ec\ud568\ub41c\ub2e4.  \n* **\ud5e4\ub4dc : \uc774\ubbf8\uc9c0\uc5d0\uc11c \ud074\ub798\uc2a4(\ub808\uc774\ube14)\ub97c \uacb0\uc815\ud558\uae30 \uc704\ud568.**   \n\ub300\ubd80\ubd84 \ubc00\uc9d1\ud55c \ub808\uc774\uc5b4(dense layer)\ub85c \uc774\ub8e8\uc5b4\uc9c0\uc9c0\ub9cc \ub4dc\ub86d\uc544\uc6c3\uacfc \uac19\uc740 \ub2e4\ub978 \ub808\uc774\uc5b4\ub3c4 \ud3ec\ud568\ud560 \uc218 \uc788\ub2e4.   \n  \n\uc5ec\uae30\uc11c \uc2dc\uac01\uc801 '\ud2b9\uc131'\uc740 \ubb34\uc5c7\uc744 \uc758\ubbf8\ud560\uae4c? \ud2b9\uc131(feature)\uc740 \uc120, \uc0c9, \ubaa8\uc591, \ud328\ud134 \ub610\ub294 \ub2e4\ub978 \ubcf5\uc7a1\ud55c \uc694\uc18c\uac00 \ub420 \uc218 \uc788\ub2e4.  \n  \n\ub530\ub77c\uc11c \uc774\ubbf8\uc9c0 \ubd84\ub958\uc758 \uc804\uccb4 \uacfc\uc815\uc740 \uc544\ub798\uc640 \uac19\ub2e4.\n1. \uc774\ubbf8\uc9c0\uc5d0\uc11c \ud2b9\uc131\uc744 \ucd94\ucd9c\ud558\uace0 (\ubca0\uc774\uc2a4)  \n2. \ud2b9\uc131\uc744 \ubc14\ud0d5\uc73c\ub85c \ud074\ub798\uc2a4\ub97c \uacb0\uc815\ud558\uc5ec (\ud5e4\ub4dc)  \n3. \ucd5c\uc885 \uacb0\uacfc\ub97c \ub3c4\ucd9c","3226d3a1":"\uc2e0\uacbd\ub9dd\uc744 \ud559\uc2b5\uc2dc\ud0ac \ub550, \ud56d\uc0c1 \uc624\ucc28(loss)\uc640 \uae30\uc900(metric)\uc744 \uadf8\ub798\ud504\ub97c \uadf8\ub824 \ud655\uc778\ud558\ub294 \uac83\uc774 \uc88b\ub2e4.  \nhistory \uac1d\uccb4\ub294 \uc774 \uc815\ubcf4\ub97c history.history \ub515\uc154\ub108\ub9ac\uc5d0 \uc800\uc7a5\ud55c\ub2e4.   \nPandas\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774 \ub515\uc154\ub108\ub9ac\ub97c \ub370\uc774\ud130\ud504\ub808\uc784\uc73c\ub85c \uc804\ud658\ud558\uc5ec \ub0b4\uc7a5\ub41c \ubc29\ubc95\uc73c\ub85c \uadf8\ub798\ud504\ub97c \uadf8\ub9b4 \uc218 \uc788\ub2e4.","478b7480":"# \uc608\uc2dc- \ud569\uc131\uacf1 \ubd84\ub958\uc790 \ud6c8\ub828\uc2dc\ud0a4\uae30\n\uc608\uc81c\ub97c \ud1b5\ud574 \ud574\uacb0\ud560 \ubb38\uc81c\ub294 \ud2b9\uc815 \uc774\ubbf8\uc9c0\uac00 '\ucc28(car)'\uc778\uc9c0 '\ud2b8\ub7ed(truck)'\uc778\uc9c0 \uad6c\ubcc4\ud558\ub294 \ubb38\uc81c\uc774\ub2e4. \uc0ac\uc6a9\ud560 \ub370\uc774\ud130\uc14b\uc740 \ubc18\uc740 \ucc28, \ubc18\uc740 \ud2b8\ub7ed\uc778 10,000\uac1c\uc758 \uc774\ubbf8\uc9c0\ub85c \uc774\ub8e8\uc5b4\uc9c4\ub2e4.","be93df81":"### Step 1 - \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30 \n\n\ud544\uc694\ud55c \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \ubd88\ub7ec\uc624\uace0 \ub370\uc774\ud130 \ud30c\uc774\ud504\ub77c\uc778\uc744 \uad6c\ucd95\ud55c\ub2e4.   \n\ud559\uc2b5\uc5d0 \uc0ac\uc6a9\ud560 \ub370\uc774\ud130\ub97c ds_train, \uac80\uc99d\uc5d0 \uc0ac\uc6a9\ud560 \ub370\uc774\ud130\ub97c ds_valid\ub77c\uace0 \uc800\uc7a5\ud55c\ub2e4.","ef0b865b":"### Step 3 - \ud5e4\ub4dc \uc5f0\uacb0\ud558\uae30    \n\n\uadf8 \ub2e4\uc74c\uc5d4 \ubd84\ub958\uc790 \ud5e4\ub4dc(classifier head)\ub97c \uc5f0\uacb0\ud55c\ub2e4.  \n\uc774 \uc608\uc2dc\uc5d0\uc11c\ub294 \ud788\ub4e0 \ub808\uc774\uc5b4(\uccab \ubc88\uc9f8 Dense \ub808\uc774\uc5b4)\uc640  \n\ucd9c\ub825\uac12\uc744 \ud074\ub798\uc2a4 1\uc778 Truck\uc5d0 \ub300\ud55c \ud655\ub960 \uc2a4\ucf54\uc5b4\ub85c \ubcc0\ud658\ud558\ub294 \ub808\uc774\uc5b4\ub97c \uc0ac\uc6a9\ud55c\ub2e4.  \nFlatten \ub808\uc774\uc5b4\ub294 \ubca0\uc774\uc2a4\uc758 2\ucc28\uc6d0 \ucd9c\ub825\uac12\uc744 \ud5e4\ub4dc\uac00 \ud544\uc694\ub85c \ud558\ub294 1\ucc28\uc6d0 \uc785\ub825\uac12\uc73c\ub85c \ubcc0\ud658\ud55c\ub2e4.","4983be52":"# \ubd84\ub958\uc790 \ud6c8\ub828\uc2dc\ud0a4\uae30\n  \n\ud559\uc2b5 \uacfc\uc815\uc5d0\uc11c \ub124\ud2b8\uc6cc\ud06c\uac00 \ubc30\uc6cc\uc57c \ud560 \uac83\uc740 \ub450 \uac00\uc9c0\uc774\ub2e4.\n* \uc774\ubbf8\uc9c0\uc5d0\uc11c \uc5b4\ub5a4 \ud2b9\uc131\uc744 \ucd94\ucd9c\ud560\uc9c0 (\ubca0\uc774\uc2a4)\n* \ud2b9\uc815\ud55c \ud2b9\uc131\uc774 \uc5b4\ub5a4 \ud074\ub798\uc2a4\uc640 \uc5f0\uad00\uc788\ub294\uc9c0 (\ud5e4\ub4dc) \n  \n\uc694\uc998\uc758 ConvNet\uc740 \ucc98\uc74c\ubd80\ud130 \uc9dc\uc5ec\uc9c0\ub294 \uacbd\uc6b0\uac00 \uac70\uc758 \uc5c6\ub2e4. \ub300\ubd80\ubd84 '\ubbf8\ub9ac \ud6c8\ub828\ub41c(pre-trained)' \ubaa8\ub378\uc758 \ubca0\uc774\uc2a4\ub97c \uc7ac\ud65c\uc6a9\ud55c\ub2e4. \uc774 \ubca0\uc774\uc2a4\uc5d0 \ud6c8\ub828\ub418\uc9c0 \uc54a\uc740 \ud5e4\ub4dc\ub97c \ubd99\uc5ec\uc11c \uc0ac\uc6a9\ud55c\ub2e4. \uc989, \ud2b9\uc131\uc744 \ucd94\ucd9c\ud558\ub294 \ubd80\ubd84\uc740 \uc774\ubbf8 \ud6c8\ub828\ub41c \ubaa8\ub378\uc744 \uac00\uc838\uc640 \uc7ac\ud65c\uc6a9\ud558\uace0 \ud074\ub798\uc2a4\ub97c \ubd84\ub958\ud558\ub294 \ubd80\ubd84\uc740 \uc0c8\ub86d\uac8c \ub808\uc774\uc5b4\ub97c \ub9cc\ub4dc\ub294 \uac83\uc774\ub2e4.   \n  \n\ud5e4\ub4dc\ub294 \ub300\ubd80\ubd84 \uba87 \uac1c\uc758 \ubc00\uc811\ud55c \ub808\uc774\uc5b4\ub85c\ub9cc \uc774\ub8e8\uc5b4\uc838 \uc788\uae30\uc5d0 \uc0c1\ub300\uc801\uc73c\ub85c \uc801\uc740 \uc591\uc758 \ub370\uc774\ud130\ub85c\ub3c4 \uc815\ud655\ud55c \ubd84\ub958\uc790\ub97c \ub9cc\ub4e4\uc5b4\ub0bc \uc218 \uc788\ub2e4.  \n  \n\ubbf8\ub9ac \ud6c8\ub828\ub41c \ubaa8\ub378\uc744 \uc7ac\ud65c\uc6a9\ud558\ub294 \uae30\ubc95\uc740 '**\uc804\uc774 \ud559\uc2b5(transfer learning)**'\uc774\ub77c\uace0 \ud55c\ub2e4. \ub300\ubd80\ubd84\uc758 \uc774\ubbf8\uc9c0 \ubd84\ub958\uc790\ub4e4\uc740 \uc774 \ubc29\ubc95\uc744 \uc0ac\uc6a9\ud55c\ub2e4."}}