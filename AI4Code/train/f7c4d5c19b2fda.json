{"cell_type":{"5511849d":"code","ece6f49c":"code","2d706f11":"code","e27ced5f":"code","f771e0d0":"code","fba1c5b4":"code","7ae2452c":"markdown","91dcb324":"markdown","8aa1686c":"markdown","f91b3736":"markdown","a58aee88":"markdown","74177f78":"markdown"},"source":{"5511849d":"import pandas as pd\npd.options.display.max_columns = 100\npd.options.display.max_rows = 100\npd.options.display.float_format = lambda x: f' {x:,.2f}'\nimport warnings\nwarnings.filterwarnings(\"ignore\")","ece6f49c":"games = pd.read_csv('..\/input\/game_data.csv', parse_dates=['Game_Date'])\ngames.head(2)","2d706f11":"# assign our variable so the rest of the code works nicely\ndata = games\n\n# helper function to count the blanks (not the NaN's, but the actual blank values)\ndef count_blanks(column):\n    count = 0\n    for thing in column:\n        if not thing:\n            count += 1\n    return count\n\n# create the data dictionary directly (mostly empty info at this point)\ndata_dictionary = pd.DataFrame(index=data.columns, columns=['unique', 'missing', 'blank', 'read type',\n                                                            'act type', 'description'])\nfor name in data.columns:\n    data_dictionary.loc[name,'missing'] = data[name].isna().sum()\n    data_dictionary.loc[name, 'unique'] = data[name].nunique()\n    data_dictionary.loc[name,'blank'] = count_blanks(data[name])\n    data_dictionary.loc[name, 'values'] = str(data[name].unique())\n    data_dictionary.loc[name,'act type'] = 'string'\n    data_dictionary.loc[name,'read type'] = str(data[name].dtype)\n    \n# just to make sure it's looking like I want\ndata_dictionary","e27ced5f":"# defining manually which columns should be which kind of data type\n\n# the data that should be dtype string\ndata_strings = ['Season_Type', 'Game_Day','Game_Site', 'Start_Time', \n                'Home_Team', 'HomeTeamCode', 'Visit_Team', 'VisitTeamCode', \n                'Stadium', 'StadiumType', 'Turf', 'GameWeather', 'OutdoorWeather']\ndata_bools = [] # data that should be dtype boolean (none in this dataset)\ndata_ints = ['GameKey', 'Season_Year', 'Week'] # data that should be dtype int\ndata_floats = ['Temperature'] # data that should be dtype float\ndata_dates = ['Game_Date'] # data that should be dtype datetime\n\n# defining manually what each column actually is\ndata_dictionary.loc['GameKey','description'] = (\n            'Looks like just an index from 1 instead of 0')\ndata_dictionary.loc['Season_Year','description'] = (\n            'One of the two years covered in this dataset')\ndata_dictionary.loc['Season_Type','description'] = (\n            'Pre, post or regular season')\ndata_dictionary.loc['Week','description'] = (\n            'The week in which the game is played')\ndata_dictionary.loc['Game_Date','description'] = (\n            'Date on which the game is played')\ndata_dictionary.loc['Game_Day','description'] = (\n            'Day of the week (word) in which the game is played')\ndata_dictionary.loc['Game_Site','description'] = (\n            'City, country or other location of the stadium')\ndata_dictionary.loc['Start_Time','description'] = (\n            'Start of the game (kickoff?) in 24 hour scale')\ndata_dictionary.loc['Home_Team','description'] = (\n            'Full name of the home team including loc and mascot')\ndata_dictionary.loc['HomeTeamCode','description'] = (\n            'Two or three letter team identifier')\ndata_dictionary.loc['Visit_Team','description'] = (\n            'Full name of the visiting team including loc and mascot')\ndata_dictionary.loc['VisitTeamCode','description'] = (\n            'Two or three letter team identifier')\ndata_dictionary.loc['Stadium','description'] = (\n            'Full name of stadium')\ndata_dictionary.loc['StadiumType','description'] = (\n            'Type as well as status of stadium. Many dup\\'s b\/c of typos')\ndata_dictionary.loc['Turf','description'] = (\n            'Type of turf. Many dup\\'s b\/c of typos')\ndata_dictionary.loc['GameWeather','description'] = (\n            'Sometimes detailed sometimes not. Should be cleaned')\ndata_dictionary.loc['Temperature','description'] = (\n            'Temperature, assumingly in Fahrenheit')\ndata_dictionary.loc['OutdoorWeather','description'] = (\n            'Sometimes detailed sometimes not. Not sure relation to GameWeather')","f771e0d0":"# insert into the dictionary df the types they should be\ndata_dictionary.loc[data_bools,'act type'] = 'bool'\ndata_dictionary.loc[data_ints,'act type'] = 'int'\ndata_dictionary.loc[data_floats,'act type'] = 'float'\ndata_dictionary.loc[data_dates,'act type'] = 'date'\n\ndata_dictionary","fba1c5b4":"# save data dictionary to a file for later use if you want\n# data_dictionary.to_csv('..\/output\/NFL_Game_Data_Dictionary.csv')","7ae2452c":"## Save data dictionary as a file to use\nYou can save it yourself, or accessed the [ready-made file here](https:\/\/www.kaggle.com\/mathfour\/nfl-game-data-dictionary?target=_blank).","91dcb324":"# NFL Game Data Dictionary Creation Code\nby [Bon Crowder](http:\/\/boncrowder.com)","8aa1686c":"This is the creation code for creating and saving a data dictionary for the `game_data.csv` data in the [Kaggle NFL Punt Analytics Competition](https:\/\/www.kaggle.com\/c\/NFL-Punt-Analytics-Competition\/data).\n\n* Find the [actual data dictionary here](https:\/\/www.kaggle.com\/mathfour\/nfl-game-data-dictionary?target=_blank).","f91b3736":"## Create the Data Dictionary Shell\nMost of the bits are blank here. In the next step, I'll write in the details.","a58aee88":"## Define the parts of this particular data dictionary\nThis is the part where I had to manually insert the column names into the dtypes they _should_ be in.","74177f78":"## Read in the Data"}}