{"cell_type":{"40fa6363":"code","a00f085e":"code","2f6381f7":"code","6cd3b14b":"code","67dc953c":"code","69732644":"code","f84fa83d":"code","eb6db6d3":"markdown","10e9e518":"markdown","5bb6e1a7":"markdown","e26434aa":"markdown","d6cf5f41":"markdown","9e7b3a73":"markdown"},"source":{"40fa6363":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\n# References: https:\/\/www.kaggle.com\/berhag\/co2-emission-forecast-with-python-seasonal-arima\n# References: https:\/\/github.com\/statsmodels\/statsmodels\/issues\/4465\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # plotting\nimport seaborn as sns\nimport editdistance\n\nsns.set(style=\"darkgrid\")\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\n\nfile_name = os.listdir(\"..\/input\/home-medical-visits-healthcare\/\")[0]\ndf = pd.read_csv('..\/input\/home-medical-visits-healthcare\/Hack2018_ES.csv', parse_dates=[9])\n\n\nprint(\"The dataset has {} rows with {} features each\".format(len(df), len(df.columns)))\ndf.head()","a00f085e":"def conversion(text):\n    if text.startswith(\"amigdalitis aguda\"):\n        return \"amigdalitis aguda\"\n    return text\n\ndef remove(text):\n    for w in ['anonymxxx']:\n        text = text.replace(w, ' ')\n    return text\n\ndef clean_patologia(text):\n    text = text.lower()\n    text = remove(text)\n    text = text.split(\" con \")[0]\n    text = text.split(\" -\")[0]\n    text = text.split(\"llamar\")[0]\n    text = text.split(\"pc smc\")[0]\n    text = text.strip()\n    text = conversion(text)\n    text = ' '.join([t for t in text.split(' ') if len(t) > 0])\n    return text\n\nprint(\"Before: {}\".format(len(df.patologia.unique())))\n\ncleaned = df.patologia.apply(clean_patologia)\nprint(\"After: {}\".format(len(cleaned.unique())))\n', '.join(cleaned.unique().tolist())","2f6381f7":"patologies = pd.read_csv('..\/input\/classes-patologia\/patologias.csv')\nmapping = dict()\nfor cat, row in patologies.transpose().iterrows():\n    row = row[pd.notnull(row)].values\n    for value in row:\n        mapping[value.lower()] = cat","6cd3b14b":"def map_to_classes(name):\n    if name in mapping:\n        return mapping[name]\n    for key in mapping:\n        if editdistance.eval(name, key) < 3:\n            return mapping[key]\n    return np.nan\n\ncleaned.apply(map_to_classes).value_counts()\n\ndf['cleaned'] = cleaned\ndf['E_class'] = cleaned.apply(map_to_classes)","67dc953c":"print(\"{} unclassigied pathologies\".format(len(df[pd.isnull(df.E_class)])))\ndf[pd.isnull(df.E_class)].cleaned.value_counts()","69732644":"df.loc[pd.isnull(df.E_class),'E_class'] = 'OTROS'\ndf.to_csv('Hack2018_ES_cleaned.csv', index=False)","f84fa83d":"plt.figure(figsize=(12,5))\nfig = sns.countplot(df.E_class, order = df.E_class.value_counts().index)\nfig.set_title(\"#Visits per pathology category\")\nfig.set_xlabel(\"Pathology\")\nplt.xticks(rotation=90)\nplt.show()","eb6db6d3":"Load the mapping to of pathologies to ICD and list unmatched values","10e9e518":"# 2. Processing\nLet's load the dataset:","5bb6e1a7":"Let's assign the unclassified pathologies to the class **Others (OTROS)**","e26434aa":"Clean and list pathologies found","d6cf5f41":"# 3.Visualization\nLet's plot the pathology class count:","9e7b3a73":"# 1. Introduction\n\nThis notebook classifies the syntoms reported in [Home Medical Visits](https:\/\/www.kaggle.com\/HackandHealth\/home-medical-visits-healthcare) dataset released in the context [Hack&Health 2018](https:\/\/www.terrassa.cat\/es\/hack-health). The classification is based on [ICD (International Statistical Classification of Diseases and Related Health Problems)](https:\/\/en.wikipedia.org\/wiki\/International_Statistical_Classification_of_Diseases_and_Related_Health_Problems)."}}