{"cell_type":{"1f4c6ce9":"code","e65ee053":"code","692445a6":"code","c71a8066":"code","b4f80ff2":"code","15e768c2":"code","1470f556":"code","614de0eb":"code","25c44b35":"code","79bca18e":"code","117df102":"code","9a980156":"code","0303e82a":"code","843667bd":"code","15c4215f":"code","3e70500c":"code","2466bd41":"code","82ede9ea":"code","4fac41a2":"code","747ae106":"code","62ad7cce":"code","4f7b2a36":"code","a76ba016":"code","cf9798f4":"code","815f670a":"code","53073a6a":"code","33562103":"code","cc9aeb8f":"code","0ef616dd":"code","b8da468b":"code","9eef7215":"code","27d02a6f":"code","c2875430":"code","1862b961":"code","949ea208":"code","22b200f9":"code","4f3672f9":"code","d7534ecd":"code","7bc435f1":"code","7c953404":"code","cdc282a7":"code","7514f4a4":"code","87c64c41":"code","1d7da788":"code","46a6774b":"code","0d7a6f4f":"code","a823ee2b":"code","97e59389":"code","c34ce932":"code","8bf376d2":"code","eaa0423a":"code","854f9fea":"code","41ee0162":"code","560cb819":"code","bdce251c":"code","2fe58e0a":"code","fb52b1f2":"code","4c9ee0c5":"code","657613b3":"markdown","37bfdb0b":"markdown","6e57e0d1":"markdown","af7acac2":"markdown","6993d96d":"markdown","1f7ca9bb":"markdown","2695f1cb":"markdown","d909d032":"markdown","ffb62f14":"markdown","fbc0090e":"markdown","9e0b9810":"markdown","8ba95fe7":"markdown","9ab39f79":"markdown","5bc4f483":"markdown","8592a291":"markdown","47139c44":"markdown","7cc4a05b":"markdown","29a883f1":"markdown","4d0a09eb":"markdown","cea5c6f1":"markdown","626734e4":"markdown","5c2dfba3":"markdown","9b1b5862":"markdown","c0813c40":"markdown","d56591e0":"markdown","9e21eb5f":"markdown","32013498":"markdown","1885b94d":"markdown","2cb9d98d":"markdown","3b3d05a0":"markdown","51e13454":"markdown","7b01880e":"markdown","c50c6b54":"markdown"},"source":{"1f4c6ce9":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nfrom scipy.stats import norm\nfrom sklearn.preprocessing import StandardScaler\nfrom scipy import stats\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\/cervical-cancer-risk-classification\/kag_risk_factors_cervical_cancer.csv\"]).decode(\"utf8\"))","e65ee053":"df = pd.read_csv(\"..\/input\/cervical-cancer-risk-classification\/kag_risk_factors_cervical_cancer.csv\")","692445a6":"df.head(13)","c71a8066":"df.tail(13)","b4f80ff2":"df.shape","15e768c2":"df.info()","1470f556":"df.isnull().any() # Buscamos posibles valores NULL","614de0eb":"df.columns","25c44b35":"print(df.shape)\ncount_row = df.shape[0]  # row\nprint(count_row)\ncount_col = df.shape[1] # col\nprint(count_col)","79bca18e":"df_na = df.replace('?', np.nan)","117df102":"df_na.isnull().sum() #check NaN counts in different columns","9a980156":"df_na.head(13)","0303e82a":"df = df_na #df temporal\ndf_na.head(13)","843667bd":"df_na.info()","15c4215f":"#df = df.convert_objects(convert_numeric=True) #DEPRECATED\ndf = df.apply(pd.to_numeric, errors='coerce')\ndf.head(13)","3e70500c":"df.info()","2466bd41":"# for continuous variable\ndf['Number of sexual partners'] = df['Number of sexual partners'].fillna(df['Number of sexual partners'].median())\ndf['First sexual intercourse'] = df['First sexual intercourse'].fillna(df['First sexual intercourse'].median())\ndf['Num of pregnancies'] = df['Num of pregnancies'].fillna(df['Num of pregnancies'].median())\ndf['Smokes'] = df['Smokes'].fillna(1)\ndf['Smokes (years)'] = df['Smokes (years)'].fillna(df['Smokes (years)'].median())\ndf['Smokes (packs\/year)'] = df['Smokes (packs\/year)'].fillna(df['Smokes (packs\/year)'].median())\ndf['Hormonal Contraceptives'] = df['Hormonal Contraceptives'].fillna(1)\ndf['Hormonal Contraceptives (years)'] = df['Hormonal Contraceptives (years)'].fillna(df['Hormonal Contraceptives (years)'].median())\ndf['IUD'] = df['IUD'].fillna(0) # Under suggestion\ndf['IUD (years)'] = df['IUD (years)'].fillna(0) #Under suggestion\ndf['STDs'] = df['STDs'].fillna(1)\ndf['STDs (number)'] = df['STDs (number)'].fillna(df['STDs (number)'].median())\ndf['STDs:condylomatosis'] = df['STDs:condylomatosis'].fillna(df['STDs:condylomatosis'].median())\ndf['STDs:cervical condylomatosis'] = df['STDs:cervical condylomatosis'].fillna(df['STDs:cervical condylomatosis'].median())\ndf['STDs:vaginal condylomatosis'] = df['STDs:vaginal condylomatosis'].fillna(df['STDs:vaginal condylomatosis'].median())\ndf['STDs:vulvo-perineal condylomatosis'] = df['STDs:vulvo-perineal condylomatosis'].fillna(df['STDs:vulvo-perineal condylomatosis'].median())\ndf['STDs:syphilis'] = df['STDs:syphilis'].fillna(df['STDs:syphilis'].median())\ndf['STDs:pelvic inflammatory disease'] = df['STDs:pelvic inflammatory disease'].fillna(df['STDs:pelvic inflammatory disease'].median())\ndf['STDs:genital herpes'] = df['STDs:genital herpes'].fillna(df['STDs:genital herpes'].median())\ndf['STDs:molluscum contagiosum'] = df['STDs:molluscum contagiosum'].fillna(df['STDs:molluscum contagiosum'].median())\ndf['STDs:AIDS'] = df['STDs:AIDS'].fillna(df['STDs:AIDS'].median())\ndf['STDs:HIV'] = df['STDs:HIV'].fillna(df['STDs:HIV'].median())\ndf['STDs:Hepatitis B'] = df['STDs:Hepatitis B'].fillna(df['STDs:Hepatitis B'].median())\ndf['STDs:HPV'] = df['STDs:HPV'].fillna(df['STDs:HPV'].median())\ndf['STDs: Time since first diagnosis'] = df['STDs: Time since first diagnosis'].fillna(df['STDs: Time since first diagnosis'].median())\ndf['STDs: Time since last diagnosis'] = df['STDs: Time since last diagnosis'].fillna(df['STDs: Time since last diagnosis'].median())","82ede9ea":"# Variables categoricas a numericas\ndf = pd.get_dummies(data=df, columns=['Smokes','Hormonal Contraceptives','IUD','STDs',\n                                      'Dx:Cancer','Dx:CIN','Dx:HPV','Dx','Hinselmann','Citology','Schiller'])","4fac41a2":"df.isnull().sum() #No null left~","747ae106":"df.head(13)","62ad7cce":"df.describe()","4f7b2a36":"df_data = df #making temporary save","a76ba016":"fig, (ax1,ax2,ax3,ax4,ax5,ax6,ax7) = plt.subplots(7,1,figsize=(20,40))\nsns.countplot(x='Age', data=df, ax=ax1)\nsns.countplot(x='Number of sexual partners', data=df, ax=ax2)\nsns.countplot(x='Num of pregnancies', data=df, ax=ax3)\nsns.countplot(x='Smokes (years)', data=df, ax=ax4)\nsns.countplot(x='Hormonal Contraceptives (years)', data=df, ax=ax5)\nsns.countplot(x='IUD (years)', data=df, ax=ax6)\nsns.countplot(x='STDs (number)', data=df, ax=ax7)","cf9798f4":"#Shuffle\nnp.random.seed(42)\ndf_data_shuffle = df_data.iloc[np.random.permutation(len(df_data))]\n\ndf_train = df_data_shuffle.iloc[1:686, :] #Parametros\ndf_test = df_data_shuffle.iloc[686: , :] #Parametros","815f670a":"df_train_feature = df_train[['Age', 'Number of sexual partners', 'First sexual intercourse',\n       'Num of pregnancies', 'Smokes (years)', 'Smokes (packs\/year)',\n       'Hormonal Contraceptives (years)', 'IUD (years)', 'STDs (number)',\n       'STDs:condylomatosis', 'STDs:cervical condylomatosis',\n       'STDs:vaginal condylomatosis', 'STDs:vulvo-perineal condylomatosis',\n       'STDs:syphilis', 'STDs:pelvic inflammatory disease',\n       'STDs:genital herpes', 'STDs:molluscum contagiosum', 'STDs:AIDS',\n       'STDs:HIV', 'STDs:Hepatitis B', 'STDs:HPV', 'STDs: Number of diagnosis',\n       'STDs: Time since first diagnosis', 'STDs: Time since last diagnosis', \n       'Smokes_0.0', 'Smokes_1.0',\n       'Hormonal Contraceptives_0.0', 'Hormonal Contraceptives_1.0', 'IUD_0.0',\n       'IUD_1.0', 'STDs_0.0', 'STDs_1.0', 'Dx:Cancer_0', 'Dx:Cancer_1',\n       'Dx:CIN_0', 'Dx:CIN_1', 'Dx:HPV_0', 'Dx:HPV_1', 'Dx_0', 'Dx_1',\n       'Hinselmann_0', 'Hinselmann_1', 'Citology_0', 'Citology_1','Schiller_0','Schiller_1']]\n\ntrain_label = np.array(df_train['Biopsy'])\n\ndf_test_feature = df_test[['Age', 'Number of sexual partners', 'First sexual intercourse',\n       'Num of pregnancies', 'Smokes (years)', 'Smokes (packs\/year)',\n       'Hormonal Contraceptives (years)', 'IUD (years)', 'STDs (number)',\n       'STDs:condylomatosis', 'STDs:cervical condylomatosis',\n       'STDs:vaginal condylomatosis', 'STDs:vulvo-perineal condylomatosis',\n       'STDs:syphilis', 'STDs:pelvic inflammatory disease',\n       'STDs:genital herpes', 'STDs:molluscum contagiosum', 'STDs:AIDS',\n       'STDs:HIV', 'STDs:Hepatitis B', 'STDs:HPV', 'STDs: Number of diagnosis',\n       'STDs: Time since first diagnosis', 'STDs: Time since last diagnosis', \n       'Smokes_0.0', 'Smokes_1.0',\n       'Hormonal Contraceptives_0.0', 'Hormonal Contraceptives_1.0', 'IUD_0.0',\n       'IUD_1.0', 'STDs_0.0', 'STDs_1.0', 'Dx:Cancer_0', 'Dx:Cancer_1',\n       'Dx:CIN_0', 'Dx:CIN_1', 'Dx:HPV_0', 'Dx:HPV_1', 'Dx_0', 'Dx_1',\n       'Hinselmann_0', 'Hinselmann_1', 'Citology_0', 'Citology_1','Schiller_0','Schiller_1']]\n\ntest_label = np.array(df_test['Biopsy'])","53073a6a":"df_train_feature.head(7)","33562103":"df_test_feature.head(7)","cc9aeb8f":"#Normalization\nfrom sklearn import preprocessing\n\nminmax_scale = preprocessing.MinMaxScaler(feature_range=(0, 1))\n\ntrain_feature = minmax_scale.fit_transform(df_train_feature) #Arreglos numpy\ntest_feature = minmax_scale.fit_transform(df_test_feature)","0ef616dd":"print(train_feature)","b8da468b":"print(train_feature[0])\n\n\nprint(train_label[0])","9eef7215":"print(test_feature[0])\nprint(test_label[0])","27d02a6f":"print(train_feature.shape)\nprint(test_feature.shape)","c2875430":"import matplotlib.pyplot as plt\n\n\ndef show_train_history(train_history,train,validation):\n    plt.plot(train_history.history[train])\n    plt.plot(train_history.history[validation])\n    plt.title('Train History')\n    plt.ylabel(train)\n    plt.xlabel('Epoch')\n    plt.legend(['train', 'validation'], loc='best')\n    plt.show()\n\n\n######################### Model designing\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.layers import Dropout\n\nmodel = Sequential() \n\n#Input layer\nmodel.add(Dense(units=500, \n                input_dim=46, \n                kernel_initializer='uniform', \n                activation='relu'))\nmodel.add(Dropout(0.5))\n\n#Hidden layer 1\nmodel.add(Dense(units=200,  \n                kernel_initializer='uniform', \n                activation='relu'))\nmodel.add(Dropout(0.5))\n\n#Output layer\nmodel.add(Dense(units=1,\n                kernel_initializer='uniform', \n                activation='sigmoid'))\n\nprint(model.summary()) #for showing the structure and parameters\n\n# Defining how to measure performance\nmodel.compile(loss='binary_crossentropy',   \n              optimizer='adam', metrics=['accuracy'])\n\n# Train the model\n# Verbose=2, showing loss and accuracy change timely\ntrain_history = model.fit(x=train_feature, y=train_label,  \n                          validation_split=0.2, epochs=20, \n                          batch_size=200, verbose=2) \n\n#visualize the loss and accuracy after each epoch\nshow_train_history(train_history,'acc','val_acc')\nshow_train_history(train_history,'loss','val_loss')\n\n#For saving weights\n#model.save_weights(\"Savemodels\/Cervical_ca(Kaggles)_MLP.h5\")\n#print('model saved to disk')","1862b961":"scores = model.evaluate(test_feature, test_label)\nprint('\\n')\nprint('accuracy=',scores[1])","949ea208":"prediction = model.predict_classes(test_feature)\n# print(prediction)","22b200f9":"# Create a dataframe for prediction and correct answer\ndf_ans = pd.DataFrame({'Biopsy' :test_label})\ndf_ans['Prediction'] = prediction","4f3672f9":"df_ans.head(5) #Nuevo dataframe","d7534ecd":"df_ans","7bc435f1":"df_ans[ df_ans['Biopsy'] != df_ans['Prediction'] ]","7c953404":"df_ans['Prediction'].value_counts()","cdc282a7":"df_ans['Biopsy'].value_counts()","7514f4a4":"cols = ['Biopsy_1','Biopsy_0']  #Gold standard\nrows = ['Prediction_1','Prediction_0'] #diagnostic tool (our prediction)\n\n#Los valores de cada cuadro en la matriz\nB1P1 = len(df_ans[(df_ans['Prediction'] == df_ans['Biopsy']) & (df_ans['Biopsy'] == 1)])\n\nB1P0 = len(df_ans[(df_ans['Prediction'] != df_ans['Biopsy']) & (df_ans['Biopsy'] == 1)])\nB0P1 = len(df_ans[(df_ans['Prediction'] != df_ans['Biopsy']) & (df_ans['Biopsy'] == 0)])\n\nB0P0 = len(df_ans[(df_ans['Prediction'] == df_ans['Biopsy']) & (df_ans['Biopsy'] == 0)])\n\nconf = np.array([[B1P1,B0P1],[B1P0,B0P0]])\ndf_cm = pd.DataFrame(conf, columns = [i for i in cols], index = [i for i in rows])\n\nf, ax= plt.subplots(figsize = (5, 5))\nsns.heatmap(df_cm, annot=True, ax=ax) \nax.xaxis.set_ticks_position('top') #Making x label be on top is common in textbooks.\n\nprint('total test case number: ', np.sum(conf))","87c64c41":"print(conf)","1d7da788":"def model_efficacy(conf):\n    total_num = np.sum(conf)\n    \n    \n    sen = conf[0][0]\/(conf[0][0]+conf[1][0]) # 4\/ (4+4(de abajo))\n    spe = conf[1][1]\/(conf[1][0]+conf[1][1])\n    false_positive_rate = conf[0][1]\/(conf[0][1]+conf[1][1])\n    false_negative_rate = conf[1][0]\/(conf[0][0]+conf[1][0])\n    \n    print('total_num: ',total_num)\n    print('G1P1: ',conf[0][0]) #G = gold standard; P = prediction\n    print('G0P1: ',conf[0][1])\n    print('G1P0: ',conf[1][0])\n    print('G0P0: ',conf[1][1])\n    print('##########################')\n    print('sensitivity: ',sen)\n    print('specificity: ',spe)\n    print('false_positive_rate: ',false_positive_rate)\n    print('false_negative_rate: ',false_negative_rate)\n    \n    return total_num, sen, spe, false_positive_rate, false_negative_rate\n\nmodel_efficacy(conf)","46a6774b":"import seaborn as sns\nsns.jointplot(x='Age', y='Biopsy', data=df, alpha=0.1) \n#By adding alpha, we can see the density of the scattered spots clearly.","0d7a6f4f":"fig, (ax1,ax2,ax3) = plt.subplots(3,1,figsize=(15,12))\nsns.countplot(x='Age', data=df, ax=ax1)\nsns.countplot(x='Biopsy', data=df, ax=ax2)\nsns.barplot(x='Age', y='Biopsy', data=df, ax=ax3)\n\n#Estratificado\nfacet = sns.FacetGrid(df, hue='Biopsy',aspect=4)\nfacet.map(sns.kdeplot,'Age',shade= True)\nfacet.set(xlim=(0, df['Age'].max()))\nfacet.add_legend()","a823ee2b":"import seaborn as sns\nsns.jointplot(x='Number of sexual partners', y='Biopsy', data=df, alpha=0.1) \n#By adding alpha, we can see the density of the scattered spots clearly.","97e59389":"fig, (ax1,ax2) = plt.subplots(2,1,figsize=(15,8))\nsns.countplot(x='Number of sexual partners', data=df, ax=ax1)\nsns.barplot(x='Number of sexual partners', y='Biopsy', data=df, ax=ax2) #categorical to categorical\n\n#continuous to categorical\nfacet = sns.FacetGrid(df, hue='Biopsy',aspect=4)\nfacet.map(sns.kdeplot,'Number of sexual partners',shade= True)\nfacet.set(xlim=(0, df['Number of sexual partners'].max()))\nfacet.add_legend()","c34ce932":"import seaborn as sns\nsns.jointplot(x='Num of pregnancies', y='Biopsy', data=df, alpha=0.1) ","8bf376d2":"sns.factorplot('Num of pregnancies','Biopsy',data=df, size=5, aspect=3)","eaa0423a":"#continuous to categorical\nfacet = sns.FacetGrid(df, hue='Biopsy',aspect=4)\nfacet.map(sns.kdeplot,'Num of pregnancies',shade= True)\nfacet.set(xlim=(0, df['Num of pregnancies'].max()))\nfacet.add_legend()","854f9fea":"import seaborn as sns\nsns.jointplot(x='Citology_1', y='Biopsy', data=df, alpha=0.1) \n# Hard do see anything...","41ee0162":"fig, (axis1,axis2,axis3) = plt.subplots(1,3,figsize=(15,5))\nsns.countplot(x='Citology_1', data=df, ax=axis1)\nsns.countplot(x='Biopsy', data=df, ax=axis2)\nsns.barplot(x='Citology_1', y='Biopsy', data=df, ax=axis3)  #categorical to categorical","560cb819":"fig, (axis1,axis2,axis3) = plt.subplots(1,3,figsize=(15,5))\nsns.countplot(x='Schiller_1', data=df, ax=axis1)\nsns.countplot(x='Biopsy', data=df, ax=axis2)\nsns.barplot(x='Schiller_1', y='Biopsy', data=df, ax=axis3) #categorical to categorical","bdce251c":"corrmat = df.corr()\nf, ax = plt.subplots(figsize=(12, 9))\nsns.heatmap(corrmat, vmax=1, square=True, cmap='rainbow')","2fe58e0a":"df['STDs:cervical condylomatosis'].value_counts()","fb52b1f2":"df['STDs:AIDS'].value_counts()","4c9ee0c5":"k = 15 #number of variables for heatmap\ncols = corrmat.nlargest(k, 'Biopsy')['Biopsy'].index\ncm = np.corrcoef(df[cols].values.T)\n\nplt.figure(figsize=(9,9))\n\nsns.set(font_scale=1.25)\nhm = sns.heatmap(cm, cbar=True, annot=True, square=True, fmt='.2f', annot_kws={'size': 10},\n                 yticklabels = cols.values, xticklabels = cols.values)\nplt.show()","657613b3":"## Train\/Test Set","37bfdb0b":"### Correlacion entre elementos (dataFrame)","6e57e0d1":"### Precisi\u00f3n de la predicci\u00f3n del modelo","af7acac2":"### In Test Data","6993d96d":"Computo de valores:","1f7ca9bb":"Veremos lo que va mal","2695f1cb":"## Conclusi\u00f3n","d909d032":"### Import csv","ffb62f14":"## Introducci\u00f3n al set de Datos","fbc0090e":"## Manejo de datos originales (Aprendizaje humano)","9e0b9810":"### Confusion Matrix","8ba95fe7":"### Temporal dataFrame","9ab39f79":"[Cervical Cancer Risk](https:\/\/www.kaggle.com\/loveall\/cervical-cancer-risk-classification)\n\n## Informacion\n\n### General\n\n- Alrededor de 11,000 nuevos casos de c\u00e1ncer cervical invasivo se diagnostican cada a\u00f1o en los EE. UU.\n\n- Aunque es el tipo de c\u00e1ncer m\u00e1s prevenible, cada a\u00f1o el c\u00e1ncer de cuello uterino mata a unas 4,000 mujeres en los EE. UU. Y a unas 300,000 mujeres en todo el mundo.\n\n### Edad\n\n-  El cincuenta por ciento de los diagn\u00f3sticos de c\u00e1ncer cervical ocurre en mujeres de 35 a 54 a\u00f1os, y alrededor del 20% ocurre en mujeres mayores de 65 a\u00f1os\n\n- La mediana de edad de diagn\u00f3stico es de 48 a\u00f1os. Alrededor del 15% de las mujeres desarrollan c\u00e1ncer de cuello uterino entre las edades de 20 a 30.\n\n- El c\u00e1ncer de cuello uterino es extremadamente raro en mujeres menores de 20 a\u00f1os. Sin embargo, muchas mujeres j\u00f3venes se infectan con m\u00faltiples tipos de virus del papiloma humano, lo que puede aumentar su riesgo de contraer c\u00e1ncer de cuello uterino en el futuro\n\n### Factores socioeconomicos y etnicos\n\n- Aunque la tasa de c\u00e1ncer cervical ha disminuido entre ambos cauc\u00e1sicos y las mujeres afroamericanas en las \u00faltimas d\u00e9cadas, sigue siendo mucho m\u00e1s frecuente en los afroamericanos, cuyas tasas de mortalidad son dos veces m\u00e1s altas que las mujeres cauc\u00e1sicas.\n\n- Las mujeres hispanoamericanas tienen m\u00e1s del doble de riesgo de c\u00e1ncer cervical invasivo que las mujeres cauc\u00e1sicas, tambi\u00e9n debido a una menor tasa de detecci\u00f3n. Sin embargo, estas diferencias se deben casi seguramente a diferencias sociales y econ\u00f3micas.\n\n- Numerosos estudios informan que los altos niveles de pobreza est\u00e1n vinculados con bajas tasas de detecci\u00f3n. \n\n- Adem\u00e1s, la falta de seguro m\u00e9dico, el transporte limitado y las dificultades con el idioma dificultan el acceso de una mujer pobre a los servicios de detecci\u00f3n.\n\n\n### Alta actividad sexual\n\n- El virus del papiloma humano (VPH) es el principal factor de riesgo para el c\u00e1ncer cervical. \n\n- En adultos, el factor de riesgo m\u00e1s importante para el VPH es la actividad sexual con una persona infectada.\n\n- Las mujeres con mayor riesgo de c\u00e1ncer cervical son aquellas con antecedentes de m\u00faltiples parejas sexuales, relaciones sexuales a los 17 a\u00f1os o menos, o ambas.\n\n- Una mujer que nunca ha sido sexualmente activa tiene un riesgo muy bajo de desarrollar c\u00e1ncer cervical. La actividad sexual con m\u00faltiples parejas aumenta la probabilidad de muchas otras infecciones de transmisi\u00f3n sexual (clamidia, gonorrea, s\u00edfilis). ","5bc4f483":"#### La citolog\u00eda vaginal (tambi\u00e9n llamada Prueba de Papanicolau)","8592a291":"### Visualizacion","47139c44":"#### Numero de parejas sexuales","7cc4a05b":"Ahora, tenemos datos completos (los dataframes) para el c\u00e1lculo.\nEstamos listos para dividir los datos en el conjunto de tren \/ prueba, definir caracter\u00edsticas y etiquetas, y la normalizaci\u00f3n.","29a883f1":"### View dataFrame","4d0a09eb":"## Normalizacion de los datos","cea5c6f1":"# Riesgo de c\u00e1ncer cervical\n","626734e4":"\nEjemplo ilustrado de la matriz de confusi\u00f3n\n\n![Ejemplo ilustrado Matriz de confusi\u00f3n](https:\/\/www.researchgate.net\/profile\/Sebastian_Bittrich\/publication\/330174519\/figure\/fig1\/AS:711883078258689@1546737560677\/Confusion-matrix-Exemplified-CM-with-the-formulas-of-precision-PR-recall-RE.png)","5c2dfba3":"Ahora es el momento de completar todos los valores de NaN.\nPara la variable continua, llenamos el valor medio. \nPara la variable categ\u00f3rica, llenamos 1.","9b1b5862":"### Visualizacion de algunas variables categoricas","c0813c40":"## DataSet","d56591e0":"#### Numero de embarazos","9e21eb5f":"Calculando la sensibilidad, especificidad, falso_positivo y falso_negativo","32013498":"Parece que 'Schiller_1', 'Hinselmann_1' y 'citolog\u00eda_1' tuvieron la mayor correlaci\u00f3n con la biopsia (+).\n\n\n**El resultado coincidi\u00f3 con el sentido com\u00fan del conocimiento m\u00e9dico: la herramienta de diagn\u00f3stico de alta especificidad tendr\u00eda un error falso positivo bajo.**","1885b94d":"#### Prueba de Schiller","2cb9d98d":"La correlaci\u00f3n fue en realidad bastante baja.","3b3d05a0":"#### Edad","51e13454":"En el campo de la inteligencia artificial una matriz de confusi\u00f3n es una herramienta que permite la visualizaci\u00f3n del desempe\u00f1o de un algoritmo que se emplea en aprendizaje supervisado","7b01880e":"## Model","c50c6b54":"### Listar el mapa de calor de la correlaci\u00f3n superior"}}