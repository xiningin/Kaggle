{"cell_type":{"4a5d75e6":"code","bc2c995d":"code","0b294a8f":"code","8854c4d5":"code","7f1be3a9":"code","9f2e345b":"code","ab3ab5fe":"code","9599da16":"code","ebe4afc8":"code","7bca2dca":"code","6610b0b3":"code","73d2414d":"code","f8707141":"code","e3e67040":"code","6a47fcf9":"code","80820677":"code","e279acb5":"markdown","7fa07e31":"markdown","608e2cba":"markdown","ec88c644":"markdown","ef9d105a":"markdown","e7c81550":"markdown","d639af5b":"markdown","0f85d1e6":"markdown","8cd5d13d":"markdown","84c1e938":"markdown","2684bf0d":"markdown","84a947b6":"markdown","0ed7ed09":"markdown","8d4421ca":"markdown","694b6f72":"markdown","11cf5970":"markdown","128b1951":"markdown","d0e2afd4":"markdown","5b8f74c3":"markdown","30af1dab":"markdown","ba874a89":"markdown","710d1942":"markdown","95e190fd":"markdown","a86bce63":"markdown","080c3908":"markdown"},"source":{"4a5d75e6":"#Import packages\n\n\nimport numpy as np \nimport pandas as pd \nimport sqlite3\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n\npath = \"..\/input\/basketball\/\" #Everything preceding the file name\ndatabase = path + 'basketball.sqlite' #The path + the file name","bc2c995d":"pip install kaleido","0b294a8f":"# sqlite3.connect() Creates a connection object\n# database is the variable we established above\nconn = sqlite3.connect(database)\n\n#pd.read_sql() is a retrieve function that retrieves what we put in the parenthesis\n\n#After SELECT, put what you want to see. In this case we put *, which means see everything\n\n#After FROM choose a source\n    # sqlite_master is an internal table that is present in all SQLite databases. The content of this table describes the database's schema.\n    \n#After WHERE specify a condiction\n    # condition here is where type = table\n    \n#End with a \";\" and close the quotation marks\n\n# conn is our connection object\n\ntables = pd.read_sql(\"\"\"SELECT *\n                        FROM sqlite_master\n                        WHERE type='table';\"\"\", conn)\ntables","8854c4d5":"# Look at active players in the Player table\n    # 519 Players\n\nActive_Player = pd.read_sql(\"\"\"SELECT *\n                        FROM Player\n                        WHERE is_active=1; \"\"\", conn)\n\n\nActive_Player ","7f1be3a9":"# Look at draft table\n    # Gives us relevant information about drafted players, such as the year they were drafted, the pick they were drafted with, and the team that drafted them\n    \nDraft = pd.read_sql(\"\"\"SELECT *\n                        FROM Draft ; \"\"\", conn)\n\n\nDraft","9f2e345b":"# Look at Player_Attributes table\n    # Contains physical and positional attributes of each player along with background information such as alma mater.\n    \nAttributes = pd.read_sql(\"\"\"SELECT *\n                        FROM Player_Attributes; \"\"\", conn)\n\n\nAttributes","ab3ab5fe":"# Look at Player_Photos table\n    # Contains links to photos of the players\n    \nPhotos = pd.read_sql(\"\"\"SELECT *\n                        FROM Player_Photos ; \"\"\", conn)\n\n\nPhotos","9599da16":"pick_height = pd.read_sql(\"\"\"SELECT \n                        Player_Attributes.ID AS Player_ID,\n                        Player_Attributes.DISPLAY_FIRST_LAST AS Full_Name,\n                        Draft.numberPickOverall AS Pick_Number_Overall,\n                        Player_Attributes.Height AS Height\n                        FROM Player_Attributes\n                        JOIN Draft ON Player_Attributes.ID = Draft.idPlayer\n                        ;\"\"\", conn)\npick_height","ebe4afc8":"year_position_headshot = pd.read_sql(\"\"\"SELECT \n                        Player_Attributes.ID AS Player_ID,\n                        Player_Attributes.DISPLAY_FIRST_LAST AS Full_Name,\n                        Draft.yearDraft AS Draft_Year,\n                        Player_Attributes.Position AS Position,\n                        Player_Photos.urlPlayerHeadshot AS Headshot\n                        FROM Player_Attributes\n                        JOIN Draft ON Player_Attributes.ID = Draft.idPlayer\n                        LEFT JOIN Player_Photos on Player_Photos.idPlayer = Draft.idPlayer\n                        WHERE Draft_Year > 2000\n                        ORDER by Draft_Year DESC\n                        ;\"\"\", conn)\nyear_position_headshot","7bca2dca":"Knicks_picks = pd.read_sql(\"\"\"SELECT \n                        Player_Attributes.ID AS Player_ID,\n                        Player_Attributes.DISPLAY_FIRST_LAST AS Full_Name,\n                        Draft.yearDraft AS Draft_Year,\n                        Draft.nameOrganizationFrom AS Previous_Organization,\n                        Player_Attributes.BIRTHDATE AS Birthdate,\n                        Player_Photos.urlPlayerStats as Stats\n                        FROM Player_Attributes\n                        JOIN Draft ON Player_Attributes.ID = Draft.idPlayer\n                        LEFT JOIN Player_Photos on Player_Photos.idPlayer = Draft.idPlayer\n                        WHERE Draft.idTeam = 1610612752\n                        ORDER by Previous_Organization ASC;\"\"\", conn)\nKnicks_picks","6610b0b3":"Team_Picks = pd.read_sql(\"\"\"SELECT \n                            Draft.nameTeam AS Team_Name,\n                            COUNT(idPlayer) AS Number_of_Picks\n                            FROM Draft\n                            GROUP BY idTeam\n                            ORDER BY Number_of_Picks ASC\n                            Limit 10;\"\"\", conn)\n\nTeam_Picks","73d2414d":"Average_Salary = pd.read_sql(\"\"\"SELECT \n                            Draft.nameTeam AS Team_Name,\n                            Avg(Team_Salary.[X2020-21]+Team_Salary.[X2021-22]) AS Average_Salary,\n                            COUNT(Draft.idPlayer) AS Number_of_Picks\n                            FROM Team_Salary\n                            LEFT JOIN Draft on Team_Salary.nameTeam = Draft.nameTeam\n                            GROUP BY idTeam\n                            ORDER BY Average_Salary DESC\n                            Limit 10;\"\"\", conn)\n\nAverage_Salary","f8707141":"Height_Centers = pd.read_sql(\"\"\"SELECT \n                            Draft_Combine.yearCombine as Combine_Year,\n                            AVG(Draft_Combine.heightWOShoesInches) As Average_Height_Inches,\n                            AVG(Draft_Combine.wingspanInches) As Average_Wingspan_Inches,\n                            SUM(CASE WHEN Draft_Combine.slugPosition = 'C' OR 'PF-C' THEN 1 ELSE 0 END) AS Count_Centers\n                            FROM Draft_Combine\n                            GROUP BY Combine_Year\n                            ORDER BY Average_Height_Inches DESC\n                            ;\"\"\", conn)\n\nHeight_Centers","e3e67040":"fig = px.bar(Average_Salary, x= 'Team_Name', y= 'Average_Salary', \n             title=\"Top 10 Highest Paying NBA Teams by Average Salary (2020-26)\",\n             labels=dict(Team_Name=\"Team Name\", Average_Salary= \"Average Salary\" ))\nfig.show(\"png\")","6a47fcf9":"sns.histplot(pick_height.Height, kde=True, binwidth = 2, bins = 30).set_title('Count of Players by Height')","80820677":"Height_Wingspan = pd.read_sql(\"\"\"SELECT \n                            Draft_Combine.heightWOShoesInches,\n                            Draft_Combine.wingspanInches\n                            FROM Draft_Combine\n                            ;\"\"\", conn)\n\nfig = px.scatter(Height_Wingspan, y=\"heightWOShoesInches\", x=\"wingspanInches\",\n           title=\"Correlation Between Height and Wingspan for Draft Combine Players\",\n           labels=dict(heightWOShoesInches=\"Height (Without Shoes) in Inches\", wingspanInches= \"Wingspan in Inches\" ))\nfig.show(\"png\")","e279acb5":"**Aggregated Table 2:**   \n1. Which 10 teams have the highest average salary for this season and the 5 seasons after (sorted in descending order)?   \n2. Left Join the top 10 highest salaried teams with the number of players the team has drafted in its history.**","7fa07e31":"**Aggregated Table 1:**   \n1. How many times has each team drafted a player (sorted in ascending order)?","608e2cba":"The Brooklyn Nets have both the highest average salary and the lowest number of players drafted.","ec88c644":"**Aggregated Table 3:**\n1. Which draft combine year had the highest average player height?\n2. What were average wingspans per year?\n3. How many centers were in that draft? This may be an indicator of player height because center is, historically, the tallest position.  \n4. Order these results in descending order by average height.","ef9d105a":"## Visualizing Trends in our data","e7c81550":"Connect to the database and get a list of the tables within it.","d639af5b":"**Our analysis will adhere to the following 4 steps:**     \n\n1. Gain a high level understanding of the data at hand by looking at and briefly discussing relevant tables in the dataset.\n2. Use joins to create new tables for analysis.  \n3. Perform simple analytics on our data using aggregation.  \n4. Visualize trends in our data using Plotly and Seaborn.","0f85d1e6":"The Providence Steamrollers have drafted the least players (9), while the Atlanta Hawks have drafted the most players (514).","8cd5d13d":"**Table 2: Player ID, full player name, year that player was drafted, player position, and a link to player headshot, isolated to players drafted after 2000 and sorted in descending order by draft year**","84c1e938":"**Visualization 3**  \nScatterplot visualization of the correlation between height and wingspan for draft combine player using Plotly.","2684bf0d":"#### Look at Tables Individually to Plan Analysis  \n\nLet's take a look at the following tables:  \n1. Player  \n3. Draft  \n4. Player_Bios  \n5. Player_Photos","84a947b6":"**Table 3: Player ID, full player name, player's draft year, player's previous organization, player birthdate, and a link to player stats, isolated to players drafted by the New York Knicks and sorted in ascending alphabetical order by previous organization name.**\n","0ed7ed09":"Above, we practiced using joins to create personalized tables of interest.   \nUsing aggregation, we can also perform basic analytics on the data in our database to draw insights.","8d4421ca":"## Overview of Data","694b6f72":"So there does not seem to be a positive correlation between number of centers and average height by combine. However, there is, unsurprisingly, a clear correlation betwen average height and average wingspan by combine.","11cf5970":"**Visualization 2**  \nHistplot visualization of the number of players at each height using Seaborn.","128b1951":"The below notebook is intended to be educational for those looking to learn the basics of SQL. It involves using SQL to perform data analysis on using a database containing information about the National Basketball Association (NBA). In the process, we will explore the data, utilize joins, perform basic analytics, and create visualizations of relevant trends. ","d0e2afd4":"In this notebook, we:   \n\n1. Connected to the database  \n2. Learned about our data in order to plan our analysis  \n3. Used joins to create personalized tables  \n4. Performed simple analytics on our data  \n5. Visualized trends within our data.  \n\nHopefully this served as a useful introduction to SQL analysis. Thanks for reading!","5b8f74c3":"## Review","30af1dab":"**Table 1: Player ID, Full player name, pick that player was drafted with, and player height**","ba874a89":"## Performing Simple Analytics Using Aggregation","710d1942":"## Create Personalized Tables using Joins\n\nAs we can see above, we have a number of tables that we can leverage to create useful joined table:  \n\n1. A table that shows information about when a players was drafted, such as what pick they were drafted with, which team drafted them, and the college they attended.    \n2. A table that contains player attributes.\n3. A table that includes a photo for each player.    \n\nFurthermore, each of the above tables has a \"Player ID\" column that we can use to join the tables on. This is essential because over the course of the NBA's history, there have inevitably been a number of players with the same name. Merging on \"Player ID\" rather than name helps us address that problem.\n\n**In the below analysis, we will leverage the \"Player ID\" column as in order to perform joins on the above 3 tables.**  \n\n","95e190fd":"## Motivation","a86bce63":"## Process","080c3908":"**Visualization 1**  \nTop 10 Highest Paying NBA Teams by Average Salary (2020-26) using Plotly."}}