{"cell_type":{"c0459f31":"code","0dab553e":"code","48adc78e":"code","19cb49b3":"code","4c3f47f4":"code","9205a481":"code","031d04ea":"code","b5648d13":"code","fd4bc660":"code","797e60d5":"code","25c8388c":"code","314fccc7":"code","7905c123":"code","2c80726e":"code","c9601d80":"code","8ea5b16f":"code","5da9fef9":"code","dc876e3d":"code","570e55ef":"code","88164e82":"code","1b8f29ba":"code","cca3b28e":"code","f9b2f573":"markdown","5a842663":"markdown","bdce6342":"markdown"},"source":{"c0459f31":"import pandas as pd \nimport numpy as np \nimport seaborn as sns \nimport matplotlib.pyplot as plt ","0dab553e":"df = pd.read_csv('..\/input\/heart-disease-health-indicators-dataset\/heart_disease_health_indicators_BRFSS2015.csv')\ndf.head()","48adc78e":"sns.scatterplot(data = df , x = 'BMI' , y = 'PhysHlth' , hue = 'HeartDiseaseorAttack')","19cb49b3":"df.info()","4c3f47f4":"df.isnull().sum()","9205a481":"sns.countplot(data = df, x = 'HeartDiseaseorAttack')","031d04ea":"X = df.drop('HeartDiseaseorAttack', axis = 1)\ny = df['HeartDiseaseorAttack']","b5648d13":"X.shape","fd4bc660":"from imblearn.under_sampling import RandomUnderSampler\nsampler = RandomUnderSampler(random_state=0)\nX_res, y_res = sampler.fit_resample(X, y)","797e60d5":"from sklearn.model_selection import train_test_split","25c8388c":"X_train, X_test, y_train, y_test = train_test_split(X_res, y_res, test_size=0.3, random_state=101)\n","314fccc7":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nscaled_X_train = scaler.fit_transform(X_train)\nscaled_X_test = scaler.transform(X_test)","7905c123":"from sklearn.linear_model import LogisticRegressionCV\nfrom sklearn.neighbors import KNeighborsClassifier","2c80726e":"log_model = LogisticRegressionCV()\nlog_model.fit(scaled_X_train,y_train)\ny_pred = log_model.predict(scaled_X_test)","c9601d80":"from sklearn.metrics import plot_confusion_matrix , accuracy_score , classification_report\nprint(classification_report(y_test,y_pred))\nprint(f\"Accuracy score is : {accuracy_score(y_test,y_pred)}\")\nprint(plot_confusion_matrix(log_model,scaled_X_test,y_test))","8ea5b16f":"# Create pipeline \n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.neighbors import KNeighborsClassifier\nscaler =StandardScaler()\nknn = KNeighborsClassifier()\noperations = [('scaler',scaler),('knn',knn)]\nfrom sklearn.pipeline import Pipeline\npipe = Pipeline(operations)","5da9fef9":"# Preform Grid search cv with pipline to test various values of K and report back the best preforming parameters \nfrom sklearn.model_selection import GridSearchCV\nk_values = list(range(1,30))\nparam_grid = {'knn__n_neighbors':k_values}","dc876e3d":"# Set up the classifier : \n\nfull_cv_class = GridSearchCV(pipe,param_grid , cv = 5 , scoring= 'accuracy')\nfull_cv_class.fit(X_train,y_train)","570e55ef":"full_cv_class.best_estimator_.get_params()","88164e82":"\npd.DataFrame(full_cv_class.cv_results_)['mean_test_score'].plot()","1b8f29ba":"pred = full_cv_class.predict(X_test)","cca3b28e":"plot_confusion_matrix(full_cv_class , X_test , y_test)\nprint(classification_report(y_test,pred))","f9b2f573":"# How ever k value increase accuracy is going up ","5a842663":"# Best K value is 29 ","bdce6342":"# Using KNN Algorithm , and try to get the best K value , we need from it to get low baias and low varience : "}}