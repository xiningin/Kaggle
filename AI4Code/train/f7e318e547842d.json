{"cell_type":{"03cc1a58":"code","d90c8d30":"code","bfef3a98":"code","bd1bc3b1":"code","68ede4f1":"code","f58bf667":"code","2289432d":"code","7579df25":"code","30bcbf8a":"code","d75cbebe":"code","280fd25c":"code","94a13a94":"code","70b206c1":"code","479a72e1":"code","8b101d54":"code","7260c8a4":"code","bafe3967":"code","f677849f":"code","6383e870":"code","f22469ed":"code","4814043c":"code","5fda7238":"code","39e3293a":"code","e1df5cf2":"code","d7056ac6":"code","c28fec13":"code","bd66e8ef":"code","4c707b22":"code","88149d00":"code","38b1191c":"code","7ef06c25":"code","62a8fbff":"code","88da5beb":"code","14f2cfa5":"code","63873043":"code","188b3f9b":"markdown","d24e65e5":"markdown","3afdeb32":"markdown","83f3ec45":"markdown","f7b1b574":"markdown","ec4b1605":"markdown","f3c52986":"markdown","8f874cf7":"markdown","bd9ca57c":"markdown","03b22600":"markdown","283e0b2c":"markdown","a7738406":"markdown","c589c948":"markdown","4dadc01e":"markdown","2a5e559f":"markdown","1068d9b8":"markdown","6f45db86":"markdown","465b6e29":"markdown","7e56a419":"markdown"},"source":{"03cc1a58":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nfrom sklearn.svm import  OneClassSVM\nfrom sklearn.model_selection import KFold\nfrom sklearn.metrics import mean_squared_error, accuracy_score\nfrom sklearn.linear_model import LinearRegression\nimport lightgbm as lgb\n\nsns.set_style('whitegrid')","d90c8d30":"train_df = pd.read_csv(\"..\/input\/train.csv\")\ntest_df = pd.read_csv(\"..\/input\/test.csv\")","bfef3a98":"train_df.info()","bd1bc3b1":"test_df.info()","68ede4f1":"test_df['first_active_month'] = test_df['first_active_month'].fillna('2018-01-01')","f58bf667":"train_df.head()","2289432d":"print('Size of train dataset :', len(train_df))\nprint('Size of test dataset :', len(test_df))","7579df25":"plt.figure(figsize=(10, 7))\nsns.countplot(train_df['feature_1'])\nplt.show()","30bcbf8a":"plt.figure(figsize=(10, 7))\nsns.countplot(train_df['feature_2'])\nplt.show()","d75cbebe":"plt.figure(figsize=(10, 7))\nsns.countplot(train_df['feature_3'])\nplt.show()","280fd25c":"train_df['first_active_month'] = pd.to_datetime(train_df['first_active_month'])\ntest_df['first_active_month'] = pd.to_datetime(test_df['first_active_month'])","94a13a94":"print(\"Newest client :\", max( max(train_df['first_active_month']), max(test_df['first_active_month'])))","70b206c1":"first_active_day = pd.to_timedelta(train_df['first_active_month']).apply(lambda x: x.days)\nfirst_active_day_test = pd.to_timedelta(test_df['first_active_month']).apply(lambda x: x.days)","479a72e1":"newest = max(max(first_active_day), max(first_active_day_test))","8b101d54":"ancienety = (newest - first_active_day).astype(int) \/\/ 30\nancienety_test = (newest - first_active_day_test).astype(int) \/\/ 30","7260c8a4":"plt.figure(figsize=(12, 8))\nsns.distplot(ancienety)\nplt.xlabel('Ancienety (in month)')\nplt.show()","bafe3967":"train_df['ancienety'] = ancienety\ntest_df['ancienety'] = ancienety_test","f677849f":"plt.figure(figsize=(10, 7))\nsns.distplot(train_df['target'])\nplt.show()","6383e870":"df_outlier = train_df[train_df['target'] < -30]","f22469ed":"print('Number of outliers :', len(df_outlier))","4814043c":"df_outlier.head()","5fda7238":"df_inlier = train_df[train_df['target'] > -30]","39e3293a":"X_train = np.array(train_df[['feature_1', 'feature_2', 'feature_3', 'ancienety']])\nX_test = np.array(test_df[['feature_1', 'feature_2', 'feature_3', 'ancienety']])\ny_train = np.array(train_df['target'])","e1df5cf2":"lin_reg = LinearRegression()\nlin_reg.fit(X_train, y_train)\ny_pred = lin_reg.predict(X_train)","d7056ac6":"print('RMSE on train data :', np.sqrt(mean_squared_error(y_train, y_pred)))","c28fec13":"y_test = lin_reg.predict(X_test)","bd66e8ef":"X_inlier = np.array(df_inlier[['feature_1', 'feature_2', 'feature_3', 'ancienety']])\ny_inlier = np.array(df_inlier['target'])","4c707b22":"lin_reg = LinearRegression()\nlin_reg.fit(X_inlier, y_inlier)\ny_pred = lin_reg.predict(X_inlier)","88149d00":"print('RMSE on inliers :', np.sqrt(mean_squared_error(y_inlier, y_pred)))","38b1191c":"X_outlier = np.array(df_outlier[['feature_1', 'feature_2', 'feature_3', 'ancienety']])\ny_outlier = np.ones(X_outlier.shape[0])","7ef06c25":"clf = OneClassSVM(nu=0.01, kernel=\"rbf\", gamma=0.1)\nclf.fit(X_inlier[:50000])  #It takes a while so I don't take all the inliers","62a8fbff":"y_pred_inlier = clf.predict(X_inlier)\ny_pred_outlier = clf.predict(X_outlier)","88da5beb":"print(\"Accuracy on inliers :\", accuracy_score(y_pred_inlier, np.ones(y_inlier.size)))\nprint(\"Accuracy on outliers :\", accuracy_score(y_pred_outlier, - np.ones(y_outlier.size)))","14f2cfa5":"submission = pd.DataFrame({\"card_id\": test_df[\"card_id\"].values})\nsubmission[\"target\"] = y_test","63873043":"submission.to_csv(\"submission.csv\", index=False)","188b3f9b":"## Submission","d24e65e5":"Features seem pretty balanced.\n","3afdeb32":"### Now to the distribution of the target","83f3ec45":"### Let us check the repartition of the 3 features","f7b1b574":"## Following work :\n- Taking the other stuff into account !\n\n#### Thanks for reading !","ec4b1605":"## Can we detect the Outliers ?\n\nI'm using the One Class SVM from sklearn.\n> https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.svm.OneClassSVM.html","f3c52986":"This simple model scored 3.925, which is way better than I expected.","8f874cf7":"# How far can you go using only train.csv and test.csv ?\n### In this kernel, I will tackle the problem the easiest way : \n- Using only the features available in the train.csv and test.csv files\n- Using a Linear Regression as model\n\nI'll also tackle the outliers issue a bit.\n\n### Any feedback is always appreciated ! ","bd9ca57c":"Nothing can be said so far, except that they'll play an important role in the future.","03b22600":"It's basically a Gaussian with some outliers at on the left. Let's take a closer look at those outliers.","283e0b2c":"### First active month","a7738406":"## First prediction :\n> Using a linear regression","c589c948":"### Linear Regression without Outliers","4dadc01e":"We have one data missing, let us fill it.","2a5e559f":"### Loading Data","1068d9b8":"Nothing is missing","6f45db86":"#### Outliers seem to play quite a big role, it could be useful to detect them before applying a classifier.","465b6e29":"#### No surprise, the answer is no. But it could probably be done with more features !","7e56a419":"### Linear Regression"}}