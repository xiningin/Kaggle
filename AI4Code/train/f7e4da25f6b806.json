{"cell_type":{"44eaf2a7":"code","7601f6c3":"code","91c7ab97":"code","7eab9b85":"code","13d9ce8c":"code","4f286c33":"code","aadd28b1":"code","2168af8d":"code","d329ac01":"code","f2d32ffc":"code","a0c919b7":"code","9f79972b":"code","332b0d54":"code","c03e20fa":"code","d05d4b55":"code","0eddbfc8":"code","e1c93c73":"code","3f74d1bb":"markdown","54fac25c":"markdown","9c7adb32":"markdown"},"source":{"44eaf2a7":"import pandas as pd\nimport numpy as np\nimport json\nimport math\nimport tqdm\nimport glob\nfrom IPython.display import FileLink, FileLinks\n\nimport sklearn.preprocessing\n\nfrom PIL import Image as img\n\nimport matplotlib.pyplot as plt\n\nimport keras\nfrom keras.preprocessing.image import ImageDataGenerator","7601f6c3":"# train\ntrain_df = pd.read_csv(\"..\/input\/2019-3rd-ml-month-with-kakr\/train.csv\", engine=\"python\")\ntrain_df[\"class\"] = train_df[\"class\"].astype(\"str\")\n\n# class(extract automaker)\nclass_df = pd.read_csv(\"..\/input\/2019-3rd-ml-month-with-kakr\/class.csv\")\nclass_df[\"id\"] = class_df[\"id\"].astype(\"str\")\nclass_df[\"automaker\"] = class_df[\"name\"].str.split(n=1, expand=True)[0]\n\ntrain_df = train_df.merge(class_df, how=\"inner\", left_on=\"class\", right_on=\"id\")\ntrain_df.drop(columns=\"id\", inplace=True)\ndisplay(train_df.head())","91c7ab97":"# test\ntest_df = pd.read_csv(\"..\/input\/2019-3rd-ml-month-with-kakr\/test.csv\")","7eab9b85":"# hyperparameter\nbatch_size = 32\nimg_size = (256, 256)\nchannels = (3, )\nmodel_type = \"xception\"\nif model_type == \"xception\":\n    preprocess_inputs = keras.applications.xception.preprocess_input\nelif model_type == \"Resnet\":\n    preprocess_inputs = keras.applications.resnet50.preprocess_input","13d9ce8c":"train_datagen = ImageDataGenerator(horizontal_flip=True,\n                                   vertical_flip=True, \n                                   zoom_range=.1, preprocessing_function=preprocess_inputs)\n\ntrain_generator = train_datagen.flow_from_dataframe(dataframe=train_df, directory=\"..\/input\/2019-3rd-ml-month-with-kakr\/train\", \n                                                    x_col=\"img_file\", y_col=\"class\", \n                                                    class_mode=\"categorical\", color_mode=\"rgb\", \n                                                    batch_size=batch_size, target_size=img_size)","4f286c33":"# model.reset_states()","aadd28b1":"if model_type == \"xception\":\n    xception = keras.applications.xception.Xception(include_top=False, weights='imagenet', input_tensor=None, input_shape=img_size+channels, pooling=None, classes=196)\n    model = keras.models.Sequential()\n\n    model.add(xception)\n    model.add(keras.layers.GlobalAveragePooling2D())\n    model.add(keras.layers.Dropout(rate=.3))\n\n    model.add(keras.layers.Dense(5, activation='sigmoid'))\n\n    model.add(keras.layers.Dense(units=len(train_generator.class_indices), activation=\"softmax\", kernel_initializer='he_normal'))\n\n    model.compile(optimizer=\"RMSprop\", loss=\"categorical_crossentropy\", metrics=[\"acc\"])\n    \nelif model_type == \"Resnet\":\n    Resnet = keras.applications.resnet50.ResNet50(include_top=False, input_shape=img_size+channels)\n    model = keras.models.Sequential()\n\n    model.add(Resnet)\n    model.add(keras.layers.GlobalAveragePooling2D())\n    model.add(keras.layers.Dropout(rate=.3))\n\n    model.add(keras.layers.Dense(5, activation='sigmoid'))\n\n    model.add(keras.layers.Dense(units=len(train_generator.class_indices), activation=\"softmax\", kernel_initializer='he_normal'))\n\n    model.compile(optimizer=\"RMSprop\", loss=\"categorical_crossentropy\", metrics=[\"acc\"])","2168af8d":"print(model_type)","d329ac01":"%%time\nmodel.fit_generator(train_generator, epochs=200, steps_per_epoch=300, verbose=0)","f2d32ffc":"plt.plot(model.history.history[\"acc\"])\nplt.show()","a0c919b7":"test_datagen = ImageDataGenerator(horizontal_flip=False,\n                                  vertical_flip=False, \n                                  zoom_range=.0, preprocessing_function=preprocess_inputs)\n\ntest_generator = test_datagen.flow_from_dataframe(dataframe=test_df, directory=\"..\/input\/2019-3rd-ml-month-with-kakr\/test\", \n                                                  x_col=\"img_file\", y_col=None,\n                                                  class_mode=None, color_mode=\"rgb\", \n                                                  batch_size=batch_size, target_size=img_size)","9f79972b":"%%time\nresult = model.predict_generator(generator=test_generator, steps=math.ceil(len(test_df)\/batch_size), verbose=0)","332b0d54":"result = np.argmax(result, axis=1)\ntemp = pd.DataFrame({\"index\" : test_generator.index_array, \"class\" : result})","c03e20fa":"label = train_generator.class_indices\nlabel = pd.DataFrame.from_dict(label, orient='index').reset_index().rename(columns={0:\"class\"})","d05d4b55":"result = temp.merge(label, left_on=\"class\", right_on=\"class\")","0eddbfc8":"submission = test_df.merge(result, left_index=True, right_on=\"index_x\")[[\"img_file\", \"class\"]]","e1c93c73":"submission.to_csv(\"submission.csv\", index=False)","3f74d1bb":"The end of Notebook","54fac25c":"---","9c7adb32":"## \uc790\ub3d9\ucc28 \ubaa8\ub378 \ubd84\ub958\nDamien Park  \n2019.08.12"}}