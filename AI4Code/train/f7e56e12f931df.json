{"cell_type":{"541460b6":"code","45e40f7e":"code","ae17a619":"code","d123bddd":"code","de70f87e":"code","fa4e9ae4":"code","14b73591":"markdown","c3f5defa":"markdown","4f01b08b":"markdown"},"source":{"541460b6":"import pandas as pd\nimport numpy as np\nfrom keras.models import Sequential\nfrom keras.layers import LSTM, Dense, Dropout, Flatten\nfrom keras.utils import to_categorical\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score, classification_report","45e40f7e":"df = pd.read_csv('..\/input\/different-anomalies-in-ecgs\/train.csv', header=None)\ndf.describe()","ae17a619":"X = df.values[:,:-1]\ny = df.values[:, -1].astype(int)\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42, test_size=0.2)\n\nX_train_rf, X_test_rf = X_train.reshape((X_train.shape[0], X_train.shape[1], 1)), X_test.reshape((X_test.shape[0], X_test.shape[1], 1))\ny_train_oe, y_test_oe = to_categorical(y_train), to_categorical(y_test)","d123bddd":"model = Sequential()\nmodel.add(LSTM(1, input_shape=(187,1), return_sequences=True))\nmodel.add(Flatten())\nmodel.add(Dense(16,))\nmodel.add(Dropout(0.25))\nmodel.add(Dense(5, activation = \"softmax\"))\n\nmodel.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])\n\nmodel.summary()","de70f87e":"history = model.fit(X_train.reshape((70043,187,1)), y_train_oe, epochs=10, batch_size=128, validation_split=0.2)","fa4e9ae4":"y_pred = model.predict(X_test.reshape((17511,187,1)))\nprint(classification_report(y_test_oe.argmax(axis=1), y_pred.argmax(axis=1)))","14b73591":"# Construction du RNN ","c3f5defa":"# Pr\u00e9processing des donn\u00e9es ","4f01b08b":"# Imports des donn\u00e9es"}}