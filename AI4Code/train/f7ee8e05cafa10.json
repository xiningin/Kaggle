{"cell_type":{"83c3997d":"code","38a9956d":"code","7eac745e":"code","136004b5":"code","479bd03b":"code","0e6fe723":"code","fb6ad985":"code","bff64b1d":"code","eb5ba00e":"code","720fa9fc":"code","1f49bbe6":"code","bcfa822b":"code","daff033a":"code","ab6718b5":"code","cd568f5a":"code","e9a16e9f":"code","a0e1a9bd":"markdown","2898a100":"markdown","c4cf5f02":"markdown","a5cf64d1":"markdown","1fef9033":"markdown","87c39681":"markdown","9de5e9b7":"markdown","41477513":"markdown","25a7f4bc":"markdown","a92588c1":"markdown"},"source":{"83c3997d":"import pandas as pd, numpy as np, os, matplotlib.pyplot as plt, seaborn as sns\nimport datatable as dt\nimport warnings\nimport random\nfrom sklearn.ensemble import RandomForestClassifier\nwarnings.filterwarnings('ignore')\nimport gc\nfrom sklearn.metrics import roc_curve,auc\nfrom sklearn.linear_model import LogisticRegression\nfrom lightgbm import LGBMClassifier\nfrom sklearn.naive_bayes import GaussianNB\nimport plotly.figure_factory as ff\nimport plotly.express as px\nfrom xgboost import XGBClassifier \npd.set_option('max_columns',None)\n\nfrom time import time\nimport lightgbm as lgb\nfrom sklearn.model_selection import KFold, StratifiedKFold","38a9956d":"PLOT = True\n\n#notebook setup\ndef seed_everything(seed=42):\n    random.seed(seed)\n    os.environ['PYTHONHASHSEED'] = str(seed)\n    np.random.seed(seed)\n\n    \nTARGET = 'target'\nFOLD = 5\nSEED = 69\nN_ESTIMATORS=10000\nDEVICE = 'CPU'\nEVAL_METRIC = \"AUC\"\n\nSTUDY_TIME = 60*60*8\nseed_everything(SEED)","7eac745e":"%time\n#import data\ntrain = dt.fread(r\"..\/input\/tps-october-2021-dataset\/train_1.csv\").to_pandas()\ntest = dt.fread(r\"..\/input\/tps-october-2021-dataset\/test_1.csv\").to_pandas()\n\ntrain.columns = ['f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7',\n       'f9', 'f10', 'f11', 'f12', 'target']\n\ntest.columns = ['f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7',\n       'f9', 'f10', 'f11', 'f12']\n\ntrain['target'] = train['target'].astype('int64') \n\nsample_submission = pd.read_csv('..\/input\/tabular-playground-series-oct-2021\/sample_submission.csv')","136004b5":"print('Train Shape: ',train.shape)\ntrain.tail(10).reset_index(drop=True)","479bd03b":"print('Test Shape: ',test.shape)\ntest.head(10)","0e6fe723":"#setup for preprocessing\nX = train.drop(TARGET, axis=1)\ny = train[[TARGET]]\nX_test = test\n\ndel train, test\ngc.collect()","fb6ad985":"cols = ['f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f10',\n       'f12']\n\nX = X[cols]\nX_test = X_test[cols] ","bff64b1d":"# helper functions\ndef get_auc(y_true, y_hat):\n    fpr, tpr, _ = roc_curve(y_true, y_hat)\n    score = auc(fpr, tpr)\n    return score","eb5ba00e":"if PLOT == True:\n    X_data = [X.f0,  X.f1,  X.f2,  X.f3,  X.f4,  X.f5,  X.f6,  X.f10,  X.f12]\n    group_labels = X.columns.to_list()\n    fig = ff.create_distplot(X_data, group_labels, bin_size=0.3, show_hist=False, show_rug=False)\n    fig.show()","720fa9fc":"if PLOT == True:\n    _data = [X_test.f0,  X_test.f1,  X_test.f2,  X_test.f3,  X_test.f4,  X_test.f5,  X_test.f6,  X_test.f10,  X_test.f12]\n    fig = ff.create_distplot(_data, group_labels, bin_size=0.3, show_hist=False, show_rug=False)\n    fig.show()","1f49bbe6":"if PLOT == True:\n    #correlation between all models pred\n    data = np.corrcoef(X_data)\n    fig=px.imshow(data,x=group_labels, y=group_labels)\n\n    fig.show()","bcfa822b":"if PLOT == True:\n    #correlation between all models pred\n    data = np.corrcoef(_data)\n    fig=px.imshow(data,x=group_labels, y=group_labels)\n\n    fig.show()","daff033a":"params = {'device_type': 'cpu',\n 'n_estimators': 10000,\n 'learning_rate': 0.10932948761384702,\n 'num_leaves': 780,\n 'max_depth': 7,\n 'min_data_in_leaf': 9200,\n 'lambda_l1': 20,\n 'lambda_l2': 5,\n 'min_gain_to_split': 8.857618869765401,\n 'bagging_fraction': 0.8,\n 'bagging_freq': 1,\n 'feature_fraction': 0.8}\n\noverfit = {'device': 'cpu',\n#               'gpu_platform_id': 0,\n#               'gpu_device_id': 0,\n              'num_threads': -1,\n         'objective': 'binary','metric' : 'auc',\n    'n_estimators': 100000,\n    'random_state': SEED,\n    'learning_rate': 3e-3,\n         }","ab6718b5":"#check of all the columns in train is in test set\nassert X.columns.to_list() == X_test.columns.to_list()\n\nmeta_pred_tmp = []\nscores_tmp = []\n\n# create cv\nkf = StratifiedKFold(n_splits=10, shuffle=True, random_state=1)\n\nfor fold, (idx_train, idx_valid) in enumerate(kf.split(X, y)):\n    # create train, validation sets\n    X_train, y_train = X.iloc[idx_train], y.iloc[idx_train]\n    X_valid, y_valid = X.iloc[idx_valid], y.iloc[idx_valid]\n    \n    model = LGBMClassifier(**overfit)\n#     model = LogisticRegression(**{'C': 0.0016915132862548748, 'max_iter': 29, 'solver': 'lbfgs'})\n#     model = RandomForestClassifier(random_state=SEED)\n    model.fit(X_train, y_train\n              ,eval_set=[(X_valid,y_valid)],\n             early_stopping_rounds=200,\n            verbose=0\n             )\n    # validation prediction\n    pred_valid = model.predict_proba(X_valid)[:,1]\n    \n    score = get_auc(y_valid, pred_valid)\n    scores_tmp.append(score)\n    \n    print(f\"Fold: {fold + 1} Score: {score}\")\n    print('--'*20)\n    \n    # test prediction based on oof_set\n    y_hat = model.predict_proba(X_test)[:,1]\n    meta_pred_tmp.append(y_hat)\n# print overall validation scores\nprint(f\"Overall Validation Score | Meta: {np.mean(scores_tmp)}\")\nprint('::'*20)","cd568f5a":"#average meta predictions over each fold\nmeta_predictions = np.mean(np.column_stack(meta_pred_tmp), axis=1)\n\n# create submission file\nstacked_submission = sample_submission.copy()\nstacked_submission[TARGET] = meta_predictions\nstacked_submission.to_csv('.\/LGBM_overfit.csv', index=False)","e9a16e9f":"if PLOT == True:\n    plot = pd.concat([X_test,stacked_submission[TARGET]],axis=1)\n\n    pred = [plot.f0,  plot.f1,  plot.f2,  plot.f3,  plot.f4,  plot.f5,  plot.f6,  plot.f10,  plot.f12, plot.target]\n    group_labels = plot.columns.to_list()\n    fig = ff.create_distplot(pred, group_labels, bin_size=0.3, show_hist=False, show_rug=False)\n    fig.show()","a0e1a9bd":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:170%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\nTest-set Heatmap Plot\n<\/div>","2898a100":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#dd4124;font-size:170%;font-family:sans-serif;letter-spacing:0.5px\">\nNote: Upvote is Free!!!\n<\/div>\n<div style=\"color:White; display:fill; border-radius:5px;background-color:#009473;font-size:111%;font-family:sans-serif;letter-spacing:0.5px\">\nI will public my dataset after you upvote it, probably this will be my last submission, bcoz of my exam. :(\n<\/div>","c4cf5f02":"<a><img src=\"https:\/\/i.ibb.co\/PWvpT9F\/header.png\" alt=\"header\" border=\"0\" ><\/a>","a5cf64d1":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:170%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\nSimple LightGBM\n<\/div>","1fef9033":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:170%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\nLightGBM Prediction KDE Plot\n<\/div>","87c39681":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:170%;font-family:sans-serif;letter-spacing:0.5px\">\nTrain-set KDE Plot\n<\/div>","9de5e9b7":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:170%;font-family:sans-serif;letter-spacing:0.5px\">\nPreprocessing\n<\/div>","41477513":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:270%;font-family:sans-serif;letter-spacing:0.5px:text-align: center\">\nTabular Playground Series - Oct 2021\n<\/div>","25a7f4bc":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:170%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\nTrain-set Heatmap Plot\n<\/div>","a92588c1":"<div style=\"color:White; display:fill; border-radius:5px;background-color:#336b87;font-size:170%;font-family:sans-serif;letter-spacing:0.5px;text-align: center\">\nTest-set KDE Plot\n<\/div>"}}