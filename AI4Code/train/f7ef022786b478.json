{"cell_type":{"17ae932d":"code","cf4dcc82":"code","88939529":"code","b2817427":"code","278665f1":"code","7faac3f0":"code","d6ae73ef":"code","370347d5":"code","2aaa8327":"code","cd87c115":"code","d13040ea":"code","30859a9a":"code","28d0cccc":"code","02b9843d":"code","ea04330a":"code","458da5a4":"code","eb9fe360":"code","04c61d10":"code","3c072836":"code","f41cac23":"code","9f49609c":"code","a3464492":"code","ae611c18":"code","5d8fbb7d":"code","580e57d3":"code","44cddb56":"code","ea3b9926":"code","c02aeede":"code","b7d2fff3":"code","07b9f663":"code","82d97a95":"code","b431d02a":"code","23a13b85":"code","64a5c5ea":"code","87cd19b2":"code","0834e4ca":"code","fa4b304a":"code","6d129d0c":"code","27b0ba94":"code","48d4b65c":"code","124b8f6b":"code","6bf5af3e":"code","13ff6d25":"code","41c3e52e":"code","90175c68":"code","0788dbaa":"code","526af298":"code","51fa93d9":"code","44ac0d5f":"code","173b2f2e":"code","8ca277b2":"code","208bb3fc":"code","034e319d":"code","4c435455":"code","de66adea":"code","fb36202c":"code","810a749b":"code","b1fab69a":"code","4cf36cf8":"code","a33167eb":"code","f5594a02":"code","a1e726d4":"code","7efd9f9d":"markdown","26d26c65":"markdown","18f68133":"markdown","c013e0cd":"markdown","6833f6c1":"markdown","356d65d2":"markdown","205f1717":"markdown","04fb23de":"markdown","a7ed1ff5":"markdown","fff5a35a":"markdown","d3192c61":"markdown","255ac6b2":"markdown","aa4dccc7":"markdown","cc4d1407":"markdown","679b8e89":"markdown","a81f07c5":"markdown","7a96514a":"markdown","33fe668e":"markdown","e2bccdb6":"markdown","656160bc":"markdown","9ed3baaf":"markdown","e453088c":"markdown","2d69b7ea":"markdown","eb231936":"markdown","61718b1c":"markdown","dda0263e":"markdown","40f90089":"markdown","b881759e":"markdown","b2e8a436":"markdown","e955e6e7":"markdown","30a824b4":"markdown","971a4ad0":"markdown","2b1f9a70":"markdown","8e47af9f":"markdown","af3e80f1":"markdown","690d0e47":"markdown","48ffdbf8":"markdown","e98d1f54":"markdown","9bd9fd9c":"markdown","593661fb":"markdown","3a88d167":"markdown","5a4bc5d7":"markdown","059bd46e":"markdown","a9bc4ebc":"markdown","e43b7f8f":"markdown","cd76187b":"markdown","7f5d1cdf":"markdown","4600c476":"markdown","a7b44b0a":"markdown","dc0de3cb":"markdown","4299d487":"markdown","a057bb91":"markdown","ad4cf6e4":"markdown","d0226610":"markdown","5a7fded1":"markdown","12a14c23":"markdown","d9f9683d":"markdown","0c0ef677":"markdown","901d43b4":"markdown"},"source":{"17ae932d":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom numpy import sqrt, arange\nfrom scipy import stats\n%matplotlib inline","cf4dcc82":"student = pd.read_csv(\"..\/input\/student.csv\", sep=\",\")","88939529":"student.head()","b2817427":"sample_size = student.shape[0]\nsample_size","278665f1":"sample_mean_grade = student['G3'].mean()\nsample_mean_grade","7faac3f0":"std_error_grades = student['G3'].std()\/sqrt(sample_size)\nstd_error_grades","d6ae73ef":"stats.norm.interval(0.95, loc=sample_mean_grade, scale=std_error_grades)","370347d5":"SF = student.loc[(student.sex == 'F')]","2aaa8327":"SF.head()","cd87c115":"SM = student.loc[(student.sex == 'M')]","d13040ea":"SM.head()","30859a9a":"sample_mean_grade_F =SF['G3'].mean()\nsample_mean_grade_F ","28d0cccc":"sample_mean_grade_M =SM['G3'].mean()\nsample_mean_grade_M ","02b9843d":"sample_size_F = SF.shape[0]\nsample_size_F ","ea04330a":"sample_size_M = SM.shape[0]\nsample_size_M","458da5a4":"std_error_grades_F = SF['G3'].std()\/sqrt(sample_size_F)\nstd_error_grades_F","eb9fe360":"std_error_grades_M = SM['G3'].std()\/sqrt(sample_size_M)\nstd_error_grades_M","04c61d10":"stats.norm.interval(0.95, loc=sample_mean_grade_F, scale=std_error_grades_F)","3c072836":"stats.norm.interval(0.95, loc=sample_mean_grade_M, scale=std_error_grades_M)","f41cac23":"fig, axes = plt.subplots(1,2, figsize = (14,4))\nsns.boxplot(x='sex', y='G3', data=student, ax=axes[0])\nsns.pointplot(x='sex', y='G3', data=student, ax=axes[1]);","9f49609c":"fig, axes = plt.subplots(1,2, figsize = (14,4))\nsns.boxplot(x='Dalc', y='G3', data=student, ax=axes[0])\nsns.pointplot(x='Dalc', y='G3', data=student, ax=axes[1]);","a3464492":"stats.kurtosistest(a=student['G3'])","ae611c18":"stats.pearsonr(student['G1'],student['G2'])","5d8fbb7d":"student.groupby('sex')['G3'].var()","580e57d3":"grades_girls = student['G3'][student['sex']=='F']\ngrades_boys = student['G3'][student['sex']=='M']\nstats.bartlett(grades_girls, grades_boys)","44cddb56":"fig, axes = plt.subplots(1,2, figsize = (14,4))\nsns.boxplot(x='sex', y='G3', data=student, ax=axes[0])\nsns.pointplot(x='sex', y='G3', data=student, ax=axes[1]);","ea3b9926":"stats.ttest_ind(grades_girls, grades_boys, equal_var=True)","c02aeede":"Dalc_cat = {\n    1: 'Low',\n    2: 'Low',\n    3: 'Med',\n    4: 'High',\n    5: 'High'\n}","b7d2fff3":"student['Dalcc'] = student['Dalc'].map(Dalc_cat)\nstudent['Dalcc'].head()","07b9f663":"student['Dalcc'].value_counts()","82d97a95":"student['Dalcc'] = student['Dalcc'].astype(dtype='category', \n                               categories=['Low', 'Med', 'High'],\n                               ordered=True)","b431d02a":"student['Dalcc'].value_counts(sort=False)","23a13b85":"gender_Dalc_table = pd.crosstab(student['Dalcc'], student['sex'])\ngender_Dalc_table","64a5c5ea":"fig, axes = plt.subplots(1,2, figsize = (14,4))\nstudent['sex'].value_counts().plot(kind='bar', ax=axes[0], title='Gender')\nstudent['Dalcc'].value_counts().plot(kind='bar', ax=axes[1], title='Alcohol Consumption Level');","87cd19b2":"100*(gender_Dalc_table.T\/gender_Dalc_table.apply(sum, axis=1)).T","0834e4ca":"100*(gender_Dalc_table\/gender_Dalc_table.apply(sum, axis=0)).T","fa4b304a":"fig, axes = plt.subplots(1,2, figsize = (14,4))\ngender_Dalc_table.plot(kind='bar', stacked=True, ax=axes[0]);\n(100*(gender_Dalc_table.T\/gender_Dalc_table.apply(sum, axis=1)).T).plot(kind='bar', stacked=True, ax=axes[1]);","6d129d0c":"fig, axes = plt.subplots(1,2, figsize = (14,4))\n(gender_Dalc_table.T).plot(kind='bar', stacked=True, ax=axes[0]);\n(100*(gender_Dalc_table\/gender_Dalc_table.apply(sum, axis=0)).T).plot(kind='bar', stacked=True, ax=axes[1]);","27b0ba94":"chi_stat, p_value, dof, expected = stats.chi2_contingency(gender_Dalc_table)","48d4b65c":"chi_stat","124b8f6b":" p_value","6bf5af3e":"dof","13ff6d25":"import pandas as pd\nimport scipy.stats as stats\nimport researchpy as rp\nimport statsmodels.api as sm\nfrom statsmodels.formula.api import ols","41c3e52e":"from statsmodels.stats.multicomp import pairwise_tukeyhsd\nfrom statsmodels.stats.multicomp import MultiComparison","90175c68":"rp.summary_cont(student['G3'])","0788dbaa":"rp.summary_cont(student['G3'].groupby(student['Dalcc']))","526af298":"stats.f_oneway(student['G3'][student['Dalcc'] == 'High'], \n             student['G3'][student['Dalcc'] == 'Med'],\n             student['G3'][student['Dalcc'] == 'Low'])","51fa93d9":"student['Dalcc'].head()","44ac0d5f":"student['Dalcc2'] = student['Dalcc'].astype(dtype='object')","173b2f2e":"student['Dalcc2'].head()","8ca277b2":"results = ols('G3 ~ C(Dalcc2)', data=student).fit()\nresults.summary()","208bb3fc":"student_girls=student[student['sex']=='F']","034e319d":"student_girls.head()","4c435455":"results_girls = ols('G3 ~ C(Dalcc2)', data=student_girls).fit()\nresults_girls.summary()","de66adea":"student_boys=student[student['sex']=='M']","fb36202c":"student_boys.head()","810a749b":"results_boys = ols('G3 ~ C(Dalcc2)', data=student_boys).fit()\nresults_boys.summary()","b1fab69a":"x=['Boys','Girls']\ncoef_df = pd.DataFrame()\nfor i, mod in enumerate([results_boys, results_girls]):\n    err_series = mod.params - mod.conf_int()[0]\n    coef_df = coef_df.append(pd.DataFrame({'coef': mod.params.values[1:],\n                                           'err': err_series.values[1:],\n                                           'varname': err_series.index.values[1:],\n                                           'model':  x[i]\n                                          })\n                            )\ncoef_df","4cf36cf8":"## marker to use\nmarker_list = 'so'\nwidth=0.05\n## 5 covariates in total\nbase_x = pd.np.arange(2) - 0.2\nbase_x","a33167eb":"from matplotlib import pyplot as plt\nfrom matplotlib.lines import Line2D\n%matplotlib inline\n\nfig, ax = plt.subplots(figsize=(8, 5))\nfor i, mod in enumerate(coef_df.model.unique()):\n    mod_df = coef_df[coef_df.model == mod]\n    mod_df = mod_df.set_index('varname').reindex(coef_df['varname'].unique())\n    ## offset x posistions\n    X = base_x + width*i\n    ax.bar(X, mod_df['coef'],  \n           color='none',yerr=mod_df['err'])\n    ## remove axis labels\n    ax.set_ylabel('')\n    ax.set_xlabel('')\n    ax.scatter(x=X, \n               marker=marker_list[i], s=120, \n               y=mod_df['coef'], color='black')\n    ax.axhline(y=0, linestyle='--', color='black', linewidth=4)\n    ax.xaxis.set_ticks_position('none')\n    _ = ax.set_xticklabels(['','','Low','','','','Med'], \n                           rotation=0, fontsize=16)\n\n\n       \n## finally, build customized legend\nlegend_elements = [Line2D([0], [0], marker=m,\n                          label=x[i],\n                          color = 'k',\n                          markersize=10)\n                   for i, m in enumerate(marker_list)\n                  ]\n_ = ax.legend(handles=legend_elements, loc=2, \n              prop={'size': 15}, labelspacing=1.2)","f5594a02":"from statsmodels.stats.multicomp import pairwise_tukeyhsd\nfrom statsmodels.stats.multicomp import MultiComparison\n\nmc_girls = MultiComparison(student_girls['G3'], student_girls['Dalcc2'])\nmc_results_girls = mc_girls.tukeyhsd()\nprint(mc_results_girls)","a1e726d4":"mc_boys = MultiComparison(student_boys['G3'], student_boys['Dalcc2'])\nmc_results_boys = mc_boys.tukeyhsd()\nprint(mc_results_girls)","7efd9f9d":"We need to create a new variable with type `object`","26d26c65":"Let us try to answer to the question: Does alcohol consumption affect academic performance?","18f68133":"# Hypothesis testing <a class=\"anchor\" id=\"s3\"><\/a>","c013e0cd":"Let us show this graphicaly then","6833f6c1":"# Introduction <a class=\"anchor\" id=\"s1\"><\/a>\n\n+ We will briefly talk in this lesson about the  Scientific Library for Python (`SciPy`), which is the scientific toolbox for Python. \n+ We will get a brief overview of the statistics subpackage and we will use it to perform many statistical calculations, including calculations of probabilities, probability distributions,\u00a0and confidence intervals. \n+ We will also perform hypothesis testing on a real-world dataset, and we will be able to state conclusions that go beyond the sample that we have.\n\n","356d65d2":"The sample size","205f1717":"The Tukey Test (or Tukey procedure), also called Tukey\u2019s Honest Significant Difference test, is a post-hoc test based on the studentized range distribution. \n\nAn ANOVA test can tell you if your results are significant overall, but it will not tell you exactly where those differences lie. After you have run an ANOVA and found significant results, then you can run Tukey\u2019s HSD to find out which specific groups\u2019s means (compared with each other) are different. The test compares all possible pairs of means.","04fb23de":"Second method","a7ed1ff5":"We will now compute the confidence interval of the variable `G3` and the confidence intervals by groups","fff5a35a":"Let's then perform the One way-ANOVA","d3192c61":"Chi-square test of independence of variables in a contingency table.\n\nThis function computes the chi-square statistic and p-value for the hypothesis test of independence of the observed frequencies in the contingency table.","255ac6b2":"Boys Confidence Interval","aa4dccc7":"## Normality test <a class=\"anchor\" id=\"s31\"><\/a>","cc4d1407":"Girls Confidence Interval","679b8e89":"# Confidence Intervals <a class=\"anchor\" id=\"s2\"><\/a>","a81f07c5":"The overall model was significant, now to test which groups differ. Deciding which groups to compare should be theory driven. There are a few different techniques that can be used. Each of these techniques have different ways of controlling for familywise error rate. We will show here how to perform one them: ","7a96514a":"Given the alcohol consumption ","33fe668e":"Make it as an ordered variable","e2bccdb6":"# One-Way Anova <a class=\"anchor\" id=\"s4\"><\/a>","656160bc":"Let's make again a graph showing the confidence intervals of the mean of the final grade between Boys and Girls","9ed3baaf":"** Do male teenagers drink more than female teenagers?**","e453088c":"Since we got such a low p-value we can reject the Null hypothesis of equal means for the two groups at a level of significance of 5%.","2d69b7ea":"As an example we will compare the final grades between the group of Alcohol consumption on the whole sample and we will do the same on the sub-samples of Girls and Boys.","eb231936":"** Boys data**","61718b1c":"Some Statistical test from `scipy.stats`\n\n* kurtosistest(a[, axis, nan_policy])\tTests whether a dataset has normal kurtosis\n* normaltest(a[, axis, nan_policy])\tTests whether a sample differs from a normal distribution.\n* skewtest(a[, axis, nan_policy])\tTests whether the skew is different from the normal distribution.\n* pearsonr(x, y)\tCalculates a Pearson correlation coefficient and the p-value for testing non-correlation.\n* ttest_1samp(a, popmean[, axis, nan_policy])\tCalculates the T-test for the mean of ONE group of scores.\n* ttest_1samp(a, popmean[, axis, nan_policy])\tCalculates the T-test for the mean of ONE group of scores.\n* ttest_ind(a, b[, axis, equal_var, nan_policy])\tCalculates the T-test for the means of two independent samples of scores.\n* ttest_ind_from_stats(mean1, std1, nobs1, ...)\tT-test for means of two independent samples from descriptive statistics.\n* ttest_rel(a, b[, axis, nan_policy])\tCalculates the T-test on TWO RELATED samples of scores, a and b.\n* kstest(rvs, cdf[, args, N, alternative, mode])\tPerform the Kolmogorov-Smirnov test for goodness of fit.\n* chisquare(f_obs[, f_exp, ddof, axis])\tCalculates a one-way chi square test.\n* ansari(x, y)\tPerform the Ansari-Bradley test for equal scale parameters\n* bartlett(*args)\tPerform Bartlett\u2019s test for equal variances\n* levene(*args, **kwds)\tPerform Levene test for equal variances.\n* shapiro(x[, a, reta])\tPerform the Shapiro-Wilk test for normality.\n* anderson(x[, dist])\tAnderson-Darling test for data coming from a particular distribution\n* anderson_ksamp(samples[, midrank])\tThe Anderson-Darling test for k-samples.","dda0263e":"Because we have a sample size that is much greater than 30, we can use the [Central Limit Theorem](https:\/\/en.wikipedia.org\/wiki\/Central_limit_theorem) to calculate confidence intervals. According to this theorem we can calculate a confidence interval for the mean using the normal distribution.\n\nTo get the confidence interval for the mean we need three numbers:\n\n1. Sample mean\n2. Standard error\n3. Confidence level\n\nFormula for the standard error:\n\n$$ SE = \\frac{s}{\\sqrt n} $$","40f90089":"According to the test we **cannot** reject the Null hypothesis of equal variances, so we will use assume that the two groups are samples from a population with the same variances. This information will be useful in our next test.","b881759e":"The visualizations suggest there is a difference between the means of the final grade of the two groups. Now we will perform a formal statistical test to confirm the hypothesis that girls have higher final scores than the boys.\n\n> **Null Hypothesis: for both groups (Boys and Girls) the population means of the final grade are equal.**\n\n>  **Alternative Hypothesis: The population means of the final grades are different.**\n\nA common test to apply in for these cases is the **two-sample t-test,** which is used to determine if two population means are equal. \n\nThe assumptions of this test  are:\n\n1. **Independent samples**: we will assume that the method for collecting the data assured that the answers given by the students are independent.\n2. **Large enough sample size or observations come from a normally-distributed population**: this assumption is required if we are working with small samples (less than 30), since in the smaller group we have 166 observations we can say that we have a \"large enough\" sample.\n3. **Variances are equal**\n\nIn addition this test have two versions: one assuming equal variances and the other assuming unequal variances.","b2e8a436":"Let us first import the libraries","e955e6e7":"There is then a statistical significant difference between the grades in the two analyzed groups. The results suggest that the girls have  higher grades than boys. ","30a824b4":"## Correlation test <a class=\"anchor\" id=\"s32\"><\/a>","971a4ad0":"The one-way analysis of variance (ANOVA) is used to determine whether there are any statistically significant differences between the means of  independent groups.","2b1f9a70":" This is a first method to perform an ANOVA ","8e47af9f":"And the  plot  of the cross-table","af3e80f1":"Let's perform the Bartetts's test whose Null Hypothesis is that the variances are equal. We will use a significance level of 5.0%","690d0e47":"Let's perform the Correlation test whose Null Hypothesis is that the correlation coefficient is  equal to zero. We will use a significance level of 5.0%","48ffdbf8":" `G3` is the variable that gives the  final grade (numeric: from 0 to 20, output target). We will show how to compute the confidence interval of the mean. \n ","e98d1f54":"## Introduction to SciPy <a class=\"anchor\" id=\"s12\"><\/a>","9bd9fd9c":"In this lesson we will show how to use `SciPy` Library to perform\n+ Statistics\n+ Probabilities\n+ Hypothesis testing\n+ Performing statistical tests","593661fb":"## Comparing means <a class=\"anchor\" id=\"s34\"><\/a>","3a88d167":"Let us compare the confidence intervals of `G3` between girls and boys","5a4bc5d7":"**Comparison of  the coefficients**","059bd46e":"`SciPy`\n\n+  is a tool for doing scientific computing in Python. \n+  is a Python-based ecosystem that is an open source software for math, science,\u00a0and engineering. \n+ contains various toolboxes dedicated to common issues in scientific computing. ","a9bc4ebc":"Let's then perform the One way-ANOVA","e43b7f8f":"In this lesson we use a dataset containing information about Portuguese students from two public schools. This is a real world dataset that was collected in order to study alcohol consumption in young people and its effects on students' academic performance. The dataset was built from two sources: school reports and questionnaires.\n\n**Attributes:**\n\n* 1 school - student's school (binary: 'GP' - Gabriel Pereira or 'MS' - Mousinho da Silveira) \n* 2 sex - student's sex (binary: 'F' - female or 'M' - male) \n* 3 age - student's age (numeric: from 15 to 22) \n- 4 address - student's home address type (binary: 'U' - urban or 'R' - rural) \n- 5 famsize - family size (binary: 'LE3' - less or equal to 3 or 'GT3' - greater than 3) \n- 6 Pstatus - parent's cohabitation status (binary: 'T' - living together or 'A' - apart) \n- 7 Medu - mother's education (numeric: 0 - none, 1 - primary education (4th grade), 2 - 5th to 9th grade, 3 -secondary education or 4 - higher education) \n- 8 Fedu - father's education (numeric: 0 - none, 1 - primary education (4th grade), 2 - 5th to 9th grade, 3 -secondary education or 4 - higher education) \n- 9 Mjob - mother's job (nominal: 'teacher', 'health' care related, civil 'services' (e.g. administrative or police), 'at_home' or 'other') \n- 10 Fjob - father's job (nominal: 'teacher', 'health' care related, civil 'services' (e.g. administrative or police), 'at_home' or 'other') \n- 11 reason - reason to choose this school (nominal: close to 'home', school 'reputation', 'course' preference or 'other') \n- 12 guardian - student's guardian (nominal: 'mother', 'father' or 'other') \n- 13 traveltime - home to school travel time (numeric: 1 <15 min., 2 - 15 to 30 min., 3 - 30 min. to 1 hour, or 4 - >1 hour) \n- 14 studytime - weekly study time (numeric: 1 - <2 hours, 2 - 2 to 5 hours, 3 - 5 to 10 hours, or 4 - >10 hours) \n- 15 failures - number of past class failures (numeric: n if 1<=n<3, else 4) \n- 16 schoolsup - extra educational support (binary: yes or no) \n- 17 famsup - family educational support (binary: yes or no) \n- 18 paid - extra paid classes within the course subject (Math or Portuguese) (binary: yes or no) \n- 19 activities - extra-curricular activities (binary: yes or no) \n- 20 nursery - attended nursery school (binary: yes or no) \n- 21 higher - wants to take higher education (binary: yes or no) \n- 22 internet - Internet access at home (binary: yes or no) \n- 23 romantic - with a romantic relationship (binary: yes or no) \n- 24 famrel - quality of family relationships (numeric: from 1 - very bad to 5 - excellent) \n- 25 freetime - free time after school (numeric: from 1 - very low to 5 - very high) \n- 26 goout - going out with friends (numeric: from 1 - very low to 5 - very high) \n- 27 Dalc - workday alcohol consumption (numeric: from 1 - very low to 5 - very high) \n- 28 Walc - weekend alcohol consumption (numeric: from 1 - very low to 5 - very high) \n- 29 health - current health status (numeric: from 1 - very bad to 5 - very good) \n- 30 absences - number of school absences (numeric: from 0 to 93) \n\n**these grades are related with the course subject:**\n\n- 31 G1 - first period grade (numeric: from 0 to 20) \n- 31 G2 - second period grade (numeric: from 0 to 20) \n- 32 G3 - final grade (numeric: from 0 to 20, output target) ","cd76187b":"Let's perform the Normality test whose Null Hypothesis is that the data is sampled from a Normal distribution. We will use a significance level of 5.0%","7f5d1cdf":"Let's first create two categorical variables `Dalc_c` and `Walc_c` from the variables `Dalc` and `Walc` by considering three categories of drinker:\n+ Low when the scores are 1 or 2\n+ Med when the scores are equal to 3\n+ High when the scores are 4 or 5","4600c476":"**Girls data**","a7b44b0a":"And Given the sex variable","dc0de3cb":"Let us first import the libraries ","4299d487":"I will draw in a same figure a plot with the confidence intervals of the coefficients of the `Boys` and `Girls` models. We will first create a dataframe containing the estimation of the models. ","a057bb91":"## Test of Equal variances  <a class=\"anchor\" id=\"s33\"><\/a>","ad4cf6e4":"**Girls sub-samples**","d0226610":"## Importing the data into Python <a class=\"anchor\" id=\"s12\"><\/a>","5a7fded1":"Let's us now compare the One-way ANOVA results between the girls and the boys sub-sample. To do so we will first consider these two sub-samples and perform two one-way ANOVA. We will then compare the coefficients and measure the difference of the impact of the consumption of Alcohol between Girls and Boys teenagers. ","12a14c23":"# Tukey\u2019s HSD Post-hoc comparison <a class=\"anchor\" id=\"s5\"><\/a>","d9f9683d":"A preview of  the data","0c0ef677":"** Boys sub-samples**","901d43b4":"We can then draw the same graph as above by comparing the final grades between the five categories of drinker in the weekday. We will be using then `Dalc` variable"}}