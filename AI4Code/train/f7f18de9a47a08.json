{"cell_type":{"a29c81e0":"code","66e76530":"code","1c68f5d9":"code","dffc773a":"code","f3b43925":"code","68b7d1d2":"code","90857e17":"code","83237f67":"code","8c61df59":"code","ad6b8b33":"code","f678042f":"code","00ea5981":"code","684c4c15":"code","0be29373":"code","b1908464":"code","cd0a4495":"code","8be59879":"code","7ad8446a":"code","0040e7ac":"code","793cb235":"code","ceba463d":"code","9cbf6ffa":"code","22deb036":"code","752eb45d":"code","7da86db5":"code","71fd0fd0":"code","1b649275":"code","c0ae2bf1":"code","ee2b3393":"code","3262ab31":"code","00d77449":"code","7a7ba86b":"code","59b7d5d9":"code","e6f6deb0":"code","8fb75d26":"code","1f6abc89":"code","25491984":"code","008c059d":"code","b8c39dc4":"code","e83bc19e":"code","b5070686":"code","1863975f":"code","1b4e1dda":"markdown","af5e5a47":"markdown","75861e14":"markdown","c0d200df":"markdown","607cb03a":"markdown","356742c3":"markdown","689a02a2":"markdown","7d2a8d47":"markdown"},"source":{"a29c81e0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","66e76530":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nfrom sklearn.preprocessing import LabelEncoder","1c68f5d9":"math = pd.read_csv('\/kaggle\/input\/student-alcohol-consumption\/student-mat.csv')","dffc773a":"port = pd.read_csv('\/kaggle\/input\/student-alcohol-consumption\/student-por.csv')","f3b43925":"math.head(10)","68b7d1d2":"math.dtypes","90857e17":"math.info()","83237f67":"math.columns","8c61df59":"math.describe()","ad6b8b33":"df = [math,port]\ndf = pd.concat(df)\ndf.columns","f678042f":"le1 = LabelEncoder()\ndf = df.astype(str).apply(le1.fit_transform)","00ea5981":"df = pd.get_dummies(df)","684c4c15":"plt.plot(df['G3'].value_counts())\ndf['G3'].value_counts()","0be29373":"sns.boxplot(x = 'Fjob', y = 'G3', data = df, hue = 'Mjob')","b1908464":"sns.boxplot(x = 'reason', y = 'G3', data = df, hue = 'paid')","cd0a4495":"sns.boxplot(x = 'internet', y = 'G3', data = df, hue = 'higher')","8be59879":"plt.scatter(x = df['Medu'], y = df['G3'], c = df['Fedu'])","7ad8446a":"plt.scatter(x = df['studytime'], y = df['G3'], c = df['traveltime'], s = df['failures']*20)","0040e7ac":"plt.scatter(x = df['freetime'], y = df['G3'], c = df['goout'])","793cb235":"plt.scatter(x = df['G1'], y = df['G3'], c = df['G2'])","ceba463d":"plt.scatter(x = df['traveltime'], y = df['G3'])","9cbf6ffa":"grp = df[['G1', 'G2','G3','higher','internet']].groupby(['internet','higher']).mean()\nplt.pcolor(grp, cmap = 'coolwarm')\nplt.colorbar()\nplt.xlabel('internet')\nplt.ylabel('higher')","22deb036":"from sklearn import preprocessing\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics\nfrom sklearn.metrics import classification_report,confusion_matrix\n%matplotlib inline","752eb45d":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nscaler.fit(df.drop('G3',axis=1))\nscaled_features = scaler.transform(df.drop('G3',axis=1))","7da86db5":"X_train, X_test, y_train, y_test = train_test_split(scaled_features,df['G3'],test_size=0.3)","71fd0fd0":"from sklearn.neighbors import KNeighborsClassifier","1b649275":"error_rate = []\nfor i in range(1,100):\n    \n    knn = KNeighborsClassifier(n_neighbors=i)\n    knn.fit(X_train,y_train)\n    pred_i = knn.predict(X_test)\n    error_rate.append(np.mean(pred_i != y_test))","c0ae2bf1":"plt.figure(figsize=(10,6))\nplt.plot(range(1,100),error_rate,color='blue', linestyle='dashed', marker='o',markerfacecolor='red', markersize=10)\nplt.title('Error Rate vs. K Value')\nplt.xlabel('K')\nplt.ylabel('Error Rate')","ee2b3393":"knn = KNeighborsClassifier(n_neighbors=22)\n\nknn.fit(X_train,y_train)\npred_knn = knn.predict(X_test)\n\nprint('\\n')\nprint(confusion_matrix(y_test,pred_knn))\nprint('\\n')\nprint(classification_report(y_test,pred_knn))","3262ab31":"X_train, X_test, y_train, y_test = train_test_split(scaled_features,df['G3'],test_size=0.3)","00d77449":"from sklearn.linear_model import LogisticRegression","7a7ba86b":"logmodel = LogisticRegression()\nlogmodel.fit(X_train,y_train)","59b7d5d9":"pred_logmodel = logmodel.predict(X_test)","e6f6deb0":"print(classification_report(y_test,pred_logmodel))","8fb75d26":"from sklearn.tree import DecisionTreeClassifier","1f6abc89":"dtree = DecisionTreeClassifier()\ndtree.fit(X_train,y_train)","25491984":"pred_dtree = dtree.predict(X_test)","008c059d":"print(classification_report(y_test,pred_dtree))\nprint(confusion_matrix(y_test,pred_dtree))","b8c39dc4":"from sklearn.svm import SVC","e83bc19e":"model = SVC()\nmodel.fit(X_train,y_train)","b5070686":"pred_svm = model.predict(X_test)","1863975f":"print(confusion_matrix(y_test,pred_svm))\nprint(classification_report(y_test,pred_svm))","1b4e1dda":"**Import Libraries**","af5e5a47":"**Logistic Regression**","75861e14":"**Exploratory Data Analysis**","c0d200df":"**Decision Trees**","607cb03a":"**KNN Classification**","356742c3":"**Import Libraries**","689a02a2":"**Import Dataset**","7d2a8d47":"**Support Vector Machines**"}}