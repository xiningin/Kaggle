{"cell_type":{"a50bd17b":"code","bd38508f":"code","b37c7d6c":"code","46afbb30":"code","1390cdbb":"code","f714f7ae":"code","3b7dc686":"code","9a38af08":"code","0b2340fb":"code","6a409a86":"code","b115f630":"code","ea0ac0e0":"code","50eaa35e":"code","ef9fc9ed":"code","22009696":"code","6e8dbd8b":"code","9551bfe4":"code","bdba02b9":"code","e51da80e":"code","2c1c272c":"code","71cb83ed":"code","97b158a4":"code","88733310":"code","57f6a914":"code","a78bf6c8":"code","b94cfb35":"code","efa5c7f0":"code","7e070289":"code","98a2f871":"code","427ae57d":"code","b0063f5a":"code","f7ee0f69":"code","413d6a05":"code","31debc94":"code","4e768a83":"code","4b7d7bcc":"code","9a69f658":"code","a1fbfbd3":"code","31a7acbc":"code","6104bfc1":"code","5cd54fc2":"code","c346b6a2":"code","6f31f8ba":"code","070394e9":"code","11c5249b":"code","bbda17c2":"code","a76594ee":"code","5a26c44e":"code","35a2e6d1":"code","047d1ff4":"code","d79b73ad":"code","9d25e5ef":"code","51844753":"code","6a5e9565":"code","6c26be28":"code","cf16f9bb":"code","dcd03f7f":"code","5f64fbc4":"code","d165389b":"code","b74158d7":"code","555fc38c":"code","9b3eecc7":"code","07ae9c7d":"code","0b41ca6b":"code","94388bcd":"code","867a7690":"code","4bcb1b20":"code","6db6c0c6":"code","b09c9284":"code","d9a5ade8":"code","7e1d910d":"code","05861a5c":"code","4b91179f":"code","fd685938":"code","ec68078c":"code","bf4e760c":"code","7b167b0b":"code","ace34b84":"code","d37d4a12":"code","12291b05":"code","d52850b8":"code","a827f791":"code","127c9a93":"code","59968909":"code","e3e788a3":"code","e999d2a2":"code","9ae4ebee":"code","f4b8fd66":"code","c7662a30":"code","536ecce1":"code","58bf0725":"code","2f8e8222":"code","3d1ae894":"code","47a473fe":"code","8e1d7292":"code","cd1d6e01":"code","093f5b30":"code","e01c766f":"code","d3e7299e":"code","8dc1c5b9":"code","ad930b8b":"code","47cf6d38":"code","efca4832":"code","4badef28":"code","91ba0f1d":"code","66e97d49":"code","7ff86c08":"code","af46fce9":"code","9dc6dd13":"code","240475c1":"code","a4ef79f2":"code","2ab9c599":"code","fa05517b":"code","625fdf26":"code","0e01b458":"code","2b14934b":"code","22745db6":"code","761f1d37":"code","dee50a73":"code","3cc464ee":"code","7a815b1a":"code","3e31a20b":"code","8ed919a2":"code","3c3bc192":"code","214d6d93":"code","081ac8b0":"code","c8e9445d":"code","60ef067e":"code","71d040fc":"code","f6f2a098":"code","79d75478":"code","25c1be8e":"code","dff3adaf":"code","9ff06620":"code","c08645fc":"code","3f7255a0":"code","b4be1246":"code","5d715766":"code","55d2592f":"code","30204aff":"code","be320812":"code","08389675":"code","1530f285":"code","575213ed":"code","2386c5d5":"code","ce44d8cd":"code","89ddcb6b":"code","eb3a7cf2":"code","6fecd24e":"code","193e00f3":"code","7b59086b":"code","25b41607":"code","95c43fb3":"code","50093b4a":"code","a0a12491":"code","a0a3ec17":"code","70d1fc0a":"code","5e423b38":"code","5bf1bc87":"code","d4da9152":"code","2a2eba82":"code","8d856e29":"code","0cf652c9":"code","dd624b22":"code","bb26ef12":"code","3637f3a4":"code","f52b789c":"code","8cf28cba":"code","1899073e":"code","a9e4f214":"code","d3386786":"code","681ea426":"code","077839e4":"code","eb5f15ce":"code","c64cbf25":"code","58cbe3ea":"code","c9e420ad":"code","d4092d0e":"code","486f44d9":"code","d7d6eb58":"code","c83c396c":"code","7063e624":"code","c1ebf3ea":"code","09bf22d8":"code","04fa1366":"code","ccb26315":"code","008ae784":"code","a3d1711e":"code","d0b976b4":"code","00e9469e":"code","889a8e2e":"code","60ec9e33":"code","74fadbc1":"code","fc19269d":"code","1b07536b":"code","b76b6667":"code","61d4b9dc":"code","fd13f29d":"code","997eb86f":"code","de1f2b06":"code","8f698e7a":"code","24afd8c2":"code","3e0d6e14":"code","fee587a6":"code","aef481a0":"code","390d47eb":"code","a9a0ea44":"code","692b6027":"code","2cb28049":"code","6d54315b":"code","e0b809bf":"code","d32d7a39":"code","ad370623":"code","5d5c6348":"code","c5469f0d":"code","37731970":"code","20595a67":"code","8eb97f6c":"code","20d1666b":"code","6dd17ecc":"code","f07a9776":"code","504347e8":"code","89ae97d9":"code","a4cabbde":"code","71dde5e2":"code","40c069f4":"code","44547823":"code","33ecee66":"code","ae7edd9d":"code","473e208b":"code","04105830":"code","eef5a5d1":"code","05caf9f9":"code","6a3f509b":"code","68164872":"code","ff927c87":"code","5028c658":"code","fda81e4e":"code","fc67c158":"code","3a954609":"code","36ae9726":"code","7e1d2003":"markdown","e315e06b":"markdown","10c9132c":"markdown","9cb534c3":"markdown","bf6bae4b":"markdown","5ea8638b":"markdown","34a3b453":"markdown","2ca3c663":"markdown","02358cf6":"markdown","6a0aaa57":"markdown","6c87c600":"markdown","52a7150a":"markdown","2b8f0e09":"markdown","45e0bb51":"markdown","a9009975":"markdown","ef2b8e5c":"markdown","31df560b":"markdown","21171aed":"markdown","968da3e4":"markdown","bc2c3bdf":"markdown","92c5348a":"markdown","58bab368":"markdown","53e9e289":"markdown","7e0c3d45":"markdown","0030bbf1":"markdown","6584a78d":"markdown","34c359a0":"markdown","5b4185aa":"markdown","3784425f":"markdown","0019041e":"markdown","dfda548d":"markdown","9672ff1b":"markdown","f088dcaf":"markdown","9f3f7d5b":"markdown","099692a5":"markdown","cb21d767":"markdown","027d57e7":"markdown","dcc99dfe":"markdown","1992fa8f":"markdown","460f6f27":"markdown","498b71a4":"markdown","b4710c28":"markdown","cf3b6f72":"markdown","550d20be":"markdown","b9a21e28":"markdown","961e07c6":"markdown","891e9dd9":"markdown","13052ef3":"markdown","e5c0bc1f":"markdown","b67d9695":"markdown","248b74ce":"markdown","1b8060f1":"markdown","aef42217":"markdown","b9650520":"markdown","f078e120":"markdown","798dcb40":"markdown","d9012eb0":"markdown","c0ad8b17":"markdown","94eec0ae":"markdown","5c7894c3":"markdown","1f4bb4dd":"markdown","0e96daaa":"markdown","85703abb":"markdown","b231f106":"markdown","f098780a":"markdown","0d14b541":"markdown","5a831ddd":"markdown","7cdb94b7":"markdown","1db259d4":"markdown","33b238e3":"markdown","42c550e9":"markdown","389e3ce6":"markdown","2f03beb7":"markdown","019060c7":"markdown"},"source":{"a50bd17b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","bd38508f":"import numpy as np \nimport pandas as pd \n%matplotlib inline\nimport matplotlib.pyplot as plt  \nimport seaborn as sns\ncolor = sns.color_palette()\nsns.set_style('darkgrid')\n\nfrom scipy import stats\nfrom scipy.stats import norm, skew #for some statistics\n\nimport warnings\ndef ignore_warn(*args, **kwargs):\n    pass\nwarnings.warn = ignore_warn #ignore annoying warning (from sklearn and seaborn)","b37c7d6c":"#\u8a13\u7df4\u30c7\u30fc\u30bf\ndf_train = pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv\")\n#\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\ndf_test = pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv\")\n\n#df_train\u3068df_test\u3092\u884c\u65b9\u5411\u306b\u7d50\u5408\u3057\u3066\u3001\u7d50\u5408\u7b87\u6240\u3092len_train\u3067\u4fdd\u6301\nlen_train=df_train.shape[0]\n#\u5168\u30c7\u30fc\u30bf\ndf_all=pd.concat([df_train,df_test], sort=False)\n\nprint(df_train.shape)\nprint(df_test.shape)\nprint(df_all.shape)","46afbb30":"# \u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u3068\u306e\u76f8\u95a2\u95a2\u4fc2\ncorrelations = df_train.corr()['SalePrice']","1390cdbb":"var = \"MSSubClass\"\n\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['misTotal', 'Percent'])\nmissing_data.loc[[var]]\n","f714f7ae":"#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()","3b7dc686":"#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()","9a38af08":"#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=4, aspect=2)\ng.set_xticklabels(rotation=45)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014","0b2340fb":"#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(10, 5))\nfig = sns.boxplot(x=var, y=\"SalePrice\", data=data)\nfig.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014","6a409a86":"#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(10,5))\nplt.title(\"{} & Median Price\".format(var))\nsns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')","b115f630":"#8\n#\u6b20\u6e2c\u51e6\u7406\uff1a\u00d7\n#\u306f\u305a\u308c\u5024\u51e6\u7406\uff1a\u00d7\n#\u6570\u5024\u30c7\u30fc\u30bf\u6a19\u6e96\u5316\u51e6\u7406\uff1a\u00d7\n#\u6587\u5b57\u5217\u306e\u6570\u5024\u5316\uff08\u9806\u5e8f\u5909\u6570\uff09\uff1a\u25ef\n\n#int64\u3092str\u306b\u5909\u66f4\ndf_all['MSSubClass'] = df_all['MSSubClass'].apply(str)","ea0ac0e0":"#1\nvar = \"Functional\"\n\n#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014","50eaa35e":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014","ef9fc9ed":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","22009696":"#5#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=4, aspect=2)\ng.set_xticklabels(rotation=45)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014\n","6e8dbd8b":"#6\n#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(10, 5))\nfig = sns.boxplot(x=var, y=\"SalePrice\", data=data)\nfig.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014","9551bfe4":"#7\n#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(10,5))\nplt.title(\"{} & Median Price\".format(var))\nsns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')\n#\u2014\u2014\u2014","bdba02b9":"#8\n#\u6b20\u6e2c\u51e6\u7406\uff1a\u3007\n#\u306f\u305a\u308c\u5024\u51e6\u7406\uff1a\n#\u6570\u5024\u30c7\u30fc\u30bf\u6a19\u6e96\u5316\u51e6\u7406\uff1a\n#\u6587\u5b57\u5217\u306e\u6570\u5024\u5316\uff08\u9806\u5e8f\u5909\u6570\uff09\uff1a\n#\u5bfe\u6570\u5909\u63db\u6a19\u6e96\u5316\uff08\u6570\u5024\u5909\u6570\uff09\uff1a","e51da80e":"#1\nvar = \"SaleType\"\n\n#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014\n","2c1c272c":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014","71cb83ed":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","97b158a4":"#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=4, aspect=2)\ng.set_xticklabels(rotation=45)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014","88733310":"#6\n#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(10, 5))\nfig = sns.boxplot(x=var, y=\"SalePrice\", data=data)\nfig.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014","57f6a914":"#7\n#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(10,5))\nplt.title(\"{} & Median Price\".format(var))\nsns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')\n#\u2014\u2014\u2014","a78bf6c8":"#1\nvar = \"SaleCondition\"\n\n#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014\n","b94cfb35":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014\n","efa5c7f0":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","7e070289":"#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=4, aspect=2)\ng.set_xticklabels(rotation=45)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014","98a2f871":"#6\n#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(10, 5))\nfig = sns.boxplot(x=var, y=\"SalePrice\", data=data)\nfig.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014","427ae57d":"#7\n#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(10,5))\nplt.title(\"{} & Median Price\".format(var))\nsns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')\n#\u2014\u2014\u2014","b0063f5a":"#1\nvar = \"MoSold\"\n\n#\u76f8\u95a2\u4fc2\u6570\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u8a13\u7df4\u30c7\u30fc\u30bf\uff09\uff1a\u6570\u5024\u30bf\u30a4\u30d7\u306e\u307f\nprint(\"SalePrice\u3068\u306e\u76f8\u95a2\u95a2\u4fc2\u4fc2\u6570\uff1a{:.4f}\".format(correlations[var]))\n#-------","f7ee0f69":"#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014","413d6a05":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014\n","31debc94":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","4e768a83":"#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=4, aspect=2)\ng.set_xticklabels(rotation=45)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014","4b7d7bcc":"#6\n#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(10, 5))\nfig = sns.boxplot(x=var, y=\"SalePrice\", data=data)\nfig.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014\n","9a69f658":"#7\n#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(10,5))\nplt.title(\"{} & Median Price\".format(var))\nsns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')\n#\u2014\u2014\u2014","a1fbfbd3":"#1\nvar = \"YrSold\"\n\n#\u76f8\u95a2\u4fc2\u6570\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u8a13\u7df4\u30c7\u30fc\u30bf\uff09\uff1a\u6570\u5024\u30bf\u30a4\u30d7\u306e\u307f\nprint(\"SalePrice\u3068\u306e\u76f8\u95a2\u95a2\u4fc2\u4fc2\u6570\uff1a{:.4f}\".format(correlations[var]))\n#-------","31a7acbc":"#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014","6104bfc1":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014\n","5cd54fc2":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","c346b6a2":"#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=4, aspect=2)\ng.set_xticklabels(rotation=45)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014","6f31f8ba":"#6\n#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(10, 5))\nfig = sns.boxplot(x=var, y=\"SalePrice\", data=data)\nfig.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014","070394e9":"#7\n#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(10,5))\nplt.title(\"{} & Median Price\".format(var))\nsns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')\n#\u2014\u2014\u2014","11c5249b":"#1\nvar = \"TotRmsAbvGrd\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#\u76f8\u95a2\u4fc2\u6570\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u8a13\u7df4\u30c7\u30fc\u30bf\uff09\uff1a\u6570\u5024\u30bf\u30a4\u30d7\u306e\u307f\nprint(\"SalePrice\u3068\u306e\u76f8\u95a2\u95a2\u4fc2\u4fc2\u6570\uff1a{:.4f}\".format(correlations[var]))\n#-------","bbda17c2":"#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014","a76594ee":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014\n","5a26c44e":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","35a2e6d1":"#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=4, aspect=2)\ng.set_xticklabels(rotation=45)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014","047d1ff4":"#6\n#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(10, 5))\nfig = sns.boxplot(x=var, y=\"SalePrice\", data=data)\nfig.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014","d79b73ad":"#7\n#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(10,5))\nplt.title(\"{} & Median Price\".format(var))\nsns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')\n#\u2014\u2014\u2014","9d25e5ef":"#1\nvar = \"1stFlrSF\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#\u76f8\u95a2\u4fc2\u6570\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u8a13\u7df4\u30c7\u30fc\u30bf\uff09\uff1a\u6570\u5024\u30bf\u30a4\u30d7\u306e\u307f\nprint(\"SalePrice\u3068\u306e\u76f8\u95a2\u95a2\u4fc2\u4fc2\u6570\uff1a{:.4f}\".format(correlations[var]))\n#-------","51844753":"#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014\n","6a5e9565":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014\n","6c26be28":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014\n","cf16f9bb":"#5\uff1a\u6570\u5024\u5909\u6570\u306e\u307f\n# \u4fa1\u683c\u3068\u306e\u6563\u5e03\u56f3\nplt.figure(figsize=(8,4))\nsns.scatterplot(df_train[var],df_train['SalePrice'])\n#\u2014\u2014\u2014\n","dcd03f7f":"#6\uff1a\u6570\u5024\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d\nplt.figure(figsize=(8,4))\nsns.distplot(df_all[var])\nplt.show()","5f64fbc4":"#1\nvar = \"2ndFlrSF\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#\u76f8\u95a2\u4fc2\u6570\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u8a13\u7df4\u30c7\u30fc\u30bf\uff09\uff1a\u6570\u5024\u30bf\u30a4\u30d7\u306e\u307f\nprint(\"SalePrice\u3068\u306e\u76f8\u95a2\u95a2\u4fc2\u4fc2\u6570\uff1a{:.4f}\".format(correlations[var]))\n#-------","d165389b":"#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014","b74158d7":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014\n","555fc38c":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","9b3eecc7":"#5\uff1a\u6570\u5024\u5909\u6570\u306e\u307f\n# \u4fa1\u683c\u3068\u306e\u6563\u5e03\u56f3\nplt.figure(figsize=(8,4))\nsns.scatterplot(df_train[var],df_train['SalePrice'])\n#\u2014\u2014\u2014","07ae9c7d":"#6\uff1a\u6570\u5024\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d\nplt.figure(figsize=(8,4))\nsns.distplot(df_all[var])\nplt.show()","0b41ca6b":"#1\nvar = \"LowQualFinSF\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#\u76f8\u95a2\u4fc2\u6570\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u8a13\u7df4\u30c7\u30fc\u30bf\uff09\uff1a\u6570\u5024\u30bf\u30a4\u30d7\u306e\u307f\nprint(\"SalePrice\u3068\u306e\u76f8\u95a2\u95a2\u4fc2\u4fc2\u6570\uff1a{:.4f}\".format(correlations[var]))\n#-------","94388bcd":"#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014","867a7690":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014","4bcb1b20":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","6db6c0c6":"#5\uff1a\u6570\u5024\u5909\u6570\u306e\u307f\n# \u4fa1\u683c\u3068\u306e\u6563\u5e03\u56f3\nplt.figure(figsize=(8,4))\nsns.scatterplot(df_train[var],df_train['SalePrice'])\n#\u2014\u2014\u2014","b09c9284":"#6\uff1a\u6570\u5024\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d\nplt.figure(figsize=(8,4))\nsns.distplot(df_all[var])\nplt.show()","d9a5ade8":"#1\nvar = \"GrLivArea\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#\u76f8\u95a2\u4fc2\u6570\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u8a13\u7df4\u30c7\u30fc\u30bf\uff09\uff1a\u6570\u5024\u30bf\u30a4\u30d7\u306e\u307f\nprint(\"SalePrice\u3068\u306e\u76f8\u95a2\u95a2\u4fc2\u4fc2\u6570\uff1a{:.4f}\".format(correlations[var]))\n#-------","7e1d910d":"#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014","05861a5c":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014","4b91179f":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","fd685938":"#5\uff1a\u6570\u5024\u5909\u6570\u306e\u307f\n# \u4fa1\u683c\u3068\u306e\u6563\u5e03\u56f3\nplt.figure(figsize=(8,4))\nsns.scatterplot(df_train[var],df_train['SalePrice'])\n#\u2014\u2014\u2014","ec68078c":"#6\uff1a\u6570\u5024\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d\nplt.figure(figsize=(8,4))\nsns.distplot(df_all[var])\nplt.show()","bf4e760c":"#1\nvar = \"Neighborhood\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014","7b167b0b":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014","ace34b84":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","d37d4a12":"#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=5, aspect=2)\ng.set_xticklabels(rotation=90)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014","12291b05":"#6\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(10, 5))\ng = sns.boxplot(x=var, y=\"SalePrice\", data=data)\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\ng.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014\n","d52850b8":"#7\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(10,5))\ng = sns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\nplt.title(\"{} & Median Price\".format(var))\n#\u2014\u2014\u2014","a827f791":"#1\nvar = \"Condition1\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014","127c9a93":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014","59968909":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","e3e788a3":"#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=4, aspect=2)\ng.set_xticklabels(rotation=90)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014","e999d2a2":"#6\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(10, 5))\ng = sns.boxplot(x=var, y=\"SalePrice\", data=data)\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\ng.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014","9ae4ebee":"#7\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(10,5))\ng = sns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\nplt.title(\"{} & Median Price\".format(var))\n#\u2014\u2014\u2014","f4b8fd66":"#1\nvar = \"Condition2\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014","c7662a30":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014","536ecce1":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","58bf0725":"\n#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=4, aspect=2)\ng.set_xticklabels(rotation=90)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014","2f8e8222":"#1\nvar = \"MSZoning\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014","3d1ae894":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014","47a473fe":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","8e1d7292":"#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=4, aspect=2)\ng.set_xticklabels(rotation=90)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014","cd1d6e01":"#6\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(10, 5))\ng = sns.boxplot(x=var, y=\"SalePrice\", data=data)\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\ng.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014","093f5b30":"#7\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(10,5))\ng = sns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\nplt.title(\"{} & Median Price\".format(var))\n#\u2014\u2014\u2014","e01c766f":"#1\nvar = \"Street\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014","d3e7299e":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014","8dc1c5b9":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","ad930b8b":"#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=4, aspect=2)\ng.set_xticklabels(rotation=90)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014","47cf6d38":"#6\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(10, 5))\ng = sns.boxplot(x=var, y=\"SalePrice\", data=data)\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\ng.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014","efca4832":"#7\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(10,5))\ng = sns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\nplt.title(\"{} & Median Price\".format(var))\n#\u2014\u2014\u2014","4badef28":"#1\nvar = \"Alley\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014","91ba0f1d":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014","66e97d49":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","7ff86c08":"#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=4, aspect=2)\ng.set_xticklabels(rotation=90)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014","af46fce9":"#6\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(10, 5))\ng = sns.boxplot(x=var, y=\"SalePrice\", data=data)\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\ng.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014","9dc6dd13":"#7\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(10,5))\ng = sns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\nplt.title(\"{} & Median Price\".format(var))\n#\u2014\u2014\u2014","240475c1":"#1\nvar = \"LandContour\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014","a4ef79f2":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014","2ab9c599":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","fa05517b":"#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=4, aspect=2)\ng.set_xticklabels(rotation=90)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014","625fdf26":"#6\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(10, 5))\ng = sns.boxplot(x=var, y=\"SalePrice\", data=data)\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\ng.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014","0e01b458":"#7\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(10,5))\ng = sns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\nplt.title(\"{} & Median Price\".format(var))\n#\u2014\u2014\u2014","2b14934b":"#1\nvar = \"LotConfig\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014","22745db6":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014","761f1d37":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","dee50a73":"#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=4, aspect=2)\ng.set_xticklabels(rotation=90)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014","3cc464ee":"#6\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(10, 5))\ng = sns.boxplot(x=var, y=\"SalePrice\", data=data)\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\ng.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014","7a815b1a":"#7\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(10,5))\ng = sns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\nplt.title(\"{} & Median Price\".format(var))\n#\u2014\u2014\u2014","3e31a20b":"#1\nvar = \"LotShape\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014","8ed919a2":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014","3c3bc192":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","214d6d93":"#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=4, aspect=2)\ng.set_xticklabels(rotation=90)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014","081ac8b0":"#6\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(10, 5))\ng = sns.boxplot(x=var, y=\"SalePrice\", data=data)\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\ng.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014","c8e9445d":"#7\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(10,5))\ng = sns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\nplt.title(\"{} & Median Price\".format(var))\n#\u2014\u2014\u2014","60ef067e":"#1\nvar = \"LandSlope\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014","71d040fc":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014","f6f2a098":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","79d75478":"#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=4, aspect=2)\ng.set_xticklabels(rotation=90)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014","25c1be8e":"#6\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(10, 5))\ng = sns.boxplot(x=var, y=\"SalePrice\", data=data)\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\ng.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014","dff3adaf":"#7\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(10,5))\ng = sns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\nplt.title(\"{} & Median Price\".format(var))\n#\u2014\u2014\u2014","9ff06620":"#1\nvar = \"LotFrontage\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#\u76f8\u95a2\u4fc2\u6570\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u8a13\u7df4\u30c7\u30fc\u30bf\uff09\uff1a\u6570\u5024\u30bf\u30a4\u30d7\u306e\u307f\nprint(\"SalePrice\u3068\u306e\u76f8\u95a2\u95a2\u4fc2\u4fc2\u6570\uff1a{:.4f}\".format(correlations[var]))\n#-------","c08645fc":"#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014","3f7255a0":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014","b4be1246":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","5d715766":"#5\uff1a\u6570\u5024\u5909\u6570\u306e\u307f\n# \u4fa1\u683c\u3068\u306e\u6563\u5e03\u56f3\nplt.figure(figsize=(8,4))\nsns.scatterplot(df_train[var],df_train['SalePrice'])\n#\u2014\u2014\u2014","55d2592f":"#1\nvar = \"LotArea\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#\u76f8\u95a2\u4fc2\u6570\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u8a13\u7df4\u30c7\u30fc\u30bf\uff09\uff1a\u6570\u5024\u30bf\u30a4\u30d7\u306e\u307f\nprint(\"SalePrice\u3068\u306e\u76f8\u95a2\u95a2\u4fc2\u4fc2\u6570\uff1a{:.4f}\".format(correlations[var]))\n#-------","30204aff":"#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014","be320812":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014\n","08389675":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","1530f285":"#5\uff1a\u6570\u5024\u5909\u6570\u306e\u307f\n\n# \u4fa1\u683c\u3068\u306e\u6563\u5e03\u56f3\nplt.figure(figsize=(8,4))\nsns.scatterplot(df_train[var] ,df_train['SalePrice'])\n#sns.scatterplot(df_train_temp ,df_train['SalePrice'])\n#\u2014\u2014\u2014","575213ed":"#LotArea > 100000 \u3092\u9664\u5916\u3057\u3066\u518d\u63cf\u753b\ncol = df_train[var]\ndf_train_temp = col[np.abs(col) < 100000]\n\n# \u4fa1\u683c\u3068\u306e\u6563\u5e03\u56f3\nplt.figure(figsize=(8,4))\nsns.scatterplot(df_train_temp ,df_train['SalePrice'])\n#\u2014\u2014\u2014","2386c5d5":"# LotArea > 100000 \u3092\u9664\u5916\u3057\u305f\u30c7\u30fc\u30bf\u3067\u76f8\u95a2\u4fc2\u6570\u7b97\u51fa\ndf_train['SalePrice'].corr(df_train_temp)","ce44d8cd":"#6\uff1a\u6570\u5024\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d\nplt.figure(figsize=(8,4))\nsns.distplot(df_all[var])\n#sns.distplot(df_all[var])\nplt.show()","89ddcb6b":"# LotArea > 100000 \u3092\u9664\u5916\u3057\u305f\u30c7\u30fc\u30bf\u3067\u5206\u5e03\u56f3\u518d\u63cf\u753b\ncol = df_all[var]\ndf_all_temp = col[np.abs(col) < 100000]\n\n#6\uff1a\u6570\u5024\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d\nplt.figure(figsize=(8,4))\nsns.distplot(df_all_temp)\nplt.show()\n","eb3a7cf2":"#1\nvar = \"BldgType\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014","6fecd24e":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014","193e00f3":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","7b59086b":"#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=4, aspect=2)\ng.set_xticklabels(rotation=90)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014","25b41607":"#6\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(10, 5))\ng = sns.boxplot(x=var, y=\"SalePrice\", data=data)\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\ng.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014","95c43fb3":"#7\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(10,5))\ng = sns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\nplt.title(\"{} & Median Price\".format(var))\n#\u2014\u2014\u2014","50093b4a":"#1\nvar = \"HouseStyle\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014\n","a0a12491":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014\n","a0a3ec17":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","70d1fc0a":"#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=4, aspect=2)\ng.set_xticklabels(rotation=90)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014","5e423b38":"#6\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(10, 5))\ng = sns.boxplot(x=var, y=\"SalePrice\", data=data)\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\ng.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014","5bf1bc87":"#7\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(10,5))\ng = sns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\nplt.title(\"{} & Median Price\".format(var))\n#\u2014\u2014\u2014\n","d4da9152":"#1\nvar = \"RoofStyle\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014\n","2a2eba82":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014","8d856e29":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","0cf652c9":"#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=4, aspect=2)\ng.set_xticklabels(rotation=90)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014","dd624b22":"#6\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(10, 5))\ng = sns.boxplot(x=var, y=\"SalePrice\", data=data)\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\ng.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014\n","bb26ef12":"#7\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(10,5))\ng = sns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\nplt.title(\"{} & Median Price\".format(var))\n#\u2014\u2014\u2014","3637f3a4":"#1\nvar = \"RoofMatl\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014\n","f52b789c":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014\n","8cf28cba":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","1899073e":"#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=4, aspect=2)\ng.set_xticklabels(rotation=90)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014","a9e4f214":"#6\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(10, 5))\ng = sns.boxplot(x=var, y=\"SalePrice\", data=data)\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\ng.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014","d3386786":"#7\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(10,5))\ng = sns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\nplt.title(\"{} & Median Price\".format(var))\n#\u2014\u2014\u2014","681ea426":"#1\nvar = \"Exterior1st\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014\n","077839e4":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014","eb5f15ce":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","c64cbf25":"#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=4, aspect=2)\ng.set_xticklabels(rotation=45)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014","58cbe3ea":"#6\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(10, 5))\ng = sns.boxplot(x=var, y=\"SalePrice\", data=data)\ng.set_xticklabels(g.get_xticklabels(), rotation=45)\ng.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014","c9e420ad":"#7\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(10,5))\ng = sns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')\ng.set_xticklabels(g.get_xticklabels(), rotation=45)\nplt.title(\"{} & Median Price\".format(var))\n#\u2014\u2014\u2014","d4092d0e":"#1\nvar = \"Exterior2nd\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014","486f44d9":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014\n","d7d6eb58":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","c83c396c":"#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=4, aspect=2)\ng.set_xticklabels(rotation=45)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014","7063e624":"#6\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(10, 5))\ng = sns.boxplot(x=var, y=\"SalePrice\", data=data)\ng.set_xticklabels(g.get_xticklabels(), rotation=45)\ng.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014","c1ebf3ea":"#7\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(10,5))\ng = sns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')\ng.set_xticklabels(g.get_xticklabels(), rotation=45)\nplt.title(\"{} & Median Price\".format(var))\n#\u2014\u2014\u2014","09bf22d8":"#1\nvar = \"MasVnrType\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014\n","04fa1366":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014","ccb26315":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","008ae784":"#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=4, aspect=2)\ng.set_xticklabels(rotation=45)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014\n","a3d1711e":"#6\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(10, 5))\ng = sns.boxplot(x=var, y=\"SalePrice\", data=data)\ng.set_xticklabels(g.get_xticklabels(), rotation=45)\ng.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014","d0b976b4":"#7\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(10,5))\ng = sns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')\ng.set_xticklabels(g.get_xticklabels(), rotation=45)\nplt.title(\"{} & Median Price\".format(var))\n#\u2014\u2014\u2014","00e9469e":"#1\nvar = \"Foundation\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014\n","889a8e2e":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014","60ec9e33":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","74fadbc1":"#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=4, aspect=2)\ng.set_xticklabels(rotation=45)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014","fc19269d":"#6\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(10, 5))\ng = sns.boxplot(x=var, y=\"SalePrice\", data=data)\ng.set_xticklabels(g.get_xticklabels(), rotation=45)\ng.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014","1b07536b":"#7\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(10,5))\ng = sns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')\ng.set_xticklabels(g.get_xticklabels(), rotation=45)\nplt.title(\"{} & Median Price\".format(var))\n#\u2014\u2014\u2014","b76b6667":"#1\nvar = \"ExterQual\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014\n","61d4b9dc":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014","fd13f29d":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","997eb86f":"#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=4, aspect=2)\ng.set_xticklabels(rotation=45)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014","de1f2b06":"#6\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(10, 5))\ng = sns.boxplot(x=var, y=\"SalePrice\", data=data)\ng.set_xticklabels(g.get_xticklabels(), rotation=45)\ng.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014","8f698e7a":"#7\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(10,5))\ng = sns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')\ng.set_xticklabels(g.get_xticklabels(), rotation=45)\nplt.title(\"{} & Median Price\".format(var))\n#\u2014\u2014\u2014","24afd8c2":"#1\nvar = \"ExterCond\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014\n","3e0d6e14":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014","fee587a6":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","aef481a0":"#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=4, aspect=2)\ng.set_xticklabels(rotation=45)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014","390d47eb":"#6\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(10, 5))\ng = sns.boxplot(x=var, y=\"SalePrice\", data=data)\ng.set_xticklabels(g.get_xticklabels(), rotation=45)\ng.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014","a9a0ea44":"#7\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(10,5))\ng = sns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')\ng.set_xticklabels(g.get_xticklabels(), rotation=45)\nplt.title(\"{} & Median Price\".format(var))\n#\u2014\u2014\u2014\n","692b6027":"#1\nvar = \"OverallQual\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014\n","2cb28049":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014","6d54315b":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","e0b809bf":"#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=4, aspect=2)\ng.set_xticklabels(rotation=45)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014","d32d7a39":"#6\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(10, 5))\ng = sns.boxplot(x=var, y=\"SalePrice\", data=data)\ng.set_xticklabels(g.get_xticklabels(), rotation=45)\ng.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014","ad370623":"#7\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(10,5))\ng = sns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')\ng.set_xticklabels(g.get_xticklabels(), rotation=45)\nplt.title(\"{} & Median Price\".format(var))\n#\u2014\u2014\u2014","5d5c6348":"#1\nvar = \"OverallCond\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014\n","c5469f0d":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014\n","37731970":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","20595a67":"#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=4, aspect=2)\ng.set_xticklabels(rotation=45)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014","8eb97f6c":"#6\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(10, 5))\ng = sns.boxplot(x=var, y=\"SalePrice\", data=data)\ng.set_xticklabels(g.get_xticklabels(), rotation=45)\ng.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014","20d1666b":"#7\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(10,5))\ng = sns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')\ng.set_xticklabels(g.get_xticklabels(), rotation=45)\nplt.title(\"{} & Median Price\".format(var))\n#\u2014\u2014\u2014","6dd17ecc":"#1\nvar = \"YearBuilt\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#\u76f8\u95a2\u4fc2\u6570\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u8a13\u7df4\u30c7\u30fc\u30bf\uff09\uff1a\u6570\u5024\u30bf\u30a4\u30d7\u306e\u307f\nprint(\"SalePrice\u3068\u306e\u76f8\u95a2\u95a2\u4fc2\u4fc2\u6570\uff1a{:.4f}\".format(correlations[var]))\n#-------","f07a9776":"#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014","504347e8":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014","89ae97d9":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","a4cabbde":"#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=5.5, aspect=2)\ng.set_xticklabels(rotation=90)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014","71dde5e2":"#5\uff1a\u6570\u5024\u5909\u6570\u306e\u307f\n# \u4fa1\u683c\u3068\u306e\u6563\u5e03\u56f3\nplt.figure(figsize=(8,4))\nsns.scatterplot(df_train[var],df_train['SalePrice'])\n#\u2014\u2014\u2014","40c069f4":"#6\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(12, 5))\ng = sns.boxplot(x=var, y=\"SalePrice\", data=data)\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\ng.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014","44547823":"#7\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(12,5))\ng = sns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\nplt.title(\"{} & Median Price\".format(var))\n#\u2014\u2014\u2014\n","33ecee66":"#1\nvar = \"YearRemodAdd\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#\u76f8\u95a2\u4fc2\u6570\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u8a13\u7df4\u30c7\u30fc\u30bf\uff09\uff1a\u6570\u5024\u30bf\u30a4\u30d7\u306e\u307f\nprint(\"SalePrice\u3068\u306e\u76f8\u95a2\u95a2\u4fc2\u4fc2\u6570\uff1a{:.4f}\".format(correlations[var]))\n#-------","ae7edd9d":"#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014","473e208b":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014","04105830":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","eef5a5d1":"#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=5.5, aspect=2)\ng.set_xticklabels(rotation=90)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014","05caf9f9":"#6\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(12, 5))\ng = sns.boxplot(x=var, y=\"SalePrice\", data=data)\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\ng.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014","6a3f509b":"#7\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(12,5))\ng = sns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\nplt.title(\"{} & Median Price\".format(var))\n#\u2014\u2014\u2014","68164872":"#1\nvar = \"MasVnrArea\"\n\n#\u30c7\u30fc\u30bf\u578b\u78ba\u8a8d\nprint(df_all[var])\n\n#\u76f8\u95a2\u4fc2\u6570\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u8a13\u7df4\u30c7\u30fc\u30bf\uff09\uff1a\u6570\u5024\u30bf\u30a4\u30d7\u306e\u307f\nprint(\"SalePrice\u3068\u306e\u76f8\u95a2\u95a2\u4fc2\u4fc2\u6570\uff1a{:.4f}\".format(correlations[var]))\n#-------","ff927c87":"#2\n#\u6b20\u6e2c\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ntotal = df_all.isnull().sum().sort_values(ascending=False)\npercent = (df_all.isnull().sum()\/df_all.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.loc[[var]]\n#\u2014\u2014\u2014","5028c658":"#3\n#\u7d71\u8a08\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].describe()\n#\u2014\u2014\u2014\n","fda81e4e":"#4\n#\u30c7\u30fc\u30bf\u6570\u91cf\u78ba\u8a8d\uff08\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf\uff09\ndf_all[var].value_counts()\n#\u2014\u2014\u2014","fc67c158":"#5\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n# \u30c7\u30fc\u30bf\u5206\u5e03\u78ba\u8a8d(\u5bfe\u8c61\uff1a\u5168\u30c7\u30fc\u30bf)\nsns.set()\ng = sns.factorplot(x = var, kind='count', data = df_all, height=6, aspect=2)\ng.set_xticklabels(rotation=90)\nplt.title(\"{} count\".format(var))\n#\u2014\u2014\u2014\n","3a954609":"#6\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u7bb1\u3072\u3052\uff08\u56db\u5206\u4f4d\u30c7\u30fc\u30bf\uff09\u78ba\u8a8d\ndata = pd.concat([df_train['SalePrice'], df_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(10, 5))\ng = sns.boxplot(x=var, y=\"SalePrice\", data=data)\ng.set_xticklabels(g.get_xticklabels(), rotation=45)\ng.axis(ymin=0, ymax=800000);\n#\u2014\u2014\u2014","36ae9726":"#7\uff1a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u307f\n#\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u306e\u4e2d\u592e\u5024\u3068\u306e\u95a2\u4fc2\u78ba\u8a8d\nGrouped = df_train.groupby(var, as_index=True).median()\n\n# \u4fa1\u683c\u3068\u306e\u30b0\u30e9\u30d5\nplt.figure(figsize=(10,5))\ng = sns.barplot(x=Grouped.index, y='SalePrice', data=Grouped, palette = 'viridis')\ng.set_xticklabels(g.get_xticklabels(), rotation=45)\nplt.title(\"{} & Median Price\".format(var))\n#\u2014\u2014\u2014","7e1d2003":"\u5efa\u7269\u8a2d\u5099\n\n    \uff1c\u30ab\u30c6\u30b4\u30ea\u5909\u6570\uff1e    \n\n    39.Heating\uff1a\u6696\u623f\u30bf\u30a4\u30d7\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570\n\n    41.CentralAir\uff1a\u30bb\u30f3\u30c8\u30e9\u30eb\u30a8\u30a2\u30b3\u30f3\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570\n\n    53.KitchenQual\uff1a\u30ad\u30c3\u30c1\u30f3\u54c1\u8cea\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570\n\n    74.MiscFeature\uff1a\u4ed6\u9805\u76ee\u306b\u542b\u307e\u308c\u306a\u3044\u8a2d\u5099\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570\n\n\n    40.HeatingQC\uff1a\u6696\u623f\u54c1\u8cea\uff06\u72b6\u614b\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u9806\u5e8f\u5909\u6570\n\n    57.FireplaceQu\uff1a\u6696\u7089\u306e\u54c1\u8cea\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u9806\u5e8f\u5909\u6570\uff08\uff2e\uff21\uff1a\uff10\uff09\n\n    \uff1c\u6570\u5024\u5909\u6570\uff1e\n\n    47.BsmtFullBath\uff1a\u5730\u4e0b\u306e\u6d74\u5ba4\u3000\n\n    48.BsmtHalfBath\uff1a\u5730\u4e0b\u306e\u7c21\u6613\u30d0\u30b9\u3000\n\n    49.FullBath\uff1a\u5730\u4e0a\u306e\u6d74\u5ba4\u3000\n\n    50.HalfBath\uff1a\u5730\u4e0a\u306e\u7c21\u6613\u30d0\u30b9\u3000\n\n    51.Bedroom\uff1a\u5730\u4e0a\u306e\u5bdd\u5ba4\uff08\u9664\u304f\uff1a\u5730\u4e0b\uff09\u3000\n\n    52.Kitchen\uff1a\u5730\u4e0a\u306e\u30ad\u30c3\u30c1\u30f3\u3000\n\n    56.Fireplaces\uff1a\u6696\u7089\u6570\u3000\n\n    75.MiscVal\uff1a\u305d\u306e\u4ed6\u8a2d\u5099\u306e\u6570\u5024\u3000\n","e315e06b":"\u5916\u56de\u308a\n\n    \uff1c\u30ab\u30c6\u30b4\u30ea\u5909\u6570\uff1e\n\n    65.PavedDrive\uff1a\u8217\u88c5\u79c1\u9053\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570\n\n    73.Fence\uff1a\u30d5\u30a7\u30f3\u30b9\u306e\u54c1\u8cea\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570\n\n    \uff1c\u6570\u5024\u5909\u6570\uff1e\n\n    66.WoodDeckSF\uff1a\u30a6\u30c3\u30c9\u30c7\u30c3\u30ad\u306e\u5e83\u3055\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000\n\n    67.OpenPorchSF\uff1a\u30aa\u30fc\u30d7\u30f3\u30dd\u30fc\u30c1\u306e\u5e83\u3055\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000\n    \n    68.EnclosedPorch\uff1a\u30af\u30ed\u30fc\u30ba\u30c8\u30dd\u30fc\u30c1\u306e\u5e83\u3055\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000\n\n    69.3SsnPorch\uff1a3\u30b7\u30fc\u30ba\u30f3\u30dd\u30fc\u30c1\u306e\u5e83\u3055\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000\n\n    70.ScreenPorch\uff1a\u30b9\u30af\u30ea\u30fc\u30f3\u30dd\u30fc\u30c1\u306e\u5e83\u3055\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000","10c9132c":"\u5efa\u7269\n\n    \uff1c\u30ab\u30c6\u30b4\u30ea\u5909\u6570\uff1e\n\n    15.BldgType\uff1a\u4f4f\u5c45\u306e\u30bf\u30a4\u30d7\u3000\u540d\u7fa9\u5909\u6570\n\n    16.HouseStyle\uff1a\u5efa\u7269\u30b9\u30bf\u30a4\u30eb\u3000\u540d\u7fa9\u5909\u6570\n    \n    21.RoofStyle\uff1a\u5c4b\u6839\u306e\u30bf\u30a4\u30d7\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570\n\n    22.RoofMatl\uff1a\u5c4b\u6839\u7d20\u6750\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570\n\n    23.Exterior1st\uff1a\u5916\u88c5\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570\n\n    24.Exterior2nd\uff1a\u5bb6\u306e\u5916\u88c5\uff08\u8907\u6570\u56de\u7b54\u7528\uff09\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570\n\n    25.MasVnrType\uff1a\u77f3\u6750\u7a81\u304d\u677f\u30bf\u30a4\u30d7\u3000\u5909\u6570\u30ab\u30c6\u30b4\u30ea\u3000\u540d\u7fa9\u5909\u6570\n\n    29.Foundation\uff1a\u5efa\u7269\u57fa\u790e\u306e\u7a2e\u985e\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570\n\n    27.ExterQual\uff1a\u5916\u88c5\u7d20\u6750\u54c1\u8cea\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u9806\u5e8f\u5909\u6570\n\n    28.ExterCond\uff1a\u5916\u88c5\u7d20\u6750\u72b6\u614b\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u9806\u5e8f\u5909\u6570\n\n    17.OverallQual\uff1a\u5168\u4f53\u306e\u54c1\u8cea\u8a55\u4fa1\u3000\u9806\u5e8f\u5909\u6570\n\n    18.OverallCond\uff1a\u5168\u4f53\u306e\u72b6\u614b\u8a55\u4fa1\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u9806\u5e8f\u5909\u6570\n\n    \uff1c\u6570\u5024\u5909\u6570\uff1e\n\n    19.YearBuilt\uff1a\u5efa\u7bc9\u65e5\n\n    20.YearRemodAdd\uff1a\u6539\u7bc9\u65e5\uff08\u6539\u9020\u3084\u8ffd\u52a0\u304c\u306a\u3044\u5834\u5408\u306f\u5efa\u8a2d\u65e5\u3068\u540c\u3058\uff09\n\n    26.MasVnrArea\uff1a\u77f3\u6750\u7a81\u304d\u677f\u9762\u7a4d\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000\n","9cb534c3":"25.MasVnrType\uff1a\u77f3\u6750\u7a81\u304d\u677f\u30bf\u30a4\u30d7\u3000\u5909\u6570\u30ab\u30c6\u30b4\u30ea\u3000\u540d\u7fa9\u5909\u6570","bf6bae4b":"\n    \uff1c\u30ab\u30c6\u30b4\u30ea\u5909\u6570\uff1e\n\n    65.PavedDrive\uff1a\u8217\u88c5\u79c1\u9053\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570\n\n    73.Fence\uff1a\u30d5\u30a7\u30f3\u30b9\u306e\u54c1\u8cea\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570\n\n\uff1c\u6570\u5024\u5909\u6570\uff1e\n\n    66.WoodDeckSF\uff1a\u30a6\u30c3\u30c9\u30c7\u30c3\u30ad\u306e\u5e83\u3055\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000\u6570\u5024\u5909\u6570\n\n    67.OpenPorchSF\uff1a\u30aa\u30fc\u30d7\u30f3\u30dd\u30fc\u30c1\u306e\u5e83\u3055\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000\u6570\u5024\u5909\u6570\n\n    68.EnclosedPorch\uff1a\u30af\u30ed\u30fc\u30ba\u30c8\u30dd\u30fc\u30c1\u306e\u5e83\u3055\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000\u6570\u5024\u5909\u6570\n\n    69.3SsnPorch\uff1a3\u30b7\u30fc\u30ba\u30f3\u30dd\u30fc\u30c1\u306e\u5e83\u3055\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000\u6570\u5024\u5909\u6570\n\n    70.ScreenPorch\uff1a\u30b9\u30af\u30ea\u30fc\u30f3\u30dd\u30fc\u30c1\u306e\u5e83\u3055\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000\u6570\u5024\u5909\u6570","5ea8638b":"21.RoofStyle\uff1a\u5c4b\u6839\u306e\u30bf\u30a4\u30d7\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570","34a3b453":"2.MSZoning\uff1a\u5730\u57df\u5206\u985e\u3000(object)","2ca3c663":"**55.Functional\uff1a\u30db\u30fc\u30e0\u6a5f\u80fd (object)**\n\n\u91cd\u8981\u5ea6\u3000\u4e2d\u306e\u4e0b\u7a0b\u5ea6\u3000\uff08Typ\u306b\u5927\u304d\u304f\u504f\u3063\u3066\u304a\u308a\u3001\u305d\u306e\u5916\u308c\u5024\u3082\u591a\u3044\u3001\u30bf\u30fc\u30b2\u30c3\u30c8\u3078\u3082\u9805\u76ee\u306b\u3088\u308b\u9055\u3044\u304c\u5c0f\u3055\u3044\u3002\uff09","02358cf6":"# 1.\u30c7\u30fc\u30bf\u30ed\u30fc\u30c9","6a0aaa57":"16.HouseStyle\uff1a\u5efa\u7269\u30b9\u30bf\u30a4\u30eb\u3000\u540d\u7fa9\u5909\u6570 (int64)","6c87c600":"6.Alley\uff1a\u901a\u308a\u307e\u3067\u306e\u5c0f\u9053\u72b6\u6cc1 (object)","52a7150a":" 3.LotFrontage\uff1a\u901a\u308a\u307e\u3067\u306e\u76f4\u7dda\u8ddd\u96e2\uff08\u5358\u4f4d\uff1a\u30d5\u30a3\u30fc\u30c8\uff09(float64)","2b8f0e09":"\u5468\u8fba\u74b0\u5883\n\n    \uff1c\u30ab\u30c6\u30b4\u30ea\u5909\u6570\uff1e\n\n    12.Neighborhood\uff1a\u30a8\u30a4\u30e0\u30b9\u5e02\u57df\u5185\u306e\u5730\u57df\u540d\u3000\u540d\u7fa9\u5909\u6570\n\n    13.Condition1\uff1a\u3055\u307e\u3056\u307e\u306a\u6761\u4ef6\u3078\u306e\u8fd1\u63a5\u3000\u540d\u7fa9\u5909\u6570\n\n    14.Condition2\uff1a\u3055\u307e\u3056\u307e\u306a\u6761\u4ef6\u3078\u306e\u8fd1\u63a5\uff08\u8907\u6570\u3042\u308b\u5834\u5408\uff09\u540d\u7fa9\u5909\u6570\n","45e0bb51":"# \u5730\u4e0b\u5ba4","a9009975":"10.LotConfig\uff1a\u6577\u5730\u72b6\u6cc1\u3000(object)","ef2b8e5c":"# \u5916\u56de\u308a","31df560b":"    \uff1c\u30ab\u30c6\u30b4\u30ea\u5909\u6570\uff1e\n\n    30.BsmtQual\uff1a\u5730\u4e0b\u5ba4\u9ad8\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u9806\u5e8f\u5909\u6570\uff08\uff2e\uff21\uff1a\uff10\uff09\n\n    31.BsmtCond\uff1a\u5730\u4e0b\u5ba4\u72b6\u614b\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u9806\u5e8f\u5909\u6570\uff08\uff2e\uff21\uff1a\uff10\uff09\n\n    32.BsmtExposure\uff1a\u534a\u5730\u4e0b\u72b6\u6cc1\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u9806\u5e8f\u5909\u6570\uff08\uff2e\uff21\uff1a\uff10\uff09\n\n    33.BsmtFinType1\uff1a\u5185\u88c5\u6e08\u307f\u5730\u4e0b\u5ba4\u72b6\u6cc1\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u9806\u5e8f\u5909\u6570\uff08\uff2e\uff21\uff1a\uff10\uff09\n\n    34.BsmtFinSF1\uff1aType1\u5730\u4e0b\u5ba4\u306e\u5e83\u3055\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000\u6570\u5024\u5909\u6570\n\n    35.BsmtFinType2\uff1a\u5185\u88c5\u6e08\u307f\u5730\u4e0b\u5ba4\u72b6\u6cc1\uff08\u8907\u6570\u306e\u30bf\u30a4\u30d7\u306e\u5834\u5408\uff09\u3000\u9806\u5e8f\u5909\u6570\uff08\uff2e\uff21\uff1a\uff10\uff09\n\n    \uff1c\u6570\u5024\u5909\u6570\uff1e    \n\n    36.BsmtFinSF2\uff1aType2\u5730\u4e0b\u5ba4\u306e\u5e83\u3055\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000\u6570\u5024\u5909\u6570\n\n    37.BsmtUnfSF\uff1a\u672a\u5b8c\u6210\u5730\u4e0b\u5ba4\u306e\u5e83\u3055\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000\u6570\u5024\u5909\u6570\n\n    38.TotalBsmtSF\uff1a\u5730\u4e0b\u5ba4\u306e\u5168\u9762\u7a4d\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000\u6570\u5024\u5909\u6570","21171aed":"\u5730\u4e0b\u5ba4\n\n    \uff1c\u30ab\u30c6\u30b4\u30ea\u5909\u6570\uff1e\n\n    30.BsmtQual\uff1a\u5730\u4e0b\u5ba4\u9ad8\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u9806\u5e8f\u5909\u6570\uff08\uff2e\uff21\uff1a\uff10\uff09\n\n    31.BsmtCond\uff1a\u5730\u4e0b\u5ba4\u72b6\u614b\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u9806\u5e8f\u5909\u6570\uff08\uff2e\uff21\uff1a\uff10\uff09\n\n    32.BsmtExposure\uff1a\u534a\u5730\u4e0b\u72b6\u6cc1\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u9806\u5e8f\u5909\u6570\uff08\uff2e\uff21\uff1a\uff10\uff09\n\n    33.BsmtFinType1\uff1a\u5185\u88c5\u6e08\u307f\u5730\u4e0b\u5ba4\u72b6\u6cc1\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u9806\u5e8f\u5909\u6570\uff08\uff2e\uff21\uff1a\uff10\uff09\n\n    34.BsmtFinSF1\uff1aType1\u5730\u4e0b\u5ba4\u306e\u5e83\u3055\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000\u6570\u5024\u5909\u6570\n\n    35.BsmtFinType2\uff1a\u5185\u88c5\u6e08\u307f\u5730\u4e0b\u5ba4\u72b6\u6cc1\uff08\u8907\u6570\u306e\u30bf\u30a4\u30d7\u306e\u5834\u5408\uff09\u3000\u9806\u5e8f\u5909\u6570\uff08\uff2e\uff21\uff1a\uff10\uff09\n\n    \uff1c\u6570\u5024\u5909\u6570\uff1e    \n\n    36.BsmtFinSF2\uff1aType2\u5730\u4e0b\u5ba4\u306e\u5e83\u3055\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000\u6570\u5024\u5909\u6570\n\n    37.BsmtUnfSF\uff1a\u672a\u5b8c\u6210\u5730\u4e0b\u5ba4\u306e\u5e83\u3055\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000\u6570\u5024\u5909\u6570\n\n    38.TotalBsmtSF\uff1a\u5730\u4e0b\u5ba4\u306e\u5168\u9762\u7a4d\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000\u6570\u5024\u5909\u6570\n","968da3e4":"**46.GrLivArea\uff1a\u5730\u4e0a\u30ea\u30d3\u30f3\u30b0\u306e\u5e83\u3055\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000(int64)**\n\n\u91cd\u8981\u5ea6\u3000\u9ad8\u3044\u3000\uff08\u30c7\u30fc\u30bf\u5206\u5e03\u304c\u5e83\u304f\u3001\u30bf\u30fc\u30b2\u30c3\u30c8\u3068\u306e\u76f8\u95a2\u95a2\u4fc2\uff080.7\uff09\u3082\u9ad8\u3044\uff09","bc2c3bdf":"\u30d7\u30fc\u30eb\n\n    \uff1c\u30ab\u30c6\u30b4\u30ea\u5909\u6570\uff1e\n\n    72.PoolQC\uff1a\u30d7\u30fc\u30eb\u306e\u54c1\u8cea\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u3000\u9806\u5e8f\u5909\u6570\uff08\uff2e\uff21\uff1a\uff10\uff09\n\n    \uff1c\u6570\u5024\u5909\u6570\uff1e\n\n    71.PoolArea\uff1a\u30d7\u30fc\u30eb\u306e\u5927\u304d\u3055\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000\u6570\u5024\u5909\u6570\n","92c5348a":"**76.MoSold\uff1a\u8ca9\u58f2\u6708\uff08MM\uff09 (int64)**\n\n\u91cd\u8981\u5ea6\u3000\u4f4e\u3044\u3000\uff08\u5168\u822c\u306b\u30c7\u30fc\u30bf\u306f\u5206\u5e03\u3057\u3066\u3044\u308b\u304c\u3001\u9805\u76ee\u306b\u3088\u308b\u30bf\u30fc\u30b2\u30c3\u30c8\u3078\u306e\u9055\u3044\u306f\u898b\u3089\u308c\u306a\u3044\u3002\uff09","58bab368":" 28.ExterCond\uff1a\u5916\u88c5\u7d20\u6750\u72b6\u614b\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u9806\u5e8f\u5909\u6570","53e9e289":"# \u5efa\u7269","7e0c3d45":"\u4f4f\u5c45\u7dcf\u5408\n\n    \uff1c\u30ab\u30c6\u30b4\u30ea\u5909\u6570\uff1e\n    \n    1.MSSubClass\uff1a\u4f4f\u5c45\u30bf\u30a4\u30d7\u3000\u540d\u7fa9\u5909\u6570\n\n    55.Functional\uff1a\u30db\u30fc\u30e0\u6a5f\u80fd\u3000\u540d\u7fa9\u5909\u6570\n\n    78.SaleType\uff1a\u8ca9\u58f2\u30bf\u30a4\u30d7\u3000\u540d\u7fa9\u5909\u6570\n\n    79.SaleCondition\uff1a\u8ca9\u58f2\u6761\u4ef6\u3000\u540d\u7fa9\u5909\u6570\n\n    76.MoSold\uff1a\u8ca9\u58f2\u6708\uff08MM\uff09\u3000\u540d\u7fa9\u5909\u6570\n\n    77.YrSold\uff1a\u8ca9\u58f2\u5e74\uff08YYYY\uff09\u3000\u540d\u7fa9\u5909\u6570\n\n    54.TotRmsAbvGrd\uff1a\u5730\u4e0a\u306e\u90e8\u5c4b\u6570\uff08\u9664\u304f\uff1a\u6d74\u5ba4\uff09\u3000\u540d\u7fa9\u5909\u6570\n\n    \uff1c\u6570\u5024\u5909\u6570\uff1e\n\n    43.1stFlrSF\uff1a1\u968e\u5e83\u3055\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000\n\n    44.2ndFlrSF\uff1a2\u968e\u5e83\u3055\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000\n\n    45.LowQualFinSF\uff1a\u5168\u672a\u5b8c\u6210\u90e8\u5206\u306e\u5e83\u3055\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000\n\n    46.GrLivArea\uff1a\u5730\u4e0a\u30ea\u30d3\u30f3\u30b0\u306e\u5e83\u3055\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000\n","0030bbf1":"**79.SaleCondition\uff1a\u8ca9\u58f2\u6761\u4ef6(object)**\n\n\u91cd\u8981\u5ea6\u3000\u4e2d\u7a0b\u5ea6\u3000\uff08Normal\u306b\u504f\u3063\u3066\u304a\u308a\u3001\u305d\u306e\u5916\u308c\u5024\u3082\u591a\u3044\u3001\u4f46\u3057\u30bf\u30fc\u30b2\u30c3\u30c8\u3078\u306f\u9805\u76ee\u306b\u3088\u308b\u9055\u3044\u304c\u307f\u3089\u308c\u308b\u3002\uff09","6584a78d":"**14.Condition2\uff1a\u3055\u307e\u3056\u307e\u306a\u6761\u4ef6\u3078\u306e\u8fd1\u63a5\uff08\u8907\u6570\u3042\u308b\u5834\u5408\uff09(object)**","34c359a0":"**1.MSSubClass\uff1a\u4f4f\u5c45\u30bf\u30a4\u30d7 (int64)**\n\n\u91cd\u8981\u5ea6\uff1a\u9ad8\u3044\u3000\uff08\u5168\u822c\u306b\u30c7\u30fc\u30bf\u304c\u5206\u5e03\u3057\u3066\u304a\u308a\u3001\u5024\u306b\u3088\u308a\u30bf\u30fc\u30b2\u30c3\u30c8\u5024\u306b\u9055\u3044\u304c\u767a\u751f\u3057\u3066\u3044\u308b\u3002\uff09","5b4185aa":"    \uff1c\u30ab\u30c6\u30b4\u30ea\u5909\u6570\uff1e\n\n    2.MSZoning\uff1a\u5730\u57df\u5206\u985e\u3000\u540d\u7fa9\u5909\u6570\n\n    5.Street\uff1a\u901a\u308a\u307e\u3067\u306e\u9053\u72b6\u6cc1 \u540d\u7fa9\u5909\u6570\n\n    6.Alley\uff1a\u901a\u308a\u307e\u3067\u306e\u5c0f\u9053\u72b6\u6cc1 \u540d\u7fa9\u5909\u6570\n\n    8.LandContour\uff1a\u571f\u5730\u50be\u659c\u5177\u5408\u3000\u540d\u7fa9\u5909\u6570\n\n    10.LotConfig\uff1a\u6577\u5730\u72b6\u6cc1\u3000\u540d\u7fa9\u5909\u6570\n\n\n    7.LotShape\uff1a\u6577\u5730\u5f62\u72b6\u3000\u9806\u5e8f\u5909\u6570\n\n    11.LandSlope\uff1a\u901a\u308a\u307e\u3067\u306e\u52fe\u914d\u3000\u9806\u5e8f\u5909\u6570\n\n    \uff1c\u6570\u5024\u5909\u6570\uff1e\n\n    3.LotFrontage\uff1a\u901a\u308a\u307e\u3067\u306e\u76f4\u7dda\u8ddd\u96e2\uff08\u5358\u4f4d\uff1a\u30d5\u30a3\u30fc\u30c8\uff09\n\n    4.LotArea\uff1a\u6577\u5730\u9762\u7a4d\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09","3784425f":"\u5468\u8fba\u74b0\u5883\n\n    \uff1c\u30ab\u30c6\u30b4\u30ea\u5909\u6570\uff1e\n\n    12.Neighborhood\uff1a\u30a8\u30a4\u30e0\u30b9\u5e02\u57df\u5185\u306e\u5730\u57df\u540d\u3000\u540d\u7fa9\u5909\u6570\n\n    13.Condition1\uff1a\u3055\u307e\u3056\u307e\u306a\u6761\u4ef6\u3078\u306e\u8fd1\u63a5\u3000\u540d\u7fa9\u5909\u6570\n\n    14.Condition2\uff1a\u3055\u307e\u3056\u307e\u306a\u6761\u4ef6\u3078\u306e\u8fd1\u63a5\uff08\u8907\u6570\u3042\u308b\u5834\u5408\uff09\u540d\u7fa9\u5909\u6570","0019041e":"15.BldgType\uff1a\u4f4f\u5c45\u306e\u30bf\u30a4\u30d7\u3000(object)","dfda548d":"**12.Neighborhood\uff1a\u30a8\u30a4\u30e0\u30b9\u5e02\u57df\u5185\u306e\u5730\u57df\u540d\u3000(object)**","9672ff1b":"19.YearBuilt\uff1a\u5efa\u7bc9\u65e5\u3000\u6570\u5024\u5909\u6570","f088dcaf":"26.MasVnrArea\uff1a\u77f3\u6750\u7a81\u304d\u677f\u9762\u7a4d\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000\u6570\u5024\u5909\u6570","9f3f7d5b":"**77.YrSold\uff1a\u8ca9\u58f2\u5e74\uff08YYYY\uff09(int64)**\n\n\u91cd\u8981\u5ea6\u3000\u4f4e\u3044\u3000\uff08\u5168\u822c\u306b\u30c7\u30fc\u30bf\u306f\u5206\u5e03\u3057\u3066\u3044\u308b\u304c\u3001\u9805\u76ee\u306b\u3088\u308b\u30bf\u30fc\u30b2\u30c3\u30c8\u3078\u306e\u9055\u3044\u306f\u898b\u3089\u308c\u306a\u3044\u3002\uff09","099692a5":"**78.SaleType\uff1a\u8ca9\u58f2\u306e\u30bf\u30a4\u30d7 (object)**\n\n\u91cd\u8981\u5ea6\u3000\u4e2d\u7a0b\u5ea6\u3000\uff08WD\u306b\u504f\u3063\u3066\u304a\u308a\u3001\u305d\u306e\u5916\u308c\u5024\u3082\u591a\u3044\u3001\u4f46\u3057\u30bf\u30fc\u30b2\u30c3\u30c8\u3078\u306f\u9805\u76ee\u306b\u3088\u308b\u9055\u3044\u304c\u307f\u3089\u308c\u308b\u3002\uff09","cb21d767":"\u300c\u4f4f\u5c45\u7dcf\u5408\u300d\u306e\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u30bf\u30a4\u30d7\n    \n    1.MSSubClass\uff1a\u4f4f\u5c45\u30bf\u30a4\u30d7\u3000\u540d\u7fa9\u5909\u6570\n    55.Functional\uff1a\u30db\u30fc\u30e0\u6a5f\u80fd\u3000\u540d\u7fa9\u5909\u6570\n    78.SaleType\uff1a\u8ca9\u58f2\u306e\u30bf\u30a4\u30d7\u3000\u540d\u7fa9\u5909\u6570\n    79.SaleCondition\uff1a\u8ca9\u58f2\u6761\u4ef6\u3000\u540d\u7fa9\u5909\u6570\n    76.MoSold\uff1a\u8ca9\u58f2\u6708\uff08MM\uff09\u3000\u540d\u7fa9\u5909\u6570\n    77.YrSold\uff1a\u8ca9\u58f2\u5e74\uff08YYYY\uff09\u3000\u540d\u7fa9\u5909\u6570\n    54.TotRmsAbvGrd\uff1a\u5730\u4e0a\u306e\u90e8\u5c4b\u6570\uff08\u9664\u304f\uff1a\u6d74\u5ba4\uff09\u3000\u540d\u7fa9\u5909\u6570","027d57e7":"**43.1stFlrSF\uff1a1\u968e\u5e83\u3055\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09(int64)**\n\n\u91cd\u8981\u5ea6\u3000\u9ad8\u3044\u3000\uff08\u30c7\u30fc\u30bf\u5206\u5e03\u304c\u5e83\u304f\u3001\u30bf\u30fc\u30b2\u30c3\u30c8\u3068\u306e\u76f8\u95a2\u95a2\u4fc2\uff080.6\uff09\u3082\u9ad8\u3044\u3002\uff09","dcc99dfe":"29.Foundation\uff1a\u5efa\u7269\u57fa\u790e\u306e\u7a2e\u985e\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570","1992fa8f":"**\u500b\u3005\u306e\u30c7\u30fc\u30bf\u306b\u3064\u3044\u3066\u3001\u524d\u51e6\u7406\u3092\u884c\u3046\u524d\u306b\u3001\u30bf\u30fc\u30b2\u30c3\u30c8(SalePrice)\u3068\u306e\u95a2\u4fc2\u3092\u8abf\u67fb\u3057\u3001\u524d\u30c7\u30fc\u30bf\u51e6\u7406\u304a\u3088\u3073\u7279\u5fb4\u91cf\u30a8\u30f3\u30b8\u30cb\u30a2\u30ea\u30f3\u30b0\u306e\u53ef\u80fd\u6027\u3092\u63a2\u308b\u3002**","460f6f27":"17.OverallQual\uff1a\u5168\u4f53\u306e\u54c1\u8cea\u8a55\u4fa1\u3000\u9806\u5e8f\u5909\u6570 (int64)","498b71a4":"20.YearRemodAdd\uff1a\u6539\u7bc9\u65e5\uff08\u6539\u9020\u3084\u8ffd\u52a0\u304c\u306a\u3044\u5834\u5408\u306f\u5efa\u8a2d\u65e5\u3068\u540c\u3058\uff09\u6570\u5024\u5909\u6570","b4710c28":"**45.LowQualFinSF\uff1a\u5168\u672a\u5b8c\u6210\u90e8\u5206\u306e\u5e83\u3055\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000(int64)**\n\n\u91cd\u8981\u5ea6\u3000\u4f4e\u3044\u3000\uff08\u30c7\u30fc\u30bf\u306f\uff10\uff08\u672a\u5b8c\u6210\u90e8\u5206\u306a\u3057\uff09\u306b\u504f\u3063\u3066\u304a\u308a\u3001\u30bf\u30fc\u30b2\u30c3\u30c8\u3068\u306e\u76f8\u95a2\u95a2\u4fc2\uff08-0.02\uff09\u3082\u4f4e\u3044\uff09","cf3b6f72":" 23.Exterior1st\uff1a\u5916\u88c5\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570","550d20be":"**13.Condition1\uff1a\u3055\u307e\u3056\u307e\u306a\u6761\u4ef6\u3078\u306e\u8fd1\u63a5 (object)**","b9a21e28":"# \u30ac\u30ec\u30fc\u30b8","961e07c6":"\u571f\u5730\n\n    \uff1c\u30ab\u30c6\u30b4\u30ea\u5909\u6570\uff1e\n\n    2.MSZoning\uff1a\u5730\u57df\u5206\u985e\u3000\u540d\u7fa9\u5909\u6570\n\n    5.Street\uff1a\u901a\u308a\u307e\u3067\u306e\u9053\u72b6\u6cc1 \u540d\u7fa9\u5909\u6570\n\n    6.Alley\uff1a\u901a\u308a\u307e\u3067\u306e\u5c0f\u9053\u72b6\u6cc1 \u540d\u7fa9\u5909\u6570\n\n    8.LandContour\uff1a\u571f\u5730\u50be\u659c\u5177\u5408\u3000\u540d\u7fa9\u5909\u6570\n\n    10.LotConfig\uff1a\u6577\u5730\u72b6\u6cc1\u3000\u540d\u7fa9\u5909\u6570\n\n\n    7.LotShape\uff1a\u6577\u5730\u5f62\u72b6\u3000\u9806\u5e8f\u5909\u6570\n\n    11.LandSlope\uff1a\u901a\u308a\u307e\u3067\u306e\u52fe\u914d\u3000\u9806\u5e8f\u5909\u6570\n\n    \uff1c\u6570\u5024\u5909\u6570\uff1e\n\n    3.LotFrontage\uff1a\u901a\u308a\u307e\u3067\u306e\u76f4\u7dda\u8ddd\u96e2\uff08\u5358\u4f4d\uff1a\u30d5\u30a3\u30fc\u30c8\uff09\n\n    4.LotArea\uff1a\u6577\u5730\u9762\u7a4d\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\n","891e9dd9":"# \uff13\uff0e\u500b\u5225\u30c7\u30fc\u30bf\u89e3\u6790\n\n**\u30b0\u30eb\u30fc\u30d7\u6bce\u306b\u30bf\u30fc\u30b2\u30c3\u30c8\u3068\u306e\u95a2\u4fc2\u304a\u3088\u3073\u76f8\u4e92\u306e\u76f8\u95a2\u95a2\u4fc2\u3092\u8abf\u67fb\u3057\u3001\u5404\u7a2e\u51e6\u7406\u3092\u884c\u3046\u3002**\n\n\u305f\u3060\u3057\u3001\u30e9\u30d9\u30eb\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3068\u30c0\u30df\u30fc\u5909\u6570\u51e6\u7406\u3092\u6700\u5f8c\u306b\u4e00\u62ec\u3057\u3066\u884c\u3046\u3002","13052ef3":" 24.Exterior2nd\uff1a\u5bb6\u306e\u5916\u88c5\uff08\u8907\u6570\u56de\u7b54\u7528\uff09\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570","e5c0bc1f":"8.LandContour\uff1a\u571f\u5730\u50be\u659c\u5177\u5408\u3000(object)","b67d9695":"5.Street\uff1a\u901a\u308a\u307e\u3067\u306e\u9053\u72b6\u6cc1 (object)","248b74ce":"    \uff1c\u30ab\u30c6\u30b4\u30ea\u5909\u6570\uff1e\n\n    58.GarageType\uff1a\u30ac\u30ec\u30fc\u30b8\u306e\u5834\u6240\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570\n        \n    60.GarageFinish\uff1a\u30ac\u30ec\u30fc\u30b8\u5185\u88c5\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u9806\u5e8f\u5909\u6570\uff08\uff2e\uff21\uff1a\uff10\uff09\n    \n    63.GarageQual\uff1a\u30ac\u30ec\u30fc\u30b8\u54c1\u8cea\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u9806\u5e8f\u5909\u6570\uff08\uff2e\uff21\uff1a\uff10\uff09\n\n    64.GarageCond\uff1a\u30ac\u30ec\u30fc\u30b8\u306e\u72b6\u614b\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u9806\u5e8f\u5909\u6570\u3000\u9806\u5e8f\u5909\u6570\uff08\uff2e\uff21\uff1a\uff10\uff09\n\n    \uff1c\u6570\u5024\u5909\u6570\uff1e\n\n    59.GarageYrBlt\uff1a\u30ac\u30ec\u30fc\u30b8\u5efa\u8a2d\u5e74\u3000\u6570\u5024\u5909\u6570\n\n    61.GarageCars\uff1a\u30ac\u30ec\u30fc\u30b8\u5bb9\u91cf\u3000\u6570\u5024\u5909\u6570\n\n    62.GarageArea\uff1a\u30ac\u30ec\u30fc\u30b8\u30b5\u30a4\u30ba\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u59d4\u30d5\u30a3\u30fc\u30c8\uff09\u3000\u6570\u5024\u5909\u6570","1b8060f1":"\u30b5\u30fc\u30d3\u30b9\n\n    9.Utility\uff1a\u30ac\u30b9\u96fb\u6c17\u6c34\u9053\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u9806\u5e8f\u5909\u6570\n\n    42.Electrical\uff1a\u914d\u96fb\u65bd\u8a2d\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570\u3000\n","aef42217":"# \u4f4f\u5b85\u7dcf\u5408","b9650520":"1\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\u3000\uff1d\u30000.0281\u576a\n\n\u2234\u5e73\u5747285\u576a\u3000\u4e2d\u592e\u5024270\u576a","f078e120":"    \uff1c\u30ab\u30c6\u30b4\u30ea\u5909\u6570\uff1e\n\n    72.PoolQC\uff1a\u30d7\u30fc\u30eb\u306e\u54c1\u8cea\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u3000\u9806\u5e8f\u5909\u6570\uff08\uff2e\uff21\uff1a\uff10\uff09\n\n    \uff1c\u6570\u5024\u5909\u6570\uff1e\n\n    71.PoolArea\uff1a\u30d7\u30fc\u30eb\u306e\u5927\u304d\u3055\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000\u6570\u5024\u5909\u6570","798dcb40":"# \u5efa\u7269\u8a2d\u5099","d9012eb0":"**54.TotRmsAbvGrd\uff1a\u5730\u4e0a\u306e\u90e8\u5c4b\u6570\uff08\u9664\u304f\uff1a\u6d74\u5ba4\uff09(int64)**\n\n\u91cd\u8981\u5ea6\u3000\u9ad8\u3044\u3000\uff08\u5168\u822c\u306b\u30c7\u30fc\u30bf\u304c\u5206\u5e03\u3057\u3066\u304a\u308a\u3001\u5024\u306b\u3088\u308a\u30bf\u30fc\u30b2\u30c3\u30c8\u5024\u306b\u9055\u3044\u304c\u767a\u751f\u3057\u3066\u3044\u308b\u3002\uff09","c0ad8b17":"# \u571f\u5730","94eec0ae":"\u30ac\u30ec\u30fc\u30b8\n    \n    \uff1c\u30ab\u30c6\u30b4\u30ea\u5909\u6570\uff1e\n\n    58.GarageType\uff1a\u30ac\u30ec\u30fc\u30b8\u306e\u5834\u6240\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570\n        \n    60.GarageFinish\uff1a\u30ac\u30ec\u30fc\u30b8\u5185\u88c5\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u9806\u5e8f\u5909\u6570\uff08\uff2e\uff21\uff1a\uff10\uff09\n    \n    63.GarageQual\uff1a\u30ac\u30ec\u30fc\u30b8\u54c1\u8cea\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u9806\u5e8f\u5909\u6570\uff08\uff2e\uff21\uff1a\uff10\uff09\n\n    64.GarageCond\uff1a\u30ac\u30ec\u30fc\u30b8\u306e\u72b6\u614b\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u9806\u5e8f\u5909\u6570\u3000\u9806\u5e8f\u5909\u6570\uff08\uff2e\uff21\uff1a\uff10\uff09\n\n    \uff1c\u6570\u5024\u5909\u6570\uff1e\n\n    59.GarageYrBlt\uff1a\u30ac\u30ec\u30fc\u30b8\u5efa\u8a2d\u5e74\u3000\n\n    61.GarageCars\uff1a\u30ac\u30ec\u30fc\u30b8\u5bb9\u91cf\u3000\n\n    62.GarageArea\uff1a\u30ac\u30ec\u30fc\u30b8\u30b5\u30a4\u30ba\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u59d4\u30d5\u30a3\u30fc\u30c8\uff09\u3000\n","5c7894c3":"    9.Utility\uff1a\u30ac\u30b9\u96fb\u6c17\u6c34\u9053\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u9806\u5e8f\u5909\u6570\n\n    42.Electrical\uff1a\u914d\u96fb\u65bd\u8a2d\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570\u3000","1f4bb4dd":"7.LotShape\uff1a\u6577\u5730\u5f62\u72b6\u3000\u9806\u5e8f\u5909\u6570\u3000(object)","0e96daaa":"\n    \uff1c\u30ab\u30c6\u30b4\u30ea\u5909\u6570\uff1e\n\n    15.BldgType\uff1a\u4f4f\u5c45\u306e\u30bf\u30a4\u30d7\u3000\u540d\u7fa9\u5909\u6570\n\n    16.HouseStyle\uff1a\u5efa\u7269\u30b9\u30bf\u30a4\u30eb\u3000\u540d\u7fa9\u5909\u6570\n    \n    21.RoofStyle\uff1a\u5c4b\u6839\u306e\u30bf\u30a4\u30d7\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570\n\n    22.RoofMatl\uff1a\u5c4b\u6839\u7d20\u6750\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570\n\n    23.Exterior1st\uff1a\u5916\u88c5\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570\n\n    24.Exterior2nd\uff1a\u5bb6\u306e\u5916\u88c5\uff08\u8907\u6570\u56de\u7b54\u7528\uff09\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570\n\n    25.MasVnrType\uff1a\u77f3\u6750\u7a81\u304d\u677f\u30bf\u30a4\u30d7\u3000\u5909\u6570\u30ab\u30c6\u30b4\u30ea\u3000\u540d\u7fa9\u5909\u6570\n\n    29.Foundation\uff1a\u5efa\u7269\u57fa\u790e\u306e\u7a2e\u985e\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570\n\n    27.ExterQual\uff1a\u5916\u88c5\u7d20\u6750\u54c1\u8cea\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u9806\u5e8f\u5909\u6570\n\n    28.ExterCond\uff1a\u5916\u88c5\u7d20\u6750\u72b6\u614b\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u9806\u5e8f\u5909\u6570\n\n     17.OverallQual\uff1a\u5168\u4f53\u306e\u54c1\u8cea\u8a55\u4fa1\u3000\u9806\u5e8f\u5909\u6570\n\n    18.OverallCond\uff1a\u5168\u4f53\u306e\u72b6\u614b\u8a55\u4fa1\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u9806\u5e8f\u5909\u6570\n\n    \uff1c\u6570\u5024\u5909\u6570\uff1e\n\n    19.YearBuilt\uff1a\u5efa\u7bc9\u65e5\u3000\u6570\u5024\u5909\u6570\n\n    20.YearRemodAdd\uff1a\u6539\u7bc9\u65e5\uff08\u6539\u9020\u3084\u8ffd\u52a0\u304c\u306a\u3044\u5834\u5408\u306f\u5efa\u8a2d\u65e5\u3068\u540c\u3058\uff09\u6570\u5024\u5909\u6570\n\n    26.MasVnrArea\uff1a\u77f3\u6750\u7a81\u304d\u677f\u9762\u7a4d\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000\u6570\u5024\u5909\u6570","85703abb":"# \u5468\u8fba\u74b0\u5883","b231f106":"**44.2ndFlrSF\uff1a2\u968e\u5e83\u3055\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000(int64)**\n\n\u91cd\u8981\u5ea6\u3000\u4f4e\u3044\u3000\uff08\u30c7\u30fc\u30bf\u306f\uff10\uff082\u968e\u306a\u3057\uff09\u306b\u504f\u3063\u3066\u304a\u308a\u3001\u30bf\u30fc\u30b2\u30c3\u30c8\u3068\u306e\u76f8\u95a2\u95a2\u4fc2\uff080.3\uff09\u3082\u4f4e\u3044\uff09","f098780a":"**\u300c\u4f4f\u5b85\u7dcf\u5408\u300d\u306e\u6570\u5024\u5909\u6570\u30bf\u30a4\u30d7**\n\n    43.1stFlrSF\uff1a1\u968e\u5e83\u3055\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000\u6570\u5024\u5909\u6570\n\n    44.2ndFlrSF\uff1a2\u968e\u5e83\u3055\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000\u6570\u5024\u5909\u6570\n\n    45.LowQualFinSF\uff1a\u5168\u672a\u5b8c\u6210\u90e8\u5206\u306e\u5e83\u3055\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000\u6570\u5024\u5909\u6570\n\n    46.GrLivArea\uff1a\u5730\u4e0a\u30ea\u30d3\u30f3\u30b0\u306e\u5e83\u3055\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09\u3000\u6570\u5024\u5909\u6570","0d14b541":"\n    \uff1c\u30ab\u30c6\u30b4\u30ea\u5909\u6570\uff1e    \n\n    39.Heating\uff1a\u6696\u623f\u30bf\u30a4\u30d7\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570\n\n    41.CentralAir\uff1a\u30bb\u30f3\u30c8\u30e9\u30eb\u30a8\u30a2\u30b3\u30f3\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570\n\n    53.KitchenQual\uff1a\u30ad\u30c3\u30c1\u30f3\u54c1\u8cea\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570\n\n    74.MiscFeature\uff1a\u4ed6\u9805\u76ee\u306b\u542b\u307e\u308c\u306a\u3044\u8a2d\u5099\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570\n\n\n    40.HeatingQC\uff1a\u6696\u623f\u54c1\u8cea\uff06\u72b6\u614b\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u9806\u5e8f\u5909\u6570\n\n    57.FireplaceQu\uff1a\u6696\u7089\u306e\u54c1\u8cea\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u9806\u5e8f\u5909\u6570\uff08\uff2e\uff21\uff1a\uff10\uff09\n\n\uff1c\u6570\u5024\u5909\u6570\uff1e\n\n    47.BsmtFullBath\uff1a\u5730\u4e0b\u306e\u6d74\u5ba4\u3000\u6570\u5024\u5909\u6570\n\n    48.BsmtHalfBath\uff1a\u5730\u4e0b\u306e\u7c21\u6613\u30d0\u30b9\u3000\u6570\u5024\u5909\u6570\n\n    49.FullBath\uff1a\u5730\u4e0a\u306e\u6d74\u5ba4\u3000\u6570\u5024\u5909\u6570\n\n    50.HalfBath\uff1a\u5730\u4e0a\u306e\u7c21\u6613\u30d0\u30b9\u3000\u6570\u5024\u5909\u6570\n\n    51.Bedroom\uff1a\u5730\u4e0a\u306e\u5bdd\u5ba4\uff08\u9664\u304f\uff1a\u5730\u4e0b\uff09\u3000\u6570\u5024\u5909\u6570\n\n    52.Kitchen\uff1a\u5730\u4e0a\u306e\u30ad\u30c3\u30c1\u30f3\u3000\u6570\u5024\u5909\u6570\n\n    56.Fireplaces\uff1a\u6696\u7089\u6570\u3000\u6570\u5024\u5909\u6570\n\n    75.MiscVal\uff1a\u305d\u306e\u4ed6\u8a2d\u5099\u306e\u6570\u5024\u3000\u6570\u5024\u5909\u6570","5a831ddd":"# \uff12\uff0e\u30c7\u30fc\u30bf\u4e00\u89a7\n\n**\u307e\u305a\u4fbf\u5b9c\u7684\u306b\u5168\u30c7\u30fc\u30bf\u3092\u300c\u4f4f\u5c45\u7dcf\u5408\u300d\u300c\u5468\u8fba\u74b0\u5883\u300d\u300c\u571f\u5730\u300d\u300c\u5efa\u7269\u300d\u300c\u5efa\u7269\u8a2d\u5099\u300d\u300c\u5916\u56de\u308a\u300d\u300c\u30ac\u30ec\u30fc\u30b8\u300d\u300c\u5730\u4e0b\u5ba4\u300d\u300c\u30d7\u30fc\u30eb\u300d\u300c\u30b5\u30fc\u30d3\u30b9\u300d\u306e10\u30b0\u30eb\u30fc\u30d7\u306b\u5206\u985e\u3059\u308b\u3002**","7cdb94b7":"18.OverallCond\uff1a\u5168\u4f53\u306e\u72b6\u614b\u8a55\u4fa1\u3000\u9806\u5e8f\u5909\u6570 (int64)","1db259d4":"# \u30b5\u30fc\u30d3\u30b9","33b238e3":"11.LandSlope\uff1a\u901a\u308a\u307e\u3067\u306e\u52fe\u914d\u3000\u9806\u5e8f\u5909\u6570 (object)","42c550e9":"4.LotArea\uff1a\u6577\u5730\u9762\u7a4d\uff08\u5358\u4f4d\uff1a\u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\uff09(int64)","389e3ce6":"# \u30d7\u30fc\u30eb","2f03beb7":"27.ExterQual\uff1a\u5916\u88c5\u7d20\u6750\u54c1\u8cea\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u9806\u5e8f\u5909\u6570","019060c7":"22.RoofMatl\uff1a\u5c4b\u6839\u7d20\u6750\u3000\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3000\u540d\u7fa9\u5909\u6570"}}