{"cell_type":{"fa59f4da":"code","64bce029":"code","0f4c466f":"code","1b00af3f":"code","86037628":"code","d4d26189":"code","0f8e5bbb":"code","cf75e212":"code","e96ffef8":"code","583a597a":"code","c31b7d19":"code","7cf92b2c":"code","ec367fb0":"code","672d56f2":"code","de6aa3aa":"code","97be171d":"code","c24313b8":"code","e343155c":"code","22b9afd0":"code","8216083e":"code","8c23e6bd":"code","f885d04a":"code","67b89f13":"code","2d5f40ad":"code","6c272cf7":"code","c8ab78f4":"code","b4c566f5":"code","ad6c572b":"code","0ab3c47e":"code","ece744eb":"code","50b38f94":"code","de63a5a3":"code","dc0c0fc5":"code","9560ba61":"markdown","47ca651c":"markdown","ba85dc6f":"markdown","b28e14b6":"markdown","b23020e7":"markdown","afbda51d":"markdown","7f8eab70":"markdown","6b1f11ea":"markdown","1fb25eb2":"markdown","4209eee5":"markdown","ef59a61e":"markdown","a8e1a890":"markdown","b8b49524":"markdown","b6ce02a5":"markdown","5e604c1e":"markdown","cc424772":"markdown","9a01006c":"markdown","a591f127":"markdown","ef471650":"markdown"},"source":{"fa59f4da":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np \nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom imblearn.over_sampling import SMOTE\nfrom sklearn import svm\nfrom sklearn import preprocessing\nimport xgboost as xgb\nfrom sklearn.model_selection import GridSearchCV, train_test_split\nfrom sklearn.metrics import classification_report,accuracy_score\nfrom matplotlib import pyplot\nfrom xgboost import plot_importance\nfrom collections import Counter\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","64bce029":"df = pd.read_csv(\"\/kaggle\/input\/hr-analytics-job-change-of-data-scientists\/aug_train.csv\")\ndf.head()","0f4c466f":"df.shape","1b00af3f":"df.describe()","86037628":"df.info()","d4d26189":"df.isnull().sum()","0f8e5bbb":"df1 = df.fillna(\"Unknown\")\ndf1.isnull().sum()","cf75e212":"ax = sns.countplot(x=\"target\",data=df1, hue=\"gender\")\ntotal =float(len(df))\n\nplt.title(\"looking for Job change or not ?\")\nplt.xlabel(\"looking for job change\")\n\nfor p in ax.patches:\n    percentage = '{:.1f}%'.format(100 * p.get_height()\/total)\n    x = p.get_x() + p.get_width()\n    y = p.get_height()\n    ax.annotate(percentage, (x, y),ha='right')\nplt.show()\n","e96ffef8":"ax = sns.countplot(x=\"target\",data=df1, hue=\"relevent_experience\")\ntotal =float(len(df))\n\nplt.title(\"looking for Job change or not ?\")\nplt.xlabel(\"looking for job change\")\n\nfor p in ax.patches:\n    percentage = '{:.1f}%'.format(100 * p.get_height()\/total)\n    x = p.get_x() + p.get_width()\n    y = p.get_height()\n    ax.annotate(percentage, (x, y),ha='right')\nplt.show()\n","583a597a":"ax = sns.countplot(x=\"education_level\",data=df1[df1['target']==1])\ntotal_1 =float(len(df[df['target']==1]))\nplt.title(\"Educational level of persons looking for job change\")\nplt.xlabel(\"Educational level\")\n\nfor p in ax.patches:\n    percentage = '{:.1f}%'.format(100 * p.get_height()\/total_1)\n    x = p.get_x() + p.get_width()\n    y = p.get_height()\n    ax.annotate(percentage, (x, y),ha='right')\nplt.show()\n","c31b7d19":"sns.boxplot(x=\"target\",y=\"training_hours\",data=df1,palette=\"Set1\")\nplt.title(\"Distribution of training hours\")\nplt.xlabel(\"looking for job change\")","7cf92b2c":"sns.boxplot(x=\"target\",y=\"city_development_index\",data=df1,palette=\"Set1\")\nplt.title(\"Distribution of city development index\")\nplt.xlabel(\"looking for job change\")","ec367fb0":"major_discipline = df1[df1['target'] == 1]['major_discipline']\nvalues = major_discipline.value_counts()\nlabels = values.keys()\nbar,ax = plt.subplots(figsize=(8,8))\nplt.pie(x = values, labels = labels , autopct=\"%.2f%%\",pctdistance=0.8)\nplt.title('looking for job change (major discipline wise)', fontsize=20)","672d56f2":"ax = sns.countplot(x=\"enrolled_university\",data=df1[df1['target']==1])\ntotal_1 =float(len(df[df['target']==1]))\nplt.title(\"University enrollment status of persons looking for job change\")\nplt.xlabel(\"University enrollment status\")\n\nfor p in ax.patches:\n    percentage = '{:.1f}%'.format(100 * p.get_height()\/total_1)\n    x = p.get_x() + p.get_width()\n    y = p.get_height()\n    ax.annotate(percentage, (x, y),ha='right')\nplt.show()","de6aa3aa":"ax = sns.countplot(x=\"last_new_job\",data=df1[df1['target']==1])\ntotal_1 =float(len(df[df['target']==1]))\nplt.title(\"Difference in years between current job and previous job\")\nplt.xlabel(\"Difference in years\")\n\nfor p in ax.patches:\n    percentage = '{:.1f}%'.format(100 * p.get_height()\/total_1)\n    x = p.get_x() + p.get_width()\n    y = p.get_height()\n    ax.annotate(percentage, (x, y),ha='right')\nplt.show()","97be171d":"ax = sns.countplot(x=\"experience\",data=df1[df1['target']==1])\ntotal_1 =float(len(df[df['target']==1]))\nplt.title(\"Work experience\")\nplt.xlabel(\"Work experience\")\n\nfor p in ax.patches:\n    percentage = '{:.1f}%'.format(100 * p.get_height()\/total_1)\n    x = p.get_x() + p.get_width()\n    y = p.get_height()\n    ax.annotate(percentage, (x, y),ha='center')\nplt.show()","c24313b8":"#Checking for percentage of missing values in each columns\n(df.isnull().sum()\/len(df))*100","e343155c":"#Mode Imputation\ndf['gender'] = df['gender'].fillna(df['gender'].mode()[0])\ndf['major_discipline'] = df['major_discipline'].fillna(df['major_discipline'].mode()[0])\ndf['company_size'] = df['company_size'].fillna(df['company_size'].mode()[0])\ndf['company_type'] = df['company_type'].fillna(df['company_type'].mode()[0])","22b9afd0":"#Dropping rest of the null values\ndf.dropna(inplace=True)","8216083e":"df.isnull().sum()","8c23e6bd":"df.shape","f885d04a":"#Encoding experience column\nexperience_mapper = {\n    '<1'      :    0,'1'       :    1, '2'       :    2, '3'       :    3, '4'       :    4, '5'       :    5,\n    '6'       :    6,'7'       :    7,'8'       :    8,  '9'       :    9, '10'      :    10, '11'      :    11,\n    '12'      :    12,'13'      :    13, '14'      :    14, '15'      :    15, '16'      :    16,'17'      :    17,\n    '18'      :    18,'19'      :    19, '20'      :    20, '>20'     :    21\n} \ndf.loc[:,'experience'] = df['experience'].map(experience_mapper)  ","67b89f13":"#Encoding rest of the columns\nle = preprocessing.LabelEncoder() \ndf['last_new_job']  = le.fit_transform(df['last_new_job']) \ndf2=pd.get_dummies(df,columns=['gender','relevent_experience','enrolled_university','education_level','major_discipline','company_size','company_type'],drop_first=True)\ndf2.head()","2d5f40ad":"#Dropping unnecessary columns\ndf2.drop(['enrollee_id','city'],axis=1,inplace=True)\ndf2.head()","6c272cf7":"#Checking if there is any imbalances in the dataset\ndf2.groupby('target')['target'].count()","c8ab78f4":"X = df2.drop(['target'],axis=1)\ny = df2['target']\n\nsm = SMOTE(random_state=42)\nX_smote,y_smote = sm.fit_sample(X,y)\n\ncount_class = Counter(y_smote)\nprint(count_class)","b4c566f5":"#Renaming this specific column because it contains '<' in the column name\nX_smote.rename(columns={'company_size_<10':'company_size_10'}, inplace=True)","ad6c572b":"models = {\n    'SVM':{'model':svm.SVC(gamma='auto',C=5,kernel='rbf'),'params': {'C': [1,5,10]}},\n    'xgboost':{'model':xgb.XGBClassifier(),'params': {'max_depth':[4,6,8],'gamma': [0.5, 1, 2, 5]}}\n}","0ab3c47e":"#Hyperparameters tuning using GridSearchCV\nscores = []\n\nfor model_name, mp in models.items():\n    clf =  GridSearchCV(mp['model'],mp['params'] ,cv= 2, return_train_score=False)\n    clf.fit(X_smote, y_smote)\n    scores.append({\n        'model': model_name,\n        'best_score': clf.best_score_,\n        'best_params': clf.best_params_\n    })\n    \ndf_model = pd.DataFrame(scores,columns=['model','best_score','best_params'])\ndf_model","ece744eb":"X_train, X_test, y_train, y_test = train_test_split(X_smote,y_smote,test_size=0.3, random_state=42)","50b38f94":"model = xgb.XGBClassifier(gamma=0.5,max_depth=8)\nmodel.fit(X_train,y_train)\nypred = model.predict(X_test)\nprint(classification_report(y_test,ypred))","de63a5a3":"print(\"Xgboost model accuracy - \", accuracy_score(y_test,ypred)*100)","dc0c0fc5":"#Plotting features importance\nplt.rcParams[\"figure.figsize\"] = (10, 7)\nplot_importance(model)\nplt.show()","9560ba61":"**Observation:**\n* Dataset is imbalanced. Lets use SMOTE technique to resolve this issue\n","47ca651c":"# Data preparation and encoding","ba85dc6f":"Observation:\n* Out of those who looks for job change, 15.5 % have relevent experience.","b28e14b6":"**Observation**\n* Xgboost performs well than SVM in this case","b23020e7":"**Observation:**\n*  Average training hours completed is almost same for people who are looking for job and not. It means training hours doesnt have impact here","afbda51d":"**Observation:**\n* Around 25% people are lookging for a job change\n* Out of which, 15.7% people are male\n* Around 80% people are currently not looking for job change","7f8eab70":"# Data Analysis","6b1f11ea":"Replacing null values with 'Unknown' for analytics purpose","1fb25eb2":"**Observation:**\n* Around 37% of people who are leaving the job are due to higher studies. Around 61% of the people havent enrolled in any educational courses. So, they might be leaving the job due to other reasons such as salary issues, job satisfaction, etc","4209eee5":"**Observation**:\n* Around 80% of STEM degree holders are looking fot job change. So, It might be possible that they are more likely to look for job changes ","ef59a61e":"**Observation**\n* Average city development index for people who are looking for job change is less. So, people from city which has higher development index are less likely to look for job change","a8e1a890":"# HR Analytics","b8b49524":"Observation:\n* Graduates are more likely to look for a job change. ","b6ce02a5":"**Observation**\n* People with experience 2,3,4,5 and >20 are mor likely to look for job change","5e604c1e":"# Data Profiling","cc424772":"* Replacing the missing values by mode value for columns that have more than 5% of missing values","9a01006c":"**Observation:**\n* Around 44.5 % of the people who are looking out for job change have only one year of difference between their current job and previus job. One of the possible reasons could be, they might not like the work culture of the company","a591f127":"Comparison between SVM and XGboost","ef471650":"# Model Selection and Building"}}