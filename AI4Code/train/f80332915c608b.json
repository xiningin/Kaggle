{"cell_type":{"374150f0":"code","bd3f6842":"code","b1d199f7":"code","63b3fffe":"code","9065c852":"code","7c2c028c":"code","9b1f8a72":"code","edcecb83":"code","67487103":"code","9e5c2706":"code","5d95c26f":"code","892d5490":"code","0436bb04":"code","1e83edef":"code","f1e3de21":"code","6cddc764":"code","808ae243":"code","ab15d4c2":"code","c3bac4dd":"code","bde4e976":"code","92c12af1":"code","821ae85e":"code","af6d5733":"code","353a529a":"code","4c8e2826":"code","a444b9b3":"code","a35c2d66":"code","0c0acf33":"code","6c4b0cd7":"code","981dbf09":"code","b76e9414":"code","9d9d1d6c":"markdown","56040ae0":"markdown","c0c1a602":"markdown","5eca849a":"markdown","78ebe19c":"markdown","253c330f":"markdown","ca810a2b":"markdown","4083ab48":"markdown","4de97657":"markdown","879c847b":"markdown","1d7f0a15":"markdown","a3e53794":"markdown","0ea02197":"markdown","26c125ca":"markdown"},"source":{"374150f0":"# importing libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.express as px\nfrom sklearn.preprocessing import StandardScaler\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nplt.style.use('fivethirtyeight')\n%matplotlib inline","bd3f6842":"# read the dataset\ndf=pd.read_csv('\/kaggle\/input\/breast-cancer-wisconsin-data\/data.csv')\ndf.head()","b1d199f7":"df.shape ","63b3fffe":"#information about the dataset\ndf.info()","9065c852":"#description about the dataset\ndf.describe()","7c2c028c":"# dropping unncessary columns\ndf.drop(\"Unnamed: 32\",axis=1,inplace=True)\n","9b1f8a72":"#checking missing values\ndf.isnull().sum()","edcecb83":"import missingno as msno\nmsno.bar(df)","67487103":"fig= px.histogram(df, x='diagnosis',color='diagnosis', barmode='group')\nfig.show()","9e5c2706":"df.columns","5d95c26f":"fig = px.pie(df, values='radius_mean', names='diagnosis', title='Relation')\nfig.show()","892d5490":"#postive correlation\nfig,ax=plt.subplots(2,2,figsize=(20,25))\nsns.scatterplot(x='perimeter_mean',y='radius_worst',data=df,hue='diagnosis',ax=ax[0][0])\nsns.scatterplot(x='area_mean',y='radius_worst',data=df,hue='diagnosis',ax=ax[1][0])\nsns.scatterplot(x='texture_mean',y='texture_worst',data=df,hue='diagnosis',ax=ax[0][1])\nsns.scatterplot(x='area_worst',y='radius_worst',data=df,hue='diagnosis',ax=ax[1][1])\nplt.show()","0436bb04":"#negative correlation\nfig,ax=plt.subplots(2,2,figsize=(20,25))\nsns.scatterplot(x='area_mean',y='fractal_dimension_mean',data=df,hue='diagnosis',ax=ax[0][0])\nsns.scatterplot(x='radius_mean',y='smoothness_se',data=df,hue='diagnosis',ax=ax[1][0])\nsns.scatterplot(x='smoothness_se',y='perimeter_mean',data=df,hue='diagnosis',ax=ax[0][1])\nsns.scatterplot(x='area_mean',y='smoothness_se',data=df,hue='diagnosis',ax=ax[1][1])","1e83edef":"fig = px.scatter(df,x='radius_mean',y='perimeter_mean',color='diagnosis',size_max=60)\nfig.show()\n","f1e3de21":"fig2=px.scatter(df,x='texture_worst',y= 'symmetry_worst',color='diagnosis',size_max=60)\nfig2.show()","6cddc764":"import plotly.figure_factory as ff\n\n\nhist_data = [df['radius_mean']]\ngroup_labels = ['distplot'] # name of the dataset\n\nfig = ff.create_distplot(hist_data, group_labels)\nfig.show()","808ae243":"fig, ax = plt.subplots(figsize=(20,15)) \nsns.heatmap(df.corr(),ax=ax,annot=True,linewidth=.5)","ab15d4c2":"X=df.iloc[:,2:].values\ny=df.iloc[:,1].values","c3bac4dd":"from sklearn.preprocessing import LabelEncoder,StandardScaler\nlabelencode = LabelEncoder()\ny=labelencode.fit_transform(y)","bde4e976":"#train test split\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=123)","92c12af1":"#applying standard scaler\nsc=StandardScaler()\nX_train=sc.fit_transform(X_train)\nX_test=sc.transform(X_test)","821ae85e":"X_train","af6d5733":"import keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense","353a529a":"classifier = Sequential()","4c8e2826":"#adding the input and first hidden layer\n\nclassifier.add(Dense(16, activation='relu', kernel_initializer='glorot_uniform',input_dim=30))\n\n#adding second layer\nclassifier.add(Dense(6, activation='relu', kernel_initializer='glorot_uniform'))\n\n#adding the output layer\nclassifier.add(Dense(1, kernel_initializer='uniform', activation='sigmoid'))","a444b9b3":"classifier.compile(optimizer='Adam',loss='binary_crossentropy',metrics=['accuracy'])","a35c2d66":"classifier.fit(X_train,y_train,batch_size=100,epochs=150)","0c0acf33":"y_pred=classifier.predict(X_test)\ny_pred = (y_pred>0.5)","6c4b0cd7":"from sklearn.metrics import accuracy_score\n\n\nprint(f\"The test accuracy is very high i.e.{accuracy_score(y_test,y_pred)}\")","981dbf09":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test,y_pred)\ncm","b76e9414":"sns.heatmap(cm,annot=True)\n","9d9d1d6c":"## Univariate Analysis","56040ae0":"## Multivariate Analysis","c0c1a602":"## Using Keras, We get a good model accuracy i.e. greater than 98%.","5eca849a":"### Distribution plot","78ebe19c":"# Keras for classification","253c330f":"**Attribute Information:**\n   * ID number\n   * Diagnosis (M = malignant, B = benign)\n   \n**Ten real-valued features are computed for each cell nucleus:**\n   * radius (mean of distances from center to points on the perimeter)\n   * texture (standard deviation of gray-scale values)\n   * perimeter\n   * area\n   * smoothness (local variation in radius lengths)\n   * compactness (perimeter^2 \/ area - 1.0)\n   * concavity (severity of concave portions of the contour)\n   * concave points (number of concave portions of the contour)\n   * symmetry\n   * fractal dimension (\"coastline approximation\" - 1)","ca810a2b":"### Scatterplot using plotly","4083ab48":"### Correlation metric","4de97657":"### If you like the work ,Upvote it.\n### Any suggestion is welcomed.","879c847b":"# Data Preprocessing","1d7f0a15":"# Exploratory Data analysis","a3e53794":"### 2.Negative Correlation","0ea02197":"### Positive Correlation","26c125ca":"![image.png](attachment:42e5c8f1-3222-471a-98f1-c282455d6bc5.png)"}}