{"cell_type":{"8690b5e1":"code","e30ea99d":"code","be2a7644":"code","50e60328":"code","d6ecf331":"code","c424fde2":"code","afd8b5b3":"code","00e69579":"code","55ae46f8":"code","51d9f73a":"code","976f0976":"markdown","1773f8de":"markdown"},"source":{"8690b5e1":"import os\nimport numpy as np \nimport pandas as pd \nimport json\nimport csv\nfrom csv import DictWriter","e30ea99d":"# extraire le chemin pour chaque fichier JSON\n\nList = []\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        List.append(os.path.join(dirname, filename))\n    \nprint(List)","be2a7644":"# On prend le fichier 10610.json comme un exemple \nList[0]","50e60328":"#lire le fichier avec python\n\nwith open(List[0]) as json_data:\n    print(type(json_data))","d6ecf331":"# Mettre les donn\u00e9es dans un dictionnaire\n#Pour stocker les donn\u00e9es du fichier JSON dans un dictionnaire python il existe la fonction load() du module python json\n\nwith open(List[0]) as json_data:\n    data_dict = json.load(json_data)\n    print(data_dict)","c424fde2":"#to --> chaine de caract\u00e8res\n#data_str = json.dumps(data_dict)\n#print(data_str)","afd8b5b3":"#Verifier les cles \nfor cle in data_dict['pageFiles']['1'].keys():\n    print (cle)","00e69579":"# Dans notre situation , on a un dictionnaire et des sous-dictionnaires\n# Alors il faut boucler sur les clefs du dictionnaire et des sous-dictionnaires pour l'extraire \n# On va se focaliser un peu plus sur le sous-dictionnaire \"vertices\" pour avoir les informaions utils\n\ndict_02 = data_dict['pageFiles']['1']['vertices']\ndict_02","55ae46f8":"# apres le chargement de fichier JSON dans un dictionnaire et pour extraire des ligne precis ,il faut les parcourir\n# par exemple : l'extraction le total a payer = \"824.9 $\" \n\nfor i in range(128):\n    if dict_02[i]['text'] == 'payer':\n        print(dict_02[i+2]['text'] + dict_02[i+3]['text'])","51d9f73a":"#j'ai utilis\u00e9 'or' not ' and' , parce que y a une petite diff\u00e9rence dans quelque 'y' dans les coordonn\u00e9es des mots qui sont dans la m\u00eame ligne\n\nlignes = [dict_02[0]['text']]\ndf_ligne = []\n\n# gravityCenter_ = dict_02[0]['gravityCenter']\n# edgeUpLeft_ = dict_02[0]['edgeUpLeft']\n# edgeUpRight_ = dict_02[0]['edgeUpRight']\n# edgeDownRight_ = dict_02[0]['edgeDownRight']\n# edgeDownLeft_ = dict_02[0]['edgeDownLeft']\n\n\nfor i in range(1,len(data_dict['pageFiles']['1']['vertices'])):\n    if ( dict_02[i-1]['gravityCenter'].get(\"y\") == dict_02[i]['gravityCenter'].get(\"y\") or \n         dict_02[i-1]['edgeUpLeft'].get(\"y\") == dict_02[i]['edgeUpLeft'].get(\"y\") or \n         dict_02[i-1]['edgeUpRight'].get(\"y\") == dict_02[i]['edgeUpRight'].get(\"y\") or \n         dict_02[i-1]['edgeDownRight'].get(\"y\") == dict_02[i]['edgeDownRight'].get(\"y\") or \n         dict_02[i-1]['edgeDownLeft'].get(\"y\") == dict_02[i]['edgeDownLeft'].get(\"y\")):\n        \n        lignes.append(dict_02[i]['text'])\n        \n    else:\n        x = ' '.join(lignes)\n        df_ligne.append(x)\n        lignes.clear()\n        lignes.append(dict_02[i]['text'])\n        \n        \n        \ndf_lignes = pd.DataFrame({'lignes':df_ligne})\ndf_lignes.head(10) # contient les lignes ","976f0976":"### nous avons observ\u00e9 que les mots qui sont dans la m\u00eame ligne avaient au moins un 'y'  similaire entre eux \n### dans les cordonn\u00e9es ( gravityCenter , edgeUpLeft , edgeUpRight , edgeDownRight , edgeDownLeft )","1773f8de":"# l\u2019extraction des lignes"}}