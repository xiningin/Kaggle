{"cell_type":{"651e945a":"code","3b40c2f4":"code","184ffee0":"code","cb904169":"code","8aba6855":"code","b514c5f6":"code","54a06fe3":"code","d9fd0d5c":"code","3aa6bc5e":"code","0c7f5742":"code","52f408d2":"code","060404ad":"code","bc46b25d":"code","c1165b62":"code","2b52411b":"code","348ccbdc":"code","659883c3":"code","08691457":"code","7d3f9f3e":"code","a6b4a117":"code","e78cbfa0":"code","b811f6fd":"code","853fdbc9":"code","a3ff2622":"code","df8fd94e":"code","154b317d":"code","a7d5f95e":"code","680da9f5":"code","33619450":"code","b31d560a":"code","bffc8f06":"code","f8d1503e":"code","ce25aacf":"code","365aa3b3":"code","0f91adbc":"code","aec37604":"code","05f95a70":"code","f35a79b4":"code","8da1b4ba":"code","ac110138":"code","fa777577":"code","e77f1839":"code","99776b9a":"code","1ab7459b":"code","065e2b92":"code","4e9ab2e8":"code","094f9902":"code","f5bdfc74":"code","b0e40ff4":"markdown","ca12ac07":"markdown","076ca14a":"markdown","770c6494":"markdown","3924c835":"markdown","974a5af2":"markdown","b47dbef8":"markdown","ba5f658e":"markdown","d2ce5a44":"markdown","dc897d03":"markdown","5648b0f6":"markdown","57be0b70":"markdown","9987a2d3":"markdown","ea019b09":"markdown","ac4f7bd8":"markdown","317ff571":"markdown","fac66209":"markdown","782d3009":"markdown","d89fba4d":"markdown","2b8f5094":"markdown"},"source":{"651e945a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport matplotlib.pyplot as plt\nimport seaborn as sns","3b40c2f4":"data = pd.read_csv('..\/input\/heart-disease-uci\/heart.csv')","184ffee0":"# Look at our dataset\ndata.head()","cb904169":"data.target.unique()","8aba6855":"# info method tells about the datatypes of all columns in the dataset.\ndata.info()","b514c5f6":"# It is a small dataset as you can see just 303 values\ndata.shape","54a06fe3":"data.describe()","d9fd0d5c":"X = data.iloc[:, 0:13].values\ny = data.iloc[:, 13].values","3aa6bc5e":"X","0c7f5742":"y","52f408d2":"from sklearn.ensemble import ExtraTreesClassifier","060404ad":"# n_estimator is parameter which try through all the dataset n times\nclf = ExtraTreesClassifier(n_estimators=100, random_state=0)","bc46b25d":"clf.fit(X, y)","c1165b62":"important_features = clf.feature_importances_","2b52411b":"important_features.max()","348ccbdc":"important_features","659883c3":"columns = data.columns","08691457":"cols = columns[0:13]","7d3f9f3e":"cols","a6b4a117":"plt.figure(figsize = (15, 5))\nplt.bar(cols, important_features, color = \"green\")\n\nplt.xlabel(\"Name of Columns\")\nplt.ylabel(\"Columns Importances\")\n\nplt.title(\"Important Features Graph\")\nplt.show()","e78cbfa0":"print(important_features)\nprint(cols)","b811f6fd":"important_columns = []\nfor i in range(len(important_features)):\n    if(important_features[i] >= 0.08):\n        important_columns.append(cols[i])","853fdbc9":"important_columns","a3ff2622":"X_new = data.iloc[:, [2, 7, 8, 9, 11, 12]].values","df8fd94e":"X_new","154b317d":"y","a7d5f95e":"from sklearn.model_selection import train_test_split","680da9f5":"X_train, X_test, y_train, y_test = train_test_split(X_new, y, test_size = 0.1)","33619450":"X_train","b31d560a":"y_train","bffc8f06":"X_test","f8d1503e":"y_test","ce25aacf":"from sklearn.tree import DecisionTreeClassifier as dtc","365aa3b3":"classifier = dtc(criterion='gini', splitter='best', max_depth=None, min_samples_split=2, \n                 min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_features=None, \n                 random_state=None, max_leaf_nodes=None, min_impurity_decrease=0.0, \n                 min_impurity_split=None, class_weight=None)","0f91adbc":"classifier.fit(X_train, y_train)","aec37604":"y_pred = classifier.predict(X_test)","05f95a70":"y_pred","f35a79b4":"y_test","8da1b4ba":"from sklearn.model_selection import cross_val_score\nscores = cross_val_score(classifier, X_train, y_train, cv=5)","ac110138":"scores","fa777577":"classifier.score(X_test, y_test)","e77f1839":"from sklearn.metrics import precision_score, recall_score, f1_score, accuracy_score\nfrom sklearn.metrics import confusion_matrix","99776b9a":"conf_matrix = confusion_matrix(y_true=y_test, y_pred=y_pred)","1ab7459b":"conf_matrix","065e2b92":"print('Precision: %.3f' % precision_score(y_test, y_pred))","4e9ab2e8":"print('Recall: %.3f' % recall_score(y_test, y_pred))","094f9902":"print('Accuracy: %.3f' % accuracy_score(y_test, y_pred))","f5bdfc74":"print('F1 Score: %.3f' % f1_score(y_test, y_pred))","b0e40ff4":"#### Accuracy Score","ca12ac07":"Till now we have done our preprocesings or Feature extractions and all.","076ca14a":"# Heart Disease Prediction\n\nThis Notebook has a model which tells a person have heart disease or not. And dataset includes all heart disease information. \nDataset Columns here are : \n* age\n* sex\n* chest pain type (4 values)\n* resting blood pressure\n* serum cholestoral in mg\/dl\n* fasting blood sugar > 120 mg\/dl\n* resting electrocardiographic results (values 0,1,2)\n* maximum heart rate achieved\n* exercise induced angina\n* oldpeak = ST depression induced by exercise relative to rest\n* the slope of the peak exercise ST segment\n* number of major vessels (0-3) colored by flourosopy\n* thal: 3 = normal; 6 = fixed defect; 7 = reversable defect\n","770c6494":"#### Cross Val Scores","3924c835":"This code is for finding the column name from data which has greater feature importances than a particular threshold value\n**Note : In this case it is 0.08**","974a5af2":"### Model Making","b47dbef8":"### Feature Engineering","ba5f658e":"#### Recall Score","d2ce5a44":"#### Import Relevent Libraries ","dc897d03":"As we can see that no need of preprocessing here. (Very Good).","5648b0f6":"Now we have our new X and y here. Yeah y is same as previous but X has some changes in it.","57be0b70":"Just look at the dataset it contains only integer values so **No need** to do any preprocessing in this.\n\nThen look at our Target values it is either 0 or 1 so **What is this**\nGuys : it is a classification problem as simple as that.","9987a2d3":"**Hope you guys enjoyed this notebook. Don't forget to Upvote this notebook.**\n\n**Thanks for reading.**","ea019b09":"#### F1 score","ac4f7bd8":"#### Importances of Features & Graph Plotting","317ff571":"**Extra Tree Classifier** is a classifier which gives us imoprtances of all features. Actually the story is it compare all the feature in finding of Target value individually. ","fac66209":"#### Confusion Matrix","782d3009":"##### Split our Dataset into X and y","d89fba4d":"### Splittion of Dataset into Train and Test","2b8f5094":"#### Precision Score"}}