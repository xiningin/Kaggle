{"cell_type":{"4ea4651e":"code","ea1f6bfb":"code","7c5663a0":"code","a2f3f115":"code","74a51ba1":"code","4a4be922":"code","8bee0c8e":"markdown","dcf11f97":"markdown"},"source":{"4ea4651e":"import numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom tensorflow.python import keras\n\nimg_rows, img_cols = 28, 28\nnum_classes = 10\n\ndef prep_data(raw, train_size, val_size):\n    y = raw[:, 0]\n    out_y = keras.utils.to_categorical(y, num_classes)\n    \n    x = raw[:,1:]\n    num_images = raw.shape[0]\n    out_x = x.reshape(num_images, img_rows, img_cols, 1)\n    out_x = out_x \/ 255\n    return out_x, out_y\n\nfashion_file = \"..\/input\/fashionmnist\/fashion-mnist_train.csv\"\nfashion_data = np.loadtxt(fashion_file, skiprows=1, delimiter=',')\nx, y = prep_data(fashion_data, train_size=50000, val_size=5000)","ea1f6bfb":"import tensorflow as tf\nfrom keras import backend as K\nfrom keras.layers import Convolution2D, Flatten, Dense, Input\nfrom keras.models import Model\n\ndef build_network(num_actions):\n    \n    inputs = Input(shape=(img_rows, img_cols, 1,))\n    model = Convolution2D(filters=12, kernel_size=(3,3),activation='relu')(inputs)\n    \n    model = Convolution2D(filters=12, kernel_size=(3,3), activation='relu',)(model)\n    model = Flatten()(model)\n    model = Dense(activation='relu', units=10)(model)\n    q_values = Dense(units=num_actions, activation='linear')(model)\n    m = Model(input=inputs, output=q_values)\n    return  m\n\nf_model = build_network(num_classes)\n","7c5663a0":"# Your code to compile the model in this cell\nf_model.compile(loss=keras.losses.categorical_crossentropy, optimizer='adam', metrics=['accuracy'])","a2f3f115":"# Your code to fit the model here\nf_model.fit(x,y, batch_size=100, epochs=4, validation_split=0.2)","74a51ba1":"fashion_test_file = \"..\/input\/fashionmnist\/fashion-mnist_test.csv\"\n\nfashion_test_data = np.loadtxt(fashion_file, skiprows=1, delimiter=',')\n\n\ndef prep_test_data(raw):    \n\n    x = raw[:,1:]\n    num_images = raw.shape[0]\n    out_x = x.reshape(num_images, img_rows, img_cols, 1)\n    out_x = out_x \/ 255\n    return out_x\n\n\ntest = prep_test_data(fashion_test_data)        \nprediction = f_model.predict(test)\n\nprint(prediction)","4a4be922":"print(prediction.shape)","8bee0c8e":"# Introduction\n\nYou've seen how to build a model from scratch to identify handwritten digits.  You'll now build a model to identify different types of clothing.  To make models that train quickly, we'll work with very small (low-resolution) images. \n\nAs an example, your model will take an images like this and identify it as a shoe:\n![Imgur](https:\/\/i.imgur.com\/GyXOnSB.png)","dcf11f97":"# Data Preparation\nThis code is supplied, and you don't need to change it. Just run the cell below."}}