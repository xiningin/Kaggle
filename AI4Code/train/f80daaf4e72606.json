{"cell_type":{"12c2e256":"code","93676312":"code","811164a6":"code","0f25007d":"code","2d304406":"code","41dce778":"code","76c8b118":"code","f488a887":"code","13a8ad24":"code","291b9ac2":"code","0fbaef0b":"code","109ae7d6":"code","3854e568":"code","99dbf4c4":"code","1a190f18":"code","84ff4df8":"code","d6cb4722":"code","08868de1":"code","b1133289":"code","de496252":"code","445f1526":"code","82e9f30f":"code","c4a7070d":"code","05e2462d":"code","ba227489":"code","38ccb90e":"code","0af3063a":"code","f70f6409":"code","a200d272":"code","44d9ff68":"code","7129cf3c":"code","f610f04e":"markdown","f227fa10":"markdown","5c20392f":"markdown","b7308895":"markdown","13acb614":"markdown","9a79c23c":"markdown","4b8fd0b1":"markdown","b034ddfb":"markdown","9b25b19f":"markdown","a1eb6bfc":"markdown","5824d5f3":"markdown","7924deac":"markdown","3288f124":"markdown","42ac9167":"markdown","6dd12b29":"markdown","4f96b01b":"markdown","1d9ea3e3":"markdown"},"source":{"12c2e256":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom matplotlib.colors import ListedColormap\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.metrics import accuracy_score, confusion_matrix\nfrom sklearn.neighbors import KNeighborsClassifier, NeighborhoodComponentsAnalysis , LocalOutlierFactor\nfrom sklearn.decomposition import PCA\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","93676312":"data=pd.read_csv(\"\/kaggle\/input\/breast-cancer-wisconsin-data\/data.csv\")","811164a6":"data.head()","0f25007d":"data.describe()","2d304406":"data.info()","41dce778":"data.columns","76c8b118":"data.drop(['id','Unnamed: 32'], inplace=True ,axis=1)","f488a887":"data.rename(columns= {\"diagnosis\":\"target\"}, inplace=True)","13a8ad24":"sns.countplot(data[\"target\"])\nplt.show()","291b9ac2":"data.target.value_counts()","0fbaef0b":"data[\"target\"]=[1 if i.strip()== \"M\" else 0 for i in data[\"target\"]]","109ae7d6":"data.target.unique()","3854e568":"data.shape","99dbf4c4":"corr_matrix= data.corr()\nsns.clustermap(corr_matrix, annot=True , fmt=\".2f\")\nplt.title(\"Correlation Between Features\")\nplt.show()","1a190f18":"threshold=0.75\nfiltre=np.abs(corr_matrix[\"target\"]> threshold)\ncorr_features=corr_matrix.columns[filtre].tolist()\nsns.clustermap(data[corr_features].corr(), annot=True, fmt=\".2f\")\nplt.title(\"Correlation Between Features w Corr Threshold 0.75\")\nplt.show()","84ff4df8":"data_melted=pd.melt(data, id_vars=\"target\", var_name=\"features\", value_name=\"value\")\nplt.figure(figsize=(10,8))\nsns.boxplot(x=\"features\", y=\"value\", hue=\"target\", data=data_melted)\nplt.xticks(rotation=90)\nplt.show()","d6cb4722":"sns.pairplot(data[corr_features], diag_kind=\"kde\", markers=\"+\", hue=\"target\")\nplt.show()","08868de1":"y=data.target\nx=data.drop([\"target\"], axis=1)\ncolumns=x.columns.tolist()","b1133289":"clf=LocalOutlierFactor()\ny_pred=clf.fit_predict(x)\nX_score=clf.negative_outlier_factor_\ny_pred","de496252":"outlier_score=pd.DataFrame()\noutlier_score[\"score\"]=X_score\noutlier_score.head()","445f1526":"outlier_score","82e9f30f":"threshold=-2.5\nfiltre=outlier_score[\"score\"]< threshold\noutlier_index=outlier_score[filtre].index.tolist()","c4a7070d":"plt.figure(figsize=(20,10))\nplt.scatter(x.iloc[outlier_index,0], x.iloc[outlier_index,1], color=\"blue\",s=50 ,label=\"outliers\")\nplt.scatter(x.iloc[:,0], x.iloc[:,1], color=\"k\", s=3 , label=\"Data Points\")\nradius=(X_score.max()-X_score)\/(X_score.max()-X_score.min())\noutlier_score[\"radius\"]=radius\nplt.scatter(x.iloc[:,0], x.iloc[:,1], s=1000*radius, edgecolors=\"r\", facecolors=\"none\", label=\"outlier scores\")\nplt.legend()\nplt.show()","05e2462d":"x=x.drop(outlier_index)\ny=y.drop(outlier_index).values","ba227489":"test_size=0.3\nX_train, X_test, Y_train, Y_test=train_test_split(x,y, test_size=test_size, random_state=42)","38ccb90e":"scaler=StandardScaler()\nX_train=scaler.fit_transform(X_train)\nX_test=scaler.transform(X_test)","0af3063a":"X_train_df=pd.DataFrame(X_train, columns=columns)\nX_train_df[\"target\"]=Y_train\n\ndata_melted=pd.melt(X_train_df, id_vars=\"target\", var_name=\"features\", value_name=\"value\")\nplt.figure(figsize=(20,10))\nsns.boxplot(x=\"features\", y=\"value\", hue=\"target\", data=data_melted)\nplt.xticks(rotation=90)\nplt.show()","f70f6409":"knn=KNeighborsClassifier(n_neighbors=2)\nknn.fit(X_train, Y_train)\ny_pred=knn.predict(X_test)\ncm= confusion_matrix(Y_test, y_pred)\nacc= accuracy_score(Y_test, y_pred)\nscore= knn.score(X_test,Y_test)\nprint(\"accuracy score:\",acc)\nprint(\"score:\",score)\nprint(\"confusion matrix:\", cm)","a200d272":"scaler=StandardScaler()\nx_scaled=scaler.fit_transform(x)\nnca=NeighborhoodComponentsAnalysis(n_components=2, random_state=42)\nnca.fit(x_scaled, y)\nx_reduced_nca=nca.transform(x_scaled)\nnca_data=pd.DataFrame(x_reduced_nca , columns=[\"p1\",\"p2\"])\nnca_data[\"target\"]=y\n","44d9ff68":"plt.figure(figsize=(10,5))\nsns.scatterplot(x=\"p1\", y=\"p2\" , hue=\"target\", data=nca_data)\nplt.title(\"NCA: p1 vs p2\")","7129cf3c":"x_train_nca, x_test_nca, y_train_nca, y_test_nca=train_test_split(x_reduced_nca,y, test_size=0.3, random_state=42)\nknn=KNeighborsClassifier(n_neighbors=2)\nknn.fit(x_train_nca, y_train_nca)\ny_pred_NCA=knn.predict(x_test_nca)\ncm= confusion_matrix(y_test_nca, y_pred_NCA)\nacc= accuracy_score(y_test_nca, y_pred_NCA)\nscore= knn.score(x_test_nca,y_test_nca)\nprint(\"accuracy score:\",acc)\nprint(\"score:\",score)\nprint(\"confusion matrix:\", cm)","f610f04e":"Id and Unnamed:32 columns are unnecessary for machine learning so we are gonna drop them.","f227fa10":"<a id=\"4\"><\/a>\n<font color='purple'>\n## Standardization","5c20392f":"<a id=\"5\"><\/a>\n<font color='purple'>\n## KNN","b7308895":"<a id=\"2\"><\/a>\n<font color='purple'>\n## Exporatory Data Analysis","13acb614":"<a id=\"3\"><\/a>\n<font color='purple'>\n## Outlier Detection","9a79c23c":"![](http:\/\/)<font color = 'purple'>\n    \n# Introduction\n<font color = 'black'>\n\nWe are gonna use KNN for this dataset.\n\n\n<font color = 'purple'>\n\nContent:\n1. [Load and Check Data](#1) \n1. [Exploratory Data Analysis](#2)\n1. [Outlier Detection](#3)\n1. [Train-Test Split](#4)\n1. [KNN](#5) \n1. [NCA](#6) ","4b8fd0b1":"Changing M to 1 and B to 0 for easier machine learning process.","b034ddfb":"I decided to change name of the column diagnosis with target.","9b25b19f":"It is too complicated like that. So i am gonna check the ones with correlation bigger than 0.75","a1eb6bfc":"Correlation:","5824d5f3":"Drop outliers:","7924deac":"-1's are outliers. 1's are inliers.","3288f124":"Pairplot:","42ac9167":"<a id=\"4\"><\/a>\n<font color='purple'>\n## Train Test Split","6dd12b29":"Box Plot:","4f96b01b":"<a id=\"1\"><\/a>\n<font color='purple'>\n## Load and Check Data","1d9ea3e3":"<a id=\"6\"><\/a>\n<font color='purple'>\n## NCA"}}