{"cell_type":{"1cbf774a":"code","efd99143":"code","96951add":"code","f464bec2":"code","12d1261a":"code","31af7fd7":"code","7118ae16":"code","a7e1c81c":"code","9741616e":"code","374878ee":"code","171c5203":"code","039da300":"code","488ce71e":"code","3013f810":"code","d8edc365":"code","136536ec":"markdown","0861b2d4":"markdown","c2559320":"markdown","b9bcebb6":"markdown","c8c7c978":"markdown","4401399b":"markdown","f952eea5":"markdown","e1f25831":"markdown"},"source":{"1cbf774a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","efd99143":"\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline","96951add":"\ndataset = pd.read_csv(\"\/kaggle\/input\/decision-tree-data-set-from-stack-abuse\/bill_authentication.csv\")","f464bec2":"\ndataset.shape","12d1261a":"dataset.head()","31af7fd7":"X = dataset.drop('Class', axis=1)\ny = dataset['Class']","7118ae16":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20)","a7e1c81c":"from sklearn.tree import DecisionTreeClassifier\nclassifier = DecisionTreeClassifier()\nclassifier.fit(X_train, y_train)","9741616e":"y_pred = classifier.predict(X_test)\n","374878ee":"from sklearn.metrics import classification_report, confusion_matrix\nprint(confusion_matrix(y_test, y_pred))\nprint(classification_report(y_test, y_pred))","171c5203":"from sklearn import metrics \nprint(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))","039da300":"pip install graphviz","488ce71e":"pip install pydotplus","3013f810":"pip install --upgrade scikit-learn==0.20.3","d8edc365":"from sklearn.tree import export_graphviz\nfrom sklearn.externals.six import StringIO  \nfrom IPython.display import Image  \nimport pydotplus\n\ndot_data = StringIO()\nexport_graphviz(classifier, out_file=dot_data,  \n                filled=True, rounded=True,\n                special_characters=True,feature_names = ['Variance','Skewness','Curtosis','Entropy'],class_names=['0','1'])\ngraph = pydotplus.graph_from_dot_data(dot_data.getvalue())  \ngraph.write_png('diabetes.png')\nImage(graph.create_png())","136536ec":"# preparing the data","0861b2d4":"# Importing libraries","c2559320":"# loading dataset","b9bcebb6":"# data analysis","c8c7c978":"# training and making predictions","4401399b":"# evaluating the algorithm","f952eea5":"# some intallations for printing the tree","e1f25831":"# code for printing the tree"}}