{"cell_type":{"fb9058cd":"code","cefad924":"code","a80a0555":"code","aa1d57ab":"code","ee6a88ba":"code","10bf94c3":"code","fbad459b":"code","2ab84dd1":"code","7f971c8d":"code","46d7af7d":"markdown","97a5b6f7":"markdown","317b2412":"markdown","3fc6d9e2":"markdown"},"source":{"fb9058cd":"#import library\nimport pandas as pd\nimport numpy as np\nimport datetime\nimport matplotlib.pyplot as plt\n#import library to create the Neural Network model and evaluate it:\nfrom sklearn.neural_network import MLPRegressor\nfrom sklearn.metrics import accuracy_score,mean_squared_error,mean_squared_log_error , r2_score\nfrom sklearn.preprocessing import StandardScaler \n#import library for Time series \nfrom statsmodels.tsa.api import  Holt","cefad924":"train = pd.read_csv('..\/input\/covid19-global-forecasting-week-1\/train.csv')\ntest = pd.read_csv('..\/input\/covid19-global-forecasting-week-1\/test.csv')\nsubmission = pd.read_csv('..\/input\/covid19-global-forecasting-week-1\/submission.csv')\n\nprint(\"Number of Country\/Region: \", train['Country\/Region'].nunique())\nprint(\"Dates go from day\", max(train['Date']), \"to day\", min(train['Date']), \", a total of\", train['Date'].nunique(), \"days\")","a80a0555":"fr_confirmed=train[train['Province\/State'] == 'France'].groupby(['Date']).agg({'ConfirmedCases':['sum']})\nfr_fatalities=train[train['Province\/State'] == 'France'].groupby(['Date']).agg({'Fatalities':['sum']})\n\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(15,5))\nfr_confirmed.plot(ax=ax1)\nax1.set_title(\"Global confirmed cases in french \", size=13)\nax1.set_ylabel(\"Number of cases\", size=13)\nax1.set_xlabel(\"Date\", size=13)\nfr_fatalities.plot(ax=ax2, color='red')\nax2.set_title(\"Global deceased cases in french\", size=13)\nax2.set_ylabel(\"Number of cases\", size=13)\nax2.set_xlabel(\"Date\", size=13)","aa1d57ab":"#prepare the data\nts=train[train['Province\/State'] == 'France']\ndata=ts['ConfirmedCases'].values\ndata1=ts['Fatalities'].values\n\n#define the range of date\nstart_date=ts['Date'].iloc[0]\nend_date=ts['Date'].iloc[-1]\nindex1= pd.date_range(start=start_date, end=end_date, freq='D')\n\n#make a panda data frame series\nconfirmed = pd.Series(data,index1)\nfatali = pd.Series(data1,index1)","ee6a88ba":"fit1 = Holt(confirmed).fit(smoothing_level=0.8, smoothing_slope=0.3, optimized=False)\nfcast1 = fit1.forecast(7).rename(\"Holt's linear trend\")\n\n\nfit2 = Holt(fatali).fit(smoothing_level=0.8, smoothing_slope=0.5, optimized=False)\nfcast2 = fit2.forecast(7).rename(\"Holt's linear trend\")\n\n\n#plot the graph\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(14,4))\n\nconfirmed.plot(color=\"black\",  ax=ax1)\nfit1.fittedvalues.plot(ax=ax1, color='blue')\nfcast1.plot(ax=ax1, color='green')\n\n\nax1.set_title(\"French confirmed cases\", size=13)\nax1.legend(['Actual cases','holts linear fitted','Predicted cases'], loc='upper left')\nax1.set_ylabel(\"Number of cases\", size=13)\nax1.set_xlabel(\"Date\", size=13)\n\n\nfatali.plot(color=\"black\", ax=ax2)\nfit2.fittedvalues.plot(ax=ax2, color='blue')\nfcast2.plot(ax=ax2, color='green')\n\n\nax2.set_title(\"French fatalities cases\", size=13)\nax2.legend(['Actual cases','holts linear fitted','Predicted cases'], loc='upper left')\nax2.set_ylabel(\"Number of cases\", size=13)\nax2.set_xlabel(\"Date\", size=13)\n\nplt.show()\n\nprint(\"metrics for Confirmed holt's linear:\")\nprint(\"mean squared log error:\",np.sqrt(mean_squared_log_error(confirmed,fit1.fittedvalues)))\nprint(\"r2 score:\",r2_score(confirmed,fit1.fittedvalues))\nprint('***************************************************************')\nprint(\"metrics for fatalities holt's linear:\")\nprint(\"mean squared log error:\",np.sqrt(mean_squared_log_error(fatali,fit2.fittedvalues)))\nprint(\"r2 score:\",r2_score(fatali,fit2.fittedvalues))","10bf94c3":"#prepare the data with the sum for all the china\nchina_conf=pd.DataFrame(train[train['Country\/Region'] == 'China'].groupby(['Date']).agg({'ConfirmedCases':['sum']}))\nchina_fata=pd.DataFrame(train[train['Country\/Region'] == 'China'].groupby(['Date']).agg({'Fatalities':['sum']}))\n\ndata3=np.array(china_conf)\ndata4=np.array(china_fata)\n\n#make a panda data frame series\nconfirmed_ch = pd.Series(data3[:,0],index1)\nfatal_ch = pd.Series(data4[:,0],index1)","fbad459b":"fit3 = Holt(confirmed_ch).fit(smoothing_level=0.8, smoothing_slope=0.3, optimized=False)\nfcast3 = fit3.forecast(7).rename(\"Holt's linear trend\")\n\n\nfit4 = Holt(fatal_ch).fit(smoothing_level=0.8, smoothing_slope=0.3, optimized=False)\nfcast4 = fit4.forecast(7).rename(\"Holt's linear trend\")\n\n\n#plot the graph\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(14,4))\n\nconfirmed_ch.plot(color=\"black\", ax=ax1)\nfit3.fittedvalues.plot(ax=ax1, color='blue')\nfcast3.plot(ax=ax1, color='green')\n\n\nax1.set_title(\"China confirmed cases\", size=13)\nax1.legend(['Actual cases','holts linear fitted','Predicted cases'], loc='lower right')\nax1.set_ylabel(\"Number of cases\", size=13)\nax1.set_xlabel(\"Date\", size=13)\n\n\nfatal_ch.plot(color=\"black\", ax=ax2)\nfit4.fittedvalues.plot(ax=ax2, color='blue')\nfcast4.plot(ax=ax2, color='green')\n\n\nax2.set_title(\"China fatalities cases\", size=13)\nax2.legend(['Actual cases','holts linear fitted','Predicted cases'], loc='lower right')\nax2.set_ylabel(\"Number of cases\", size=13)\nax2.set_xlabel(\"Date\", size=13)\n\nplt.show()\n\nprint(\"metrics for Confirmed holt's linear:\")\nprint(\"mean squared log error:\",np.sqrt(mean_squared_log_error(confirmed_ch,fit3.fittedvalues)))\nprint(\"r2 score:\",r2_score(confirmed_ch,fit3.fittedvalues))\nprint('***************************************************************')\nprint(\"metrics for fatalities holt's linear:\")\nprint(\"mean squared log error:\",np.sqrt(mean_squared_log_error(fatal_ch,fit4.fittedvalues)))\nprint(\"r2 score:\",r2_score(fatal_ch,fit4.fittedvalues))","2ab84dd1":"#prepare the data with the sum for all the china\nind_conf=pd.DataFrame(train[train['Country\/Region'] == 'India'].groupby(['Date']).agg({'ConfirmedCases':['sum']}))\nind_fata=pd.DataFrame(train[train['Country\/Region'] == 'India'].groupby(['Date']).agg({'Fatalities':['sum']}))\n\ndata5=np.array(ind_conf)\ndata6=np.array(ind_fata)\n\n#make a panda data frame series\nconfirmed_ind = pd.Series(data5[:,0],index1)\nfatal_ind = pd.Series(data6[:,0],index1)","7f971c8d":"fit5 = Holt(confirmed_ind).fit(smoothing_level=0.8, smoothing_slope=0.3, optimized=False)\nfcast5 = fit5.forecast(7).rename(\"Holt's linear trend\")\n\n\nfit6 = Holt(fatal_ind).fit(smoothing_level=0.8, smoothing_slope=0.5, optimized=False)\nfcast6 = fit6.forecast(7).rename(\"Holt's linear trend\")\n\n\n#plot the graph\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(14,4))\n\nconfirmed_ind.plot(color=\"black\", ax=ax1)\nfit5.fittedvalues.plot(ax=ax1, color='blue')\nfcast5.plot(ax=ax1, color='green')\n\n\nax1.set_title(\"India confirmed cases\", size=13)\nax1.legend(['Actual cases','holts linear fitted','Predicted cases'], loc='upper left')\nax1.set_ylabel(\"Number of cases\", size=13)\nax1.set_xlabel(\"Date\", size=13)\n\n\nfatal_ind.plot(color=\"black\", ax=ax2)\nfit6.fittedvalues.plot(ax=ax2, color='blue')\nfcast6.plot(ax=ax2, color='green')\n\n\nax2.set_title(\"India fatalities cases\", size=13)\nax2.legend(['Actual cases','holts linear fitted','Predicted cases'], loc='upper left')\nax2.set_ylabel(\"Number of cases\", size=13)\nax2.set_xlabel(\"Date\", size=13)\n\nplt.show()\n\nprint(\"metrics for Confirmed holt's linear:\")\nprint(\"mean squared log error:\",np.sqrt(mean_squared_log_error(confirmed_ind,fit5.fittedvalues)))\nprint(\"r2 score:\",r2_score(confirmed_ind,fit5.fittedvalues))\nprint('***************************************************************')\nprint(\"metrics for fatalities holt's linear:\")\nprint(\"mean squared log error:\",np.sqrt(mean_squared_log_error(fatal_ind,fit6.fittedvalues)))\nprint(\"r2 score:\",r2_score(fatal_ind,fit6.fittedvalues))","46d7af7d":"# Holt\u2019s Methods  for predict China  cases","97a5b6f7":"# Holt\u2019s Methods  for predict India  cases","317b2412":"holt's method is usefull for predict few days until one week.\nbut not enough to predict until 2020-04-23.","3fc6d9e2":"# Holt\u2019s Methods  for predict french  cases"}}