{"cell_type":{"869f19bc":"code","1fd40221":"code","89d3625b":"code","e721c0dc":"code","2d5b2d67":"code","fa3ba562":"code","e39d3f00":"code","d6f3af96":"code","33a29365":"code","7ba61b79":"code","519c57b1":"code","9450536f":"code","35b5e114":"code","c54e35a2":"code","2d0f0e00":"code","98a4c946":"code","c30c92d8":"code","c98b0aab":"code","575b38d9":"markdown","5e1400f8":"markdown","cda6594a":"markdown","7336129c":"markdown","e5f472a2":"markdown","a93008fd":"markdown","60714003":"markdown","fe40f988":"markdown","44565311":"markdown","e1570324":"markdown","59ecee21":"markdown","e3fae83a":"markdown","f4f83785":"markdown","5133dbad":"markdown","ba56ef62":"markdown","2a48f1fb":"markdown","86d3f751":"markdown","f5f55173":"markdown","45de1fb2":"markdown","6fc7b589":"markdown","00a63a00":"markdown","2ac3b8dd":"markdown","c12f75f6":"markdown","97b152d7":"markdown","f84087d5":"markdown","567592f8":"markdown","91b30b08":"markdown","f89b156c":"markdown","5936ba80":"markdown","b687de9a":"markdown"},"source":{"869f19bc":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\n\n# ommit one of the warnings\nimport warnings\nwarnings.filterwarnings(\"ignore\", message=\"Glyph 146 missing from current font.\")\npd.options.mode.chained_assignment = None\n\n# read the data\nesport = pd.read_csv(\"\/kaggle\/input\/esports-earnings\/EsportsEarnings_final.csv\", encoding = \"ISO-8859-1\")\n\nesport","1fd40221":"esport.info()","89d3625b":"esport.describe()","e721c0dc":"esport[esport['ReleaseDate']==esport['ReleaseDate'].min()]","2d5b2d67":"# checking if there are any entries with Relase date smaller then 1900 which should be imposible\nesport[esport.ReleaseDate<1900]","fa3ba562":"esport.loc[1576, 'ReleaseDate'] = 2011\nesport.describe()","e39d3f00":"esport.isnull().sum()","d6f3af96":"esport[[\"Year\", \"Month\", \"Day\"]] = esport.Date.str.split('-', expand=True)\nesport[[\"Year\", \"Month\", \"Day\"]] = esport[[\"Year\", \"Month\", \"Day\"]].astype(int)","33a29365":"# Data grouping and aggregation\nesport_counts = esport[[\"Game\", \"Tournaments\", \"ReleaseDate\", \"Earnings\", \"Genre\"]].groupby(\"Game\").agg({\"Tournaments\": np.sum, \"ReleaseDate\": np.mean, \n                                                                                                        \"Earnings\": np.sum, \"Genre\": lambda x:x.value_counts().index[0]})\nesport_counts.sort_values(\"Tournaments\", ascending=False, inplace=True)\nesport_counts.reset_index(inplace=True)\n\n# create figure\nfig, ax = plt.subplots(figsize=(30,15))\nax = sns.scatterplot(x = \"ReleaseDate\", y = \"Tournaments\", size = \"Earnings\", hue=\"Genre\", data=esport_counts, sizes=(100, 10000), alpha=.5)\n# find N games with the most numbers of tournaments\nmost_tournamets = esport_counts.nlargest(15, \"Tournaments\")\n# add annotation to found games\nfor line in range(0,esport_counts.shape[0]):\n    if esport_counts.Game[line] in list(most_tournamets.Game):\n        ax.text(esport_counts.ReleaseDate[line], esport_counts.Tournaments[line], esport_counts.Game[line], horizontalalignment='center', \n                size='x-large', color='black', weight='semibold')\n# modify legend\nhandles, labels = ax.get_legend_handles_labels()\nto_skip = len(np.unique(esport_counts.Genre))+2\nfor h in handles[to_skip:]:\n    sizes = [s \/ 100 for s in h.get_sizes()] # smaller Earnings scatter points on legend\n    label = h.get_label()\n    label = str(float(label)*100) +\" mln\"\n    h.set_sizes(sizes) # set them\n    h.set_label(label)\n#plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0., fontsize='large', title_fontsize='40') # bigger legend font size\nplt.legend(loc=2, fontsize='x-large')\nax.xaxis.label.set_size(20)\nax.xaxis.set_tick_params(labelsize='x-large')\nax.yaxis.label.set_size(20)\nax.yaxis.set_tick_params(labelsize='x-large')\nplt.rc('axes', labelsize=\"x-large\")    # fontsize of the axes labels\nplt.title(\"Game release date to number of overall tournaments with overall prize pools\", fontsize=24)\nplt.show()","7ba61b79":"import calendar\n# Data grouping and aggregation\nesport_dota2 = esport[esport[\"Game\"] == \"Dota 2\"]\nesport_dota2 = esport_dota2.groupby([\"Year\", \"Month\"]).agg({\"Tournaments\": np.sum, \"ReleaseDate\": np.mean, \"Earnings\": np.mean, \"Genre\": lambda x:x.value_counts().index[0]})\nesport_dota2.sort_values(\"Tournaments\", ascending=False, inplace=True)\nesport_dota2.reset_index(inplace=True)\nesport_dota2[\"Month name\"] = esport_dota2[\"Month\"].apply(lambda x: calendar.month_abbr[x])\n#esport_dota2[\"Date\"] = pd.to_datetime(esport_dota2[[\"Year\", \"Month\"]])]\nplt.figure(figsize=(25,10))\nplt.subplot(1,2,1)\nplt.title(\"Dota 2 amount of tournaments\", fontsize=24)\nax = sns.boxplot(x=\"Month name\", y=\"Tournaments\", data=esport_dota2)\nax.xaxis.label.set_size(20)\nax.xaxis.set_tick_params(labelsize='x-large')\nax.yaxis.label.set_size(20)\nax.yaxis.set_tick_params(labelsize='x-large')\nplt.subplot(1,2,2)\nplt.title(\"Dota 2 value of the rewards\", fontsize=24)\nax = sns.boxplot(x=\"Month name\", y=\"Earnings\", data=esport_dota2)\nax.xaxis.label.set_size(20)\nax.xaxis.set_tick_params(labelsize='x-large')\nax.yaxis.label.set_size(20)\nax.yaxis.set_tick_params(labelsize='x-large')\nplt.show()","519c57b1":"# Data grouping and aggregation\nesport_sc2 = esport[esport[\"Game\"] == \"StarCraft II\"]\nesport_sc2 = esport_sc2.groupby([\"Year\", \"Month\"]).agg({\"Tournaments\": np.sum, \"ReleaseDate\": np.mean, \"Earnings\": np.mean, \"Genre\": lambda x:x.value_counts().index[0]})\nesport_sc2.sort_values(\"Tournaments\", ascending=False, inplace=True)\nesport_sc2.reset_index(inplace=True)\nesport_sc2[\"Month name\"] = esport_sc2[\"Month\"].apply(lambda x: calendar.month_abbr[x])\n#esport_dota2[\"Date\"] = pd.to_datetime(esport_dota2[[\"Year\", \"Month\"]])]\nplt.figure(figsize=(25,10))\nplt.subplot(1,2,1)\nplt.title(\"StarCraft 2 amount of tournaments\")\nax = sns.boxplot(x=\"Month name\", y=\"Tournaments\", data=esport_sc2)\nax.xaxis.label.set_size(20)\nax.xaxis.set_tick_params(labelsize='x-large')\nax.yaxis.label.set_size(20)\nax.yaxis.set_tick_params(labelsize='x-large')\nplt.subplot(1,2,2)\nplt.title(\"StarCraft 2 value of the rewards\")\nax = sns.boxplot(x=\"Month name\", y=\"Earnings\", data=esport_sc2)\nax.xaxis.label.set_size(20)\nax.xaxis.set_tick_params(labelsize='x-large')\nax.yaxis.label.set_size(20)\nax.yaxis.set_tick_params(labelsize='x-large')\nplt.show()","9450536f":"esport_NF = esport.copy()\n# removing numbers, brackets, : and , signs\nesport_NF.Game = esport_NF.Game.str.split('\\s[+0-9()\\']').str[0]\nesport_NF.Game = esport_NF.Game.str.split('[:]').str[0]\n# removing greek letters\nesport_NF.replace(\"\\sIII|\\sII|\\sIV|\\sIX|\\sVI|\\sV|\\sXIII|\\sXII|\\sXI|\\sX|\\sI|\",'',regex=True, inplace=True)\n\n# Data grouping and aggregation\nesport_counts = esport_NF[[\"Game\", \"Tournaments\", \"ReleaseDate\", \"Earnings\", \"Genre\"]].groupby(\"Game\").agg({\"Tournaments\": np.sum, \"ReleaseDate\": np.mean, \n                                                                                                        \"Earnings\": np.sum, \"Genre\": lambda x:x.value_counts().index[0]})\nesport_counts.sort_values(\"Tournaments\", ascending=False, inplace=True)\nesport_counts.reset_index(inplace=True)\n\nesport_counts = esport_counts.nlargest(30, 'Tournaments')\nfig, ax = plt.subplots(figsize=(20,20))\nsns.barplot(esport_counts.Tournaments, esport_counts.Game)\nax.xaxis.tick_top()\nax.xaxis.label.set_size(20)\nax.xaxis.set_tick_params(labelsize='x-large')\nax.yaxis.label.set_size(20)\nax.yaxis.set_tick_params(labelsize='x-large')\nplt.show()","35b5e114":"fig, axes = plt.subplots(3, 3, figsize=(40,16))\nnames_MRG = game_money.Game[0:9]\nnames_MRG = iter(names_MRG)\nfor row in axes:\n    for col in row:\n        game_name = next(names_MRG)\n        game_esport = esport[esport[\"Game\"] == game_name]\n        game_esport = game_esport.groupby(\"Year\").mean()\n        game_esport.reset_index(inplace=True)\n        game_esport = game_esport[game_esport.Year != 2020] # 2020 has not ended\n        col.scatter(game_esport.Year, game_esport.Earnings)\n        col.plot(game_esport.Year, game_esport.Earnings)\n        col.set_title(game_name, size=26)","c54e35a2":"esport_domination = esport.groupby(\"Genre\").agg({\"Tournaments\": np.sum})\nesport_domination.reset_index(inplace=True)\nplt.figure(figsize=(26,6))\nax = sns.barplot(x=\"Genre\", y=\"Tournaments\", data = esport_domination)\nax.xaxis.label.set_size(20)\nax.xaxis.set_tick_params(rotation=90)\nax.xaxis.set_tick_params(labelsize='x-large')\nax.yaxis.label.set_size(20)\nax.yaxis.set_tick_params(labelsize='x-large')\nplt.show()","2d0f0e00":"# filter fighting games only and find its share in Tournaments\nesport_fight = esport[esport[\"Genre\"] == \"Fighting Game\"]\nesport_fight = esport_fight[[\"Game\", \"Tournaments\"]].groupby(by = \"Game\").sum()\nesport_fight[\"Share\"] = esport_fight[\"Tournaments\"] \/ esport_fight[\"Tournaments\"].sum()\n# def figure\nplt.figure(figsize=(20,5))\n# define cmap\ncmap = plt.get_cmap(\"Greens\")\ncmap = iter(cmap([i\/10 for i in range(10)]))\n# find biggest prized games - give them color\ncols = []\nlabs = []\nmostvalue = esport_fight.nlargest(10, 'Tournaments')\nfor i, gamename in enumerate(esport_fight.index):\n    if gamename in mostvalue.index:\n        cols.append(next(cmap))\n        labs.append(gamename)\n    else:\n        cols.append(\"gray\")\n        labs.append(\"\")\npatches, texts = plt.pie(esport_fight.Tournaments, labels=labs, colors=cols, radius=2, textprops={'fontsize': 12})\nplt.show()","98a4c946":"esport_fight_NF = esport_fight.copy()\nesport_fight_NF.reset_index(inplace=True)\n# removing numbers, brackets, : and , signs\nesport_fight_NF.Game = esport_fight_NF.Game.str.split('\\s[+0-9()\\']').str[0]\nesport_fight_NF.Game = esport_fight_NF.Game.str.split('[:]').str[0]\nesport_fight_NF.Game = esport_fight_NF.Game.str.split('\\sXX').str[0]\n# removing greek letters\nesport_fight_NF.replace(\"\\sIII|\\sII|\\sIV|\\sIX|\\sVI|\\sV|\\sXIII|\\sXII|\\sXI|\\sXX|\\sXrd|\\sX|\\sI|\",'',regex=True, inplace=True)\n#esport_fight_NF = esport_fight_NF.Game.str.findall(\"Street\\sFighter|Soul\\sCalibur|Super\\sSmash\\sBros|Guilty\\sGear\")\nexpresion = r\"Street\\sFighter|Soul\\sCalibur|Super\\sSmash\\sBros|Tekken|Dragon\\sBall|Dead\\sor\\sAlive|Guilty\\sGear\"\nesport_fight_NF[\"Game\"][esport_fight_NF.Game.str.contains(expresion)] = esport_fight_NF.Game.str.findall(expresion).str[0]\nesport_fight_NF = esport_fight_NF.groupby(\"Game\").sum()\n\nplt.figure(figsize=(20,5))\n# define cmap\ncmap = plt.get_cmap(\"Greens\")\ncmap = iter(cmap([i\/10 for i in range(10)]))\n# find biggest prized games - give them color\ncols = []\nlabs = []\nmostvalue = esport_fight_NF.nlargest(10, 'Tournaments')\nfor i, gamename in enumerate(esport_fight_NF.index):\n    if gamename in mostvalue.index:\n        cols.append(next(cmap))\n        labs.append(gamename)\n    else:\n        cols.append(\"gray\")\n        labs.append(\"\")\npatches, texts = plt.pie(esport_fight_NF.Tournaments, labels=labs, colors=cols, radius=2, textprops={'fontsize': 12})\n#plt.legend(patches, esport_fight_NF.index, loc=\"upper right\", bbox_to_anchor=(1,1),bbox_transform=plt.gcf().transFigure)\nplt.show()","c30c92d8":"# filter fighting games only and find its share Earnings\nesport_fight = esport[esport[\"Genre\"] == \"Fighting Game\"]\nesport_fight = esport_fight[[\"Game\", \"Earnings\"]].groupby(by = \"Game\").mean()\nesport_fight[\"Share\"] = esport_fight[\"Earnings\"] \/ esport_fight[\"Earnings\"].sum()\n# def figure\nplt.figure(figsize=(20,5))\n# define cmap\ncmap = plt.get_cmap(\"Reds\")\ncmap = iter(cmap([i\/10 for i in range(10)]))\n# find biggest prized games - give them color\ncols = []\nlabs = []\nmostvalue = esport_fight.nlargest(10, 'Earnings')\nfor i, gamename in enumerate(esport_fight.index):\n    if gamename in mostvalue.index:\n        cols.append(next(cmap))\n        labs.append(gamename)\n    else:\n        cols.append(\"gray\")\n        labs.append(\"\")\npatches, texts = plt.pie(esport_fight.Earnings, labels=labs, colors=cols, radius=2, textprops={'fontsize': 12})\n#plt.legend(patches, esport_fight.index, loc=\"upper right\", bbox_to_anchor=(1,1),bbox_transform=plt.gcf().transFigure)\nplt.show()","c98b0aab":"esport_fight_NF = esport_fight.copy()\nesport_fight_NF.reset_index(inplace=True)\n# removing numbers, brackets, : and , signs\nesport_fight_NF.Game = esport_fight_NF.Game.str.split('\\s[+0-9()\\']').str[0]\nesport_fight_NF.Game = esport_fight_NF.Game.str.split('[:]').str[0]\nesport_fight_NF.Game = esport_fight_NF.Game.str.split('\\sXX').str[0]\n# removing greek letters\nesport_fight_NF.replace(\"\\sIII|\\sII|\\sIV|\\sIX|\\sVI|\\sV|\\sXIII|\\sXII|\\sXI|\\sXX|\\sXrd|\\sX|\\sI|\",'',regex=True, inplace=True)\n#esport_fight_NF = esport_fight_NF.Game.str.findall(\"Street\\sFighter|Soul\\sCalibur|Super\\sSmash\\sBros|Guilty\\sGear\")\nexpresion = r\"Street\\sFighter|Soul\\sCalibur|Super\\sSmash\\sBros|Tekken|Dragon\\sBall|Dead\\sor\\sAlive|Guilty\\sGear\"\nesport_fight_NF[\"Game\"][esport_fight_NF.Game.str.contains(expresion)] = esport_fight_NF.Game.str.findall(expresion).str[0]\nesport_fight_NF = esport_fight_NF.groupby(\"Game\").sum()\n\nplt.figure(figsize=(20,5))\n# define cmap\ncmap = plt.get_cmap(\"Reds\")\ncmap = iter(cmap([i\/10 for i in range(10)]))\n# find biggest prized games - give them color\ncols = []\nlabs = []\nmostvalue = esport_fight_NF.nlargest(10, 'Earnings')\nfor i, gamename in enumerate(esport_fight_NF.index):\n    if gamename in mostvalue.index:\n        cols.append(next(cmap))\n        labs.append(gamename)\n    else:\n        cols.append(\"gray\")\n        labs.append(\"\")\npatches, texts = plt.pie(esport_fight_NF.Earnings, labels=labs, colors=cols, radius=2, textprops={'fontsize': 12})\n#plt.legend(patches, esport_fight_NF.index, loc=\"upper right\", bbox_to_anchor=(1,1),bbox_transform=plt.gcf().transFigure)\nplt.show()","575b38d9":"The most tournaments had **Starcraft II** as it is shown on the scatter plot. Right after, there is **Counter-Strike: Global Offensive** and **Super Smash Bros. Melee**.\n\nThe biggest prize overall prize pool had **Dota 2**. The interesting is the fact that despite having relativly early release date and the number of tournaments in between 500-1000, **Fortnite** overall prize pool is very big. \n\nBased on the plot *ReleaseDate* seems not to have any significant influence on the number of tournaments or the prize pool. From the logical point of view, *ReleaseDate* have influence on the number of tournaments but is not the most important factor.","5e1400f8":"# Data cleaning","cda6594a":"I am going to check which game had the most number of tournaments, which game had highest prize pool and show analyze does release date influenced them.","7336129c":"Usually more rewards are given to the **Soul Calibur** players. Right after is **Street fighter** and **Super Smash Bros.**","e5f472a2":"Without changes made to the encoding the data would not had been read. In the later stages of the analysis there was an issue with the glyph 146, as it is not crucial factor of analysis I have decided to omit the warning to ensure the analysis clarity.","a93008fd":"\nIn this step of analysis I have treated games individually but now I want to consider them as the series. For example I have **FIFA 08** and **FIFA 12**, I want to check how many tournaments of **FIFA** series had been through the course of the years. So I will filter out the numbers, the brackets and some signs using regex.","60714003":"**Forza Motorsport 4** is the only case so I will change it manualy.","fe40f988":"# Number of tournaments to prize pool and how does release date influence them.","44565311":"There are too many games to draw clear conclusions. To perceive any clarity I have coloured 10 games with the biggest incomes.","e1570324":"Clearly First-Person Shooter games dominates tournaments. Right after them are fighting games, which is interesting because only Smash Bros frenchies had been seen during any of the analysis, up to the currently considered.","59ecee21":"To enhance clarity I have only shown the 30 positions with the most number of tournaments. The **Starcraft** franchise had the most number of tournaments. Right after that thrives the **Counter-Strike**. \n\nIt no surprise, both of mentioned franchises has long history and are incredibly popular. The problematic are most of fighting games, they tend to have much complex names which are hard to filter out. Despite that the **Super Smash Bros** earned the third place of most played franchise on tournaments.","e3fae83a":"## <center> Work in progress, more content is yet to come :) <\/center>\n\n <center> <span style=\"font-size:larger;\"> I hope you have enjoyed reading this notebook, <\/span> <\/center>\n    <center> <span style=\"font-size:larger;\"> feel free to give feedback in any form :) <\/span> <\/center>","f4f83785":"# Date features extraction\nThe *Date* feature seams to consist of the day, month and a year of the event. I will split those information and store in the different columns.","5133dbad":"# Which gener dominates the tournaments?","ba56ef62":"There are no missing values in the data set.","2a48f1fb":"In order perceive any clarity I have coloured 10 games with the largest amount of tournaments. It is clear the **Super Smash Bros. Melee** dominates in terms of number of competitions. Fighting games franchises tends to have many releases in their history. Games released within the franchise **usually** contains similar characters with similar move sets. So now I am going to base my analysis on whole franchises.","86d3f751":"# Introduction\nThe term esport relates to sport competitions which are held with the use of video games. Esport competitions are mostly based on multi-player games but in some ocasions are held with the use of single player games. In recent the esport scene had developed rapidly. In this notebook I will analyse the development of the esport scene through the years 1998-2020.","f5f55173":"Through the months in the years 2011-2020 **Dota 2** did not show consistency in the number of tournaments. In the case of the rewards the lack of consitency is very noticable, in August the international **Dota 2** tournament is held and usually the prize pools are enormous. But I have to mention that this reward is splitted in between teams, their sponsors and the players, the individual player does not get 35 mln for winning the tournament.","45de1fb2":"# How does rewards of 9 biggest games evolve through the years?","6fc7b589":"**Forza Motorsport 4** were released in **2011** so the number 11 has to indicate to the 2011 year. I am going to change that so it will match notation of other release dates. But lets see if this a case with other titles.","00a63a00":"## Number of Tournaments in respect to other fighting games","2ac3b8dd":"On the other hand **StarCraft II** is very consistent in terms of amount of the tournaments. In case of rewards, the biggest rewards are usually given out in the November but the difference between the November rewards and others moths rewards is not that big as it was in the **Dota 2** case.","c12f75f6":"## Tournament prizes in respect to other fighting games","97b152d7":"All data types seems to be in right order. Features which are numbers are either int or float and categorical variables or names are objects. The *Date* is the only exception, in one of the following modules I am going to handle it.","f84087d5":"The 2020 has not ended so the information about earnings in this year is not considered in the plots. **Dota 2** is thriving and across the years rewards for **Dota 2** related completions are growing. **Fortnite** and **PUBG** are relatively new so there is not much data to show. **League of Legends** and **StarCraft** seems to have some drops in the rewards amount in the 2019.  \n\nThe most amazing is the fact that while the **Fortnite** and the **PUBG** are quite new games they have made into the top 6. What is more, the **Fortnite** is third in terms of prizes while being the least time on the market from the pool of considered titles.\n\n**Overwatch** and **Heartstone** shows positive trends where **Heroes of the Storm** rewards reached 0 value in 2019.\n","567592f8":"# Missing Values","91b30b08":"# Which fighting game and frenchise had the most tournaments? Which usually offers biggest prizes?[](http:\/\/)","f89b156c":"Now everything seems to be good, we may proceed.","5936ba80":"Almost all columns seems to have reasonable ranges of values. Besides the *ReleaseDate*, I am wondering which game was released in 11 year of our age...","b687de9a":"**Super Smash Bros.** frenchise has clearly the most tournaments of them all in the history. "}}