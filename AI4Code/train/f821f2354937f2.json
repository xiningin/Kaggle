{"cell_type":{"b5d65dc7":"code","8ea6586e":"code","4e271943":"code","dd3414f9":"code","b636615d":"code","9f4d1ced":"code","f14aebd2":"code","242e2612":"code","468a785f":"code","c760e489":"code","dc89537a":"markdown"},"source":{"b5d65dc7":"# Gets the data and stores it into \"train_data\" which is a Pandas dataframe (which is a spreadsheet)\nimport pandas as pd\n\ntrain_data_path = '..\/input\/housing-prices-competition-for-kaggle-learn-users\/train.csv'\ntrain_data = pd.read_csv(train_data_path) \ntrain_data.columns","8ea6586e":"# Gets the SalePrice data from our dataframe which is what we will be predicting\ny_train = train_data.SalePrice","4e271943":"# These are features we are going to use to predict the sales price\nfeatures = ['LotArea', 'YearBuilt', '1stFlrSF', '2ndFlrSF']","dd3414f9":"# We extract these features from the dataframe\nX_train = train_data[features]","b636615d":"# Handy utility function to explore the data\nX_train.describe()","9f4d1ced":"from sklearn.tree import DecisionTreeRegressor\n\n# We initialize our model which is a DecisionTreeRegressor which we will explain more about in later meetings\nmodel = DecisionTreeRegressor(random_state=1)\n\n# Training our model which is essentially our model looking at the data (X_train) and the correct sales prices (y_train) and then hopefully building connections so it can extrapolate and predict sales prices for houses it hasn't seen before\nmodel.fit(X_train, y_train)","f14aebd2":"# The predicted sales prices for the first 5 houses in the train data\nprint(\"Making predictions for the following 5 houses:\")\nprint(X_train.head())\nprint(\"The predictions are\")\nprint(model.predict(X_train.head()))","242e2612":"# Solution to Q2\n\npd.read_csv('..\/input\/housing-prices-competition-for-kaggle-learn-users\/test.csv')['LotArea'][0]","468a785f":"# Solution to Q4\n\ntrain_data['PoolArea'].describe()['mean']","c760e489":"# Solution to Q5\n\nmodel.predict(X_train[5:6:])[0]","dc89537a":"# **Solutions to Game**"}}