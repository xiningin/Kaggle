{"cell_type":{"b6b90bcd":"code","7e00e783":"code","1fe8145e":"code","79e4356c":"code","5c099fe6":"code","144c0eff":"code","b281cd0f":"code","99844362":"code","dddfe12b":"code","eaa45817":"code","508b10e3":"code","6b10faf9":"code","7613df5c":"code","d9bece7e":"code","23266f49":"code","9c82979c":"code","8191419a":"code","35bbb1d7":"code","ac971f00":"code","84069ef0":"code","6acc9555":"code","fd546214":"code","e858dfdd":"code","7477ecbe":"code","7332912c":"code","74bf2c4d":"code","3dd7f523":"code","6d14b8bd":"code","a64d3cbf":"code","54a5cb73":"code","e452d55d":"code","20712516":"code","a185c710":"code","e41ded5a":"code","70394902":"code","e40e461e":"code","2e934f46":"code","eb342dff":"code","0cb176c4":"code","03d35c8b":"code","e6228182":"code","00f5f76b":"code","18d3708b":"code","912223c4":"code","41adc49f":"code","4db9badb":"code","1da9e403":"code","cec8183b":"markdown","c942988c":"markdown","f77ad9de":"markdown","ae496010":"markdown","0709083d":"markdown","ed4c76a5":"markdown","dc6afa3b":"markdown","949a9c26":"markdown","c875ae71":"markdown","de05743f":"markdown","66f8540c":"markdown","53b97268":"markdown"},"source":{"b6b90bcd":"# Importing Libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport datetime\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport folium","7e00e783":"#Importing Datasets\nCovidIndia=pd.read_csv('..\/input\/covid19-in-india\/covid_19_india.csv')\nCovidVaccine=pd.read_csv('..\/input\/covid19-in-india\/covid_vaccine_statewise.csv')\nStateTesting=pd.read_csv('..\/input\/covid19-in-india\/StatewiseTestingDetails.csv')","1fe8145e":"CovidIndia.head(5) ","79e4356c":"CovidIndia[\"State\/UnionTerritory\"].unique()  #Finding unique names of State\/UnionTerritory","5c099fe6":"## Correcting State\/UnionTerritory names\nCovidIndia.drop(CovidIndia[CovidIndia['State\/UnionTerritory']==\"Unassigned\"].index, inplace = True)\nCovidIndia.drop(CovidIndia[CovidIndia['State\/UnionTerritory']==\"Cases being reassigned to states\"].index, inplace = True)\nCovidIndia.loc[CovidIndia[\"State\/UnionTerritory\"]==\"Karanataka\", \"State\/UnionTerritory\"]=\"Karnataka\"\nCovidIndia.loc[CovidIndia[\"State\/UnionTerritory\"]==\"Bihar****\", \"State\/UnionTerritory\"]=\"Bihar\"\nCovidIndia.loc[CovidIndia[\"State\/UnionTerritory\"]==\"Maharashtra***\", \"State\/UnionTerritory\"]=\"Maharashtra\"\nCovidIndia.loc[CovidIndia[\"State\/UnionTerritory\"]==\"Andaman and Nicobar Islands\", \"State\/UnionTerritory\"]=\"Andaman & Nicobar Island\"\nCovidIndia.loc[CovidIndia[\"State\/UnionTerritory\"]==\"Dadra and Nagar Haveli\", \"State\/UnionTerritory\"]=\"Dadara & Nagar Havelli\"\nCovidIndia.loc[CovidIndia[\"State\/UnionTerritory\"]==\"Dadra and Nagar Haveli and Daman and Diu\", \"State\/UnionTerritory\"]=\"Dadara & Nagar Havelli\"\nCovidIndia.loc[CovidIndia[\"State\/UnionTerritory\"]==\"Madhya Pradesh***\", \"State\/UnionTerritory\"]=\"Madhya Pradesh\"\nCovidIndia.loc[CovidIndia[\"State\/UnionTerritory\"]==\"Himanchal Pradesh\", \"State\/UnionTerritory\"]=\"Himachal Pradesh\"\nCovidIndia.loc[CovidIndia[\"State\/UnionTerritory\"]==\"Telengana\", \"State\/UnionTerritory\"]=\"Telangana\"\nCovidIndia.loc[CovidIndia[\"State\/UnionTerritory\"]==\"Jammu and Kashmir\", \"State\/UnionTerritory\"]=\"Jammu & Kashmir\"\nCovidIndia.loc[CovidIndia[\"State\/UnionTerritory\"]==\"Ladakh\", \"State\/UnionTerritory\"]=\"Jammu & Kashmir\"\nCovidIndia.loc[CovidIndia[\"State\/UnionTerritory\"]==\"Delhi\", \"State\/UnionTerritory\"]=\"NCT of Delhi\"\nCovidIndia.loc[CovidIndia[\"State\/UnionTerritory\"]==\"Arunachal Pradesh\", \"State\/UnionTerritory\"]=\"Arunanchal Pradesh\"","144c0eff":"CovidIndia.shape","b281cd0f":"CovidIndia.info()","99844362":"CovidIndia.count()  #Counting values of each column","dddfe12b":"# Dropping unuseful columns\nCovidIndia.drop( columns = ['Sno', 'ConfirmedIndianNational', 'ConfirmedForeignNational','Time'],axis=0, inplace  = True )\n# Declaring a new column as 'Active Cases'\nCovidIndia['Active Cases']= CovidIndia['Confirmed']-(CovidIndia['Cured']+CovidIndia['Deaths'])","eaa45817":"CovidIndia['Date'] = pd.to_datetime( CovidIndia['Date'])  #Converting Date column to DateTime format","508b10e3":"print(CovidIndia['Date'].max()-CovidIndia['Date'].min())  #Time Duration of data","6b10faf9":"CovidIndia.head()","7613df5c":"CovidCases=CovidIndia.groupby(\"Date\")[[\"Cured\",\"Deaths\",\"Confirmed\"]].sum().reset_index()","d9bece7e":"fig=px.line(CovidCases,x='Date',y=CovidCases.columns[1:4],)\nfig.update_layout(\n    title=\"Total Confirmed cases VS Total Cured Cases VS Total Deaths\",\n    xaxis_title=\"Time Period\",\n    yaxis_title=\"Cases\",\n    legend_title=\"Cases\",\n    font=dict(\n        size=14\n    )\n)\nfig.layout.template = 'presentation'\nfig.show()","23266f49":"pd.options.mode.chained_assignment = None\nCovidIndia['Date']= pd.to_datetime(CovidIndia['Date'])          \ndata_of_20 = CovidIndia.loc[CovidIndia.Date.dt.year==2020]           \ndata_of_21 = CovidIndia.loc[CovidIndia.Date.dt.year==2021]          \n\ndata_of_20['Month']=data_of_20['Date'].dt.month                   \ndata_of_21['Month']=data_of_21['Date'].dt.month  \n\ndata20= data_of_20.groupby('Month')[['Confirmed','Deaths','Cured']].sum() \ndata21= data_of_21.groupby('Month')[['Confirmed','Deaths','Cured']].sum() \n\ndata20.index=pd.to_datetime( data20.index , format = '%m').strftime( '%B' )\ndata21.index=pd.to_datetime( data21.index , format = '%m').strftime( '%B' )","9c82979c":"fig=px.line(data20,x=data20.index,y=data20.columns[0:3],)\nfig.update_layout(\n    title=\"Total Confirmed cases VS Total Cured Cases VS Total Deaths over the months in 2020\",\n    xaxis_title=\"Months\",\n    yaxis_title=\"Cases\/deaths\", \n    font=dict(\n        size=14\n    )\n)\nfig.update_traces(mode='markers+lines')\nfig.layout.template = 'presentation'\nfig.show()\n\nfig=px.line(data21,x=data21.index,y=data21.columns[0:3],)\nfig.update_layout(\n    title=\"Total Confirmed cases VS Total Cured Cases VS Total over the months Deaths in 2021\",\n    xaxis_title=\"Months\",\n    yaxis_title=\"Cases\/deaths\",\n    font=dict(\n        size=14\n    )\n)\nfig.update_traces(mode='markers+lines')\nfig.layout.template = 'presentation'\nfig.show()","8191419a":"statewise=CovidIndia.groupby(\"State\/UnionTerritory\")[[\"Confirmed\",\"Cured\",\"Deaths\"]].sum().reset_index()","35bbb1d7":"# Creating new columns\nstatewise[\"Recovery Rate\"] = statewise[\"Cured\"]*100 \/ statewise[\"Confirmed\"]\nstatewise[\"Mortality Rate\"] = statewise[\"Deaths\"]*100 \/ statewise[\"Confirmed\"]\nstatewise[\"Active Cases\"]= statewise[\"Confirmed\"]-(statewise[\"Cured\"]+statewise[\"Deaths\"])\nstatewise.style.background_gradient(cmap='RdBu_r')","ac971f00":"statewise1=statewise.copy(deep=True)\nstatewise1.loc[statewise1['Confirmed'] < 70000000, 'State\/UnionTerritory'] = 'Other states' \nfig = px.pie(statewise1, values='Confirmed', names='State\/UnionTerritory',width=800,height=500)\nfig.update_layout(\n    title=\"Distribution of Confirmed cases in various states\",\n    legend_title=\"States\",\n    font=dict(\n        size=14\n    )\n)\nfig.layout.template = 'presentation'\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","84069ef0":"fig=px.line(CovidIndia[CovidIndia['State\/UnionTerritory'].isin(['Maharashtra', 'Karnataka', 'Kerala', 'Tamil Nadu', 'Andhra Pradesh'])],x='Date',y='Active Cases',color='State\/UnionTerritory')\nfig.update_layout(\n    title=\"Trend of Active Cases in top 5 states\",\n    xaxis_title=\"Time Period\",\n    yaxis_title=\"Cases\",\n    legend_title=\"State\/UnionTerritory\",\n    font=dict(\n        size=14\n    )\n)\nfig.layout.template = 'presentation'\nfig.show()\n\nfig=px.line(CovidIndia[CovidIndia['State\/UnionTerritory'].isin(['Maharashtra', 'Karnataka', 'Kerala', 'Tamil Nadu', 'Andhra Pradesh'])],x='Date',y='Deaths',color='State\/UnionTerritory')\nfig.update_layout(\n    title=\"Trend of Deaths in top 5 states\",\n    xaxis_title=\"Time Period\",\n    yaxis_title=\"Deaths\",\n    legend_title=\"State\/UnionTerritory\",\n    font=dict(\n        size=14\n    )\n)\nfig.layout.template = 'presentation'\nfig.show()\n\nfig=px.line(CovidIndia[CovidIndia['State\/UnionTerritory'].isin(['Maharashtra', 'Karnataka', 'Kerala', 'Tamil Nadu', 'Andhra Pradesh'])],x='Date',y='Cured',color='State\/UnionTerritory')\nfig.update_layout(\n    title=\"Trend of Cured Cases in top 5 states\",\n    xaxis_title=\"Time Period\",\n    yaxis_title=\"Cases\",\n    legend_title=\"State\/UnionTerritory\",\n    font=dict(\n        size=14\n    )\n)\nfig.layout.template = 'presentation'\nfig.show()","6acc9555":"top10states=CovidIndia.pivot_table( index = 'State\/UnionTerritory', values = ['Confirmed'], aggfunc = 'sum' ).sort_values(by = ['Confirmed'],ascending=False).reset_index().head(10)\nfig = px.bar( top10states, x='State\/UnionTerritory',y='Confirmed', color ='State\/UnionTerritory',width=900, height=550) \nfig.update_layout(\n    title=\"Top 10 states with highest number of total confirmed cases\",\n    xaxis_title=\"State\/UnionTerritory\",\n    yaxis_title=\"Cases\",\n    legend_title=\"State\/UnionTerritory\",\n    font=dict(\n        size=14\n    )\n)\nfig.layout.template = 'presentation'\nfig.show()\n\nleast10states=CovidIndia.pivot_table( index = 'State\/UnionTerritory', values = ['Confirmed'], aggfunc = 'sum' ).sort_values(by = ['Confirmed'],ascending=True).reset_index().head(10)\nfig = px.bar( least10states, x='State\/UnionTerritory',y='Confirmed', color ='State\/UnionTerritory',width=1100, height=500) \nfig.update_layout(\n    title=\"Top 10 states with least number of total confirmed cases\",\n    xaxis_title=\"State\/UnionTerritory\",\n    yaxis_title=\"Cases\",\n    legend_title=\"State\/UnionTerritory\",\n    font=dict(\n        size=14\n    )\n)\nfig.layout.template = 'presentation'\nfig.show()","fd546214":"top15recovery=statewise.pivot_table( index = 'State\/UnionTerritory', values = 'Recovery Rate', aggfunc = 'sum' ).sort_values(by = ['Recovery Rate'],ascending=False).reset_index().head(15)\nfig = px.scatter(top15recovery, x='State\/UnionTerritory', y='Recovery Rate',color='State\/UnionTerritory',size='Recovery Rate',height=600,width=1100)\nfig.update_layout(\n    title=\"Recovery Rate in top 15 states\",\n    legend_title=\"States\",\n    font=dict(\n        size=14\n    )\n)\nfig.show()\n\ntop15mortality=statewise.pivot_table( index = 'State\/UnionTerritory', values = 'Mortality Rate', aggfunc = 'sum' ).sort_values(by = ['Mortality Rate'],ascending=False).reset_index().head(15)\nfig = px.scatter(top15mortality, x='State\/UnionTerritory', y='Mortality Rate',color='State\/UnionTerritory',size='Mortality Rate',height=600,width=1000)\nfig.update_layout(\n    title=\"Mortality Rate in top 15 states\",\n    legend_title=\"States\",\n    font=dict(\n        size=14\n    )\n)\nfig.show()","e858dfdd":"# Importing geojson file\nimport json\nstates_india=json.load(open(\"..\/input\/states-india\/states_india.geojson\",'r'))","7477ecbe":"state_id_map = {}\nfor feature in states_india[\"features\"]:\n    feature[\"id\"] = feature[\"properties\"][\"state_code\"]\n    state_id_map[feature[\"properties\"][\"st_nm\"]] = feature[\"id\"]\nstatewise[\"id\"] = statewise[\"State\/UnionTerritory\"].apply(lambda x: state_id_map[x])","7332912c":"# Plotting total Active Cases on Indian map\nfig = px.choropleth_mapbox(\n    statewise,\n    locations=\"id\",\n    geojson=states_india,\n    color=\"Active Cases\",\n    hover_name=\"State\/UnionTerritory\",\n    hover_data=[\"Active Cases\"],\n    title=\"Active Cases\",\n    mapbox_style=\"open-street-map\",\n    center={\"lat\": 24, \"lon\": 78},\n    zoom=2.5,\n    opacity=0.5\n)\nfig.show()","74bf2c4d":"# Plotting Mortality Rate on Indian map\nfig1 = px.choropleth_mapbox(\n    statewise,\n    locations=\"id\",\n    geojson=states_india,\n    color=\"Mortality Rate\",\n    hover_name=\"State\/UnionTerritory\",\n    hover_data=[\"Mortality Rate\"],\n    title=\"Mortality Rate\",\n    mapbox_style=\"open-street-map\",\n    center={\"lat\": 24, \"lon\": 78},\n    zoom=2.5,\n    opacity=0.5,\n)\nfig1.show()","3dd7f523":"StateTesting.head() ","6d14b8bd":"StateTesting.count()  #Counting values in the columns","a64d3cbf":"StateTesting.info()","54a5cb73":"Sample_Date=StateTesting.groupby(\"Date\")[\"TotalSamples\"].sum().reset_index()\n\nfig=px.line(Sample_Date,x='Date',y=\"TotalSamples\")\nfig.update_layout(\n    title=\"No. of Samples taken throughout the country\",\n    xaxis_title=\"Time Period\",\n    yaxis_title=\"Samples Taken\",\n    font=dict(\n        size=14\n    )\n)\nfig.layout.template = 'presentation'\nfig.show()","e452d55d":"State_Test1=StateTesting.groupby(\"State\")[[\"TotalSamples\"]].sum().reset_index()\nState_Test=State_Test1.copy(deep=True)\nState_Test.loc[State_Test[\"TotalSamples\"] < 2000000000, \"State\"] = \"Other states\" \nfig = px.pie(State_Test, values=\"TotalSamples\", names=\"State\",width=800,height=500)\nfig.update_layout(\n    title=\"Distribution of total samples taken in various states\",\n    legend_title=\"States\",\n    font=dict(\n        size=14\n    )\n)\nfig.layout.template = 'presentation'\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","20712516":"fig = px.bar(State_Test1,x=\"TotalSamples\", y=\"State\", orientation='h')\n\nfig.update_layout(\n    title_text='Number of Samples Tested ',\n    title_x=0.3,\n    autosize=False,\n    width= 1100,\n    height= 1000)\nfig.update_traces(marker_color='Blue')\nfig.show()","a185c710":"states=['Karnataka','Bihar','Tamil Nadu', 'Maharashtra','Uttar Pradesh','Andhra Pradesh']\nmh=StateTesting[StateTesting['State']=='Maharashtra']\nbi=StateTesting[StateTesting['State']=='Bihar']\nka=StateTesting[StateTesting['State']=='Karnataka']\ntn=StateTesting[StateTesting['State']=='Tamil Nadu']\nap=StateTesting[StateTesting['State']=='Andhra Pradesh']\nup=StateTesting[StateTesting['State']=='Uttar Pradesh']","e41ded5a":"from plotly.subplots import make_subplots\n\ntrace0 = go.Scatter(x=mh.Date, y=mh.TotalSamples,name='Maharashtra')\ntrace1 = go.Scatter(x=bi.Date, y=bi.TotalSamples,name='Bihar')\ntrace2 = go.Scatter(x=ka.Date, y=ka.TotalSamples,name='Karnataka')\ntrace3 = go.Scatter(x=tn.Date, y=tn.TotalSamples,name='Tamil Nadu')\ntrace4 = go.Scatter(x=ap.Date, y=ap.TotalSamples,name='Andhra Pradesh')\ntrace5 = go.Scatter(x=up.Date, y=up.TotalSamples,name='Uttar Pradesh')\n\nfig = make_subplots(rows=2, cols=3)\n\nfig.append_trace(trace0, row = 1, col = 1)\nfig.append_trace(trace1, row = 1, col = 2)\nfig.append_trace(trace2, row = 1, col = 3)\nfig.append_trace(trace3, row = 2, col = 1)\nfig.append_trace(trace4, row = 2, col = 2)\nfig.append_trace(trace5, row = 2, col = 3)\nfig.update_layout(\n    font=dict(\n        size=12,\n    )\n)\nfig.update_layout(\n    title=\"Comparison of total samples taken in top 6 states\",font=dict(\n        size=14\n    )\n)\nfig.show()","70394902":"CovidVaccine.head()","e40e461e":"CovidVaccine.info()","2e934f46":"CovidVaccine.isnull().sum()","eb342dff":"#Dropping unnecessary columns\nCovidVaccine=CovidVaccine[CovidVaccine.State!='India']\nCovidVaccine = CovidVaccine[CovidVaccine['Total Individuals Vaccinated'].notna()]\nCovidVaccine1= CovidVaccine.drop(labels=[\"Transgender(Individuals Vaccinated)\", \"Female(Individuals Vaccinated)\", \"Male(Individuals Vaccinated)\", \"60+ Years (Doses Administered)\", \"45-60 Years (Doses Administered)\",\"18-44 Years (Doses Administered)\"], axis=1)","0cb176c4":"CovidVaccine1.head()","03d35c8b":"CovidVaccine1['Updated On'] = pd.to_datetime(CovidVaccine1['Updated On'], format = '%d\/%m\/%Y')\nprint(max(CovidVaccine1['Updated On']))          #Last Updated date of the dataset","e6228182":"male = CovidVaccine1[\"Male (Doses Administered)\"].sum() \nfemale = CovidVaccine1[\"Female (Doses Administered)\"].sum()  \ntrans = CovidVaccine1[\"Transgender (Doses Administered)\"].sum()\n\nfig = px.pie(values=[male,female,trans], names=[\"Male Vaccinated\",\"Female Vaccinated\",\"Transgender\"],\n             width=800,height=500)\nfig.update_layout(\n    title=\"Gender ratio (Doses Administered)\",\n    legend_title=\"Gender\",\n    font=dict(\n        size=14\n    )\n)\nfig.layout.template = 'presentation'\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","00f5f76b":"top10vaccinate=CovidVaccine1.pivot_table( index = 'State', values = 'Total Individuals Vaccinated', aggfunc = 'sum' ).sort_values(by = ['Total Individuals Vaccinated'],ascending=False).reset_index().head(10)\nfig = px.bar( top10vaccinate, x='State',y='Total Individuals Vaccinated', color ='State',width=900, height=550) \nfig.update_layout(\n    title=\"Top 10 states with highest number of vaccinated individuals\",\n    xaxis_title=\"State\/UnionTerritory\",\n    yaxis_title=\"Doses\",\n    legend_title=\"State\/UnionTerritory\",\n    font=dict(\n        size=14\n    )\n)\nfig.layout.template = 'presentation'\nfig.show()","18d3708b":"doses=CovidVaccine1.pivot_table( index = 'State', values = ['First Dose Administered','Second Dose Administered'], aggfunc = 'sum' ).sort_values(by = ['First Dose Administered','Second Dose Administered'],ascending=False).reset_index().head(10)\ndoses.style.background_gradient(cmap='twilight')","912223c4":"fig=px.bar(doses,x='State',y=['First Dose Administered','Second Dose Administered'])\nfig.update_layout(\n    title=\"No. of doses Administered in top 10 states\",\n    xaxis_title=\"States\",\n    yaxis_title=\"Doses\",\n    font=dict(\n        size=14\n    )\n)\nfig.layout.template = 'presentation'\nfig.show()","41adc49f":"covaxin = CovidVaccine1[\" Covaxin (Doses Administered)\"].sum() \ncovidshield = CovidVaccine1[\"CoviShield (Doses Administered)\"].sum()  \n\nfig = px.pie(values=[covaxin,covidshield], names=[\"Covaxin\",\"Covidshield\"],\n             width=800,height=500,color_discrete_sequence=px.colors.qualitative.G10)\nfig.update_layout(\n    title=\"Vaccine (Doses Administered)\",\n    legend_title=\"Vaccine\",\n    font=dict(\n        size=14\n    )\n)\nfig.layout.template = 'presentation'\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","4db9badb":"age=CovidVaccine1.pivot_table( index = 'State', values = ['18-44 Years(Individuals Vaccinated)','45-60 Years(Individuals Vaccinated)','60+ Years(Individuals Vaccinated)'], aggfunc = 'sum' ).sort_values(by = ['18-44 Years(Individuals Vaccinated)','45-60 Years(Individuals Vaccinated)','60+ Years(Individuals Vaccinated)'],ascending=False).reset_index().head(15)\n\nfig=px.scatter(age,x='State',y=['18-44 Years(Individuals Vaccinated)','45-60 Years(Individuals Vaccinated)','60+ Years(Individuals Vaccinated)'])\nfig.update_layout(\n    title=\"No. of doses given to various age groups in top 15 states\",\n    xaxis_title=\"States\",\n    yaxis_title=\"Doses\",\n    font=dict(\n        size=14\n    )\n)\nfig.update_traces(marker_size=10)\nfig.show()","1da9e403":"totalvaccine=CovidVaccine1.pivot_table( index = 'Updated On', values = 'Total Individuals Vaccinated', aggfunc = 'sum' )\nfig=px.area(totalvaccine,x=totalvaccine.index,y='Total Individuals Vaccinated')\nfig.update_layout(\n    title=\"Total no. of individual vaccinated\",\n    xaxis_title=\"Time Period\",\n    yaxis_title=\"Doses\",\n    font=dict(\n        size=14\n    )\n)\nfig.layout.template = 'presentation'\nfig.show()","cec8183b":"# Conculsion\n**We all can see how this COVID-19 pandemic has turned the nation upside down. There is an emergent loss of human life at one end and on the other hand, people are losing their jobs and businesses are shutting down.\nIn such a tough time, what we all need to do is come together to fight against this pandemic. As they said, \u201cWhere there is Unity there is always Victory\u201d \u2013 this is the power of staying united.**","c942988c":"#### Importing Datasets\n\n* **covid_19_india.csv** file contains the COVID-19 cases at daily level.\n* **StatewiseTestingDetails.csv** file contains the Statewise testing details.\n* **covid_vaccine_statewise.csv** file contains data on the vaccination situation.\n* statesindia contains **states_india.geojson** json file which contains latitute and lonngitude of various states and union territories along with their non-spatial attributes (id, name, etc) for use in Plotly Choropleth maps.","f77ad9de":"In the beginning, coronavirus cases in India happened due to the abroad connection rather than transmission within the country. The first three infection cases occurred on 30th January 2020 and 3rd February 2020 in Kerala as they returned from Wuhan China.","ae496010":"# Covid 19 Testing\nInitially, the labs tested samples only from those with a travel history to 12 countries designated as high-risk, or those who had come in contact with anyone testing positive for the coronavirus, or showing symptoms as per the government guidelines. Testing for community transmission began on 15 March 2020. ","0709083d":"India tested 10 million samples for the coronavirus disease (Covid-19) in the first five-and-a-half months, between January 22, 2020 and July 5, 2020. The rate of testing gradually increased as no. of cases increased.","ed4c76a5":"Daily cases peaked mid-September 2020 with over 90,000 cases reported per-day, dropping to below 15,000 in January 2021. A second wave beginning in March 2021 was much more devastating than the first, with shortages of vaccines, hospital beds, oxygen cylinders and other medical supplies in parts of the country. By late April, India led the world in new and active cases. On 30 April 2021, it became the first country to report over 400,000 new cases in a 24-hour period.","dc6afa3b":"Maharashtra has administered the highest number of vaccine doses to date, followed by UP, Rajasthan, Gujarat.","949a9c26":"The top four states that have highest number of confirmed COVID-19 cases (which makes up 45% of total cases in the country) include Kerala, Maharashtra, Tamil Nadu and Karnataka.","c875ae71":"# Vaccination for Covid 19\nIndia began administration of COVID-19 vaccines on 19 January 2021. As of 22 January 2022, India has administered over 1.62 billion doses overall, including first, second and precautionary (booster) doses of the currently approved vaccines. In India, 91% of the eligible population has received at least one shot, and 67% of the eligible population is fully vaccinated.","de05743f":"# About COVID-19\nCoronavirus disease 2019 (COVID-19) is a contagious disease caused by severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2). The first known case was identified in Wuhan, China, in December 2019. The disease has since spread worldwide, leading to an ongoing pandemic. It took 67 days (\u223c7th march) to infect 1 lakh people from COVID-19, an additional 12 days (\u223c19th March) to infiltrate further 1 lakh and with a third invasion taking only 4 days (\u223c23rd March), indicating SARS-CoV-2 to be a highly transmissive type virus. COVID-19 not only killed people through virus incursion but also due to economic and mental collapse, where developing countries suffered from unemployment and hunger. India enforced 68 days of four-phased-lockdown starting from 24th March \u223c31st May to deal with COVID-19. \n\n**This notebook aims to perform exploratory data analysis on India's Covid-19 Situation.**\n\n![COVID-19 (2) (002).png](attachment:816140bd-902a-42c8-8ce7-f1c456704683.png)\n*Source: Wikipedia*","66f8540c":"# Covid 19 in India\nThe COVID-19 pandemic in India is a part of the worldwide pandemic of coronavirus disease 2019 (COVID-19) caused by severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2). As of 20 January 2022, according to official figures, India has the second-highest number of confirmed cases in the world (after the United States of America) with 39,543,328 reported cases of COVID-19 infection and the third-highest number of COVID-19 deaths (after the United States and Brazil) at 489,848 deaths. However these figures exhibit severe under-reporting.","53b97268":"Punjab has the highest mortality rate. \n"}}