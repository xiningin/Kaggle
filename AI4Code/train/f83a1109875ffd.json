{"cell_type":{"3bf3c671":"code","375a83bb":"code","2299e898":"code","fefcb7e7":"code","4c53c652":"code","1b06374c":"code","59650a98":"code","971dffec":"code","443bc58f":"code","dddf6f4b":"code","4a74a93e":"code","d40b47e8":"code","fba77e66":"code","66ad8a97":"code","70e89b67":"code","356525ac":"code","bda9a349":"code","896ad5dd":"code","77ae6225":"code","368ddf39":"code","56cf1b1d":"code","b988fa75":"code","88fec3f2":"code","c41b13cf":"markdown","e984bd61":"markdown","12054b43":"markdown","aeeb26d9":"markdown","9885c624":"markdown","c8fa908a":"markdown","65086847":"markdown","86ce15e3":"markdown","15862840":"markdown","6396117b":"markdown","10639af7":"markdown","d30a2b07":"markdown","3e7b428e":"markdown","58320ab0":"markdown","cb87fd58":"markdown","26053355":"markdown","b44ae8b9":"markdown","f4a5994e":"markdown"},"source":{"3bf3c671":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns","375a83bb":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","2299e898":"data_path = os.path.join(dirname, filename)\ndata = pd.read_csv(data_path)\ndata.head()","fefcb7e7":"data.shape","4c53c652":"data.isnull().sum()","1b06374c":"data.describe()","59650a98":"from sklearn.preprocessing import LabelEncoder\n\ndata_encoded = data.copy()\nle = LabelEncoder()\nfor col in data_encoded.columns:\n    data_encoded[col] = le.fit_transform(data_encoded[col]) \n    \ndata_encoded.head()","971dffec":"data_encoded.describe()","443bc58f":"data.columns","dddf6f4b":"import matplotlib.pylab as pylab\nparams = {'legend.fontsize': 'x-large',\n         'axes.labelsize': 'x-large',\n         'axes.titlesize':'x-large',\n         'xtick.labelsize':'x-large',\n         'ytick.labelsize':'x-large'}\npylab.rcParams.update(params)","4a74a93e":"def plot_col(col, hue=None, color=['red', 'lightgreen'], labels=None):\n    fig, ax = plt.subplots(figsize=(15, 7))\n    sns.countplot(col, hue=hue, palette=color, saturation=0.6, data=data, dodge=True, ax=ax)\n    ax.set(title = f\"Mushroom {col.title()} Quantity\", xlabel=f\"{col.title()}\", ylabel=\"Quantity\")\n    if labels!=None:\n        ax.set_xticklabels(labels)\n    if hue!=None:\n        ax.legend(('Poisonous', 'Edible'), loc=0)","d40b47e8":"class_dict = ('Poisonous', 'Edible')\nplot_col(col='class', labels=class_dict)","fba77e66":"shape_dict = {\"bell\":\"b\",\"conical\":\"c\",\"convex\":\"x\",\"flat\":\"f\", \"knobbed\":\"k\",\"sunken\":\"s\"}\nlabels = ('convex', 'bell', 'sunken', 'flat', 'knobbed', 'conical')\nplot_col(col='cap-shape', hue='class', labels=labels)","66ad8a97":"color_dict = {\"brown\":\"n\",\"yellow\":\"y\", \"blue\":\"w\", \"gray\":\"g\", \"red\":\"e\",\"pink\":\"p\",\n              \"orange\":\"b\", \"purple\":\"u\", \"black\":\"c\", \"green\":\"r\"}\nplot_col(col='cap-color', color=color_dict.keys(), labels=color_dict)","70e89b67":"plot_col(col='cap-color', hue='class', labels=color_dict)","356525ac":"surface_dict = {\"smooth\":\"s\", \"scaly\":\"y\", \"fibrous\":\"f\",\"grooves\":\"g\"}\nplot_col(col='cap-surface', hue='class', labels=surface_dict)","bda9a349":"def get_labels(order, a_dict):    \n    labels = []\n    for values in order:\n        for key, value in a_dict.items():\n            if values == value:\n                labels.append(key)\n    return labels","896ad5dd":"odor_dict = {\"almond\":\"a\",\"anise\":\"l\",\"creosote\":\"c\",\"fishy\":\"y\",\n             \"foul\":\"f\",\"musty\":\"m\",\"none\":\"n\",\"pungent\":\"p\",\"spicy\":\"s\"}\norder = ['p', 'a', 'l', 'n', 'f', 'c', 'y', 's', 'm']\nlabels = get_labels(order, odor_dict)      \nplot_col(col='odor', color=color_dict.keys(), labels=labels)","77ae6225":"stalk_cats = ['class', 'stalk-root', 'stalk-surface-above-ring', 'stalk-surface-below-ring', \n              'stalk-color-above-ring', 'stalk-color-below-ring']\ndata_cats = data_encoded[stalk_cats]\nsns.pairplot(data_cats, hue='class', kind='reg')","368ddf39":"fig, ax = plt.subplots(3, 2, figsize=(20, 15))\nfor i, axis in enumerate(ax.flat):\n    sns.distplot(data_cats.iloc[:, i], ax=axis)","56cf1b1d":"pop_dict = {\"abundant\":\"a\",\"clustered\":\"c\",\"numerous\":\"n\",\"scattered\":\"s\",\"several\":\"v\",\"solitary\":\"y\"}\nhab_dict = {\"grasses\":\"g\",\"leaves\":\"l\",\"meadows\":\"m\",\"paths\":\"p\",\"urban\":\"u\",\"waste\":\"w\",\"woods\":\"d\"}","b988fa75":"f, ax = plt.subplots(figsize=(15, 10))\norder = list(data['population'].value_counts().index)\npop_labels = get_labels(order, pop_dict)\nexplode = (0.0,0.01,0.02,0.03,0.04,0.05)\ndata['population'].value_counts().plot.pie(explode=explode , autopct='%1.1f%%', labels=pop_labels, shadow=True, ax=ax)\nax.set_title('Mushroom Population Type Percentange');","88fec3f2":"f, ax = plt.subplots(figsize=(15, 10))\norder = list(data['habitat'].value_counts().index)\nhab_labels = get_labels(order, hab_dict)\nexplode = (0.0,0.01,0.02,0.03,0.04,0.05, 0.06)\ndata['habitat'].value_counts().plot.pie(explode=explode, autopct='%1.1f%%', labels=hab_labels, shadow=True, ax=ax)\nax.set_title('Mushroom Habitat Type Percentange');","c41b13cf":"* **Check for any NAN values**","e984bd61":"## Data Handel\n* **Import main libraries for Visualizations and data handels**","12054b43":"* **Show text data descriptions**","aeeb26d9":"* **<p>Plot pairwise relationships in a mushrooms for each stalk categorize.<\/p>**","9885c624":"* **Between habitat and population**","c8fa908a":"* **Show data size**","65086847":"* **Show data columns**","86ce15e3":"* **Number of mushrooms based on \"odor\"**","15862840":"* * **Plot count value of  columns function**","6396117b":"* **Walk into input file path **","10639af7":"## Visualizations\n* **Set Visualizations function and params**","d30a2b07":"* **Import data**","3e7b428e":"# Content:\n## 1. Data handel:\n   * Import data  \n   * Work with data\n   * Check for NAN values\n   * Encode data\n   * Show data descriptions\n   \n## 2. Visualizations:\n   * Set Visualizations function and params\n   * Plot count value of  columns function\n   * Visualize the number of mushrooms for each cap categorize.\n   * Number of mushrooms based on \"odor\"\n   * Plot pairwise relationships in a mushrooms for each stalk categorize\n   * Between habitat and population","58320ab0":"<h3>Thanks for being here, if you find it useful <span style=\"color:red\">UPVOTE<\/span>  it, feel free in comment<\/h3>","cb87fd58":"* **Visualize the number of mushrooms for each cap categorize.**","26053355":"* **Visualize the distribution in a mushrooms for each stalk categorize.**","b44ae8b9":"* **Encode texted data to can describe it**","f4a5994e":"<center><h1 style=\"color:red\">Mushroom Exploration (EDA with Visualizations)<\/h1>\n<h2>BY\/ Kassem@elcaiseri<h2><\/center>"}}