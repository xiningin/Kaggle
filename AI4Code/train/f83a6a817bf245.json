{"cell_type":{"c4c7fd65":"code","5c0b1809":"code","52559961":"code","41dc063a":"code","93c76880":"code","1b91d522":"code","18f52b2a":"code","217aff7b":"code","139c7cd2":"code","5556fbec":"code","c24dd919":"code","8e430e3a":"code","1f60a0c9":"code","8272235b":"code","70cb2821":"code","8f83665c":"code","0cf264fc":"code","60f98a1f":"code","4caa7fba":"markdown","5290a78f":"markdown","16eaa130":"markdown","7ca8b606":"markdown","6c3dd726":"markdown","36973b3b":"markdown","47914858":"markdown","cef46590":"markdown","5d21ffe9":"markdown","04d4dfe2":"markdown","90219188":"markdown","70028b62":"markdown","220f177c":"markdown","c6bf5fdc":"markdown","1a35381a":"markdown","27996520":"markdown","1dd98638":"markdown","a75c9809":"markdown","f57a181a":"markdown"},"source":{"c4c7fd65":"import pandas as pd\nfrom scipy import stats\nimport numpy as np\n\npd.plotting.register_matplotlib_converters()\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\n# Impoting interactive visualization modules\nfrom plotly import __version__\nimport cufflinks as cf\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\n\ninit_notebook_mode(connected=True)\ncf.go_offline()","5c0b1809":"# Read the stock data file\nstock_df = pd.read_csv('..\/input\/ml-prediction\/stock.csv', index_col='Date', parse_dates=True)\nstock_df.head()\n","52559961":"stock_df.iplot(title = 'visual of the stock prices')","41dc063a":"normalized_data = stock_df\/stock_df.iloc[0,:]","93c76880":"normalized_data.iplot(title = 'normalized visual of the stock prices')","1b91d522":"# Let's create random portfolio weights\n# Portfolio weights must sum to 1 \n\n# Set random seed\n# np.random.seed(101)\nnp.random.seed()\n\n# Create random weights for the stocks and normalize them\nweights = np.array(np.random.random(9))\n\n# Ensure that the sum of all weights are = 1\nweights = weights \/ np.sum(weights) \n(weights)","18f52b2a":"# Normalize the stock avalues \ndf_portfolio = normalized_data.copy()\ndf_portfolio","217aff7b":"df_portfolio = df_portfolio * weights\ndf_portfolio = df_portfolio * 1000000\ndf_portfolio ","139c7cd2":"# Let's create an additional column that contains the sum of all $ values in the portfolio\ndf_portfolio['daily worth in_$'] = df_portfolio.sum(axis=1)\ndf_portfolio","5556fbec":"# Let's calculate the portfolio daily return \ndf_portfolio['portfolio daily return'] = ((df_portfolio['daily worth in_$'] \/ df_portfolio['daily worth in_$'].shift(1)) -1).fillna(0) * 100 # multiply by 100 for % value\ndf_portfolio","c24dd919":"# Plot the portfolio daily return\ndf_portfolio['portfolio daily return'].iplot(title = 'Portfolio Daily % Return')","8e430e3a":"# Plot all stocks (normalized)\ndf_portfolio[df_portfolio.columns[:-2]].iplot()","1f60a0c9":"# Print out a histogram of daily returns\ndf_portfolio['portfolio daily return'].iplot(kind='hist', title = 'histogram of daily returns')","8272235b":"df_portfolio","70cb2821":"# Cummulative return of the portfolio (Note that we now look for the last net worth of the portfolio compared to it's start value)\ncumlative_return = ((df_portfolio['daily worth in_$'][-1] - df_portfolio['daily worth in_$'][0]) \/ df_portfolio['daily worth in_$'][0]) * 100 # multiply by 100 for % value\nprint('Cummulative return of the portfolio is {} %'.format(cumlative_return))","8f83665c":"# Calculate the portfolio standard deviation\nprint('Standard deviation of the portfolio is {}'.format(df_portfolio['portfolio daily return'].std()))","0cf264fc":"# Calculate the average daily return \nprint('Average daily return of the portfolio is {} %'.format(df_portfolio['portfolio daily return'].mean() ))","60f98a1f":"# Portfolio sharpe ratio\nsharpe_ratio = df_portfolio['portfolio daily return'].mean() \/ df_portfolio['portfolio daily return'].std() * np.sqrt(252)\nprint('Sharpe ratio of the portfolio is {}'.format(sharpe_ratio))","4caa7fba":"![alt text](https:\/\/drive.google.com\/uc?id=1qLML-ejBIKR8Bv8aeItfNaJuhq5GzvJ5)","5290a78f":"**This is Portfolio Assets Allocation and Statistical Data Analysis Exercise from `Python & Machine Learning for Financial Analysis` Course on Udemy**","16eaa130":"![alt text](https:\/\/drive.google.com\/uc?id=1SfBtfOoDigo4ofEvPAwIojqGHpMojL5S)","7ca8b606":"## TASK #2: IMPORT LIBRARIES & DATASETS AND PERFORM DATA VISUALIZATION","6c3dd726":"## TASK #3: UNERSTAND THE CONCEPT OF ASSET ALLOCATION","36973b3b":"## TASK #6: PERORM PORTFOLIO DATA VISUALIZATION","47914858":"![alt text](https:\/\/drive.google.com\/uc?id=17SLLaxLeP6vlXH6MltEQMFNbt5u-J6iK)","cef46590":"## TASK #7: UNDERSTAND PORTFOLIO STATISTICAL METRICS (CUMMULATIVE RETURN, AVERAGE DAILY RETURN, AND SHARPE RATIO)","5d21ffe9":"![alt text](https:\/\/drive.google.com\/uc?id=1iR3WYvU9SYVRqhKwR91x0AsE5sGQtFhz)[](http:\/\/)","04d4dfe2":"![alt text](https:\/\/drive.google.com\/uc?id=12e4Zgxv1FNviJYML88G6cTnlte0bts-4)","90219188":"## TASK #8: CALCULATE PORTFOLIO STATISTICAL METRICS (CUMMULATIVE RETURN, AVERAGE DAILY RETURN, AND SHARPE RATIO)","70028b62":"#TASK #1: PROJECT OVERVIEW AND ASSET TYPES","220f177c":"![alt text](https:\/\/drive.google.com\/uc?id=10XxwtKY2qEiNAdTkqNXKhNFZrWvwwKbN)","c6bf5fdc":"**MINI CHALLENGE #1:** \n- **Use Plotly express to visualize raw stock data and normalized ones** ","1a35381a":"![alt text](https:\/\/drive.google.com\/uc?id=1TEVVCFWQD8F5mlC7FzD-JM2y54ivYZHT)","27996520":"![alt text](https:\/\/drive.google.com\/uc?id=1QQLWpIJ8uXopJrV40YFKb5H-SxnmsRaj)","1dd98638":"![alt text](https:\/\/drive.google.com\/uc?id=1Z253Wmij7HCEHqPsMdEI56qYqASRrsjn)\n","a75c9809":"![alt text](https:\/\/drive.google.com\/uc?id=1W_MNP2Qldn3ulrvXivOnjQg3NTf3hNCo)","f57a181a":"## TASK #4: PERFORM RANDOM ASSET ALLOCATION AND CALCULATE PORTFOLIO DAILY RETURN"}}