{"cell_type":{"46fd73e3":"code","3bd9b8e0":"code","f423ae61":"code","2c10279f":"code","fde9966b":"code","f9c4c6dc":"code","bf6ab815":"code","d68d7520":"code","46022a28":"code","464aa004":"code","a8ffbb89":"code","a51d4648":"code","914798f5":"code","e5177efa":"code","ff81b69f":"code","bc540f5b":"code","edfae5e8":"code","f82a8501":"code","25984f6d":"code","f0c9bd84":"code","0ae0fa27":"code","060565c1":"code","e1f76551":"code","5b397233":"code","cb936191":"code","72793911":"code","1fa28151":"code","82f2d1ec":"code","caf593ad":"code","94bf37a9":"code","db6db7ee":"code","3eeb704a":"code","787127f7":"code","db9d5d69":"code","3236cce3":"code","ef957da7":"code","9e84809e":"code","e90204ec":"code","9d20899c":"code","abde59f0":"code","1dddc88b":"code","07d8daa4":"code","59679c53":"code","e6841bc4":"code","f18ac9a0":"code","bb92a7fd":"code","56380e82":"code","bee0ce1e":"code","5adee811":"code","20109c8e":"code","96a208e8":"code","274ea1ee":"code","cccab571":"code","cb6125e1":"code","d714e0d7":"code","e5220e54":"code","d9c626cb":"code","07d42fce":"code","fc15a3fc":"code","d107bf60":"code","cdc95330":"code","b05e3279":"code","3717511d":"code","c2c762ee":"code","6d82d56e":"code","426dd697":"code","82be920b":"code","6b05044c":"markdown"},"source":{"46fd73e3":"import matplotlib.pyplot as plt","3bd9b8e0":"import pandas as pd\n","f423ae61":"df = pd.read_csv('..\/input\/solar-power-generation-data\/Plant_1_Weather_Sensor_Data.csv')\ndf","2c10279f":"df.info()","fde9966b":"df['DATE_TIME'] = pd.to_datetime(df['DATE_TIME'],format = '%Y-%m-%d %H:%M')  # Converting Datetime COlumn from object to datetime format\ndf['DATE'] = pd.to_datetime(df['DATE_TIME'],format = '%Y-%m-%d %H:%M').dt.date # Splitting DateTime into Date\ndf['DATE'] = pd.to_datetime(df['DATE']) # Convert Date into DateTime format\ndf.info()","f9c4c6dc":"df.nunique()","bf6ab815":"df['DATE']","d68d7520":"df.columns","46022a28":"import matplotlib.pyplot as plt\n#plt.plot(x,y)\nplt.figure(figsize=(12,8))\nplt.plot(df['DATE_TIME'],df['AMBIENT_TEMPERATURE'],label ='AMBIENT',c='cyan')\nplt.plot(df['DATE_TIME'],df['MODULE_TEMPERATURE'],label ='MODULE',c='orange')\nplt.plot(df['DATE_TIME'],df['MODULE_TEMPERATURE']-df['AMBIENT_TEMPERATURE'],label ='DIFFERENCE',c='k')\nplt.grid()\nplt.margins(0.05)\nplt.legend()","464aa004":"import matplotlib.pyplot as plt\n#plt.plot(x,y)\nplt.figure(figsize=(20,10))\nplt.plot(df['DATE_TIME'],df['AMBIENT_TEMPERATURE'].rolling(window=20).mean(),label ='AMBIENT',c='cyan')\nplt.plot(df['DATE_TIME'],df['MODULE_TEMPERATURE'].rolling(window=20).mean(),label ='MODULE',c='orange')\nplt.plot(df['DATE_TIME'],(df['MODULE_TEMPERATURE']-df['AMBIENT_TEMPERATURE']).rolling(window=20).mean(),label ='DIFFERENCE',c='k')\nplt.grid()\nplt.margins(0.05)\nplt.legend()","a8ffbb89":"plt.figure(figsize=(20,10))\nplt.plot(df['AMBIENT_TEMPERATURE'],df['MODULE_TEMPERATURE'],marker = 'o',linestyle='')\nplt.show()","a51d4648":"plt.figure(figsize=(20,10))\nplt.scatter(df['AMBIENT_TEMPERATURE'],df['MODULE_TEMPERATURE'],c=df['AMBIENT_TEMPERATURE'],alpha =0.5)\n#alpha is for transparency (0 for full transparent, and 1 for solid color)\nplt.show()","914798f5":"df['DATE']","e5177efa":"dates = df['DATE'].unique()\ndates","ff81b69f":"dates[0]\nprint(dates[0])","bc540f5b":"#irradiation =0 it means it is night time\n  #           >0 it means it is day time","edfae5e8":"data = df[df['DATE'] == dates[0]][df['IRRADIATION']>0]\ndata","f82a8501":"data = df[df['DATE'] == dates[0]][df['IRRADIATION']>0]\ndata\nplt.plot(data['AMBIENT_TEMPERATURE'],data['MODULE_TEMPERATURE'])","25984f6d":"data = df[df['DATE'] == dates[0]][df['IRRADIATION']>0]\ndata\nplt.plot(data['AMBIENT_TEMPERATURE'],data['MODULE_TEMPERATURE'],marker = 'o',linestyle='',label = pd.to_datetime(dates[0],format = '%Y-%m-%d').date())\nplt.legend()","f0c9bd84":"plt.figure(figsize=(20,10))\nfor date in dates:\n    data = df[df['DATE'] == date][df['IRRADIATION']>0]\n    plt.plot(data['AMBIENT_TEMPERATURE'],data['MODULE_TEMPERATURE'],marker = 'o',linestyle='',label = pd.to_datetime(date,format = '%Y-%m-%d').date())\nplt.legend()","0ae0fa27":"df1 = pd.read_csv('..\/input\/solar-power-generation-data\/Plant_1_Generation_Data.csv')\ndf1","060565c1":"df1.info()","e1f76551":"#15-05-2020 00:00 \ndf1['DATE_TIME'] = pd.to_datetime(df1['DATE_TIME'],format = '%d-%m-%Y %H:%M')  # Converting Datetime COlumn from object to datetime format\ndf1['DATE'] = pd.to_datetime(df1['DATE_TIME'],format = '%d-%m-%Y %H:%M').dt.date # Splitting DateTime into Date\ndf1['DATE'] = pd.to_datetime(df1['DATE']) # Convert Date into DateTime format\ndf1.info()","5b397233":"inv_lst= df1['SOURCE_KEY'].unique()\ninv_lst\n","cb936191":"df1['SOURCE_KEY'].nunique()","72793911":"df1.groupby('SOURCE_KEY')['TOTAL_YIELD'].max()","1fa28151":"\n\n\n\n\n#Plot bar graph of sourcekey vs total yield for a particular inverter\nplt.figure(figsize= (20,10))\nplt.bar(inv_lst,df1.groupby('SOURCE_KEY')['TOTAL_YIELD'].max())\nplt.xticks(rotation = 90)\nplt.grid()\nplt.show()\n\n\n# Add x lable,y label ,legend ,play around with colours","82f2d1ec":"df.info()\n","caf593ad":"df","94bf37a9":"df1.info()","db6db7ee":"r_left= pd.merge(df1,df,on= 'DATE_TIME',how='left')\nr_left","3eeb704a":"r_left.info()","787127f7":"r_left.isnull().sum()","db9d5d69":"# i want to know how many missing values are present in Ambient_temperature\nr_left['AMBIENT_TEMPERATURE'].isnull().value_counts()","3236cce3":"# display null data for evry column \nr_left.isnull().value_counts()\n","ef957da7":"null_data = r_left[r_left.isnull().any(axis = 1)]   # you have 1 assignmnet program based on this\nnull_data","9e84809e":"#plot a graph of Irradiation vs DC Power\nplt.plot(r_left['IRRADIATION'],r_left['DC_POWER'],c='orange',marker ='o',linestyle='',alpha = 0.05,label ='DC POWER')\nplt.legend()\nplt.xlabel('irradiation')\nplt.ylabel('dc power')\nplt.show()","e90204ec":"#1.plot the graph Module temperature vs DC Power","9d20899c":"r_left.info()","abde59f0":"dates = r_left['DATE_x'].unique()\ndates","1dddc88b":"ndates = r_left['DATE_x'].nunique()\nndates","07d8daa4":"r_left[r_left['DATE_x']==dates[0]][r_left['IRRADIATION']>0.1]","59679c53":"data = r_left[r_left['DATE_x']== dates[1]][r_left['IRRADIATION']>0.1]\nplt.plot(data['MODULE_TEMPERATURE'],data['DC_POWER'],marker ='o',linestyle='',label = pd.to_datetime(dates[1],format='%Y-%m-%d').date)\nplt.legend()","e6841bc4":"r_left","f18ac9a0":"r_left.info()","bb92a7fd":"r_left['IRRADIATION']= r_left['IRRADIATION'].fillna(0)\nr_left['AMBIENT_TEMPERATURE']= r_left['AMBIENT_TEMPERATURE'].fillna(0)\nr_left['MODULE_TEMPERATURE']= r_left['MODULE_TEMPERATURE'].fillna(0)\n\n","56380e82":"r_left.info()","bee0ce1e":"r_left.isnull().count()","5adee811":"# extract one column\nX = r_left.iloc[:,12:13].values   #Irradiation\ny =r_left.iloc[:,3].values        #DC POWER","20109c8e":"X.ndim","96a208e8":"y.ndim","274ea1ee":"plt.scatter(X,y)","cccab571":"X.shape","cb6125e1":"y.shape","d714e0d7":"# Linear Regression\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size = 0.2,random_state = 0)","e5220e54":"X_train.shape","d9c626cb":"X_test.shape","07d42fce":"y_train.shape\n","fc15a3fc":"y_test.shape","d107bf60":"from sklearn.linear_model import LinearRegression\nlin_reg =LinearRegression()\nlin_reg.fit(X_train,y_train)","cdc95330":"y_pred =lin_reg.predict(X_test)\ny_pred","b05e3279":"y_test","3717511d":"#plot input test vs output test\n#plot input test vs predicted test\n\nplt.scatter(X_test,y_test,color ='gray')\nplt.scatter(X_test,y_pred,color ='red')\nplt.show()","c2c762ee":"lin_reg.coef_   #slope  m","6d82d56e":"lin_reg.intercept_  #y intercept","426dd697":"lin_reg.predict([[0.9]])","82be920b":" # y = mx+c\n13223.52483583*0.9+75.70664797947302 ","6b05044c":"Linear : y = mx+c ,where m ->slope ,c as intercept"}}