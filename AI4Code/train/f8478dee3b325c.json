{"cell_type":{"9b70f3a6":"code","4817072b":"code","24d8587f":"code","ad8eabb3":"code","c8a6f572":"code","8f87b244":"code","5d7ec398":"code","75d2b122":"code","609ade33":"code","b33d4e81":"code","a3ce9e2b":"code","8e7d2534":"code","df4600c0":"code","2ed08537":"code","638d065c":"code","ebae6a86":"code","152ffb04":"code","44f6d689":"code","719ee237":"code","408d4b9d":"code","6fc52d02":"code","9673a4a2":"code","1947fea0":"code","0c2ae7e0":"code","35a0dba9":"code","7fa94cb3":"code","ed80a888":"markdown","b3344d3b":"markdown","a9fad235":"markdown"},"source":{"9b70f3a6":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom pandas import DataFrame\nfrom numpy import nan as NA\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_absolute_error\nimport time,datetime\nimport re\n\nimport os\n\n#Load datasets\nfilepath=\"..\/input\/new.csv\";\nhouse_data=pd.read_csv(\"..\/input\/new.csv\",encoding=\"gbk\")\nname=os.listdir(\"..\/input\")\n\nprint(\"%s has been loaded as house_data\" %str(name)[2:-2])\n# Any results you write to the current directory are saved as output.","4817072b":"# \u5904\u7406tradeTime,\u5c06\u65e5\u671f\u53d8\u6210\u65f6\u95f4\u6233\uff0c\u7136\u540e\u518d\u75282017-01-01\u7684\u65f6\u95f4\u6233\u51cf\u4e4b\ntimeStamp=[]\ntimeSub=time.strptime(\"2017-01-01\", \"%Y-%m-%d\")\nstampSub= int(time.mktime(timeSub))\n\ntradeTime_copy=house_data[\"tradeTime\"]\n\nfor i in range(len(house_data[\"tradeTime\"])):\n    timeArray = time.strptime(str(tradeTime_copy[i]), \"%Y-%m-%d\")\n    stamp= (int(stampSub-time.mktime(timeArray)))\/86400\n    timeStamp.append(stamp)\n    \nhouse_data[\"tradeTime\"]=timeStamp\n    \n","24d8587f":"#\u5904\u7406floor\uff0c\u76f4\u63a5\u63d0\u53d6\u91cc\u9762\u7684\u6570\u5b57\uff0c\u4e5f\u53ef\u5c06\u91cc\u9762\u7684\u201c\u9876\u201d\u3001\u201c\u9ad8\u201d\u3001\u201c\u4e2d\u201c\u3001\u201d\u4f4e\u201c\u3001\u201d\u5e95\u201c\u7b49\u5173\u952e\u5b57\u63d0\u53d6\u51fa\u6765\uff0c\u53e6\u5916\u589e\u52a0\u4e00\u5217\u4f5c\u4e3a\u4e00\u4e2a\u65b0\u7684\u7279\u5f81\uff0c\n#floor\u91cc\u9762\u6709\u5f02\u5e38\u6570\u636e\uff0c\u6bd4\u5982\u201d\u6df7\u51dd\u94a2\u6784\u201c\nfloor_list=[]\nfloor_copy=house_data[\"floor\"]\n\nfor i in range(len(floor_copy)):\n    if re.findall('(\\d+)',str(floor_copy[i])):\n        f1=re.findall('(\\d+)',str(floor_copy[i]))\n        f1_int=int(f1[0])\n        floor_list.append(f1_int)\n    else:\n        floor_list.append(-1)#32\u4e2a\n\nhouse_data[\"floor\"]=floor_list","ad8eabb3":"def process_raw_data(raw_data,columns_selected):\n    house_select_columns=raw_data[columns_selected]\n       \n    with_NAME_row=house_select_columns.index[house_select_columns[\"livingRoom\"]==\"#NAME?\"].tolist()\n    house_select_columns=house_select_columns.drop(with_NAME_row,axis=0)\n    with_weizhi_row=house_select_columns.index[house_select_columns[\"constructionTime\"]==\"\u672a\u77e5\"].tolist()\n    house_select_columns=house_select_columns.drop(with_weizhi_row,axis=0)\n#   with_nan_row=house_select_columns.index[house_select_columns[\"buildingType\"].isnull()].tolist()\n#   house_select_columns=house_select_columns.drop(with_nan_row,axis=0)\n    \n    house_select_columns[\"drawingRoom\"]=house_select_columns[\"drawingRoom\"].astype(\"float\")\n    house_select_columns[\"bathRoom\"]=house_select_columns[\"bathRoom\"].astype(\"float\")\n    house_select_columns[\"livingRoom\"]=house_select_columns[\"livingRoom\"].astype(\"float\")\n    \n#   \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n    #\u7b2c\u4e00\u79cd\u65b9\u6cd5\uff1a\u5220\u9664\u6240\u6709\u542b\u6709NaN\u7684\u884c\uff0cMAE:5307.469156248709\n    house_selected_columns=house_select_columns.dropna(axis=0)\n#   \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n#   \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n    #\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u5229\u7528Imputation\u51fd\u6570\uff0c\u7528\u5e73\u5747\u503c\u4ee3\u66ff\u7f3a\u5931\u7684\u503c,MAE:4280.556089258759\n    my_imputer = SimpleImputer()\n    house_selected_columns = pd.DataFrame(my_imputer.fit_transform(house_select_columns))\n    house_selected_columns.columns = house_select_columns.columns\n#   \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n#   \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n#     #\u7b2c\u4e09\u79cd\u65b9\u6cd5\uff0c\u589e\u52a0\u4e00\u4e2a\u5217,MAE:4377.901482918298\n#     cols_with_missing = [col for col in house_select_columns.columns\n#                      if house_select_columns[col].isnull().any()]\n        \n#     for col in cols_with_missing:\n#         house_select_columns[col + '_was_missing'] = house_select_columns[col].isnull()\n    \n#     my_imputer = SimpleImputer()\n#     house_selected_columns = pd.DataFrame(my_imputer.fit_transform(house_select_columns))\n#     house_selected_columns.columns = house_select_columns.columns\n#   \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014    \n\n    y_selected=house_selected_columns[\"price\"]\n    X_selected=house_selected_columns.drop([\"price\"],axis=1)\n    \n    return X_selected,y_selected","c8a6f572":"columns_selected=[\"Lng\",\"Lat\",\"square\",\"tradeTime\",\"DOM\",\"followers\",\"livingRoom\",\"drawingRoom\",\"kitchen\",\n                  \"bathRoom\",\"floor\",\"buildingType\",\"constructionTime\",\"renovationCondition\",\"buildingStructure\",\n                  \"ladderRatio\",\"district\",\"price\"]\nX,y=process_raw_data(house_data,columns_selected)\n#X=house_select_columns.select_dtypes(exclude=\"object\")#\u9009\u62e9\u4e0d\u662fobject\u7c7b\u578b\u7684\u7279\u5f81\n# X.head()","8f87b244":"#fiveYearsProperty\u5bf9\u4ef7\u683c\u5f71\u54cd\u4e0d\u5927\n# house_data[\"fiveYearsProperty\"].describe()\n# s1=house_data.index[house_data[\"fiveYearsProperty\"]==1].tolist()\n# s2=house_data.index[house_data[\"fiveYearsProperty\"]==0].tolist()\n# house_data[\"price\"][s1].describe()\n# house_data[\"price\"][s2].describe()","5d7ec398":"\n# house_data.describe()\n# house_data[\"DOM\"].describe()\n#with_nan_row=X.index[X[\"livingRoom\"].isnull()].tolist()\n#print(len(with_nan_row))\n# house_data=house_data.dropna()\n\n# house_data.describe()\n#plt.figure(figsize=(16,10))\n#sns.scatterplot(x=DOM_data,y=house_data[\"price\"])\n#print(len(with_nan_row))\n#This dataset has totally 318851 samples,some features like DOM, buildingType,elevator,fiveYearsProperty,\n#subway,communityAverage have less than 318851 statistical datas.\n#X.describe()\n#with_weizhi_row=X.index[X[\"DOM\"]==1].tolist()\n#len(with_weizhi_row)\n\n#X.head()\n#X.describe()\n#y.describe()\n#X['drawingRoom'].describe()\n#X['livingRoom'].describe()\n#X['bathRoom'].describe()\n#len(X.index[X[\"buildingType\"].isnull()].tolist())\n#X['buildingType'].unique()#\u6709nan\n#np.isnan(X['drawingRoom']).unique()\n#X.isnull().any()","75d2b122":"X_train, X_valid, y_train, y_valid = train_test_split(X, y, train_size=0.8, test_size=0.2,random_state=0)","609ade33":"# Function for comparing different approaches\ndef score_dataset(X_train, X_valid, y_train, y_valid,n_estimators):\n    model = RandomForestRegressor(n_estimators=n_estimators,max_depth=25, min_samples_split=120,min_samples_leaf=20,max_features=7 ,oob_score=True,random_state=1)\n    model.fit(X_train, y_train)\n    preds = model.predict(X_valid)\n    \n    #plt.figure(figsize=(10,10))\n    #sns.scatterplot(x=preds,y=y_valid)\n    #sns.jointplot(x=preds,y=y_valid,kind=\"hex\")\n    return mean_absolute_error(y_valid, preds)\n# max_depth=25, min_samples_split=120,min_samples_leaf=20,max_features=7 ,oob_score=True","b33d4e81":"# for i in [20]:\n#     print(score_dataset(X_train,X_valid, y_train, y_valid,i))\n","a3ce9e2b":"#house_data[\"followers\"].isnull().unique()\n#url\tid\tLng\tLat\tCid\ttradeTime\tDOM\tfollowers\n#totalPrice\tprice\tsquare\tlivingRoom\tdrawingRoom\tkitchen\tbathRoom\n#floor\tbuildingType\tconstructionTime\trenovationCondition\tbuildingStructure\n#ladderRatio\televator\tfiveYearsProperty\tsubway\tdistrict\tcommunityAverage\n# house_data.head()\n#sns.scatterplot(x=house_data[\"kitchen\"],y=house_data[\"price\"])\nhouse_data[\"kitchen\"].describe()","8e7d2534":"house_data[\"floor\"].head()","df4600c0":"house_data[\"floor\"][:-200]","2ed08537":"#\u67e5\u8be2\u67d0\u4e00\u884c\u548c\u548c\u67d0\u4e00\u5217\u7684\u6570\u636e\u53ef\u4ee5\u901a\u8fc7.iloc\u5b9e\u73b0\n#print(house_data.iloc(0)[1])\n#print(house_data.iloc(1)[1])","638d065c":"#\u96c6\u4e2d\u663e\u793a\u6bcf\u4e00\u5217\u6570\u636e\u7684\u63cf\u8ff0\nhouse_columns=[house_data.columns]\n# for i in range(26):\n#     print(house_data[house_columns[0][i]].describe())\n#     print(\"Unique counts in each column\",i,\":\", len(house_data[house_columns[0][i]].unique()))\n#     print(\"Any NULL values?\",house_data[house_columns[0][i]].isnull().unique())\n#     print(\"____________________________________________________________________________\")\n","ebae6a86":"#Lng\u7279\u5f81\n# plt.figure(figsize=(16,8))\n#sns.lineplot(x=house_data[\"Lng\"],y=house_data[\"price\"])\n# sns.kdeplot(data=pd.DataFrame(house_data,columns = [\"Lng\",\"price\"]),shade=True)","152ffb04":"#Lat\u7279\u5f81\n# sns.kdeplot(data=pd.DataFrame(house_data,columns = [\"Lat\",\"price\"]),shade=True)","44f6d689":"#Lat and Lng analysis with plot\n#plt.figure(figsize=(10,10))\n#cmap = sns.cubehelix_palette(dark=1, light=.8, as_cmap=True)\n#sns.scatterplot(x=house_data[\"Lng\"],y=house_data[\"Lat\"],hue=house_data[\"district\"],legend=\"full\",palette='Set3')\n# 1\u4e1c\u57ce\u533a 2\u4e30\u53f0\u533a 3\u901a\u5dde\u533a 4\u5927\u5174\u533a 5\u623f\u5c71\u533a 6\u660c\u5e73\u533a 7\u671d\u9633\u533a 8\u6d77\u6dc0\u533a 9\u77f3\u666f\u5c71\u533a 10\u897f\u57ce\u533a 11\u5e73\u8c37\u533a 12\u95e8\u5934\u6c9f\u533a 13\u987a\u4e49\u533a\n","719ee237":"# col_n = [\"Lat\", \"Lng\", \"price\"]\n# a = pd.DataFrame(house_data,columns = col_n)\n#sns.heatmap(a)\n# b.head()","408d4b9d":"#tradeTime\u7279\u5f81\n# plt.figure(figsize=(16,8))\n# sns.lineplot(x=house_data[\"tradeTime\"],y=house_data[\"price\"])","6fc52d02":"#DOM\u7279\u5f81\n# plt.figure(figsize=(16,8))\n# sns.lineplot(x=house_data[\"DOM\"][:-10000:10],y=house_data[\"price\"][:-10000:10])\n#DOM\u5b58\u5728NULL\u503c\u9700\u8981\u8fdb\u4e00\u6b65\u5904\u7406\n","9673a4a2":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\n#print(len(bjhp_data))\nprice_copy=bjhp_data[\"price\"][:10000].copy()\n\nfor i in range(len(price_copy)):\n    #print(price_copy[i])\n    \n    if price_copy[i]>75000:\n        price_copy[i]=11\n    elif price_copy[i]>70000 and price_copy[i]<=75000:\n        price_copy[i]=10\n    elif price_copy[i]>65000 and price_copy[i]<=70000:\n        price_copy[i]=9\n    elif price_copy[i]>60000 and price_copy[i]<=65000:\n        price_copy[i]=8\n    elif price_copy[i]>55000 and price_copy[i]<=60000:\n        price_copy[i]=7\n    elif price_copy[i]>50000 and price_copy[i]<=55000:\n        price_copy[i]=6\n    elif price_copy[i]>45000 and price_copy[i]<=50000:\n        price_copy[i]=5\n    elif price_copy[i]<=45000 and price_copy[i]>40000:\n        price_copy[i]=4\n    elif price_copy[i]<=40000 and price_copy[i]>35000:\n        price_copy[i]=3\n    elif price_copy[i]<=35000 and price_copy[i]>30000:\n        price_copy[i]=2\n    else:\n        price_copy[i]=1\n\n","1947fea0":"plt.figure(figsize=(20,16))\nsns.jointplot(x=bjhp_data[\"Lat\"][:5000],y=bjhp_data[\"Lng\"][:5000],kind=\"kde\")","0c2ae7e0":"plt.figure(figsize=(20,10))\nsns.distplot(a=bjhp_data['price'][:10000],kde=False)","35a0dba9":"plt.figure(figsize=(20,16))\nsns.regplot(x=bjhp_data[\"square\"][:1000],y=bjhp_data[\"followers\"][:1000])","7fa94cb3":"plt.figure(figsize=(20,16))\n#bjhp_data.describe()\nconstructionTime=bjhp_data[\"constructionTime\"]\n#constructionTime.unique()\n#constructionTime.mean()\ncons=constructionTime.replace('\u672a\u77e5',\"2004\")\ncons=cons.replace('0',\"2004\")\ncons=cons.replace('1',\"2004\")\ncons.unique()\nfollowers=bjhp_data[\"followers\"]\n# followers.describe()\nsns.jointplot(x=cons[:300],y=bjhp_data[\"followers\"][:300],kind=\"kde\")","ed80a888":"# Step 1: \u5bfc\u5165\u6570\u636e","b3344d3b":"# Step 2: \u68c0\u67e5\u6570\u636e","a9fad235":"# Randomforest\u9884\u6d4b\u7684MAE\u4e3a4266\uff0c\u53c2\u6570\u89c1\u4ee3\u7801"}}