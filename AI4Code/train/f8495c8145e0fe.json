{"cell_type":{"6fc15aab":"code","702d5369":"code","2c1a946d":"code","ec22aee0":"code","c740cac4":"code","2454657b":"code","f51a2385":"code","39876ee8":"code","fb75c7c0":"code","1653df57":"code","a57f9ef7":"code","8b77404c":"code","17636ef0":"code","57aeeeee":"code","0999b10e":"code","05eea661":"code","9b48f1ac":"code","077d3504":"code","3bfaa4e5":"code","b2b54b30":"code","f5778022":"code","c9c26807":"code","8784874a":"markdown","aabf1fc3":"markdown","b975127a":"markdown","ca2136ad":"markdown","d5b3e07b":"markdown","c87f7aef":"markdown","19f0b1c8":"markdown","99174dcd":"markdown","bfc1a100":"markdown","b3e68cd5":"markdown","51ed1eae":"markdown","a31a82e8":"markdown","a189f266":"markdown","1683c8ac":"markdown","cb7873b6":"markdown","a7000b29":"markdown","82d9465b":"markdown","b07c0796":"markdown","dc98fa43":"markdown"},"source":{"6fc15aab":"import tensorflow as tf\nfrom tensorflow.keras import datasets, layers, models\nimport matplotlib.pyplot as plt\nimport numpy as np","702d5369":"(X_train, y_train), (X_test,y_test) = datasets.cifar10.load_data()\nX_train.shape","2c1a946d":"X_test.shape","ec22aee0":"y_train[:5]","c740cac4":"y_train = y_train.reshape(-1,)\ny_train[:5]","2454657b":"y_test = y_test.reshape(-1,)","f51a2385":"classes = [\"airplane\",\"automobile\",\"bird\",\"cat\",\"deer\",\"dog\",\"frog\",\"horse\",\"ship\",\"truck\"]","39876ee8":"def plot_sample(X, y, index):\n    plt.figure(figsize = (15,2))\n    plt.imshow(X[index])\n    plt.xlabel(classes[y[index]])","fb75c7c0":"plot_sample(X_train, y_train, 0)","1653df57":"plot_sample(X_train, y_train, 1)","a57f9ef7":"X_train = X_train \/ 255.0\nX_test = X_test \/ 255.0","8b77404c":"ann = models.Sequential([\n        layers.Flatten(input_shape=(32,32,3)),\n        layers.Dense(3000, activation='relu'),\n        layers.Dense(1000, activation='relu'),\n        layers.Dense(3000, activation='relu'),\n        layers.Dense(1000, activation='relu'),\n        layers.Dense(10, activation='sigmoid')    \n    ])\n\nann.compile(optimizer='SGD',\n              loss='sparse_categorical_crossentropy',\n              metrics=['accuracy'])\n\nann.fit(X_train, y_train, epochs=20)","17636ef0":"from sklearn.metrics import confusion_matrix , classification_report\nimport numpy as np\ny_pred = ann.predict(X_test)\ny_pred_classes = [np.argmax(element) for element in y_pred]\n\nprint(\"Classification Report: \\n\", classification_report(y_test, y_pred_classes))","57aeeeee":"cnn = models.Sequential([\n    layers.Conv2D(filters=32, kernel_size=(3, 3), activation='relu', input_shape=(32, 32, 3)),\n    layers.MaxPooling2D((2, 2)),\n    \n    layers.Conv2D(filters=64, kernel_size=(3, 3), activation='relu'),\n    layers.MaxPooling2D((2, 2)),\n    \n    layers.Flatten(),\n    layers.Dense(64, activation='relu'),\n    layers.Dense(10, activation='softmax')\n    \n])","0999b10e":"cnn.compile(optimizer='adam',\n              loss='sparse_categorical_crossentropy',\n              metrics=['accuracy'])","05eea661":"cnn.fit(X_train, y_train, epochs=20)","9b48f1ac":"cnn.evaluate(X_test,y_test)","077d3504":"y_pred = cnn.predict(X_test)\ny_pred[:5]\n","3bfaa4e5":"\ny_classes = [np.argmax(element) for element in y_pred]\ny_classes[:5]","b2b54b30":"y_test[:5]","f5778022":"plot_sample(X_test, y_test,1500)","c9c26807":"classes[y_classes[1500]]","8784874a":"**Y TRAIN CHANGED INTO 1D ARREY**","aabf1fc3":"**AND SO, WE USE CONVOLUTION NEURAL NETWORK****","b975127a":"**ANN SCORE VALUES**","ca2136ad":"**TRAIN DATASETS IN ARTIFICIAL NEURAL NETWORK   \"BUT IT DIDN'T GIVES A HIGHEST ACCURACY = 0.7028 IT IS NOT ENOUGH\"**","d5b3e07b":"**PROBABILITY OF PREDICTION**","c87f7aef":"**PLOT IMAGE IF YOUR MACHINE PREDICTED CORRECTLY OR WRONG**","19f0b1c8":"**0th DATA**","99174dcd":"**IMPORT PACKAGES**","bfc1a100":"**PLOT THE IMAGE IN INDEX**","b3e68cd5":"**EPOCHS 20**","51ed1eae":"**X TEST SHAPE 60,000 OF 10,000 DATASETS FOR TESTING**","a31a82e8":"**IMPORT DATASETS**","a189f266":"**NEXT WE ADD OPTIMIZER, LOSS FUNCTION AND METRICS OF ACCURACY SCORE**","1683c8ac":"**EACH IMAGE DATA HAS 0 to 255 PIXELS OF VALUES**","cb7873b6":"**CHECK WHICH CLASS IN 1500th DATASET**","a7000b29":"**1st DATA**","82d9465b":"**Y TRAIN CHANGED INTO 1D ARREY**","b07c0796":"**CREATING CLASSES NAMES OF DATAS**","dc98fa43":"**TEST SCORE**"}}