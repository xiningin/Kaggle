{"cell_type":{"47bc144b":"code","35442521":"code","72551baa":"code","86c309bb":"code","a9406a00":"code","4363d102":"code","a7f37de3":"code","0dfe01f9":"code","6343d51a":"code","6032c4e7":"code","f66503f6":"code","eecb4aec":"code","1e5217cd":"code","7f26d6ec":"code","d14dc7bc":"code","1fc49e22":"code","69757892":"code","c863ea81":"code","aaf6682f":"code","43daba4b":"code","ed0392f2":"code","8bc8c736":"code","6b0aa42e":"code","b6519659":"markdown","b6b439e2":"markdown","f9a9ea25":"markdown","e82c1d5a":"markdown","c09f026d":"markdown","d513ea46":"markdown","8a1896a5":"markdown","55e34d7b":"markdown","3a595e44":"markdown","3669965c":"markdown","3a5d5984":"markdown"},"source":{"47bc144b":"import pandas as pd\ntrain = pd.read_csv('\/kaggle\/input\/mobile-price-classification\/train.csv')\ntrain.head()","35442521":"!pip install pycaret","72551baa":"from pycaret.classification import *\nclf1 = setup(data = train, target = 'price_range', session_id = 786, silent = True)\n\n#silent is True to perform unattended run when kernel is executed.","86c309bb":"%%time\ncompare_models()","a9406a00":"# create knn model\nknn = create_model('knn')","4363d102":"# create catboost model\ncatboost = create_model('catboost')","a7f37de3":"# tune knn model\ntuned_knn = tune_model('knn', optimize = 'Accuracy', n_iter = 100)","0dfe01f9":"# parameters of tuned_knn\nprint(tuned_knn)","6343d51a":"tuned_catboost = tune_model('catboost', optimize = 'Accuracy', n_iter = 100)","6032c4e7":"tuned_lightgbm = tune_model('lightgbm', optimize = 'Accuracy', n_iter = 100)","f66503f6":"tuned_ada = tune_model('ada', optimize = 'Accuracy', n_iter = 100)","eecb4aec":"tuned_lr = tune_model('lr', optimize = 'Accuracy', n_iter = 100)","1e5217cd":"dt = create_model('dt')","7f26d6ec":"bagged_dt = ensemble_model(dt, n_estimators = 100)","d14dc7bc":"# auc\nplot_model(bagged_dt)","1fc49e22":"# confusion matrix\nplot_model(bagged_dt, plot = 'confusion_matrix')","69757892":"# boundary\nplot_model(bagged_dt, plot = 'boundary')","c863ea81":"# vc\nplot_model(bagged_dt, plot = 'dimension')","aaf6682f":"pred_holdout = predict_model(bagged_dt)","43daba4b":"final_dt = finalize_model(bagged_dt)","ed0392f2":"test = pd.read_csv('\/kaggle\/input\/mobile-price-classification\/test.csv')\ntest.head()","8bc8c736":"predictions = predict_model(final_dt, data=test)","6b0aa42e":"predictions.head()","b6519659":"# Ensemble Model","b6b439e2":"# Finalize Model ","f9a9ea25":"# Predict on holdout set","e82c1d5a":"# Install PyCaret","c09f026d":"# Initializing Setup","d513ea46":"# Predictions","8a1896a5":"# Create Model","55e34d7b":"# Compare Models","3a595e44":"# Tune Model","3669965c":"# Load the train dataset","3a5d5984":"# Plot Model"}}