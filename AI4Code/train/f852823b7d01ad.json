{"cell_type":{"af0e184a":"code","87d79423":"code","893478e6":"code","ae689f4f":"code","c9dac818":"code","a8927f64":"code","af020332":"code","b3560354":"code","6941fa15":"code","4af9c3d3":"code","c715a346":"code","5d232578":"code","35c96d57":"code","99bd39a3":"markdown","ee4d568e":"markdown","ac3385bb":"markdown","2958fd95":"markdown","6b99edf6":"markdown","6cebe1e4":"markdown","d3208877":"markdown","25a94ee7":"markdown"},"source":{"af0e184a":"# Import important packages\n## Data manipulation\nimport pandas as pd                   \nimport numpy as np\n\n## Data vislualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.plotly as py\nimport plotly.graph_objs as go\n\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)","87d79423":"# Import file\ndata = pd.read_csv(\"..\/input\/nypd-motor-vehicle-collisions.csv\")","893478e6":"# Exploratory dataset in General\n## Look at the structure of dataset\ndata.info()\n\n## Look at top 10 row data\n#data.head(10)\n\n## Look at missing value\ndata.isnull().sum()\n","ae689f4f":"data.info()","c9dac818":"data.head(5)","a8927f64":"# Exploratory dataset in specific variable\n\n## create function looking at frequency table for each variable\ndef freq(data, var):\n    tmp_freq = pd.crosstab(index = data[var], columns = 'count')\n    return tmp_freq\n\n#freq(data, 'ZIP CODE')\n#freq(data, 'NUMBER OF PERSONS INJURED')\nfreq(data, 'NUMBER OF PERSONS KILLED')\n#freq(data, 'CONTRIBUTING FACTOR VEHICLE 1')\n\n#freq(data, 'BOROUGH')\n#freq(data, 'TIME_GRP')","af020332":"# Data manipulation\n## Rename columns\ndata.rename(columns = {'ZIP CODE' : 'ZIP_CODE',\n                       'ON STREET NAME' : 'STREET_ON',\n                       'CROSS STREET NAME' : 'STREET_CROSS',\n                       'OFF STREET NAME'   : 'STREET_OFF',\n                       'NUMBER OF PERSONS INJURED'     : 'NUM_PER_INJUR',\n                       'NUMBER OF PERSONS KILLED'      : 'NUM_PER_KILL',\n                       'NUMBER OF PEDESTRIANS INJURED' : 'NUM_PED_INJUR',\n                       'NUMBER OF PEDESTRIANS KILLED'  : 'NUM_PED_KILL',\n                       'NUMBER OF CYCLIST INJURED'     : 'NUM_CYC_INJUR',\n                       'NUMBER OF CYCLIST KILLED'      : 'NUM_CYC_KILL',\n                       'NUMBER OF MOTORIST INJURED'    : 'NUM_MOTOR_INJUR',\n                       'NUMBER OF MOTORIST KILLED'     : 'NUM_MOTOR_KILL',\n                       'CONTRIBUTING FACTOR VEHICLE 1' : 'VEH_FACTOR_1',\n                       'CONTRIBUTING FACTOR VEHICLE 2' : 'VEH_FACTOR_2',\n                       'CONTRIBUTING FACTOR VEHICLE 3' : 'VEH_FACTOR_3',\n                       'CONTRIBUTING FACTOR VEHICLE 4' : 'VEH_FACTOR_4',\n                       'CONTRIBUTING FACTOR VEHICLE 5' : 'VEH_FACTOR_5',\n                       'UNIQUE KEY' : 'UNIQUE_KEY',\n                       'VEHICLE TYPE CODE 1' : 'VEH_TYPE_1',\n                       'VEHICLE TYPE CODE 2' : 'VEH_TYPE_2',\n                       'VEHICLE TYPE CODE 3' : 'VEH_TYPE_3',\n                       'VEHICLE TYPE CODE 4' : 'VEH_TYPE_4',\n                       'VEHICLE TYPE CODE 5' : 'VEH_TYPE_5'},\n           inplace = True) \n\n# Create variables\n## Create year variable to \"DATE_YEAR\"\ndata['DATE_YEAR'] = pd.to_datetime(data['ACCIDENT DATE']).dt.year\n## Create month variable to \"DATE_MTH\"\ndata['DATE_MTH']  = pd.to_datetime(data['ACCIDENT DATE']).dt.month\n\n## Create time variable to O'Clock format\ndata['TIME_O'] = data['ACCIDENT TIME'].apply(lambda time: time.split(':')[0])\n\ntime_dict = {'0' : 'A 0 O Clock', '1' : 'B 1 O Clock', '2' : 'C 2 O Clock',\n             '3' : 'D 3 O Clock', '4' : 'E 4 O Clock', '5' : 'F 5 O Clock',\n             '6' : 'G 6 O Clock', '7' : 'H 7 O Clock', '8' : 'I 8 O Clock',\n             '9' : 'J 9 O Clock', '10' : 'K 10 O Clock', '11' : 'L 11 O Clock',\n             '12' : 'M 12 O Clock', '13' : 'N 13 O Clock', '14' : 'O 14 Clock',\n             '15' : 'P 15 O Clock', '16' : 'Q 16 O Clock', '17' : 'R 17 O Clock',\n             '18' : 'S 18 O Clock', '19' : 'T 19 O Clock', '20' : 'U 20 O Clock',\n             '21' : 'V 21 O Clock', '22' : 'W 22 O Clock', '23' : 'X 23 O Clock' }\n        \ndata['TIME_GRP'] = data['TIME_O'].map({value : key for value, key in time_dict.items()})\n    \n# Clean up na value \ndata['NUM_PER_INJUR'].fillna = 0\ndata['NUM_PER_KILL'].fillna = 0\n\n# Recheck columns\ndata.info()","b3560354":"data['TIME_O'].head(10)","6941fa15":"# Preliminary analysis\n## Create bar plot by year\n## Set subplot size and space\nplt.figure(figsize=(10, 15)).subplots_adjust(hspace=0.5)\n\n# Looking at frequency of person injury by year\nplt.subplot(4, 2 ,1)\ndata.groupby('DATE_YEAR').NUM_PER_INJUR.sum().plot.bar().set_title('Number of person injury')\n\n# Looking at frequency of person kill by year\nplt.subplot(4, 2, 2)\ndata.groupby('DATE_YEAR').NUM_PER_KILL.sum().plot.bar().set_title('Number of person kill')\n\n# Looking at frequency of PEDESTRIANS injury by year\nplt.subplot(4, 2, 3)\ndata.groupby('DATE_YEAR').NUM_PED_INJUR.sum().plot.bar().set_title('Number of pedestrians injury')\n\n# Looking at frequency of pedesstrians kill by year\nplt.subplot(4, 2, 4)\ndata.groupby('DATE_YEAR').NUM_PED_INJUR.sum().plot.bar().set_title('Number of pedestrians kill')\n\n# Looking at frequency of pedestrians kill by year\nplt.subplot(4, 2, 5)\ndata.groupby('DATE_YEAR').NUM_MOTOR_INJUR.sum().plot.bar().set_title('Number of motorist injury')\n\n# Looking at frequency of pedestrians kill by year\nplt.subplot(4, 2, 6)\ndata.groupby('DATE_YEAR').NUM_MOTOR_KILL.sum().plot.bar().set_title('Number of motorist kill')\n\n# Looking at frequency of pedesstrians kill by year\nplt.subplot(4, 2, 7)\ndata.groupby('DATE_YEAR').NUM_CYC_INJUR.sum().plot.bar().set_title('Number of cyclist injury')\n\n# Looking at frequency of pedesstrians kill by year\nplt.subplot(4, 2, 8)\ndata.groupby('DATE_YEAR').NUM_CYC_KILL.sum().plot.bar().set_title('Number of cyclist kill')\n","4af9c3d3":"# Preliminary analysis\n## Create bar plot by month\n\n## Set subplot size and space\nplt.figure(figsize=(10, 15)).subplots_adjust(hspace=0.5)\n\n# Looking at frequency of person injury by year\nplt.subplot(4, 2 ,1)\ndata.groupby('DATE_MTH').NUM_PER_INJUR.sum().plot.bar().set_title('Number of person injury')\n\n# Looking at frequency of person kill by year\nplt.subplot(4, 2, 2)\ndata.groupby('DATE_MTH').NUM_PER_KILL.sum().plot.bar().set_title('Number of person kill')\n\n# Looking at frequency of PEDESTRIANS injury by year\nplt.subplot(4, 2, 3)\ndata.groupby('DATE_MTH').NUM_PED_INJUR.sum().plot.bar().set_title('Number of pedestrians injury')\n\n# Looking at frequency of pedesstrians kill by year\nplt.subplot(4, 2, 4)\ndata.groupby('DATE_MTH').NUM_PED_INJUR.sum().plot.bar().set_title('Number of pedestrians kill')\n\n# Looking at frequency of pedestrians kill by year\nplt.subplot(4, 2, 5)\ndata.groupby('DATE_MTH').NUM_MOTOR_INJUR.sum().plot.bar().set_title('Number of motorist injury')\n\n# Looking at frequency of pedestrians kill by year\nplt.subplot(4, 2, 6)\ndata.groupby('DATE_MTH').NUM_MOTOR_KILL.sum().plot.bar().set_title('Number of motorist kill')\n\n# Looking at frequency of pedesstrians kill by year\nplt.subplot(4, 2, 7)\ndata.groupby('DATE_MTH').NUM_CYC_INJUR.sum().plot.bar().set_title('Number of cyclist injury')\n\n# Looking at frequency of pedesstrians kill by year\nplt.subplot(4, 2, 8)\ndata.groupby('DATE_MTH').NUM_CYC_KILL.sum().plot.bar().set_title('Number of cyclist kill')\n","c715a346":"# Preliminary analysis\n## Create bar plot by time in a day\n\n## Set subplot size and space\nplt.figure(figsize=(10, 15)).subplots_adjust(hspace=0.5)\n\n# Looking at frequency of person injury by year\nplt.subplot(4, 2 ,1)\ndata.groupby('TIME_GRP').NUM_PER_INJUR.sum().plot.bar().set_title('Number of person injury')\n\n# Looking at frequency of person kill by year\nplt.subplot(4, 2, 2)\ndata.groupby('TIME_GRP').NUM_PER_KILL.sum().plot.bar().set_title('Number of person kill')\n\n# Looking at frequency of PEDESTRIANS injury by year\nplt.subplot(4, 2, 3)\ndata.groupby('TIME_GRP').NUM_PED_INJUR.sum().plot.bar().set_title('Number of pedestrians injury')\n\n# Looking at frequency of pedesstrians kill by year\nplt.subplot(4, 2, 4)\ndata.groupby('TIME_GRP').NUM_PED_INJUR.sum().plot.bar().set_title('Number of pedestrians kill')\n\n# Looking at frequency of pedestrians kill by year\nplt.subplot(4, 2, 5)\ndata.groupby('TIME_GRP').NUM_MOTOR_INJUR.sum().plot.bar().set_title('Number of motorist injury')\n\n# Looking at frequency of pedestrians kill by year\nplt.subplot(4, 2, 6)\ndata.groupby('TIME_GRP').NUM_MOTOR_KILL.sum().plot.bar().set_title('Number of motorist kill')\n\n# Looking at frequency of pedesstrians kill by year\nplt.subplot(4, 2, 7)\ndata.groupby('TIME_GRP').NUM_CYC_INJUR.sum().plot.bar().set_title('Number of cyclist injury')\n\n# Looking at frequency of pedesstrians kill by year\nplt.subplot(4, 2, 8)\ndata.groupby('TIME_GRP').NUM_CYC_KILL.sum().plot.bar().set_title('Number of cyclist kill')\n\n# Create summary table by time in a day\ndata.groupby('TIME_GRP').sum()[[\"NUM_PER_INJUR\", \"NUM_PER_KILL\", \"NUM_PED_INJUR\", \"NUM_PED_KILL\", \n                                \"NUM_MOTOR_INJUR\", \"NUM_MOTOR_KILL\", \"NUM_CYC_INJUR\", \"NUM_CYC_KILL\"]]\n","5d232578":"# Create variable before doing geo plot\n## Create new variable for label in map\ndata['LAB_NUMPERINJUR'] = 'INJURY PERSON ' + data['NUM_PER_INJUR'].astype(str) + ' KILL PERSON ' + data['NUM_PER_KILL'].astype(str)\n## Choose top 10,000 dataset\ndata2 = data[:10000]\n## Filter if there is Lat Long with null\ndata2 = data2[(~data2['LATITUDE'].isnull()) | (~data2['LONGITUDE'].isnull()) ]\n\n# Drop variable in data frame\ndel data['LAB_NUMPERINJUR']\n\ndata.info()","35c96d57":"# Preliminary analysis\n## Create frequency map by using lat long data\n\nmapbox_style = 'mapbox:\/\/styles\/teeradol\/cjvvz389101a81co5hqfdbvsi'\nmapbox_access_token = 'pk.eyJ1IjoidGVlcmFkb2wiLCJhIjoiY2p2dnoybWpmNDdjYjN5cW92ejZldmxqYiJ9.v2TRrGbjGqiQqQkDwgzQ-A'\n\n\ndata = [go.Scattermapbox(\n    lat=data2['LATITUDE'],\n    lon=data2['LONGITUDE'],\n    mode='markers',\n    marker=dict(\n        size=4,\n        opacity=0.8\n    ),\n    text= data2['LAB_NUMPERINJUR'] ,\n    name='locations'\n)]\n\nlayout = dict(\n    title='Motor Vehicle Collision',\n    autosize=True,\n    hovermode='closest',\n    mapbox=dict(\n        accesstoken = mapbox_access_token,\n        bearing=0,\n        center=dict(\n            lat=40.7,\n            lon=-73.9\n        ),\n        pitch=0,\n        zoom=8.5,\n        style=mapbox_style,\n    ),\n    xaxis = dict(\n        domain = [0.6, 1]\n    ),\n)\n\nfig = dict(data=data, layout=layout)\n\niplot(fig)\n","99bd39a3":"In this kernels, I would like to do preliminary analysis to investigate factors that cause accident in number of area. There will be a lot of process will be done including data manipulation and data vistualization. Enjoy!","ee4d568e":"From above bar chart, we can see that during July-Oct are months that have high number of person injury and also Sep is the month that have the most killed during the year.","ac3385bb":"From charts, we can see that number of person injury peak at 17.00 pm.","2958fd95":"Ignoring 2019 (since it is not full year data), there is increasing trend of number of person injury but not for number of person killed ","6b99edf6":"I import libraries as the following usages  \n1) pandas and numpy for data manipulation  \n2) matplotlib, seaborn, and plotly for data visualization","6cebe1e4":"In this step, I rename columns so that we can recall variables easier. I also create new variables including year, month and time (O'Clock) of accident for future analysis. In addition, I fill up na with 0. ","d3208877":"This is temporary step to do frequency table for each variable to gain some inside. ","25a94ee7":"In Exploratory data, There are 29 variables as the following\nDATE - Date of accident  \nTIME - Time of accident  \nBOROUGH - Borough of accident  \nZIP CODE - Zip code of accident  \nLATITUDE - Location (Latitude of accident)  \nLONGITUDE - Location (Longitude of accident)  \nON STREET NAME - Name of On-street that accident happened  \nCROSS STREE NAME - Connecting of street that accident happened  \nOFF STREET NAME - Name of Off-street that accident happened  \nNUMBER OF PERSONS INJURED - Number of persons injured    \nNUMBER OF PERSONS KILLED - Number of persons killed  \nNUMBER OF PEDESTRIANS INJURED - Number of pedestrains injury  \nNUMBER OF PEDESTRIANS KILLED - Number of pedestrains killed          \nNUMBER OF CYCLIST INJURED - Number of cyclist injury        \nNUMBER OF CYCLIST KILLED - Number of cyclist killed  \nNUMBER OF MOTORIST INJURED - Number of motorist injury  \nNUMBER OF MOTORIST KILLED - Number of motorist killed  \nCONTRIBUTING FACTOR VEHICLE - Reason of accident  \nUNIQUE KEY - Unique key\nVEHICLE TYPE - Type of vehicle involve in accident            \n\nFrom missing value investigation, there are number of variables have missing value except Date, Time, and number of injured and killed."}}