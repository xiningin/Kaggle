{"cell_type":{"9eb5ed37":"code","16629a23":"code","94ba442b":"code","29ca8cf6":"code","b2469da6":"code","5dc63c53":"code","54ce597c":"code","70ebb5c3":"code","72130bdb":"code","b7a5160c":"code","14ff7528":"code","7a58184f":"code","cb15af49":"code","f5401f5a":"code","53d46a00":"code","1d79dee6":"code","b30cc387":"code","cd532913":"code","88d65c09":"code","5bcc0944":"code","3634dbc4":"code","a0bc6e38":"code","bec1772b":"code","ca2eda1e":"code","76f4bd3a":"code","84e056bf":"markdown","ee51bf12":"markdown","5f6527b2":"markdown","64e23223":"markdown","5da30fc0":"markdown","5dd0b0fc":"markdown","d7584e55":"markdown","98e91ceb":"markdown","728368d6":"markdown","99542b60":"markdown","826db8a9":"markdown","323261bf":"markdown","cb4cc48a":"markdown","eab9d820":"markdown","a6a79c77":"markdown"},"source":{"9eb5ed37":"from wordcloud import WordCloud\nimport numpy as np \nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\n!pip install neattext\nimport neattext.functions as nfx\nimport matplotlib.pyplot as plt\nimport plotly.express as plx\nfrom sklearn.metrics import classification_report\nimport keras\nfrom keras.layers import Embedding,Dense,LSTM,Bidirectional,GlobalMaxPooling1D,Input,Dropout\nfrom keras.callbacks import EarlyStopping,ReduceLROnPlateau\nfrom keras.models import Sequential\nimport tensorflow as tf\nfrom sklearn.preprocessing import LabelEncoder\nfrom keras.preprocessing.text import Tokenizer\nfrom keras.preprocessing.sequence import pad_sequences\nfrom tqdm import tqdm\nimport seaborn as sns\nimport pickle\nimport warnings\nwarnings.filterwarnings('ignore')","16629a23":"data=pd.read_csv('..\/input\/suicide-watch\/Suicide_Detection.csv')\ndata.head()","94ba442b":"data['class'].value_counts()","29ca8cf6":"data['class'].value_counts().index.values","b2469da6":"train_data,test_data=train_test_split(data,test_size=0.2,random_state=10)","5dc63c53":"train_data['class'].value_counts().index.values","54ce597c":"plx.bar(train_data,x=train_data['class'].value_counts().index.values,\n        y=train_data['class'].value_counts(),color=['Suicide','Not Suicide'])","70ebb5c3":"plt.figure(figsize=(12,10))\nplt.pie(train_data['class'].value_counts(),startangle=90,colors=['#00dddf','#000fbb'],\n        autopct='%0.2f%%',labels=['suicide','Not Suicide'])\nplt.title('SUICIDE OR NOT ?',fontdict={'size':20})\nplt.show()","72130bdb":"\ndef clean_text(text):\n    text_length=[]\n    cleaned_text=[]\n    for sent in tqdm(text):\n        sent=sent.lower()\n        sent=nfx.remove_special_characters(sent)\n        sent=nfx.remove_stopwords(sent)\n#         sent=nfx.remove_shortwords(sent)\n        text_length.append(len(sent.split()))\n        cleaned_text.append(sent)\n    return cleaned_text,text_length","b7a5160c":"cleaned_train_text,train_text_length=clean_text(train_data.text)\ncleaned_test_text,test_text_length=clean_text(test_data.text)","14ff7528":"plt.figure(figsize=(12,10))\nsns.distplot(train_text_length)\n# plt.axis([-10,100,0,0.03])\nplt.show()","7a58184f":"tokenizer=Tokenizer()\ntokenizer.fit_on_texts(cleaned_train_text)","cb15af49":"word_freq=pd.DataFrame(tokenizer.word_counts.items(),columns=['word','count']).sort_values(by='count',ascending=False)","f5401f5a":"plt.figure(figsize=(15,20))\nsns.barplot(x='count',y='word',data=word_freq.iloc[:50])\nplt.show()","53d46a00":"feature_names=word_freq['word'].values\nwc=WordCloud(max_words=400)\nwc.generate(' '.join(word for word in feature_names[500:3500] ))\nplt.figure(figsize=(20,15))\nplt.axis('off')\nplt.imshow(wc)","1d79dee6":"train_text_seq=tokenizer.texts_to_sequences(cleaned_train_text)\ntrain_text_pad=pad_sequences(train_text_seq,maxlen=50)\n\n\ntest_text_seq=tokenizer.texts_to_sequences(cleaned_test_text)\ntest_text_pad=pad_sequences(test_text_seq,maxlen=50)","b30cc387":"lbl_target=LabelEncoder()\ntrain_output=lbl_target.fit_transform(train_data['class'])\ntest_output=lbl_target.transform(test_data['class'])","cd532913":"# glove_embedding={}\nwith open('..\/input\/pickled-glove840b300d-for-10sec-loading\/glove.840B.300d.pkl', 'rb') as fp:\n    glove_embedding = pickle.load(fp)","88d65c09":"v=len(tokenizer.word_index)\n\nembedding_matrix=np.zeros((v+1,300), dtype=float)\nfor word,idx in tokenizer.word_index.items():\n    embedding_vector=glove_embedding.get(word)\n    if embedding_vector is not None:\n        embedding_matrix[idx]=embedding_vector","5bcc0944":"early_stop=EarlyStopping(patience=5)\nreducelr=ReduceLROnPlateau(patience=3)","3634dbc4":"model=Sequential()\nmodel.add(Input(shape=(40,)))\nmodel.add(Embedding(v+1,300,weights=[embedding_matrix],trainable=False))\nmodel.add(LSTM(20,return_sequences=True))\nmodel.add(GlobalMaxPooling1D())\n#     model.add(Dropout(0.3))\nmodel.add(Dense(256,activation='relu'))\n#     model.add(Dropout(0.2))\nmodel.add(Dense(1,activation='sigmoid'))\nmodel.compile(optimizer=keras.optimizers.SGD(0.1,momentum=0.09),loss='binary_crossentropy',metrics=['accuracy'])","a0bc6e38":"r=model.fit(train_text_pad,train_output,validation_data=(test_text_pad,test_output),\n            epochs=20,batch_size=256,callbacks=[early_stop,reducelr])","bec1772b":"plt.figure(figsize=(10,8))\nplt.plot(r.history['accuracy'])\nplt.plot(r.history['val_accuracy'])\nplt.title('ACCURACY CURVE',fontdict={'size':20})\nplt.show()","ca2eda1e":"plt.figure(figsize=(8,10))\nplt.plot(r.history['loss'])\nplt.plot(r.history['val_loss'])\nplt.title('LOSS CURVE',fontdict={'size':20})\nplt.show()","76f4bd3a":"print('TESTING DATA CLASSIFICATION REPORT \\n \\n')\nprint(classification_report(test_output,model.predict_classes(test_text_pad),\n                            target_names=lbl_target.inverse_transform([0,1])))\n\nprint('TRAINING DATA CLASSIFICATION REPORT \\n \\n')\nprint(classification_report(train_output,model.predict_classes(train_text_pad),\n                           target_names=lbl_target.inverse_transform([0,1])))","84e056bf":"<h1 style=\"background-color:#1afCCC;font-family:ALGERIAN;font-size:250%;text-align:center;border-radius: 15px 15px;padding: 5px\">GLOVE EMBEDDINGS<\/h1>\n","ee51bf12":"<h1 style=\"background-color:#1afCCC;font-family:ALGERIAN;font-size:250%;text-align:center;border-radius: 15px 15px;padding: 5px\">DATA VISUALISATIONS<\/h1>\n","5f6527b2":"<h1 style=\"background-color:#1aff1a;font-family:ALGERIAN;font-size:350%;text-align:center;border-radius: 15px 15px;padding: 5px\">SUICIDE THOUGHTS ?<\/h1>\n","64e23223":"<font style=\"color:red;font-family:ALGERIAN;font-size:150%;text-align:center;padding: 5px\">Hope you liked the notebook !!! If yes, please upvote it. If having any queries or suggestion fell free to put yours thought in comment section.<\/font>","5da30fc0":"<font style=\"color:black;font-family:ALGERIAN;font-size:150%;padding: 15px\">The dataset is a collection of posts from \"SuicideWatch\" and \"depression\" subreddits of the Reddit platform. The posts are collected using Pushshift API. All posts that were made to \"SuicideWatch\" from Dec 16, 2008(creation) till Jan 2, 2021, were collected while \"depression\" posts were collected from Jan 1, 2009, to Jan 2, 2021.<\/font>","5dd0b0fc":"<h1 style=\"background-color:#1afCCC;font-family:ALGERIAN;font-size:250%;text-align:center;border-radius: 15px 15px;padding: 5px\">PREPROCESSING TEXT DATA<\/h1>\n","d7584e55":"<center><img src=\"https:\/\/www.humanium.org\/en\/wp-content\/uploads\/2019\/09\/shutterstock_1140282473-scaled.jpg\",height='500',width='600'><\/center>","98e91ceb":"<h1 style=\"background-color:#1afCCC;font-family:ALGERIAN;font-size:250%;text-align:center;border-radius: 15px 15px;padding: 5px\">MODEL EVALUATION<\/h1>\n","728368d6":"<h1 style=\"background-color:#1afCCC;font-family:ALGERIAN;font-size:250%;text-align:center;border-radius: 15px 15px;padding: 5px\">LIBRARIES USED<\/h1>\n","99542b60":"<h1 style=\"background-color:#1afCCC;font-family:ALGERIAN;font-size:250%;text-align:center;border-radius: 15px 15px;padding: 5px\">MODEL BUILDING<\/h1>\n","826db8a9":"<center><img src=\"https:\/\/cropwatch.unl.edu\/2019-CW-News\/2019-images\/Extension\/signs-of-suicidal-thoughts.png\",height='500',width='600'><\/center>","323261bf":"<h1 style=\"background-color:#1afCCC;font-family:ALGERIAN;font-size:250%;text-align:center;border-radius: 15px 15px;padding: 5px\">DATA-SET SPLIT<\/h1>\n","cb4cc48a":"<h1 style=\"background-color:#1afCCC;font-family:ALGERIAN;font-size:250%;text-align:center;border-radius: 15px 15px;padding: 5px\">DATA CLEANING<\/h1>\n","eab9d820":"### The above created model perfectly fits the datasets. With training accuracy of about 94% and testing accuracy of about 93%. This model is very appropriate and can be used to detect suicidal thoughts.","a6a79c77":"<h1 style=\"background-color:#1afCCC;font-family:ALGERIAN;font-size:250%;text-align:center;border-radius: 15px 15px;padding: 5px\">CONCLUSION<\/h1>\n"}}