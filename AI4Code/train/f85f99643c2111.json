{"cell_type":{"8fee2a4d":"code","80c8caeb":"code","bc35f2af":"code","a36a7d82":"code","3038f090":"code","cfbd47d1":"code","db6e9ddd":"code","f9ca56d9":"code","5731abb4":"code","2af62481":"code","ce0c912e":"markdown","ebd47f04":"markdown","120bf13c":"markdown","a236b039":"markdown","5575fa0b":"markdown","b7f4a021":"markdown","4c78380e":"markdown","5fb16aa8":"markdown","eb45f6c9":"markdown","93c31d0a":"markdown","6ba795d3":"markdown"},"source":{"8fee2a4d":"# All libraries we will need\nimport pandas as pd # To store data as a dataframe\nimport requests # to get the data of an url\nfrom bs4 import BeautifulSoup # to parse the html data and find what we want\nimport re # Regular expressions library, it may be useful \nprint('Setup complete!')","80c8caeb":"# We need the url of the page we are gonna scrape \nurl = 'https:\/\/pokemondb.net\/pokedex\/all'\nresponse = requests.get(url) # Get content of page","bc35f2af":"# Parse the webpage text as html\npage_html = BeautifulSoup(response.text, 'html.parser') ","a36a7d82":"tableContainer = page_html.find('table', attrs={'id':'pokedex'}) # Find table with id = pokedex\ntableTbody= tableContainer.find('tbody') # Inside the table find tbody tag\nrowsTb = tableTbody.find_all('tr') # Inside tbody get all tr = table rows\nrowsTb[:2] # show first 2 tr, html shown","3038f090":"# Create arrays for every data you want to save, in this case all columns\nname = []\ntypes = []\ntotal = []\nhp = []\nattack = []\ndefense = []\nspAtk = []\nspDef = []\nspeed = []","cfbd47d1":"# for every row he have stored in rowsTb (rows in tbody)\nfor row in rowsTb:\n    # Get all cells (all columns) of this row\n    cells = row.find_all('td')  # This will contain an array with the content of all columns in this row\n    \n    # Append all content to the arrays\n    # cells[0] is the id of the pokemon in this database, I didn't wanted it. \n    name.append(cells[1].text) # To get the text betweent the tags we use .text\n    types.append(cells[2].text.split()) # We will use .split() because lots of pokemons have multiple types\n    total.append(int(cells[3].text))\n    hp.append(int(cells[4].text))\n    attack.append(int(cells[5].text))\n    defense.append(int(cells[6].text))\n    spAtk.append(int(cells[7].text))\n    spDef.append(int(cells[8].text))\n    speed.append(int(cells[9].text))","db6e9ddd":"# We will create pandas DataFrame to store the data collected in multiple arrays\npokePd = pd.DataFrame({'Name': name,\n'Type': types,\n'Total': total,\n'HP': hp,\n'Attack': attack,\n'Defense': defense,\n'Sp.Atk': spAtk,\n'Sp.Def': spDef,\n'Speed': speed\n})","f9ca56d9":"pokePd.head() # show first 5 entries of DataFrame","5731abb4":"# We can also check the shape to see if the scrapping has been done correctly. \npokePd.shape\n\n# There seems to be some kind of problem, pokedex size is 893 and we have 1034. But I you look carefully you cant find that some id numbers are repeated. So there is no problem here.\n","2af62481":"# Use this to export DataFrame to csv\npokePd.to_csv('pokePd.csv')","ce0c912e":"![pokeRows.png](attachment:pokeRows.png)","ebd47f04":"Inside thead or tbody we will find tr = table row ","120bf13c":"Inside every tr (table row) we will find td = table column, every row will have x columns. Then x tds.","a236b039":"### A year ago I read a very good article about web scrapping and I haven't found it again so I will try explain what I learned with it.\n","5575fa0b":"Right-click on what looks like a table (there are times when its not) and \"inspect element\"","b7f4a021":"![table.png](attachment:table.png)","4c78380e":"![pokemonPage.PNG](attachment:pokemonPage.PNG)","5fb16aa8":"### Format of the page\n##### I will be using Google Chrome for html exploration","eb45f6c9":"## The resulting dataset of this tutorial can be found at: https:\/\/www.kaggle.com\/ajpass\/pokemon-data-mining-2020\n\n\n### The next part of these tutorial series can be found here: https:\/\/www.kaggle.com\/ajpass\/data-mining-web-scrapping-vol-2-pokedex-pandas\n\n### Plotting radar charts with pokemon data: https:\/\/www.kaggle.com\/ajpass\/radar-chart-pokemon-stats\n\nData Mining - Web Scrapping: The saga:\n1. https:\/\/www.kaggle.com\/ajpass\/data-mining-web-scrapper-vol-1-pokedex # Scrapping a pokedex, all pokemon with all stats\n2. https:\/\/www.kaggle.com\/ajpass\/data-mining-web-scrapping-vol-2-pokedex-pandas # Scrapping a pokedex, using a diferent method than number 1, easier but in case a column has multiple values, in some cases you may need to do some cleaning. Result similar as 1, only changes: Type and ID. \n3. https:\/\/www.kaggle.com\/ajpass\/data-mining-web-scrapper-vol-3-sudoku-to-string # Extract sudokus data and transform it to string\n4. https:\/\/www.kaggle.com\/ajpass\/data-mining-web-scrapping-vol-66-kaggle-datasets # It's about scrapping the top 20 kagglers in datasets ranking\n5. https:\/\/www.kaggle.com\/ajpass\/data-mining-web-scrapping-vol-4-kaggle-datasets2 # Second take at kaggle datasets scrapping \n6. https:\/\/www.kaggle.com\/ajpass\/data-mining-web-scrapping-vol-5-kaggle-notebooks # Scrap top notebook kagglers\n7. https:\/\/www.kaggle.com\/ajpass\/web-scrapping-vol-6-kaggle-discussions # Scrap top discussion kagglers\n8. https:\/\/www.kaggle.com\/ajpass\/web-scrapping-vol-7-kaggle-competitions # Scrap top competition kagglers\n","93c31d0a":"Now we know its a table, with id = 'pokedex' we will use this to get all data from the table.\nWe need the all rows of the table, to get this we need to know a little thing.\n\nTables have:\n1. thead = header row\n2. tbody = body rows \n","6ba795d3":"![columnsInside.png](attachment:columnsInside.png)"}}