{"cell_type":{"f1d3be16":"code","c808c4d8":"code","75b35c75":"code","0e2dfb69":"code","963bc5f4":"code","383e78d7":"code","c99eb06f":"code","374b1589":"code","db26d0f1":"code","bda2a546":"code","e5c11083":"code","51500b85":"code","658dfba9":"code","8cdc91c2":"code","caecbb8b":"code","037de9ff":"code","1a50cfde":"code","e06ae1de":"code","4eb79e72":"code","153a4f34":"code","d3025da3":"code","dca1d20e":"code","35c01f7e":"code","104112d2":"code","2fccde80":"code","01ae0827":"code","453b968f":"code","69175fe7":"code","0b103877":"code","ca38d90d":"code","3b10edd2":"code","8aa875fa":"code","7a57e96f":"code","30d4d69e":"code","9e0c5b0d":"code","8ec07e93":"code","49592cf1":"code","8e7b54b5":"code","fcc0080d":"code","32514165":"markdown","dddf0e53":"markdown"},"source":{"f1d3be16":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","c808c4d8":"#importing pakages\n%matplotlib inline\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np","75b35c75":"#importing dataset\ndataset = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ndataset.head()","0e2dfb69":"Dataset = \"titanic\"","963bc5f4":"dataset.shape","383e78d7":"#check for missing values\nsns.heatmap(dataset.isnull())","c99eb06f":"#to check number of people that survived the disaster and number of people who did not survive.\nsns.countplot(x='Survived',data=dataset)","374b1589":"#number of people that survived based on their age.\nsns.countplot(x='Survived',data=dataset,hue=\"Sex\")","db26d0f1":"#number of people that survived based on their Pclass.\nsns.countplot(x='Survived',data=dataset,hue=\"Pclass\")","bda2a546":"plt.figure(figsize=(12,7))\nsns.boxplot(x='Pclass',y='Age',data=dataset,palette='winter')","e5c11083":"#missing value imputation on age and Pclass\ndef impute_age(cols):\n  Age = cols[0]\n  Pclass = cols[1]\n  \n  if pd.isnull(Age):\n    if Pclass == 1:\n      return 37\n    elif Pclass ==2:\n      return 29\n    else:\n      return 24\n  else:\n    return Age","51500b85":"dataset['Age']= dataset[['Age','Pclass']].apply(impute_age,axis=1)","658dfba9":"#dropping independent variable cabin\ndataset.drop('Cabin',axis =1,inplace=True)","8cdc91c2":"dataset.groupby('Embarked').size()","caecbb8b":"#imputing common value for embarked\ncommon_value = 'S'\ndataset['Embarked'] = dataset['Embarked'].fillna(common_value)\ndataset.info()","037de9ff":"dataset.info()","1a50cfde":"dataset.head()","e06ae1de":"sex = pd.get_dummies(dataset['Sex'],drop_first=True)\nembark = pd.get_dummies(dataset['Embarked'],drop_first=True)","4eb79e72":"dataset.drop(['PassengerId','Sex','Embarked','Name','Ticket'],axis=1,inplace=True)","153a4f34":"dataset = pd.concat([dataset,sex,embark],axis=1)","d3025da3":"#Creating training data set\nX_train = dataset.drop(['Survived'],axis =1 )\ny_train = dataset['Survived']","dca1d20e":"#USING RANDOM FOREST CLASSIFIER\nfrom sklearn.ensemble import RandomForestClassifier\nrf = RandomForestClassifier(n_estimators=100)\nrf.fit(X_train,y_train)\ny_pred_rf=rf.predict(X_train)","35c01f7e":"from sklearn import metrics\nprint('Accuracy',metrics.accuracy_score(y_train,y_pred_rf))","104112d2":"#importing training data\ndata = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ndata.shape","2fccde80":"passengerID = data['PassengerId']","01ae0827":"data.info()","453b968f":"sns.heatmap(data.isnull())","69175fe7":"#missing value imputation on age and Pclass\ndef impute_age(cols):\n  Age = cols[0]\n  Pclass = cols[1]\n  \n  if pd.isnull(Age):\n    if Pclass == 1:\n      return 37\n    elif Pclass ==2:\n      return 29\n    else:\n      return 24\n  else:\n    return Age","0b103877":"data['Age']= data[['Age','Pclass']].apply(impute_age,axis=1)","ca38d90d":"sns.heatmap(data.isnull())","3b10edd2":"#dropping cabin from dataset\ndata.drop('Cabin',axis =1,inplace=True)","8aa875fa":"data['Age'] = data[['Age','Pclass']].apply(impute_age,axis=1)\ndata.fillna(method='ffill',inplace=True)","7a57e96f":"sex = pd.get_dummies(data['Sex'],drop_first=True)\nembark = pd.get_dummies(data['Embarked'],drop_first=True)","30d4d69e":"data.drop(['PassengerId','Sex','Embarked','Name','Ticket'],axis=1,inplace=True)","9e0c5b0d":"data = pd.concat([data,sex,embark],axis=1)","8ec07e93":"data.head()","49592cf1":"#predicting the people who survived on test data\ny_pred_test = rf.predict(data)","8e7b54b5":"y_pred_test","fcc0080d":"df = pd.DataFrame({'PassengerID':passengerID, 'Survived':y_pred_test})\ndf","32514165":"**Description of Data**\nThe sinking of the RMS Titanic is one of the most infamous shipwrecks in history. On April 15, 1912, during her maiden voyage, the Titanic sank after colliding with an iceberg, killing 1502 out of 2224 passengers and crew. This sensational tragedy shocked the international community and led to better safety regulations for ships.\n\nOne of the reasons that the shipwreck led to such loss of life was that there were not enough lifeboats for the passengers and crew. Although there was some element of luck involved in surviving the sinking, some groups of people were more likely to survive than others, such as women, children, and the upper-class.\n\nIn this challenge, we ask you to complete the analysis of what sorts of people were likely to survive. In particular, we ask you to apply the tools of machine learning to predict which passengers survived the tragedy.","dddf0e53":"**Test Data**"}}