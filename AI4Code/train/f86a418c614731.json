{"cell_type":{"47216535":"code","358f12d4":"code","0093121a":"code","590810fd":"code","903340bc":"code","bee6b41e":"code","6962a670":"code","473d46d8":"code","41ea3f6f":"code","34f64555":"code","be006869":"code","469eb977":"code","e428fe9f":"code","2352c6d4":"code","0c37d97c":"code","11d2655a":"code","64d9d123":"code","e8af4f62":"code","35e65821":"code","edc9e0af":"code","e7804baa":"code","b59d2f26":"code","52e89561":"code","40dcec96":"code","e5d37526":"code","b08c449c":"code","135a5fd4":"code","24c6ed96":"code","38b6a845":"code","e6d1e0af":"code","a09f5d17":"code","1edaa74c":"code","8cea356d":"code","d73170df":"markdown","30e07ec7":"markdown","caa01775":"markdown","412526d4":"markdown","8cd8133c":"markdown","c10946cd":"markdown","938df644":"markdown","2086bf93":"markdown"},"source":{"47216535":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","358f12d4":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport warnings as w\nw.filterwarnings('ignore')","0093121a":"df = pd.read_csv('\/kaggle\/input\/advertising-dataset\/advertising.csv')","590810fd":"df","903340bc":"df.head()","bee6b41e":"df.tail()","6962a670":"df.info()","473d46d8":"df.describe()","41ea3f6f":"sns.heatmap(df.isnull(),annot=True,yticklabels=False)","34f64555":"df.isnull().sum()","be006869":"df.hist(bins=25,figsize=(10,10),color='orange')","469eb977":"fig1 = plt.figure(figsize=(8,8))\nfig1 = sns.pairplot(data=df)\nfig1.map_upper(plt.scatter)\nfig1.map_diag(sns.distplot)\nfig1.map_lower(sns.kdeplot)","e428fe9f":"df.corr()","2352c6d4":"fig2 = plt.figure(figsize=(8,8))\nsns.heatmap(df.corr(),annot=True,cmap='YlGnBu',vmax=0.9,vmin=-0.9)","0c37d97c":"from scipy import stats","11d2655a":"colnames = ['TV','Radio','Newspaper']","64d9d123":"X1 = df.iloc[:,:-1]","e8af4f62":"y=data_target=df.iloc[:,-1]","35e65821":"X2 = pd.concat([X1,data_target],axis=1)\nX2","edc9e0af":"import numpy as np\nzscore = np.abs(stats.zscore(X2[colnames]))\noutlierlist = np.where((zscore >3))\nprint(outlierlist)","e7804baa":"X3 = X2.drop(outlierlist[0],axis=0)\nprint(X3)\nX3.shape","b59d2f26":"X3.columns","52e89561":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression","40dcec96":"X_train, X_test, y_train, y_test = train_test_split(X3.iloc[:,:-1],X3.iloc[:,-1],test_size=0.3)\nprint(X_train.shape,\"\\n\")\nprint(X_test.shape,\"\\n\")\nprint(y_train.shape,\"\\n\")\nprint(y_test.shape,\"\\n\")","e5d37526":"model=LinearRegression()\nmodel.fit(X_train, y_train)","b08c449c":"y_pred= model.predict(X_test)\nprint(y_pred)","135a5fd4":"d = y_test - y_pred\nmse_f = np.mean(d**2)\nmae_f = np.mean(abs(d))\nrmse_f = np.sqrt(mse_f)\nr2_f = 1-(sum(d**2)\/sum((y_test-np.mean(y_pred))**2))\n\nprint(\"Results by manual calculation:\")\nprint(\"MAE:\",mae_f)\nprint(\"MSE:\", mse_f)\nprint(\"RMSE:\", rmse_f)\nprint(\"R-Squared:\", r2_f)","24c6ed96":"Adj_r2 = 1-(1-r2_f)*(40-1)\/(40-3-1)\nprint(Adj_r2)","38b6a845":"col1=[0]\ncol2=[1]\ncol3=[2]\ncol4=[0,1,2]","e6d1e0af":"#TV\nreg1 = LinearRegression().fit(X_train.iloc[:,col1], y_train)\nprint(reg1.score(X_test.iloc[:,col1], y_test))\nreg1.score(X_train.iloc[:,col1],y_train)","a09f5d17":"#Radio\nreg2 = LinearRegression().fit(X_train.iloc[:,col2], y_train)\nprint(reg2.score(X_test.iloc[:,col2], y_test))\nreg2.score(X_train.iloc[:,col2],y_train)","1edaa74c":"#Newspaper\nreg3 = LinearRegression().fit(X_train.iloc[:,col3], y_train)\nprint(reg3.score(X_test.iloc[:,col3], y_test))\nreg3.score(X_train.iloc[:,col3],y_train)","8cea356d":"#TV,Newspaper,Radio\nreg4 = LinearRegression().fit(X_train.iloc[:,col4], y_train)\nprint(reg4.score(X_test.iloc[:,col4], y_test))\nreg4.score(X_train.iloc[:,col4],y_train)","d73170df":"**From the Above Scores we can see that the feature affecting our Model the most is TV.**","30e07ec7":"As we can see the value of Adjusted R Square is about 90% which states our Model is Good.","caa01775":"**Lets Check which feature affects the most in the dataset to the dependant variable.**","412526d4":"After removing outliers from the dataset we have new data shape (198,4)","8cd8133c":"Let's Check if there are any null values present in the dataset.","c10946cd":"**Lets Check if there are any outlier present in the dataset**","938df644":"From the above heatmap and isnull().sum() syntax we can see there are no missing values present in the data.","2086bf93":"From the above heatmap we can see that there is strong positive relationship between our Dependant variable['Sales'] and Independant variable['TV']."}}