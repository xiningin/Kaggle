{"cell_type":{"eb960802":"code","83108607":"code","3b7d2db0":"code","d2154a67":"code","4e74f598":"code","8506f20a":"code","85b3b9c7":"code","d4522fb8":"code","55ecae7f":"code","8d6b0b34":"code","805e2832":"code","e410eaf0":"code","8f150c5b":"code","7ec5ad3c":"code","bf8fe7e1":"code","714ebfb7":"code","b6d4046d":"code","7878e82d":"code","f9506f59":"code","ba4e7cd9":"code","98d46765":"code","b112225f":"code","f63f96e0":"code","bd81b677":"code","9f665a4d":"code","fddadc16":"code","650728ee":"code","617a035a":"code","c3faa90a":"code","fdb809b5":"code","f16079cc":"code","351dc23a":"code","0be5f08e":"code","8eeb8ee0":"code","7e1b3dda":"code","1dff0b39":"code","edb2fa86":"code","1f236122":"code","c2c87bc6":"code","8a8132ab":"code","8aa7cb3d":"code","81ea8d23":"code","91a833b5":"code","684b3f0b":"code","554b87b9":"code","824eb7d9":"code","fd6eadbe":"code","14749683":"code","47037452":"code","d20e1946":"code","11fe43f8":"code","01a08875":"code","e5bf01ca":"code","f75e5a8e":"code","dd95a542":"code","86cf87b1":"code","1625366b":"code","7889107c":"code","32717d86":"code","56999b07":"code","8c12852e":"code","8d0f1048":"code","956ffd72":"code","42f64468":"code","14091e16":"code","18f730f1":"code","2db22760":"code","38b1d5de":"code","de0b5edb":"code","f3ff1a34":"code","eb047faf":"code","241c941a":"code","22a51f19":"code","f1107941":"code","17d8f2c8":"code","adc5ec40":"code","3473f92d":"code","305c2f6b":"code","db06b0c9":"code","df50e71a":"code","ac98e673":"code","2c17d328":"code","c32001e4":"code","b18a37d2":"code","f04cc6a3":"code","12e43c77":"code","3cde46e5":"code","5d865c04":"code","c7a36c39":"code","9bb70383":"code","14e0345f":"code","0c2d0553":"code","62c9bfe0":"code","16951d7e":"code","b119a8b2":"code","07854840":"code","e322224e":"code","6a2682ab":"code","9b130adf":"code","bf2679bf":"code","afb6f270":"code","741364b3":"code","1ada1cab":"code","e75ba8df":"code","68cc3dc4":"code","383be5fb":"code","5688e374":"code","019d57d2":"code","8a547159":"code","a591a71d":"code","380f4d1a":"code","a8d7e529":"code","13dca6f9":"code","a2a385c6":"code","4486e4ac":"code","6facdd30":"code","ad701caa":"code","3ffdf33c":"code","d1abad8d":"markdown","e13615ac":"markdown","561cede8":"markdown","cb4d33bf":"markdown","e8290fb9":"markdown","d707adef":"markdown","98b2689a":"markdown","c0e0eb69":"markdown","5919414a":"markdown","fc89bdcf":"markdown","4a787cae":"markdown","b9093fa9":"markdown","70217ffb":"markdown","e969f29d":"markdown","de83cc9e":"markdown","222c9c43":"markdown","3e5f5b22":"markdown","b0d63ef8":"markdown","1f154e9e":"markdown","1090d64c":"markdown","93bf818e":"markdown","f043f373":"markdown","f1e077cf":"markdown","32478def":"markdown","cbae0cec":"markdown","765b3713":"markdown","d2e2fe6b":"markdown","5ad2beb0":"markdown","7cf73574":"markdown","b89e8a80":"markdown","440a1798":"markdown","6ca53de9":"markdown","c1e784a7":"markdown","7b186f2c":"markdown","8fdf3667":"markdown","210bfeb8":"markdown","745887de":"markdown","64b5cf38":"markdown","90090eb9":"markdown","9338f6b3":"markdown","8ddb2c5c":"markdown","fed7e6ff":"markdown","58e9e94f":"markdown","14c3f876":"markdown","c728596a":"markdown","59bd0808":"markdown","fcef670c":"markdown","f71220cd":"markdown","96063a36":"markdown","d296932e":"markdown","9d7af34a":"markdown","cf0da990":"markdown","daf96050":"markdown","b37ed209":"markdown","1581cdeb":"markdown","22e0a551":"markdown","e0150230":"markdown","5e827f17":"markdown","24bdf317":"markdown","3e58cd0d":"markdown","3160c647":"markdown","b5ba4266":"markdown","160cd337":"markdown","29031292":"markdown","74248bc9":"markdown","b9b67df7":"markdown","0346ac5d":"markdown","38075ea9":"markdown","532bacc7":"markdown","d6577261":"markdown","dec890cf":"markdown","8e93ce2c":"markdown","dee1de59":"markdown","0902b338":"markdown","77b9357c":"markdown","84f1d52b":"markdown","5350c29b":"markdown","65c3c523":"markdown","3ec5091e":"markdown","dde5bde2":"markdown","baacb676":"markdown","0f2cc38d":"markdown","fc1045ee":"markdown","072c735b":"markdown","8ba7e89f":"markdown","5183f635":"markdown","e41ac1f1":"markdown","dd3d6d10":"markdown","5935b4d8":"markdown","1c4d9dcd":"markdown","d4bf5cb2":"markdown","da7cc66f":"markdown","700bd535":"markdown","73afe87b":"markdown","90e964bb":"markdown","c27944cc":"markdown","33a2a732":"markdown","430eeac9":"markdown","3af68b93":"markdown","e4cd7dbe":"markdown"},"source":{"eb960802":"import numpy as np\nfrom numpy import array\nimport pandas as pd\nfrom pandas import read_csv, Series, DataFrame, to_datetime\n\nimport pickle\n\nimport warnings\nwarnings.filterwarnings('ignore')","83108607":"import sklearn as sklearn\nimport lightgbm as lgb\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.ensemble import RandomForestRegressor","3b7d2db0":"import matplotlib as mpl\nimport matplotlib.pyplot as plt\nfrom matplotlib.pyplot import pie, plot, scatter, show, title, xlabel, ylabel, xticks\n%matplotlib inline ","d2154a67":"pd.set_option('display.max_rows', 600)\npd.set_option('display.max_columns', 50)\npd.plotting.backend='hvplot'","4e74f598":"import seaborn as sns\nsns.set(rc={'figure.figsize':(20, 5)})\nfrom seaborn import set_context, barplot, boxplot","8506f20a":"from palettable.colorbrewer.qualitative import Pastel1_7, Pastel1_8, Pastel1_9","85b3b9c7":"from plotly.graph_objects import Figure, Pie","d4522fb8":"!pip install googletrans","55ecae7f":"for p in [mpl, np, pd, sklearn, lgb, sns]:\n    print (p.__name__, p.__version__)","8d6b0b34":"def translate_to_english(word):\n\n    from googletrans import Translator\n    translator = Translator()\n    translated = translator.translate(word)\n    \n    return translated.text","805e2832":"raw_dir = '..\/input\/competitive-data-science-predict-future-sales\/' \nsales = read_csv(raw_dir+'sales_train.csv')\nshops = read_csv(raw_dir+'shops.csv')\nitems = read_csv(raw_dir+'items.csv')\nitem_cats = read_csv(raw_dir+'item_categories.csv')\ntest = read_csv(raw_dir+'test.csv')","e410eaf0":"sales.sample(8).sort_index()","8f150c5b":"from datetime import datetime as dt\ntry:\n    sales.date = sales.date.apply(lambda x: dt.strptime(x, '%d.%m.%Y'))\nexcept:\n    pass","7ec5ad3c":"sales['year_month'] = to_datetime(sales['date']).apply(lambda x: '{year}-{month}'.format(year=x.year, month= '{:02d}'.format(x.month)))","bf8fe7e1":"sales.sample(8).sort_index().sort_values('date_block_num')","714ebfb7":"sales.date.min(), sales.date.max()","b6d4046d":"time_range = sales.date.max() - sales.date.min() \ntime_range","7878e82d":"sales.describe()","f9506f59":"sales[sales.item_price < 0]","ba4e7cd9":"sales = sales[sales.item_price > 0]","98d46765":"sales[sales.item_price == sales.item_price.max()]","b112225f":"boxplot(x=sales.item_price)\nshow()","f63f96e0":"sales = sales[(sales.item_price < 307980.0) & (sales.item_price > 0)]","bd81b677":"boxplot(x=sales.item_price)\nshow()","9f665a4d":"sales[sales.item_cnt_day < 0]","fddadc16":"sales.item_cnt_day.mask(sales.item_cnt_day <0, 0, inplace=True)","650728ee":"boxplot(x=sales.item_cnt_day)\nshow()","617a035a":"sales.item_cnt_day.max()","c3faa90a":"sales = sales[sales[\"item_cnt_day\"] < 2000]","fdb809b5":"boxplot(x=sales.item_cnt_day)\nshow()","f16079cc":"len(sales['shop_id'].unique())","351dc23a":"unique_shops = array(sorted(sales['shop_id'].unique()))\nunique_shops, len(unique_shops)","0be5f08e":"pie(unique_shops,\n    labels=unique_shops,\n    labeldistance=1.0,\n    colors=Pastel1_9.hex_colors,\n    textprops={'fontsize': 8},\n    rotatelabels = True,\n    startangle=-90\n   )\ntitle('60 SHOP IDs')\nshow()","8eeb8ee0":"_ = DataFrame(sales.groupby('date_block_num')['shop_id'].nunique())\n_.sample(8).sort_index()","7e1b3dda":"set_context(\"talk\", font_scale=1.1)\nbarplot(\n    data = _,\n    x = _.index,\n    y = _.shop_id\n);\nplot(_.shop_id)\n\ntitle('\\nNUMBER SHOPS SELLING per DATE BLOCK\\n')\nxlabel('\\nDATE BLOCK')\nylabel('n of SHOPs-SELLING\\n')\nxticks(rotation=75, fontsize='xx-small')\n\n_.plot()\n\ndel _\nshow()","1dff0b39":"_ = DataFrame(sales.groupby(['date_block_num']).sum().item_cnt_day).reset_index()\n_.head(8)","edb2fa86":"set_context(\"talk\", font_scale=1.0)\nbarplot(\n    data = _,\n    x = 'date_block_num', \n    y = 'item_cnt_day'\n);\nplot(_.item_cnt_day)\ntitle('\\nNUMBER OF ITEMS SOLD per DATE BLOCK\\n')\nxlabel('\\nDATE BLOCK')\nylabel('ITEMS SOLD\\n')\nxticks(rotation=75, fontsize='x-small' )\n_.plot()\ntitle('\\nNUMBER OF ITEMS SOLD per DATE BLOCK\\n')\nxlabel('\\nDATE BLOCK')\nylabel('ITEMS SOLD\\n')\nxticks(rotation=75, fontsize='x-small' )\ndel _\nshow()","1f236122":"sales[\"weekday\"] = sales.date.apply(lambda x: x.weekday())\nsales.groupby(\"date\")[\"item_cnt_day\"].sum().plot(figsize=(15,7))\nshow()","c2c87bc6":"_ = DataFrame(sales.groupby(\"weekday\")[\"item_cnt_day\"].sum().sort_index())\nweek = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n_.index = _.index.to_series().apply(lambda x: week[x])\n_","8a8132ab":"title('\\nSALES PER WEEKDAY\\n')\nxlabel('\\nWeekday')\nylabel('Items Sold\\n')\nxticks(rotation=75, fontsize='x-small' )\n\nbarplot(\n    data = _,\n    x = _.index,\n    y = _.item_cnt_day\n)\n_.plot()\n\ntitle('\\nSALES PER WEEKDAY\\n')\nxticks(rotation=75, fontsize='x-small' )\n#xlabel('\\nWeekday')\nylabel('Items Sold\\n')\n\nshow()","8aa7cb3d":"pie(_.item_cnt_day,\n    labels=_.index, \n    colors=Pastel1_7.hex_colors)\ndel _\nshow()","81ea8d23":"_ = DataFrame(sales.groupby('year_month')['item_cnt_day'].sum())\n_","91a833b5":"title('\\nSALES PER MONTH\\n')\nxticks(rotation=75, fontsize='x-small' )\nxlabel('\\nMONTH of YEAR')\nylabel('Items Sold\\n')\n\nbarplot(\n    data = _,\n    x = _.index,\n    y = _.item_cnt_day\n       )\nplot(_.item_cnt_day)\n\n_.plot()\n\ntitle('\\nSALES PER MONTH\\n')\nxticks(rotation=75, fontsize='x-small' )\nxlabel('\\nMONTH of YEAR')\nylabel('Items Sold\\n')\ndel _\nshow()","684b3f0b":"_ = DataFrame(sales.groupby(['shop_id']).sum()['item_cnt_day'])\n_ = _.sort_values('item_cnt_day', ascending=False)\n_.head(8)","554b87b9":"set_context(\"talk\", font_scale=1.1)\nchart = barplot(\n    data = _,\n    x = _.index, \n    y = _.item_cnt_day\n);\n\ntitle('\\nITEMS SOLD per SHOP IDs\\n')\nxlabel('\\nSHOP ID #')\nylabel('ITEMS SOLD\\n')\nxticks(rotation=60, fontsize='xx-small' )\n\n_.sort_index().plot()\ntitle('\\nITEMS SOLD per SHOP IDs\\n')\nxlabel('\\nSHOP ID #')\nylabel('ITEMS SOLD\\n')\ndel _\nxticks(rotation=60, fontsize='xx-small' )\nshow()","824eb7d9":"_ = DataFrame(sales.groupby(['item_id']).sum()['item_cnt_day'])\n_ = _.sort_values('item_cnt_day', ascending=False)\n_.head(8)","fd6eadbe":"set_context(\"talk\", font_scale=1.4)\n_.sort_index().plot();\nxlabel('item id');\nylabel('sales');\nshow()","14749683":"max_item_id = _['item_cnt_day'].idxmax()\nmax_item_id","47037452":"_ = _[_.index != max_item_id]\nsales = sales[sales.item_id !=max_item_id]\ndel max_item_id","d20e1946":"_.sort_index().plot()\ntitle('ITEMS SOLD FOR EACH ITEM ID\\n')\nxlabel('\\nITEM ID#')\nylabel('ITEMS SOLD\\n')\nshow()","11fe43f8":"sales.groupby(['item_id']).sum().sort_values(['item_cnt_day'], ascending=False).head(10)[['item_cnt_day']]","01a08875":"_ = sales.groupby(['item_id']).sum()\n_ = _.sort_values(['item_cnt_day'], ascending=True)[['item_cnt_day']]\n_[_.item_cnt_day==1.0]","e5bf01ca":"sales.date.max()","f75e5a8e":"DataFrame(sales[sales.date == sales.date.max()]['item_id'].unique()).head(10)","dd95a542":"shops.sample(8).sort_index()","86cf87b1":"unique_shops = shops['shop_id'].unique()\nunique_shop_names = shops['shop_name'].unique()\n\nif len(unique_shops) != len(unique_shop_names):\n    print(\"There are different shop ids with the same name!\")\nelse:\n    print(\"There are \"+str(len(unique_shops))+\" unique shops and none of them have the same name!\")","1625366b":"shop_name_lengths = {}\nfor r in shops['shop_name']:\n    shop_name_lengths[r] = len(r)\nshop_names = Series(shop_name_lengths).sort_values()","7889107c":"shop_names = DataFrame(shop_names.reset_index())\nshop_names.columns=['name','name_length']\nshop_names.sample(8).sort_index()","32717d86":"set_context('talk', font_scale=1.2)\ndata = shop_names.groupby(['name_length']).count()\nbarplot(data=data, x=data.index, y=data.name)\ntitle('\\nNUMBER OF SHOPS\\nwith CERTAIN NAME LENGTH\\n')\nxlabel('\\nNAME LENGTH (number of characters)\\n')\nylabel('SHOPS\\n')\nshow()","56999b07":"shop_names.hist(bins=shop_names['name_length'].nunique()+1)\ntitle('NUMBER OF SHOPS\\nwith CERTAIN NAME LENGTH\\n')\nxlabel('\\nNAME LENGTH (number of characters)\\n')\nylabel('Number of Shops\\n')\nshow()","8c12852e":"_ = shop_names.iloc[shop_names['name_length'].idxmax()]\nlength = int(_.name_length)\nprint(\"The longest shop name is:\\n\"+ _['name'] + \"\\n\" +str(length) + \" characters long\")\ndel _","8d0f1048":"shops.shop_name.str.split().apply(lambda x: x[0]).unique()","956ffd72":"shops['city'] = shops.shop_name.str.split().apply(lambda x: x[0].strip())\nshops['city_en'] = shops.city.apply(lambda w: translate_to_english(w))","42f64468":"shops.sample(8).sort_index()","14091e16":"shops['shop_name_en'] = shops.shop_name.apply(lambda w: translate_to_english(w))\nshops.head(10)","18f730f1":"shops.city_en.nunique()","2db22760":"shops.groupby('city_en').count().sort_values('shop_id', ascending=False)","38b1d5de":"_ = shops.groupby('city_en').count()\n_ = _.sort_values('shop_id', ascending=False).reset_index()\n_ = _.groupby('shop_id').count()[['shop_name']]","de0b5edb":"_ = sales.merge(shops, how='left', on='shop_id')\n_ = _.groupby('city_en').sum()[['item_cnt_day']]\n_ = _.sort_values('item_cnt_day', ascending=False)\n_.head(10)","f3ff1a34":"items.sample(8).sort_index()","eb047faf":"items.item_category_id.nunique()","241c941a":"n_items = items.item_id.nunique()\nn_items","22a51f19":"sales.date.max()","f1107941":"_ = sales[sales.date == sales.date.max()][['item_id']]\n_ = _.sort_values('item_id').groupby('item_id').count()\n_","17d8f2c8":"items[items.item_id.isin(_.index.to_list())]","adc5ec40":"len(_)","3473f92d":"percentage = len(_)\/n_items * 100\nprint('percentage: ' + str('{:.3}'.format(percentage)) + \" % items were sold recently.\")","305c2f6b":"sales.date.min()","db06b0c9":"sales[sales.date == sales.date.min()][['item_price','item_id']].sort_values(['item_price'], ascending=False).head(10)","df50e71a":"_ = sales[sales.date == sales.date.min()][['item_price','item_id']]\n_ = _.sort_values(['item_price'], ascending=False)\n_ = _.head(10)['item_id'].to_list()\n_","ac98e673":"items[items.item_id.isin(_)][['item_name']]","2c17d328":"sales.groupby(['item_id']).sum().sort_values(['item_cnt_day'], ascending=False).head(10)[['item_cnt_day']]","c32001e4":"_ = sales.groupby(['item_id']).sum()[['item_cnt_day']]\n_ = _.sort_values(['item_cnt_day'], ascending=False)\n_ = _.head(10).index.to_list()\n_","b18a37d2":"items[items.item_id.isin(_)][['item_name']]","f04cc6a3":"sales.date.min()","12e43c77":"sales[sales.date == sales.date.min()].groupby(['item_id']).sum()[['item_cnt_day']].sort_values(['item_cnt_day'], ascending=False).head(10)","3cde46e5":"_ = sales[sales.date == sales.date.min()]\n_ = _.groupby(['item_id']).sum()[['item_cnt_day']]\n_ = _.sort_values(['item_cnt_day'], ascending=False)\n_ = _.head(10).index.to_list()\n_","5d865c04":"items[items.item_id.isin(_)][['item_name']]","c7a36c39":"item_cats.sample(8).sort_index()","9bb70383":"item_cats['item_category_name_en'] = item_cats['item_category_name'].apply(lambda w: translate_to_english(w))\nitem_cats.head(10)","14e0345f":"item_cats.item_category_id.nunique()","0c2d0553":"item_cats.item_category_name.nunique()","62c9bfe0":"_ = sales.merge(items,how='left', on='item_id')\n_ = _.groupby('item_category_id').item_cnt_day.sum()\n_ = DataFrame(_)\n_.sample(8).sort_index()","16951d7e":"set_context(\"talk\", font_scale=1.5)\n\nbarplot(\n    data = _,\n    x = _.index, \n    y = 'item_cnt_day'\n);\n\ntitle('\\nITEM CATEGORY SOLD\\n')\nxlabel('\\nItem Category ID')\nylabel('Items Sold\\n')\nxticks(rotation=85, fontsize='xx-small' )\nshow()\n\n_.plot()\n\ntitle('\\nITEM CATEGORY SOLD\\n')\nxlabel('\\nItem Category ID')\nylabel('Items Sold\\n')\nxticks(rotation=85, fontsize='xx-small' )\n\ndel _\nshow()","b119a8b2":"item_cats.sample(5).sort_index()","07854840":"cat_split = item_cats.item_category_name.str.split(\" - \")\n\nitem_cats[\"item_group\"] = cat_split.apply(lambda x:  x[0].strip())\nitem_cats['item_group_en'] = item_cats['item_group'].apply(lambda w: translate_to_english(w))\n\nitem_cats[\"item_subgroup\"] = cat_split.apply(lambda x:  x[1].strip() if len(x) == 2 else x[0].strip())\nitem_cats['item_subgroup_en'] = item_cats['item_subgroup'].apply(lambda w: translate_to_english(w))\n\nitem_cats.sample(8).sort_index()[['item_category_id', 'item_category_name_en','item_group_en','item_subgroup_en']]","e322224e":"item_cats[\"item_group\"].nunique()","6a2682ab":"set(item_cats[\"item_group_en\"].values)","9b130adf":"item_cats[\"item_subgroup\"].nunique()","bf2679bf":"all_train_data = sales.merge(items, how='left', on='item_id')\nall_train_data = all_train_data.merge(item_cats, how='left', on='item_category_id')\nall_train_data = all_train_data.merge(shops, how='left', on='shop_id')\nall_train_data.head(1)","afb6f270":"!mkdir ..\/working\/processed","741364b3":"necessary_columns = ['date','date_block_num','shop_id','item_id','item_price','item_cnt_day','year_month','weekday','item_category_id','item_group_en','item_subgroup_en','city_en']\nall_train_data[necessary_columns].to_csv('..\/working\/processed\/all_train_data.csv.gz', compression='gzip')\n","1ada1cab":"!ls -al ..\/working\/processed\/","e75ba8df":"_ = all_train_data.groupby('item_group_en').sum()[['item_cnt_day']]\n_ = _.sort_values('item_cnt_day', ascending=False)\n_.head(10)","68cc3dc4":"_ = all_train_data[all_train_data.item_group_en =='Movie']\n_ = _.groupby('shop_id').sum()[['item_cnt_day']]\n_ = _.sort_values('item_cnt_day', ascending=False).head(10)\n_","383be5fb":"_ = all_train_data.groupby('city_en')[['item_category_id']].nunique()\n_ = _.sort_values('item_category_id', ascending=False)\n_","5688e374":"_ = all_train_data.groupby('city_en')[['item_group']].nunique()\n_ = _.sort_values('item_group', ascending=False)\n_","019d57d2":"def func(val, _):\n    return _.item_group.ix[val]","8a547159":"labels = _.index\nvalues = _.item_group\nfig = Figure(data=[Pie(labels=labels, values=values, hole=.6)])\nfig.update_layout(\n    title={\n        'text': \"Number of Item Groups for Each City\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\nfig.update_traces(hoverinfo='label+value', textinfo='label+value', textfont_size=8)\nfig.show()","a591a71d":"groups = item_cats['item_group_en'].unique()\ncities = shops['city_en'].unique()\nprint(len(groups), len(cities))","380f4d1a":"_ = all_train_data.groupby(['city_en','item_group_en']).count()[['item_cnt_day']]\n_ = DataFrame(_.index.to_list(), columns =['city_en', 'item_group_en'])\n_.sample(10).sort_index()","a8d7e529":"_ = _.groupby('item_group_en').agg({'city_en':'count'}).sort_values('city_en', ascending = False)\n_","13dca6f9":"labels = _.index\nvalues = _.city_en\nfig = Figure(data=[Pie(labels=labels, values=values, hole=.6)])\nfig.update_layout(\n    title={\n        'text': \"Number of City<br>for Each Item Groups\",\n        'y':0.9,\n        'x':0.3,\n        'xanchor': 'center',\n        'yanchor': 'top'})\nfig.update_traces(hoverinfo='label+value', textinfo='label+value', textfont_size=8)\nfig.show()","a2a385c6":"_[_.city_en == 32]","4486e4ac":"_[_.city_en == 1]","6facdd30":"for city in all_train_data[all_train_data.item_group_en.isin(_[_.city_en == 1].index.to_list())]['city_en'].unique():\n    print(city)","ad701caa":"_ = all_train_data[['year_month','item_group_en','item_cnt_day']]\n_ = _.groupby(['year_month','item_group_en']).sum()\n_.head(17)","3ffdf33c":"plot(_.item_cnt_day.unstack())\n#plt.legend(all_train_data.item_group_en.unique())\ntitle('\\nSALES for EACH ITEM GROUP\\n')\nxlabel('\\nDATE BLOCK')\nylabel('SALES\\n')\nxticks(rotation=75, fontsize='xx-small')\nshow()","d1abad8d":"#### `Matplotlib`","e13615ac":"##### export to csv.gz","561cede8":"### What were 10 of the most pricey items sold at the first date of sales?","cb4d33bf":"### Version Control","e8290fb9":"## Libraries","d707adef":"From the above result: \n- payment cards, \n- books, \n- PC Games and \n- Programs\n\nare the item groups that exist in all cities.","98b2689a":"We preserve only those sane price which were positive.","c0e0eb69":"There were something unusual visible from the description above:\n\n- negative `item_price`\n- maximum `item_price` in the order of $(exp)^{+05}$ while the mean were in the order of $(exp)^{+02}$\n\n- negative `item_cnt_day`\n- maximum `item_cnt_day` in the order of $(exp)^{+03}$ while the mean were in the order of $(exp)^{+00}$","5919414a":"### How Many Category Subgroups Do We Have?","fc89bdcf":"##### REMOVE OUTLIER","4a787cae":"The most recent sales date was:","b9093fa9":"we can create item category group and item category subgroup","70217ffb":"#### Was there negative value in `item_price`?","e969f29d":"### How many cities do we have?","de83cc9e":"We import the functions we have developed for this assignment.","222c9c43":"#### `date_block_num`","3e5f5b22":"#### `Pandas` Options","b0d63ef8":"### What were 10 of the most frequent items sold during all period?","1f154e9e":"#### How's the date range of the sales data?","1090d64c":"### How Many Unique Shop IDs?","93bf818e":"#### `Seaborn` Options","f043f373":"We preserve only those `item_cnt_day` which were positive. There were 7356 rows of data and it's too many to delete safely so we just replace those `-1.0` with `0`","f1e077cf":"### What is the Longest Shop Name?","32478def":"## Shops\nThis DataFrame consists of \n- `shop_name` and \n- `shop_id`.","cbae0cec":"3 years minus 2 months duration = 34 months\n\n2 years 10 months","765b3713":" ###  How many shop ids were most of the cities had?","d2e2fe6b":"### Visualization Library","5ad2beb0":"### Machine Learning Libraries","7cf73574":"We have an outlier in `item_price`, it can be seen from the boxplot where the price of more than 300,000. This outlier must be removed for sanity sake. We must limit sales.item_price to be lower than the outlier price of 300,000.","b89e8a80":"### How Many Category Groups Do We Have?","440a1798":"## Functions","6ca53de9":"There are 60 unique shop ids in the data of which are:","c1e784a7":"### How Many Unique *`item_category_id`* in `item_cats`?","7b186f2c":"### What were 10 of the most sold items at the beginning of 2013?","8fdf3667":"### How Many Item Sold for Each Item Categories?","210bfeb8":"### How Many unique item ids was sold recently?","745887de":"### Where is the City for Each Shops?","64b5cf38":"### How was the sales for each item ID?","90090eb9":"It can be seen from the plot that the number of sold items peaked every December of each year.","9338f6b3":"### Can We Split Categories into *`item_group`* and *`item_subgroup`*?","8ddb2c5c":"##### Maximum `item_price`","fed7e6ff":"### How was the sales fluctuate for each item group?","58e9e94f":"## Item Cats\nThis DataFrame consists of \n- `item_category_name` and\n- `item_category_id`","14c3f876":"### What was the most recent items sold?","c728596a":"#### When was the most recent items sold?","59bd0808":"## Sales Fluctuation","fcef670c":"we have an outlier in the `item_cnt_day`","f71220cd":"taking just the index:","96063a36":"Most shops have 22 characters length in their name. The longest shop name has 47 characters.","d296932e":"## Sales\n\nThis DataFrame consists of \n- `date`, \n- `date_block_num`, \n- `shop_id`, \n- `item_id`, \n- `item_price`\tand \n- `item_cnt_day`","9d7af34a":"#### What was\/ were the most recent items sold?","cf0da990":"Let's load the data from the hard drive first.","daf96050":"so we have a `city` column and a simplified `shop_name`","b37ed209":"We have 32 cities and 20 `item_group`s which means there are 32 x 20 combination of `city-item_group` to check","1581cdeb":"### How was the sales for each Shop ID?","22e0a551":"## Items\n\nThis DataFrame consists of \n- `item_name`, \n- `item_id` and \n- `item_category_id`","e0150230":"##### Negative `item_price` removal","5e827f17":"### Descriptive Statistics","24bdf317":"## All train data in one DataFrame","3e58cd0d":"### Which city has the most sales?","3160c647":"#### What to do with maximum value in `item_price`?","b5ba4266":"##### AFTER OUTLIER REMOVAL","160cd337":"after removal of the outlier","29031292":"#### `palettable`","74248bc9":"### How Many Unique Item IDs in `items`?","b9b67df7":"### How was the sales for each Date Block?\n\nItems Sold per date block","0346ac5d":"#### What were the least sold items?","38075ea9":"### From the most popular item group, which shop sold the most items?","532bacc7":"### How Many Unique Item Categories in `items`?","d6577261":"Items were sold mostly on Saturday and least on Monday.","dec890cf":"### What *`item_group`* exists in all cities?","8e93ce2c":"### How was the sales for each month?\n","dee1de59":"#### How many unique Shop IDs were in the data?","0902b338":"From the visualization it seems that we have found an outlier or anomaly with the most sold items with id 20949. We will remove this product ID from `item_cnt` and `sales`.","77b9357c":"#### What item was the most sold? ","84f1d52b":"### Proxy column (helper variable)\n#### `year-month` ","5350c29b":"## Load raw data","65c3c523":"##### The Most Recent Item IDs ","3ec5091e":"From the above result:\n - Delivery of goods\n - MAC games\n - Android Games\n    \nare the item groups that exist only in 1 city that is: \n - Shop Online\n - Digital","dde5bde2":"Moscow can be seen as the city with the most shop","baacb676":"# Exploratory Data Analysis (EDA)","0f2cc38d":"### How was the sales for each weekday?","fc1045ee":"### How many item groups for each city?","072c735b":"### Which city has the most shop?","8ba7e89f":"### What *`item_group`* exists in only one city?","5183f635":"#### Was\/ were there something unusual about the data?","e41ac1f1":"Most of the cities had only one `shop_id`","dd3d6d10":"### Which city has all item categories?","5935b4d8":"The first step is to load all the required libraries and load raw data files into memory.","1c4d9dcd":"#### What were 10 of the most sold items?","d4bf5cb2":"### How Many Unique *`item_category_name`* in `item_cats`?","da7cc66f":"Predict Future Sales - EDA","700bd535":"#### How many Shop IDs selling for each `block_date_num`?\n\nCounting unique number of shops selling in each block date.","73afe87b":"### What were 10 of the most popular groups items sold at all period?","90e964bb":"### How Many Shops Had Certain Name Lengths?","c27944cc":"#### Was there negative values in `item_cnt_day`?","33a2a732":"### Scientific Libraries","430eeac9":"#### `plotly`","3af68b93":"`date_block_num` is nothing more than the order number of `year_month` combination:\n\n- starting from `0` at `2013-01` \n- to `33` at `2015-10`","e4cd7dbe":"#### What to do with maximum value in `item_price`?"}}