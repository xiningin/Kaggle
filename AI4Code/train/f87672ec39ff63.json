{"cell_type":{"dd5540a1":"code","e5ebafa8":"code","fd8cdcdf":"code","47c444ba":"code","f6732f51":"code","7598cb32":"code","1734ec50":"code","27f3dda8":"code","cdaaa434":"code","c46268cb":"code","b102c0e0":"code","5a47a559":"code","ba10f28c":"code","ac921d10":"code","361069b6":"code","0884bd40":"code","76e289d6":"code","84050aed":"code","c5f0c878":"markdown","f85172a7":"markdown","2fe48e35":"markdown","484937e6":"markdown","69a1dab7":"markdown","a363c8fd":"markdown","260622b7":"markdown","32d8e7e1":"markdown"},"source":{"dd5540a1":"# General Data Manipulation Libraries\nimport numpy as np; print('Numpy Version:', np.__version__)\nimport pandas as pd; print('Pandas Version:', pd.__version__)\n\n# Model & Helper Libraries\nfrom sklearn.model_selection import train_test_split","e5ebafa8":"# Load Data\ninput_dir = '\/kaggle\/input\/santander-customer-transaction-prediction\/'\ndf_train = pd.read_csv(input_dir + 'train.csv')\n\n# Train-Validation Split\nvar_colums = [c for c in df_train.columns if c not in ['ID_code','target']]\nX = df_train.loc[:, var_colums]\ny = df_train.loc[:, 'target']\n\n# We are performing a 80-20 split for Training and Validation\nX_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=0.2, random_state=11)\nX_train.shape, X_valid.shape, y_train.shape, y_valid.shape","fd8cdcdf":"# Import LightGBM \nimport lightgbm as lgb","47c444ba":"# Create Dataset for LightGBM\nlgb_train = lgb.Dataset(X_train.values, label=y_train.values)\nlgb_eval = lgb.Dataset(X_valid.values, y_valid.values, reference=lgb_train)","f6732f51":"clf = lgb.LGBMClassifier()\nparams = {    'boosting_type': 'gbdt',\n              'objective': 'binary',\n              'num_leaves': 40,\n              'learning_rate': 0.05,\n              'feature_fraction': 0.5,\n              'metric': 'auc',  \n              'bagging_fraction': 0.5,\n              'is_unbalance': 'true',\n              'n_estimators': 200\n              }\nclf.set_params(**params)\nclf.get_params()","7598cb32":"clf = lgb.LGBMClassifier()\nclf.fit(X_train, y_train,eval_set=[(X_valid.values, y_valid.values)], eval_metric='auc', early_stopping_rounds=5, verbose=True)","1734ec50":"# Predictions\ny_pred=clf.predict(X_valid)\nnp.unique(y_pred, return_counts=True)","27f3dda8":"# view accuracy\nfrom sklearn.metrics import accuracy_score\naccuracy=accuracy_score(y_pred, y_valid)\nprint('LightGBM Model accuracy score: {0:0.4f}'.format(accuracy_score(y_valid, y_pred)))","cdaaa434":"from sklearn.metrics import classification_report\nprint(classification_report(y_valid, y_pred))","c46268cb":"from sklearn.metrics import confusion_matrix\nimport seaborn as sns\ncm = confusion_matrix(y_valid, y_pred)\n\n# visualize confusion matrix with seaborn heatmap\n\ncm_matrix = pd.DataFrame(data=cm, columns=['Actual Positive:1', 'Actual Negative:0'], \n                                 index=['Predict Positive:1', 'Predict Negative:0'])\n\nsns.heatmap(cm_matrix, annot=True, fmt='d', cmap='YlGnBu')","b102c0e0":"# Install Dependencies\n!pip install requests\n!pip install tabulate\n!pip install \"colorama>=0.3.8\"\n!pip install future","5a47a559":"# Install and import h2o\n!pip install -f http:\/\/h2o-release.s3.amazonaws.com\/h2o\/latest_stable_Py.html h2o\nimport h2o","ba10f28c":"from h2o.automl import H2OAutoML\nh2o.init(max_mem_size='16G')","ac921d10":"df_h2o = h2o.import_file('\/kaggle\/input\/santander-customer-transaction-prediction\/train.csv')\ntype(df_h2o)","361069b6":"# For binary classification, response should be a factor\ndf_h2o[\"target\"] = df_h2o[\"target\"].asfactor()\n\n# Settign up Response and Predictor Columns\ny_col = \"target\"\nx_col = df_h2o.columns\nx_col.remove(y_col) \nx_col.remove(\"ID_code\")","0884bd40":"aml = H2OAutoML(max_models=20, max_runtime_secs=3600, seed=11, verbosity=\"info\", balance_classes = True) #max_runtime_secs\naml.train(x=x_col,y=y_col, training_frame=df_h2o)  \n\n    \n# View the AutoML Leaderboard\nlb = aml.leaderboard\nprint(lb.head(rows=lb.nrows))  # Print all rows instead of default (10 rows)  ","76e289d6":"# Get model ids for all models in the AutoML Leaderboard\nmodel_ids = list(aml.leaderboard['model_id'].as_data_frame().iloc[:,0])\n# Get the \"All Models\" Stacked Ensemble model\nse = h2o.get_model([mid for mid in model_ids if \"StackedEnsemble_AllModels\" in mid][0])\n# Get the Stacked Ensemble metalearner model\nmetalearner = h2o.get_model(se.metalearner()['name'])","84050aed":"metalearner.std_coef_plot()","c5f0c878":"## **1. Required Libraries & Setup**","f85172a7":"### **2.1 Using LightGBM**","2fe48e35":"**View Accuracy**","484937e6":"**Classification Metrics**","69a1dab7":"# **Training Notebook for Santander Dataset with AutoML**","a363c8fd":"## **2. Results with Different Classifier models**","260622b7":"### **6.1 Using AutoML H20**","32d8e7e1":"**Confusion-matrix**"}}