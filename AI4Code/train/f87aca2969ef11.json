{"cell_type":{"c89db681":"code","d527e23d":"code","0aceeda0":"code","446e5031":"code","79924971":"code","9afd4286":"code","d138a8db":"code","6ccaaaa2":"code","7dabe0e5":"code","12882c92":"code","15f67d16":"code","fef33ee9":"code","1a43c22c":"code","5df1894c":"code","fe678e7c":"code","91435ca5":"code","6edd9e0e":"code","433b98cb":"code","8f4ff960":"code","a0c2aab1":"code","43fd1b03":"code","675f9c90":"code","98f65be7":"code","59ba66ac":"code","cd5444af":"code","2bfbfd8e":"code","7295f91a":"code","32891f7d":"code","d5360054":"code","13bd697d":"code","76870228":"code","e8573aee":"code","728297d9":"code","5ab635c9":"code","b79c45fa":"code","5fd080bb":"code","d4251f97":"code","ba4486e3":"code","9a307839":"code","66982191":"code","5b9013a5":"code","7f3957b6":"code","e97a809b":"markdown","ff3c3c9f":"markdown","b41c38c9":"markdown","40aec553":"markdown","00f86087":"markdown","d2117a67":"markdown","5d20f544":"markdown","5553bb65":"markdown","fa26ce2d":"markdown","67f4439f":"markdown","975d1718":"markdown","c629f200":"markdown","57dab11f":"markdown"},"source":{"c89db681":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d527e23d":"import pandas as pd\nimport numpy as np\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import LabelEncoder\nfrom xgboost import XGBRegressor","0aceeda0":"pd.pandas.set_option('display.max_columns',None)","446e5031":"train=pd.read_csv('..\/input\/covid19-global-forecasting-week-5\/train.csv')\ntest=pd.read_csv('..\/input\/covid19-global-forecasting-week-5\/test.csv')","79924971":"train.head()","9afd4286":"test.head()","d138a8db":"train.shape","6ccaaaa2":"test.shape","7dabe0e5":"train.isna().sum()","12882c92":"test.isna().sum()","15f67d16":"train.info()","fef33ee9":"test.info()","1a43c22c":"train.groupby('Country_Region')['Population'].max()","5df1894c":"train['date']=pd.to_datetime(train.Date,format='%Y-%m-%d').dt.day\ntrain['month']=pd.to_datetime(train.Date,format='%Y-%m-%d').dt.month","fe678e7c":"test['date']=pd.to_datetime(test.Date,format='%Y-%m-%d').dt.day\ntest['month']=pd.to_datetime(test.Date,format='%Y-%m-%d').dt.month","91435ca5":"x=train.groupby('Country_Region')['Population'].max()\ny=train.groupby('Country_Region')['Country_Region'].max()\nfig=px.pie(data_frame=train,values=x,names=y,hole=0.30)\nfig.update_traces(textposition='inside',textinfo='percent+label')","6edd9e0e":"fig=px.pie(data_frame=train,values='TargetValue',names='Country_Region',hole=0.30)\nfig.update_traces(textposition='inside',textinfo='percent+label')","433b98cb":"plt.figure(figsize=(10,6))\nsns.barplot(x='Target',y='TargetValue',data=train)","8f4ff960":"conf_train=train[train['Target']=='ConfirmedCases']\nlarge10=conf_train.groupby('Country_Region')['TargetValue'].sum()\nlarge10=large10.nlargest(10)\nLarge10=large10.to_frame()\nLarge10.reset_index(level=0, inplace=True)","a0c2aab1":"plt.figure(figsize=(15,10))\nsns.barplot(data=Large10,x='Country_Region',y='TargetValue')","43fd1b03":"conf_train=train[train['Target']=='Fatalities']\nlarge10=conf_train.groupby('Country_Region')['TargetValue'].sum()\nlarge10=large10.nlargest(10)\nLarge10=large10.to_frame()\nLarge10.reset_index(level=0, inplace=True)","675f9c90":"plt.figure(figsize=(15,10))\nsns.barplot(data=Large10,x='Country_Region',y='TargetValue')","98f65be7":"top5=['US','United Kingdom','Brazil','Russia','India']\nconf_train=train[train['Target']=='ConfirmedCases']\nfdf=conf_train.loc[conf_train['Country_Region'].isin(top5)]\npx.line(data_frame=fdf,y='TargetValue',x=\"Date\",color='Country_Region')","59ba66ac":"conf_train=train[(train.Target=='ConfirmedCases') & (train.Country_Region=='India') ]\npx.line(data_frame=conf_train,y='TargetValue',x=\"Date\",color='Country_Region',hover_name=\"Target\")","cd5444af":"conf_train=train[(train.Target=='Fatalities') & (train.Country_Region=='India') ]\npx.line(data_frame=conf_train,y='TargetValue',x=\"Date\",color='Country_Region',hover_name=\"Target\")","2bfbfd8e":"le=LabelEncoder()","7295f91a":"train[\"Country_Region\"]=le.fit_transform(train[\"Country_Region\"])","32891f7d":"test[\"Country_Region\"]=le.fit_transform(test[\"Country_Region\"])","d5360054":"train_id=train['Id']\ntrain.drop(['County','Province_State','Target','Date','Id'],axis=1,inplace=True)","13bd697d":"train.head()","76870228":"test_id=test['ForecastId']\ntest.drop(['County','Province_State','Target','Date','ForecastId'],axis=1,inplace=True)","e8573aee":"test.head()","728297d9":"from sklearn.preprocessing import StandardScaler\nscaler=StandardScaler()","5ab635c9":"X=train.drop(['TargetValue'],axis=1)\ny=train['TargetValue']","b79c45fa":"train_scaled=scaler.fit_transform(X)","5fd080bb":"test_scaled=scaler.transform(test)","d4251f97":"xgbr=XGBRegressor(n_estimators=1500,max_depth=5)\nxgbr.fit(train_scaled,y)","ba4486e3":"prediction=xgbr.predict(test_scaled)","9a307839":"output = pd.DataFrame({'Id': test_id  , 'TargetValue': prediction})\noutput.head()","66982191":"a=output.groupby(['Id'])['TargetValue'].quantile(q=0.05).reset_index()\nb=output.groupby(['Id'])['TargetValue'].quantile(q=0.5).reset_index()\nc=output.groupby(['Id'])['TargetValue'].quantile(q=0.95).reset_index()","5b9013a5":"a.columns=['Id','q0.05']\nb.columns=['Id','q0.5']\nc.columns=['Id','q0.95']\na=pd.concat([a,b['q0.5'],c['q0.95']],1)\na['q0.05']=a['q0.05']\na['q0.5']=a['q0.5']\na['q0.95']=a['q0.95']","7f3957b6":"sub=pd.melt(a, id_vars=['Id'], value_vars=['q0.05','q0.5','q0.95'])\nsub['variable']=sub['variable'].str.replace(\"q\",\"\", regex=False)\nsub['ForecastId_Quantile']=sub['Id'].astype(str)+'_'+sub['variable']\nsub['TargetValue']=sub['value']\nsub=sub[['ForecastId_Quantile','TargetValue']]\nsub.reset_index(drop=True,inplace=True)\nsub.to_csv(\"submission.csv\",index=False)\nsub.head()","e97a809b":"## Top 10\n## Confirmed cases Vs Country","ff3c3c9f":"#### similarly for test dataset","b41c38c9":"## Top 10\n## Fatalities Vs Country ","40aec553":"### Population Vs Country","00f86087":"### Now lets extract date and month from date column","d2117a67":"### the first fatalities from covid-19 in india was reported on 11th march","5d20f544":"### lets handle categorical Feature","5553bb65":"#### Similarly for test dataset","fa26ce2d":"## Confirmed Case Vs Fatalities","67f4439f":"## XGBoostRegressor","975d1718":"### the first confirmed case of covid-19 in india was found on 30 jan","c629f200":"## Target Value Vs Country","57dab11f":"# Data visualization"}}