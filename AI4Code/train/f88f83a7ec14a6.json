{"cell_type":{"a46546fd":"code","d463fc4a":"code","17d30b18":"code","60006a7c":"code","f5353142":"code","9cbaa37a":"code","de6f0a99":"code","8fd2e3f5":"code","dbe00cad":"code","c5193a84":"code","a5785a53":"code","e9e438b7":"code","ad26e24d":"code","16f997d5":"code","fb312e92":"code","0bc9c2ed":"code","e20c9f15":"code","927bd16e":"code","6dbe6de6":"code","682f04f1":"code","9c3c3ca7":"code","e8a912a9":"code","7066fe83":"code","02bc8aac":"code","be28e0ee":"markdown","1ab852eb":"markdown","2eb0f7a5":"markdown","5387afa1":"markdown","7dcbfaa6":"markdown","a6d44d3b":"markdown","9be6d134":"markdown"},"source":{"a46546fd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d463fc4a":"df_train = pd.read_csv(\"\/kaggle\/input\/fashionmnist\/fashion-mnist_train.csv\")\ndf_test = pd.read_csv(\"\/kaggle\/input\/fashionmnist\/fashion-mnist_test.csv\")","17d30b18":"df_train.shape","60006a7c":"df_test.shape","f5353142":"df_train.head()","9cbaa37a":"df_test.head()","de6f0a99":"df_train.value_counts().sum()","8fd2e3f5":"df_test.value_counts().sum()","dbe00cad":"df_train.isnull().sum()","c5193a84":"df_test.isnull().sum()","a5785a53":"df_train.info()","e9e438b7":"df_test.info()","ad26e24d":"df_train.describe()","16f997d5":"df_test.describe()","fb312e92":"df_train_y = df_train.label\ny_test = df_test.label","0bc9c2ed":"df_train_x = df_train.drop(\"label\", axis=1)\/256\nx_test = df_test.drop(\"label\", axis=1)\/256","e20c9f15":"np.random.seed(0)\n\nvalid2_idx = np.random.choice(60000,10000,replace=False)\nvalid1_idx = np.random.choice(list(set(range(60000)) - set(valid2_idx)), 10000, replace=False)\ntrain_idx = list(set(range(60000)) - set(valid1_idx) - set(valid2_idx))\n\nx_train = df_train_x.iloc[train_idx,:]\ny_train = df_train_y.iloc[train_idx]\n\nx_valid1 = df_train_x.iloc[valid1_idx,:]\ny_valid1 = df_train_y.iloc[valid1_idx]\n\nx_valid2 = df_train_x.iloc[valid2_idx,:]\ny_valid2 = df_train_y.iloc[valid2_idx]","927bd16e":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import confusion_matrix","6dbe6de6":"RF_model = RandomForestClassifier(n_estimators=100, max_depth=50, random_state=42)\nRF_model.fit(x_train, y_train)","682f04f1":"confusion_matrix(RF_model.predict(x_train), y_train)","9c3c3ca7":"RF_model_train_acc = (RF_model.predict(x_train) == y_train).mean()\nprint(\"Training Accuracy =\", RF_model_train_acc)","e8a912a9":"confusion_matrix(RF_model.predict(x_valid1),y_valid1)","7066fe83":"RF_model_valid1_acc = (RF_model.predict(x_valid1) == y_valid1).mean()\nprint(\"Validation Accuracy =\", RF_model_valid1_acc)","02bc8aac":"print(\"Training Accuracy =\", RF_model_train_acc)\nprint(\"Validation Accuracy =\", RF_model_valid1_acc)","be28e0ee":"### Fitting","1ab852eb":"### Training Accuracy","2eb0f7a5":"### Splitting and Training","5387afa1":"### Validation Accuracy","7dcbfaa6":"### Loading Datasets","a6d44d3b":"### Importing RandomForestClassifier","9be6d134":"# General Overview of the Datasset"}}