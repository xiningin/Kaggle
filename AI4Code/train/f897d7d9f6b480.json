{"cell_type":{"dddf348a":"code","c86d1cef":"code","783e41ae":"code","aa969c99":"code","9c60f313":"code","fdc6cb41":"code","0effaafa":"code","13063c23":"code","d5c43f1a":"code","2a335a6c":"code","0fdd1024":"code","2a094770":"code","aa0975c8":"code","1df8271d":"code","9d3ff5ad":"code","e4909e4e":"code","e00b2531":"code","f3593922":"code","e2998ace":"code","b9ee108c":"code","e66e488a":"code","fcfadbaf":"code","4af4fa25":"code","dce19d0c":"code","1d9b63b7":"code","a5cc6075":"code","78e19af3":"code","5182c6ae":"code","23d989db":"code","d0161c24":"code","14338333":"code","16ebb5ce":"code","38316ea2":"code","d8e6f700":"code","63ab67ab":"code","66ee9f17":"code","c692fe57":"code","8478883a":"code","6bc39c83":"code","d6cc4001":"code","99fd1321":"code","824216cf":"code","211631ee":"code","d615df81":"code","c058a6a8":"code","71c690dd":"code","124d5698":"code","b8209e62":"code","1a535bb3":"code","c4cb9116":"code","5a88c705":"code","f98903ba":"code","bc245315":"code","0ea8483c":"code","f4ecbd0d":"code","013c6486":"code","c91993ea":"code","bc02582c":"code","e3deb052":"code","a1907e89":"code","8802449b":"code","f579d0f8":"code","a218c979":"code","b9bcd3e2":"code","bb4d7d47":"code","8612169e":"code","3356083d":"code","186020b0":"code","02a1a7f9":"code","4922df2c":"code","78d5408e":"code","d0339a1a":"code","1ae2b5c7":"code","56f6fa1f":"markdown","7ee525f0":"markdown","902a3de8":"markdown","5d43168b":"markdown","a4cb7aff":"markdown","c19aa30f":"markdown","1dfc3e84":"markdown","6ad03f21":"markdown","82a693f4":"markdown","737d8d18":"markdown","23dec9e1":"markdown","f262caed":"markdown","717ead77":"markdown","34f6f8e0":"markdown","886ead99":"markdown","f71e42b4":"markdown","dd533640":"markdown","3de92063":"markdown","930d023d":"markdown","2a97b53e":"markdown"},"source":{"dddf348a":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom matplotlib import rcParams\nimport scipy as sp","c86d1cef":"df = pd.read_csv(\"..\/input\/mushroom-classification\/mushrooms.csv\", skipinitialspace= True)","783e41ae":"df.head()","aa969c99":"df.shape","9c60f313":"df.size","fdc6cb41":"df.ndim","0effaafa":"df.columns","13063c23":"len(df.columns)","d5c43f1a":"df.index","2a335a6c":"df.isnull().sum()","0fdd1024":"df[\"cap-shape\"].unique()","2a094770":"df['class'].unique()","aa0975c8":"df['cap-surface'].unique()","1df8271d":"df","9d3ff5ad":"df.columns","e4909e4e":"df[\"class\"]","e00b2531":"df[\"class\"].unique()","f3593922":"df[\"class\"].value_counts()","e2998ace":"X = df.iloc[:,1:]\ny = df[\"class\"]","b9ee108c":"X.shape","e66e488a":"X.head()","fcfadbaf":"y.shape","4af4fa25":"y.head()","dce19d0c":"X_new = pd.get_dummies(X)","1d9b63b7":"X_new.head()","a5cc6075":"#pd.set_option(\"display.max_rows\", 8123, \"display.max_columns\", 117)","78e19af3":"X_new.shape","5182c6ae":"df.columns","23d989db":"X_new = X_new.drop(['cap-shape_b','cap-surface_f','cap-color_b','bruises_f','odor_a','gill-attachment_a','gill-spacing_c',\n                    'gill-size_b','gill-color_b','stalk-shape_e','stalk-root_b','stalk-surface-above-ring_f',\n                    'stalk-surface-below-ring_f','stalk-color-above-ring_b','stalk-color-below-ring_b',\n                    'veil-color_n','ring-number_n','ring-type_e','spore-print-color_b','population_a','habitat_d'], axis = 1)","d0161c24":"X_new.head()","14338333":"X_new.shape","16ebb5ce":"from sklearn.preprocessing import scale","38316ea2":"X_scaled = pd.DataFrame(scale(X_new))","d8e6f700":"X_scaled","63ab67ab":"from sklearn.decomposition import PCA","66ee9f17":"pca = PCA()","c692fe57":"X_pca = pd.DataFrame(pca.fit_transform(X_scaled))","8478883a":"X_pca","6bc39c83":"pca.explained_variance_ratio_","d6cc4001":"pca.explained_variance_ratio_[0:45]*100","99fd1321":"x1 = (range(1,97))\ny1 = list(pca.explained_variance_ratio_*100)","824216cf":"rcParams[\"figure.figsize\"] = 15,10\n\nax = plt.gca()\nax.set_facecolor(\"xkcd:white\")\n\nplt.plot(x1, y1, ls =\"-\", lw =8, marker = \"^\", mew = 2.5, color = \"cyan\", mec= \"purple\")\n\nplt.yticks([0,1,2,3,4,5,6,7,8,9,10])\n\nplt.annotate('No. of PCs used as features : 45', xy=(45, 0.66), xytext=(54, 2), size = 20,\n             arrowprops=dict([(\"facecolor\",\"black\"), (\"shrink\",0), (\"edgecolor\" ,\"black\")]))\n\n\nplt.legend([\"% EVR of PCA\"], fontsize = 'xx-large', loc = 'upper right')\nplt.xlabel(\"PCA\", size = 16)\nplt.ylabel(\"Percentage of Explained Variance Ratio\", size = 16)\nplt.title(\"% of Explained Variance Ratio Vs PCA\", size = 25)\nplt.grid(ls = \"-.\")\nplt.show()","211631ee":"len(pca.explained_variance_ratio_)","d615df81":"pca.explained_variance_ratio_.sum()","c058a6a8":"pca.explained_variance_ratio_[0:45].sum()","71c690dd":"pca.explained_variance_ratio_[0:45]","124d5698":"X_pca_final = X_pca.loc[:,0:45]","b8209e62":"X_pca_final","1a535bb3":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X_pca_final, y, test_size=0.2, random_state=7)","c4cb9116":"X_train","5a88c705":"X_train.shape","f98903ba":"y_train.head()","bc245315":"y_train.shape","0ea8483c":"from sklearn.ensemble import RandomForestClassifier","f4ecbd0d":"model = RandomForestClassifier(n_estimators=70,\n                               criterion='gini',\n                               max_depth=7)","013c6486":"model.fit(X_train,y_train)","c91993ea":"y_predict = model.predict(X_test)","bc02582c":"y_predict.shape","e3deb052":"from sklearn.metrics import accuracy_score\n\naccuracy_score(y_test,y_predict)","a1907e89":"pd.crosstab(y_test,y_predict)","8802449b":"from sklearn.metrics import classification_report\n\nprint(classification_report(y_test,y_predict))","f579d0f8":"y_test","a218c979":"pd.Series(y_predict)","b9bcd3e2":"y_test","bb4d7d47":"type(y_test)","8612169e":"y_test.value_counts()","3356083d":"type(y_predict)","186020b0":"y_predict","02a1a7f9":"predict = pd.DataFrame(y_predict, columns = [\"classes\"])","4922df2c":"predict","78d5408e":"predict.classes.value_counts()","d0339a1a":"plt.figure()\n\nrcParams[\"figure.figsize\"] = 14,11\n\nplt.subplot(221)\nlabels0 = [\"Edible\",\"Non-Edible\"]\nz1 = [850,775]\n\nplt.pie(z1 , [0.05,0], labels = labels0 ,  autopct = \"%0.2f%%\", colors = [\"green\",\"red\"], radius = 1.1, startangle = 90,shadow = True)\nplt.legend(labels0,\n           title = \"Mushroom Categories\",\n           loc = \"upper right\",\n           bbox_to_anchor = (1.4,0.4,0.,0.5))\nplt.title(\"Testing data of Mushroom\", size = 25)\n\n\nplt.subplot(222)\nz = [850,775]\nlabels1 = [\"Edible\",\"Non-Edible\"]\n\nplt.pie(z , [0.05,0],  labels = labels1, autopct = \"%0.2f%%\", colors = [\"cyan\",\"yellow\"], radius = 1.1, startangle = 90,shadow = True)\nplt.legend(labels1,\n           loc = \"upper right\",\n           title = \"Mushroom Categories\",\n           bbox_to_anchor = (1.5,0.2,0.1,0.7))\nplt.title(\"Predictions about Mushroom\", size = 25)\nplt.show()","1ae2b5c7":"rcParams[\"figure.figsize\"] = 14,6\n\nplt.subplot(121)\nplt.bar(x = [\"Edible\",\"Non-Edible\"], height = [850,775], width = 0.19, color = [\"green\",\"red\"])\nplt.xticks([0,1])\nplt.title(\"Testing Data\", size =20)\nplt.xlabel(\"Mushroom Categories\",size = 10)\nplt.ylabel(\"Count\",size = 10)\nplt.grid(ls = \"-.\")\n\n\n\nplt.subplot(122)\nplt.bar(x = [\"Edible\",\"Non-Edible\"], height = [850,775], width = 0.19, color = [\"cyan\",\"yellow\"])\nplt.xticks([0,1])\nplt.title(\"Predictions \", size =20)\nplt.xlabel(\"Mushroom Categories\",size = 10)\nplt.ylabel(\"Count\",size = 10)\nplt.grid(ls = \"-.\")\nplt.show()","56f6fa1f":"### Building ML model using Decision Tree","7ee525f0":"### Test vs predictions  (Visuallization)","902a3de8":"### Feature Engineering Using One Hot Encoding","5d43168b":"### Applying PCA on separated predictors","a4cb7aff":"### Description about Data Set :\n- All columns are categorical","c19aa30f":"###  Visuallization using Histogram","1dfc3e84":"### Building ML model using Random Forest","6ad03f21":"### Pie Chart","82a693f4":"### Initializing PCA","737d8d18":"### To print the whole data set with all instances at a moment","23dec9e1":"### Verifying the performance of model using confusion matrix","f262caed":"### Splitting out data into training and testing  ","717ead77":"### We are removing\/dropping any sub-column from each original column","34f6f8e0":"### Changing Column Names :","886ead99":"### Importing\/Loading Data Set \"Mushroom\" :","f71e42b4":"### Separating out predictors and targets","dd533640":"### Checking the accuracy of our model","3de92063":"### Checking unique values from some features :","930d023d":"### Importing Dependencies :","2a97b53e":"### Scaling our prdictors"}}