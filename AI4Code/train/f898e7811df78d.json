{"cell_type":{"4449fb37":"code","2811fb4c":"code","32911add":"code","35df5c81":"code","6fced5a3":"code","83003be9":"code","2e31ef83":"code","e66ffb0c":"code","18f46204":"code","5708987d":"code","318b28db":"code","b66522fa":"code","7e5e3351":"code","5b760303":"code","e7b3044d":"code","11903649":"code","4c4a1ac4":"code","ccf14803":"code","9cd81ac2":"code","429320a2":"code","000001ee":"code","c46bdc9d":"code","96223071":"code","7a013dbd":"code","990473e4":"code","2c72e27d":"code","0f71cf87":"code","1894bddf":"code","4b6d5855":"code","cd3a0251":"code","2289228e":"markdown","1cef6e62":"markdown","399c35a3":"markdown","521485ff":"markdown","bfaaf295":"markdown","4b973cec":"markdown","f327bc96":"markdown","47954be0":"markdown","a12dbd3e":"markdown","473e3314":"markdown","8ae0e628":"markdown","10c11d54":"markdown","158f0244":"markdown","b7756b30":"markdown","3f879524":"markdown","dbcc6e91":"markdown","c9110e50":"markdown","248df856":"markdown","244eadb1":"markdown","0a46b1d4":"markdown","c0eb865d":"markdown","dbf20c03":"markdown","906b5654":"markdown","e05f21cb":"markdown","313b0468":"markdown","69b41146":"markdown","a75d2c19":"markdown","3689a22e":"markdown","4d912602":"markdown"},"source":{"4449fb37":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n","2811fb4c":"df = pd.read_csv(\"..\/input\/usa-housing\/USA_Housing.csv\")\ndf.head()","32911add":"df.info(verbose=True)","35df5c81":"df.describe(percentiles=[0.1,0.25,0.5,0.75,0.9])","6fced5a3":"df.columns","83003be9":"sns.pairplot(df)","2e31ef83":"df['Price'].plot.hist(bins=25,figsize=(8,4))","e66ffb0c":"df['Price'].plot.density()","18f46204":"df.corr()","5708987d":"plt.figure(figsize=(10,7))\nsns.heatmap(df.corr(),annot=True,linewidths=2)","318b28db":"l_column = list(df.columns) # Making a list out of column names\nlen_feature = len(l_column) # Length of column vector list\nl_column","b66522fa":"X = df[l_column[0:len_feature-2]]\ny = df[l_column[len_feature-2]]","7e5e3351":"print(\"Feature set size:\",X.shape)\nprint(\"Variable set size:\",y.shape)","5b760303":"X.head()","e7b3044d":"y.head()","11903649":"from sklearn.model_selection import train_test_split","4c4a1ac4":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=123)","ccf14803":"print(\"Training feature set size:\",X_train.shape)\nprint(\"Test feature set size:\",X_test.shape)\nprint(\"Training variable set size:\",y_train.shape)\nprint(\"Test variable set size:\",y_test.shape)","9cd81ac2":"from sklearn.linear_model import LinearRegression\nfrom sklearn import metrics","429320a2":"lm = LinearRegression() # Creating a Linear Regression object 'lm'","000001ee":"lm.fit(X_train,y_train) # Fit the linear model on to the 'lm' object itself i.e. no need to set this to another variable","c46bdc9d":"print(\"The intercept term of the linear model:\", lm.intercept_)","96223071":"print(\"The coefficients of the linear model:\", lm.coef_)","7a013dbd":"#idict = {'Coefficients':lm.intercept_}\n#idf = pd.DataFrame(data=idict,index=['Intercept'])\ncdf = pd.DataFrame(data=lm.coef_, index=X_train.columns, columns=[\"Coefficients\"])\n#cdf=pd.concat([idf,cdf], axis=0)\ncdf","990473e4":"predictions = lm.predict(X_test)\nprint (\"Type of the predicted object:\", type(predictions))\nprint (\"Size of the predicted object:\", predictions.shape)","2c72e27d":"plt.figure(figsize=(10,7))\nplt.title(\"Actual vs. predicted house prices\",fontsize=25)\nplt.xlabel(\"Actual test set house prices\",fontsize=18)\nplt.ylabel(\"Predicted house prices\", fontsize=18)\nplt.scatter(x=y_test,y=predictions)","0f71cf87":"plt.figure(figsize=(10,7))\nplt.title(\"Histogram of residuals to check for normality\",fontsize=25)\nplt.xlabel(\"Residuals\",fontsize=18)\nplt.ylabel(\"Kernel density\", fontsize=18)\nsns.distplot([y_test-predictions])","1894bddf":"plt.figure(figsize=(10,7))\nplt.title(\"Residuals vs. predicted values plot (Homoscedasticity)\\n\",fontsize=25)\nplt.xlabel(\"Predicted house prices\",fontsize=18)\nplt.ylabel(\"Residuals\", fontsize=18)\nplt.scatter(x=predictions,y=y_test-predictions)","4b6d5855":"print(\"Mean absolute error (MAE):\", metrics.mean_absolute_error(y_test,predictions))\nprint(\"Mean square error (MSE):\", metrics.mean_squared_error(y_test,predictions))\nprint(\"Root mean square error (RMSE):\", np.sqrt(metrics.mean_squared_error(y_test,predictions)))","cd3a0251":"print(\"R-squared value of predictions:\",round(metrics.r2_score(y_test,predictions),3))","2289228e":"### Test-train split","1cef6e62":"**Prediction using the lm model**","399c35a3":"### Model fit and training","521485ff":"### Basic plotting and visualization on the data set","bfaaf295":"**Import train_test_split function from scikit-learn**","4b973cec":"**Scatter plot of predicted price and y_test set to see if the data fall on a 45 degree straight line**","f327bc96":"**Check the size and shape of train\/test splits (it should be in the ratio as per test_size parameter above)**","47954be0":"### Import packages and dataset","a12dbd3e":"**'describe()' method to get the statistical summary of the various features of the data set**","473e3314":"**Distribution of price (the predicted quantity)**","8ae0e628":"**Plotting histogram of the residuals i.e. predicted errors (expect a normally distributed pattern)**","10c11d54":"**Scatter plot of residuals and predicted values (Homoscedasticity)**","158f0244":"### Check basic info on the data set","b7756b30":"# US House Price Prediction  using Linear Regrssion","3f879524":"**'info()' method to check the data types and number**","dbcc6e91":"**Make a list of data frame column names**","c9110e50":"**Pairplots using seaborn**","248df856":"**Check the intercept and coefficients and put them in a DataFrame**","244eadb1":"### Prediction, error estimate, and regression evaluation matrices","0a46b1d4":"**Correlation matrix and heatmap**","c0eb865d":"**Put all the numerical features in X and Price in y, ignore Address which is string for linear regression**","dbf20c03":"## Linear regression\n\nIn statistics, linear regression is a linear approach for modeling the relationship between a scalar dependent variable y and one or more explanatory variables (or independent variables) denoted X. The case of one explanatory variable is called simple linear regression. For more than one explanatory variable, the process is called multiple linear regression.\n\nLinear regression models are often fitted using the least squares approach, but they may also be fitted in other ways, such as by minimizing the \"lack of fit\" in some other norm (as with least absolute deviations regression), or by minimizing a penalized version of the least squares loss function as in ridge regression ($L_2$-norm penalty) and lasso ($L_1$-norm penalty). Conversely, the least squares approach can be used to fit models that are not linear models. Thus, although the terms \"least squares\" and \"linear model\" are closely linked, they are not synonymous.","906b5654":"**Create X and y train and test splits in one command using a split ratio and a random seed**","e05f21cb":"### Feature and variable sets","313b0468":"**Import linear regression model estimator from scikit-learn and instantiate**","69b41146":"**Regression evaluation metrices**","a75d2c19":"**'columns' method to get the names of the columns (features)**","3689a22e":"**R-square value**","4d912602":"**Fit the model on to the instantiated object itself**"}}