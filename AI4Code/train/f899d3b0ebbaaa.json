{"cell_type":{"6b2c8bad":"code","1cc5df3b":"code","3f55be09":"code","b2cd90dc":"code","bbbf71e9":"code","87cea7e1":"code","f853e19d":"code","962f429c":"code","b3dfb419":"code","5e801aee":"code","35be89a7":"code","7b8b9e0d":"code","c34a32f9":"code","0072e93d":"code","f94b29a2":"code","691a77e1":"code","2592cb11":"code","b93d34fe":"code","a5345507":"code","c3f6999b":"code","7abd5ae9":"code","75b2e2cb":"markdown","b51c3332":"markdown","e91d0a87":"markdown","a3b3ab29":"markdown","07fb9ffc":"markdown","0fbfce37":"markdown","b30dbc8d":"markdown","36a6bf08":"markdown","2337e9ec":"markdown","c5a455d8":"markdown","3504f1d1":"markdown"},"source":{"6b2c8bad":"import warnings \nwarnings.filterwarnings('ignore')\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom imblearn.over_sampling import SMOTE\nfrom sklearn.model_selection import train_test_split\n\npd.set_option('display.max_columns', 100)\npd.set_option('display.max_rows', 500)","1cc5df3b":"credit_df = pd.read_csv(r\"..\/input\/creditcardfraud\/creditcard.csv\")\ncredit_df.head()","3f55be09":"counts = credit_df['Class'].value_counts()","b2cd90dc":"counts.plot(kind='bar')\nplt.title(\"Class count\")\nplt.xlabel(\"Class\")\nplt.ylabel(\"Value Count\")\nplt.show()","bbbf71e9":"class_0_df = credit_df[credit_df[\"Class\"] == 0]\nclass_1_df = credit_df[credit_df[\"Class\"] == 1]","87cea7e1":"count_class_0, count_class_1 = credit_df[\"Class\"].value_counts()","f853e19d":"class_0_df_under_samp = class_0_df.sample(count_class_1)\ncredit_df_under = pd.concat([class_1_df, class_0_df_under_samp], axis=0)\ncounts = credit_df_under['Class'].value_counts()\ncounts.plot(kind='bar')\nplt.title(\"Class count\")\nplt.xlabel(\"Class\")\nplt.ylabel(\"Value Count\")\nplt.show()","962f429c":"print(\"We lost {} % of data due to undersampling\". format(100 - credit_df_under.shape[0]\/credit_df.shape[0]*100))","b3dfb419":"class_1_df_over_sample = class_1_df.sample(count_class_0, replace=True)\ncredit_df_over = pd.concat([class_1_df_over_sample, class_0_df], axis=0)\ncounts = credit_df_over['Class'].value_counts()\ncounts.plot(kind='bar', )\nplt.title(\"Class count\")\nplt.xlabel(\"Class\")\nplt.ylabel(\"Value Count\")\nplt.show()","5e801aee":"fig=plt.figure(figsize=(12,6))\n\nplt.subplot(121)\nsns.scatterplot(x=\"V1\",y=\"V2\", hue=\"Class\", data=credit_df)\nplt.title('Before Sampling')\nplt.subplot(122)\nsns.scatterplot(x=\"V1\",y=\"V2\", hue=\"Class\", data=credit_df_over)\nplt.title('After Sampling')\nplt.show()","35be89a7":"feature_column = list(credit_df.columns)\nfeature_column = feature_column[:-1]\nclass_labels = credit_df.Class\nfeatures = credit_df[feature_column]","7b8b9e0d":"#train test split\nfeature_train, feature_test, class_train, class_test = train_test_split(features, class_labels, \n                                                                        test_size = 0.3, random_state=0)","c34a32f9":"print(\"Test value counts\")\nprint(class_test.value_counts(),\"\\n\")\nprint(\"Train value counts\")\nprint(class_train.value_counts())","0072e93d":"feature_train[\"class\"] = class_train","f94b29a2":"SMOTE_Oversampler=SMOTE(random_state=0)\nSOS_features,SOS_labels=SMOTE_Oversampler.fit_sample(feature_train,class_train)","691a77e1":"SOS_features['class'] = SOS_labels","2592cb11":"fig=plt.figure(figsize=(12,6))\n\nplt.subplot(121)\nsns.scatterplot(x=\"V1\",y=\"V3\", hue=\"class\", data=feature_train)\nplt.title('Before Sampling')\nplt.subplot(122)\nsns.scatterplot(x=\"V1\",y=\"V3\", hue=\"class\", data=SOS_features)\nplt.title('After Sampling')\nplt.show()","b93d34fe":"from imblearn.over_sampling import ADASYN\n\nAdasyn_Oversampler=ADASYN()\nAOS_features,AOS_labels=Adasyn_Oversampler.fit_sample(feature_train,class_train)","a5345507":"AOS_features['class'] = AOS_labels","c3f6999b":"fig=plt.figure(figsize=(12,6))\n\nplt.subplot(121)\nsns.scatterplot(x=\"V1\",y=\"V3\", hue=\"class\", data=feature_train)\nplt.title('Before Sampling')\nplt.subplot(122)\nsns.scatterplot(x=\"V1\",y=\"V3\", hue=\"class\", data=AOS_features)\nplt.title('After Sampling')\nplt.show()","7abd5ae9":"fig=plt.figure(figsize=(12,6))\n\nplt.subplot(121)\nsns.scatterplot(x=\"V1\",y=\"V3\", hue=\"class\", data=SOS_features)\nplt.title('SMOTE Oversampling')\nplt.subplot(122)\nsns.scatterplot(x=\"V1\",y=\"V3\", hue=\"class\", data=AOS_features)\nplt.title('AdaSYN Oversampling')\nplt.show()","75b2e2cb":"### SMOTE vs ADASYN","b51c3332":"### Data understanding:","e91d0a87":"There is only 0.173 percent values from class one. Data is highly unblanced. We can approch this issue using number of techniques lets see those \n1. Under Sampling\n2. Over Sampling\n3. Synthetic Minority oversmapling Technique(SMOTE)\n4. AdaSYN","a3b3ab29":"Its a improved version of Smote. Instead of all the sample being linearly correlated to the parent they have a little more variance in them i.e they are bit scattered.<br>\n<br>\nADASYN is to use a weighted distribution for different minority class examples according to their level of difficulty in learning, where more synthetic data is generated for minority class examples that are harder to learn compared to those minority examples that are easier to learn. As a result, the ADASYN approach improves learning with respect to the data distributions in two ways: \n1.  Reducing the bias introduced by the class imbalance, and \n2.  Adaptively shifting the classification decision boundary toward the difficult examples. ","07fb9ffc":"### SMOTE(Synthetic Minority Over-Sampling Technique)\n\nAs name suggest it is over-sampling method. It create synthetic (Non duplicate) sample of the minority class. First it find the n-nearest neighbour in the minority class for each of the sample in the class. Then it draw line between those and generate random points on the line.<br>\n\n  ***SMOTE first selects a minority class instance at a random and finds its k nearest minority class neighbors. The synthetic instance is then created by choosing one of the k nearest neighbors b at random and connecting a and b to form a line segment in the feature space. The synthetic instances are generated as a convex combination of the two chosen instances a and b.***","0fbfce37":"We does not see any changes beacuse as mensioned above it just duplicate the minority class data points. while plotting data points from minority class overlap each other.","b30dbc8d":"### 1. Undersampling\n<br>\nIn this case we remove excess data points from the majority class. The Huge data loss in above condition where majority class have almost 2,84,315 data points.  ","36a6bf08":"### ADASYN","2337e9ec":"### 2. Oversampling","c5a455d8":"Using this method we can assign weigth to randomly choosen data points from the minority class and duplicate the same. ","3504f1d1":"Applying the SMOTE oversampling "}}