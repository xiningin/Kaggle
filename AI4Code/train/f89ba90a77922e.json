{"cell_type":{"a12e0b9a":"code","ee85e5de":"code","7c242ce3":"code","5c007e58":"code","b3f098fc":"code","bedc2b92":"code","4c58e38c":"code","9431680d":"code","1a574dbc":"code","0b27eaac":"code","3f4b39b1":"code","98a0392f":"code","7343cee9":"code","69b2adf1":"code","3dcd30b2":"code","4167c2ea":"code","636f5112":"code","fd67e117":"code","cf5a878e":"code","7f07e292":"code","5f3c79df":"code","7a2f56f7":"code","95aed4bd":"code","08ab2d4c":"code","dba5bd8f":"code","dbe17fac":"code","7aa8cfa5":"code","6ac0d40a":"code","eeef2d7a":"code","923da102":"code","4c39b126":"code","28c3db48":"code","828ebafc":"code","673437f6":"code","e92765bf":"code","8013987c":"code","b44accf9":"code","a65641ef":"code","5c4318bd":"code","d6a23463":"code","4ba95264":"code","4e13f090":"code","6a2276d0":"code","8c4c16cf":"code","6e714907":"code","81a657f3":"code","c0ceef4d":"code","41dfcb3f":"code","f23d8319":"markdown","cf2de138":"markdown","8bd6883c":"markdown","81dbcad8":"markdown","2dc7ca87":"markdown","e21e3aaf":"markdown","30c0754f":"markdown","44703a68":"markdown","14acc47c":"markdown","1048dcaa":"markdown","ff900eb6":"markdown","dea2eb91":"markdown","6b1fdd7a":"markdown","d3cc7fd5":"markdown","a3feef0a":"markdown","c4ed9cd7":"markdown","be05e133":"markdown","cd44d1d7":"markdown","454920c9":"markdown","7b707b5f":"markdown","5b869de5":"markdown","7300c40e":"markdown","04aad6a1":"markdown","4d0350ca":"markdown","9ef674d9":"markdown","f8fe29eb":"markdown","34d795b3":"markdown","6dd1f192":"markdown","08bbf97d":"markdown"},"source":{"a12e0b9a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport cv2\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ee85e5de":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline","7c242ce3":"from fastai.vision.all import *\nfrom fastai.imports import *\nfrom fastai.vision.data import *\nfrom fastai import *\nimport numpy as np\nimport fastai\nimport matplotlib.pyplot as plt","5c007e58":"path = Path(\"\/kaggle\/input\/abstract-paintings\")\npath.ls()","b3f098fc":"np.random.seed(42)\ndata = ImageDataLoaders.from_folder(path, train=\".\", valid_pct=0.2, item_tfms=RandomResizedCrop(512, min_scale=0.75),\n                                    bs=32,batch_tfms=[*aug_transforms(size=256, max_warp=0), Normalize.from_stats(*imagenet_stats)],num_workers=0)","bedc2b92":"data.show_batch(nrows=3, figsize=(7,8))","4c58e38c":"data.show_batch(nrows=2, figsize=(7,8))","9431680d":"data.show_batch(nrows=1, figsize=(7,8))","1a574dbc":"def visualize_images(path, n_images, is_random=True, figsize=(16, 16)):\n    plt.figure(figsize=figsize)\n    w = int(n_images ** .5)\n    h = math.ceil(n_images \/ w)\n    \n    all_names = os.listdir(path)\n    image_names = all_names[:n_images]   \n    if is_random:\n        image_names = random.sample(all_names, n_images)\n            \n    for ind, image_name in enumerate(image_names):\n        img = cv2.imread(os.path.join(path, image_name))\n        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB) \n        plt.subplot(h, w, ind + 1)\n        plt.imshow(img)\n        plt.xticks([])\n        plt.yticks([])\n    \n    plt.show()","0b27eaac":"paintings_PNG_PATH = '..\/input\/abstract-paintings'","3f4b39b1":"visualize_images(paintings_PNG_PATH, 9)","98a0392f":"def show_color_histogram(path):\n    image_names = os.listdir(path)\n    image_name = random.choice(image_names)\n    img = cv2.imread(os.path.join(path, image_name))\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB) \n    fig = make_subplots(1, 2)\n\n    fig.add_trace(go.Image(z=img), 1, 1)\n    for channel, color in enumerate(['red', 'green', 'blue']):\n        fig.add_trace(\n            go.Histogram(\n                x=img[..., channel].ravel(), \n                opacity=0.5,\n                marker_color=color, \n                name='%s channel' %color\n            ), 1, 2)\n    fig.update_layout(height=400)\n    fig.show()","7343cee9":"def color_hist_visualization(image_path, figsize=(16, 4)):\n    plt.figure(figsize=figsize)\n    \n    img = cv2.imread(image_path)\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB) \n    plt.subplot(1, 4, 1)\n    plt.imshow(img)\n    plt.axis(\"off\")\n    \n    colors = [\"red\", \"green\", \"blue\"]\n    for i in range(len(colors)):\n        plt.subplot(1, 4, i + 2)\n        plt.hist(\n            img[:, :, i].reshape(-1),\n            bins=25,\n            alpha=0.5,\n            color=colors[i],\n            density=True\n        )\n        plt.xlim(0, 255)\n        plt.xticks([])\n        plt.yticks([])\n    \n    \n    plt.show()","69b2adf1":"img_path = '..\/input\/abstract-paintings\/wassily-kandinsky_improvisation-30-cannons-1913.jpg'\ncolor_hist_visualization(img_path)\n\nimg_path = '..\/input\/abstract-paintings\/aleksandra-ekster_interno-cubista-1912.jpg'\ncolor_hist_visualization(img_path)\n\nimg_path = '..\/input\/abstract-paintings\/arshile-gorky_golden-brown-painting-1944.jpg'\ncolor_hist_visualization(img_path)","3dcd30b2":"import plotly.graph_objs as go\nfrom plotly.subplots import make_subplots\n\nshow_color_histogram(paintings_PNG_PATH)","4167c2ea":"def batch_visualization(path, n_images, is_random=True, figsize=(16, 16)):\n    plt.figure(figsize=figsize)\n    \n    w = int(n_images ** .5)\n    h = math.ceil(n_images \/ w)\n    \n    all_names = os.listdir(path)\n    \n    image_names = all_names[:n_images]\n    if is_random:\n        image_names = random.sample(all_names, n_images)\n    \n    for ind, image_name in enumerate(image_names):\n        img = cv2.imread(os.path.join(path, image_name))\n        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB) \n        plt.subplot(h, w, ind + 1)\n        plt.imshow(img)\n        plt.axis(\"off\")\n    \n    plt.show()","636f5112":"batch_visualization(paintings_PNG_PATH, 1, is_random=True, figsize=(5, 5))","fd67e117":"batch_visualization(paintings_PNG_PATH, 4, is_random=True, figsize=(10, 10))","cf5a878e":"batch_visualization(paintings_PNG_PATH, 9, is_random=True)","7f07e292":"batch_visualization(paintings_PNG_PATH, 16, is_random=True)","5f3c79df":"#https:\/\/towardsdatascience.com\/machineray-using-ai-to-create-abstract-art-39829438076a\n#According to the Datasets Author Robert A. Gonsalves there are 850 images\n#batch_visualization(paintings_PNG_PATH, 300, is_random=True)","7a2f56f7":"def channels_visualization(image_path, figsize=(16, 4)):\n    plt.figure(figsize=figsize)\n    \n    img = cv2.imread(image_path)\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB) \n    plt.subplot(1, 4, 1)\n    plt.imshow(np.mean(img, axis=2), cmap=\"gray\")\n    plt.axis('off')\n    \n    for i in range(3):\n        plt.subplot(1, 4, i + 2)\n        tmp_img = np.full_like(img, 0)\n        tmp_img[:, :, i] = img[:, :, i]\n        plt.imshow(tmp_img)\n        plt.xlim(0, 255)\n        plt.xticks([])\n        plt.yticks([])\n    \n    \n    plt.show()","95aed4bd":"img_path = '..\/input\/abstract-paintings\/arshile-gorky_mechanics-of-flying.jpg'\ncolor_hist_visualization(img_path)\nchannels_visualization(img_path)\n\nimg_path = '..\/input\/abstract-paintings\/arthur-dove_storm-clouds-1935.jpg'\ncolor_hist_visualization(img_path)\nchannels_visualization(img_path)\n\nimg_path = '..\/input\/abstract-paintings\/auguste-herbin_composition-cubiste-1917.jpg'\ncolor_hist_visualization(img_path)\nchannels_visualization(img_path)","08ab2d4c":"def grayscale_visualization(image_path, figsize=(8, 4)):\n    plt.figure(figsize=figsize)\n    \n    img = cv2.imread(image_path)\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB) \n    plt.subplot(1, 2, 1)\n    plt.imshow(img)\n    plt.axis('off')\n    \n    plt.subplot(1, 2, 2)\n    tmp_img = np.full_like(img, 0)\n    for i in range(3):\n        tmp_img[:, :, i] = img.mean(axis=-1)\n    plt.imshow(tmp_img)\n    plt.axis('off')\n    \n    \n    plt.show()","dba5bd8f":"img_path = '..\/input\/abstract-paintings\/bart-van-der-leck_composition-1918.jpg'\ngrayscale_visualization(img_path)\n\nimg_path = '..\/input\/abstract-paintings\/julius-evola_untitled-1919.jpg'\ngrayscale_visualization(img_path)\n\nimg_path = '..\/input\/abstract-paintings\/paul-klee_asian-entertainers-1919(1).jpg'\ngrayscale_visualization(img_path)","dbe17fac":"def plot_simple_augmentation(image_path, transform):\n    img = cv2.imread(image_path)\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB) \n    \n    plt.figure(figsize=(10, 5))\n    \n    plt.subplot(1, 2, 1)\n    plt.imshow(img)\n    plt.axis(\"off\")\n    \n    plt.subplot(1, 2, 2)\n    x = transform(image=img)[\"image\"]\n    plt.imshow(x)\n    plt.axis(\"off\")\n\n    plt.show()\n    \ndef plot_multiple_augmentation(image_path, transform):\n    img = cv2.imread(image_path)\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB) \n    \n    plt.figure(figsize=(10, 10))\n    \n    plt.subplot(2, 2, 1)\n    plt.imshow(img)\n    plt.axis(\"off\")\n    \n    plt.subplot(2, 2, 2)\n    x = transform(image=img)[\"image\"]\n    plt.imshow(x)\n    plt.axis(\"off\")\n    \n    plt.subplot(2, 2, 3)\n    x = transform(image=img)[\"image\"]\n    plt.imshow(x)\n    plt.axis(\"off\")\n    \n    plt.subplot(2, 2, 4)\n    x = transform(image=img)[\"image\"]\n    plt.imshow(x)\n    plt.axis(\"off\")\n\n    plt.show()","7aa8cfa5":"import albumentations as A\n\n\ntransform = A.Compose(\n    [\n        A.Blur(p=1.0, blur_limit=(5, 5)),\n    ]\n)\n\nplot_simple_augmentation(\"..\/input\/abstract-paintings\/piet-mondrian_not-identified.jpg\", transform)","6ac0d40a":"transform = A.CLAHE(p=1.0, clip_limit=(10, 10), tile_grid_size=(3, 3))\n\nplot_simple_augmentation(\"..\/input\/abstract-paintings\/giacomo-balla_vortex-space-form-1914.jpg\", transform)","eeef2d7a":"transform = A.CenterCrop(p=1.0, height=100, width=150)\n\nplot_simple_augmentation(\"..\/input\/abstract-paintings\/sonia-delaunay_portuguese-market-1915.jpg\", transform)","923da102":"transform = A.ChannelDropout(p=1.0, channel_drop_range=(1, 2), fill_value=0)\n\nplot_multiple_augmentation(\"..\/input\/abstract-paintings\/marcel-duchamp_network-of-stoppages-1914.jpg\", transform)","4c39b126":"transform = A.ChannelShuffle(p=1.0)\n\nplot_multiple_augmentation(\"..\/input\/abstract-paintings\/otto-freundlich_komposition-1940.jpg\", transform)","28c3db48":"transform = A.Crop(p=1.0, x_min=0, y_min=0, x_max=150, y_max=150)\n\nplot_simple_augmentation(\"..\/input\/abstract-paintings\/kurt-schwitters_heavy-relief-1945.jpg\", transform)","828ebafc":"transform = A.RandomCrop(p=1.0, height=100, width=100)\n\nplot_multiple_augmentation(\"..\/input\/abstract-paintings\/kurt-schwitters_heavy-relief-1945.jpg\", transform)","673437f6":"transform = A.Cutout(p=1.0, num_holes=8, max_h_size=15, max_w_size=15)\n\nplot_multiple_augmentation(\"..\/input\/abstract-paintings\/kurt-schwitters_heavy-relief-1945.jpg\", transform)","e92765bf":"transform = A.Downscale(\n    p=1.0, scale_min=0.01, scale_max=0.20, interpolation=0,\n)\n\nplot_multiple_augmentation(\n    \"..\/input\/abstract-paintings\/kurt-schwitters_heavy-relief-1945.jpg\",\n    transform,\n)","8013987c":"transform = A.Equalize(\n    p=1.0, mode='cv', by_channels=True,\n)\n\nplot_simple_augmentation(\n    \"..\/input\/abstract-paintings\/kurt-schwitters_heavy-relief-1945.jpg\",\n    transform,\n)","b44accf9":"transform = A.HorizontalFlip(\n    p=1.0,\n)\n\nplot_simple_augmentation(\n    \"..\/input\/abstract-paintings\/kurt-schwitters_heavy-relief-1945.jpg\",\n    transform,\n)","a65641ef":"transform = A.VerticalFlip(\n    p=1.0,\n)\n\nplot_simple_augmentation(\n    \"..\/input\/abstract-paintings\/kurt-schwitters_heavy-relief-1945.jpg\",\n    transform,\n)","5c4318bd":"transform = A.Flip(\n    p=1.0,\n)\n\nplot_multiple_augmentation(\n    \"..\/input\/abstract-paintings\/kurt-schwitters_heavy-relief-1945.jpg\",\n    transform,\n)","d6a23463":"transform = A.GaussNoise(\n    p=1.0, var_limit=(500.0, 500.0),\n)\n\nplot_simple_augmentation(\n    \"..\/input\/abstract-paintings\/kurt-schwitters_heavy-relief-1945.jpg\",\n    transform,\n)","4ba95264":"transform = A.GridDistortion(\n    p=1.0, num_steps=15, distort_limit=(-2., 2.), \n    interpolation=0, border_mode=0, value=(0, 0, 0), mask_value=None,\n)\n\nplot_multiple_augmentation(\n    \"..\/input\/abstract-paintings\/kurt-schwitters_heavy-relief-1945.jpg\",\n    transform,\n)","4e13f090":"transform = A.HueSaturationValue(\n    p=1.0, \n    hue_shift_limit=(-100, 100), \n    sat_shift_limit=(-100, 100), \n    val_shift_limit=(-100, 100),\n)\n\nplot_multiple_augmentation(\n    \"..\/input\/abstract-paintings\/kurt-schwitters_heavy-relief-1945.jpg\",\n    transform,\n)","6a2276d0":"transform = A.ISONoise(\n    p=1.0, intensity=(0.0, 2.0), color_shift=(0.0, 1.0)\n)\n\nplot_multiple_augmentation(\n    \"..\/input\/abstract-paintings\/kurt-schwitters_heavy-relief-1945.jpg\",\n    transform,\n)","8c4c16cf":"transform = A.ImageCompression(\n    p=1.0, quality_lower=0, quality_upper=10, compression_type=0,\n)\n\nplot_multiple_augmentation(\n    \"..\/input\/abstract-paintings\/kurt-schwitters_heavy-relief-1945.jpg\",\n    transform,\n)","6e714907":"transform = A.InvertImg(\n    p=1.0,\n)\n\nplot_simple_augmentation(\n    \"..\/input\/abstract-paintings\/kurt-schwitters_heavy-relief-1945.jpg\",\n    transform,\n)","81a657f3":"transform = A.JpegCompression(\n    p=1.0, quality_lower=0, quality_upper=10,\n)\n\nplot_multiple_augmentation(\n    \"..\/input\/abstract-paintings\/kurt-schwitters_heavy-relief-1945.jpg\",\n    transform,\n)","c0ceef4d":"transform = A.MotionBlur(\n    p=1.0, blur_limit=(3, 50),\n)\n\nplot_multiple_augmentation(\n    \"..\/input\/abstract-paintings\/kurt-schwitters_heavy-relief-1945.jpg\",\n    transform,\n)","41dfcb3f":"transform = A.MultiplicativeNoise(\n    p=1.0, multiplier=(0.1, 5.0), per_channel=True, elementwise=False,\n)\n\nplot_multiple_augmentation(\n    \"..\/input\/abstract-paintings\/kurt-schwitters_heavy-relief-1945.jpg\",\n    transform,\n)","f23d8319":"# **<span style=\"color:#9B59B6;\">Augmentation - VerticalFlip<\/span>**","cf2de138":"# **<span style=\"color:#9B59B6;\">Augmentation - CLAHE<\/span>**","8bd6883c":"# **<span style=\"color:#9B59B6;\">Augmentation - Equalize<\/span>**","81dbcad8":"# **<span style=\"color:#9B59B6;\">Augmentation - RandomCrop<\/span>**","2dc7ca87":"# **<span style=\"color:#9B59B6;\">Augmentation - InvertImg<\/span>**","e21e3aaf":"# **<span style=\"color:#9B59B6;\">Augmentation - HueSaturationValue<\/span>**","30c0754f":"# **<span style=\"color:#9B59B6;\">Augmentation - MultiplicativeNoise<\/span>**","44703a68":"<a id=\"1.1\"><\/a>\n<h3 style=\"background-color:skyblue;font-family:newtimeroman;font-size:200%;text-align:center\">Script by Yaroslav Isaienkov  @ihelon<\/h3>\n\nhttps:\/\/www.kaggle.com\/ihelon\/monet-visualization-and-augmentation\/notebook","14acc47c":"# **<span style=\"color:#9B59B6;\">Augmentation - Downscale<\/span>**","1048dcaa":"# **<span style=\"color:#9B59B6;\">Augmentation - MotionBlur<\/span>**","ff900eb6":"<a id=\"1.1\"><\/a> \n<h3 style=\"background-color:skyblue;font-family:newtimeroman;font-size:200%;text-align:center\">Abstract Paintings by Robert A. Gonsalves  @robgonsalves<\/h3>\n\nDataset  Abstract Paintings https:\/\/www.kaggle.com\/robgonsalves\/abstract-paintings\n\nMachineRay: Using AI to Create Abstract Art\n\nhttps:\/\/towardsdatascience.com\/machineray-using-ai-to-create-abstract-art-39829438076a","dea2eb91":"# **<span style=\"color:#9B59B6;\">Grayscale Visualization<\/span>**","6b1fdd7a":" # **<span style=\"color:#9B59B6;\">Show Batches from Abstract Paintings<\/span>**","d3cc7fd5":"# **<span style=\"color:#9B59B6;\">Augmentation - Blur<\/span>**","a3feef0a":"# **<span style=\"color:#9B59B6;\">Augmentation - JpegCompression<\/span>**","c4ed9cd7":"# **<span style=\"color:#9B59B6;\">Augmentation - ChannelDropout<\/span>**","be05e133":"# **<span style=\"color:#9B59B6;\">Augmentation - ChannelShuffle<\/span>**","cd44d1d7":"# **<span style=\"color:#9B59B6;\">Augmentation - GaussNoise<\/span>**","454920c9":"#Codes by Yaroslav Isaienkov https:\/\/www.kaggle.com\/ihelon\/monet-eda-and-visualization-techniques","7b707b5f":"# **<span style=\"color:#9B59B6;\">Augmentation - Crop<\/span>**","5b869de5":"# **<span style=\"color:#9B59B6;\">Augmentation - CenterCrop<\/span>**","7300c40e":"# **<span style=\"color:#9B59B6;\">Augmentation - Flip<\/span>**","04aad6a1":"# **<span style=\"color:#9B59B6;\">Augmentation - ImageCompression<\/span>**","4d0350ca":"# **<span style=\"color:#9B59B6;\">Augmentation - CutOut<\/span>**","9ef674d9":"# **<span style=\"color:#9B59B6;\">Augmentation - HorizontalFlip<\/span>**","f8fe29eb":"# **<span style=\"color:#9B59B6;\">Individual Channels Visualization<\/span>**","34d795b3":"# **<span style=\"color:#9B59B6;\">Augmentation - ISONoise<\/span>**","6dd1f192":" # **<span style=\"color:#9B59B6;\">Augmentation - GridDistortion<\/span>**","08bbf97d":"# **<span style=\"color:#9B59B6;\">Color Channels Histograms<\/span>**"}}