{"cell_type":{"2894d9e2":"code","120baf42":"code","48a48bd5":"code","b6d68a9b":"code","6852c0e5":"code","3a69abfc":"code","4e19b600":"code","1a8be11a":"code","8bb55ab3":"code","7383533e":"code","b69956ad":"code","64677ba5":"code","c5e66b16":"code","98f81331":"code","b91c7f94":"code","f2cabd39":"markdown","9564b0f5":"markdown","5a5e013a":"markdown","848dc08d":"markdown","22324a35":"markdown","4510c2c7":"markdown","bb66b64c":"markdown","d709cd60":"markdown","fd9ede22":"markdown","5bebdc12":"markdown","e080bd6f":"markdown","808f0521":"markdown","bb0e12ba":"markdown"},"source":{"2894d9e2":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport missingno as msno \nfrom sklearn import preprocessing\n# bulid model \nfrom tensorflow import keras\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.models import Sequential\n# cross_val_score\nfrom sklearn.model_selection import cross_val_score\nfrom tensorflow.keras.wrappers.scikit_learn import KerasClassifier\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","120baf42":"df= pd.read_csv(\"..\/input\/mammographic-mass-data-set\/Cleaned_data.csv\", na_values=['?']) \n","48a48bd5":"df.head()","b6d68a9b":"df.tail()","6852c0e5":"df.info()","3a69abfc":"df.describe()","4e19b600":"# visualize the location of missing values\nmsno.matrix(df,color=(0.45, 0.65, 0.65))","1a8be11a":"#missing amount for data\nmissing= df.isnull().sum().sort_values(ascending=False)\npercentage = (df.isnull().sum()\/ df.isnull().count()).sort_values(ascending=False)\nmissing_recommend_df = pd.concat([missing, percentage], axis=1, keys=['Missing', '%'])\nmissing_recommend_df.head(6)\n\n#or\n# df.loc[(df['BI_RADS'].isnull())|\n#               (df['age'].isnull())|\n#                 (df['shape'].isnull())|\n#                 (df['margin'].isnull())| \n#               (df['density'].isnull()) |\n#                  (df['severity'].isnull())]","8bb55ab3":"fig=plt.figure(figsize=(18,10))\nax = fig.gca()\nsns.heatmap(df.corr(), annot=True,ax=ax, cmap=plt.cm.YlGnBu)\nax.set_title('The correlations between all features')\npalette =sns.diverging_palette(80, 110, n=146)\nplt.show()","7383533e":"# correlation with the target\ncorr_matrix = df.corr()\ncorr_matrix[\"Severity\"].sort_values(ascending=False)","b69956ad":"#array that extracts only the feature data we want to work with (age, shape, margin, and density) \nall_features = df[['Age', 'Shape', 'Margin', 'Density']].values\n\n# array that contains the classes (severity)\nall_classes = df['Severity'].values\n\nfeature_names = ['Age', 'Shape', 'Margin', 'Density']\n\nprint (all_features,'\\n')\n\nprint (all_classes)\n\n","64677ba5":"all_features.shape","c5e66b16":"# normalize the attribute data\nscaler = preprocessing.StandardScaler()\nscaler_features=scaler.fit_transform(all_features)\nscaler_features","98f81331":"# Now set up an actual MLP model using Keras:\ndef create_model():\n    model=Sequential()\n    \n    # 4 feature inputs going into an 19-unit layer\n    model.add(Dense(19,input_dim=4 , kernel_initializer='normal',activation='relu'))\n    \n    # Output layer with a binary classification (benign or malignant)\n    model.add(Dense(1,kernel_initializer='normal', activation='sigmoid'))\n    \n    # Compile model\n    model.compile(loss='binary_crossentropy', optimizer='rmsprop',metrics=['accuracy'])\n    return model","b91c7f94":"# Wrap our Keras model in an estimator compatible with scikit_learn\nestimator= KerasClassifier(build_fn=create_model,nb_epoch=100,verbose=0)\n#cross_val_score to evaluate this model \ncv_scores=cross_val_score(estimator,scaler_features,all_classes , cv= 10)\ncv_scores.mean() ","f2cabd39":"# Predict Whether a Mammogram Mass Is Benign or Malignant\n\n","9564b0f5":"## Introduction","5a5e013a":"## Importing packages","848dc08d":"## Exploring the Data","22324a35":"## Loading the Data","4510c2c7":"Some of our models require the input data to be normalized","bb66b64c":"## Convert the Pandas Dataframes Into Numpy","d709cd60":"## Severity Correlation Matrix\n\nNow let's take a look at the most important variables, which will have strong linear releationship with Severity variable .\n","fd9ede22":"### This data contains 961 instances of masses detected in mammograms, and contains the following attributes:\n\n1- BI-RADS assessment: 1 to 5 (ordinal)\n\n2- Age: patient's age in years (integer)\n\n3- Shape: mass shape: round=1 oval=2 lobular=3 irregular=4 (nominal)\n\n4- Margin: mass margin: circumscribed=1 microlobulated=2 obscured=3 ill-defined=4 spiculated=5 (nominal)\n\n5- Density: mass density high=1 iso=2 low=3 fat-containing=4 (ordinal)\n\n6- Severity: benign=0 or malignant=1 (binominal)\n","5bebdc12":"The purpose of this project was to predict the severity (benign or malignant) of a mammographic mass lesion from BI-RADS attributes and the patient's age.","e080bd6f":"## Normalize","808f0521":"## Missing Data","bb0e12ba":"## Build Neural Network."}}