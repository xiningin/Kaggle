{"cell_type":{"4ec37da8":"code","d38beacf":"code","3e21c952":"code","d7217a7e":"code","56a4b484":"code","38467061":"code","f3a92e85":"code","260bb665":"code","cb0fc308":"code","5347142d":"code","f3fbf9ae":"code","2324f03c":"code","ac1a9dcb":"code","17577dd1":"markdown","5721630e":"markdown"},"source":{"4ec37da8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d38beacf":"\n# I choose version 2 from the dataset\ndata = pd.read_csv('\/kaggle\/input\/brasilian-houses-to-rent\/houses_to_rent_v2.csv')\ndata.head(2)","3e21c952":"#I turned the categorial data to binary .which is 0 and 1\ndata['animal']=data['animal'].replace(to_replace =\"acept\", \n                 value =1) \ndata['animal']=data['animal'].replace(to_replace =\"not acept\", \n                 value =0)\n\ndata['furniture']=data['furniture'].replace(to_replace =\"furnished\", \n                 value =1) \ndata['furniture']=data['furniture'].replace(to_replace =\"not furnished\", \n                 value =0)","d7217a7e":"data.tail(3)","56a4b484":"data.info()","38467061":"data.corr()","f3a92e85":"data.rename(columns={\"rent amount (R$)\": \"rent\"},inplace=True)","260bb665":"print(\"Find most important features relative to target\")\ncorr = data.corr()\ncorr.sort_values([\"rent\"], ascending = False, inplace = True)\nprint(corr.rent)\n","cb0fc308":"data['floor']=data['floor'].replace(to_replace =\"-\", \n                 value =0)","5347142d":"from sklearn.model_selection import train_test_split\nx_train , x_test , y_train , y_test = train_test_split(data[['area','rooms','bathroom','parking spaces','floor','animal','furniture','property tax (R$)','fire insurance (R$)']],data.rent,test_size=0.1)","f3fbf9ae":"# Import the model we are using\nfrom sklearn.ensemble import RandomForestRegressor\n# Instantiate model with 1000 decision trees\nrf = RandomForestRegressor(n_estimators = 1000, random_state = 42)\n# Train the model on training data\nrf.fit(x_test, y_test);","2324f03c":"rf.predict(x_test)","ac1a9dcb":"rf.score(x_test,y_test)","17577dd1":"From the above output we can see that\n\n\nfire insurance (R$)  =  0.987343\n\n\nbathroom              = 0.668504\n\n\nparking spaces       =  0.578361\n\n\nrooms                =  0.541758\n\n\ntotal (R$)          =   0.264490\n\n\narea                =   0.180742\n\n\nfurniture            =  0.164235\n\n\nproperty tax (R$)   =   0.107884\n\n\nanimal              =   0.067754\n\n\nhoa (R$)            =   0.036490\n\n\n","5721630e":"I got the score upto 99 percent which means our model is accurate . pretty much !!!"}}