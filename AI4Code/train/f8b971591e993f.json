{"cell_type":{"a8a1c9b8":"code","6b92126c":"code","4afe1fb3":"code","e8102e50":"code","5fb4e21f":"code","69fa89fd":"code","60b4a819":"code","4bd750e0":"code","09140380":"code","7c6a2b74":"code","8dd09960":"code","77c4751b":"code","967a1d8c":"code","b81d22da":"code","97a81561":"markdown","81ff467d":"markdown","02294d6c":"markdown","a0d0084d":"markdown","17ca2e14":"markdown","091be301":"markdown","d6ed2303":"markdown","e245f5a6":"markdown","a3cff603":"markdown","43053784":"markdown","8a49d83d":"markdown","b8f7c6e0":"markdown","a0cbfe9d":"markdown"},"source":{"a8a1c9b8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n# Any results you write to the current directory are saved as output.","6b92126c":"df = pd.read_csv(\"..\/input\/para.csv\",sep = \";\")","4afe1fb3":"df.head()","e8102e50":"df.fillna(df.mean(), inplace=True)","5fb4e21f":"fig, ax = plt.subplots(2,2,figsize=(20,10))\nk=0\nax[0][0].scatter(df[\"Energy-1\"],df[\"Amplitude-1\"])\nax[0][0].set_xlabel(\"Energy-1\")\nax[0][0].set_ylabel(\"Amplitude-1\")\nax[0][0].set_title(\"Energy-1 vs Amplitude-1\")\nax[0][1].scatter(df[\"Energy-2\"],df[\"Amplitude-2\"])\nax[0][1].set_xlabel(\"Energy-2\")\nax[0][1].set_ylabel(\"Amplitude-2\")\nax[0][1].set_title(\"Energy-2 vs Amplitude-2\")\nax[1][0].scatter(df[\"RA\"],df[\"Av-Frequency\"])\nax[1][0].set_xlabel(\"RA\")\nax[1][0].set_ylabel(\"Av-Frequency\")\nax[1][0].set_title(\"RA vs Av-Frequency\")\nax[1][1].scatter(df[\"RA\"],df[\"Av-Frequency\"])\nax[1][1].set_xlabel(\"RA\")\nax[1][1].set_ylabel(\"Av-Frequency\")\nax[1][1].set_title(\"RA-2 vs Av-Frequency\")\n","69fa89fd":"from sklearn.cluster import KMeans\ndf1 = df[[\"Energy-1\",\"Amplitude-1\"]]\ndf2 = df[[\"Energy-2\",\"Amplitude-2\"]]\ndf3 = df[[\"RA\",\"Av-Frequency\"]]\ndf4 = df[[\"RA-2\",\"Av-Frequency\"]]\ntotal_df = [df1,df2,df3,df4]\nl = 0\n\nfig, ax = plt.subplots(2,2,figsize=(20,10))\nfor i in total_df:\n    wcss = []\n    for k in range(1,15):\n        kmeans = KMeans(n_clusters=k)\n        kmeans.fit(i)\n        wcss.append(kmeans.inertia_)\n    if l == 0:\n        ax[l][l].set_title(\"Energy-1 vs Amplitude-1\")\n        ax[l][l].plot(range(1,15),wcss)\n        ax[l][l].set_xlabel(\"Number of k (cluster) value\")\n        ax[l][l].set_ylabel(\"wcss\")\n    elif l == 1:\n        ax[l-1][l].set_title(\"Energy-2 vs Amplitude-2\")\n        ax[l-1][l].plot(range(1,15),wcss)\n        ax[l-1][l].set_xlabel(\"Number of k (cluster) value\")\n        ax[l-1][l].set_ylabel(\"wcss\")\n    elif l == 2:\n        ax[l-1][l-2].set_title(\"RA AV-Frequency\")\n        ax[l-1][l-2].plot(range(1,15),wcss)\n        ax[l-1][l-2].set_xlabel(\"Number of k (cluster) value\")\n        ax[l-1][l-2].set_ylabel(\"wcss\")\n    elif l ==3:\n        ax[l-2][l-2].set_title(\"RA-2 AV-Frequency\")\n        ax[l-2][l-2].plot(range(1,15),wcss)\n        ax[l-2][l-2].set_xlabel(\"Number of k (cluster) value\")\n        ax[l-2][l-2].set_ylabel(\"wcss\")\n            \n    l += 1\nplt.show()","60b4a819":"from sklearn.cluster import KMeans\ndf1.column = [\"energy\",\"Amp\"]\nkmeans2 = KMeans(n_clusters=2,init=\"random\",)\nclusters = kmeans2.fit_predict(df1)\ndf1[\"label\"] = clusters\nplt.figure(figsize=(10,5))\n\nplt.scatter(df1[\"Energy-1\"][df1.label ==0],df1[\"Amplitude-1\"][df1.label==0],color=\"red\")\nplt.scatter(df1[\"Energy-1\"][df1.label ==1],df1[\"Amplitude-1\"][df1.label==1],color=\"blue\")\nplt.ylim(0,150)\nplt.xlim(0,20000)\nplt.show()","4bd750e0":"from sklearn.mixture import GaussianMixture\ngmm = GaussianMixture(n_components=2,covariance_type=\"diag\").fit(df1)\nlabels = gmm.predict(df1)\ndf1[\"label\"] = labels\nplt.figure(figsize=(10,5))\nplt.scatter(df1[\"Energy-1\"][df1.label ==0],df1[\"Amplitude-1\"][df1.label==0],color=\"red\")\nplt.scatter(df1[\"Energy-1\"][df1.label ==1],df1[\"Amplitude-1\"][df1.label==1],color=\"blue\")\n#plt.ylim(0,150)\n#plt.xlim(0,20000)\nplt.show()","09140380":"from sklearn.cluster import KMeans\nkmeans2 = KMeans(n_clusters=2)\nclusters = kmeans2.fit_predict(df2)\ndf2[\"label\"] = clusters\nplt.figure(figsize=(10,5))\n\nplt.scatter(df2[\"Energy-2\"][df2.label ==0],df2[\"Amplitude-2\"][df2.label==0],color=\"red\")\nplt.scatter(df2[\"Energy-2\"][df2.label ==1],df2[\"Amplitude-2\"][df2.label==1],color=\"blue\")\n#plt.ylim(0,150)\n#plt.xlim(0,20000)\nplt.show()","7c6a2b74":"from sklearn.mixture import GaussianMixture\ngmm = GaussianMixture(n_components=2,covariance_type=\"diag\").fit(df2)\nlabels = gmm.predict(df2)\ndf2[\"label\"] = labels\nplt.figure(figsize=(10,5))\nplt.scatter(df2[\"Energy-2\"][df2.label ==0],df2[\"Amplitude-2\"][df2.label==0],color=\"red\")\nplt.scatter(df2[\"Energy-2\"][df2.label ==1],df2[\"Amplitude-2\"][df2.label==1],color=\"blue\")\n#plt.ylim(0,150)\n#plt.xlim(0,20000)\nplt.show()","8dd09960":"from sklearn.cluster import KMeans\nkmeans2 = KMeans(n_clusters=3)\nclusters = kmeans2.fit_predict(df3)\ndf3[\"label\"] = clusters\nplt.figure(figsize=(10,5))\n\nplt.scatter(df3[\"RA\"][df3.label ==0],df3[\"Av-Frequency\"][df3.label==0],color=\"red\")\nplt.scatter(df3[\"RA\"][df3.label ==1],df3[\"Av-Frequency\"][df3.label==1],color=\"blue\")\nplt.scatter(df3[\"RA\"][df3.label ==2],df3[\"Av-Frequency\"][df3.label==2],color=\"black\")\n#plt.ylim(0,150)\n#plt.xlim(0,20000)\nplt.show()","77c4751b":"from sklearn.mixture import GaussianMixture\ngmm = GaussianMixture(n_components=4,covariance_type=\"spherical\").fit(df3)\nlabels = gmm.predict(df3)\ndf3[\"label\"] = labels\nplt.figure(figsize=(20,10))\nplt.scatter(df3[\"RA\"][df3.label ==0],df3[\"Av-Frequency\"][df3.label==0],color=\"red\")\nplt.scatter(df3[\"RA\"][df3.label ==1],df3[\"Av-Frequency\"][df3.label==1],color=\"blue\")\nplt.scatter(df3[\"RA\"][df3.label ==2],df3[\"Av-Frequency\"][df3.label==2],color=\"black\")\nplt.scatter(df3[\"RA\"][df3.label ==3],df3[\"Av-Frequency\"][df3.label==3],color=\"yellow\")\n#plt.ylim(0,150)\n#plt.xlim(0,20000)\nplt.show()","967a1d8c":"from sklearn.cluster import KMeans\nkmeans2 = KMeans(n_clusters=3)\nclusters = kmeans2.fit_predict(df4)\ndf4[\"label\"] = clusters\nplt.figure(figsize=(10,5))\n\nplt.scatter(df4[\"RA-2\"][df4.label ==0],df4[\"Av-Frequency\"][df4.label==0],color=\"red\")\nplt.scatter(df4[\"RA-2\"][df4.label ==1],df4[\"Av-Frequency\"][df4.label==1],color=\"blue\")\nplt.scatter(df4[\"RA-2\"][df4.label ==2],df4[\"Av-Frequency\"][df4.label==2],color=\"black\")\n#plt.ylim(0,150)\n#plt.xlim(0,20000)\nplt.show()","b81d22da":"from sklearn.mixture import GaussianMixture\ngmm = GaussianMixture(n_components=4,covariance_type=\"spherical\").fit(df4)\nlabels = gmm.predict(df4)\ndf4[\"label\"] = labels\nplt.figure(figsize=(20,10))\nplt.scatter(df4[\"RA-2\"][df4.label ==0],df4[\"Av-Frequency\"][df4.label==0],color=\"red\")\nplt.scatter(df4[\"RA-2\"][df4.label ==1],df4[\"Av-Frequency\"][df4.label==1],color=\"blue\")\nplt.scatter(df4[\"RA-2\"][df4.label ==2],df4[\"Av-Frequency\"][df4.label==2],color=\"black\")\nplt.scatter(df4[\"RA-2\"][df4.label ==3],df4[\"Av-Frequency\"][df4.label==3],color=\"yellow\")\n#plt.ylim(0,150)\n#plt.xlim(0,20000)\nplt.show()","97a81561":"# RA-2 vs Av-Frequency","81ff467d":"# KDE\n    Visiluzation Datas","02294d6c":"## Gaussian Mixture","a0d0084d":"# RA vs Av-Frequency","17ca2e14":"# Energy-2 vs Amplitude-2","091be301":"## KMeans","d6ed2303":"## KMeans","e245f5a6":"## Gaussian Mixture","a3cff603":"## KMeans","43053784":"## Gaussian Mixture","8a49d83d":"# Energy-1 vs Amplitude-1\n    We evaluate two cluster","b8f7c6e0":"## WCSS Value","a0cbfe9d":"## Gaussian Mixture"}}