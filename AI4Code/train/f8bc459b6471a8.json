{"cell_type":{"56fd3a3b":"code","598846b5":"code","b5ec7fa5":"code","2e8ad6b7":"code","608e6fd2":"code","03a3ee11":"code","b76f4e6e":"code","6de8959f":"code","68b9deb8":"code","f1d5d896":"code","ac9918c9":"code","ff975123":"code","40918d16":"code","b7507234":"code","715a3fff":"code","c663d9ed":"code","d737fe9a":"code","46d8fa8e":"code","1e0a2948":"markdown","5c8c4870":"markdown","fc255b23":"markdown","14106dec":"markdown","784a5ab3":"markdown","ab372440":"markdown","b425b031":"markdown","45c4e83d":"markdown","0263ed53":"markdown","1aaa93d3":"markdown","98d5a2e6":"markdown","7b209d67":"markdown","dbb5c8d3":"markdown","cb7df2b6":"markdown","af3da754":"markdown","7f299bc4":"markdown","7ec575f2":"markdown","f9771431":"markdown","96b597b6":"markdown","3178ab04":"markdown","02e1225c":"markdown","6b76f034":"markdown"},"source":{"56fd3a3b":"from sklearn.model_selection import GridSearchCV,StratifiedKFold\nfrom sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier, AdaBoostClassifier\nfrom sklearn.linear_model import LogisticRegression, SGDClassifier\nfrom sklearn.preprocessing import LabelEncoder, OneHotEncoder\nfrom sklearn.linear_model import PassiveAggressiveClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.naive_bayes import GaussianNB\nfrom imblearn.over_sampling import SMOTE\nfrom lightgbm import LGBMClassifier\nfrom collections import Counter\nimport matplotlib.pyplot as plt\nimport pandas_profiling as pp\nfrom sklearn.svm import SVC\nimport plotly.express as px\nimport seaborn as sns\nimport pandas as pd\nimport numpy as np\nimport warnings\n\nwarnings.simplefilter(action='ignore', category=Warning)\nfrom collections import Counter","598846b5":"df = pd.read_csv('\/kaggle\/input\/water-potability\/water_potability.csv')","b5ec7fa5":"# Displaying top 5 rows\ndf.head()","2e8ad6b7":"# Getting the Shape of the Data\ndf.shape","608e6fd2":"# Getting data types\ndf.info()","03a3ee11":"# Checking Null Values\ndf.isnull().sum()","b76f4e6e":"# Dropping NUll Values\ndf.dropna(inplace = True)\n\n# Checking size of data after dropping NUll Value\ndf.shape","6de8959f":"# Getting the description of Data\ndf.describe().T","68b9deb8":"pota_count = df['Potability'].value_counts()\nprint(pota_count)\npota_count.plot.pie();","f1d5d896":"plt.figure(figsize=(6,5))\nsns.countplot(x=\"Potability\", data=df, palette='viridis');","ac9918c9":"def boxdistriplot(columnName):\n    if not columnName == 'Potability':\n        sns.catplot(x=\"Potability\", y=columnName, data=df, kind=\"box\");\n        plt.figure()\n        ax = sns.distplot(df[columnName][df.Potability == 1],color=\"darkturquoise\", rug=True)\n        sns.distplot(df[columnName][df.Potability == 0], color=\"lightcoral\", rug=True);\n        plt.legend(['Potable', 'Not Potable']) \n\n\nfor column in df.columns:\n    boxdistriplot(column)","ff975123":"def skewnessCorrector(dataset,columnName):\n    import seaborn as sns\n    from scipy import stats\n    from scipy.stats import norm, boxcox\n\n    print('''Before Correcting''')\n    (mu, sigma) = norm.fit(dataset[columnName])\n    print(\"Mu before correcting {} : {}, Sigma before correcting {} : {}\".format(\n        columnName.capitalize(), mu, columnName.capitalize(), sigma))\n    plt.figure(figsize=(20, 10))\n    plt.subplot(1, 2, 1)\n    sns.distplot(dataset[columnName], fit=norm, color=\"lightcoral\");\n    plt.title(columnName.capitalize() +\n              \" Distplot before Skewness Correction\", color=\"black\")\n    plt.subplot(1, 2, 2)\n    stats.probplot(dataset[columnName], plot=plt)\n    plt.show()\n    # Applying BoxCox Transformation\n    dataset[columnName], lam_fixed_acidity = boxcox(\n        dataset[columnName])\n    \n    print('''After Correcting''')\n    (mu, sigma) = norm.fit(dataset[columnName])\n    print(\"Mu after correcting {} : {}, Sigma after correcting {} : {}\".format(\n        columnName.capitalize(), mu, columnName.capitalize(), sigma))\n    plt.figure(figsize=(20, 10))\n    plt.subplot(1, 2, 1)\n    sns.distplot(dataset[columnName], fit=norm, color=\"orange\");\n    plt.title(columnName.capitalize() +\n              \" Distplot After Skewness Correction\", color=\"black\")\n    plt.subplot(1, 2, 2)\n    stats.probplot(dataset[columnName], plot=plt)\n    plt.show()\n\ncol = ['ph', 'Hardness', 'Solids', 'Chloramines', 'Sulfate', 'Conductivity',\n       'Organic_carbon', 'Trihalomethanes', 'Turbidity']\nfor column in col:\n    skewnessCorrector(df,column)","40918d16":"plt.figure(figsize=(13,10))\nsns.heatmap(df.corr(), annot=True, cmap=\"flag\");","b7507234":"plt.figure(figsize=(13,10))\nsns.pairplot(df, hue=\"Potability\", palette=\"magma\");","715a3fff":"pp.ProfileReport(df, title = \"Water Quality\")","c663d9ed":"# Fratures\nx = df.drop(columns = 'Potability', axis = 1)\ny = df['Potability']","d737fe9a":"def preprocessing(data,features,labels,test_size = 0.2,random_state =42, tune = 'n',cv_folds = 5):\n    \n    print('Checking if labels or features are categorical! [*]\\n')\n    cat_features=[i for i in features.columns if features.dtypes[i]=='object']\n    if len(cat_features) >= 1 :\n        index = []\n        for i in range(0,len(cat_features)):\n            index.append(features.columns.get_loc(cat_features[i]))\n        print('Features are Categorical\\n')\n        ct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), index)], remainder='passthrough')\n        print('Encoding Features [*]\\n')\n        features = np.array(ct.fit_transform(features))\n        print('Encoding Features Done [',u'\\u2713',']\\n')\n    if labels.dtype == 'O':\n        le = LabelEncoder()\n        print('Labels are Categorical [*] \\n')\n        print('Encoding Labels \\n')\n        labels = le.fit_transform(labels)\n        print('Encoding Labels Done [',u'\\u2713',']\\n')\n    else:\n        print('Features and labels are not categorical [',u'\\u2713',']\\n')\n        \n    ## SMOTE ---------------------------------------------------------------------\n    print('Applying SMOTE [*]\\n')\n    \n    sm=SMOTE(k_neighbors=4)\n    features,labels=sm.fit_resample(features,labels)\n    print('SMOTE Done [',u'\\u2713',']\\n')\n    \n    ## Splitting ---------------------------------------------------------------------\n    print('Splitting Data into Train and Validation Sets [*]\\n')\n    \n    x_train, x_test, y_train, y_test = train_test_split(features, labels, test_size= test_size, random_state= random_state)\n    print('Splitting Done [',u'\\u2713',']\\n')\n    \n    ## Scaling ---------------------------------------------------------------------\n    print('Scaling Training and Test Sets [*]\\n')\n    \n    sc = StandardScaler()\n    X_train = sc.fit_transform(x_train)\n    X_val = sc.transform(x_test)\n    print('Scaling Done [',u'\\u2713',']\\n')\n    \n    print('Training All Basic Classifiers on Training Set [*] \\n')\n    \n    parameters_svm= [\n    {'kernel': ['rbf'], 'gamma': [0.1, 0.5, 0.9, 1],\n        'C': np.logspace(-4, 4, 5)},\n    ]\n    parameters_lin = [{\n    'penalty': ['l1', 'l2', ],\n    'solver': ['newton-cg', 'liblinear', ],\n    'C': np.logspace(-4, 4, 5),\n    }]\n    parameters_knn = [{\n    'n_neighbors': list(range(0, 11)),\n    'weights': ['uniform', 'distance'],\n    'algorithm': ['auto', 'kd_tree', 'brute'],\n    }]\n    parameters_dt = [{\n    'criterion': ['gini', 'entropy'],\n    'splitter': ['best', 'random'],\n    'max_depth': [4,  6,  8,  10,  12,  20,  40, 70],\n\n    }]\n    parameters_rfc = [{\n    'criterion': ['gini', 'entropy'],\n    'n_estimators': [100, 300, 500, 750, 1000],\n    'max_features': [2, 3],\n    }]\n    parameters_xgb = [{\n    'max_depth': [4,  6,  8,  10],\n    'learning_rate': [0.3, 0.1],\n    }]\n    parameters_lgbm =  {\n    'learning_rate': [0.005, 0.01],\n    'n_estimators': [8,16,24],\n    'boosting_type' : ['gbdt', 'dart'],\n    'objective' : ['binary'],\n    }\n    paramters_pac = {\n        'C': np.logspace(-4, 4, 20)},\n    \n    \n    param_nb={}\n    parameters_ada={\n            'learning_rate': [0.005, 0.01],\n            'n_estimators': [8,16,24],\n    }\n    paramters_sgdc = [{\n    'penalty': ['l2', 'l1', 'elasticnet'],\n    'loss': ['hinge', 'log'],\n    'alpha':np.logspace(-4, 4, 20),\n    }]\n    models =[(\"LR\", LogisticRegression(), parameters_lin),(\"SVC\", SVC(),parameters_svm),('KNN',KNeighborsClassifier(),parameters_knn),\n    (\"DTC\", DecisionTreeClassifier(),parameters_dt),(\"GNB\", GaussianNB(), param_nb),(\"SGDC\", SGDClassifier(), paramters_sgdc),('RF',RandomForestClassifier(),parameters_rfc),\n    ('ADA',AdaBoostClassifier(),parameters_ada),('XGB',GradientBoostingClassifier(),parameters_xgb),('LGBN', LGBMClassifier(),parameters_lgbm),\n    ('PAC',PassiveAggressiveClassifier(),paramters_pac)]\n\n    results = []\n    names = []\n    finalResults = []\n    accres = []\n\n    for name,model, param in models:\n        \n        model.fit(x_train, y_train)\n        model_results = model.predict(x_test)\n        accuracy = accuracy_score(y_test, model_results)\n        print('Validation Accuracy is :',accuracy)\n        print('Applying K-Fold Cross validation on Model {}[*]'.format(name))\n        accuracies = cross_val_score(estimator=model, X=x_train, y=y_train, cv=cv_folds, scoring='accuracy')\n        print(\"Accuracy: {:.2f} %\".format(accuracies.mean()*100))\n        acc = accuracies.mean()*100\n        print(\"Standard Deviation: {:.2f} %\".format(accuracies.std()*100)) \n        results.append(acc)\n        names.append(name)\n        accres.append((name,acc))\n        if tune == 'y' and not name == 'GNB':\n            print('Applying Grid Search Cross validation for model {} []\\n'.format(name))\n            cv_params = param\n            grid_search = GridSearchCV(\n            estimator=model,\n            param_grid=cv_params,\n            scoring='accuracy',\n            cv=cv_folds,\n            n_jobs=-1,\n            verbose=4,\n                )\n            grid_search.fit(X_train, y_train)\n            best_accuracy = grid_search.best_score_\n            best_parameters = grid_search.best_params_\n            print(\"Best Accuracy for model {}: {:.2f} %\".format(name,best_accuracy*100))\n            print(\"Best Parameters: for model {}\".format(name), best_parameters)\n            print('Applying Grid Search Cross validation Done[',u'\\u2713',']\\n')\n            \n        print('Training Compeleted Showing Predictions [',u'\\u2713','] \\n')\n    accres.sort(key=lambda k:k[1],reverse=True)\n    print(\"\\n The Accuracy of the Models Are:\\n \")\n    tab = pd.DataFrame(accres)\n    print(tab)\n    sns.barplot(x=tab[1], y=tab[0], palette='mako');\n    print(\"\\n\\nModel With Highest Accuracy is: \\n\",accres[0],'\\n\\n')","46d8fa8e":"preprocessing(df,x,y)","1e0a2948":"# Exploratory Data Analysis","5c8c4870":"# Columns Discription\n1. ph: pH of 1. water (0 to 14).\n2. Hardness: Capacity of water to precipitate soap in mg\/L.\n3. Solids: Total dissolved solids in ppm.\n4. Chloramines: Amount of Chloramines in ppm.\n5. Sulfate: Amount of Sulfates dissolved in mg\/L.\n6. Conductivity: Electrical conductivity of water in \u03bcS\/cm.\n7. Organic_carbon: Amount of organic carbon in ppm.\n8. Trihalomethanes: Amount of Trihalomethanes in \u03bcg\/L.\n9. Turbidity: Measure of light emiting property of water in NTU.\n10. Potability: Indicates if water is safe for human consumption. Potable -1 and Not potable -0","fc255b23":"***References***\n\nhttps:\/\/en.wikipedia.org\/wiki\/Drinking_water\n\nhttps:\/\/www.epa.gov\/ccl\/types-drinking-water-contaminants#:~:text=Examples%20of%20chemical%20contaminants%20include,contaminants%20are%20organisms%20in%20water.&text=Examples%20of%20biological%20or%20microbial,viruses%2C%20protozoan%2C%20and%20parasites.\n\nhttps:\/\/gist.github.com\/d4rk-lucif3r\/c0349c76a6fed2d4de166e7cff537ff4\n\nhttps:\/\/github.com\/GD-Singh011\/funky-ml","14106dec":"> As we can see we have dropped all null values but due to this the size of our data is compromized.\n\n> Before dropping it was (3276, 10) \n\n> After Dropping it is (2011,10)","784a5ab3":"# Data Preprocessing And Data Modelling","ab372440":"# Loading Data","b425b031":"> As we can see from above\n\n> Potable water are 811\n\n> Non Potable water are 1200","45c4e83d":"***Getting Features and predicting values***","0263ed53":"**Potability data Count**","1aaa93d3":"**Pairplot**","98d5a2e6":"**Using Pandas Profiling**","7b209d67":"> we can see that there are many outliners in the data so now we will remove them.","dbb5c8d3":"**What is Potable Water**\n\n> Drinking water, also known as potable water, is water that is safe to drink or use for food preparation. The amount of drinking water required to maintain good health varies, and depends on physical activity level, age, health-related issues, and environmental conditions.Typically in developed countries, tap water meets drinking water quality standards, even though only a small proportion is actually consumed or used in food preparation. Other typical uses include washing, toilets, and irrigation. Greywater may also be used for toilets or irrigation. Its use for irrigation however may be associated with risks.\n\n**Contaiments in Water**\n>The Safe Drinking Water Act defines the term \"contaminant\" as meaning any physical, chemical, biological, or radiological substance or matter in water. Therefore, the law defines \"contaminant\" very broadly as being anything other than water molecules. Drinking water may reasonably be expected to contain at least small amounts of some contaminants. Some drinking water contaminants may be harmful if consumed at certain levels in drinking water while others may be harmless. The presence of contaminants does not necessarily indicate that the water poses a health risk. Only a small number of the universe of contaminants as defined above are listed on the Contaminant Candidate List (CCL). The CCL serves as the first level of evaluation for unregulated drinking water contaminants that may need further investigation of potential health effects and the levels at which they are found in drinking water.\n\n>The following are general categories of drinking water contaminants \n>1. Physical\n>2. Chemical\n>3. Biological\n>4. Radiological\n\n**How is Water made potable for drinking?**\n\n> Water purification is the process of removing undesirable chemicals, biological contaminants, suspended solids, and gases from water. The goal is to produce water fit for specific purposes. Most water is purified and disinfected for human consumption (drinking water), but water purification may also be carried out for a variety of other purposes, including medical, pharmacological, chemical, and industrial applications. The methods used include physical processes such as filtration, sedimentation, and distillation; biological processes such as slow sand filters or biologically active carbon; chemical processes such as flocculation and chlorination; and the use of electromagnetic radiation such as ultraviolet light.\n\n**Facts by WHO**\n\n>According to a 2007 World Health Organization (WHO) report, 1.1 billion people lack access to an improved drinking water supply; 88% of the 4 billion annual cases of diarrheal disease are attributed to unsafe water and inadequate sanitation and hygiene, while 1.8 million people die from diarrheal disease each year. The WHO estimates that 94% of these diarrheal disease cases are preventable through modifications to the environment, including access to safe water. Simple techniques for treating water at home, such as chlorination, filters, and solar disinfection, and for storing it in safe containers could save a huge number of lives each year. Reducing deaths from waterborne diseases is a major public health goal in developing countries.","cb7df2b6":"# Data Visualization","af3da754":"> Pairplot tells us about the relationship between different columns on the basis of Potability","7f299bc4":"# Summary\n* **RF** and **LGBM** were the best here with an accuracy of exactly **~71%%**","7ec575f2":"# Importing Liberaries","f9771431":"**Correcting Skewness in Data**","96b597b6":"**Box And Distribution plot for each column**","3178ab04":">From the Correlation plot above we can get to know positive and negative relationships between different columns","02e1225c":"***Information about the Columns on which we have done the Analysis***\n> 1. pH value:\n\n> PH is an important parameter in evaluating the acid\u2013base balance of water. It is also the indicator of acidic or alkaline condition of water status. WHO has recommended maximum permissible limit of pH from 6.5 to 8.5. The current investigation ranges were 6.52\u20136.83 which are in the range of WHO standards.\n> \n> 2. Hardness:\n\n> Hardness is mainly caused by calcium and magnesium salts. These salts are dissolved from geologic deposits through which water travels. The length of time water is in contact with hardness producing material helps determine how much hardness there is in raw water. Hardness was originally defined as the capacity of water to precipitate soap caused by Calcium and Magnesium.\n> \n> 3. Solids (Total dissolved solids - TDS):\n\n> Water has the ability to dissolve a wide range of inorganic and some organic minerals or salts such as potassium, calcium, sodium, bicarbonates, chlorides, magnesium, sulfates etc. These minerals produced un-wanted taste and diluted color in appearance of water. This is the important parameter for the use of water. The water with high TDS value indicates that water is highly mineralized. Desirable limit for TDS is 500 mg\/l and maximum limit is 1000 mg\/l which prescribed for drinking purpose.\n> \n> 4. Chloramines:\n\n> Chlorine and chloramine are the major disinfectants used in public water systems. Chloramines are most commonly formed when ammonia is added to chlorine to treat drinking water. Chlorine levels up to 4 milligrams per liter (mg\/L or 4 parts per million (ppm)) are considered safe in drinking water.\n> \n> 5. Sulfate:\n\n> Sulfates are naturally occurring substances that are found in minerals, soil, and rocks. They are present in ambient air, groundwater, plants, and food. The principal commercial use of sulfate is in the chemical industry. Sulfate concentration in seawater is about 2,700 milligrams per liter (mg\/L). It ranges from 3 to 30 mg\/L in most freshwater supplies, although much higher concentrations (1000 mg\/L) are found in some geographic locations.\n> \n> 6. Conductivity:\n\n> Pure water is not a good conductor of electric current rather\u2019s a good insulator. Increase in ions concentration enhances the electrical conductivity of water. Generally, the amount of dissolved solids in water determines the electrical conductivity. Electrical conductivity (EC) actually measures the ionic process of a solution that enables it to transmit current. According to WHO standards, EC value should not exceeded 400 \u03bcS\/cm.\n> \n> 7. Organic_carbon:\n\n> Total Organic Carbon (TOC) in source waters comes from decaying natural organic matter (NOM) as well as synthetic sources. TOC is a measure of the total amount of carbon in organic compounds in pure water. According to US EPA < 2 mg\/L as TOC in treated \/ drinking water, and < 4 mg\/Lit in source water which is use for treatment.\n> \n> 8. Trihalomethanes:\n\n> THMs are chemicals which may be found in water treated with chlorine. The concentration of THMs in drinking water varies according to the level of organic material in the water, the amount of chlorine required to treat the water, and the temperature of the water that is being treated. THM levels up to 80 ppm is considered safe in drinking water.\n> \n> 9. Turbidity:\n\n> The turbidity of water depends on the quantity of solid matter present in the suspended state. It is a measure of light emitting properties of water and the test is used to indicate the quality of waste discharge with respect to colloidal matter. The mean turbidity value obtained for Wondo Genet Campus (0.98 NTU) is lower than the WHO recommended value of 5.00 NTU.\n> \n> 10. Potability:\n\n> Indicates if water is safe for human consumption where 1 means Potable and 0 means Not potable.","6b76f034":"**Correlation Matrix**"}}