{"cell_type":{"47777140":"code","573407dd":"code","d82e3e41":"code","9a69f481":"code","5193632b":"code","70ec9693":"code","fa85e9ed":"code","d2628a31":"code","8f6e57bd":"code","3a526d39":"code","baad2f16":"code","973a6deb":"code","1eb732aa":"code","9a251c1a":"code","c03fc8f2":"code","7825d5f6":"code","b2823a26":"code","97fb396c":"code","c4710148":"code","68028ce0":"code","d6fb6672":"code","6e96fd93":"code","86fa7f41":"code","de6fb024":"code","2876d176":"code","8371b6a8":"code","d10723af":"code","94d37388":"code","a3b1f939":"code","c84c09bb":"code","302a59a5":"code","bfa5fe7c":"code","ae0c5a31":"code","985b6703":"code","f269638e":"code","77cd2fcd":"code","60f3642e":"code","112bd617":"code","743b83ed":"code","92fe84c1":"code","19600ea8":"code","bb8a4c17":"code","83c89748":"code","9d3d7a87":"code","022eda8e":"code","1fdfe6c4":"code","8c52917b":"code","7a8a8d08":"code","c46050b0":"code","b8a4c431":"code","6c9ee927":"code","f375e2ac":"code","19b7d7f1":"code","144ce965":"code","6823a465":"code","559f4cc0":"code","a252837b":"code","18e26d3e":"code","a7ad2086":"code","535794e7":"code","9123a2b3":"code","529b4dcd":"code","3e426722":"code","70efe8df":"code","a5e39c7f":"code","ac373fcb":"code","cccb55da":"code","1c2b3911":"code","7b47013a":"code","27cf05b4":"code","d28d8087":"code","a3f270c0":"code","49f7081a":"code","9df64211":"code","3410f43d":"code","8277aacc":"code","22dbccfe":"code","e1334d4a":"code","452f5804":"code","a27ef127":"code","6100afd3":"code","c45118b4":"code","e2b8e27c":"code","5124cbeb":"code","953e54a5":"code","31696acc":"code","55a0cd24":"code","9a556c1e":"code","80260b07":"code","68241d12":"code","9d479963":"code","9359ee26":"code","4d679d8f":"code","96c76bd4":"code","971db337":"code","299f6a65":"code","e1858f6e":"code","6c43b8a4":"code","a5bc81e1":"code","718817fa":"code","f9bdeeb0":"code","e143f627":"code","1ed3ec49":"code","d39016bf":"code","6de019da":"code","6349753d":"code","6253bacc":"code","8ccbcd9d":"code","2c4bb7e4":"code","1572dab6":"code","2c10cf9a":"code","5f14dfff":"code","4227a429":"code","79468a40":"code","efaa3045":"code","e11962b9":"code","17f770ad":"code","1ce651f7":"code","78dc56d5":"code","5719beea":"code","2cee9046":"code","8d930542":"code","a42329a9":"code","ce463d87":"code","96c45e1c":"code","a031ae96":"code","633420a8":"code","357ca67c":"code","52dccbc8":"code","6ef9846e":"code","3315616c":"code","6e2bae0a":"code","04a78a7d":"code","2058e21c":"code","53339e22":"code","efb011e7":"code","1dc1fa39":"code","e353947d":"code","43359348":"code","8da1d9d4":"code","17cf5aa0":"code","f2705d92":"code","b1dab041":"code","cbbf4ef1":"code","b7cd15eb":"code","685bd75a":"code","91c124e4":"markdown","c52014e9":"markdown","9c5f678f":"markdown","1db05f60":"markdown","cd1a00f5":"markdown","facf5b3c":"markdown","3a4f903a":"markdown","2fdeacb5":"markdown","a2a64798":"markdown","41fb4599":"markdown","8db07f8e":"markdown","da623979":"markdown","ca0a3c59":"markdown","0d42a8d0":"markdown","044f3051":"markdown","23555bd8":"markdown","64986ff5":"markdown","8f05d4a4":"markdown","39e92be8":"markdown","d5c98ca0":"markdown","4cad0f39":"markdown","24e4b640":"markdown","53fdcbfa":"markdown","ac5516b6":"markdown","8e6feb25":"markdown","824610e1":"markdown","d0355648":"markdown","4de3bcac":"markdown","5049eeb9":"markdown","2b06059e":"markdown","3f421209":"markdown","178b7b41":"markdown","ad50b09e":"markdown","1eaa2b3b":"markdown","df7531aa":"markdown","161cff84":"markdown","b2b03853":"markdown","826cbdcb":"markdown","6981cbd1":"markdown","3ecaec58":"markdown","ac3ec6dd":"markdown","f25dfe8e":"markdown","2b1f3a42":"markdown","c9f7aef3":"markdown","568b4dd5":"markdown","e5e1058f":"markdown","7bfd5960":"markdown","c515432a":"markdown","2f2a06e8":"markdown","9498fe33":"markdown","cbb0a602":"markdown","b97ac78f":"markdown","ca1e9ebf":"markdown","4fefa98e":"markdown","c3bbd763":"markdown","d46171dc":"markdown","869c9de2":"markdown","3bd5b03a":"markdown","465d250f":"markdown","c2b3ffa9":"markdown","e31da90e":"markdown","b80b876c":"markdown","6d50998c":"markdown","6f70d4f2":"markdown","91aa71ad":"markdown","b099144d":"markdown","c188a826":"markdown","4e7024af":"markdown","2be1cd5c":"markdown","27f74246":"markdown","c7dbc0b3":"markdown","84560074":"markdown","1b1a3274":"markdown","5d4c9196":"markdown","696125e9":"markdown","8ba69765":"markdown","04575a5f":"markdown","87d28806":"markdown","f38c8466":"markdown","31de2a60":"markdown","e42b2708":"markdown","d1c8bb43":"markdown","9d39b6ef":"markdown","dd6a9bc2":"markdown","1a4d3480":"markdown","3ed84e77":"markdown","977ab0cd":"markdown","ff7243c6":"markdown","9d5d248f":"markdown","be041a2d":"markdown","029aead6":"markdown","b0fec5ed":"markdown","ca72f6f6":"markdown","66efa9fe":"markdown","8ca394d3":"markdown","a4951006":"markdown","d5e135b5":"markdown","3b08da58":"markdown","fa12b4aa":"markdown","374f63ba":"markdown","a0823d0d":"markdown","dc8f05e9":"markdown","f2a6b5c1":"markdown","4148298f":"markdown","2eb0104d":"markdown","cd5b90c1":"markdown","228a4a67":"markdown","df65060b":"markdown","a8d5a0c4":"markdown","74c018fa":"markdown","76f86608":"markdown","cdfa08bb":"markdown","be9831b0":"markdown","93982946":"markdown","d270301c":"markdown","bcb813b6":"markdown","0596a4f8":"markdown","7caed44b":"markdown","09afb476":"markdown","63cb2705":"markdown","922031ca":"markdown","0f182696":"markdown","14d0ede9":"markdown","55eec37a":"markdown","45b604dd":"markdown","609c5ede":"markdown","68fd057c":"markdown","845b5d0d":"markdown","664a6754":"markdown","c9e6d718":"markdown","6cc9d208":"markdown","e97aba9d":"markdown","0df6111b":"markdown","f4838154":"markdown","ed701c97":"markdown","f26b499a":"markdown","fdd26a51":"markdown","6d2f2bd6":"markdown","a7ecbc84":"markdown","e0265cd7":"markdown","2c21c7d9":"markdown","299be169":"markdown","03327c36":"markdown","9bce5810":"markdown","09952f82":"markdown","de4cbc02":"markdown","1877b265":"markdown"},"source":{"47777140":"# Supress Warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Importing libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# visulaisation\nfrom matplotlib.pyplot import xticks\n%matplotlib inline\n\nimport statsmodels.api as sm\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.feature_selection import RFE\nfrom sklearn import metrics\nfrom statsmodels.stats.outliers_influence import variance_inflation_factor\nfrom sklearn.metrics import precision_score, recall_score\nfrom sklearn.metrics import precision_recall_curve","573407dd":"df_Leads = pd.DataFrame(pd.read_csv('..\/input\/Leads.csv'))\ndf_Leads.head() ","d82e3e41":"df_Leads.shape","9a69f481":"df_Leads.describe()","5193632b":"df_Leads.info()","70ec9693":"df_Leads.isna().sum()","fa85e9ed":"df_Leads = df_Leads.replace('Select', np.nan)","d2628a31":"round(100*(df_Leads.isnull().sum()\/len(df_Leads.index)), 2)","8f6e57bd":"df_Leads = df_Leads.drop(df_Leads.loc[:,list(round(100*(df_Leads.isnull().sum()\/len(df_Leads.index)), 2)>70)].columns, 1)","3a526d39":"df_Leads['Lead Quality'].describe()","baad2f16":"sns.countplot(df_Leads['Lead Quality'])","973a6deb":"df_Leads['Lead Quality'] = df_Leads['Lead Quality'].replace(np.nan, 'Not Sure')","1eb732aa":"sns.countplot(df_Leads['Lead Quality'])","9a251c1a":"df_Leads['City'].describe()","c03fc8f2":"# lets visualise the countplots of each value in the column City.\nsns.countplot(df_Leads['City'])\nxticks(rotation = 45)","7825d5f6":"df_Leads['City'] = df_Leads['City'].replace(np.nan, 'Mumbai')","b2823a26":"sns.countplot(df_Leads['City'])\nxticks(rotation = 90)","97fb396c":"fig, axs = plt.subplots(2,2, figsize = (10,7.5))\nplt1 = sns.countplot(df_Leads['Asymmetrique Activity Index'], ax = axs[0,0])\nplt2 = sns.boxplot(df_Leads['Asymmetrique Activity Score'], ax = axs[0,1])\nplt3 = sns.countplot(df_Leads['Asymmetrique Profile Index'], ax = axs[1,0])\nplt4 = sns.boxplot(df_Leads['Asymmetrique Profile Score'], ax = axs[1,1])\nplt.tight_layout()","c4710148":"df_Leads = df_Leads.drop(['Asymmetrique Activity Index','Asymmetrique Activity Score','Asymmetrique Profile Index','Asymmetrique Profile Score'],1)","68028ce0":"# Lets look at  .\ndf_Leads['Specialization'].describe()","d6fb6672":"plt.figure(figsize=(16, 5))\nplt.xticks(rotation=45,fontsize=12,horizontalalignment='right')\nax1 = sns.countplot(df_Leads['Specialization'],hue=df_Leads.Converted)\nplt.show()","6e96fd93":"df_Leads['Specialization'] = df_Leads['Specialization'].replace(np.nan, 'Others')","86fa7f41":"# Lets look at Tags.\ndf_Leads['Tags'].describe()","de6fb024":"plt.figure(figsize=(16, 5))\nplt.xticks(rotation=45,fontsize=12,horizontalalignment='right')\nsns.countplot(df_Leads['Tags'])\nplt.show()","2876d176":"df_Leads['Tags'] = df_Leads['Tags'].replace(np.nan, 'Will revert after reading the email')","8371b6a8":"# lets see the occupation coloumn.\ndf_Leads['What is your current occupation'].describe()","d10723af":"plt.figure(figsize=(16, 5))\nax1 = sns.countplot(df_Leads['What is your current occupation'])\nplt.show()","94d37388":"df_Leads['What is your current occupation'] = df_Leads['What is your current occupation'].replace(np.nan, 'Unemployed')","a3b1f939":"plt.figure(figsize=(16, 5))\nplt.xticks(rotation=45,fontsize=12,horizontalalignment='right')\nax1 = sns.countplot(df_Leads['Country'])\nplt.show()","c84c09bb":"df_Leads['Country'].describe()","302a59a5":"df_Leads['Country'] = df_Leads['Country'].replace(np.nan, 'India')","bfa5fe7c":"df_Leads['What matters most to you in choosing a course'].describe()","ae0c5a31":"plt.figure(figsize=(16, 5))\nplt.xticks(rotation=45,fontsize=12,horizontalalignment='right')\nax1 = sns.countplot(df_Leads['What matters most to you in choosing a course'])\nplt.show()","985b6703":"df_Leads['What matters most to you in choosing a course'] = df_Leads['What matters most to you in choosing a course'].replace(np.nan,'Better Career Prospects')","f269638e":"df_Leads.dropna(inplace = True)","77cd2fcd":"round(100*(df_Leads.isnull().sum()\/len(df_Leads.index)), 2)","60f3642e":"df_Leads['What matters most to you in choosing a course'].describe()","112bd617":"df_Leads.Search.describe()","743b83ed":"df_Leads.Magazine.describe()","92fe84c1":"df_Leads['Newspaper Article'].describe()","19600ea8":"df_Leads['X Education Forums'].describe()","bb8a4c17":"df_Leads['Newspaper'].describe()","83c89748":"df_Leads['Digital Advertisement'].describe()","9d3d7a87":"df_Leads['Through Recommendations'].describe()","022eda8e":"df_Leads['Receive More Updates About Our Courses'].describe()","1fdfe6c4":"df_Leads['Update me on Supply Chain Content'].describe()","8c52917b":"df_Leads['Get updates on DM Content'].describe()","7a8a8d08":"df_Leads['I agree to pay the amount through cheque'].describe()","c46050b0":"df_Leads['A free copy of Mastering The Interview'].describe()","b8a4c431":"Converted = round((sum(df_Leads['Converted'])\/len(df_Leads['Converted'].index))*100,1)\nConverted","6c9ee927":"sns.boxplot(df_Leads['TotalVisits'])","f375e2ac":"percentiles = df_Leads['TotalVisits'].quantile([0.05,0.95]).values\ndf_Leads['TotalVisits'][df_Leads['TotalVisits'] <= percentiles[0]] = percentiles[0]\ndf_Leads['TotalVisits'][df_Leads['TotalVisits'] >= percentiles[1]] = percentiles[1]\n\nsns.boxplot(y = 'TotalVisits', x = df_Leads.Converted , data = df_Leads)","19b7d7f1":"sns.boxplot(df_Leads['Total Time Spent on Website'])","144ce965":"sns.boxplot(y = 'Total Time Spent on Website', x = df_Leads.Converted, data = df_Leads)","6823a465":"sns.boxplot(df_Leads['Page Views Per Visit'])","559f4cc0":"percentiles = df_Leads['Page Views Per Visit'].quantile([0.05,0.95]).values\ndf_Leads['Page Views Per Visit'][df_Leads['Page Views Per Visit'] <= percentiles[0]] = percentiles[0]\ndf_Leads['Page Views Per Visit'][df_Leads['Page Views Per Visit'] >= percentiles[1]] = percentiles[1]\n\nsns.boxplot(y = 'Page Views Per Visit', x = df_Leads.Converted, data = df_Leads)","a252837b":"plt.figure(figsize=(8,5))\nplt.xticks(rotation=45,fontsize=12,horizontalalignment='right')\nsns.countplot(df_Leads['Lead Origin'], hue=df_Leads.Converted)\nplt.show()","18e26d3e":"fig, axs = plt.subplots(1,2,figsize = (15,7))\nsns.countplot(x = \"Do Not Email\", hue = df_Leads.Converted , data = df_Leads, ax = axs[0])\nsns.countplot(x = \"Do Not Call\", hue = df_Leads.Converted, data = df_Leads, ax = axs[1])","a7ad2086":"plt.figure(figsize=(8,5))\nplt.xticks(rotation=45,fontsize=12,horizontalalignment='right')\nsns.countplot(df_Leads['Lead Source'], hue=df_Leads.Converted)\nplt.show()","535794e7":"# correcting the spelling of google\ndf_Leads['Lead Source'] = df_Leads['Lead Source'].replace(['google'], 'Google')","9123a2b3":"df_Leads['Lead Source'] = df_Leads['Lead Source'].replace(['Click2call', 'Live Chat', 'NC_EDM', 'Pay per Click Ads', 'Press_Release',\n  'Social Media', 'WeLearn', 'bing', 'blog', 'testone', 'welearnblog_Home', 'youtubechannel'], 'Others')","529b4dcd":"plt.figure(figsize=(8,5))\nplt.xticks(rotation=45,fontsize=12,horizontalalignment='right')\nsns.countplot(x = \"Lead Source\", hue = df_Leads.Converted , data = df_Leads)\nplt.show()","3e426722":"plt.figure(figsize=(16,5))\nplt.xticks(rotation=45,fontsize=12,horizontalalignment='right')\nsns.countplot(x = \"Last Activity\", hue = df_Leads.Converted, data = df_Leads)\nplt.show()","70efe8df":"df_Leads['Last Activity'] = df_Leads['Last Activity'].replace(['Had a Phone Conversation', 'View in browser link Clicked', \n                                                         'Visited Booth in Tradeshow', 'Approached upfront',\n                                                         'Resubscribed to emails','Email Received', 'Email Marked Spam'], \n                                                         'Other_Activity')","a5e39c7f":"plt.figure(figsize=(16,5))\nplt.xticks(rotation=45,fontsize=12,horizontalalignment='right')\nsns.countplot(x = \"Last Activity\", hue = df_Leads.Converted, data = df_Leads)\nplt.show()","ac373fcb":"plt.figure(figsize=(16,5))\nplt.xticks(rotation=45,fontsize=12,horizontalalignment='right')\nsns.countplot(x = 'Specialization', hue = df_Leads.Converted, data = df_Leads)\nplt.show()","cccb55da":"df_Leads['Specialization'] = df_Leads['Specialization'].replace(['Others'], 'Other_Specialization')","1c2b3911":"plt.figure(figsize=(16,5))\nplt.xticks(rotation=45,fontsize=12,horizontalalignment='right')\nsns.countplot(x = 'Specialization', hue = df_Leads.Converted, data = df_Leads)\nplt.show()","7b47013a":"df_Leads['What is your current occupation'] = df_Leads['What is your current occupation'].replace(['Other'], \n                                                                                                  'Other_Occupation')","27cf05b4":"plt.figure(figsize=(16,5))\nplt.xticks(rotation=45,fontsize=12,horizontalalignment='right')\nsns.countplot(x = 'What is your current occupation', hue = df_Leads.Converted, data = df_Leads)\nplt.show()","d28d8087":"plt.figure(figsize=(16,5))\nplt.xticks(rotation=45,fontsize=12,horizontalalignment='right')\nsns.countplot(x = 'Tags', hue = df_Leads.Converted, data = df_Leads)\nplt.show()","a3f270c0":"df_Leads['Tags'] = df_Leads['Tags'].replace(['In confusion whether part time or DLP', 'in touch with EINS','Diploma holder (Not Eligible)',\n                                     'Approached upfront','Graduation in progress','number not provided', 'opp hangup','Still Thinking',\n                                    'Lost to Others','Shall take in the next coming month','Lateral student','Interested in Next batch',\n                                    'Recognition issue (DEC approval)','Want to take admission but has financial problems',\n                                    'University not recognized'], 'Other_Tags')","49f7081a":"plt.figure(figsize=(16,5))\nplt.xticks(rotation=45,fontsize=12,horizontalalignment='right')\nsns.countplot(x = 'Tags', hue = df_Leads.Converted, data = df_Leads)\nplt.show()","9df64211":"plt.figure(figsize=(16,5))\nplt.xticks(rotation=45,fontsize=12,horizontalalignment='right')\nsns.countplot(x = 'Lead Quality', hue = df_Leads.Converted, data = df_Leads)\nplt.show()","3410f43d":"plt.figure(figsize=(16,5))\nplt.xticks(rotation=45,fontsize=12,horizontalalignment='right')\nsns.countplot(x = 'City', hue = df_Leads.Converted, data = df_Leads)\nplt.show()","8277aacc":"plt.figure(figsize=(16,5))\nplt.xticks(rotation=45,fontsize=12,horizontalalignment='right')\nsns.countplot(x = 'Last Notable Activity', hue = df_Leads.Converted, data = df_Leads)\nplt.show()","22dbccfe":"df_Leads = df_Leads.drop(['Lead Number','What matters most to you in choosing a course','Search','Magazine','Newspaper Article','X Education Forums','Newspaper',\n           'Digital Advertisement','Through Recommendations','Receive More Updates About Our Courses','Update me on Supply Chain Content',\n           'Get updates on DM Content','I agree to pay the amount through cheque','A free copy of Mastering The Interview','Country'],axis=1)","e1334d4a":"df_Leads.shape","452f5804":"df_Leads.head()","a27ef127":"# List of binary variables to map\nvarlist =  ['Do Not Email', 'Do Not Call']\n\n# standardize values by converting all to lower case\ndf_Leads[varlist] = df_Leads[varlist].applymap(lambda s : s.lower() if type(s) == str else s)\n\n# Defining the map function\ndef binary_map(x):\n    return x.map({'yes': 1, \"no\": 0})\n\n# Applying the function to the housing list\ndf_Leads[varlist] = df_Leads[varlist].apply(binary_map)","6100afd3":"dummy = pd.get_dummies(df_Leads[['Lead Origin', 'Lead Source', 'Last Activity', 'Specialization','What is your current occupation',\n                              'Tags','Lead Quality','City','Last Notable Activity']], drop_first=True)\ndummy.head()","c45118b4":"df_Leads = pd.concat([df_Leads, dummy], axis=1)\ndf_Leads.head()","e2b8e27c":"df_Leads = df_Leads.drop(['Lead Origin', 'Lead Source', 'Last Activity', 'Specialization',\n                          'What is your current occupation','Tags','Lead Quality','City',\n                          'Last Notable Activity'], axis = 1)","5124cbeb":"df_Leads.shape","953e54a5":"df_Leads.head()","31696acc":"X = df_Leads.drop(['Prospect ID','Converted'], axis=1)\nX.head()","55a0cd24":"y = df_Leads['Converted']\ny.head()","9a556c1e":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, test_size=0.3, random_state=100)","80260b07":"# instantiating the standard scaler\nscaler = StandardScaler()\n\nnum_cols = X_train[['TotalVisits','Total Time Spent on Website','Page Views Per Visit']]\n\n# Scaling the numerical columns..\nX_train[['TotalVisits','Total Time Spent on Website','Page Views Per Visit']] = scaler.fit_transform(num_cols)\n\nX_train.head()","68241d12":"logm1 = sm.GLM(y_train,(sm.add_constant(X_train)), family = sm.families.Binomial())\nlogm1.fit().summary()","9d479963":"logreg = LogisticRegression()\nrfe = RFE(logreg, 15)\nrfe = rfe.fit(X_train, y_train)","9359ee26":"col = X_train.columns[rfe.support_]\ncol","4d679d8f":"X_train.columns[~rfe.support_]","96c76bd4":"X_train_sm = sm.add_constant(X_train[col])\nlogm2 = sm.GLM(y_train,X_train_sm, family = sm.families.Binomial())\nres = logm2.fit()\nres.summary()","971db337":"col1 = col.drop('Tags_invalid number',1)","299f6a65":"X_train_sm = sm.add_constant(X_train[col1])\nlogm2 = sm.GLM(y_train,X_train_sm, family = sm.families.Binomial())\nres = logm2.fit()\nres.summary()","e1858f6e":"col2 = col1.drop('Tags_wrong number given',1)","6c43b8a4":"X_train_sm = sm.add_constant(X_train[col2])\nlogm2 = sm.GLM(y_train,X_train_sm, family = sm.families.Binomial())\nres = logm2.fit()\nres.summary()","a5bc81e1":"y_train_pred = res.predict(X_train_sm)\ny_train_pred.head()","718817fa":"y_train_pred = y_train_pred.values.reshape(-1)\ny_train_pred[:15]","f9bdeeb0":"y_train_pred_final = pd.DataFrame({'Converted':y_train.values, 'Converted_prob':y_train_pred})\ny_train_pred_final['Prospect ID'] = y_train.index\ny_train_pred_final.head()","e143f627":"y_train_pred_final['predicted'] = y_train_pred_final['Converted_prob'].map(lambda x: 1 if x > 0.5 else 0)\ny_train_pred_final.head()","1ed3ec49":"confusion_1 = metrics.confusion_matrix(y_train_pred_final['Converted'], y_train_pred_final['predicted'] )\nprint(confusion_1)","d39016bf":"print(metrics.accuracy_score(y_train_pred_final['Converted'], y_train_pred_final['predicted']))","6de019da":"vif = pd.DataFrame()\nvif['Features'] = X_train[col2].columns\nvif['VIF'] = [variance_inflation_factor(X_train[col].values, i) for i in range(X_train[col2].shape[1])]\nvif['VIF'] = round(vif['VIF'], 2)\nvif = vif.sort_values(by = \"VIF\", ascending = False)\nvif","6349753d":"TP = confusion_1[1,1] # true positive \nTN = confusion_1[0,0] # true negatives\nFP = confusion_1[0,1] # false positives\nFN = confusion_1[1,0] # false negatives","6253bacc":"print(TP)\nprint(TN)\nprint(FP)\nprint(FN)","8ccbcd9d":"TP \/ float(TP+FN)","2c4bb7e4":"TN \/ float(TN+FP)","1572dab6":"print(FP\/ float(TN+FP))","2c10cf9a":"print(TP \/ float(TP+FP))","5f14dfff":"print (TN \/ float(TN+ FN))","4227a429":"def draw_roc( actual, probs ):\n    fpr, tpr, thresholds = metrics.roc_curve( actual, probs,\n                                              drop_intermediate = False )\n    auc_score = metrics.roc_auc_score( actual, probs )\n    plt.figure(figsize=(5, 5))\n    plt.plot( fpr, tpr, label='ROC curve (area = %0.2f)' % auc_score )\n    plt.plot([0, 1], [0, 1], 'k--')\n    plt.xlim([0.0, 1.0])\n    plt.ylim([0.0, 1.05])\n    plt.xlabel('False Positive Rate or [1 - Specificity]')\n    plt.ylabel('True Positive Rate \/ Sensitivity')\n    plt.title('Receiver operating characteristic Curve')\n    plt.legend(loc=\"lower right\")\n    plt.show()\n\n    return None","79468a40":"fpr, tpr, thresholds = metrics.roc_curve( y_train_pred_final['Converted'], y_train_pred_final['Converted_prob'], drop_intermediate = False )","efaa3045":"draw_roc(y_train_pred_final['Converted'], y_train_pred_final['Converted_prob'])","e11962b9":"prob_numbers = [float(x)\/10 for x in range(10)]\nfor i in prob_numbers:\n    y_train_pred_final[i]= y_train_pred_final.Converted_prob.map(lambda m: 1 if m > i else 0)\ny_train_pred_final.head()","17f770ad":"prob_cutoff_df = pd.DataFrame( columns = ['prob','accuracy','sensi','speci'])\n\nnum = [float(x)\/10 for x in range(10)]\nfor i in num:\n    cm1 = metrics.confusion_matrix(y_train_pred_final['Converted'], y_train_pred_final[i] )\n    \n    # accuracy.\n    total1=sum(sum(cm1))\n    accuracy = (cm1[0,0]+cm1[1,1])\/total1\n    \n    # sensitivity and specificity.\n    speci = cm1[0,0]\/(cm1[0,0]+cm1[0,1])\n    sensi = cm1[1,1]\/(cm1[1,0]+cm1[1,1])\n    prob_cutoff_df.loc[i] =[ i ,accuracy,sensi,speci]\n    \nprint(prob_cutoff_df)","1ce651f7":"prob_cutoff_df.plot.line(x='prob', y=['accuracy','sensi','speci'])\nplt.show()","78dc56d5":"y_train_pred_final['final_predicted'] = y_train_pred_final.Converted_prob.map( lambda c: 1 if c > 0.2 else 0)\ny_train_pred_final.head()","5719beea":"y_train_pred_final['Lead_Score'] = y_train_pred_final['Converted_prob'].map( lambda z: round(z*100))\ny_train_pred_final.head()","2cee9046":"metrics.accuracy_score(y_train_pred_final.Converted, y_train_pred_final.final_predicted)","8d930542":"confusion_2 = metrics.confusion_matrix(y_train_pred_final.Converted, y_train_pred_final.final_predicted )\nconfusion_2","a42329a9":"TP = confusion_2[1,1] # true positive \nTN = confusion_2[0,0] # true negatives\nFP = confusion_2[0,1] # false positives\nFN = confusion_2[1,0] # false negatives","ce463d87":"TP \/ float(TP+FN)","96c45e1c":"TN \/ float(TN+FP)","a031ae96":"print(FP\/ float(TN+FP))","633420a8":"print (TP \/ float(TP+FP))","357ca67c":"print (TN \/ float(TN+ FN))","52dccbc8":"precision_score(y_train_pred_final['Converted'] , y_train_pred_final['predicted'])","6ef9846e":"recall_score(y_train_pred_final['Converted'], y_train_pred_final['predicted'])","3315616c":"p, r, thresholds = precision_recall_curve(y_train_pred_final['Converted'], y_train_pred_final['Converted_prob'])\nplt.plot(thresholds, p[:-1], \"g-\")\nplt.plot(thresholds, r[:-1], \"r-\")\nplt.show()","6e2bae0a":"num_cols = X_test[['TotalVisits','Total Time Spent on Website','Page Views Per Visit']]\nX_test[['TotalVisits','Total Time Spent on Website','Page Views Per Visit']] = scaler.fit_transform(num_cols)\nX_test.head()","04a78a7d":"X_test = X_test[col2]\nX_test.head()","2058e21c":"X_test_sm = sm.add_constant(X_test)","53339e22":"y_test_pred = res.predict(X_test_sm)\ny_test_pred[:15]","efb011e7":"# Converting y_pred to a dataframe from array.\ny_pred_1 = pd.DataFrame(y_test_pred)\ny_pred_1.head()","1dc1fa39":"# Converting y_test to dataframe\ny_test_df = pd.DataFrame(y_test)\n\n# Putting CustID to index\ny_test_df['Prospect ID'] = y_test_df.index\n\n# Removing index for both dataframes to append them side by side \ny_pred_1.reset_index(drop=True, inplace=True)\ny_test_df.reset_index(drop=True, inplace=True)\n\n# Appending y_test_df and y_pred_1\ny_pred_final = pd.concat([y_test_df, y_pred_1],axis=1)\ny_pred_final.head()","e353947d":"# Renaming the column \ny_pred_final= y_pred_final.rename(columns={ 0 : 'Converted_prob'})\n\n# Rearranging the columns\ny_pred_final = y_pred_final[['Prospect ID','Converted','Converted_prob']]\ny_pred_final.head()","43359348":"# adding our prediction for threshold value of 0.2\ny_pred_final['final_predicted'] = y_pred_final['Converted_prob'].map(lambda x: 1 if x > 0.2 else 0)\ny_pred_final.head()","8da1d9d4":"metrics.accuracy_score(y_pred_final['Converted'], y_pred_final['final_predicted'])","17cf5aa0":"confusion_3 = metrics.confusion_matrix(y_pred_final.Converted, y_pred_final.final_predicted )\nconfusion_3","f2705d92":"TP = confusion_3[1,1] # true positive \nTN = confusion_3[0,0] # true negatives\nFP = confusion_3[0,1] # false positives\nFN = confusion_3[1,0] # false negatives","b1dab041":"TP \/ float(TP+FN)","cbbf4ef1":"TN \/ float(TN+FP)","b7cd15eb":"precision_score(y_pred_final['Converted'] , y_pred_final['final_predicted'])","685bd75a":"recall_score(y_pred_final['Converted'], y_pred_final['final_predicted'])","91c124e4":"#### Visualize data for Total Visits ","c52014e9":"### Model Building","9c5f678f":"Lets recheck the misssing values again","1db05f60":"#### Sensitivity","cd1a00f5":"#### Inference\n1. Focus should be more on the Specialization with high conversion rate.","facf5b3c":"The missing values will be imputed by 'Will revert after reading the email' as that seems to be the most frequent value","3a4f903a":"- Columns like 'Click2call', 'Live Chat', 'NC_EDM', 'Pay per Click Ads', 'Press_Release','Social Media', 'WeLearn', 'bing', 'blog', 'testone', 'welearnblog_Home', 'youtubechannel' have very less lead numbers. Grouping them together as <i>'Others'<\/i>.","2fdeacb5":"#### Explore data for column Search","a2a64798":"#### False Postive Rate - predicting churn(converted) when customer have not churned(converted)","41fb4599":"#### Scaling Test Set","8db07f8e":"#### Visualize the data for columns - Do not Email and Do not Call with respect to the Target variable","da623979":"There are a number of outliers in this column.We will treat the outliers to 95% value for analysis.","ca0a3c59":"Inference\n- Most entries are 'No' and no specific inference can be drawn with the data in this column","0d42a8d0":"#### Overall accuracy.","044f3051":"An ROC curve demonstrates several things:\n\n- ROC curve shows us the different values of sensitivity and specificity for different threshold values so that we can choose the best one for our model.\n- It shows the tradeoff between sensitivity and specificity (any increase in sensitivity will be accompanied by a decrease in specificity).\n- The closer the curve follows the left-hand border and then the top border of the ROC space, the more accurate the test.\n- The closer the curve comes to the 45-degree diagonal of the ROC space, the less accurate the test.","23555bd8":"Inference:\n- <i>'google'<\/i> is redundant as seen","64986ff5":"#### Explore data for column Magazine","8f05d4a4":"## Metrics Beyond Accuracy.","39e92be8":"#### Visualize data for column Last Notable Activity","d5c98ca0":"#  Lead Score Assignment","4cad0f39":"#### Visualize the data for column Last Activity","24e4b640":"#### Visualize data for column 'Lead Source' with respect to Target Variable 'Converted'","53fdcbfa":"#### Visualize the data for column Country","ac5516b6":"Inference\n- We see that people who have not opted for these services have a low conversion rate ","8e6feb25":"__Based on the univariate analysis we have seen that many columns are not adding any information to the model, heance we drop them from further analysis__","824610e1":"Inference:\n- Occupation indicates if the customer is student,employed or unemployed. Since we have 26% nulls, we can assume here that nulls in the Occupation may be imputed by <i>'Unemployed'<\/i>\n- Unemployed leads are the most in terms of Absolute numbers.\n- Working Professionals  have high chances of joining the course.","d0355648":"#### Explore data for column I agree to pay the amount through cheque","4de3bcac":"As seen from above - it has 9240 records and 37 Variables.","5049eeb9":"#### Concatenating dataframe","2b06059e":"#### Explore data for column Newspaper Article","3f421209":"#### Negative predictive value","178b7b41":"#### Visualise the data for column as they seem to have too many nulls(46% as seen from above) \n- Asymmetrique Activity Index  \n- Asymmetrique Profile Index \n- Asymmetrique Activity Score\n- Asymmetrique Profile Score  ","ad50b09e":"Inference\n- Most entries are 'Better Career Prospects' however no specific Inference can be drawn from the data in this column","1eaa2b3b":"Inference\n- Median for converted and not converted leads are the same.\n\nNothng conclusive can be said on the basis of Total Visits.","df7531aa":"Seems a lot of columns with nulls and missing values We should handle Missing Values.Dropping the columns which have more than 70 percent missing values.","161cff84":"### Rebuilding the model","b2b03853":"#### Visualize data for column Lead Quality","826cbdcb":"Inference\n- Lead Add Form has a very high conversion rate but count of leads are not very high.\n- API and Landing Page Submission bring higher number of leads as well as conversion\n- Lead Import and Quick Add Form get very few leads\n\n\n__To improve overall lead conversion rate, we need to focus more on improving lead converion of API and Landing Page Submission origin and generate more leads from Lead Add Form.__","6981cbd1":"## Data Cleaning","3ecaec58":"#### Dropping original variables","ac3ec6dd":"#### Converting some binary variables (Yes\/No) to (1\/0) 1: Yes \/ 0:No","f25dfe8e":"### Rebuilding the model.","2b1f3a42":"# Problem Statement\n\nAn education company named X Education sells online courses to industry professionals. On any given day, many professionals who are interested in the courses land on their website and browse for courses. \n\n \n\nThe company markets its courses on several websites and search engines like Google. Once these people land on the website, they might browse the courses or fill up a form for the course or watch some videos. When these people fill up a form providing their email address or phone number, they are classified to be a lead. Moreover, the company also gets leads through past referrals. Once these leads are acquired, employees from the sales team start making calls, writing emails, etc. Through this process, some of the leads get converted while most do not. The typical lead conversion rate at X education is around 30%. \n\n \n\nNow, although X Education gets a lot of leads, its lead conversion rate is very poor. For example, if, say, they acquire 100 leads in a day, only about 30 of them are converted. To make this process more efficient, the company wishes to identify the most potential leads, also known as \u2018Hot Leads\u2019. If they successfully identify this set of leads, the lead conversion rate should go up as the sales team will now be focusing more on communicating with the potential leads rather than making calls to everyone. A typical lead conversion process can be represented using the following funnel:\n![image.png](attachment:image.png)\nAs you can see, there are a lot of leads generated in the initial stage (top) but only a few of them come out as paying customers from the bottom. In the middle stage, you need to nurture the potential leads well (i.e. educating the leads about the product, constantly communicating etc. ) in order to get a higher lead conversion.\n\nX Education has appointed you to help them select the most promising leads, i.e. the leads that are most likely to convert into paying customers. The company requires you to build a model wherein you need to assign a lead score to each of the leads such that the customers with higher lead score have a higher conversion chance and the customers with lower lead score have a lower conversion chance. The CEO, in particular, has given a ballpark of the target lead conversion rate to be around 80%.","c9f7aef3":"#### Recheck Overall Accuracy.","568b4dd5":"Inference\n- 'Modified' has most leads  but with very less conversion rate \n- SMS sent has good conversion rate .Focus should be on the number of leads in SMS sent","e5e1058f":"#### Check the dataset information","7bfd5960":"#### Precision and Recall","c515432a":"Inference\n- Most entries are 'No' and no specific inference can be drawn with the data in this column","2f2a06e8":"Inference\n- Most entries are 'No' however no inference can be drawn from the data in this column","9498fe33":"Inference\n- As seens from above Most entries are 'No' and no specific inference can be drawn with the data in this column.","cbb0a602":"#### Explore data for column - What matters most to you in choosing a course","b97ac78f":"#### Overall Accuracy","ca1e9ebf":"Inference\n- Might be bracket has a good conversion rate.Focus should be on the lead numbers of 'Might be'.  \n- Most of the people are in the 'Not Sure' bracket","4fefa98e":"#### Lets check columns RFE has not selected","c3bbd763":"#### Trade off - Precision and Recall","d46171dc":" There is too much variation in these parameters so its not reliable to impute any value in it. \n 45% null values means we need to drop these columns.","869c9de2":"#### Updating target variables to y","3bd5b03a":"#### Check missing values in the dataset","465d250f":"#### Visualize data for column Specialization","c2b3ffa9":"#### Visualize data for column Total time spent on website","e31da90e":"#### Specificity","b80b876c":"#### Lets check columns RFE selected","6d50998c":"#### For various probability cut off - plotting accuracy specificity and sensitivity curve","6f70d4f2":"#### Explore data for column - Receive More Updates About Our Courses","91aa71ad":"#### Explore data for column Newspaper","b099144d":"### Splitting the data into train and test","c188a826":"#### Predicting the y_train values","4e7024af":"Inference\n- As seens from above Most entries are 'No' and no Inference can be drawn with this data.","2be1cd5c":"#### Visualize data for column Occupation","27f74246":"Inference\n- Most entries are 'No' however no specific inference can be drawn from the data in this column","c7dbc0b3":"### Optimal cutoff point\nOptimal cutoff probability is the probability where we get balanced sensitivity and specificity","84560074":"From above it now is clear that that all the features are good for making predictions as VIF is less than 5(VIF <5)\nThe VIFs are within an acceptable range. So we go ahead and make our predictions using this model.","1b1a3274":"#### Positive predictive value ","5d4c9196":"### Loading, Understanding Data","696125e9":"# Lead Scoring - Logistic Regression ","8ba69765":"# Data Preparation","04575a5f":"Inference:\n- It maybe the case that lead has not entered any specialization if his\/her option is not availabe on the list,may not have any specialization or is a student.Hence we can make a category \"Others\" for missing values. \n- We can also see that specialization with Management in them have higher number of leads as well as leads converted. So this is definitely a significant variable and should not be dropped.","87d28806":"Inference\n- As seen from above most entries are 'No' however no specific inference can be drawn from the data in this column","f38c8466":"#### Precision","31de2a60":"Inference:\n- From above we see that the tag 'will revert after reading the email' has the highest conversion rate and a large number of leads too. \n- 'Closed by Horizon' has a good amount of conversion rate amopngst all others we should focus on the lead numbers  ","e42b2708":"#### For various probability cutoffs - calculate accuracy Specificity and Sensitivity.","d1c8bb43":"#### Checking VIFs","9d39b6ef":"Inference\n- Conversion Rate of reference leads and leads through welingak website is high. \n- Google and Direct traffic generates maximum number of leads.\n \n\n__To improve overall lead conversion rate, focus should be on improving lead converion of olark chat, organic search, direct traffic, and google  leads and generate more leads from reference and welingak website.__","dd6a9bc2":"#### Creating the First training model","1a4d3480":"#### Specificity","3ed84e77":"#### Specificity","977ab0cd":"There are select values for many columns in the dataset.This is because customer did not select the value from the list for that column(may be that was not a mandatory input), hence it shows <i>Select<\/i>. <i>Select<\/i> values are as good as NULLs, hence replacing them with NULLs","ff7243c6":"####  Visualize data for column 'Lead Origin' with respect to Target Variable 'Converted'","9d5d248f":"#### Confusion Matrix (Threshold = 0.2)","be041a2d":"### Making predictions on the Test set","029aead6":"#### Visualize data for column City","b0fec5ed":"##### Adding Constant","ca72f6f6":"Inference\n- As seen from above Most entries are 'No' and no specific inference can be drawn with the data in this column","66efa9fe":"Lead Quality indicates the quality of lead based on the data and intuition the employee who has been assigned to the lead. Hence it is quite possible that all the 'nulls' mean that the quality of the lead is not surely known or can't be assigned.\nOut of 4767 rows in Lead Quality columns we have 52% nulls. Value for these nulls may be imputed with <i>'Not Sure'<\/i>.","8ca394d3":"#### Check the statistics of the dataset","a4951006":"Inference\n- Working Professionals going for the course have high chances of joining it.\n- Unemployed leads are the most in numbers but has a less conversion rate.\n\nFocus should be on increasing leads on Working Professional and converting more unemployed leads","d5e135b5":"#### Visualize data for column  'What matters most to you in choosing a course'.","3b08da58":"#### Visualize data for column Page views per visit","fa12b4aa":"Inference\n- As seen from above Most entries are 'No' and no specific inference can be drawn with this data.","374f63ba":"#### Visualise the data for column City","a0823d0d":"#### From the curve above, 0.2 is the optimum point to take it as a cutoff probability.","dc8f05e9":"#### Visualize data for column Specialization","f2a6b5c1":"Inference\n- Most entries are 'No' and no specific inference can be drawn with the data in this column","4148298f":"#### Check the dimensions of the dataset","2eb0104d":"#### Sensitivity","cd5b90c1":"### Plotting ROC Curve","228a4a67":"Inference\n- Leads spending more time on the weblise are more likely to be converted. Improvement in website to make it more user helpful and improver user experience and to keep them engaged on the website is recommended","df65060b":"#### Visualize data for column  Tags","a8d5a0c4":"#### Explore data for column X Education Forums","74c018fa":"### Rebuilding the model.","76f86608":"##### Creating new column 'predicted' with 1 if Churn_Prob > 0.5 else 0","cdfa08bb":"#### Explore data for column Through Recommendation","be9831b0":"#### Recall","93982946":"### Scaling Features ","d270301c":"#### Explore data for column  A free copy of Mastering The Interview","bcb813b6":"All the remaining values are under 2% and hence we can drop them","0596a4f8":"# Exploratory Data Analysis","7caed44b":"#### Visualise the data for the column Lead Quality.","09afb476":"#### Explore data for column Digital Advertisement","63cb2705":"Inference\n- Most leads are from Mumbai city but conversion rate is low and should be foucused on.","922031ca":"### Import all the important libraries","0f182696":"Inference :\n- Median for converted and unconverted leads is the same.Nothing can be said specifically for lead conversion from <i>Page Views Per Visit<\/i>","14d0ede9":"#### Explore data for column Get updates on DM Content","55eec37a":"Inference\n- Most entries are 'No' however no specific inference can be drawn from the data in this column","45b604dd":"#### Updating feature variables to X","609c5ede":"#### Dropping Tags_invalid number due to high p-value from the RFE columns","68fd057c":"##### Creating a dataframe with the actual churn flag and the predicted probabilities","845b5d0d":"#### Sensitvity","664a6754":"Grouping data for Tags Column with low values to \"Other_Tags\"","c9e6d718":"Grouping Last Activities to \"Other_Activity\"","6cc9d208":"Inference: \n- Approximately 38 % of customers are getting converted","e97aba9d":"#### Target Variable : <b>Converted<\/b>.Indicates whether a lead has been successfully converted (1) or not (0).","0df6111b":"There are a lot of features as seen from above . We now do Feature Selection using RFE and choose 15 variables.\n#### RFE","f4838154":"#### Dropping Tags_wrong number given from rfe columns due to high p-value.","ed701c97":"Inference\n- Most of the lead have their Email opened as their last activity.\n- SMS Sent has a high Conversion rate for leads as their last activity.","f26b499a":"#### False Postive Rate - predicting churn(converted) when customer have not churned(converted)","fdd26a51":"#### Visualize data for column Occupation","6d2f2bd6":"####  Create dummy variables for categorical variables with multiple levels","a7ecbc84":"#### Positive Predictive Value ","e0265cd7":"There are a number of outliers in this column.We will treat the outliers to 95% value for further analysis.","2c21c7d9":"Inference\n- As seen from above Most entries are 'No' however no specific inference can be drawn from the data in this column","299be169":"Mumbai seems to be most frequent city as approximately 60 percent of the city column has a value \"Mumbai\" in it. ","03327c36":"#### Negative predictive value","9bce5810":"#### Explore data for column Update me on Supply Chain Content","09952f82":"## Univariate Analysis\n","de4cbc02":"India seems to be most freq country. Impute missing values in Country with this value","1877b265":"#### Selecting RFE columns only"}}