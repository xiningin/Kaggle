{"cell_type":{"3a86b97d":"code","90a439aa":"code","c6d1a77a":"code","2c95be8b":"code","f3ecb1d3":"code","4666b28f":"markdown"},"source":{"3a86b97d":"import numpy as np","90a439aa":"def area(a) -> int:\n    r, c = a.shape\n    m = max(r, c)\n    for i in range(m):\n        for j in range(r-m+i+1):\n            for k in range(c-m+i+1):\n                #print(i,j,k)\n                if a[j:j+m-i, k:k+m-i].all():\n                    print(f'The dimension of the subarray is {m-i} with initial index {(j,k)}')\n                    print(a[j:j+m-i, k:k+m-i])\n                    return f'Area is : {(m-i) ** 2 }'      ","c6d1a77a":"myset = np.ones((5,5))\nmyset[1:3,2:4].all()","2c95be8b":"area(myset)","f3ecb1d3":"a = np.array([[1, 0, 0, 0],\n [1, 0, 1, 1],\n [1, 0, 1, 1],\n [0, 1, 0, 0]])\narea(a)","4666b28f":"Good morning! Here's your coding interview problem for today.\n\nThis question was asked by Google.\n\nGiven an N by M matrix consisting only of 1's and 0's, find the largest rectangle containing only 1's and return its area.\n\nFor example, given the following matrix:\n```\n[[1, 0, 0, 0],\n [1, 0, 1, 1],\n [1, 0, 1, 1],\n [0, 1, 0, 0]]\n ```\n\nReturn 4."}}