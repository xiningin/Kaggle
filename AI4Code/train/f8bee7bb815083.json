{"cell_type":{"947b0e3a":"code","a2ee99f8":"code","755c7fd0":"markdown"},"source":{"947b0e3a":"def valid(s):\n    alpha = 'abcdefghijklmnopqrstuvwxyz'\n    sep = ',:;.?!'\n    terminal = '.?!'\n    if '' in s.split(' '):\n        return False\n    elif s[-1] not in terminal or s[-2] == ' ':\n        return False\n    else:\n        if s[0] in alpha.upper() and s[1] == ' ':\n            l = s.split()\n            n = len(l)\n            i = 1\n            while i < n and set(l[i]).issubset(set(alpha).union(set(sep))):\n                i += 1\n            if i == len(l):\n                return s\n            else:\n                return False\n        elif s[0] in alpha.upper() and s[1] in alpha:\n            l = s[1:].split()\n            n = len(l)\n            i = 0\n            while i < n and set(l[i]).issubset(set(alpha).union(set(sep))):\n                i += 1\n            if i == len(l):\n                return s\n            else:\n                return False\n        else:\n            return False\n            \n\n            ","a2ee99f8":"s = 'Hi, you there!'\nvalid(s)","755c7fd0":"Good morning! Here's your coding interview problem for today.\n\nThis problem was asked by Nest.\n\nCreate a basic sentence checker that takes in a stream of characters and determines whether they form valid sentences. If a sentence is valid, the program should print it out.\n\nWe can consider a sentence valid if it conforms to the following rules:\n\n    The sentence must start with a capital letter, followed by a lowercase letter or a space.\n    All other characters must be lowercase letters, separators (,,;,:) or terminal marks (.,?,!,\u203d).\n    There must be a single space between each word.\n    The sentence must end with a terminal mark immediately following a word.\n\n"}}