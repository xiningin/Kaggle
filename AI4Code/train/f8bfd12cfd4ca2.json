{"cell_type":{"ce40db30":"code","2933cba4":"code","a7db545d":"code","e7d85b02":"code","19cf0766":"code","8d693904":"code","cae7f098":"code","1634aaa3":"code","83ab44d1":"code","00a7b589":"code","2da31b2b":"code","32612edf":"code","ff0e5967":"code","1b63502c":"code","43d34ba3":"code","b467a856":"code","2ea1f542":"code","0f3bf349":"code","2d61593e":"code","2d8967f1":"code","f54ecd27":"code","69b67ef8":"code","99339764":"code","935c5d77":"code","b00dbb04":"code","c0ba3a57":"code","154f31e5":"code","e4d3d46c":"code","77ce1605":"code","39e172fa":"code","c9684327":"code","92460ebf":"code","19e74637":"code","252a095d":"code","4f7857da":"code","79285591":"code","4aac6f7a":"code","fd07d940":"code","7482fedb":"code","d5e4953b":"code","d02c9486":"code","a7aa7706":"code","eeec8534":"code","d6b787a7":"code","c26f51ff":"code","635c2c04":"code","0c7540ab":"code","71c7e745":"markdown","3aea8e03":"markdown","cd09748a":"markdown","07200606":"markdown","0c776a84":"markdown","42ed76a3":"markdown","b4ae4e6b":"markdown","44de1627":"markdown","5fd74bb7":"markdown","2c873cbb":"markdown","2d8a26eb":"markdown","856a3a20":"markdown","7ad46d7c":"markdown","3ce74cb6":"markdown","833062a2":"markdown","9f35942c":"markdown","d6f9912b":"markdown","f14c6574":"markdown","aa8ba9fd":"markdown","d32b0fd4":"markdown","82d6af04":"markdown","544dc4f0":"markdown","42ef3244":"markdown","44efe8df":"markdown","f26798d4":"markdown","2239a58e":"markdown"},"source":{"ce40db30":"# Load packages\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom mpl_toolkits.basemap import Basemap\nimport folium\nimport folium.plugins as plugins\n\nimport warnings\nwarnings.filterwarnings('ignore')\npd.options.display.max_rows =10\n%matplotlib inline","2933cba4":"# customized query helper function in Kaggle\nimport bq_helper\n\n# Helper object\nopenaq = bq_helper.BigQueryHelper(active_project='bigquery-public-data',\n                                 dataset_name='openaq')\n# List of table\nopenaq.list_tables()","a7db545d":"# Table Schema\n\nopenaq.table_schema('global_air_quality')","e7d85b02":"openaq.head('global_air_quality')","19cf0766":"query = \"\"\" SELECT value,country, pollutant, \nextract(year from timestamp) as year,\nextract(month from timestamp) as month,\nextract(day from timestamp) as day,\ndate(timestamp) as date, unit\nfrom `bigquery-public-data.openaq.global_air_quality`\n\"\"\"\n\ndf1 = openaq.query_to_pandas(query)\ndf1","8d693904":"df1['unit'].value_counts()","cae7f098":"query = \"\"\"SELECT  unit,COUNT(unit) as `count`\n        FROM `bigquery-public-data.openaq.global_air_quality`\n        GROUP BY unit\n        \"\"\"\nunit = openaq.query_to_pandas(query)\n\nplt.style.use('bmh')\nf, ax1 = plt.subplots(figsize = (14,5))\n\nax1.pie(x=unit['count'],labels=unit['unit'],shadow=True,autopct='%1.1f%%',explode=[0,0.1],\\\n       startangle=90,)\nax1.set_title('Distribution of measurement unit')\nexplode = np.arange(0,0.1)","1634aaa3":"df1['year'].value_counts()","83ab44d1":"## cols: country, value, year\n## year < 2020 \n## value > 0\n## unit = '\u00b5g\/m\u00b3'\n\nquery = \"\"\" select country, round(avg(value)) as avg_value\n            from `bigquery-public-data.openaq.global_air_quality`\n            where unit ='\u00b5g\/m\u00b3' and extract(year from timestamp) < 2020 \n            group by country\n            having avg_value > 0 \n            order by avg_value desc\"\"\"\n\nbefore = openaq.query_to_pandas(query)\nbefore.head(10)","00a7b589":"# stats\nbefore['avg_value'].describe()","2da31b2b":"plt.style.use('bmh')\nplt.figure(figsize = (20,10))\nsns.barplot(before['country'], before['avg_value'], palette = 'magma')\nplt.xticks(rotation  = 90)\nplt.title('Average pollution of air by countries in unit $ug\/m^3$.')\nplt.ylabel('Average AQI in $ug\/m^3$')","32612edf":"query = \"\"\" \nselect city, value,extract( year from timestamp) as year, extract(month from timestamp) as month \nfrom `bigquery-public-data.openaq.global_air_quality`\nwhere country = 'CL'and extract( year from timestamp) = 2019\n\"\"\"\n\ncl = openaq.query_to_pandas(query)\nprint(cl)\nprint(cl.describe())","ff0e5967":"query = \"\"\" select country, round(avg(value)) as avg_value\n            from `bigquery-public-data.openaq.global_air_quality`\n            where unit ='\u00b5g\/m\u00b3' and extract(year from timestamp) < 2020\n            and value > 0 AND value < 10000\n            -- value > 100000 to be considered as outliers\n            group by country\n            order by avg_value DESC\"\"\"\n\nbefore = openaq.query_to_pandas(query)\nbefore","1b63502c":"# PLOT\nplt.figure(figsize = (20,10))\nsns.barplot(before['country'], before['avg_value'], palette ='magma')\nplt.xticks(rotation  = 90)\nplt.title('Average pollution of air by countries till 2019.')\nplt.ylabel('Average AQI in $ug\/m^3$')","43d34ba3":"query = \"\"\" \nselect distinct country, extract(year from timestamp) as year,round(avg(value)) as avg_value\nfrom `bigquery-public-data.openaq.global_air_quality`\ngroup by country, year\nhaving year = 2020 and avg_value > 0\norder by avg_value desc\n\"\"\"\n\nin_2020 = openaq.query_to_pandas(query)\nin_2020","b467a856":"\n# PLOT\n#plt.style.use('bmh')\nplt.figure(figsize = (20,10))\nsns.barplot(in_2020['country'], in_2020['avg_value'], palette ='magma')\nplt.xticks(rotation  = 90)\nplt.title('Average pollution of air by countries in 2020.')\nplt.ylabel('Average AQI in $ug\/m^3$')","2ea1f542":"## Trying to combine two different graphs with \n\ncombined = pd.merge(before, in_2020, how = 'inner', on ='country')\ncombined.rename(columns = {'avg_value_x': 'till_2019', 'avg_value_y' : 'in_2020'}, inplace = True)\ncombined.drop('year', axis = 1, inplace =True)\nprint(combined[combined['country'] == 'IN'])\nprint(combined[combined['country'] == 'IT'])\nprint(combined[combined['country'] == 'AT'])\ncombined.sort_values(by = 'country', inplace = True)\n\n\nfig, ax1 = plt.subplots(figsize = (12,10))\ncolor = 'tab:green'\n#barplot\nax1.set_title('Air Quality of different Countries(till_2019: Bar, 2020: Line)', fontsize = 20)\nax1.set_ylabel('AQI till 2019', fontsize =16)\nax1.set_xlabel('Countries', fontsize =16)\nax1 = sns.barplot(x = 'country', y = 'till_2019', data = combined, palette = 'summer')\nax1.tick_params(axis = 'y')\n\n#lineplot\nax2 = ax1.twinx()\ncolor ='tab:red'\nax2.set_ylabel('AQI in 2020', fontsize =16)\nax2 = sns.lineplot(x = 'country', y = 'in_2020', data = combined, color = color)\nax2.tick_params(axis = 'y', color =color)","0f3bf349":"## POLLUTANT IN TOP 5 POLLUTING COUNTRY till 2019\n## used SUBQUERY to make FIG dynamic as the top 5 countries might change due to update of data.\n\nquery = \"\"\" \nselect country, pollutant,round(avg(value)) as avg_value\nfrom `bigquery-public-data.openaq.global_air_quality` \nwhere country in (select country from `bigquery-public-data.openaq.global_air_quality` \n                  where value > 0 and value < 10000 and unit  = '\u00b5g\/m\u00b3'and extract(year from timestamp) < 2020\n                  group by country\n                  order by avg(value) desc \n                  limit 5) and value > 0 and value < 10000 and unit  = '\u00b5g\/m\u00b3'\nand extract(year from timestamp)  < 2020\ngroup by country, pollutant\n\"\"\"\n\ntop = openaq.query_to_pandas(query)\ntop\n","2d61593e":"pivot = top.pivot(index = 'country',columns = 'pollutant', values = 'avg_value')\npivot = pivot.fillna(0)\npivot","2d8967f1":"pivot.plot.bar(stacked = True, color = ['red','green','blue','pink','orange','purple'], figsize = (10,7))\nplt.xticks(rotation = 360)\nplt.ylabel('Average Value of different pollutants till 2019')\nplt.title('Distirbution of Pollutants in Top 5 Countries till 2019')","f54ecd27":"query = \"\"\" select country, pollutant, value\nfrom `bigquery-public-data.openaq.global_air_quality`\nwhere country = 'SG'\"\"\"\n\nsg = openaq.query_to_pandas(query)\nsg","69b67ef8":"## pollutant in 2020\n## used SUBQUERY to make my FIG dynamic as the top 5 countries get changed.\n\nquery = \"\"\" \nselect country, pollutant,round(avg(value)) as avg_value\nfrom `bigquery-public-data.openaq.global_air_quality` \nwhere country in (select country from `bigquery-public-data.openaq.global_air_quality` \n                  where value > 0 and value < 10000 and unit  = '\u00b5g\/m\u00b3'and extract(year from timestamp)  = 2020\n                  group by country\n                  order by avg(value) desc \n                  limit 5) and value > 0 and value < 10000 and unit  = '\u00b5g\/m\u00b3'\n                \nand extract(year from timestamp)  = 2020\ngroup by country, pollutant\n\"\"\"\n\ntop_2020 = openaq.query_to_pandas(query)\n#print(top_2020)\n\n\npivot_2020 = top_2020.pivot(index = 'country',columns = 'pollutant', values = 'avg_value')\npivot_2020 = pivot_2020.fillna(0)\n#print(pivot_2020)\n\npivot_2020.plot.bar(stacked = True, color = ['red','green','blue','pink','orange','purple'], figsize = (10,7))\nplt.xticks(rotation = 360)\nplt.ylabel('Average Value of different pollutants in 2020')\nplt.title('Distirbution of Pollutants in Top 5 Countries in 2020')","99339764":"query = \"\"\" \nselect country, pollutant,round(avg(value)) as avg_value\nfrom `bigquery-public-data.openaq.global_air_quality`\nwhere unit = '\u00b5g\/m\u00b3' and value >0 and value < 10000 and extract(year from timestamp) < 2020\ngroup by country, pollutant\norder by avg_value desc\n\n\"\"\"\n\ncor_before = openaq.query_to_pandas(query)\ncor_before","935c5d77":"# By country\np1_pivot = cor_before.pivot(index = 'country',values='avg_value', columns= 'pollutant')\np1_pivot = p1_pivot.fillna(0)\nplt.figure(figsize=(14,15))\nax = sns.heatmap(p1_pivot, lw=0.01, cmap=sns.color_palette('Reds',500))\nplt.yticks(rotation=30)\nplt.title('Heatmap average AQI by Pollutant');","b00dbb04":"query = \"\"\" \nselect country, pollutant,round(avg(value)) as avg_value\nfrom `bigquery-public-data.openaq.global_air_quality`\nwhere unit = '\u00b5g\/m\u00b3' and value >0 and value < 10000 and extract(year from timestamp) = 2020\ngroup by country, pollutant\norder by avg_value desc\n\n\"\"\"\n\ncor_2020 = openaq.query_to_pandas(query)\ncor_2020","c0ba3a57":"# By country\np2_pivot = cor_2020.pivot(index = 'country',values='avg_value', columns= 'pollutant')\np2_pivot = p2_pivot.fillna(0)\nplt.figure(figsize=(10,15))\nax = sns.heatmap(p2_pivot, lw=1, cmap=sns.color_palette('Reds',500))\nplt.yticks(rotation=20)\nplt.title('Heatmap average AQI by Pollutant');","154f31e5":"query = \"\"\" \nselect extract(month from timestamp) as months, round(avg(value)) as avg_value\nfrom `bigquery-public-data.openaq.global_air_quality`\nwhere unit = '\u00b5g\/m\u00b3' and value > 0 and value < 10000 and extract(year from timestamp) < 2020\ngroup by months\norder by months\n\n\"\"\"\n\n\nmonth =openaq.query_to_pandas(query)\nmonth","e4d3d46c":"plt.figure(figsize = (8,5))\nsns.barplot(month['months'], month['avg_value'], palette = 'hls')\nplt.title('Average value of AQI per month till 2019')","77ce1605":"query = \"\"\" \nselect extract(month from timestamp) as months, round(avg(value)) as avg_value\nfrom `bigquery-public-data.openaq.global_air_quality`\nwhere unit = '\u00b5g\/m\u00b3' and value > 0 and value < 10000 and extract(year from timestamp) = 2020\ngroup by months\norder by months\n\n\"\"\"\n\n\nmonth_2020 =openaq.query_to_pandas(query)\nmonth_2020","39e172fa":"plt.figure(figsize = (8,5))\nsns.barplot(month_2020['months'], month_2020['avg_value'])\nplt.title('Average value of AQI per month in 2020')","c9684327":"## Before 2020\n\nquery = \"\"\" \n\nselect country,city, latitude, longitude, round(avg(value)) as avg_value\nfrom `bigquery-public-data.openaq.global_air_quality`\nwhere unit = '\u00b5g\/m\u00b3' and value > 0 and value <10000 and extract(year from timestamp) < 2020\ngroup by country, city, latitude, longitude\norder by avg_value desc\n\"\"\"\n\ncities_before = openaq.query_to_pandas(query)\ncities_before.dropna(inplace =True)\ncities_before.head(10)","92460ebf":"#Italy avg value\n\nprint('The average AQI for Italy till 2019 was {}'.format(round(cities_before[cities_before['country'] == 'IT']['avg_value'].mean(),2)))","19e74637":"## after\n\nquery = \"\"\" \n\nselect country,city, avg(latitude) as latitudes, avg(longitude) as longitudes, round(avg(value)) as avg_value\nfrom `bigquery-public-data.openaq.global_air_quality`\nwhere unit = '\u00b5g\/m\u00b3' and value > 0 and value <10000 and extract(year from timestamp) = 2020\ngroup by country, city\norder by avg_value desc\n\"\"\"\n\ncities_after = openaq.query_to_pandas(query)\ncities_after.dropna(inplace = True)\ncities_after.head(10)\n\n","252a095d":"#Italy avg_value\n\nprint('The average AQI for Italy in 2020 is {}'.format(round(cities_before[cities_after['country'] == 'IT']['avg_value'].mean(),2)))","4f7857da":"plt.style.use('ggplot')\nf,ax =plt.subplots(figsize = (20,15))\nm1 = Basemap(projection = 'cyl', llcrnrlon = -180, urcrnrlon =180, llcrnrlat =-90, urcrnrlat = 90,\n            resolution = 'c', lat_ts= True)\nm1.drawmapboundary(fill_color = '#A6CAE0', linewidth =0.2)\nm1.fillcontinents(color ='grey', alpha =0.3)\nm1.drawcountries(linewidth = 1, color = 'white')\nm1.shadedrelief()\n\navg = np.log(cities_before['avg_value'])\nm1loc =m1(cities_before['latitude'].tolist(), cities_before['longitude'])\nm1.scatter(m1loc[1],m1loc[0],lw = 3, alpha =0.5, cmap ='hot_r', c =avg)\nplt.title('Average AQI till 2019')\nplt.colorbar(label=' Average Log AQI value in unit $ug\/m^3$')\n#Basemap?\n","79285591":"plt.style.use('ggplot')\nf,ax =plt.subplots(figsize = (20,15))\nm1 = Basemap(projection = 'cyl', llcrnrlon = -180, urcrnrlon =180, llcrnrlat =-90, urcrnrlat = 90,\n            resolution = 'c', lat_ts= True)\nm1.drawmapboundary(fill_color = '#A6CAE0', linewidth =0.2)\nm1.fillcontinents(color ='grey', alpha =0.3)\nm1.drawcountries(linewidth = 1, color = 'white')\nm1.shadedrelief()\n\navg = np.log(cities_after['avg_value'])\nm1loc =m1(cities_after['latitudes'].tolist(), cities_after['longitudes'])\nm1.scatter(m1loc[1],m1loc[0],lw = 3, alpha =0.5, cmap ='hot_r', c =avg)\nplt.title('Average AQI in 2020')\nplt.colorbar(label=' Average Log AQI value in unit $ug\/m^3$')\n#Basemap?\n","4aac6f7a":"query = \"\"\" \nselect extract(year from timestamp) as year, round(avg(value)) as avg_value\nfrom `bigquery-public-data.openaq.global_air_quality`\nwhere unit = '\u00b5g\/m\u00b3' and value > 0 and value <10000  and country  = 'IT' \ngroup by  year\norder by year\"\"\"\n\nitaly = openaq.query_to_pandas(query)\nitaly","fd07d940":"query = \"\"\" \nselect pollutant, round(avg(value)) as avg_value\nfrom `bigquery-public-data.openaq.global_air_quality`\nwhere unit = '\u00b5g\/m\u00b3' and value > 0 and value <10000  and country  = 'IT' and extract(year from timestamp) < 2020\ngroup by pollutant\"\"\"\n\nit_pop_19 = openaq.query_to_pandas(query)\nprint('Pollutant till 2019')\nprint(it_pop_19)\n\nprint('\\n')\n\nquery = \"\"\" \nselect pollutant, round(avg(value)) as avg_value\nfrom `bigquery-public-data.openaq.global_air_quality`\nwhere unit = '\u00b5g\/m\u00b3' and value > 0 and value <10000  and country  = 'IT' and extract(year from timestamp) = 2020\ngroup by pollutant\"\"\"\n\nit_pop_20 = openaq.query_to_pandas(query)\nprint('Pollutant in 2020')\nprint(it_pop_20)","7482fedb":"f, ax = plt.subplots(1,2, figsize = (14,5))\nax1, ax2 = ax.flatten()\nax1.pie(x = it_pop_19['avg_value'], labels = it_pop_19['pollutant'], shadow = True,\n       autopct ='%1.0f%%', startangle = 90, colors = ['green','skyblue','orange'] )\nax1.set_title('Distribution of Pollutants in Italy till 2019')\n\nax2.set_title('Distribution of Pollutants in Italy in 2020')\nax2.pie(x = it_pop_20['avg_value'], labels = it_pop_20['pollutant'], shadow = True,\n       autopct ='%1.0f%%', startangle = 80, pctdistance = 0.85, explode = (0,0,0,0,0.1,0))\ncentre_circle = plt.Circle((0,0),0.65,fc='white')\nfig = plt.gcf()\nfig.gca().add_artist(centre_circle)\n# Equal aspect ratio ensures that pie is drawn as a circle\nax2.axis('equal')  \nplt.tight_layout()\nplt.show()\n\n\n","d5e4953b":"## Pollutant in BA (Bosnia And Herzegovina)\n\nquery = \"\"\" \nselect pollutant, round(avg(value)) as avg_value\nfrom `bigquery-public-data.openaq.global_air_quality`\nwhere unit = '\u00b5g\/m\u00b3' and value > 0 and value <10000  and country  = 'BA' and extract(year from timestamp) < 2020\ngroup by pollutant\"\"\"\n\nba_pop_19 = openaq.query_to_pandas(query)\nprint('Pollutant till 2019')\nprint(ba_pop_19)\n\nprint('\\n')\n\nquery = \"\"\" \nselect pollutant, round(avg(value)) as avg_value\nfrom `bigquery-public-data.openaq.global_air_quality`\nwhere unit = '\u00b5g\/m\u00b3' and value > 0 and value <10000  and country  = 'BA' and extract(year from timestamp) = 2020\ngroup by pollutant\"\"\"\n\nba_pop_20 = openaq.query_to_pandas(query)\nprint('Pollutant in 2020')\nprint(ba_pop_20)","d02c9486":"## Distribution of Pollutants in BA\n\nf, ax = plt.subplots(1,2, figsize = (14,5))\nax1, ax2 = ax.flatten()\nax1.pie(x = ba_pop_19['avg_value'], labels = ba_pop_19['pollutant'], shadow = True,\n       autopct ='%1.0f%%', startangle = 90)\nax1.set_title('Distribution of Pollutants in BA till 2019')\n\nax2.set_title('Distribution of Pollutants in BA in 2020')\nax2.pie(x = ba_pop_20['avg_value'], labels = ba_pop_20['pollutant'], shadow = True,\n       autopct ='%1.0f%%', startangle = 40, pctdistance = 0.85, explode = (0,0.2,0,0,0))\ncentre_circle = plt.Circle((0,0),0.65,fc='white')\nfig = plt.gcf()\nfig.gca().add_artist(centre_circle)\n# Equal aspect ratio ensures that pie is drawn as a circle\nax2.axis('equal')  \nplt.tight_layout()\nplt.show()","a7aa7706":"query = \"\"\"\n\nselect extract(year from timestamp) as year, latitude, longitude, round(avg(value)) as avg_value\nfrom `bigquery-public-data.openaq.global_air_quality`\nwhere unit = '\u00b5g\/m\u00b3' and value > 0 and value <10000 and \nextract(year from timestamp) <= 2020\ngroup by year, latitude, longitude\n\"\"\"\n\np1 = openaq.query_to_pandas(query)\np1.sort_values(by = 'year', inplace = True)\np1\n\n\n","eeec8534":"from matplotlib import animation,rc\nimport io\nimport base64\nfrom IPython.display import HTML, display\nimport warnings\nwarnings.filterwarnings('ignore')\nfig = plt.figure(figsize=(14,10))\nplt.style.use('ggplot')\n\ndef animate(Year):\n    ax = plt.axes()\n    ax.clear()\n    ax.set_title('Average AQI in Year: '+str(Year))\n    m4 = Basemap(llcrnrlat=-90, urcrnrlat=90, llcrnrlon=-180,urcrnrlon=180,projection='cyl')\n    m4.drawmapboundary(fill_color='#A6CAE0', linewidth=0)\n    m4.fillcontinents(color='grey', alpha=0.3)\n    m4.drawcoastlines(linewidth=0.1, color=\"white\")\n    m4.shadedrelief()\n    \n    lat_y = list(p1[p1['year'] == Year]['latitude'])\n    lon_y = list(p1[p1['year'] == Year]['longitude'])\n    lat,lon = m4(lat_y,lon_y) \n    avg = p1[p1['year'] == Year]['avg_value']\n    m4.scatter(lon,lat,c = avg,lw=2, alpha=0.3,cmap='hot_r')\n    \n   \nani = animation.FuncAnimation(fig,animate,list(p1['year'].unique()), interval = 1500)    \nani.save('animation.gif', writer='imagemagick', fps=1)\nplt.close(1)\nfilename = 'animation.gif'\nvideo = io.open(filename, 'r+b').read()\nencoded = base64.b64encode(video)\nHTML(data='''<img src=\"data:image\/gif;base64,{0}\" type=\"gif\" \/>'''.format(encoded.decode('ascii')))","d6b787a7":"query = \"\"\"\nselect pollutant, round(avg(value)) as avg_value_till_19\nfrom `bigquery-public-data.openaq.global_air_quality`\nwhere unit = '\u00b5g\/m\u00b3' and value > 0 and value <10000 and extract(year from timestamp) < 2020\ngroup by pollutant\"\"\"\n\npop_19 = openaq.query_to_pandas(query)\npop_19","c26f51ff":"query = \"\"\"\nselect pollutant, round(avg(value)) as avg_value_20\nfrom `bigquery-public-data.openaq.global_air_quality`\nwhere unit = '\u00b5g\/m\u00b3' and value > 0 and value <10000 and extract(year from timestamp) = 2020\ngroup by pollutant\"\"\"\n\npop_20 = openaq.query_to_pandas(query)\npop_20","635c2c04":"df= pd.merge(pop_19, pop_20, how ='inner', on ='pollutant')\ndf['perc_change'] = round((df['avg_value_till_19'] - df['avg_value_20'])*100\/df['avg_value_till_19'])\ndf","0c7540ab":"df.plot.bar(x ='pollutant', stacked = True, figsize = (10,7))\nplt.xticks(rotation = 360)","71c7e745":"#### Type of emissions most done:\n\nCO, O3, SO2 - Chile(CL)<br>\nNO2, pm10 - India(IN)<br>\npm25 - Singapore(SG)<br>\n\nSeems like SG has atleast one NA value in each field or no values at all.<br>\nLet's look into SG value","3aea8e03":"## Pollutants in BA (Bosnia And Herzegovina)","cd09748a":"# AQI distirbution by month\n\n### Till 2019","07200606":"# In 2020","0c776a84":"### So there is an error while recording the year as 2028 isn't possible. Therefore, removing\/ignoring that year would be the way to go.","42ed76a3":"So our assumption regarding SG was true as it has only one pollutant value.","b4ae4e6b":"### From both images we see that the overall avg value of AQI has been tremendously reduce in the month of February 2020 (75%)","44de1627":"Clearly we see that there is an error in getting the value on month 7 i.e july of 2019. Removing that value will help us to understand the overall situation of CL properly.\n","5fd74bb7":"## Majority of them uses unit = micro gram per meter cube.","2c873cbb":"### In 2020","2d8a26eb":"# Goal \n\n## The goal of this notebook is to tell a story of the air quality till the year 2019 and in 2020. We all know that 2020 has not started well but due to lockdown in many countries, how the pandemic has played a role in the air quality.\n\n### Questions I want to address are:\n\n1.) What was the average AQI before and in 2020 in each country? <br>\n2.) What was the highest occuring pollutant in top 5 country before and in 2020?<br>\n3.) Correlation between country and pollutants?<br>\n4.) Which month has the most AQI overall?<br>\n","856a3a20":"Top 5 pollutors of air - <br>\nItaly (IT), Singapore(SG),India(IN), Chile(CL) and Macedonia (MK)\n\nLeast 5 pollutors of air - <br>\nLatavia(LV), Nigeria (NG), Australia (AU), South Africa(ZA) and Kazakshtan(KZ)\n\nCountries might to change if ran after sometimes due to update in data.","7ad46d7c":"This is my first attempt to Google Bigquery. If you have any recommendations or suggestions for improvement please do comment. I'll really appreciate it.","3ce74cb6":"### From both the tables we can say that because of Lockdown in many countries especially in Italy the air quality has become very less hazardous. \n### The number of cities before 2020 in Italy are **5** in top 10 where as in 2020 there are none.\n\n\n# Distribution of Pollutants in ITALY & BA (Both are Eastern Europian Countries)","833062a2":"### In 2020","9f35942c":"It seems like Chile (CL) is definitely an outlier and have to look closer to it's values. <br>\nRest India(IN), Singapore(SG), Italy (IT), Spain (ES) are in top 5 with worst average AQI. ","d6f9912b":"### We can see that USA, AU has the best quality of air.\n### Whereas IT, IN, China has the worst AQI.","f14c6574":"# Location\n\n### Till 2019","aa8ba9fd":"### The major change in 2020 is that Eastern Europe has least AQI compared to previous image especially \n# Italy(avg_value 603 to 88 = apprx. 86% reduction).\n### India especially has the most bad AQI in 2020 in the world as the number of city recorded are greater than before thus there are many red dots due to increase in locations.\n### But overall the AQI of India has lowered down in 2020 by approx 40%.","d32b0fd4":"### We observe that the max avg_value has dropped down from 467 to 297 approx 50% reduction\n### Though India remains in 3rd position but the avg AQI has seen a drop from 263 to 154 approx 41% reduction.\n\n## Major change we can see in the countries like BA, IT, PE which has tremendous affect in 2020.\n\n# Pollutant in top 5 countries till 2019","82d6af04":"# In 2020","544dc4f0":"***Air Quality Index(AQI)*  **\n\nThe AQI is an index for reporting daily air quality. It tells\nyou how clean or unhealthy your air is, and what associated health effects might be a concern","42ef3244":"It is seen that CL, PE, IN, TR, PL are major pollutant of CO till **2019**","44efe8df":"# Correlation of Pollutants and Country till 2019 and in 2020\n\n### Till 2019","f26798d4":"## Average AQI per country","2239a58e":"We see in 2020 Bosnia and Herzegovina(BA) is the most CO polluant country where as the other top 5 till 2019, their avg value has become low.\nIt signifies that Lockdown had a huge effect on these countries"}}