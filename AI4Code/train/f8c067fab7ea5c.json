{"cell_type":{"2d06a16f":"code","0ee3c9bb":"code","2d8f42cf":"code","a6fc78e0":"code","f46c9f7d":"code","95bf8c9b":"code","f4b0e200":"code","1c6a9c38":"code","30d7cf9c":"code","3c9d15e1":"code","559f9624":"code","5b3687dc":"code","edafefc3":"code","47f989e4":"code","73cbef2b":"code","d84d8f0b":"code","92ae674c":"code","b714f58a":"code","25b4d19d":"code","85df011d":"code","66f56ee3":"code","80ebc657":"code","fdcdd49e":"code","cc346bf7":"code","e2f5cfb9":"code","b773f3ed":"code","25d9ae9c":"code","d05809b0":"code","c717a633":"code","e24d9e53":"code","8b5d7d55":"code","358a52ae":"code","7d9026c3":"code","4f3dec1a":"code","f900e70a":"code","5dd50350":"code","76e84bad":"code","7f1b6864":"code","dcb9178a":"code","fcd5670d":"code","4266af9d":"code","244d2ca9":"code","ad66862c":"code","254707eb":"code","7211837e":"code","bfb67d7e":"code","022dae35":"code","46db9fdd":"code","63880ff5":"code","1d64bce9":"code","1928ad73":"code","4df6f7e5":"code","9a3fe8c1":"code","50c8c7d5":"code","35dd1428":"code","5e07b9ab":"code","97a1138a":"code","5fc29473":"code","b87f71bf":"code","197ebbea":"code","52b10f6c":"code","d58f0a83":"code","08aa4ce0":"code","6ae92f12":"code","093390ef":"code","56960ef7":"code","6f4f10a2":"code","e3e8ad9b":"code","144106fc":"code","9aea3bd7":"code","fd0231b7":"code","a8fe19d2":"code","f79c4ce9":"code","cca6df5d":"code","0b13fb21":"code","f87b3da7":"code","70f824fc":"code","51787aec":"code","cc251144":"code","ff5aaf9a":"code","07dda25f":"code","5c220aa4":"code","b8ca8efe":"code","e72d4ed0":"code","009ae254":"code","19ead088":"code","18b554d6":"code","871f5f97":"code","8a3e2633":"code","fd30e800":"code","657b9bdc":"code","099babfe":"code","b9dce0fe":"code","c82742ba":"code","43f2acc9":"code","5df81e6d":"code","baac3a62":"code","16d6ddae":"code","7fe4f636":"code","d123fadb":"code","8b7abf66":"code","c9c9fa23":"code","e97c5ac5":"code","45009cb3":"code","a0486f2b":"code","36bf0644":"code","8fb5a525":"markdown","6ad912b3":"markdown","f7b9ba8a":"markdown","06b10abc":"markdown","e66cedec":"markdown","981f8c87":"markdown","b3fdb6d3":"markdown","ae988cbf":"markdown","3c5c6c8a":"markdown","ce4d94a5":"markdown"},"source":{"2d06a16f":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.style.use('seaborn')\nsns.set(font_scale = 2.5)\n\n#missingno -- dataset\uc5d0 \ucc44\uc6cc\uc9c0\uc9c0 \uc54a\uc740 null data \uc27d\uac8c \ubcf4\uc5ec\uc90c\nimport missingno as msno\n#ignore warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n#inline \ud558\uba74 \ub178\ud2b8\ubd81\uc5d0 \ubc14\ub85c \ubc14\ub85c \ubcfc \uc218 \uc788\uc74c!\n%matplotlib inline","0ee3c9bb":"df_train = pd.read_csv('..\/input\/titanic\/train.csv')\ndf_test = pd.read_csv('..\/input\/titanic\/test.csv')","2d8f42cf":"df_train.head()","a6fc78e0":"#\ud1b5\uacc4\uce58 \ubc18\ud658 \ndf_train.describe()","f46c9f7d":"df_test.describe()","95bf8c9b":"#{:> 10} \uc624\ub978\ucabd \uc815\ub82c {:<10} \uc67c\ucabd \uc815\ub82c\n#{:.2f} \uacb0\uce21\uce58\ub97c \uc18c\uc218 \ub450\ubc88\uc9f8 \uc790\ub9ac\uae4c\uc9c0 %\ub85c \ub098\ud0c0\ub0b4\ub294\uac70 \nfor col in df_train.columns:\n    msg = 'column: {:>10}\\t Percent of NaN value: {:.2f}%'.format(col, 100 * (df_train[col].isnull().sum() \/ df_train[col].shape[0]))\n    print(msg)","f4b0e200":"for col in df_test.columns:\n    msg = 'column: {:>10}\\t Percent of NaN value: {:.2f}%'.format(col, 100 * (df_test[col].isnull().sum() \/ df_train[col].shape[0]))\n    print(msg)","1c6a9c38":"msno.matrix(df=df_train.iloc[:,:],figsize=(8,8),color =(0.8,0.5,0.2))","30d7cf9c":"#missingno \ub370\uc774\ud130\ud504\ub808\uc784 pandas indexing\ud574\uc8fc\ub294\uac70 \uc6d0\ud558\ub294 row\ub098 \uc6d0\ud558\ub294 column \n#color\uc5d0 \uc788\ub294 \uc22b\uc790\ub294 rgb \uc22b\uc790\uc784\n#figsize \u3139\u3147 \uc0ac\uc774\uc988 \ub9d0\ud558\ub294\uac70\nmsno.bar(df=df_test.iloc[:,:],figsize=(4,4),color =(0.3,0.2,0.2))","3c9d15e1":"msno.matrix(df=df_test.iloc[:, :], figsize=(8, 8), color=(0.8, 0.5, 0.2))","559f9624":"#\ucf54\ub4dc \ud568\uc218 \ud574\uc11d\ud574\ubcf4\uae30 \n#as=as[0] \ub3c4\ud654\uc9c0\uc5d0 \uccab\ubc88\uc9f8 \uadf8\ub9bc\n# plt.subplots(pyplot\uc758 subplot\uc740 \ud314\ub808\ud2b8 \uae50\ub2e4\uace0 \uc0dd\uac01.)\nf, ax = plt.subplots(1,2, figsize =(17,8)) #1\ud5892\uc5f4 1\ud589\uc5d0 2\uac1c\uc758 \uadf8\ub9bc figure size \uac00\ub85c\ub85c 18, \uc138\ub85c\ub85c 8\ndf_train['Survived'].value_counts().plot.pie(explode=[0,0.1],autopct ='%1.1f%%',\n                                            ax=ax[0],shadow=True)\nax[0].set_title('Pie plot - Survived')\nax[0].set_ylabel('')\nsns.countplot('Survived', data=df_train, ax=ax[1])\nax[1].set_title('Count plot - Survived') #\uadf8\ub798\ud504 \uc81c\ubaa9\n\nplt.show()","5b3687dc":"plt.plot(df_train['Survived'].value_counts())","edafefc3":"# count \uac1d\uccb4\uac00 \uba87 \uac1c\uc784?\ndf_train[['Pclass','Survived']].groupby(['Pclass'],as_index =True).count()","47f989e4":"#\uac1d\uccb4\uc911 1\uc778 \uc560\ub4e4 \uba87 \uac1c\uc784?\ndf_train[['Pclass','Survived']].groupby(['Pclass'],as_index =True).sum()","73cbef2b":"df_train[['Pclass','Survived']].groupby(['Pclass'],as_index =True).mean()","d84d8f0b":"#Pclass \ud589 Survived \uc5f4. gradient-- background_gradient \uae30\uc6b8\uc5b4\uc9c0\ub294 \uac12\uc5d0 \ub530\ub77c \uc0c9 \ubc14\uafd4\uc904\uace0\uc784 ~~ \npd.crosstab(df_train['Pclass'], df_train['Survived'], margins=True).style.background_gradient(cmap='cool')","92ae674c":"#ascend = False \ub0b4\ub9bc\ucc28\uc21c \ndf_train[['Pclass','Survived']].groupby(['Pclass'],as_index=True).mean().sort_values(by='Survived',ascending=False).plot.bar()","b714f58a":"# firstclass\uc5d0 \uc788\uc744\ub584 \ub354 \uc798 \uc0ac\ub2c8\uae4c\n# Pclass\uac00 \ub192\uc744 \uc218\ub85d \uc0dd\uc874\ud655\ub960\uc774 \ub354 \ub192\ub2e4\n# class\ub97c \uc4f0\uba74 \ubaa8\ub378\uc5d0 \ub354 \uc88b\uc740 \ubaa8\ub378\ub9c1?\uc744 \uc801\uc6a9\ud560 \uc218 \uc788\uc74c\ny_position =1.02\nf, ax = plt.subplots(1,2, figsize =(18,8))\ndf_train['Pclass'].value_counts().plot.bar(color=['#CD7F32','#FFDF00',\n                                                 '#FF3399'],ax =ax[0])\nax[0].set_title('Number of Passengers By Pclass',y=y_position)\nax[0].set_ylabel('Count')\nsns.countplot('Pclass',hue='Survived',data=df_train,ax=ax[1])\nax[1].set_title('Pclass: Survived vs Dead', y= y_position)\nplt.show()","25b4d19d":"# female\uc774 \uc0b4 \ud655\ub960\uc774 \ub354 \ub192\ub2e4. \nf, ax = plt. subplots(1,2, figsize =(18,8))\ndf_train[['Sex','Survived']].groupby(['Sex'],as_index=True).mean().plot.bar(ax=ax[0])\nax[0].set_title('Survived vs Sex')\nsns.countplot('Sex',hue='Survived',data=df_train,ax=ax[1])\nax[1].set_title('Sex: Survived vs Dead')\nplt.show()","85df011d":"df_train[['Sex','Survived']].groupby(['Sex'],as_index =False).mean().sort_values(by='Survived',ascending =False)","66f56ee3":"#pd\uc758 crosstab == crosstable \uc774\uc6a9 \npd.crosstab(df_train['Sex'],df_train['Survived'],margins =True).style.background_gradient(cmap='winter_r')","80ebc657":"# 'Pclass' x\ucd95\/'Survived' y\ucd95 \n#  female\uc774 \uc0b4 \ud655\ub960\uc774 \ub354 \ub192\ub2e4! \uc88c\uc11d\uc774 \uc548\uc88b\uc544\uc9c8\uc218\ub85d \uc0dd\uc874\ud655\ub960 \ub0ae\uc544\uc9d0.. \nsns.factorplot('Pclass','Survived',hue='Sex',data=df_train,size = 6,aspect=1.5)","fdcdd49e":"#\ucd95 ! \ubcf4\ub294 \ubc29\ud5a5\uc744 \ubc14\uafbc\uac70\uc784. \n# col\uc4f0\uba74 pclass=1 ,2,3 \ubcc4\ub85c \uadf8\ub798\ud504 \ub2e4 \ub530\ub85c \ubcfc \uc218 \uc788\uc74c ~\nsns.factorplot(x='Sex',y='Survived',col='Pclass',data=df_train,satureation=.5,\n              size = 9, aspect =1)","cc346bf7":"#\nprint('\uc81c\uc77c \ub098\uc774 \ub9ce\uc740 \ud0d1\uc2b9\uac1d : {:.1f} Years'.format(df_train['Age'].max()))\nprint('\uc81c\uc77c \uc5b4\ub9b0 \ud0d1\uc2b9\uac1d : {:.1f} Years'.format(df_train['Age'].min()))\nprint('\ud0d1\uc2b9\uac1d \ud3c9\uade0 \ub098\uc774 : {:.1f} Years'.format(df_train['Age'].mean()))\n","e2f5cfb9":"too = df_train['Age']","b773f3ed":"too.mean()","25d9ae9c":"too.max(0)","d05809b0":"too.min()","c717a633":"too.value_counts()","e24d9e53":"# kdeplot \ub370\uc774\ud130\ub4e4\uc758 \ubd84\ud3ec\uac00 \uc5b4\ub5bb\uac8c \ub418\uc5b4 \uc788\ub294\uc9c0 \ub300\ub7b5 \ubb18\uc0ac\/\ucd94\uc815\n# \ud788\uc2a4\ud1a0\uadf8\ub7a8\uc744 smooth\ud558\uac8c \uadf8\ub9b0\uac70 \u314b\u314b \n# pandas \uc5d0\uc11c ['Survived'== 1] indexing\ud558\ub294 \ubc29\ubc95.\n# df_train \uc548\ucabd \uc774\ud574\uc548\uac10 \u3160\u3160\nfig,ax = plt.subplots(1,1, figsize =(9,5))\nsns.kdeplot(df_train[df_train['Survived'] == 1]['Age'], ax=ax)\nsns.kdeplot(df_train[df_train['Survived'] == 0]['Age'], ax=ax)\nplt.legend(['Survived ==1 ', 'Survived == 0'])\nplt.show()","8b5d7d55":"f = plt.figure(figsize =(10,10))\nf.ax = plt.subplots(1,1,figsize =(10,10))\nplt.figure (figsize = (10,10))","358a52ae":"f = plt.figure(figsize = (5,5))\na = np.arange(100)\nb = np.sin(a)\nplt.plot(b)","7d9026c3":"plt.figure(figsize=(8,6))\ndf_train['Age'][df_train['Pclass']== 1].plot(kind='hist')\ndf_train['Age'][df_train['Pclass']== 2].plot(kind='hist')\ndf_train['Age'][df_train['Pclass']== 3].plot(kind='hist')\nplt.xlabel('Age')\nplt.title('Age Distribution within classes')\nplt.legend(['1st Class','2nd Class','3rd Class'])","4f3dec1a":"fig.ax = plt.subplots(1,1,figsize =(5,5))\na = np.arange(100)\nb = np.sin(a)\n\nax.plot(b)","f900e70a":"#\uc804\uccb4 age\ub370\uc774\ud130 \uc14b\uc5d0\uc11c \uc0dd\uc874\ud55c \uc0ac\ub78c \ubd84\ud3ec. \n#\uc0dd\uc874\ud655\ub960\uc5d0 \ub530\ub978 \ubd84\ud3ec \ubcfc \uc218 \uc788\uc74c. \ubd88\ub9b0 \uc774\uc6a9\nfig,ax = plt.subplots(1,1, figsize =(9,5))\nsns.kdeplot(df_train[(df_train['Survived'] == 0)&(df_train['Pclass'] == 1)]['Age'], ax=ax)\nsns.kdeplot(df_train[(df_train['Survived'] == 0)&(df_train['Pclass'] == 1)]['Age'], ax=ax)\nplt.legend(['Survived ==0 ', 'Survived == 1'])\nplt.title('1st Class')\nplt.show()","5dd50350":"fig,ax = plt.subplots(1,1, figsize =(9,5))\nsns.kdeplot(df_train[(df_train['Survived'] == 0)&(df_train['Pclass'] == 2)]['Age'], ax=ax)\nsns.kdeplot(df_train[(df_train['Survived'] == 1)&(df_train['Pclass'] == 2)]['Age'], ax=ax)\nplt.legend(['Survived ==0 ', 'Survived == 1'])\nplt.title('2nd Class')\nplt.show()","76e84bad":"fig,ax = plt.subplots(1,1, figsize =(9,5))\ndf_train['Age'][(df_train['Pclass'] == 1) & (df_train['Survived'] == 0)].plot(kind='hist')\ndf_train['Age'][(df_train['Pclass'] == 1) & (df_train['Survived'] == 1)].plot(kind='hist')\n\nplt.xlabel('Age')\nplt.title('Age Distribution within classes')\nplt.legend(['1st Class','2nd Class','3rd Class'])","7f1b6864":"plt.figure(figsize=(8,6))\ndf_train['Age'][df_train['Pclass']== 1].plot(kind='hist')\ndf_train['Age'][df_train['Pclass']== 2].plot(kind='hist')\ndf_train['Age'][df_train['Pclass']== 3].plot(kind='hist')\nplt.xlabel('Age')\nplt.title('Age Distribution within classes')\nplt.legend(['1st Class','2nd Class','3rd Class'])","dcb9178a":"# i\uac00 1\uc0b4\ubd80\ud130 80\uc0b4\uae4c\uc9c0 \ubcc0\ud654\uc2dc\ud0a4\ub294\ub370 x\ucd95 : y\ucd95\uc740 \uc0dd\uc874\ud655\ub960\uc758 \ubcc0\ud654\n# \ub098\uc774\uac00 \uc5b4\ub9b4\uc218\ub85d \uc0dd\uc874\ud655\ub960 \uac81\ub098 \ub192\uc740 \uac83\uc744 \uc54c \uc218 \uc788\uc74c\n# sum \uba38\uc784.. \ncummulate_survival_ratio = []\nfor i in range(1, 80):\n    cummulate_survival_ratio.append(df_train[df_train['Age'] < i]['Survived'].sum() \/ len(df_train[df_train['Age'] < i]['Survived']))\n    \nplt.figure(figsize=(7, 7))\nplt.plot(cummulate_survival_ratio)\nplt.title('Survival rate change depending on range of Age', y=1.02)\nplt.ylabel('Survival rate')\nplt.xlabel('Range of Age(0~x)')\nplt.show()","fcd5670d":"#female \uc0dd\uc874 \ud655\ub960\uc774 \ub354 \ub192\ub2e4 \nf,ax = plt.subplots(1,2, figsize =(18,8))\nsns.violinplot(\"Pclass\",\"Age\",hue=\"Survived\",data=df_train,scale='count',split=True,ax=ax[0])\nax[0].set_title('Pclass and Age vs Survived')\nax[0].set_yticks(range(0,110,10))\nsns.violinplot(\"Sex\",\"Age\",hue = \"Survived\",data = df_train, scale='count',split=True,ax=ax[1])\nax[1].set_title('Sex and Age vs Survived')\nax[1].set_yticks(range(0,110,10))\nplt.show()","4266af9d":"#\nf,ax = plt.subplots(1,1, figsize = (7,7))\ndf_train[['Embarked','Survived']].groupby(['Embarked'],as_index=True).mean().sort_values(by='Survived',ascending=False).plot.bar(ax=ax)","244d2ca9":"#survived \uc5d0 \ub300\ud574 \uc815\ub82c\ud574\uc8fc\ub294 \uac83\uc744 \ud655\uc778 \uac00\ub2a5!\ndf_train[['Embarked','Survived']].groupby(['Embarked'],as_index=True).mean().sort_values(by='Survived',ascending=True)","ad66862c":"df_train[['Embarked','Survived']].groupby(['Embarked'],as_index=True).mean().sort_index(by='Survived')","254707eb":"#\uc5ec\uc131\uc774 \ub9ce\uc744\uc218\ub85d \uc0dd\uc874\uc728\uc774 \ub192\ub2e4\n#C,Q\uc5d0\uc11c \uc0dd\uc874\uc728\uc774 \ub192\ub2f9\nf,ax = plt.subplots(2,2, figsize=(20,15))\nsns.countplot('Embarked', data = df_train, ax=ax[0,0])\nax[0,0].set_title('(1) No. Of Passsengers Boarded')\nsns.countplot('Embarked', hue ='Sex', data=df_train, ax=ax[0,1])\nax[0,1].set_title('(2) Male-Female Split for Embarked')\nsns.countplot('Embarked',hue='Survived', data=df_train,ax=ax[1,0])\nax[1,0].set_title('(3) Embarked vs Survived')\nsns.countplot('Embarked', hue = 'Pclass',data=df_train, ax=ax[1,1])\nax[1,1].set_title('(4) Embarked vs Pclass')\nplt.subplots_adjust(wspace =0.2 , hspace =0.5) #plot\uac04\uc758 \uac04\uaca9\uc744 \ub123\uc5b4\uc900\uac70!\nplt.show()","7211837e":"df_train['FamilySize'] = df_train['SibSp']+df_train['Parch']\n+1 #\uc790\uc2e0\uc744 \ud3ec\ud568\ud574\uc57c\ud558\ub2c8 1\uc744 \ub354\ud55c\ub2e4\ndf_test['FamilySize']=df_test['SibSp']+df_test['Parch']+1 #\uc790\uc2e0\uc744 \ud3ec\ud568\ud574\uc57c\ud558\ub2c8 1\uc744 \ub354\ud55c\ub2e4","bfb67d7e":"df_train['SibSp']","022dae35":"print(\"Maximum size of Family: \",df_train['FamilySize'].max())\nprint(\"Minimum size of Family: \", df_train['FamilySize'].min())","46db9fdd":"#\ud63c\uc790 \ud0c4 \uc0ac\ub78c\uc740 500\uba85, \uac00\uc871\ub2e8\uc704\ub85c\ub3c4 \ub9ce\uc774 \ud0d0\n#familysize hue\ub85c \uc0c9\uae54 \ub123\uc5b4\uc90c. survived \ud55c \uc0ac\ub78c\ub4e4\nf,ax = plt.subplots(1,3, figsize =(40,10))\nsns.countplot('FamilySize',data=df_train,ax=ax[0])\nax[0].set_title('(1) No.Of Passengers Boarded', y=1.02)\n\nsns.countplot('FamilySize',hue='Survived',data=df_train, ax=ax[1])\nax[1].set_title('(2) Survived countplot dependging on FamilySize', y=1.02)\n\ndf_train[['FamilySize','Survived']].groupby(['FamilySize'],as_index=True).mean().sort_values(by='Survived',ascending=False).plot.bar(ax=ax[2])\nax[2].set_title('(3) Survived rate depending on FamilySize', y=1.02)\n\nplt.subplots_adjust(wspace=0.2, hspace=0.5)\nplt.show()","63880ff5":"#\uc774 \ub370\uc774\ud130\uc14b\uc744 \ud3ec\ud568\ud558\ub294 \ub0b4\uc6a9\n# \ud328\ud134 \uc798 \ubabb \ubcf4\uc5ec\uc90c\u3160\nfig,ax = plt.subplots(1,1, figsize=(8,8))\ng = sns.distplot(df_train['Fare'],color = 'b',label ='Skewness : {:.2f}'.format(df_train['Fare'].skew()),ax =ax)\ng = g.legend(loc ='best')","1d64bce9":"#log\ub97c \ucde8\ud574\uc57c \ud55c\ub2e4\ndf_test.loc[df_test.Fare.isnull(), 'Fare']=df_test['Fare'].mean() \n\ndf_train['Fare'] = df_train['Fare'].map(lambda i: np.log(i) if i > 0 else 0)\ndf_test['Fare'] = df_test['Fare'].map(lambda i: np.log(i) if i > 0 else 0)\n","1928ad73":"# g\ub85c \ubc18\ud658 log\ub97c \ucde8\ud574\uc11c scareness \uc904\uc5ec\uc8fc\uace0 --> feature engineering\nfig, ax = plt.subplots(1, 1, figsize=(8, 8))\ng = sns.distplot(df_train['Fare'], color='b', label='Skewness : {:.2f}'.format(df_train['Fare'].skew()), ax=ax)\ng = g.legend(loc='best')","4df6f7e5":"#ticket\ub3c4 \ube84\uace0\uc784 \ndf_train['Ticket'].value_counts()","9a3fe8c1":"#age\uc5d0 null data \uba87\uac1c\uc5ec?\ud655\uc778\ud560 \ub54c\ndf_train['Age'].isnull().sum()","50c8c7d5":"df_train['Age'].mean(0)","35dd1428":"#row data \uc911 \uc815\uaddc\ud45c\ud604\uc2dd\uc5d0 \ub9de\ub294 \uc560 \ucd94\ucd9c\ud574\uc8fc\ub294 method\ndf_train['Initial']=df_train['Name'].str.extract('([A-Za-z]+)\\.')\ndf_test['Initial']=df_test['Name'].str.extract('([A-Za-z]+)\\.')","5e07b9ab":"pd.crosstab(df_train['Initial'],df_train['Sex']).T.style.background_gradient(cmap='summer_r')","97a1138a":"df_train['Initial'].replace(['Mlle','Mme','Ms','Dr','Major','Lady','Countess','Jonkheer','Col','Rev','Capt','Sir','Don', 'Dona'],\n                        ['Miss','Miss','Miss','Mr','Mr','Mrs','Mrs','Other','Other','Other','Mr','Mr','Mr', 'Mr'],inplace=True)\n\ndf_test['Initial'].replace(['Mlle','Mme','Ms','Dr','Major','Lady','Countess','Jonkheer','Col','Rev','Capt','Sir','Don', 'Dona'],\n                        ['Miss','Miss','Miss','Mr','Mr','Mrs','Mrs','Other','Other','Other','Mr','Mr','Mr', 'Mr'],inplace=True)","5fc29473":"df_train.groupby('Initial').mean()","b87f71bf":"df_train.groupby('Initial')['Survived'].mean().plot.bar()","197ebbea":"## loc\uc4f0\uba74 null\uc5d0 \ucc44\uc6cc \ub123\uc744 \uc218 \uc788\uc74c. [\ud589,\uc5f4]\ndf_train.loc[(df_train['Age'].isnull()),:]","52b10f6c":"df_train['Age'].isnull()","d58f0a83":"# = \uc0c1\uc218(\uc704\uc758 Mr\uc778 \uc0ac\ub78c\uc758 ag\u3137 \ud3c9\uade0)\ndf_train.loc[(df_train.Age.isnull())&(df_train.Initial=='Mr'),'Age'] = 33\ndf_train.loc[(df_train.Age.isnull())&(df_train.Initial=='Mrs'),'Age'] = 36\ndf_train.loc[(df_train.Age.isnull())&(df_train.Initial=='Master'),'Age'] = 5\ndf_train.loc[(df_train.Age.isnull())&(df_train.Initial=='Miss'),'Age'] = 22\ndf_train.loc[(df_train.Age.isnull())&(df_train.Initial=='Other'),'Age'] = 46\n\ndf_test.loc[(df_test.Age.isnull())&(df_test.Initial=='Mr'),'Age'] = 33\ndf_test.loc[(df_test.Age.isnull())&(df_test.Initial=='Mrs'),'Age'] = 36\ndf_test.loc[(df_test.Age.isnull())&(df_test.Initial=='Master'),'Age'] = 5\ndf_test.loc[(df_test.Age.isnull())&(df_test.Initial=='Miss'),'Age'] = 22\ndf_test.loc[(df_test.Age.isnull())&(df_test.Initial=='Other'),'Age'] = 46","08aa4ce0":"df_train['Embarked'].isnull().sum()","6ae92f12":"df_train.shape","093390ef":"df_train['Embarked'].fillna('S',inplace=True)","56960ef7":"df_train['Embarked'].isnull().sum()","6f4f10a2":"df_train['Age_cat']=0","e3e8ad9b":"df_train.head()","144106fc":"df_train['Age_cat'] = 0\ndf_train.loc[df_train['Age'] < 10, 'Age_cat'] = 0\ndf_train.loc[(10 <= df_train['Age']) & (df_train['Age'] < 20), 'Age_cat'] = 1\ndf_train.loc[(20 <= df_train['Age']) & (df_train['Age'] < 30), 'Age_cat'] = 2\ndf_train.loc[(30 <= df_train['Age']) & (df_train['Age'] < 40), 'Age_cat'] = 3\ndf_train.loc[(40 <= df_train['Age']) & (df_train['Age'] < 50), 'Age_cat'] = 4\ndf_train.loc[(50 <= df_train['Age']) & (df_train['Age'] < 60), 'Age_cat'] = 5\ndf_train.loc[(60 <= df_train['Age']) & (df_train['Age'] < 70), 'Age_cat'] = 6\ndf_train.loc[70 <= df_train['Age'], 'Age_cat'] = 7\n\ndf_test['Age_cat'] = 0\ndf_test.loc[df_test['Age'] < 10, 'Age_cat'] = 0\ndf_test.loc[(10 <= df_test['Age']) & (df_test['Age'] < 20), 'Age_cat'] = 1\ndf_test.loc[(20 <= df_test['Age']) & (df_test['Age'] < 30), 'Age_cat'] = 2\ndf_test.loc[(30 <= df_test['Age']) & (df_test['Age'] < 40), 'Age_cat'] = 3\ndf_test.loc[(40 <= df_test['Age']) & (df_test['Age'] < 50), 'Age_cat'] = 4\ndf_test.loc[(50 <= df_test['Age']) & (df_test['Age'] < 60), 'Age_cat'] = 5\ndf_test.loc[(60 <= df_test['Age']) & (df_test['Age'] < 70), 'Age_cat'] = 6\ndf_test.loc[70 <= df_test['Age'], 'Age_cat'] = 7","9aea3bd7":"df_train.head()","fd0231b7":"def category_age(x):\n    if x < 10:\n        return 0\n    elif x < 20:\n        return 1\n    elif x < 30:\n        return 2\n    elif x < 40:\n        return 3\n    elif x < 50:\n        return 4\n    elif x < 60:\n        return 5\n    elif x < 70:\n        return 6\n    else:\n        return 7   \n    ","a8fe19d2":"df_train['Age_cat_2']=df_train['Age'].apply(category_age)","f79c4ce9":"# all \ubaa8\ub4e0\uac8c true\uc77c\ub54c\ub9cc true\n(df_train['Age_cat'] == df_train['Age_cat_2']).all()","cca6df5d":"# \ud558\ub098\ub77c\ub3c4 true\uba74 any\ub294 true! \n(df_train['Age_cat'] == df_train['Age_cat_2']).any()","0b13fb21":"# axis =1\ub85c \ub450\uba74 \ucd95\uc774 1\ndf_train.drop(['Age','Age_cat_2'],axis=1,inplace= True)\ndf_test.drop(['Age'],axis=1,inplace= True)","f87b3da7":"df_train.Initial.unique()","70f824fc":"df_train.loc[df_train['Initial']=='Master','Initial']","51787aec":"df_train['Initial'] = df_train['Initial'].map({'Master': 0, 'Miss': 1, 'Mr': 2, 'Mrs': 3, 'Other': 4})\ndf_test['Initial'] = df_test['Initial'].map({'Master': 0, 'Miss': 1, 'Mr': 2, 'Mrs': 3, 'Other': 4})","cc251144":"#\ud2b9\uc815 \uce7c\ub7fc\uc5d0 \ubb50 \ub4e4\uc5b4\uc788\ub294\uc9c0 \ud655\uc778\ud558\uace0 \uc2f6\uc744 \ub54c \uc0ac\uc6a9\ubc95 2\uac00\uc9c0\ndf_train['Embarked'].unique()","ff5aaf9a":"df_train['Embarked'].value_counts()","07dda25f":"# Embarked \uc22b\uc790\ub85c \ubc14\uafc8!\ndf_train['Embarked'] = df_train['Embarked'].map({'C': 0, 'Q': 1, 'S': 2})\ndf_test['Embarked'] = df_test['Embarked'].map({'C': 0, 'Q': 1, 'S': 2})","5c220aa4":"df_train['Embarked'].isnull().any()","b8ca8efe":"df_train['Sex'].unique()","e72d4ed0":"df_train['Sex']=df_train['Sex'].map({'female':0, 'male':1})\ndf_test['Sex']=df_test['Sex'].map({'female':0, 'male':1})\n","009ae254":"heatmap_data = df_train[['Survived','Pclass','Sex','Fare','Embarked','FamilySize','Initial','Age_cat']]","19ead088":"# \ubd88\ud544\uc694\ud55c feature\uac00 \uc5c6\ub204!\uc120\ud615\uad00\uacc4\uac00 1\uc774\uba74 \ub458\uc911\uc5d0 \ud558\ub098\ub9cc \uc788\uc5b4\ub3c4 \uc0c1\uad00\uc5c6\ub2e4 \uc774\uc18c\ub9ac,,1 or -1\uc774\uba74 \ub458\uc911\uc5d0 \ud558\ub098\ub294 \ud544\uc694\uc5c6\uc11c\nheatmap_data = df_train[['Survived', 'Pclass', 'Sex', 'Fare', 'Embarked', 'FamilySize', 'Initial', 'Age_cat']] \n\ncolormap = plt.cm.RdBu\nplt.figure(figsize=(12,10))\nplt.title('Pearson Correlation of Features', y=1.05, size=15)\nsns.heatmap(heatmap_data.astype(float).corr(), linewidths=0.1, vmax=1.0,\n           square=True, cmap=colormap, linecolor='white', annot=True, annot_kws={\"size\": 16})\n\ndel heatmap_data","18b554d6":"# one-hot encoding \ubaa8\ub378\uc758 \uc131\ub2a5\uc744 \ub192\uc774\uae30 \uc704\ud574 \uc6d0\ud56b\uc778\ucf54\ub529 \u314b\u314b \ndf_train = pd.get_dummies(df_train, columns = ['Initial'],prefix = 'Initial')\ndf_test = pd.get_dummies(df_test, columns = ['Initial'],prefix = 'Initial')","871f5f97":"df_train.head()","8a3e2633":"df_train = pd.get_dummies(df_train, columns=['Embarked'], prefix='Embarked')\ndf_test = pd.get_dummies(df_test, columns=['Embarked'], prefix='Embarked')\n","fd30e800":"df_train.head()","657b9bdc":"#\ud544\uc694\ud55c columns\ub9cc \ub0a8\uae30\uace0 \ub2e4 \uc9c0\uc6cc\ubc84\ub9ac\uae30\ndf_train.drop(['PassengerId', 'Name', 'SibSp', 'Parch', 'Ticket', 'Cabin'], axis=1, inplace=True)\ndf_test.drop(['PassengerId', 'Name',  'SibSp', 'Parch', 'Ticket', 'Cabin'], axis=1, inplace=True)","099babfe":"df_train.head()","b9dce0fe":"df_test.head()","c82742ba":"#sklearn\uc740 \uc0ac\uc6a9\ud574 \uba38\uc2e0\ub7ec\ub2dd \ubaa8\ub378 \ub9cc\ub4e4\uae30\n#importing all the required ML packages\nfrom sklearn.ensemble import RandomForestClassifier #\ub79c\ub364\ud3ec\ub808\uc2a4\ud2b8\nfrom sklearn import metrics\nfrom sklearn.model_selection import train_test_split","43f2acc9":"#\ud559\uc2b5 \ub370\uc774\ud130\uc640 target label\ub97c \ubd84\ub9ac\ud558\uae30 -- drop \uc0ac\uc6a9\ud574\nX_train = df_train.drop('Survived',axis=1).values\ntarget_label = df_train['Survived'].values\nX_test = df_test.values","5df81e6d":"X_tr, X_vld, y_tr, y_vld = train_test_split(X_train, target_label, test_size=0.3, random_state=2018)","baac3a62":"model = RandomForestClassifier()\nmodel.fit(X_tr, y_tr)\nprediction = model.predict(X_vld)","16d6ddae":"#\ubaa8\ub378 \uca4c\ub7ec\nprint('\ucd1d {}\uba85 \uc911 {:.2f}% \uc815\ud655\ub3c4\ub85c \uc0dd\uc874\uc744 \ub9de\ucda4'.format(y_vld.shape[0], 100 * metrics.accuracy_score(prediction, y_vld)))","7fe4f636":"##feature importance \n##\uc5b4\ub5a4 feature\uc5d0 \uc9c0\uae08 \ub9cc\ub4e0 \ubaa8\ub378\uc774 \uac00\uc7a5 \ub9ce\uc774 \uc601\ud5a5\uc744 \ubc1b\uc558\ub294 \uc9c0 \ud655\uc778 \uac00\ub2a5","d123fadb":"from pandas import Series\n\nfeature_importance = model.feature_importances_\nSeries_feat_imp = Series(feature_importance, index=df_test.columns)","8b7abf66":"plt.figure(figsize = (8,8))\nSeries_feat_imp.sort_values(ascending = True).plot.barh()\nplt.xlabel('Feature importance')\nplt.ylabel('Feature')\nplt.show()","c9c9fa23":"##prediction on test set\n#\uc0dd\uc874 \uc5ec\ubd80 \uc608\uce21\ud574\ubcf4\uae30!","e97c5ac5":"submission =  pd.read_csv('..\/input\/titanic\/gender_submission.csv')","45009cb3":"submission.head()","a0486f2b":"prediction = model.predict(X_test)\nsubmission['Survived']=prediction","36bf0644":"submission.to_csv('\/my_first_submission.csv',index=False)","8fb5a525":" **** 2.1 Pclass\n * Pclass ordinal, \uc11c\uc218\ud615 \ub370\uc774\ud130\/ \uce74\ub370\uace0\ub9ac\uc774\uba74\uc11c \uc21c\uc11c\uac00 \uc788\ub294 \ub370\uc774\ud130 \ud0c0\uc785\n * \uc0dd\uc874\ub960\uc758 \ucc28\uc774\ub97c \uc54c \uc218 \uc788\ub2e4. groupby \ub97c \uc0ac\uc6a9\ud558\uba74 \uc27d\uac8c \ud560 \uc218 \uc788\uc74c\n *'Pclass', 'Survived'\ub97c \uac00\uc838\uc628 \ud6c4 pclass\ub85c \ubb36\ub294\ub2e4. \uadf8\ub7ec\uba74 \uac01 pclass\ub9c8\ub2e4 0,1\uc774 count \uc774\ub97c \ud3c9\uade0\ub0b4\uba74 \uac01 pclass\ubcc4 \uc0dd\uc874\ub960\uc774 \ub098\uc634","6ad912b3":"> \ub05d!","f7b9ba8a":"###\uc774\uc81c \ub2e4 \ub370\uc774\ud130\ub97c \uc218\uce58\ud654 \ud588\uc74c\uc73c\ub85c \uc0c1\uad00\uad00\uacc4\ub97c \ud568 \uad6c\ud574\ubcf4\uc790!","06b10abc":"#### test-\uc9c4\uc9dc \ub2e8\uc9c0 test\uc77c\ubfd0! test\uc5d0 \uc788\ub294\uac78\ub85c \ucc44\uc6cc\ub123\ub294\ub2e4?\ub9d0\uc774 \uc548\ub428.\n#### train set\uc5d0\uc11c \uc5bb\uc740\uc560\ub97c test\uc5d0 \ucc44\uc6cc \ub123\uc5b4\uc57c\ub3fc","e66cedec":"#### \uc5ec\uae30 \ubb38\ubc95 \uc774\ud574 \ubabb\ud588\uc74c","981f8c87":"Model generation and prediction","b3fdb6d3":"***Embarked***\n#\ud0d1\uc2b9\ud55c \ud56d\uad6c\ub97c \ub098\ud0c0\ub0b8\ub2e4","ae988cbf":"****cabin NaN \ub370\uc774\ud130\uac00 \uac81\ub098 \ub9ce\ub2e4\n****\uadf8\ub798\uc11c Ticket\uc73c\ub85c \ucc98\ub9ac","3c5c6c8a":"#Pclass,sex,age","ce4d94a5":"####Embarked feature! "}}