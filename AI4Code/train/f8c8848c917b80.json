{"cell_type":{"9246930e":"code","1bfcaefd":"code","769bf1e4":"code","a67f4f2e":"code","791ab52b":"code","f71a4eaf":"code","4584e1bc":"code","e4577cc5":"code","13fa3d74":"code","24dbbecc":"code","d790b0a7":"code","89a2aee5":"code","b5fdf907":"code","10b26c53":"code","2c247744":"code","14ec063f":"code","8ff38631":"code","ec840265":"code","c55bfa04":"code","78c87c8d":"code","345ebdbb":"code","2c92f3c2":"code","c8a6df59":"code","b54209f7":"code","6343c774":"code","b330fc00":"code","c5598e69":"code","54c6ae72":"code","42d3f1e8":"code","2b9dba4d":"code","a8828402":"code","ca184cc0":"code","a180a6a3":"code","9ed44c8d":"code","b43bd7a5":"code","ffc41b50":"code","f58a61f9":"code","81b6edeb":"code","eb784685":"code","fe928d89":"code","acedd7c9":"code","3537249d":"code","e9001236":"code","0da8f87c":"code","09c7bdfa":"code","00a82700":"code","cc7d9a14":"code","4f124baa":"code","ba59affb":"code","d9277b15":"code","c6aff3e6":"code","671fa801":"code","108243ff":"code","1fc89cbb":"code","8e949811":"code","35187416":"code","649d8120":"code","0883e34f":"code","32b07b89":"code","6433e56e":"code","8afbec12":"code","f7c50c97":"code","eaf0731d":"markdown","c7c70137":"markdown","8e294aa1":"markdown","4f4d280c":"markdown","b7d3f845":"markdown","a1a6805d":"markdown","d1b0c7f6":"markdown","9b18386a":"markdown","b25db737":"markdown","e15f6dae":"markdown","d7f66190":"markdown","26476740":"markdown","88010216":"markdown","062e986b":"markdown","2a3c60db":"markdown","9dcd36e0":"markdown","94091f78":"markdown","69ddc1ba":"markdown","846ea6ad":"markdown","c43c158d":"markdown","d8f4bf46":"markdown","e3eadc74":"markdown","ddb6af65":"markdown","8cf4d58d":"markdown","fa7472d3":"markdown","6bd972c6":"markdown","2c0a782f":"markdown"},"source":{"9246930e":"import numpy as np\nimport pandas as pd\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","1bfcaefd":"data=pd.read_csv('..\/input\/zomato.csv')","769bf1e4":"data.info()","a67f4f2e":"data.head()","791ab52b":"#Removing unnecessary data such as url, address and phone columns from DataFrame","f71a4eaf":"del data['url']\ndel data['address']\ndel data['phone']","4584e1bc":"#Replacing restaurants with their ratings given as New to NAN and dropping them finally \ndata['rate'] = data['rate'].replace('NEW',np.NaN)\ndata['rate'] = data['rate'].replace('-',np.NaN)\ndata.dropna(how = 'any', inplace = True)","e4577cc5":"data['rate'] = data.loc[:,'rate'].replace('[ ]','',regex = True)\ndata['rate'] = data['rate'].astype(str)\ndata['rate'] = data['rate'].apply(lambda r: r.replace('\/5',''))\ndata['rate'] = data['rate'].apply(lambda r: float(r))","13fa3d74":"#Conversion of Cost from String to Integer\ndata['approx_cost(for two people)'] = data['approx_cost(for two people)'].str.replace(',','')\ndata['approx_cost(for two people)'] = data['approx_cost(for two people)'].astype(int)","24dbbecc":"data.head()","d790b0a7":"from __future__ import print_function\nfrom ipywidgets import interact, interactive, fixed, interact_manual\nimport ipywidgets as widgets\n\n","89a2aee5":"location=['Banashankari', 'Basavanagudi', 'Jayanagar', 'Kumaraswamy Layout',\n       'Rajarajeshwari Nagar', 'Mysore Road', 'Uttarahalli',\n       'South Bangalore', 'Vijay Nagar', 'Bannerghatta Road', 'JP Nagar',\n       'BTM', 'Wilson Garden', 'Koramangala 5th Block', 'Shanti Nagar',\n       'Richmond Road', 'City Market', 'Bellandur', 'Sarjapur Road',\n       'Marathahalli', 'HSR', 'Old Airport Road', 'Indiranagar',\n       'Koramangala 1st Block', 'East Bangalore', 'MG Road',\n       'Brigade Road', 'Lavelle Road', 'Church Street', 'Ulsoor',\n       'Residency Road', 'Shivajinagar', 'Infantry Road',\n       'St. Marks Road', 'Cunningham Road', 'Race Course Road', 'Domlur',\n       'Koramangala 8th Block', 'Frazer Town', 'Ejipura', 'Vasanth Nagar',\n       'Jeevan Bhima Nagar', 'Old Madras Road', 'Commercial Street',\n       'Koramangala 6th Block', 'Majestic', 'Langford Town',\n       'Koramangala 7th Block', 'Brookefield', 'Whitefield',\n       'ITPL Main Road, Whitefield', 'Varthur Main Road, Whitefield',\n       'Koramangala 2nd Block', 'Koramangala 3rd Block',\n       'Koramangala 4th Block', 'Koramangala', 'Bommanahalli',\n       'Hosur Road', 'Seshadripuram', 'Electronic City', 'Banaswadi',\n       'North Bangalore', 'RT Nagar', 'Kammanahalli', 'Hennur',\n       'HBR Layout', 'Kalyan Nagar', 'Thippasandra', 'CV Raman Nagar',\n       'Kaggadasapura', 'Kanakapura Road', 'Nagawara', 'Rammurthy Nagar',\n       'Sankey Road', 'Central Bangalore', 'Malleshwaram',\n       'Sadashiv Nagar', 'Basaveshwara Nagar', 'Rajajinagar',\n       'New BEL Road', 'West Bangalore', 'Yeshwantpur', 'Sanjay Nagar',\n       'Sahakara Nagar', 'Jalahalli', 'Yelahanka', 'Magadi Road',\n       'KR Puram']\nlocation.sort()\nprint(\"Search Restaurants according to their name\")\n@interact\ndef show_articles_more_than(Restaurant_Name=''):\n    return data[data['name'].str.contains(Restaurant_Name)]\n\n\n","b5fdf907":"@interact\ndef show_Restaurants_according_to_search(Location=location,\n                                         Restaurant_Type=['Buffet', \n                                             'Cafes',\n                                             'Delivery',\n                                             'Desserts',\n                                             'Dine-out',\n                                             'Drinks & nightlife',\n                                             'Pubs and bars'],\n                            Min_Rating=(0,5,0.1),\n                            Max_Cost_For_Two_People=(100,5000,50)):\n    print(\"\")\n    return data[ (data['rate'] > Min_Rating) \n                &(data['listed_in(type)'] == Restaurant_Type) \n                &(data['location'] == Location) \n                & (data['approx_cost(for two people)'] < Max_Cost_For_Two_People)]","10b26c53":"print(\"No. of restaurants with online delivery:\")\n(data.online_order == 'Yes').sum()","2c247744":"print(\"No. of restaurants which does not deliver online:\")\n(data.online_order == 'No').sum()","14ec063f":"data.name.count()","8ff38631":"sns.countplot(x=data['online_order'])\nfig = plt.gcf()\nfig.set_size_inches(6,6)\nplt.title('Restaurants delivering online or Not')","ec840265":"sns.countplot(x=data['online_order'], hue = data['listed_in(type)'])\nfig = plt.gcf()\nfig.set_size_inches(10,10)\nplt.title('Type of Restaurants delivering online or Not')","c55bfa04":"print(\"No. of restaurants with table booking facility:\")\n(data.book_table == 'Yes').sum()","78c87c8d":"print(\"No. of restaurants with table booking facility:\")\n(data.book_table == 'No').sum()","345ebdbb":"sns.countplot(x=data['book_table'])\nfig = plt.gcf()\nfig.set_size_inches(6,6)\nplt.title('Restaurants providing Table booking facility:')","2c92f3c2":"sns.countplot(x=data['book_table'],hue = data['listed_in(type)'])\nfig = plt.gcf()\nfig.set_size_inches(10,10)\nplt.title('Type Of Restaurants providing Table booking facility:')","c8a6df59":"print(\"All unique restaurants ratings:\")\ndata.rate.unique()\n","b54209f7":"print(\"no. of restaurants between 1.5 and 2 rating:\")\n((data.rate>=1.5) & (data.rate<2)).sum()","6343c774":"print(\"no. of restaurants between 2.5 and 3 rating:\")\n((data.rate>=2.5) & (data.rate<3)).sum()","b330fc00":"print(\"no. of restaurants between 2 and 2.5 rating:\")\n((data.rate>=2) & (data.rate<2.5)).sum()","c5598e69":"print(\"no. of restaurants between 3.0 and 3.5 rating:\")\n((data.rate>=3.0) & (data.rate<3.5)).sum()","54c6ae72":"print(\"no. of restaurants between 3.5 and 4 rating:\")\n((data.rate>=3.5) & (data.rate<4)).sum()","42d3f1e8":"print(\"no. of restaurants between 4 and 4.5 rating:\")\n((data.rate>=4) & (data.rate<4.5)).sum()","2b9dba4d":"print(\"no. of restaurants between 4.5 and 5 rating:\")\n((data.rate>=4.5) & (data.rate<5)).sum()","a8828402":"slices=[((data.rate>=1.5) & (data.rate<2)).sum(),\n        ((data.rate>=2) & (data.rate<2.5)).sum(),\n        ((data.rate>=2.5) & (data.rate<3)).sum(),\n        ((data.rate>=3.0) & (data.rate<3.5)).sum(),\n        ((data.rate>=3.5) & (data.rate<4)).sum(),\n        ((data.rate>=4) & (data.rate<4.5)).sum(),\n        ((data.rate>=4.5) & (data.rate<5)).sum()\n       ]\nlabels=['1.5-2','2-2.5','2.5-3','3-3.5','3.5-4','4-4.5','4.5-5']\ncolors = ['#3333cc','#ffff1a','#ff3333','#c2c2d6','#6699ff','#c4ff4d']\nplt.pie(slices,colors=colors, labels=labels, autopct='%1.0f%%', pctdistance=.5, labeldistance=1.2,shadow=True)\nfig = plt.gcf()\nplt.title(\"Percentage of Restaurants according to their ratings\", bbox={'facecolor':'2', 'pad':5})\n\nfig.set_size_inches(10,10)\nplt.show()","ca184cc0":"plt.figure(figsize=(20,10))\nax = sns.countplot(x='rate',hue='book_table',data=data)\nplt.title('Rating of Restaurants vs Table Booking')\nplt.show()","a180a6a3":"plt.figure(figsize=(20,10))\nax = sns.countplot(x='rate',hue='online_order',data=data)\nplt.title('Rating of Restaurants vs Online Delivery')\nplt.show()","9ed44c8d":"print(\"All unique locations of restaurants in Bangalore\")\ndata.location.unique()","b43bd7a5":"print(\"Count of restaurants at unique locations\")\nlocationCount=data['location'].value_counts().sort_values(ascending=True)\nlocationCount","ffc41b50":"#lets check max count\nprint(\"Maximum number of Resaturants Present at:\")\ncount_max=max(locationCount)\nfor x,y in locationCount.items():\n    if(y==count_max):\n        print(x)","f58a61f9":"#lets check min count\nprint(\"minimum number of Restaurants present at:\")\nmin_count=min(locationCount)\nfor x,y in locationCount.items():\n    if(y==min_count):\n        print(x)","81b6edeb":"fig=plt.figure(figsize=(20,40))\nlocationCount.plot(kind=\"barh\",fontsize=20)\nplt.ylabel(\"Location names\",fontsize=50,color=\"red\",fontweight='bold')\nplt.title(\"LOCATION VS RESTAURANT COUNT GRAPH\",fontsize=40,color=\"BLACK\",fontweight='bold')\nfor v in range(len(locationCount)):\n    #plt.text(x axis location ,y axis location ,text value ,other parameters......)\n    plt.text(v+locationCount[v],v,locationCount[v],fontsize=10,color=\"BLACK\",fontweight='bold')","eb784685":"print(\"All different dining type restaurants\")\ndata['listed_in(type)'].unique()","fe928d89":"print(\"Count of All different dining type restaurants\")\nrestaurantTypeCount=data['listed_in(type)'].value_counts().sort_values(ascending=True)\nrestaurantTypeCount","acedd7c9":"slices=[restaurantTypeCount[0],\n        restaurantTypeCount[1],\n        restaurantTypeCount[2],\n        restaurantTypeCount[3],\n        restaurantTypeCount[4],\n        restaurantTypeCount[5],\n        restaurantTypeCount[6]]\nlabels=['Pubs and bars','Buffet','Drinks & nightlife','Cafes','Desserts','Dine-out','Delivery ']\ncolors = ['#3333cc','#ffff1a','#ff3333','#c2c2d6','#6699ff','#c4ff4d','#339933']\nplt.pie(slices,colors=colors, labels=labels, autopct='%1.0f%%', pctdistance=.5, labeldistance=1.2,shadow=True)\nfig = plt.gcf()\nplt.title(\"Percentage of Restaurants according to their Type\", bbox={'facecolor':'2', 'pad':5})\n\nfig.set_size_inches(12,12)\nplt.show()","3537249d":"CityCount=data['listed_in(city)'].value_counts().sort_values(ascending=True)\nCityCount","e9001236":"fig=plt.figure(figsize=(20,20))\nCityCount.plot(kind=\"barh\",fontsize=20)\nplt.ylabel(\"Location names\",fontsize=50,color=\"red\",fontweight='bold')\nplt.title(\"CITY VS RESTAURANT COUNT GRAPH\",fontsize=40,color=\"BLACK\",fontweight='bold')\nfor v in range(len(CityCount)):\n    #plt.text(x axis location ,y axis location ,text value ,other parameters......)\n    plt.text(v+CityCount[v],v,CityCount[v],fontsize=10,color=\"BLACK\",fontweight='bold')","0da8f87c":"CostCount=data['approx_cost(for two people)'].value_counts().sort_values(ascending=True)\nfig=plt.figure(figsize=(25,25))\nCostCount.plot(kind=\"barh\",fontsize=20)\nplt.ylabel(\"Cost For Two People\",fontsize=50,color=\"red\",fontweight='bold')\nplt.title(\"COST FOR 2 PEOPLE VS RESTAURANT  GRAPH\",fontsize=40,color=\"BLACK\",fontweight='bold')\n","09c7bdfa":"data.votes.describe()","00a82700":"data[((data.votes>=300)==True) & ((data.rate>=4)==True)].describe()","cc7d9a14":"print(\"all different cuisines:\")\ncuisines = set()\nfor i in data['cuisines']:\n    for j in str(i).split(', '):\n        cuisines.add(j)\ncuisines","4f124baa":"NorthIndianFoodRestaurants = data[data['cuisines'].str.contains('North Indian', case=False, regex=True,na=False)]\nNorthIndianFoodRestaurants.head()","ba59affb":"ChineseFoodRestaurants = data[data['cuisines'].str.contains('Chinese|Momos', case=False, regex=True,na=False)]\nChineseFoodRestaurants.head()","d9277b15":"SouthIndianFoodRestaurants = data[data['cuisines'].str.contains('South Indian', case=False, regex=True,na=False)]\nSouthIndianFoodRestaurants.head()","c6aff3e6":"\nItalianFoodRestaurants = data[data['cuisines'].str.contains('Italian|Pizza', case=False, regex=True,na=False)]\nItalianFoodRestaurants.head()","671fa801":"MexicanFoodRestaurants = data[data['cuisines'].str.contains('Mexican', case=False, regex=True,na=False)]\nMexicanFoodRestaurants.head()","108243ff":"AmericanFoodRestaurants = data[data['cuisines'].str.contains('American|Burger', case=False, regex=True,na=False)]\nAmericanFoodRestaurants.head()","1fc89cbb":"MughlaiFoodRestaurants = data[data['cuisines'].str.contains('Mughlai', case=False, regex=True,na=False)]\nMughlaiFoodRestaurants.head()","8e949811":"#pie chart showing % of various Food serving Type Restaurants\nslices=[MughlaiFoodRestaurants.shape[0],\n        ChineseFoodRestaurants.shape[0],\n        MexicanFoodRestaurants.shape[0],\n        NorthIndianFoodRestaurants.shape[0],\n        SouthIndianFoodRestaurants.shape[0],\n        ItalianFoodRestaurants.shape[0],\n        AmericanFoodRestaurants.shape[0]]\nlabels=['Mughlai','Chinese','Mexican','North Indian','South Indian','Italian','American']\ncolors = ['#3333cc','#ffff1a','#ff3333','#c2c2d6','#6699ff','#c4ff4d','#339933']\nplt.pie(slices,colors=colors, labels=labels, autopct='%1.0f%%', pctdistance=.5, labeldistance=1.2,shadow=True)\nfig = plt.gcf()\nplt.title(\"Percentage of Restaurants according to their Food Type\", bbox={'facecolor':'2', 'pad':5})\n\nfig.set_size_inches(12,12)\nplt.show()","35187416":"SingleTypeofFoodServing = data[data['cuisines'].str.contains(',', case=False, regex=True,na=False)==False]\n","649d8120":"MultipleTypeofFoodServing = data[data['cuisines'].str.contains(',', case=False, regex=True,na=False)]\n","0883e34f":"# Pie chart showing Percentage of Restaurants serving single type vs Multiple type of Foods\nlabels = ['Single Type of Food Serving', 'Multiple Type of Food Serving', ]\nsizes = [SingleTypeofFoodServing.shape[0], MultipleTypeofFoodServing.shape[0]]\n\nexplode = (0, 0.1)\n\ncolors = ['#99ff99','#66b3ff']\nfig1, ax1 = plt.subplots()\nax1.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%',\n        shadow=True, startangle=150)\n\nax1.axis('equal')\nplt.title(\"Percentage of Restaurants serving single type vs Multiple type of Foods\", bbox={'facecolor':'2', 'pad':5})\nfig1.set_size_inches(10,10)\nplt.tight_layout()\nplt.show()","32b07b89":"import re\ndata=data[data['dish_liked'].notnull()]\ndata.index=range(data.shape[0])\nlikes=[]\nfor i in range(data.shape[0]):\n    splited_array=re.split(',',data['dish_liked'][i])\n    for item in splited_array:\n        likes.append(item)\n\n\n","6433e56e":"print(\"Count of Most liked dishes of Bangalore\")\nfavourite_food = pd.Series(likes).value_counts()\nfavourite_food.head(20)","8afbec12":"ax = favourite_food.nlargest(n=20, keep='first').plot('bar',figsize=(15,15),title = 'Top 20 Favourite Food counts ')\n\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.005, p.get_height() * 1.005))\n\n    ","f7c50c97":"branches = data.groupby(['name']).size().to_frame('count').reset_index().sort_values(['count'],ascending=False)\nax = sns.barplot(x='name', y='count', data=branches[:12])\nplt.xlabel('')\nplt.ylabel('Branches')\nplt.title('Food chains and their counts')\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.005, p.get_height() * 1.005))\n    \nfig = plt.gcf()\nfig.set_size_inches(25,15)","eaf0731d":"# Dashboard to search for restaurant According To Their Name,location,rating,cost for two.","c7c70137":"## Work Done in this Kernel\n* Importing file and cleaning Data\n* **Dashboard to search for restaurant According To Their Name,location,rating,cost for two**.(Do Check it!!!)\n* Analysis of Restaurant based on - \n\n    1. Their Rating \n    2. Online Delivery\n    3. Their Type whether Bar,Dinner, buffet etc\n    4. Table Booking facility\n    5. Single Cuisine type or Multi Cuisine Type\n    6. Most Liked Dishes\n    7. Largest Number of Food Chains in Bangalore\n    8. Average Price for Two peope\n    \n***if you feel there is something still left to analyse let me know***","8e294aa1":"### Get All the South Indian Food Serving Restaurants","4f4d280c":"# Analysis of Restaurants based on their Dining Type","b7d3f845":"* Analysis of Restaurants based on their online order and how rating is related to it","a1a6805d":"* Analysis of Restaurants based on their online order and how rating is related to it","d1b0c7f6":"# DATA CLEANING","9b18386a":"#  MOST LIKED DISHES IN BANGALORE","b25db737":"### Get All the Mughlai Food Serving Restaurants","e15f6dae":"# Analysis of Restaurants based on their FoodType","d7f66190":"### Get All the North Indian Food Serving Restaurants","26476740":"### Get All the Italian Food Serving Restaurants","88010216":"# Analysis of Restaurants based on their Online Delivery","062e986b":"### Get All the Mexican Food Serving Restaurants","2a3c60db":"### ANALYSIS OF BIGGEST FOOD CHAINS OF BANGALORE","9dcd36e0":"# Analysis of Restaurants based on their Ratings","94091f78":"* Onesta has highest number of chains in Bangalore","69ddc1ba":"# Analysis of Restaurants based on their Table booking facility","846ea6ad":"# Analysis of Restaurants based on their Location","c43c158d":"# Analysis of Restaurants Whether Single Cuisine or Multi Cusine","d8f4bf46":"### Get All the American Food Serving Restaurants","e3eadc74":"#### Let's store the dishes liked in seperate list and then analyse it. ","ddb6af65":"*Hi all, \nThis is a beginners' work. Feel Free to upvote it if you like. \nAlso improvements and changes would be highly appreciated.\nThank you!!!*","8cf4d58d":"# Analysis of Restaurants based on their Subcity Type","fa7472d3":"It is Clearly visible that table Booking doesnot affect much to a restaurant ratings in comparison to online delivery. People tend to prefer order online since they can get various offers from it. That's why online delivery is more important for restaurants in bangalore to flourish","6bd972c6":"### Get All the Chinese Food Serving Restaurants","2c0a782f":"*Search Restaurant According To your requirements*\n* Location - Chose Any location where you want to go\n* Type - Chose the type of Restaurant where you want to go whether cafe,pub etc\n* Min_Rating - Select the minimum rating which you want, search results will have atleast rating searched or more than that\n* Max_Cost_For_two - Select the max cost for two people and it will show restaurants having that much cost or below it."}}