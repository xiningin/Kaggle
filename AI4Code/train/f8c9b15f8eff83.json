{"cell_type":{"7ad42ac2":"code","4b1018d1":"code","8e65122e":"code","2abf7972":"code","5bf7bcc4":"code","e46869fc":"code","d260121e":"code","24f3b6f9":"code","a589dddd":"code","de236ccf":"code","227be3d6":"code","bf0a8409":"code","e31c1087":"code","f1bf1490":"code","c117db52":"code","ac8f0b7c":"code","937fb075":"code","42172de9":"code","11fe2026":"code","aa019ca9":"code","691cb484":"code","68627db9":"markdown","b28515b8":"markdown","df6cae4d":"markdown","0beb424d":"markdown","4adac7bd":"markdown","523e634f":"markdown","6b0c8a73":"markdown","f13c7b3e":"markdown","ca3629d8":"markdown","fe0f020e":"markdown","260be386":"markdown","5583175c":"markdown"},"source":{"7ad42ac2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\nimport matplotlib.pyplot as plt\n\n\n\n","4b1018d1":"df=pd.read_csv('..\/input\/graduate-admissions\/Admission_Predict_Ver1.1.csv')","8e65122e":"df.head()","2abf7972":"df.describe()","5bf7bcc4":"df.shape\n","e46869fc":"df.columns","d260121e":"university_ranks=df['University Rating'].value_counts()\ngre_scores=df['GRE Score'].value_counts()\n\n","24f3b6f9":"fig = plt.figure()\nax = fig.add_axes([0,0,1,1])\nax.bar(university_ranks.index,df['University Rating'].value_counts())\nax.set_ylabel('count of univerity')\nax.set_xlabel('Univerity Rating')\n\nplt.show()","a589dddd":"df =df.dropna(axis=0)","de236ccf":"X = df.iloc[:,0:7]  #independent columns\ny = df.iloc[:,-1]\n\nimport seaborn as sns\n#get correlations of each features in dataset\ncorrmat = df.corr()\ntop_corr_features = corrmat.index\n#plt.figure(figsize=(8,8))\n#plot heat map\ng=sns.heatmap(df[top_corr_features].corr(),annot=True,cmap=\"RdYlGn\")","227be3d6":"corrmat","bf0a8409":"df[df['Chance of Admit ']>0.80].groupby('University Rating').mean()\n","e31c1087":"y = df.iloc[:,-1]\ny ","f1bf1490":"features=['GRE Score', 'TOEFL Score','CGPA','University Rating']\nx =df[features]\n\nx","c117db52":"x.describe()","ac8f0b7c":"x.head()","937fb075":"from sklearn.model_selection import train_test_split\ntrain_x, val_x, train_y, val_y = train_test_split(x, y, random_state = 0)","42172de9":"from sklearn.tree import DecisionTreeRegressor\n#Specify a number for random_state to ensure same results each run\nmarks_model= DecisionTreeRegressor(random_state=1)\n#fitting model\nmarks_model.fit(train_x, train_y)","11fe2026":"print(\"The predictions are\")\nval_predictions = marks_model.predict(val_x)\nprint(val_predictions)\n","aa019ca9":"from sklearn.metrics import mean_absolute_error\nprint(\"error rate \" + str(mean_absolute_error(val_y, val_predictions)))","691cb484":"from sklearn.metrics import mean_squared_error\nmean_squared_error(val_y,val_predictions, squared=False)","68627db9":"DATA CLEANING","b28515b8":"making predictions by decision tree ","df6cae4d":"**So from heat map , we relize that research score nd lor score does not effect much to chance of admit.\n\n**The most impt factor that contribute to admission is CGPA followed by gre score****","0beb424d":"**Selecting features**","4adac7bd":"# **Building the model**","523e634f":"***To know what are average marks required to get admission acc to university rating where chanceof admission is >80%***","6b0c8a73":"# DATA EXPLORATION","f13c7b3e":"**Select prediction target**","ca3629d8":"# # To know which feature contribute more towards output\n\nCorrelation states how the features are related to each other or the target variable.\nCorrelation can be positive (increase in one value of feature increases the value of the target variable) or negative (increase in one value of feature decreases the value of the target variable)\nHeatmap makes it easy to identify which features are most related to the target variable, we will plot heatmap of correlated features using the seaborn library.","fe0f020e":"# To calculate rmse value","260be386":"To calc mean absolute error b\/w predicted value and actual value","5583175c":"**Load dataset**"}}