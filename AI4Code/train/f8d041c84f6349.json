{"cell_type":{"2bcdf455":"code","500827f2":"code","498f9240":"code","a8d9581d":"code","986a87e3":"code","1bc5a93a":"code","81765443":"code","5da2b7d2":"code","93223d17":"code","98abfca7":"code","f6bc35a5":"code","31f0cc66":"code","0d522ee7":"code","28a73bf6":"code","9a008808":"code","a8213b17":"code","56d95cd0":"code","32671680":"code","5ee4d5e5":"code","066fd9b5":"code","41058a86":"code","87665c52":"code","dc267d60":"code","471d0fcd":"code","2516decc":"code","8ad617b9":"code","eedd2ee7":"code","3d6e54f7":"code","2bb69aac":"code","c6b40a4b":"code","e7c847e4":"code","5cef9a81":"code","a793ff00":"code","843b1197":"code","0649ec73":"code","7b704dee":"code","b3c0e864":"markdown","0ae75eef":"markdown","8d856b37":"markdown","9b895218":"markdown","a2046751":"markdown","73f8c98b":"markdown","192afaaa":"markdown","b807f148":"markdown","2ffa2149":"markdown","d2a6ac5c":"markdown","224ed0fe":"markdown","fdab8297":"markdown"},"source":{"2bcdf455":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n","500827f2":"train_data = pd.read_csv('..\/input\/train.csv')\ntest_data = pd.read_csv('..\/input\/test.csv')","498f9240":"train_data.head()","a8d9581d":"train_data.shape","986a87e3":"p = sns.countplot(data=train_data, x='Sex')","1bc5a93a":"p = sns.countplot(data=train_data, x='Embarked')\n_ = plt.title('C = Cherbourg, Q = Queenstown, S = Southampton')","81765443":"p = sns.countplot(data=train_data, x='Survived')\n_ = plt.title('0 = No, 1 = Yes')","5da2b7d2":"p = sns.countplot(data=train_data, x='Pclass')\n_ = plt.title('1 = 1st, 2 = 2nd, 3 = 3rd')","93223d17":"from xgboost import XGBClassifier\nfrom sklearn.model_selection import train_test_split","98abfca7":"model = XGBClassifier()","f6bc35a5":"train_data[\"Sex\"] = train_data[\"Sex\"].fillna(\"NA\")\ntrain_data[\"Embarked\"] = train_data[\"Embarked\"].fillna(\"C\")\ntest_data[\"Sex\"] = test_data[\"Sex\"].fillna(\"NA\")\ntest_data[\"Embarked\"] = test_data[\"Embarked\"].fillna(\"C\")\ntrain_data[['Pclass', 'Age', 'SibSp', 'Fare']] = train_data[['Pclass', 'Age', 'SibSp', 'Fare']].fillna(0)\ntest_data[['Pclass', 'Age', 'SibSp', 'Fare']] = test_data[['Pclass', 'Age', 'SibSp', 'Fare']].fillna(0)","31f0cc66":"genders = {'male': 0, 'female': 1, 'NA': 2}\nembarks = {'C': 0, 'Q': 1, 'S': 2,}\ntrain_data['Sex'] = train_data['Sex'].apply(lambda x: genders[x])\ntrain_data['Embarked'] = train_data['Embarked'].apply(lambda x: embarks[x])\ntest_data['Sex'] = test_data['Sex'].apply(lambda x: genders[x])\ntest_data['Embarked'] = test_data['Embarked'].apply(lambda x: embarks[x])","0d522ee7":"X = train_data[['Pclass', 'Sex', 'Age', 'SibSp', 'Embarked', 'Fare']]\nY = train_data['Survived']","28a73bf6":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\n\nX = sc.fit_transform(X)","9a008808":"trainX, testX, trainY, testY = train_test_split(X, Y, test_size=0.2, random_state=42)","a8213b17":"model.fit(trainX, trainY)","56d95cd0":"predict = model.predict(testX)","32671680":"from sklearn.metrics import accuracy_score","5ee4d5e5":"accuracy_score(predict, testY)","066fd9b5":"from sklearn.ensemble import RandomForestClassifier","41058a86":"model_f = RandomForestClassifier()","87665c52":"model_f.fit(trainX, trainY)","dc267d60":"predict_f = model_f.predict(testX)","471d0fcd":"accuracy_score(predict_f, testY)","2516decc":"from sklearn.svm import SVC","8ad617b9":"model_svm = SVC(gamma='scale', decision_function_shape='ovo')","eedd2ee7":"model_svm.fit(trainX, trainY)","3d6e54f7":"predict_svm = model_svm.predict(testX)","2bb69aac":"accuracy_score(predict_f, testY)","c6b40a4b":"from sklearn.neural_network import MLPClassifier","e7c847e4":"model_nn = MLPClassifier(solver='lbfgs', alpha=1e-5, hidden_layer_sizes=(5, 2), random_state=1)","5cef9a81":"model_nn.fit(trainX, trainY)","a793ff00":"predict_nn = model_nn.predict(testX)","843b1197":"accuracy_score(predict_nn, testY)","0649ec73":"test_df = test_data[['Pclass', 'Sex', 'Age', 'SibSp', 'Embarked', 'Fare']]\ntest_df = sc.transform(test_df)\nfinal_predictions = model_svm.predict(test_df)","7b704dee":"submission = pd.DataFrame({\n        \"PassengerId\": test_data[\"PassengerId\"],\n        \"Survived\": final_predictions\n    })\nsubmission.to_csv('submission.csv', index=False)","b3c0e864":"# Titanic EDA and Predictions","0ae75eef":"### Basic Data Visualisation","8d856b37":"### Making Predictions","9b895218":"Passengers in different classes. Pclass feature is a proxy for socio-economic status","a2046751":"### Using XGBoost Classifier","73f8c98b":"Let's find out the number of male and female passengers in the ship","192afaaa":"The following plot shows the number of people who surrvived and who didn't survived the shipwrcek","b807f148":"In this kernel we will do some basic exploratory data analysis and will make some predictions about the chances of the survival of a person in Titanic.","2ffa2149":"### Using Support Vector Machines","d2a6ac5c":"Embark feature tells us the Port of Embark. The following plot shows the number of passengers from different ports","224ed0fe":"### Using Neural Networks","fdab8297":"### Using Random Forest Classifier"}}