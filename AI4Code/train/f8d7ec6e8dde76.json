{"cell_type":{"3958dc8b":"code","54ce2e19":"code","2adf62fc":"code","4eb4d3cf":"code","8fc08d8d":"code","c5cf4b2b":"code","81602ebe":"code","3193324c":"code","1a9761ac":"code","f2525970":"code","b5e1b881":"code","5eabfe68":"code","694c34f3":"code","f05b0718":"code","76d80938":"code","5711ac95":"code","1a5a2a8d":"code","2f0565fa":"code","d9481c16":"code","38ccd9e1":"code","43371fc6":"code","6eb33848":"code","fd8b322a":"code","2a37b60e":"code","f26f7c6c":"code","4a096f9d":"markdown","5c284085":"markdown","b1a93eeb":"markdown","a7ffd3c8":"markdown","7213f7eb":"markdown","729b49f0":"markdown","d01c1aa1":"markdown","df26ae97":"markdown","f6fb2f00":"markdown","ac842e21":"markdown","5d6b92cc":"markdown","4fe35010":"markdown","cf64399d":"markdown","fe050aed":"markdown","7861cd1c":"markdown","b1f60684":"markdown","5b54f5f1":"markdown","92b37dea":"markdown","dd3bbbe9":"markdown","8ceb7e10":"markdown"},"source":{"3958dc8b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","54ce2e19":"!pip install openpyxl","2adf62fc":"athlete = pd.read_excel('..\/input\/2021-olympics-in-tokyo\/Athletes.xlsx')\ngender = pd.read_excel('..\/input\/2021-olympics-in-tokyo\/EntriesGender.xlsx')\nteam = pd.read_excel('..\/input\/2021-olympics-in-tokyo\/Teams.xlsx')\ncoach = pd.read_excel('..\/input\/2021-olympics-in-tokyo\/Coaches.xlsx')\nmedal = pd.read_excel('..\/input\/2021-olympics-in-tokyo\/Medals.xlsx')","4eb4d3cf":"import seaborn as sb\nimport matplotlib.pyplot as plt","8fc08d8d":"athlete.head()","c5cf4b2b":"gender.head()","81602ebe":"team.head()","3193324c":"coach.head()","1a9761ac":"medal.drop('Rank by Total', inplace=True, axis=1)\nmedal.head()","f2525970":"medal.sort_values('Total',ascending=False).head(10)","b5e1b881":"medal.sort_values('Gold',ascending=False).head(10)","5eabfe68":"medal.sort_values('Silver',ascending=False).head(10)","694c34f3":"medal.sort_values('Bronze',ascending=False).head(10)","f05b0718":"plt.pie(medal['Total'],labels = medal['Team\/NOC'], autopct=None, radius = 4.5)\nplt.show()","76d80938":"athlete.head(10)","5711ac95":"l=[]\nfor x in list(set(athlete['NOC'])):\n    l.append(list(athlete['NOC']).count(x))\nplt.pie(l,labels=list(set(athlete['NOC'])), radius = 4.5)\nplt.show()","1a5a2a8d":"l=[]\nfor x in list(set(athlete['Discipline'])):\n    l.append(list(athlete['Discipline']).count(x))\nplt.rcParams[\"figure.figsize\"] = (14, 5)\nplt.bar(list(set(athlete['Discipline'])),l)\nplt.xlabel('Events')\nplt.ylabel('Number of athletes')\nplt.xticks(rotation=90)\nplt.show()","2f0565fa":"gender.head()","d9481c16":"m,f = 0,0\nfor x in range(len(gender['Discipline'])):\n    f+=gender['Female'][x]\n    m+=gender['Male'][x]\nflbl = 'Female Athletes '+ str(f*100\/(f+m))+'%'\nmlbl = 'Male Athletes '+str(m*100\/(f+m))+'%'\nplt.pie([f,m],labels=[flbl, mlbl], radius=1.6)\nplt.show()","38ccd9e1":"gender.sort_values('Female', ascending=False).head()","43371fc6":"gender.sort_values('Male', ascending=False).head()","6eb33848":"gender[gender['Female']>gender['Male']]","fd8b322a":"coach.drop('Event',axis=1,inplace=True)\ncoach.head()","2a37b60e":"l=[]\nfor i in list(set(coach['NOC'])):\n    l.append(list(coach['NOC']).count(i))\nplt.rcParams[\"figure.figsize\"] = (15, 5)\nplt.bar(list(set(coach['NOC'])),l)\nplt.xlabel('Countries')\nplt.ylabel('Number of Coaches')\nplt.xticks(rotation=90)\nplt.show()","f26f7c6c":"l=[]\nfor i in list(set(coach['Discipline'])):\n    l.append(list(coach['Discipline']).count(i))\nplt.rcParams[\"figure.figsize\"] = (10, 5)\nplt.bar(list(set(coach['Discipline'])),l)\nplt.xlabel('Discipline')\nplt.ylabel('Number of Coaches')\nplt.xticks(rotation=90)\nplt.show()","4a096f9d":"### 2. Analyzing Athletes\n\nNow let us analyze our data on athletes","5c284085":"Now let us analyze our data on gender diversity in Tokyo Olympics 2020.","b1a93eeb":"### Games where Females were more in number than Male","a7ffd3c8":"## Step 1: Importing Dataset\nBut before directly reading excel files we will need to import the package openpyxl","7213f7eb":"### Country vs Coaches","729b49f0":"Top **Silver** medal winning countries","d01c1aa1":"### Discipline vs Coaches","df26ae97":"### Top games with male participation","f6fb2f00":"## Step 2: Data Visualization\nOur main task is to visualize and figure different and varied patterns in our dataset. For this we will import some powerful python libraries.","ac842e21":"Top **Bronze** Medal winning countries","5d6b92cc":"Leading Countries on the basis of **Gold** medals","4fe35010":"### Female and Male Athletes distribution across all games","cf64399d":"# Introduction\n\n## About the Dataset\nThis contains the details of over 11,000 athletes, with 47 disciplines, along with 743 Teams taking part in the 2020 Tokyo Olympics (which actually took place in 2021).\nThis dataset contains the details of the Athletes, Coaches, Teams participating as well as the Entries by gender. It contains their names, countries represented, discipline, gender of competitors, name of the coaches.","fe050aed":"### 3. Analyzing Gender Balance","7861cd1c":"### Country wise medal distibution","b1f60684":"### Top games with female participation","5b54f5f1":"### 4. Analyzing data on Coaches","92b37dea":"### Country wise athletes","dd3bbbe9":"### 1. Countries winning Medals\nLeading Countries on the basis of **Total** medals","8ceb7e10":"### Event wise distribution of players"}}