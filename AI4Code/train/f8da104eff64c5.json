{"cell_type":{"4f4c70bf":"code","86784bea":"code","3f289e87":"code","4006cadb":"code","d3b25fff":"code","1b1bf0b6":"code","8ec31289":"code","f3fb019a":"code","fcd1f062":"code","b1d8b377":"code","33523272":"code","96a2cf96":"code","a77dde92":"code","9e8f7323":"code","93ab3293":"code","fc3dc16c":"code","e977df5d":"code","4df9ae50":"code","6b446983":"code","0eca3124":"code","dea1b204":"code","1cee8a60":"markdown"},"source":{"4f4c70bf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","86784bea":"_2015 = pd.read_csv('\/kaggle\/input\/world-happiness\/2015.csv')\n_2016 = pd.read_csv('\/kaggle\/input\/world-happiness\/2016.csv')\n_2017 = pd.read_csv('\/kaggle\/input\/world-happiness\/2017.csv')\n_2018 = pd.read_csv('\/kaggle\/input\/world-happiness\/2018.csv')\n_2019 = pd.read_csv('\/kaggle\/input\/world-happiness\/2019.csv')\n","3f289e87":"len(_2015.columns)\n","4006cadb":"len(_2016.columns)","d3b25fff":"len(_2017.columns)","1b1bf0b6":"len(_2018.columns)","8ec31289":"len(_2019.columns)","f3fb019a":"_2015.columns","fcd1f062":"_2016.columns","b1d8b377":"_2017.columns","33523272":"_2018.columns","96a2cf96":"_2019.columns","a77dde92":"import numpy as np\nimport pandas as pd","9e8f7323":"# Index(['Country', 'Region', 'Happiness Score',\n#        'Health', 'Freedom','Corruption', 'Generosity'],\n#       dtype='object')\n\n_2015 = pd.read_csv('\/kaggle\/input\/world-happiness\/2015.csv')\n\n_2015.drop('Happiness Rank', axis = 1, inplace = True) \n_2015.drop('Standard Error', axis = 1, inplace = True) \n_2015.drop('Economy (GDP per Capita)', axis = 1, inplace = True) \n_2015.drop('Family', axis = 1, inplace = True) \n_2015.drop('Dystopia Residual', axis = 1, inplace = True) \n\n_2015.columns = ['Country','Region','Happiness Score','Health','Freedom','Corruption','Generosity']\n_2015","93ab3293":"# Index(['Country', 'Region', 'Happiness Score',\n#        'Health', 'Freedom','Corruption', 'Generosity'],\n#       dtype='object')\n\n_2016 = pd.read_csv('\/kaggle\/input\/world-happiness\/2016.csv')\n\n_2016.drop('Happiness Rank', axis = 1, inplace = True) \n_2016.drop('Lower Confidence Interval', axis = 1, inplace = True) \n_2016.drop('Upper Confidence Interval', axis = 1, inplace = True) \n_2016.drop('Economy (GDP per Capita)', axis = 1, inplace = True) \n_2016.drop('Family', axis = 1, inplace = True) \n_2016.drop('Dystopia Residual', axis = 1, inplace = True) \n\n_2016.columns = ['Country','Region','Happiness Score','Health','Freedom','Corruption','Generosity']\n\n_2016","fc3dc16c":"# Index(['Country', 'Region', 'Happiness Score',\n#        'Health', 'Freedom','Corruption', 'Generosity'],\n#       dtype='object')\n\n_2017 = pd.read_csv('\/kaggle\/input\/world-happiness\/2017.csv')\n\n_2017.drop('Happiness.Rank', axis = 1, inplace = True) \n_2017.drop('Whisker.high', axis = 1, inplace = True) \n_2017.drop('Whisker.low', axis = 1, inplace = True) \n_2017.drop('Economy..GDP.per.Capita.', axis = 1, inplace = True) \n_2017.drop('Family', axis = 1, inplace = True) \n_2017.drop('Dystopia.Residual', axis = 1, inplace = True) \n\n#Region sutunu olmadigi icin onu eklememiz lazim\n_2017['Region'] = '-'\n\n#sutun adlarinin yerlerini degistirmemiz lazim\n_2017 = _2017[['Country','Region', 'Happiness.Score', 'Health..Life.Expectancy.', 'Freedom','Trust..Government.Corruption.', 'Generosity']]\n\n#sutun isimlerini degistirdik\n_2017.columns = ['Country','Region','Happiness Score','Health','Freedom','Corruption','Generosity']\n\n_2017","e977df5d":"# Index(['Country', 'Region', 'Happiness Score',\n#        'Health', 'Freedom','Corruption', 'Generosity'],\n#       dtype='object')\n\n_2018 = pd.read_csv('\/kaggle\/input\/world-happiness\/2018.csv')\n\n_2018.drop('Overall rank', axis = 1, inplace = True) \n_2018.drop('Social support', axis = 1, inplace = True) \n\n_2018.drop('GDP per capita', axis = 1, inplace = True) \n\n# #Region sutunu olmadigi icin onu eklememiz lazim\n_2018['Region'] = '-'\n\n# #sutun adlarinin yerlerini degistirmemiz lazim\n_2018 = _2018[['Country or region','Region', 'Score', 'Healthy life expectancy', 'Freedom to make life choices','Perceptions of corruption', 'Generosity']]\n\n# #sutun isimlerini degistirdik\n_2018.columns = ['Country','Region','Happiness Score','Health','Freedom','Corruption','Generosity']\n\n_2018","4df9ae50":"# Index(['Country', 'Region', 'Happiness Score',\n#        'Health', 'Freedom','Corruption', 'Generosity'],\n#       dtype='object')\n\n_2019 = pd.read_csv('\/kaggle\/input\/world-happiness\/2019.csv')\n\n_2019.drop('Overall rank', axis = 1, inplace = True) \n_2019.drop('GDP per capita', axis = 1, inplace = True) \n_2019.drop('Social support', axis = 1, inplace = True) \n\n# #Region sutunu olmadigi icin onu eklememiz lazim\n_2019['Region'] = '-'\n\n# #sutun adlarinin yerlerini degistirmemiz lazim\n_2019= _2019[['Country or region','Region', 'Score', 'Healthy life expectancy', 'Freedom to make life choices','Perceptions of corruption', 'Generosity']]\n\n# #sutun isimlerini degistirdik\n_2019.columns = ['Country','Region','Happiness Score','Health','Freedom','Corruption','Generosity']\n\n\n_2019","6b446983":"_newdf = pd.concat([_2015,_2016,_2017,_2018,_2019], axis = 0,ignore_index=True) \n_newdf ","0eca3124":"\n\n# _newdf2 = _newdf.groupby('Country').sum()\n\n# _newdf2['Region'] = '-'\n\n# _newdf2 = _newdf2[['Region','Happiness Score','Health','Freedom','Corruption','Generosity']]\n# _newdf2\n\naggregation_functions = {'Happiness Score': 'sum', 'Health': 'sum','Freedom': 'sum','Corruption':'sum','Generosity':'sum', 'Region': 'first'}\n_newdf2 = _newdf.groupby(_newdf['Country']).aggregate(aggregation_functions)\n\n_newdf2.sort_values(by=['Happiness Score'],ascending=False) \n\n\n\n","dea1b204":"for i in _newdf2.Country:\n    print(i)\n    \n        \n","1cee8a60":"* Bu 5 dataseti ulkeleri baz alarak \" Country, Region, (happiness.score = score), Health, Freedom, Corruption, Generosity\" sutunlari olacak sekilde tek bir df'te birlestiriniz. Diger degiskenleri atabilirsiniz.  (Not: Birlestirme islemleri yaparken, gerekirse ek sutunlar olusturabilirsiniz.)\n"}}