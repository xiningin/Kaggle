{"cell_type":{"43040a53":"code","2fe3c190":"code","dc87e508":"code","71702c15":"code","a11e7df4":"code","0df8a3ad":"code","87473c8c":"code","e4f59cd1":"code","64b9bf77":"code","a7f30a91":"code","7afd41fa":"code","f6455da9":"code","91a290ef":"code","04d63c56":"code","2c3937a6":"code","d57063d1":"code","42c8f9f2":"code","29da2889":"code","e66a5d00":"code","fcfe90ad":"code","83e83068":"code","f503486d":"code","1aaf0046":"code","2927e9b8":"code","533c5429":"code","cdbdf823":"code","7958adc8":"code","a4f7622c":"code","5f3cdc91":"code","8a1979c5":"code","653dbd70":"code","dc2d1656":"code","fbfd2722":"code","dd3f4531":"code","653be285":"code","78d31a8a":"code","88917879":"markdown","51f6d5d4":"markdown","2a0db3cd":"markdown","3bc91d67":"markdown","e3e76d7d":"markdown","615cb04d":"markdown","995c3937":"markdown","fcd831b2":"markdown","e4612edd":"markdown","97fe75bc":"markdown","edd03742":"markdown"},"source":{"43040a53":"import pandas as pd\nimport numpy as np\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","2fe3c190":"titanic = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntitanic.head()","dc87e508":"titanic.shape","71702c15":"titanic.isnull().sum()","a11e7df4":"titanic.dtypes","0df8a3ad":"titanic.nunique()","87473c8c":"#Dropping Name as it should not impact survival\n#Dropping Ticket as it has nearly 80% unique values and would not help in prediction\n#Dropping Cabin as it has neaarly 80% missing values\n\ntitanic.drop(['Name', 'Ticket','Cabin'], axis=1, inplace=True)\ntitanic.head()","e4f59cd1":"titanic['Embarked'].unique()","64b9bf77":"#Encoding the categorical data\n\ntitanic.replace({'male': 1, 'female': 0}, inplace=True)\ntitanic.replace({'S':1, 'C':2, 'Q':3}, inplace=True)","a7f30a91":"#Filling missing values\n\ntitanic.interpolate(method='linear', limit_direction='both', inplace=True)","7afd41fa":"titanic.isnull().sum()","f6455da9":"ax = plt.subplots(figsize=(10,5))\nax = sns.heatmap(titanic.corr(), annot=True, linewidths=0.5, cmap='YlGnBu', fmt='.1f')","91a290ef":"titanic.describe()","04d63c56":"x = titanic.iloc[:,2:]\ny = titanic.iloc[:,1]","2c3937a6":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.feature_selection import RFECV\nfrom sklearn.model_selection import StratifiedKFold","d57063d1":"rfc = RandomForestClassifier(random_state=0, n_estimators=120)\nrfecv = RFECV(estimator=rfc, step=1, cv=StratifiedKFold(10), scoring='accuracy')\nrfecv.fit(x,y)","42c8f9f2":"plt.figure(figsize=(10, 5))\nplt.title('Recursive Feature Elimination with Cross-Validation', fontsize=18, fontweight='bold', pad=20)\nplt.xlabel('Number of features selected', fontsize=14, labelpad=20)\nplt.ylabel('% Correct Classification', fontsize=14, labelpad=20)\nplt.plot(range(1, len(rfecv.grid_scores_) + 1), rfecv.grid_scores_, color='#303F9F', linewidth=3)\n\nplt.show()","29da2889":"print('Optimal number of features: {}'.format(rfecv.n_features_))","e66a5d00":"x.drop(x.columns[np.where(rfecv.support_ == False)[0]], axis=1, inplace=True)","fcfe90ad":"x.shape","83e83068":"x.columns","f503486d":"from sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(x,y, test_size=0.2, random_state=0)","1aaf0046":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.metrics import accuracy_score","2927e9b8":"lr = LogisticRegression(random_state=0, solver='liblinear')\ndt = DecisionTreeClassifier(max_depth=2, random_state=0)\nrfc = RandomForestClassifier(n_estimators=120, random_state=0)\nknn = KNeighborsClassifier(n_neighbors=2)\nsvc = SVC(kernel='rbf', random_state=0, gamma='auto')\ngnb = GaussianNB()","533c5429":"models = [lr, dt, rfc, knn, svc, gnb]\nfor model in models:\n    model.fit(x_train,y_train)\n    y_pred = model.predict(x_test)\n    print(model, 'model accuracy is ', accuracy_score(y_test,y_pred))","cdbdf823":"titanic_test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ntitanic_test.head()","7958adc8":"titanic_test.drop(['Name','Ticket','Cabin', 'Embarked'], axis=1, inplace=True)\ntitanic_test.head()","a4f7622c":"titanic_test.replace({'male':1, 'female':0}, inplace=True)","5f3cdc91":"titanic_test.dtypes","8a1979c5":"titanic_test.shape","653dbd70":"titanic_test.isnull().sum()","dc2d1656":"titanic_test.interpolate(method='linear', limit_direction='both', inplace=True)","fbfd2722":"titanic_test.isnull().sum()","dd3f4531":"x_final_pred = titanic_test.iloc[:, 1:]\n\nfinal_pred = rfc.predict(x_final_pred)","653be285":"output = pd.DataFrame(titanic_test['PassengerId'])\noutput['Survived'] = final_pred\noutput.head()","78d31a8a":"output.to_csv('my_submission_subho.csv')","88917879":"# Visualizing the data and looking at the statistics","51f6d5d4":"# Importing key libraries and reading training data","2a0db3cd":"# Exploring the data","3bc91d67":"# Splitting the data into train and test","e3e76d7d":"# Making predictions for the test data","615cb04d":"# Selecting dependent and independent variables","995c3937":"# Preprocessing the data and removing irrelevant features","fcd831b2":"# Selecting the most important features","e4612edd":"# Testing performance of various machine learning models","97fe75bc":" RandomForest performs the best for the data and hence will be used for prediction","edd03742":"# Reading and preprocessing the test data "}}