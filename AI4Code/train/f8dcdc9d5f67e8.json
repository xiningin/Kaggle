{"cell_type":{"62f15462":"code","aa3968e2":"code","28e27b08":"code","618fe28a":"code","a64ae77a":"code","edfe47ee":"code","8bcb84af":"code","488f9e69":"code","306dec81":"code","d1d67cf0":"code","dbee41fd":"code","1a0b65ac":"code","81c446ea":"code","84ef55ca":"code","2056ca88":"code","e73c8724":"code","07ae9e40":"code","55b64550":"code","727f64ac":"code","32a5fd3f":"code","a67a5452":"code","03addbc0":"code","b55d4639":"code","5cf65c42":"code","db515a20":"code","be3e7540":"code","c6320c62":"code","da057ad2":"code","9ec573a7":"markdown","43f17cc5":"markdown","400cb5d6":"markdown","7ebe593f":"markdown","f7256690":"markdown","b7ada163":"markdown","71544502":"markdown","5cd7eaee":"markdown","58a5fbb6":"markdown","fa5b538a":"markdown","687fcd7c":"markdown","e2f62b12":"markdown","95e3a427":"markdown","92cc1fd4":"markdown"},"source":{"62f15462":"import pandas as pd\nimport numpy as np\nimport seaborn as sbn\nimport matplotlib.pyplot as plt\nfrom matplotlib.ticker import AutoMinorLocator\nfrom matplotlib.font_manager import FontProperties\nimport graphviz\nimport os\nfrom pandas_profiling import ProfileReport","aa3968e2":"from sklearn.naive_bayes import GaussianNB # continuous variables (Predictor Variables)\nfrom sklearn.tree import DecisionTreeClassifier, export_graphviz","28e27b08":"from sklearn.metrics import accuracy_score, f1_score, precision_score, recall_score, confusion_matrix\nfrom sklearn.model_selection import GridSearchCV, train_test_split\nfrom sklearn.feature_selection import chi2, f_classif\nfrom sklearn.impute import KNNImputer # Missing values","618fe28a":"Data = pd.read_csv(\"..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv\")\nData_copy = Data.copy()\npd.set_option(\"display.max_columns\", 12)\nData.head()","a64ae77a":"ProfileReport(Data)","edfe47ee":"# Quality > 6 ---> Quality = 1 \/\/ Quality <= 6 ---> Quality = 0\nData[\"quality\"] = np.where(Data[\"quality\"] > 6, 1, 0)","8bcb84af":"Missing_values_percent = 100*(Data.isnull().sum()\/len(Data[\"quality\"]))\nprint(Missing_values_percent)","488f9e69":"fig, ax = plt.subplots(figsize = (50, 18))\nData.boxplot(column= [\"fixed acidity\", \"volatile acidity\", \"citric acid\", \"residual sugar\", \"chlorides\", \"free sulfur dioxide\", \"total sulfur dioxide\", \"density\", \"pH\", \"sulphates\", \"alcohol\"], grid = False)\nax.xaxis.set_minor_locator(AutoMinorLocator())\nax.yaxis.set_minor_locator(AutoMinorLocator())\nax.tick_params(axis = \"both\", direction = \"in\", labelcolor='black', labelsize=25, top = False, right = False)\nax.tick_params(which = \"major\", direction = \"in\", color='black', length=7, width = 3)\nax.tick_params(which = \"minor\", direction = \"in\", color='black', length=4, width = 2, top = False, right = False, bottom = False)\nfor axis in [\"left\", \"bottom\", \"right\", \"top\"]:\n    ax.spines[axis].set_linewidth(1.4)\nplt.show()","306dec81":"Data.dtypes","d1d67cf0":"plt.figure(figsize = (8,8))\nData_copy['quality'].value_counts().plot.pie(autopct=\"%1.2f%%\")\nplt.show()","dbee41fd":"plt.figure(figsize = (8,8))\nData_copy2 = Data.copy()\nData_copy2[\"quality\"] = Data_copy2[\"quality\"].replace({1: \"Quality > 6\", 0: \"Quality $\\leq$ 6\"})\nData_copy2[\"quality\"].value_counts().plot.pie(autopct=\"%1.2f%%\")\nplt.show()","1a0b65ac":"plt.figure(figsize = (50, 50))\nsbn.pairplot(Data, hue = \"quality\")\nplt.show()","81c446ea":"plt.figure(figsize = (14, 9))\nsbn.heatmap(Data.corr(), annot = True, vmin = -1, vmax = +1, cmap = \"coolwarm\",  linewidth = 2.1, linecolor = \"darkblue\")\nplt.show()","84ef55ca":"plt.figure(figsize = (14, 9))\ntriu = np.triu(Data.corr())\nsbn.heatmap(Data.corr(), annot = True, vmin = -1, vmax = +1, cmap = \"coolwarm\", mask = triu)\nplt.show()","2056ca88":"plt.figure(figsize = (14, 9))\ntril = np.tril(Data.corr())\nsbn.heatmap(Data.corr(), annot = True, vmin = -1, vmax = +1, cmap = \"coolwarm\", mask = tril)\nplt.show()","e73c8724":"x = Data.drop(\"quality\", axis = 1)\ny = Data[\"quality\"]\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.33, random_state = 9)","07ae9e40":"criterion = [\"gini\", \"entropy\"]\nModelTree = DecisionTreeClassifier()\nmax_depth = np.array([2, 3, 4, 5, 6, 7, 8, 9])\nmin_samples_split = np.array([2, 3, 4, 5, 6, 7, 8, 9])\nparam_grid = {\"criterion\": criterion, \"max_depth\": max_depth, \"min_samples_split\": min_samples_split}\nGridTree = GridSearchCV(estimator = ModelTree, param_grid = param_grid, cv = 5, n_jobs = 3)\nGridTree.fit(x_train, y_train)\nprint(GridTree.best_estimator_.criterion)\nprint(GridTree.best_estimator_.max_depth)\nprint(GridTree.best_estimator_.min_samples_split)","55b64550":"ModelTree = DecisionTreeClassifier(max_depth = 6, min_samples_split=6)\nModelTree.fit(x_train, y_train)","727f64ac":"Data_dot = export_graphviz(ModelTree, out_file = None, feature_names = list(x_train.columns), filled = True,\n               rounded = True, special_characters = True, leaves_parallel = False, rotate = False)\ngraphviz.Source(Data_dot)","32a5fd3f":"y_predTree = ModelTree.predict(x_test)","a67a5452":"MatrixTree = confusion_matrix(y_test, y_predTree)","03addbc0":"plt.figure(figsize = (7, 7))\nsbn.heatmap(MatrixTree, annot = True, vmin = 0, vmax = 450, cmap = \"coolwarm\",  linewidth = 2.1, linecolor = \"darkblue\")\nplt.show()","b55d4639":"print(f\"Accuracy: {accuracy_score(y_test, y_predTree)}\")\nprint(f\"Recall: {recall_score(y_test, y_predTree)}\")\nprint(f\"Precision: {precision_score(y_test, y_predTree)}\")\nprint(f\"f1_score: {f1_score(y_test, y_predTree)}\")","5cf65c42":"ModelNB = GaussianNB()\nModelNB.fit(x_train, y_train)","db515a20":"y_predNB = ModelNB.predict(x_test)","be3e7540":"MatrixNB = confusion_matrix(y_test, y_predNB)","c6320c62":"plt.figure(figsize = (7, 7))\nsbn.heatmap(MatrixNB, annot = True, vmin = 0, vmax = 450, cmap = \"coolwarm\",  linewidth = 2.1, linecolor = \"darkblue\")\nplt.show()","da057ad2":"print(f\"Accuracy: {accuracy_score(y_test, y_predNB)}\")\nprint(f\"Recall: {recall_score(y_test, y_predNB)}\")\nprint(f\"Precision: {precision_score(y_test, y_predNB)}\")\nprint(f\"f1_score: {f1_score(y_test, y_predNB)}\")","9ec573a7":"# ${\\color{darkred}{3.4.}}$ ${\\color{darkgreen}{\\textbf{Data split}}}$ $\\color{darkred}{\u2713}$","43f17cc5":"![2-1024x727.jpg](attachment:2-1024x727.jpg)","400cb5d6":"${\\color{darkred}{\\textbf{Pearson correlation coefficient}}}$ $\\color{darkgreen}{\u2713}$","7ebe593f":"# $\\large{\\color{darkred}{5.}}$ $\\large{\\color{darkgreen}{\\textbf{Naive Bayes}}}$ $\\color{darkred}{\u2713}$","f7256690":"# $\\large{\\color{darkred}{2.}}$ $\\large{\\color{darkgreen}{\\textbf{Reading the data}}}$ $\\color{darkred}{\u2713}$","b7ada163":"$p = \\dfrac{Cov(x,y)}{\\sigma_{x} \\cdot \\sigma_{y}}$","71544502":"# $\\large{\\color{darkred}{3.}}$ $\\large{\\color{darkgreen}{\\textbf{Data Preprocessing}}}$ $\\color{darkred}{\u2713}$","5cd7eaee":"# ${\\color{darkred}{3.3.}}$ ${\\color{darkgreen}{\\textbf{Analysis}}}$ $\\color{darkred}{\u2713}$","58a5fbb6":"${\\color{darkred}{\\textbf{\"Quality\" is an ordinal variable.}}}$ $\\color{darkgreen}{\u2713}$\n\n${\\color{darkred}{\\textbf{All independent variables are numerical and continuous.}}}$ $\\color{darkgreen}{\u2713}$","fa5b538a":"# ${\\color{darkred}{3.2.}}$ ${\\color{darkgreen}{\\textbf{Dtypes}}}$  $\\color{darkred}{\u2713}$","687fcd7c":"# $\\Large{\\color{darkred}{\\textbf{Naive Bayes vs Decision tree}}}$","e2f62b12":"# $\\large{\\color{darkred}{4.}}$ $\\large{\\color{darkgreen}{\\textbf{Decision Tree}}}$ $\\color{darkred}{\u2713}$","95e3a427":"# $\\large{\\color{darkred}{1.}}$ $\\large{\\color{darkgreen}{\\textbf{Importing Libraries}}}$ $\\color{darkred}{\u2713}$","92cc1fd4":"# ${\\color{darkred}{3.1.}}$ ${\\color{darkgreen}{\\textbf{Missing Values Treatment}}}$  $\\color{darkred}{\u2713}$"}}