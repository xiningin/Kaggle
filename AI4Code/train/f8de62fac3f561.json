{"cell_type":{"8ec364d4":"code","115f0861":"code","20af9cfa":"code","f006e522":"code","4a87c05b":"code","f407a1a0":"code","d33285c8":"code","f6b69b43":"code","5f88ebf1":"code","ecb029b6":"code","a4c2c72e":"code","0f4f5187":"code","49b382be":"code","98331030":"code","9807b3c3":"code","86103024":"code","f65a34cd":"code","603f33a1":"code","393852b1":"code","c99b5cc3":"code","9f024bd7":"code","bd65a268":"code","3a806239":"code","e0bdb9da":"code","fae9287b":"code","b310fce2":"code","41ed44d8":"code","eadf3e17":"code","7949ce0e":"code","2b171934":"code","b778e641":"code","79807631":"code","e3302491":"code","4301f2ae":"code","0243bfa4":"code","b85ff62b":"code","764bf6f2":"code","0f1c3ad8":"markdown","20015e22":"markdown","43eeaa1b":"markdown","17ae888b":"markdown","0b759653":"markdown","bbdb7531":"markdown","721a7ff6":"markdown"},"source":{"8ec364d4":"# lets import pandas package\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"","115f0861":"# reading the train file \ndata = pd.read_csv('..\/input\/train.csv')","20af9cfa":"# lets have a look at this dataset\ndata.head()","f006e522":"# select the name column\nname = data['Name']\ntype(name)\nname.head()","4a87c05b":"# select the name column but result should be a dataframe\nname= data[['Name']]\ntype(name)\nname.head()","f407a1a0":"# select name and sex of the passengers\nname = data[['Name', 'Sex']]\nname.head()","d33285c8":"# select all the record of male passengers\nmale_record = data[(data['Sex']=='male')]\nmale_record.head()","f6b69b43":"# select all the rows where passengers is male and is 20 years or older\nmale_record = data[(data['Sex']=='male')&(data['Age']>= 20)]\nmale_record.head()","5f88ebf1":"# select all the rows where age is null\nage_null = data[(data['Age'].isnull())]\nage_null.head()","ecb029b6":"# select all the rows where cabin is not null\ncabin_value = data[(data['Cabin'].notnull())]\ncabin_value.head()","a4c2c72e":"data.head()","0f4f5187":"# Selecting any row using df.iloc\n# select the first row \ndata.iloc[0]\n# first row can be accessed using 0 ","49b382be":"# select the last row \ndata.iloc[-1]","98331030":"data.iloc[[0]]","9807b3c3":"# select top 10 rows\ndata.iloc[0:11]","86103024":"# select first second, fourth and tenth rows\ndata.iloc[[0,1,3,9]]","f65a34cd":"# select first column\n\ndata.iloc[:,0]","603f33a1":"# select starting three columns\n\ndata.iloc[:,0:3]","393852b1":"# select first, thrid and fifth columns\ndata.iloc[:,[0,2,4]]","c99b5cc3":"# we can access any particluar cell using .iloc\ndata.iloc[0,0]","9f024bd7":"# Select 4th to 6th column in the first row\ndata.iloc[0,3:6]","bd65a268":"# select 4th to 6th column for the first three row\ndata.iloc[0:3,3:6]","3a806239":"# select 2nd, 4th and 7th columns for the first three row\ndata.iloc[0:3,[1,3,6]]","e0bdb9da":"## select 2nd, 4th and 7th columns for the first, three and fifth row\ndata.iloc[[0,2,4],[1,3,6]]","fae9287b":"# df.iloc will return a pandas series if you are selecting only one row. It will return a pandas dataframe when multiple rows are selected.\ntype(data.iloc[0])\ntype(data.iloc[[0]])","b310fce2":"type(data.iloc[:,0])\ntype(data.iloc[:,[0]])","41ed44d8":"data.head()","eadf3e17":"# we cannot use column name here \n# data.iloc[0,'Sex']\n# above will throw an error","7949ce0e":"# select the rows where index = 0\ndata.loc[0]","2b171934":"# select the rows where index=0 and get the output in a dataframe\ndata.loc[[0]]","b778e641":"# select all the rows where index is less than or equal to 10 \ndata.loc[0:11]","79807631":"# select all the rows where index is equal to 0, 5, 10, 20, 50\ndata.loc[[0,5,10,20,50]]","e3302491":"# select the cell where index = 0 and column = Name\ndata.loc[0,'Name']","4301f2ae":"# select the cell where index = 0 and columns are Name, Sex, Ticket\ndata.loc[0,['Name', 'Sex', 'Ticket']]","0243bfa4":"# select the cell where index in in the range from 0 to 11 and columns are Name, Sex, Ticket\ndata.loc[0:11,['Name', 'Sex', 'Ticket']]","b85ff62b":"# select all the data where index is equal to 0,5,10,20,50 and column names are Name, Sex, Ticket\ndata.loc[[0,5,10,20,50], ['Name', 'Sex', 'Ticket']]","764bf6f2":"# select all the data where index is in the range of 0 to 11 and all the columns from name to ticket\ndata.loc[0:11,'Name':'Ticket']","0f1c3ad8":"Selecting using Pandas iloc command :- df.iloc is used to select rows and columns by the order in which they appear in the data frame. \n    You can find total number of rows present in any dataframe by using df.shape[0]. \n    Df.iloc take two arguments. One argument is to specify rows and another is to specify columns. \n    \n","20015e22":"## In this Kernel, I am exploring different Selection method available for Pandas DataFrame. \nI am using Titanic data set for running all the selection methdos. This data can be downloaded from Kaggle Titanic competition page. ","43eeaa1b":"### Selecting a column\n","17ae888b":"### Selecting multiple column","0b759653":"### Making selection based on condition on any column","bbdb7531":"### Exploring df.loc method\n","721a7ff6":"### Exploring df.iloc method"}}