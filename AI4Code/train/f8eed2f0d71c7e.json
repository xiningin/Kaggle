{"cell_type":{"962254ad":"code","64b4c7e6":"code","3c038213":"code","eff7c82b":"code","f9d42e31":"code","7cca5015":"code","65aee656":"code","b67b7e8b":"code","5f1cba0e":"code","a56c6ee1":"code","44e8d7f1":"code","832f12fd":"markdown","e335c589":"markdown"},"source":{"962254ad":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","64b4c7e6":"# Get the Data\ndata = pd.read_csv('\/kaggle\/input\/tabular-playground-series-may-2021\/train.csv')\n","3c038213":"# First 5 rows\nprint(data.head())","eff7c82b":"# Shape of Data\nprint(data.shape)","f9d42e31":"# Number of Unique Target Class\nprint(data.target.unique())","7cca5015":"# Encoding Target Variable\ntarget_dict = {'Class_1' : 0,\n               'Class_2' : 1,\n               'Class_3' : 2,\n               'Class_4' : 3}\ndata['target'] = data['target'].map(target_dict)\n","65aee656":"#Checking Class Imbalance\nprint(data.target.value_counts())\n","b67b7e8b":"# Checking Missing Values\nprint(data.isnull().sum())","5f1cba0e":"# !pip install lazypredict\nfrom lazypredict.Supervised import LazyClassifier\nfrom sklearn.model_selection import train_test_split","a56c6ee1":"# Separate features and target\nX = data.iloc[:,1:-1]\ny= data.target\n\n# Split Train and Test set\nX_train, X_test, y_train, y_test = train_test_split(X, y,test_size=.20,random_state =123)","44e8d7f1":"# LazyClassifier object\nclf = LazyClassifier(verbose=0,ignore_warnings=True, custom_metric=None)\nmodels,predictions = clf.fit(X_train, X_test, y_train, y_test)\nmodel_dictionary = clf.provide_models(X_train,X_test,y_train,y_test)\nprint(models)","832f12fd":"##### Please leave a upvote if found useful.","e335c589":"### Lazy Predict - https:\/\/lazypredict.readthedocs.io\/en\/latest\/"}}