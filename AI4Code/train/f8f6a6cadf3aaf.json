{"cell_type":{"f77c6aea":"code","fdd0b71b":"code","f7cdaac3":"code","f4dd893d":"code","d5d22ae3":"code","1e52de27":"code","66cc9028":"code","83b6197f":"code","d1e865c4":"markdown","e61a27b6":"markdown","0bab2ac2":"markdown","c57f7f3d":"markdown","ea2fff73":"markdown","b31de93b":"markdown","23ec4400":"markdown","b56608bf":"markdown","8d49e217":"markdown"},"source":{"f77c6aea":"import dask.dataframe as dd\n\nfrom pathlib import Path\nfrom plotly.offline import iplot","fdd0b71b":"# path to dataset\ndataset_dir_path = Path('..\/input')\ntraining_data_path = dataset_dir_path \/ 'train.csv'\ntesting_data_path = dataset_dir_path \/ 'test.csv'\nsample_submission_path = dataset_dir_path \/ 'sample_submission.csv'","f7cdaac3":"training_data = dd.read_csv(training_data_path, dtype=str)\ntesting_data = dd.read_csv(testing_data_path, dtype=str)","f4dd893d":"training_data.head()","d5d22ae3":"testing_data.head()","1e52de27":"training_data_columns = list(training_data.columns)\ntesting_data_columns = list(testing_data.columns)\n\nprint(f'Number of training data columns: {len(training_data_columns)}')\nprint(f'Number of testing data columns: {len(testing_data_columns)}')","66cc9028":"print('Column names:')\nprint(training_data_columns)\nprint()\nprint(f'Target column: {set(training_data_columns) - set(testing_data_columns)}')","83b6197f":"for column in testing_data_columns:\n    unique_val_train = sorted(training_data[column].astype(str).drop_duplicates().compute())\n    unique_val_test = sorted(testing_data[column].astype(str).drop_duplicates().compute())\n    first_val_train = unique_val_train[0]\n    last_val_train = unique_val_train[-1]\n    only_in_training = list(set(unique_val_train) - set(unique_val_test))\n    only_in_testing = list(set(unique_val_test) - set(unique_val_train))\n    train_unique_val_count = len(unique_val_train)\n    test_unique_val_count = len(unique_val_test)\n    \n    print(f'{column}:')\n    print(f'unique: {unique_val_train[0:5]}{\"...\" if len(unique_val_train) > 5 else \"\"}')\n    print(f'first val: {first_val_train}')\n    print(f'last val: {last_val_train}')\n    print(f'train unique count: {train_unique_val_count}')\n    print(f'test unique count: {test_unique_val_count}')\n    print(f'only in train: {only_in_training[0:5]}{\"...\" if len(only_in_training) > 5 else \"\"}')\n    print(f'only in test: {only_in_testing[0:5]}{\"...\" if len(only_in_testing) > 5 else \"\"}')\n    print('=================================================================')\n    print()","d1e865c4":"## Import Libraries","e61a27b6":"## Configuration","0bab2ac2":"### Column Names\nCheck the column names and the target column name.  \nWe learn that there are 82 feature columns and the target column name is `HasDetections`","c57f7f3d":"## Columns\nNow we inspect the columns in training data and testing data","ea2fff73":"## Read Data\nThere are several columns contain mixed-type values, so we read them as string","b31de93b":"## Take a look on Data\nHave a look on the training and testing data","23ec4400":"# Exploratory Data Analysis","b56608bf":"### Check Column Values\nNow we would like to know the values of each column. Specifically, we would like to know the unique values and if there is any value that only exists on the training set or vice versa.","8d49e217":"### Number of Columns"}}