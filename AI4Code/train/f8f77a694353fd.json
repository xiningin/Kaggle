{"cell_type":{"a2325bf5":"code","5ebca7a8":"code","a2b347f3":"code","f359a874":"code","7fc3042b":"code","e1e87d6c":"code","f426a7a2":"code","1ae45c0c":"code","5802ce2d":"code","cfecee50":"code","59ad4130":"markdown","3b5516f7":"markdown","8ac4a574":"markdown","8cf6abc1":"markdown","66cc80d2":"markdown","587ed325":"markdown"},"source":{"a2325bf5":"from __future__ import print_function\n\nfrom tensorflow import keras\nfrom keras.datasets import mnist\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Flatten\nfrom keras.layers import Conv2D, MaxPool2D\nfrom keras import backend as k\n","5ebca7a8":"BATCH_SIZE = 32 \nEPOCH = 10\nNUMBER_OF_CLASSES = 10 \nIMG_ROWS, IMG_COLS = 28, 28 \nINPUT_SHAPE = (IMG_ROWS, IMG_COLS,1)\nCLASS_NAMES = ['T-shirt\/top', 'Trouser', 'Pullover', 'Dress', 'Coat',\n               'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']","a2b347f3":"(x_train,y_train),(x_test,y_test)= mnist.load_data()\n\n\nif k.image_data_format() == 'channels_first':\n    x_train = x_train.reshape(x_train.shape[0], 1, IMG_ROWS, IMG_COLS)\n    x_test = x_test.reshape(x_test.shape[0], 1, IMG_ROWS, IMG_COLS)\n    INPUT_SHAPE = (IMG_ROWS, IMG_COLS,1)\nelse:\n    x_train = x_train.reshape(x_train.shape[0],IMG_ROWS, IMG_COLS, 1)\n    x_test = x_test.reshape(x_test.shape[0], IMG_ROWS, IMG_COLS, 1)\n    INPUT_SHAPE = ( IMG_ROWS, IMG_COLS,1)\n    \n\n# normalize the train and test data \nx_train = x_train \/ 255.0\nx_test = x_test \/ 255.0\n\nprint('the test shape', x_train.shape)\nprint('the train shape', x_test.shape)","f359a874":"y_train = keras.utils.to_categorical(y_train, NUMBER_OF_CLASSES)\ny_test = keras.utils.to_categorical(y_test, NUMBER_OF_CLASSES)","7fc3042b":"\nmodel = Sequential()\n\nmodel.add(\n    Conv2D(32, kernel_size = (3,3),\n    activation= 'relu', input_shape = INPUT_SHAPE) )\nmodel.add(Conv2D(64, kernel_size = (3,3),\n             activation= 'relu')) \nmodel.add(MaxPool2D(pool_size =(2,2)))\nmodel.add(Flatten()) \nmodel.add(Dense(100,  activation='relu')) \nmodel.add(Dense(NUMBER_OF_CLASSES,  activation= 'softmax'))\n    \n\n\nmodel.summary()\n","e1e87d6c":"keras.utils.plot_model(model, show_shapes=True)","f426a7a2":"model.compile(loss= keras.losses.categorical_crossentropy,\n              optimizer=keras.optimizers.SGD(learning_rate=0.01,momentum=0.9),\n              metrics=['accuracy'])\n","1ae45c0c":"\nmodel.fit(x_train, y_train,\n          batch_size=BATCH_SIZE,\n          epochs=EPOCH,\n          verbose=1 , validation_data=(x_test, y_test))\n\n","5802ce2d":"score=model.evaluate(x_test,y_test,verbose=0)\nprint('Test loss=',score[0])\nprint('Test_accuarcy',score[1])","cfecee50":"model.save(\"model.h5\")\nprint(\"saved \")","59ad4130":"Please upvote if you like my approach or if you learned something from this notebook. Your support gives me motivation to create interesting stuff. Thank you.\n <img src= \"https:\/\/bea.stollnitz.com\/images\/fashion-pytorch\/1-fashion-nn.png\" alt =\"nuroal network \"  align=\"center\" style='width: 800px;' >","3b5516f7":"# import the libraries ","8ac4a574":"# creating the neural network ","8cf6abc1":"\n# ploting the model ","66cc80d2":"# Fashion mnist\n","587ed325":"# load the data \n"}}