{"cell_type":{"53ebe57b":"code","6e8203ea":"code","92756c3a":"code","0bcd14b6":"code","9a9b0374":"code","dc636877":"code","99482856":"code","b3d94656":"code","2117f04a":"code","6ce5fd04":"code","8a2e4ff7":"code","7d82cff4":"code","3a69df49":"code","74c158d2":"code","fef300dc":"code","72fea670":"code","06d41581":"code","611b1939":"code","5b843077":"code","4eaa4c90":"code","f8f284c9":"markdown","31db3b52":"markdown","efd77fa8":"markdown","5f38950d":"markdown","9745a23a":"markdown","cc48e328":"markdown","c799b171":"markdown","c6f35f53":"markdown","840c9a1f":"markdown","70e94097":"markdown","28050d56":"markdown","bdb06283":"markdown","4c55330b":"markdown","e9437151":"markdown"},"source":{"53ebe57b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6e8203ea":"#! pip install deepspeed mpi4py","92756c3a":"!pip install -q aitextgen #install the main package","0bcd14b6":"from aitextgen import aitextgen","9a9b0374":"! nvidia-smi","dc636877":"ai = aitextgen(tf_gpt2=\"124M\", to_gpu=True)\n","99482856":"input_file = pd.read_csv(\"..\/input\/6000-indian-food-recipes-dataset\/IndianFoodDatasetCSV.csv\")","b3d94656":"pd.set_option('display.max_colwidth', None)","2117f04a":"input_file[\"TranslatedRecipeName\"]  = input_file[\"TranslatedRecipeName\"].str.replace('Recipe','').str.replace('(','').str.replace(')','')","6ce5fd04":"df = pd.DataFrame(input_file[\"TranslatedRecipeName\"])","8a2e4ff7":"df.shape","7d82cff4":"df = df.assign(var1=df['TranslatedRecipeName'].str.split('-')).explode('var1')\n","3a69df49":"df.var1 = df.var1.str.lstrip()","74c158d2":"df.shape","fef300dc":"df.to_csv(\"input_text_cleaned.txt\", columns=[\"var1\"], header=False, index=False)","72fea670":"#from aitextgen.TokenDataset import TokenDataset","06d41581":"#data = TokenDataset('.\/translatedrecipes.csv', line_by_line=True)","611b1939":"ai.train('input_text_cleaned.txt',\n         line_by_line=False,\n         from_cache=False,\n         num_steps=500,\n         generate_every=100,\n         save_every=500,\n         save_gdrive=False,\n         learning_rate=1e-3,\n         fp16=False,\n         batch_size=1, \n         )","5b843077":"ai = aitextgen(model=\".\/trained_model\/pytorch_model.bin\", config=\".\/trained_model\/config.json\", to_gpu=True)","4eaa4c90":"ai.generate(n=3,\n            batch_size=1,\n            max_length=50,\n            temperature=1.0,\n            top_p=0.9)","f8f284c9":"### Here you go \ud83c\udf89 AI Generated Text","31db3b52":"### The usual Kaggle thingy","efd77fa8":"### Load `aitextgen`","5f38950d":"### Install `aitextgen` package","9745a23a":"### Read the Input Dataset","cc48e328":"### Text Cleaning\n","c799b171":"### Save the text (only that column) as a text file ","c6f35f53":"### Know your GPU Config ","840c9a1f":"### Download the 124M GPT2 Model","70e94097":"### Load the newly fine-tuned model which is saved in `trained_model` directory","28050d56":"### More Cleaning","bdb06283":"### Assign the output to a new DataFrame","4c55330b":"### Use the above saved text file for fine-tuning - set the right parameters ","e9437151":"### Avoid Pandas truncating strings - Remove any column width limit"}}