{"cell_type":{"3e26f04f":"code","385c3273":"code","ca2d82e6":"code","69e0ac29":"code","f6054f7c":"code","80ee7f08":"code","7ed1ca7c":"code","a5eebce2":"code","dda94277":"code","841f5e3f":"code","c2d4cd0c":"code","083d3ff2":"code","ff2c1836":"code","39aba31a":"code","96003c03":"code","ac879be8":"code","8b37af69":"code","6ca6b440":"code","c4a9d540":"code","99899c42":"code","0147c0ed":"code","6a66d94e":"code","9e377f0d":"code","94790f03":"code","9d5bb2e1":"code","bc7bf450":"code","df3851a3":"code","ed47220d":"code","14680aed":"code","6cef5e6a":"code","b4c72029":"markdown","e813e84f":"markdown","8e47e960":"markdown","35078cb6":"markdown","4f949af1":"markdown","21290396":"markdown","ffdb3eed":"markdown","33f3f0de":"markdown","158498e2":"markdown","0f6224c5":"markdown","0ac378ca":"markdown","9ba6a30e":"markdown","d646a944":"markdown","6526e9bd":"markdown","6949f44f":"markdown","975b1b5a":"markdown","8aeaa994":"markdown","c8682cdd":"markdown","9cc7382f":"markdown","15029436":"markdown","01f035c8":"markdown"},"source":{"3e26f04f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","385c3273":"!pip install pycaret","ca2d82e6":"!pip install shap","69e0ac29":"import pandas as pd\n\ndataset = pd.read_csv('\/kaggle\/input\/credit-score-prediction\/CreditScore_train.csv', sep=',', encoding='latin-1')\ndataset.head()","f6054f7c":"#check the shape of data\ndataset.shape","80ee7f08":"data = dataset.sample(frac=0.9, random_state=786)\ndata_unseen = dataset.drop(data.index)\n\ndata.reset_index(drop=True, inplace=True)\ndata_unseen.reset_index(drop=True, inplace=True)\n\nprint('Data for Modeling: ' + str(data.shape))\nprint('Unseen Data For Predictions: ' + str(data_unseen.shape))","7ed1ca7c":"from pycaret.regression import *\nexp_reg102 = setup(data = data, target = 'y', session_id=123,\n                  normalize = True, transformation = True, transform_target = True, \n                  combine_rare_levels = True, rare_level_threshold = 0.05,\n                  remove_multicollinearity = True, multicollinearity_threshold = 0.95, \n                  log_experiment = True, experiment_name = 'Credit_Score_1')","a5eebce2":"light_gbm = create_model('lightgbm', round = 6, fold=10)","dda94277":"tuned_light_gbm = tune_model(light_gbm,  round = 6, fold=10)","841f5e3f":"plot_model(tuned_light_gbm, plot = 'error')","c2d4cd0c":"plot_model(tuned_light_gbm, plot='feature')","083d3ff2":"evaluate_model(tuned_light_gbm)","ff2c1836":"interpret_model(tuned_light_gbm, plot='reason', observation=10)","39aba31a":"bagged_light_gbm = ensemble_model(tuned_light_gbm, method = 'Bagging', n_estimators=100)","96003c03":"predict_model(bagged_light_gbm)","ac879be8":"final_bagged_light_gbm = finalize_model(bagged_light_gbm)","8b37af69":"print(final_bagged_light_gbm)","6ca6b440":"unseen_predictions_bagged_light_gbm = predict_model(final_bagged_light_gbm, data=data_unseen)\nunseen_predictions_bagged_light_gbm.head()","c4a9d540":"from pycaret.utils import check_metric\ncheck_metric(unseen_predictions_bagged_light_gbm.y, unseen_predictions_bagged_light_gbm.Label, 'R2')","99899c42":"check_metric(unseen_predictions_bagged_light_gbm.y, unseen_predictions_bagged_light_gbm.Label, 'MSE')","0147c0ed":"save_model(final_bagged_light_gbm,'\/kaggle\/working\/Final Bagged Light GBM Model 14Nov2020')","6a66d94e":"saved_final_bagged_light_gbm = load_model('\/kaggle\/working\/Final Bagged Light GBM Model 14Nov2020')","9e377f0d":"test_dataset = pd.read_csv('\/kaggle\/input\/credit-score-prediction\/CreditScore_test.csv', sep=',', encoding='latin-1')\ntest_dataset.head()","94790f03":"brand_new_unseen_predictions_bagged_light_gbm = predict_model(saved_final_bagged_light_gbm, data=test_dataset)\nbrand_new_unseen_predictions_bagged_light_gbm.head()","9d5bb2e1":"from pycaret.utils import check_metric\ncheck_metric(brand_new_unseen_predictions_bagged_light_gbm.y, brand_new_unseen_predictions_bagged_light_gbm.Label, 'R2')","bc7bf450":"mse = check_metric(brand_new_unseen_predictions_bagged_light_gbm.y, brand_new_unseen_predictions_bagged_light_gbm.Label, 'MSE')\nmse","df3851a3":"rmse = np.sqrt(mse)\nrmse","ed47220d":"check_metric(brand_new_unseen_predictions_bagged_light_gbm.y, brand_new_unseen_predictions_bagged_light_gbm.Label, 'MAPE')","14680aed":"check_metric(brand_new_unseen_predictions_bagged_light_gbm.y, brand_new_unseen_predictions_bagged_light_gbm.Label, 'MAE')","6cef5e6a":"check_metric(brand_new_unseen_predictions_bagged_light_gbm.y, brand_new_unseen_predictions_bagged_light_gbm.Label, 'RMSLE')","b4c72029":"# ** Read the training data **","e813e84f":"# ** Install shap **","8e47e960":"# ** Load the Final Model  - Bagged Light GBM  **","35078cb6":"# ** Separate out the Train\/Test and Validation Data **","4f949af1":"# ** Ensemble Model - Light GBM - Bagging **","21290396":"# ** Evaluate the results on brand new unseen data  - Bagged Light GBM **","ffdb3eed":"# ** Setup the Model **","33f3f0de":"# ** Evaluate the Tuned Light GBM Model **","158498e2":"# ** Install pycaret **","0f6224c5":"# ** Predict Brand New Unseen Data - Bagged Light GBM ** ","0ac378ca":"# ** Finalize Model for Deployment  - Bagged Light GBM **","9ba6a30e":"# ** Create a Light GBM Model **","d646a944":"# ** Interpret the Tuned Light GBM Model **","6526e9bd":"# ** Evalute metrics - Bagged Light GBM **","6949f44f":"# ** Predict on Test \/ Hold-out Sample - Bagged Light GBM **","975b1b5a":"# ** Save the Final Model  - Bagged Light GBM **","8aeaa994":"# ** Tune the Light GBM Model **","c8682cdd":"# ** Plot the Light GBM Model - Feature Importance **","9cc7382f":"# ** Plot the Light GBM Model - Error **","15029436":"# ** Read the Brand New Test Data  - Bagged Light GBM **","01f035c8":"# ** Predict on Unseen Data  - Bagged Light GBM **"}}