{"cell_type":{"3a8edde4":"code","8c6a4d8a":"code","2ad8e39a":"code","c9b2a49a":"code","4687b33f":"code","48dc7ada":"code","0a4ef29f":"code","5e764de8":"code","157b2d9e":"code","1f825064":"code","80c7d57b":"code","b59c2aa8":"code","2c7055e5":"markdown"},"source":{"3a8edde4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport math\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8c6a4d8a":"titanic_train = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntitanic_test  = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntitanic_test.sample()","2ad8e39a":"x=titanic_train.copy()\ny=titanic_train['Survived']\ny.columns=[0]\nx_t=titanic_test.copy()\nx_t.info()","c9b2a49a":"y=pd.DataFrame(y)","4687b33f":"x=x.drop(['PassengerId','Survived','Name','Ticket','Cabin'],axis=1)\nx_t=x_t.drop(['PassengerId','Name','Ticket','Cabin'],axis=1)\nprint(x.head())\nx_t.head()","48dc7ada":"ones=np.ones((891,1))\nones=pd.DataFrame(data=ones,columns=['ones'])\nx=pd.merge(ones,x,left_index=True,right_index=True) #creating bias column of ones.\nx.head()","0a4ef29f":"ones_t=np.ones((418,1))\nones_t=pd.DataFrame(data=ones_t,columns=['ones'])\nx_t=pd.merge(ones_t,x_t,left_index=True,right_index=True) #creating bias column of ones.\nx_t.head()","5e764de8":"x['Sex']=x['Sex'].replace(['male','female'],[1,0])\nx['Embarked']=x['Embarked'].replace(['C','Q','S'],[1,2,3])\nx['Embarked']=x['Embarked'].replace(np.NaN,2)\nmean_age=round(np.mean(x['Age']))\nx['Age']=x['Age'].replace(np.NaN,mean_age)\nm=len(x)\n\nx_t['Sex']=x_t['Sex'].replace(['male','female'],[1,0])\nx_t['Embarked']=x_t['Embarked'].replace(['C','Q','S'],[1,2,3])\nx_t['Embarked']=x_t['Embarked'].replace(np.NaN,2)\nx_t['Fare']=x_t['Fare'].replace(np.NaN,12.459678)\nmean_age=round(np.mean(x_t['Age']))\nx_t['Age']=x_t['Age'].replace(np.NaN,mean_age)\nm_t=len(x_t)","157b2d9e":"#print(x.head())\n#print(x_t.head())\nx_t['Fare'].isnull().values.any()","1f825064":"import sklearn\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn import metrics","80c7d57b":"model=LogisticRegression(C=1E6)\nmodel=model.fit(x,y)\nprediction=model.predict(x_t)","b59c2aa8":"output = pd.DataFrame({'PassengerId': titanic_test.PassengerId, 'Survived': prediction})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","2c7055e5":"## x_t has some missing values fix it"}}