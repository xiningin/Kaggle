{"cell_type":{"8faaf0ed":"code","e34016f1":"code","fef08b09":"code","0f5695a7":"code","fab7339e":"code","06a43475":"markdown","83ec9279":"markdown","23f24615":"markdown","5a38cac4":"markdown","82069319":"markdown","a1c8ef21":"markdown","50f81e73":"markdown","440eb82c":"markdown"},"source":{"8faaf0ed":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)","e34016f1":"train = pd.read_csv(r'\/kaggle\/input\/ventilator-pressure-prediction\/train.csv')\ntrain.head(), ","fef08b09":"print(\"Number of unique breath ID's : \", train['breath_id'].unique() )\nprint('\\n')\nprint(\"Number of unique R : \", train['R'].unique() )\nprint('\\n')\nprint(\"Number of unique C : \", train['C'].unique() )\nprint('\\n')","0f5695a7":"# Read all ID's into a variable\nId = train['breath_id']\n# Enumerate ID and see the unique R & C values\nfor i,Id in enumerate(train['breath_id'].unique()):\n    print(\"ID : \",Id)\n    print(train[train['breath_id']==Id]['R'].unique())\n    print(train[train['breath_id']==Id]['C'].unique())\n    if i==5:\n        break","fab7339e":"import matplotlib.pyplot as plt\ndef plot_graph(ID):\n    column = ['u_in', 'u_out', 'pressure']\n    breath_df = train[train['breath_id']==ID]\n    #Now plot the figure\n    plt.figure(figsize=(12,4))\n    for col in column:\n        plt.plot(breath_df['time_step'], breath_df[col], label=col)\n    r,c = breath_df[['R','C']].values[0]\n    plt.legend()\n    plt.title(f'Breath ID: {ID} R={r} C={c}')\n    #print(breath_df)\n    \n    \n#visulalize based on breath ID's\nfor i,Id in enumerate(train['breath_id'].unique()):\n    if i==10:\n        break\n    plot_graph(Id)","06a43475":"## Get ready for the network","83ec9279":"## Lets see the occurance of R & C with each of the breath ID","23f24615":"## Finding the unique values amoung the variables\n\nHere we need to find the combinations of ID ,R and C to plot them against the time stamp.\nSo lets observe the unique values among the following variables\n* ID\n* R\n* C","5a38cac4":"### Read the train Data \n\n> The most import part of the data is the subjects. Here the subjects are mentioned by **breath_id** and the related values are **u_in, u_out and pressure**\n\n> We will consider these three variables as the values of interest and plot them against the time stamp","82069319":"**Here we can observe that each breath ID has specific R and C comination**","a1c8ef21":"* From our previous observations we concluded that u-out doesnt have any significant effect on the pressure\n* Let's use only two variables here u-in and pressure","50f81e73":"Observed points\n1. The u-out doest show much variations with time\n1. u-in and pressure show some relationship with\n1. pressure drop as there is a drop in u-in.\n1. u-out has a small step when the u-in has a steep drop.","440eb82c":"## Project Explained\n\n**Project Scope** - Clinitians use mechanical ventilators to give oxygen to a sedated patient, But operating a mechanical ventilator is a labourous procedure.\nThere types of ventilators who can work based on the lung output are extremely costly. So there is a gap for a lung ventilation simulator based on deep learning which can adapt to each type of patient. This would reduce the cost of ventilators a lot\n\n**Parameters**\n* U_in - The amount of air allowed into the lungs during inhalation process ( or expansion )\n* U_out - The amount of air pumped out of lungs during exhalation ( or contraction )\n* Pressure - The mesure of pressure when U_In and U_out is happening\n* C - Complience of the lungs or how easily can we strech the lungs. 3 values given ( 10, 20, 50)\n* R - Resistance of lungs. How easy can air go in and out of lungs. 3 values (5, 20, 50)\n\n**Training Data**\n* 7 Columns including ID\n* 2 data types int64 & float 64"}}