{"cell_type":{"71947849":"code","cbc794fa":"code","989bfab7":"code","870451c3":"code","ee9b7a39":"code","4fc85793":"code","42c60b6d":"code","4ddf4985":"code","ddeff18e":"code","4c5d859b":"code","e6447aba":"code","19bd7a1a":"code","fd3c0d17":"code","fac8a396":"code","5ede45ac":"code","5652bab2":"code","f80f815f":"code","713b63a3":"markdown","199e95f1":"markdown","be39571f":"markdown","44c75f39":"markdown","4122640a":"markdown","19a94a1d":"markdown","ed94b633":"markdown","b9f132e4":"markdown","bf8e5628":"markdown","b01a08f6":"markdown","89d66220":"markdown","d56ba4b1":"markdown","82113a03":"markdown","fef15812":"markdown","a89c4cd8":"markdown"},"source":{"71947849":"import sqlite3\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport folium\nfrom folium.plugins import FastMarkerCluster\nfrom branca.colormap import LinearColormap","cbc794fa":"con=sqlite3.connect('..\/input\/california-traffic-collision-data-from-switrs\/switrs.sqlite')\n\nquery='''\nSELECT *\nFROM collisions\nWHERE date(collision_date) BETWEEN date('2020-01-01') and date('2020-12-01')\n'''","989bfab7":"df = pd.read_sql_query(query, con, parse_dates=[\"collision_date\"])\ndf","870451c3":"print(f'Columns with NA: {df.isna().any().sum()}')","ee9b7a39":"# Drop columns with more than 100,000 null values\ndrop = list(df.columns[df.isna().sum() > 100_000])\ndf.drop(drop, axis=1, inplace=True)","4fc85793":"# Fill na with blank string\ndf.fillna('', inplace=True)","42c60b6d":"# Fix collision type and weather conditions which we'll be using for the analysis.\ndf['type_of_collision'] = df['type_of_collision'].replace(\n    ['N', '', 'O'], ['Not Stated', 'Not Stated', 'Others'])\n\ndf['weather_1'] = df['weather_1'].replace('', 'not stated')","4ddf4985":"df.describe()","ddeff18e":"fig, ax = plt.subplots(figsize=(12,5))\n\ncount_date = df.groupby('collision_date').count()['case_id']\nsns.lineplot(x = count_date.index, y=count_date.values, ax=ax)\nplt.show()","4c5d859b":"days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', \n        'Saturday', 'Sunday']\n\nfig, ax = plt.subplots(figsize=(12,5))\ncount_day = df.groupby(\n    df['collision_date'].dt.day_name()).count().reindex(days)['case_id']\nax = sns.barplot(x = count_day.index, y=count_day.values, \n                 hue=count_day.values, order=days, palette='Reds', \n                 dodge=False)\nplt.legend([],[], frameon=False)\nplt.show()","e6447aba":"fig, ax = plt.subplots(figsize=(12,5))\n\ncount_type = (df.groupby('type_of_collision')\n              .count()['case_id']\n              .sort_values(ascending=False))\nax = sns.barplot(x = count_type.index, y=count_type.values, \n                 hue=count_type.values, palette='Reds', \n                 dodge=False)\nplt.legend([],[], frameon=False)\nplt.show()","19bd7a1a":"type_result = (df.groupby('type_of_collision')\n              .mean()[['killed_victims', 'injured_victims']]).reset_index()\ntype_result['total'] = type_result.apply(lambda x: x['killed_victims'] + \n                                         x['injured_victims'], axis=1)\ntype_result = (pd.melt(type_result, id_vars=\"type_of_collision\", \n                       var_name=\"result\", value_name=\"mean\")\n               .sort_values('mean', ascending=False))\n\nsns.catplot(x='type_of_collision', y='mean', hue='result', \n            data=type_result, kind='bar', aspect=2,\n            palette = sns.color_palette(['maroon', 'orange', 'black']))\n\nplt.show()","fd3c0d17":"fig, ax = plt.subplots(figsize=(12,5))\n\ncount_weather = (df.groupby('weather_1')\n              .count()['case_id']\n              .sort_values(ascending=False))\nax = sns.barplot(x = count_weather.index, y=count_weather.values, \n                 hue=count_weather.values, palette='Reds', \n                 dodge=False)\nplt.legend([],[], frameon=False)\nplt.show()","fac8a396":"weather_result = (df.groupby('weather_1')\n              .mean()[['killed_victims', 'injured_victims']]).reset_index()\nweather_result['total'] = weather_result.apply(lambda x: x['killed_victims'] + \n                                         x['injured_victims'], axis=1)\nweather_result = (pd.melt(weather_result, id_vars=\"weather_1\", \n                       var_name=\"result\", value_name=\"mean\")\n               .sort_values('mean', ascending=False))\n\nsns.catplot(x='weather_1', y='mean', hue='result', \n            data=weather_result, kind='bar', aspect=2,\n            palette = sns.color_palette(['maroon', 'orange', 'black']))\nplt.show()","5ede45ac":"loc = df[['latitude', 'longitude']]\nloc = loc[(loc['latitude'] != '') & (loc['longitude'] != '')]","5652bab2":"map1 = folium.Map(location=[36.7358,-119.776],tiles='Stamen Terrain',\n zoom_start=5.5)\n\nfor each in loc[:50000].iterrows():\n    folium.CircleMarker([each[1]['latitude'],each[1]['longitude']],\n                        radius=0.5,\n                        color='red',\n                        popup=str(each[1]['latitude'])+','+str(\n                            each[1]['longitude']),\n                        fill_color='#FD8A6C', opacity=0.25\n                        ).add_to(map1)\n    \nprint('Map of collision occurences')","f80f815f":"map1","713b63a3":"## Import Data","199e95f1":"With the year 2020 coming to an end, how can we not look back to this year without thinking of the pandemic, the lockdown, and how these affected our daily lives. The goal of this notebook is to provide a quick analysis of the collisions in the state of California during the pandemic, and how the lockdown affected the numbers. \n\nThat said, only Jan 2020 - December 2020 data will be used for the analyses, but there's a possibility that said timeframe can be extended depending on how the work progresses. ","be39571f":"### Collision Type","44c75f39":"Number of collisions is correlated with the lockdown implementations in California, which started in March. It also eased down during June which coincides with another increase in number of collisions.","4122640a":"But looking at the result of the collision by weather conditions, `windy` weather results to most injuries\/deaths. Surpringly, `snowing` results to the least injuries, but it it results to most deaths which is an evidence that extra caution should be inplace when driving during winter.","19a94a1d":"Most of the collisions are on the `read end`, followed by `side swipe` and the vehicle `hitting an object`.","ed94b633":"## Quick Cleanup","b9f132e4":"### Collision count over time","bf8e5628":"## Exploratory Data Analysis","b01a08f6":"### Weather Conditions","89d66220":"### Location of Collisions","d56ba4b1":"## Work in progress...\n\nTo-do (ETA Jan 2021):\n\n* EDA extension: compare 2019 numbers to 2020.\n* Apply advanced data mining techniques (high dimensional clustering, outlier analysis).","82113a03":"Count of collisions peak as the weekend approaches, peaking on Fridays. It can be attributed with how people are travelling more during those days.","fef15812":"Looking at the type of collisions, it seems that those involving `pedestrians` results to most injury or even death, followed closely by `broadside` and `head-on` collisions. `Pedestrian`, `head-on` and `overturned` also results to most deaths.\n\nMeanwhile, `sideswipe` and `hit object` causes the least injury or deaths.","a89c4cd8":"Looking at the weather conditions, with `clear` weather, by far, is when most collisions occur but this is probably due to the fact that it is the most frequent weather type."}}