{"cell_type":{"a86fd822":"code","89f386d7":"code","0ade0842":"code","ae0c8f48":"code","fe64c8a5":"code","115b83af":"code","647f0c56":"code","b4740187":"code","dbd346db":"code","68741dcd":"code","20ba4efe":"code","e4ae9c39":"code","f123f37c":"code","0e97791f":"code","e26e45bd":"code","9ea35db3":"code","9504aaae":"code","83fde38b":"code","0889d82c":"code","a07ec334":"code","3c645a58":"code","cfab4de3":"code","8754048e":"code","7d7a848b":"markdown","8e2a7a90":"markdown","e2ed6fbb":"markdown","499b65cd":"markdown"},"source":{"a86fd822":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # this is used for the plot the graph \nimport seaborn as sns # used for plot interactive graph.\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom pylab import rcParams\n# figure size in inches\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","89f386d7":"df = pd.read_csv('\/kaggle\/input\/spotify-dataset-19212020-160k-tracks\/data.csv',index_col=0)\ndf_genre = pd.read_csv('\/kaggle\/input\/spotify-dataset-19212020-160k-tracks\/data_by_genres.csv')\ndf_artist = pd.read_csv('\/kaggle\/input\/spotify-dataset-19212020-160k-tracks\/data_by_artist.csv')\ndf_year = pd.read_csv('\/kaggle\/input\/spotify-dataset-19212020-160k-tracks\/data_by_year.csv')\ndf_genre2 = pd.read_csv('\/kaggle\/input\/spotify-dataset-19212020-160k-tracks\/data_w_genres.csv')\ndf_super_genres = pd.read_json('\/kaggle\/input\/spotify-dataset-19212020-160k-tracks\/super_genres.json')","0ade0842":"df_genre.head()","ae0c8f48":"df.info()","fe64c8a5":"df.isna().sum()","115b83af":"plt.figure(figsize=(16, 8))\nsns.distplot(df.popularity,bins=20)","647f0c56":"plt.figure(figsize=(16, 8))\nax = sns.jointplot(x=df.popularity,y=df[\"duration_ms\"],data=df)","b4740187":"\ndf[\"duration_ms\"].describe()","dbd346db":"df[\"duration_minutes\"] = df[\"duration_ms\"] \/ 60000","68741dcd":"df[df[\"duration_ms\"] == df[\"duration_ms\"].max()]","20ba4efe":"df[\"popularity\"].describe()","e4ae9c39":"df[df[\"popularity\"] > 95][\"name\"]","f123f37c":"plt.figure(figsize=(16, 8))\nsns.set(style=\"whitegrid\")\ncorr = df.corr()\nsns.heatmap(corr,annot=True,cmap=\"coolwarm\")","0e97791f":"sns.clustermap(corr,cmap=\"coolwarm\")","e26e45bd":"plt.figure(figsize=(16, 8))\nsns.set(style=\"whitegrid\")\nx = df.groupby(\"name\")[\"popularity\"].mean().sort_values(ascending=False).head(10)\nax = sns.barplot(x.index, x)\nax.set_title('Top Tracks with Popularity')\nax.set_ylabel('Popularity')\nax.set_xlabel('Tracks')\nplt.xticks(rotation = 90)","9ea35db3":"plt.figure(figsize=(16, 8))\nsns.set(style=\"whitegrid\")\nx = df.groupby(\"artists\")[\"popularity\"].sum().sort_values(ascending=False).head(10)\nax = sns.barplot(x.index, x)\nax.set_title('Top Artists with Popularity')\nax.set_ylabel('Popularity')\nax.set_xlabel('Artists')\nplt.xticks(rotation = 90)","9504aaae":"plt.figure(figsize=(16, 8))\nsns.set(style=\"whitegrid\")\nx = df.groupby(\"year\")[\"id\"].count()\nax= sns.lineplot(x.index,x)\nax.set_title('Count of Tracks added')\nax.set_ylabel('Count')\nax.set_xlabel('Year')","83fde38b":"plt.figure(figsize=(16, 8))\nsns.set(style=\"whitegrid\")\ncolumns = [\"acousticness\",\"danceability\",\"energy\",\"speechiness\",\"liveness\",\"valence\"]\nfor col in columns:\n    x = df.groupby(\"year\")[col].mean()\n    ax= sns.lineplot(x=x.index,y=x,label=col)\nax.set_title('Audio characteristics over year')\nax.set_ylabel('Measure')\nax.set_xlabel('Year')","0889d82c":"plt.figure(figsize=(16, 8))\nsns.set(style=\"whitegrid\")\ncolumns = [\"loudness\"]\nfor col in columns:\n    x = df.groupby(\"year\")[col].mean()\n    ax= sns.lineplot(x=x.index,y=x,label=col)\nax.set_title('tempo')\nax.set_ylabel('Count')\nax.set_xlabel('Year')","a07ec334":"plt.figure(figsize=(16, 8))\nsns.set(style=\"whitegrid\")\ncolumns = [\"tempo\"]\nfor col in columns:\n    x = df.groupby(\"year\")[col].mean()\n    ax= sns.lineplot(x=x.index,y=x,label=col)\nax.set_title('tempo')\nax.set_ylabel('Count')\nax.set_xlabel('Year')","3c645a58":"df.duration_ms.sum()\/(1000*60*60*24*365)","cfab4de3":"df.columns","8754048e":"# Popularity of Genres with respect to the various features\nplt.figure(figsize=(16, 8))\nsns.set(style=\"whitegrid\")\ncols = [\"valence\",\"popularity\",\"acousticness\",\"instrumentalness\",\"speechiness\",\"danceability\" ]\nsns.pairplot(df_genre[cols], height = 2.5 )\nplt.show();","7d7a848b":"# Time Analysis","8e2a7a90":"# Observations\n\n* Mostly 2000 songs are added for each year on spotify\n* \"Brown Noise - 90 Minutes\" is the Song with the longest duration\n* \"Blinding Lights\" is the most popular song, followed by \"Toosie Slide\",\"ROCKSTAR (feat. Roddy Ricch)\",\"THE SCOTTS\",\"Say So\" and \"The Box\"\n*  Highest mean rating is \"Russian Dance\" followed by \"circuit\"\n*  Highest rated artist is the \"The Scotts\"\n*  Tracks have become more **Energetic** and **Danceable** in the recent years. The **loudness** and **tempo** has also increased.\n* The tracks have become less \"**Acoustic**\"\n* Spotify has 454.06 days of music or 1.24 year of continous listening. In other words it will take 1.24 years for you to listen to all the songs\n* Valence and Danceability are highly related and so is speechiness and Danceability\n\n\nVersion 12: \n- Added the pairplot for generes and fixed the memory overutilization issue.\n\n","e2ed6fbb":"Popular song with highest average rating - [Death Bed - Coffee for your head](https:\/\/www.youtube.com\/watch?v=jJPMnTXl63E)","499b65cd":"# Spotify\n\nUnderstanding the spotify data\n\n![Spotify Logo](https:\/\/www.scdn.co\/i\/_global\/open-graph-default.png)\n- This EDA would be based on Seaborn library.\n\n\n\n**Audio Features Object**\n\nReference - https:\/\/developer.spotify.com\/documentation\/web-api\/reference\/tracks\/get-audio-features\/\n\n\n* duration_ms - The duration of the track in milliseconds.\n* key - The estimated overall key of the track. Integers map to pitches using standard Pitch Class notation . E.g. 0 = C, 1 = C\u266f\/D\u266d, 2 = D, and so on. If no key was detected, the value is -1.\n* mode - Mode indicates the modality (major or minor) of a track, the type of scale from which its melodic content is derived. Major is represented by 1 and minor is 0.\n* time_signature - An estimated overall time signature of a track. The time signature (meter) is a notational convention to specify how many beats are in each bar (or measure).\n* acousticness - A confidence measure from 0.0 to 1.0 of whether the track is acoustic. 1.0 represents high confidence the track is acoustic. The distribution of values for this feature look like this: Acousticness distribution\n* danceability - Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. A value of 0.0 is least danceable and 1.0 is most danceable. The distribution of values for this feature look like this: Danceability distribution\n* energy - Energy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy. For example, death metal has high energy, while a Bach prelude scores low on the scale. Perceptual features contributing to this attribute include dynamic range, perceived loudness, timbre, onset rate, and general entropy. The distribution of values for this feature look like this: Energy distribution\n* instrumentalness - Predicts whether a track contains no vocals. \u201cOoh\u201d and \u201caah\u201d sounds are treated as instrumental in this context. Rap or spoken word tracks are clearly \u201cvocal\u201d. The closer the instrumentalness value is to 1.0, the greater likelihood the track contains no vocal content. Values above 0.5 are intended to represent instrumental tracks, but confidence is higher as the value approaches 1.0. The distribution of values for this feature look like this: Instrumentalness distribution\n* liveness - Detects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. A value above 0.8 provides strong likelihood that the track is live. The distribution of values for this feature look like this: Liveness distribution\n* loudness - The overall loudness of a track in decibels (dB). Loudness values are averaged across the entire track and are useful for comparing relative loudness of tracks. Loudness is the quality of a sound that is the primary psychological correlate of physical strength (amplitude). Values typical range between -60 and 0 db. The distribution of values for this feature look like this: Loudness distribution\n* speechiness - Speechiness detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value. Values above 0.66 describe tracks that are probably made entirely of spoken words. Values between 0.33 and 0.66 describe tracks that may contain both music and speech, either in sections or layered, including such cases as rap music. Values below 0.33 most likely represent music and other non-speech-like tracks. The distribution of values for this feature look like this: Speechiness distribution\n* valence - A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry). The distribution of values for this feature look like this: Valence distribution\n* tempo - The overall estimated tempo of a track in beats per minute (BPM). In musical terminology, tempo is the speed or pace of a given piece and derives directly from the average beat duration. The distribution of values for this feature look like this: Tempo distribution\n* id - \tThe Spotify ID for the track.\n* type - \tThe object type: \u201caudio_features\u201d\n* popularity - The popularity of the track. The value will be between 0 and 100, with 100 being the most popular. The popularity is calculated by algorithm and is based, in the most part, on the total number of plays the track has had and how recent those plays are. Generally speaking, songs that are being played a lot now will have a higher popularity than songs that were played a lot in the past. Artist and album popularity is derived mathematically from track popularity. Note that the popularity value may lag actual popularity by a few days: the value is not updated in real time.\n\n"}}