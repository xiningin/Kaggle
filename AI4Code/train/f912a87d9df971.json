{"cell_type":{"5cfd0ce0":"code","0b562b7a":"code","f86a61ce":"code","28c15128":"code","f308354d":"code","bf7b4f77":"code","e9298706":"code","7da57acc":"code","8d2b7f7a":"code","15f71f92":"code","2aef7643":"code","e171919e":"markdown","a603b54f":"markdown","4053ce03":"markdown","ccb6de3b":"markdown","aaed5e21":"markdown","066e2cf2":"markdown"},"source":{"5cfd0ce0":"import time\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport matplotlib\nfrom matplotlib.pyplot import figure\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\n%matplotlib inline","0b562b7a":"sns.set_context('talk')\nmatplotlib.rcParams['font.family'] = 'arial'","f86a61ce":"df = pd.read_csv(\"..\/input\/nifty_500_stats.csv\", \n                              sep=';', \n                              encoding='utf-8', \n                              thousands=',',\n                              na_values='None'\n                             )\ndel df['Unnamed: 0']\ndf['price_bookvalue'] = np.round(df.current_value \/ df.book_value, 2)\ndf['peg3'] = df.price_earnings \/ df.sales_growth_3yr\n\n# display(df.info())\ndf.sample(5).T","28c15128":"df = df.fillna(0)","f308354d":"ind_ratio = pd.DataFrame(df.groupby('industry')['price_earnings'].quantile(.8)).reset_index()\nind_ratio = ind_ratio.rename(columns = {'price_earnings': 'ind_pe80'})\ndf = pd.merge(df, ind_ratio,  how='left', left_on=['industry'], right_on = ['industry'])\n\n# Above avg ROCE and ROE\nind_ratio = pd.DataFrame(df.groupby('industry')['roce', 'roe'].mean()).reset_index()\nind_ratio = ind_ratio.rename(columns = {'roce': 'ind_roce50',\n                                       'roe': 'ind_roe50'})\ndf = pd.merge(df, ind_ratio,  how='left', left_on=['industry'], right_on = ['industry'])","bf7b4f77":"f = {'market_cap':['sum'], 'company':['count']}\n\nindustries = df.groupby('industry').agg(f)\nindustries.columns = industries.columns.get_level_values(0)\nindustries = industries.reset_index()\nindustries['company'] = 100*industries['company'] \/ industries['company'].sum()\nindustries['market_cap'] = 100*industries['market_cap'] \/ industries['market_cap'].sum()\nindustries = industries.sort_values('market_cap', ascending=False)\n\nfig = figure(num=None, figsize=(12, 8), dpi=80, facecolor='w', edgecolor='k')\n\nplt.subplot(1, 2, 1)\nax1 = sns.barplot(x=\"company\", y=\"industry\", data=industries, palette=(\"Greys_d\"))\nax1.set_xlabel('Percentage of Companies', weight='bold')\nax1.set_ylabel('Industry', weight = 'bold')\nax1.set_title('Nifty 500 sector breakdown\\n')\n\nplt.subplot(1, 2, 2)\nax2 = sns.barplot(x=\"market_cap\", y=\"industry\", data=industries, palette=(\"Greens_d\"))\nax2.set_xlabel('Market Capitalization', weight='bold')\nax2.set_ylabel('')\nax2.set_yticks([])\n\nsns.despine()\nplt.tight_layout();","e9298706":"f = {'price_bookvalue':['mean'], 'price_earnings':['mean'], 'peg3':['mean']}\n\nratios = df.groupby('industry').agg(f)\nratios.columns = ratios.columns.get_level_values(0)\nratios = ratios.reset_index()\nratios = ratios.sort_values('price_earnings', ascending=False)\n\nfig = figure(num=None, figsize=(12, 8), dpi=80, facecolor='w', edgecolor='k')\n\nplt.subplot(1, 3, 1)\nax1 = sns.barplot(x=\"price_bookvalue\", y=\"industry\", data=ratios, palette=(\"Greys_d\"))\nax1.set_xlabel('P\/B', weight='bold')\nax1.set_ylabel('Industry', weight = 'bold')\nax1.set_title('Average across industries\\n')\n\nplt.subplot(1, 3, 2)\nax2 = sns.barplot(x=\"price_earnings\", y=\"industry\", data=ratios, palette=(\"Greens_d\"))\nax2.set_xlabel('P\/E', weight='bold')\nax2.set_ylabel('')\nax2.set_yticks([])\n\nplt.subplot(1, 3, 3)\nax2 = sns.barplot(x=\"peg3\", y=\"industry\", data=ratios, palette=(\"Greens_d\"))\nax2.set_xlabel('PEG3', weight='bold')\nax2.set_ylabel('')\nax2.set_yticks([])\n\nsns.despine()\nplt.tight_layout();","7da57acc":"df_1 = df.copy()\nprint('Total:', df_1.shape[0])\nprint('\\n')\n\ndf_filter = df_1[(df_1.price_bookvalue > 0)]\nremoved = list(set(df_1.symbol) - set(df_filter.symbol))\n\nprint('P\/B > 0 :', df_filter.shape[0])\nprint('Removed: ', len(removed))\nprint(removed)\nprint('\\n')\n\n# P\/E > 0%\ndf_1 = df_filter.copy()\ndf_filter = df_1[(df_1.price_earnings > 0)]\nremoved = list(set(df_1.symbol) - set(df_filter.symbol))\n\nprint('P\/E > 0 :', df_filter.shape[0])\nprint('Removed: ', len(removed))\nprint(removed)\nprint('\\n')\n\ndf_1 = df_filter.copy()\ndf_filter = df_1[(df_1.peg3 > 0)]\nremoved = list(set(df_1.symbol) - set(df_filter.symbol))\n\nprint('P\/E to Sales growth in 3yrs > 0 :', df_filter.shape[0])\nprint('Removed: ', len(removed))\nprint(removed)\nprint('\\n')\n\ndf_1 = df_filter.copy()\ndf_filter = df_1[(df_1.price_bookvalue <= df.price_bookvalue.quantile(.8))]\nremoved = list(set(df_1.symbol) - set(df_filter.symbol))\n\nprint('P\/B <= 80 precentile of Nifty 500 :', df_filter.shape[0])\nprint('Removed: ', len(removed))\nprint(removed)\nprint('\\n')\n\n# P\/E <= 80 percentile of Industry\ndf_1 = df_filter.copy()\ndf_filter = df_1[(df_1.price_earnings <= df_1.ind_pe80)]\nremoved = list(set(df_1.symbol) - set(df_filter.symbol))\n\nprint('P\/E <= 80 precentile of Industry :', df_filter.shape[0])\nprint('Removed: ', len(removed))\nprint(removed)\nprint('\\n')\n\n# Above avg ROCE\ndf_1 = df_filter.copy()\ndf_filter = df_1[(df_1.roce > df_1.ind_roce50)]\nremoved = list(set(df_1.symbol) - set(df_filter.symbol))\n\nprint(\"ROCE above Industry's average :\", df_filter.shape[0])\nprint('Removed: ', len(removed))\nprint(removed)\nprint('\\n')\n\n# Above avg ROE\ndf_1 = df_filter.copy()\ndf_filter = df_1[(df_1.roe > df_1.ind_roe50)]\nremoved = list(set(df_1.symbol) - set(df_filter.symbol))\n\nprint(\"ROE above Industry's average :\", df_filter.shape[0])\nprint('Removed: ', len(removed))\nprint(removed)\nprint('\\n')\n\ndf_1 = df_filter.copy()","8d2b7f7a":"del df_1['ind_pe80']\ndel df_1['ind_roce50']\ndel df_1['ind_roe50']","15f71f92":"from scipy.stats import norm\n\nfig = figure(num=None, figsize=(12, 8), dpi=80, facecolor='w', edgecolor='k')\n\nplt.subplot(2, 3, 1)\nax1 = sns.distplot(df_1.price_bookvalue, rug=True, kde=True) \n\nplt.subplot(2, 3, 2)\nax2 = sns.distplot(df_1.price_earnings, rug=True, kde=True) \n\nplt.subplot(2, 3, 3)\nax3 = sns.distplot(df_1.roce, rug=True, kde=True) \n\nplt.subplot(2, 3, 4)\nax4 = sns.distplot(df_1.roe, rug=True, kde=True) \n\nplt.subplot(2, 3, 5)\nax5 = sns.distplot(df_1.dividend_yield, rug=True, kde=True) \n\nplt.subplot(2, 3, 6)\nax6 = sns.distplot(df_1.sales_growth_3yr, rug=True, kde=True) \n\nsns.despine()\nplt.tight_layout();","2aef7643":"print(\"Number of stocks by market capitalization:\")\ndisplay(df_1.groupby('category')['company'].size())\n\n# Nifty 50 \nprint(\"Nifty 50:\")\ndisplay(df_1[(df_1.category == 'Nifty 50')].symbol.values)\n\n# Nifty Next 50\nprint(\"Nifty Next 50:\")\ndisplay(df_1[(df_1.category == 'Nifty Next 50')].symbol.values)\n\n# Nifty Midcap 150 \nprint(\"Nifty Midcap 150:\")\ndisplay(df_1[(df_1.category == 'Nifty Midcap 150')].symbol.values)\n\n# Nifty Smallcap 250 \nprint(\"Nifty Smallcap 250:\")\ndisplay(df_1[(df_1.category == 'Nifty Smallcap 250')].symbol.values)","e171919e":"<h1>Table of Contents<span class=\"tocSkip\"><\/span><\/h1>\n<div class=\"toc\"><ul class=\"toc-item\"><li><span><a href=\"#Get-fundamental-data\" data-toc-modified-id=\"Get-fundamental-data-1\"><span class=\"toc-item-num\">1&nbsp;&nbsp;<\/span>Get fundamental data<\/a><\/span><\/li><li><span><a href=\"#Nifty-500-sector-breakdown\" data-toc-modified-id=\"Nifty-500-sector-breakdown-2\"><span class=\"toc-item-num\">2&nbsp;&nbsp;<\/span>Nifty 500 sector breakdown<\/a><\/span><\/li><li><span><a href=\"#Filter-based-on-fundamentals\" data-toc-modified-id=\"Filter-based-on-fundamentals-3\"><span class=\"toc-item-num\">3&nbsp;&nbsp;<\/span>Filter based on fundamentals<\/a><\/span><\/li><li><span><a href=\"#Visualize-selected-stocks\" data-toc-modified-id=\"Visualize-selected-stocks-4\"><span class=\"toc-item-num\">4&nbsp;&nbsp;<\/span>Visualize selected stocks<\/a><\/span><\/li><\/ul><\/div>","a603b54f":"## Nifty 500 sector breakdown","4053ce03":"## Filter based on fundamentals","ccb6de3b":"## Get fundamental data","aaed5e21":"# Equity Investing -  Fundamental Analysis\n\nFilter stocks based on fundamentals","066e2cf2":"## Visualize selected stocks"}}