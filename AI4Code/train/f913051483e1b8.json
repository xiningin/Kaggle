{"cell_type":{"2fff1eee":"code","4da92e56":"code","9e24089b":"code","2ba5c455":"code","b7a84227":"code","da793d27":"code","cefe649e":"code","6f3d1b53":"code","87f1afa5":"code","c525d299":"code","a274f74f":"code","e1ce1faf":"code","a5614ddf":"code","789cb948":"code","dbc316e6":"code","40d5a55e":"code","ffc6840f":"code","5360c471":"code","86f11b51":"code","7b9c6646":"code","bc11064c":"code","10209262":"code","906de586":"code","8db3a975":"code","5098ba6c":"code","65f5b26e":"code","b6bc77db":"code","a0143733":"code","c947dc17":"code","6f7eb103":"code","0c01de09":"code","197cb83b":"code","a02ac94f":"code","f5623bb0":"markdown","a64ac5ba":"markdown","c8afc9ff":"markdown","12a4b314":"markdown","5ebd71df":"markdown","5a10e80f":"markdown","df99cffb":"markdown","8d43ae77":"markdown","dd3b6bea":"markdown","7c0edb03":"markdown","97cd59d8":"markdown","23fa2b38":"markdown","d38fb686":"markdown","689159af":"markdown","94467381":"markdown","328c7c27":"markdown","03bbb866":"markdown"},"source":{"2fff1eee":"# warnings\u3092\u7121\u8996\u3059\u308b\nimport warnings\nwarnings.filterwarnings('ignore')","4da92e56":"import numpy as np\nimport pandas as pd\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport japanize_matplotlib ","9e24089b":"df_train = pd.read_csv(\"..\/input\/train.csv\")\ndf_test = pd.read_csv(\"..\/input\/test.csv\")\ndf_gender_submission = pd.read_csv(\"..\/input\/gender_submission.csv\")","2ba5c455":"# \u672c\u6587\u306b\u306f\u306a\u3044\u3001\u30ec\u30a4\u30a2\u30a6\u30c8\u8a2d\u5b9a\u7528\n# sns.set_palette(\"Blues_r\", 3) # \u9752\uff13\u8272\u306e\u30b9\u30bf\u30a4\u30eb\n\n\n# fontsize\u306e\u8a2d\u5b9a\nplt.rcParams[\"font.size\"] = 18\n\n# \u30b5\u30a4\u30ba\u306e\u8a2d\u5b9a\nplt.rcParams['figure.figsize'] = (8.0, 6.0)","b7a84227":"df_train.head(5)","da793d27":"print(df_train.shape) # \u5b66\u7fd2\u7528\u30c7\u30fc\u30bf\nprint(df_test.shape) # \u672c\u756a\u4e88\u6e2c\u7528\u30c7\u30fc\u30bf\nprint(df_gender_submission.shape) # \u63d0\u51fa\u30c7\u30fc\u30bf\u306e\u30b5\u30f3\u30d7\u30eb","cefe649e":"print(df_train.columns) # \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u306e\u5217\u540d\nprint('-'*10) # \u533a\u5207\u308a\u3092\u633f\u5165\nprint(df_test.columns) # \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u5217\u540d","6f3d1b53":"df_train.info()","87f1afa5":"df_test.info()","c525d299":"df_train.head()","a274f74f":"df_train.isnull().sum() \n# isnull()\u306f\u3001\u6b20\u640d\u5024\u306b\u5bfe\u3057True\u3092\u8fd4\u3057\u3001\u6b20\u640d\u5024\u4ee5\u5916\u306b\u306fFalse\u3092\u8fd4\u3059\n# sum()\u306f\u3001True\u30921\u3001False\u30920\u3068\u3057\u3066\u5408\u8a08\u3059\u308b\n# \u3088\u3063\u3066df.isnull().sum()\u3067\u6b20\u640d\u5024\u3092\u7b97\u51fa\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b","e1ce1faf":"df_test.isnull().sum()","a5614ddf":"# df_train\u3068df_Test\u3092\u7e26\u306b\u9023\u7d50\ndf_full = pd.concat([df_train, df_test], axis = 0, ignore_index=True)\n\nprint(df_full.shape) # df_full\u306e\u884c\u6570\u3068\u5217\u6570\u3092\u78ba\u8a8d\n\ndf_full.describe() # df_full\u306e\u8981\u7d04\u7d71\u8a08\u91cf","789cb948":"df_full.describe(include = 'all')","dbc316e6":"df_full.describe(include=['O'])","40d5a55e":"df_full.describe(percentiles=[.1, .2, .3, .4, .5, .6, .7, .8, .9, .99])","ffc6840f":"sns.countplot(x='Survived', data=df_train)\nplt.title('\u6b7b\u4ea1\u8005\u3068\u751f\u5b58\u8005\u306e\u6570')\nplt.xticks([0,1],['\u6b7b\u4ea1\u8005', '\u751f\u5b58\u8005'])\nplt.show()\n\n# \u6b7b\u4ea1\u8005\u3068\u751f\u5b58\u8005\u6570\u3092\u8868\u793a\u3059\u308b\ndisplay(df_train['Survived'].value_counts())\n\n# \u6b7b\u4ea1\u8005\u3068\u751f\u5b58\u8005\u5272\u5408\u3092\u8868\u793a\u3059\u308b\ndisplay(df_train['Survived'].value_counts()\/len(df_train['Survived']))","5360c471":"# \u7537\u5973\u5225\u306e\u751f\u5b58\u8005\u6570\u3092\u53ef\u8996\u5316\nsns.countplot(x='Sex', hue='Survived', data=df_train)\n# plt.xticks([0.0,1.0], ['\u6b7b\u4ea1','\u751f\u5b58'])\n# plt.title('\u7537\u5973\u5225\u306e\u6b7b\u4ea1\u8005\u3068\u751f\u5b58\u8005\u306e\u6570')\n# plt.show()\n\nplt.title('\u7537\u5973\u5225\u306e\u6b7b\u4ea1\u8005\u3068\u751f\u5b58\u8005\u306e\u6570')\nplt.legend(['\u6b7b\u4ea1','\u751f\u5b58'])\nplt.show()\n\n# Sex\u3068Survived\u3092\u30af\u30ed\u30b9\u96c6\u8a08\u3059\u308b\ndisplay(pd.crosstab(df_train['Sex'], df_train['Survived']))\n\n# \u30af\u30ed\u30b9\u96c6\u8a08\u3057Sex\u3054\u3068\u306b\u6b63\u898f\u5316\u3059\u308b\ndisplay(pd.crosstab(df_train['Sex'], df_train['Survived'],normalize = 'index'))","86f11b51":"# \u30c1\u30b1\u30c3\u30c8\u30af\u30e9\u30b9\u5225\u306e\u751f\u5b58\u8005\u6570\u3092\u53ef\u8996\u5316\nsns.countplot(x='Pclass', hue='Survived', data=df_train)\nplt.title('\u30c1\u30b1\u30c3\u30c8\u30af\u30e9\u30b9\u5225\u306e\u6b7b\u4ea1\u8005\u3068\u751f\u5b58\u8005\u306e\u6570')\nplt.legend(['\u6b7b\u4ea1','\u751f\u5b58'])\nplt.show()\n\n# Pclass\u3068Survived\u3092\u30af\u30ed\u30b9\u96c6\u8a08\u3059\u308b\ndisplay(pd.crosstab(df_train['Pclass'], df_train['Survived']))\n\n# \u30af\u30ed\u30b9\u96c6\u8a08\u3057Pclass\u3054\u3068\u306b\u6b63\u898f\u5316\u3059\u308b\ndisplay(pd.crosstab(df_train['Pclass'], df_train['Survived'],normalize = 'index'))","7b9c6646":"sns.set_palette('pastel')\n# \u5168\u4f53\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\nsns.distplot(df_train['Age'].dropna(), kde=False, bins = 30 ,label='\u5168\u4f53')\n\n# \u6b7b\u4ea1\u8005\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\nsns.distplot(df_train[df_train['Survived'] == 0].Age.dropna(), kde = False, bins=30, label='\u6b7b\u4ea1')\n\n# \u751f\u5b58\u8005\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\nsns.distplot(df_train[df_train['Survived'] == 1].Age.dropna(), kde = False, bins=30, label='\u751f\u5b58')\n\nplt.title('\u4e57\u8239\u8005\u306e\u5e74\u9f62\u306e\u5206\u5e03') # \u30bf\u30a4\u30c8\u30eb\nplt.legend() # \u51e1\u4f8b\u3092\u8868\u793a;","bc11064c":"# \u5e74\u9f62\u3092\uff18\u7b49\u5206\u3057\u3001CategoricalAge\u3068\u3044\u3046\u5909\u6570\u3092\u4f5c\u6210\ndf_train['CategoricalAge'] = pd.cut(df_train['Age'], 8)\n\n# CategoricalAge\u3067\u30b0\u30eb\u30fc\u30d4\u30f3\u30b0\u3057\u3066\u3001Survived\u3092\u5e73\u5747\ndf_train[['CategoricalAge', 'Survived']].groupby(['CategoricalAge'], as_index=False).mean()","10209262":"sns.countplot(x='SibSp', data = df_train, color='cornflowerblue')\n\nplt.title(\"\u540c\u4e57\u3057\u3066\u3044\u308b\u5144\u5f1f\u30fb\u914d\u5076\u8005\u306e\u6570\", fontsize = 20);","906de586":"# SibSp\u304c0\u304b1\u3067\u3042\u308c\u3070\u305d\u306e\u307e\u307e\u30012\u4ee5\u4e0a\u3067\u3042\u308c\u30702\u3067\u3042\u308b\u7279\u5fb4\u91cfSibSp_0_1_2over\u3092\u4f5c\u6210\ndf_train['SibSp_0_1_2over'] = [i if i <=1 else 2 for i in df_train['SibSp']]\n\n# SibSp_0_1_2over\u3054\u3068\u306b\u96c6\u8a08\u3057\u3001\u53ef\u8996\u5316 \nsns.countplot(x = 'SibSp_0_1_2over', hue = 'Survived', data = df_train)\nplt.legend(['\u6b7b\u4ea1', '\u751f\u5b58'])\nplt.xticks([0,1,2], ['0\u4eba', '1\u4eba', '2\u4eba\u4ee5\u4e0a'])\nplt.title('\u540c\u4e57\u3057\u3066\u3044\u308b\u5144\u5f1f\u30fb\u914d\u5076\u8005\u306e\u6570\u5225\u306e\u6b7b\u4ea1\u8005\u3068\u751f\u5b58\u8005\u306e\u6570')\nplt.show()\n\n# SibSp\u3068Survived\u3092\u30af\u30ed\u30b9\u96c6\u8a08\u3059\u308b\ndisplay(pd.crosstab(df_train['SibSp_0_1_2over'], df_train['Survived']))\n\n# \u30af\u30ed\u30b9\u96c6\u8a08\u3057SibSp\u3054\u3068\u306b\u6b63\u898f\u5316\u3059\u308b\ndisplay(pd.crosstab(df_train['SibSp_0_1_2over'], df_train['Survived'], normalize = 'index'))","8db3a975":"sns.countplot(x='Parch', data = df_train)\nplt.title('\u540c\u4e57\u3057\u3066\u3044\u308b\u4e21\u89aa\u30fb\u5b50\u4f9b\u306e\u6570');","5098ba6c":"# 2\u4ee5\u4e0b\u3067\u3042\u308c\u3070\u305d\u306e\u307e\u307e\u306e\u6570\u30013\u4ee5\u4e0a\u306f3\u3068\u3044\u3046\u5909\u63db\u3092\u884c\u3046\ndf_train['Parch_0_1_2_3over'] = [i if i <=2 else 3 for i in df_train['Parch']]\n\n# Parch_0_1_2_3over\u3054\u3068\u306b\u96c6\u8a08\u3057\u53ef\u8996\u5316\nsns.countplot(x='Parch_0_1_2_3over',hue='Survived', data = df_train)\nplt.title('\u540c\u4e57\u3057\u3066\u3044\u308b\u4e21\u89aa\u30fb\u5b50\u4f9b\u306e\u6570\u5225\u306e\u6b7b\u4ea1\u8005\u3068\u751f\u5b58\u8005\u306e\u6570')\nplt.legend(['\u6b7b\u4ea1','\u751f\u5b58'])\nplt.xticks([0, 1, 2, 3], ['0\u4eba', '1\u4eba', '2\u4eba', '3\u4eba\u4ee5\u4e0a'])\nplt.xlabel('Parch')\nplt.show()\n\n# Parch\u3068Survived\u3092\u30af\u30ed\u30b9\u96c6\u8a08\u3059\u308b\ndisplay(pd.crosstab(df_train['Parch_0_1_2_3over'], df_train['Survived']))\n\n# \u30af\u30ed\u30b9\u96c6\u8a08\u3057Parch\u3054\u3068\u306b\u6b63\u898f\u5316\u3059\u308b\ndisplay(pd.crosstab(df_train['Parch_0_1_2_3over'], df_train['Survived'], normalize = 'index'))","65f5b26e":"#SibSp\u3068Parch\u304c\u540c\u4e57\u3057\u3066\u3044\u308b\u5bb6\u65cf\u306e\u6570\u30021\u3092\u8db3\u3059\u3068\u5bb6\u65cf\u306e\u4eba\u6570\u3068\u306a\u308b\ndf_train['FamilySize']=df_train['SibSp']+ df_train['Parch']+ 1\n\n# IsAlone\u30920\u3068\u3057\u30012\u884c\u76ee\u3067FamilySize\u304c2\u4ee5\u4e0a\u3067\u3042\u308c\u30701\u306b\u3057\u3066\u3044\u308b\ndf_train['IsAlone'] = 0\ndf_train.loc[df_train['FamilySize'] >= 2, 'IsAlone'] = 1\n\n# IsAlone\u3054\u3068\u306b\u53ef\u8996\u5316\nsns.countplot(x='IsAlone', hue = 'Survived', data = df_train)\nplt.xticks([0, 1], ['1\u4eba', '2\u4eba\u4ee5\u4e0a'])\n\nplt.legend(['\u6b7b\u4ea1', '\u751f\u5b58'])\nplt.title('\uff11\u4ebaor\uff12\u4eba\u4ee5\u4e0a\u3067\u4e57\u8239\u5225\u306e\u6b7b\u4ea1\u8005\u3068\u751f\u5b58\u8005\u306e\u6570')\nplt.show()\n\n# IsAlone\u3068Survived\u3092\u30af\u30ed\u30b9\u96c6\u8a08\u3059\u308b\ndisplay(pd.crosstab(df_train['IsAlone'], df_train['Survived']))\n\n# \u30af\u30ed\u30b9\u96c6\u8a08\u3057IsAlone\u3054\u3068\u306b\u6b63\u898f\u5316\u3059\u308b\ndisplay(pd.crosstab(df_train['IsAlone'], df_train['Survived'], normalize = 'index'));","b6bc77db":"sns.distplot(df_train['Fare'].dropna(), kde=False, hist=True)\nplt.title('\u904b\u8cc3\u306e\u5206\u5e03');","a0143733":"df_train['CategoricalFare'] = pd.qcut(df_train['Fare'], 4)\ndf_train[['CategoricalFare', 'Survived']].groupby(['CategoricalFare'], as_index=False).mean()\n\n# CategoricalFare\u3068Survived\u3092\u30af\u30ed\u30b9\u96c6\u8a08\u3059\u308b\ndisplay(pd.crosstab(df_train['CategoricalFare'], df_train['Survived']))\n\n# \u30af\u30ed\u30b9\u96c6\u8a08\u3057CategoricalFare\u3054\u3068\u306b\u6b63\u898f\u5316\u3059\u308b\ndisplay(pd.crosstab(df_train['CategoricalFare'], df_train['Survived'], normalize = 'index'))","c947dc17":"df_test['Name'][0:5]","6f7eb103":"# \u656c\u79f0\u3092\u62bd\u51fa\u3057\u3001\u91cd\u8907\u3092\u7701\u304f\nset(df_train.Name.str.extract(' ([A-Za-z]+)\\.', expand=False))","0c01de09":"# collections.Counter\u3092\u4f7f\u7528\u3057\u3066\u3001\u6570\u3048\u4e0a\u3052\u308b\nimport collections\ncollections.Counter(df_train.Name.str.extract(' ([A-Za-z]+)\\.', expand=False))","197cb83b":"# df_train\u306bTitle\u5217\u3092\u4f5c\u6210\u3001Title\u5217\u306e\u5024\u306f\u656c\u79f0\ndf_train['Title'] = df_train.Name.str.extract(' ([A-Za-z]+)\\.', expand=False)\n\n# df_test\u306bTitle\u5217\u3092\u4f5c\u6210\u3001Title\u5217\u306e\u5024\u306f\u656c\u79f0\ndf_test['Title'] = df_test.Name.str.extract(' ([A-Za-z]+)\\.', expand=False)\n\n# df_train\u306eTitle\u5217\u306e\u5024\u3054\u3068\u306b\u5e73\u5747\u5024\u3092\u7b97\u51fa\ndf_train.groupby('Title').mean()['Age']","a02ac94f":"# \u5909\u63db\u3059\u308b\u305f\u3081\u306e\u95a2\u6570\u3092\u4f5c\u6210\ndef title_to_num(title):\n    if title == 'Master':\n        return 1\n    elif title == 'Miss':\n        return 2\n    elif title == 'Mr':\n        return 3\n    elif title == 'Mrs':\n        return 4\n    else:\n        return 5\n\n# \u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\u3092\u7528\u3044\u3066\u5909\u63db\ndf_train['Title_num'] = [title_to_num(i) for i in df_train['Title']]\ndf_test['Title_num'] = [title_to_num(i) for i in df_test['Title']]","f5623bb0":"## 4.2.7 \u8981\u7d04\u7d71\u8a08\u91cf\u306e\u8868\u793a","a64ac5ba":"## 4.2.12 \u30bf\u30a4\u30bf\u30cb\u30c3\u30af\u53f7\u306b\u4e57\u3063\u3066\u3044\u308b\u4e21\u89aa\u30fb\u5b50\u4f9b\u306e\u6570","c8afc9ff":"## 4.2.11 \u5e74\u9f62\u306e\u5206\u5e03","12a4b314":"# 4.2 \u30c7\u30fc\u30bf\u306e\u6982\u8981\u3092\u78ba\u8a8d\u3059\u308b\n## 4.2.1 \u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306b\u3064\u3044\u3066","5ebd71df":"## 4.2.8 \u6b7b\u4ea1\u8005\u3068\u751f\u5b58\u8005\u306e\u53ef\u8996\u5316","5a10e80f":"## 4.2.16 \u540d\u524d","df99cffb":"## 4.2.12 \u30bf\u30a4\u30bf\u30cb\u30c3\u30af\u53f7\u306b\u4e57\u3063\u3066\u3044\u308b\u5144\u5f1f\u30fb\u914d\u5076\u8005\u306e\u6570","8d43ae77":"## 4.2.6 \u6b20\u640d\u5024\u304c\u3044\u304f\u3064\u3042\u308b\u304b\u78ba\u8a8d","dd3b6bea":"# 4.1 \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\u3068\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f","7c0edb03":"## 4.2.3 \u5217\u306e\u540d\u524d\u306e\u78ba\u8a8d","97cd59d8":"## 4.2.5 df.head()\u3067\u6982\u8981\u306e\u78ba\u8a8d","23fa2b38":"## 4.2.2 \u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306e\u884c\u6570\u3068\u5217\u6570\u3092\u78ba\u8a8d","d38fb686":"## 4.2.14 \uff11\u4eba\u3067\u4e57\u8239\u3057\u3066\u3044\u308b\u304b\uff12\u4eba\u4ee5\u4e0a\u3067\u4e57\u8239\u3057\u3066\u3044\u308b\u304b","689159af":"## 4.2.10 \u30c1\u30b1\u30c3\u30c8\u30af\u30e9\u30b9","94467381":"## 4.2.15 \u904b\u8cc3\u306e\u5206\u5e03","328c7c27":"## 4.2.9 \u6027\u5225","03bbb866":"## 4.2.4 df.info()\u3067\u6982\u8981\u306e\u78ba\u8a8d"}}