{"cell_type":{"2744440e":"code","71d7a823":"code","c9dfa2cc":"code","640b78a0":"code","49fb9fdb":"markdown","0a341e95":"markdown","fa278b83":"markdown","7bb4c1bb":"markdown","eb283ba9":"markdown","92c9ff70":"markdown"},"source":{"2744440e":"import numpy as np # linear algebra\nimport csv\nimport os","71d7a823":"# traverse all the input data\nprint(\"Traverse all the input data..\")\nfor dirname, _, filenames in os.walk('..\/input\/object-rearrangement-competition\/train\/ch1'):\n    for filename in filenames:\n        pass\n\n\nfor dirname, _, filenames in os.walk('..\/input\/object-rearrangement-competition\/train\/ch2'):\n    for filename in filenames:\n        pass\n\n\nfor dirname, _, filenames in os.walk('..\/input\/object-rearrangement-competition\/train\/ch3'):\n    for filename in filenames:\n        pass\n\nprint(\"Develop your codes here.\")","c9dfa2cc":"# Collect predictions. \n# In the evaluation, the public score is evaluated with the training set results. \n# And the private score is evaluated with the test set results.\nprint(\"Try your predictions\")\nfields= ['task_file', 'solution']\npredictions = []\n\nfor dirname, _, filenames in os.walk('..\/input\/object-rearrangement-competition\/train\/ch1'):\n    for filename in filenames:\n        # task file ID\n        fileID = \"train\/ch1\/\" + filename\n        # Prediction\n        predictions.append([fileID, 'True'])\n\n\nfor dirname, _, filenames in os.walk('..\/input\/object-rearrangement-competition\/train\/ch2'):\n    for filename in filenames:\n        # task file ID\n        fileID = \"train\/ch2\/\" + filename\n        # Prediction\n        predictions.append([fileID, 'True'])\n\n\nfor dirname, _, filenames in os.walk('..\/input\/object-rearrangement-competition\/train\/ch3'):\n    for filename in filenames:\n        # task file ID\n        fileID = \"train\/ch3\/\" + filename\n        # Prediction\n        predictions.append([fileID, 'True'])\n\n\nfor dirname, _, filenames in os.walk('..\/input\/object-rearrangement-competition\/test\/ch1'):\n    for filename in filenames:\n        # task file ID\n        fileID = \"test\/ch1\/\" + filename\n        # Prediction\n        predictions.append([fileID, 'True'])\n\n        \nfor dirname, _, filenames in os.walk('..\/input\/object-rearrangement-competition\/test\/ch2'):\n    for filename in filenames:\n        # task file ID\n        fileID = \"test\/ch2\/\" + filename\n        # Prediction\n        predictions.append([fileID, 'True'])\n\n        \nfor dirname, _, filenames in os.walk('..\/input\/object-rearrangement-competition\/test\/ch3'):\n    for filename in filenames:\n        # task file ID\n        fileID = \"test\/ch3\/\" + filename\n        # Prediction\n        predictions.append([fileID, 'True'])","640b78a0":"# write the output file\nprint(\"save the results\")\nfilename = \"my_submission.csv\"\nwith open(filename, 'w') as csvfile:\n    csvwriter = csv.writer(csvfile)\n    csvwriter.writerow(fields)\n    csvwriter.writerows(predictions)\nprint(\"Don't forget submitting your solution file!\")","49fb9fdb":"# Data Preparation\nDownload the data from the \"data\" section.\n\n<img src=\"https:\/\/i.imgur.com\/EHirv3S.png\" alt=\"download_data\" width=\"600\"\/>\n\n# Submission File Generation\nRun the codes below with the offline dataset. You can do it by downloading this notebook and run it.\n\n<img src=\"https:\/\/i.imgur.com\/onOKJMC.png\" alt=\"download_data\" width=\"600\"\/>","0a341e95":"# Submit the Output\nClick the submmission bottom on Kaggle.\n\n<img src=\"https:\/\/i.imgur.com\/cE8UeXn.png\" alt=\"download_data\" width=\"600\"\/>\n\nPlease make sure that the file has the same number of rows as our answer, which is the total number of instances in both the test set and the training set.\n\n<img src=\"https:\/\/i.imgur.com\/K5qPw6Y.png\" alt=\"download_data\" width=\"600\"\/>","fa278b83":"## Write the output file","7bb4c1bb":"## Traverse all the input data","eb283ba9":"## Collect predictions to the tests","92c9ff70":"This notebook traverse the files and generate a valid solution CSV file for submission.\nWe recommend users to download the data, train a model and submit your predictions onto Kaggle."}}