{"cell_type":{"9ecbdc7f":"code","0f3219bf":"code","1601ce28":"code","bbac9732":"code","de878fb7":"code","8e714db4":"code","0811ff49":"code","9400c342":"code","608a7688":"markdown","9f50187b":"markdown","373b40e3":"markdown","c4b12915":"markdown","5eb6de13":"markdown","432b7903":"markdown","c06d7c70":"markdown","9b914c82":"markdown"},"source":{"9ecbdc7f":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.pylab import rcParams\nrcParams['figure.figsize'] = 15, 5\n\n!pip -q install yfinance\nimport yfinance as yf","0f3219bf":"IBEX = yf.Ticker(\"^IBEX\")\n# get historical market data\nIBEX_values = IBEX.history(start=\"2020-06-01\")","1601ce28":"IBEX_values[['Close']].plot(lw=2);","bbac9732":"IBEX_values['rolling_av'] = IBEX_values['Close'].rolling(10).mean()\n# take a look\nIBEX_values[['Close','rolling_av']].plot(lw=2);","de878fb7":"from statsmodels.tsa.arima.model import ARIMA\nARMA_model = ARIMA(endog=IBEX_values['Close'], order=(0, 0, 10))\nresults = ARMA_model.fit()\nprint(results.summary())","8e714db4":"start_date = '2020-06-12'\nend_date   = '2021-06-04'\nIBEX_values['forecast'] = results.predict(start=start_date, end=end_date)","0811ff49":"IBEX_values[['Close','rolling_av','forecast']].tail(10)","9400c342":"IBEX_values[['Close','rolling_av','forecast']].plot(lw=2);","608a7688":"## Time series: A simple moving average (MA) model\nIn this short notebook we shall calculate the [simple rolling average](https:\/\/en.wikipedia.org\/wiki\/Moving_average), which is the mean of the last $n$ values. This smooths out the data and lets us look at overall trends. We shall then make a [moving-average model](https:\/\/en.wikipedia.org\/wiki\/Moving-average_model) for the same data.","9f50187b":"take a look at the numbers","373b40e3":"and now plot","c4b12915":"## Predictions\nWe shall now look at the predictions made by our moving average model","5eb6de13":"### Rolling average\nWe shall now create a rolling average, with a window size of 10, using [`pandas.DataFrame.rolling`](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.rolling.html)","432b7903":"### Moving average model\nTo create our moving average model we shall use [`ARIMA`](https:\/\/www.statsmodels.org\/stable\/generated\/statsmodels.tsa.arima.model.ARIMA.html) from [statsmodels](https:\/\/www.statsmodels.org\/). This is a composite of an autoregressive model, **AR**($p$), an integration model, **I**($d$), and a moving average model, **MA**($q$), which is passed via the tuple `order(p,d,q)`. Here we shall use again a window of $q=10$:","c06d7c70":"For our data we shall use the '**Close**' value from the IBEX35 stock market.\n\n(Note that stock data is pretty much a random walk, and is extremely difficult to predict. For example see the notebook [\"*LSTM time series + stock price prediction = FAIL*\"](https:\/\/www.kaggle.com\/carlmcbrideellis\/lstm-time-series-stock-price-prediction-fail)).","9b914c82":"let us take a look"}}