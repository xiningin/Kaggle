{"cell_type":{"1972d484":"code","87ca1309":"code","6d19861a":"code","44aeca5f":"code","8fdd4763":"code","c2590ff7":"code","49e65dc0":"code","0bb44ecb":"code","9c1b9117":"code","9ec8b084":"code","bb866328":"markdown","863d0c9a":"markdown","deaf1f91":"markdown","1d39b7a1":"markdown","78758fef":"markdown","e9f88a54":"markdown","7b461827":"markdown","4c6dee5d":"markdown","01ef8987":"markdown","ba2a9f60":"markdown","a563229c":"markdown","1eafc298":"markdown","bb7f5713":"markdown","5e4868aa":"markdown"},"source":{"1972d484":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","87ca1309":"import pandas as pd\nCase = pd.read_csv(\"..\/input\/coronavirusdataset\/Case.csv\")\nPatientInfo = pd.read_csv(\"..\/input\/coronavirusdataset\/PatientInfo.csv\")\nPatientRoute = pd.read_csv(\"..\/input\/coronavirusdataset\/PatientRoute.csv\")\nRegion = pd.read_csv(\"..\/input\/coronavirusdataset\/Region.csv\")\nSearchTrend = pd.read_csv(\"..\/input\/coronavirusdataset\/SearchTrend.csv\")\nTime = pd.read_csv(\"..\/input\/coronavirusdataset\/Time.csv\")\nTimeAge = pd.read_csv(\"..\/input\/coronavirusdataset\/TimeAge.csv\")\nTimeGender = pd.read_csv(\"..\/input\/coronavirusdataset\/TimeGender.csv\")\nTimeProvince = pd.read_csv(\"..\/input\/coronavirusdataset\/TimeProvince.csv\")\nconfirmed = pd.read_excel(\"..\/input\/covid19-coronavirus\/time_series_covid19_confirmed.xlsx\")\ndeaths = pd.read_excel(\"..\/input\/covid19-coronavirus\/time_series_covid19_deaths.xlsx\")\nrecovered = pd.read_excel(\"..\/input\/covid19-coronavirus\/time_series_covid19_recovered.xlsx\")","6d19861a":"china_cases = confirmed.loc[confirmed[\"Country\/Region\"]==\"China\"].sum().reset_index()\nchina_cases = china_cases.iloc[4:]\n\nsaudiarabia_cases = confirmed.loc[confirmed[\"Country\/Region\"]==\"Saudi Arabia\"].sum().reset_index()\nsaudiarabia_cases = saudiarabia_cases.iloc[4:]\n\n\nunitedKingdom_cases = confirmed.loc[confirmed[\"Country\/Region\"]==\"United Kingdom\"].sum().reset_index()\nunitedKingdom_cases = unitedKingdom_cases.iloc[4:]\n\nsouthkorea_cases = confirmed.loc[confirmed[\"Country\/Region\"]==\"Korea, South\"].sum().reset_index()\nsouthkorea_cases = southkorea_cases.iloc[4:]\n\nbahrain_cases = confirmed.loc[confirmed[\"Country\/Region\"]==\"Bahrain\"].sum().reset_index()\nbahrain_cases = bahrain_cases.iloc[4:]\n\nkuwait_cases = confirmed.loc[confirmed[\"Country\/Region\"]==\"Kuwait\"].sum().reset_index()\nkuwait_cases = kuwait_cases.iloc[4:]\n\ntimeline = go.Figure()\n\ntimeline.add_trace(go.Scatter(x=china_cases[\"index\"], y=china_cases[0], name=\"Cases in China\",\n                          line_color='red'))\n\ntimeline.add_trace(go.Scatter(x=bahrain_cases[\"index\"], y=bahrain_cases[0], name=\"Cases in Bahrain\",\n                          line_color='deepskyblue'))\n\ntimeline.add_trace(go.Scatter(x=southkorea_cases[\"index\"], y=southkorea_cases[0], name=\"Cases in South Korea\",\n                          line_color='purple'))\n\ntimeline.add_trace(go.Scatter(x=kuwait_cases[\"index\"], y=kuwait_cases[0], name=\"Cases in Kuwait\",\n                          line_color='darkorange'))\n\ntimeline.add_trace(go.Scatter(x=saudiarabia_cases[\"index\"], y=saudiarabia_cases[0], name=\"Cases in Saudi\",\n                          line_color='green'))\n\ntimeline.add_trace(go.Scatter(x=unitedKingdom_cases[\"index\"], y=unitedKingdom_cases[0], name=\"Cases in UK\",\n                          line_color='blue'))\n\ntimeline.update_layout(title_text='Spread of Corona over a period of Time', yaxis_type = \"log\",\n                  xaxis_rangeslider_visible=True)\ntimeline.show()","44aeca5f":"china_cases = deaths.loc[confirmed[\"Country\/Region\"]==\"China\"].sum().reset_index()\nchina_cases = china_cases.iloc[4:]\n\nsaudiarabia_cases = deaths.loc[confirmed[\"Country\/Region\"]==\"Saudi Arabia\"].sum().reset_index()\nsaudiarabia_cases = saudiarabia_cases.iloc[4:]\n\n\nunitedKingdom_cases = deaths.loc[confirmed[\"Country\/Region\"]==\"United Kingdom\"].sum().reset_index()\nunitedKingdom_cases = unitedKingdom_cases.iloc[4:]\n\nsouthkorea_cases = deaths.loc[confirmed[\"Country\/Region\"]==\"Korea, South\"].sum().reset_index()\nsouthkorea_cases = southkorea_cases.iloc[4:]\n\nbahrain_cases = deaths.loc[confirmed[\"Country\/Region\"]==\"Bahrain\"].sum().reset_index()\nbahrain_cases = bahrain_cases.iloc[4:]\n\nkuwait_cases = deaths.loc[confirmed[\"Country\/Region\"]==\"Kuwait\"].sum().reset_index()\nkuwait_cases = kuwait_cases.iloc[4:]\n\ntimeline = go.Figure()\n\ntimeline.add_trace(go.Scatter(x=china_cases[\"index\"], y=china_cases[0], name=\"Cases in China\",\n                          line_color='red'))\n\ntimeline.add_trace(go.Scatter(x=bahrain_cases[\"index\"], y=bahrain_cases[0], name=\"Cases in Bahrain\",\n                          line_color='deepskyblue'))\n\ntimeline.add_trace(go.Scatter(x=southkorea_cases[\"index\"], y=southkorea_cases[0], name=\"Cases in South Korea\",\n                          line_color='purple'))\n\ntimeline.add_trace(go.Scatter(x=kuwait_cases[\"index\"], y=kuwait_cases[0], name=\"Cases in Kuwait\",\n                          line_color='darkorange'))\n\ntimeline.add_trace(go.Scatter(x=saudiarabia_cases[\"index\"], y=saudiarabia_cases[0], name=\"Cases in Saudi\",\n                          line_color='green'))\n\ntimeline.add_trace(go.Scatter(x=unitedKingdom_cases[\"index\"], y=unitedKingdom_cases[0], name=\"Cases in UK\",\n                          line_color='blue'))\n\ntimeline.update_layout(title_text='Deaths over a period of Time', yaxis_type = \"log\",\n                  xaxis_rangeslider_visible=True)\ntimeline.show()","8fdd4763":"china_cases = recovered.loc[confirmed[\"Country\/Region\"]==\"China\"].sum().reset_index()\nchina_cases = china_cases.iloc[4:]\n\nsaudiarabia_cases = recovered.loc[confirmed[\"Country\/Region\"]==\"Saudi Arabia\"].sum().reset_index()\nsaudiarabia_cases = saudiarabia_cases.iloc[4:]\n\n\nunitedKingdom_cases = recovered.loc[confirmed[\"Country\/Region\"]==\"United Kingdom\"].sum().reset_index()\nunitedKingdom_cases = unitedKingdom_cases.iloc[4:]\n\nsouthkorea_cases = recovered.loc[confirmed[\"Country\/Region\"]==\"Korea, South\"].sum().reset_index()\nsouthkorea_cases = southkorea_cases.iloc[4:]\n\nbahrain_cases = recovered.loc[confirmed[\"Country\/Region\"]==\"Bahrain\"].sum().reset_index()\nbahrain_cases = bahrain_cases.iloc[4:]\n\nkuwait_cases = recovered.loc[confirmed[\"Country\/Region\"]==\"Kuwait\"].sum().reset_index()\nkuwait_cases = kuwait_cases.iloc[4:]\n\ntimeline = go.Figure()\n\ntimeline.add_trace(go.Scatter(x=china_cases[\"index\"], y=china_cases[0], name=\"Cases in China\",\n                          line_color='red'))\n\ntimeline.add_trace(go.Scatter(x=bahrain_cases[\"index\"], y=bahrain_cases[0], name=\"Cases in Bahrain\",\n                          line_color='deepskyblue'))\n\ntimeline.add_trace(go.Scatter(x=southkorea_cases[\"index\"], y=southkorea_cases[0], name=\"Cases in South Korea\",\n                          line_color='purple'))\n\ntimeline.add_trace(go.Scatter(x=kuwait_cases[\"index\"], y=kuwait_cases[0], name=\"Cases in Kuwait\",\n                          line_color='darkorange'))\n\ntimeline.add_trace(go.Scatter(x=saudiarabia_cases[\"index\"], y=saudiarabia_cases[0], name=\"Cases in Saudi\",\n                          line_color='green'))\n\ntimeline.add_trace(go.Scatter(x=unitedKingdom_cases[\"index\"], y=unitedKingdom_cases[0], name=\"Cases in UK\",\n                          line_color='blue'))\n\ntimeline.update_layout(title_text='Recovery over a period of Time', yaxis_type = \"log\",\n                  xaxis_rangeslider_visible=True)\ntimeline.show()","c2590ff7":"Time['date'] = pd.to_datetime(Time['date'])\n\nfig1 = go.Figure() # Create a fig model\n# Add a trace for each column you want presented. We are using Scatter\nfig1.add_trace(go.Scatter(x=Time['date'], y=Time['confirmed'], fill='tozeroy', name='confirmed'))\nfig1.add_trace(go.Scatter(x=Time['date'], y=Time['released'], fill='tozeroy', name='released'))\nfig1.add_trace(go.Scatter(x=Time['date'], y=Time['deceased'], fill='tozeroy', name='deceased'))\n\n# Make it look nice..\nfig1.update_layout(\n    title = \"Confirmed, Released and Deceased over Time\",\n    yaxis_title = \"Number of Cases\",\n    font = dict(\n        family=\"Arial, monospace\",\n        size=15,\n        color=\"#7f7f7f\"\n    )\n)\npy.iplot(fig1)","49e65dc0":"fig2 = go.Figure() # Create a fig model\n# Add a trace for each column you want presented. We are using Scatter\nfig2.add_trace(go.Scatter(x=Time['date'], y=Time['released']\/Time['deceased'], fill='tozeroy', name='released'))\n\n# Make it look nice..\nfig2.update_layout(\n    title = \"Released\/Deceased Ratio over Time\",\n    yaxis_title = \"Number of Cases\",\n    font = dict(\n        family=\"Arial, monospace\",\n        size=15,\n        color=\"#7f7f7f\"\n    )\n)\npy.iplot(fig2)","0bb44ecb":"PatientInfo['Age'] = 2020-PatientInfo['birth_year']\nfig3 = px.histogram(PatientInfo[PatientInfo['state']=='deceased'],x=\"Age\",marginal=\"box\",nbins=20)\nfig3.update_layout(\n    title = \"number of deceased by age \",\n    xaxis_title=\"Age\",\n    yaxis_title=\"number of cases\",\n    barmode=\"group\",\n    bargap=0.1,\n    xaxis = dict(\n        tickmode = 'linear',\n        tick0 = 0,\n        dtick = 10),\n    font=dict(\n        family=\"Arial, monospace\",\n        size=15,\n        color=\"#7f7f7f\"\n    )\n    )\npy.iplot(fig3)\n\nfig4 = px.histogram(PatientInfo[PatientInfo['state']=='released'],x=\"Age\",marginal=\"box\",nbins=20)\nfig4.update_layout(\n    title = \"number of released by age \",\n    xaxis_title=\"Age\",\n    yaxis_title=\"number of cases\",\n    barmode=\"group\",\n    bargap=0.1,\n    xaxis = dict(\n        tickmode = 'linear',\n        tick0 = 0,\n        dtick = 10),\n    font=dict(\n        family=\"Arial, monospace\",\n        size=15,\n        color=\"#7f7f7f\"\n    )\n    )\npy.iplot(fig4)","9c1b9117":"PatientInfo['Age'] = 2020-PatientInfo['birth_year']\nfig5 = px.histogram(PatientInfo[PatientInfo['state']=='isolated'],x=\"Age\",marginal=\"box\",nbins=20)\nfig5.update_layout(\n    title = \"age distibution of isolated cases \",\n    xaxis_title=\"Age\",\n    yaxis_title=\"number of cases\",\n    barmode=\"group\",\n    bargap=0.1,\n    xaxis = dict(\n        tickmode = 'linear',\n        tick0 = 0,\n        dtick = 10),\n    font=dict(\n        family=\"Arial, monospace\",\n        size=15,\n        color=\"#7f7f7f\"\n    )\n    )\npy.iplot(fig5)","9ec8b084":"\nSaudiCity = pd.read_csv(\"..\/input\/saudicovid19\/saudi_cityy.csv\" )\n\n\ntemp = SaudiCity.sort_values('Total', ascending=True)\n#state_order = SaudiCity['City']\n\nfig = px.bar(temp,x=\"Total\", y=\"city \", color='Total', title='Total Cases per City in March', orientation='h', width=800,color_discrete_sequence=px.colors.qualitative.Vivid)\nfig.show()\n\n","bb866328":"COVID-19 Pandemic has taken the world by the storm. The virus has been responsible for crippling the economies of many developed countries and has put a halt on our everyday life. In this report, we will aim to analyze the COVID-19 data globally and locally to come up with meaningful insights and patterns.\n","863d0c9a":"# South Korea\nWe have seen that the spread of the virus follows an exponential pattern. Similarly, the confirmed reported cases within South Korea follows the same pattern. It is notable that the released and deceased represent only a small part of confirmed cases. Therefore, this means that there are many cases who are still under close supervision in hospitals since the start of this pandemic. We would like to investigate the ratio of released and deceased cases over time.","deaf1f91":"# Global Overview\nWe have analyzed the spread of the COVID19 over China, Bahrain, South Korea, Kuwait, Saudi and United Kingdom. We have observed that in all these countries the virus has been following an exponential growth. We can note that China exponential growth receding while other countries are still exponentially growing. Essentially, all the countries are following the epidemic curve:","1d39b7a1":"The recession in China\u2019s spread of the virus indicates that they made it past the middle point of epidemic curve. While Saudi Arabia, United Kingdom, Kuwait and Bahrain are still on the rise exponentially. We can also see that South Korea\u2019s COVID-19 spread is receding a bit less than China\u2019s, but more than other countries listed. We have selected South Korea for analysis in further sections due to the availability of its COVID-19 dataset and similarity to Saudi Arabia in its containment measures.","78758fef":"Death rates were highest in early March. However, after that point there was a steady increase in recovered cases that were released after early March. We would like to know the age distribution of the deceased and released in South Korea.","e9f88a54":"# Epidemic Curve","7b461827":"The histogram shows the number of deceased cases by age. The median is 69 years old indicating that the COVID-19 to be deadly for older people. There are few young outliers who may have been cases with pre-existing conditions. However, we can draw a conclusion here that COVID-19 have a higher fatality for older people. However, for the released cases the median age is 37 years old. Most survivors of the COVID-19 are the young population. However, there is an outlier that is 84 years old and many cases that are above 60+ years old that survived the COVID-19. ","4c6dee5d":"# Conclusion\nIn this report, we have started by showing countries with different geographic areas, demographics and containment measures. We have selected South Korea, which has publicly available and updated dataset, to compare it with Saudi Arabia cases growth. South Korea has applied strict containment measures like Saudi Arabia. We investigated the age distribution of the cases in South Korea and found that COVID-19 proved to be more fatal to older people while younger people tend to be released after showing recovery. The released and deceased ratio shown for South Korea showed a dip in deceased cases in the middle of the spread in early March, after which there has been a steady increase in recovered cases. We expect Saudi Arabia to follow the same pattern on a smaller scale as it must be taken into note the different daily routines and population sizes of the two countries. 51 Billion for South Korea vs 32.94 million for Saudi Arabia.","01ef8987":"# Recovered & Deceased","ba2a9f60":"# Saudi Arabia\nSaudi Arabia is still at the beginning of the epidemic curve. The cases are growing exponentially as observed in other countries, some of which have performed containment measures. Saudi Arabia containment measures shows some promise that would enable it to flatten the high point of the epidemic curve. The current cases distribution for March are displayed above. ","a563229c":"Credit: https:\/\/towardsdatascience.com\/classify-growth-patterns-for-covid-19-data-41af4c7adc55","1eafc298":"# Introduction","bb7f5713":"**Credits**: Our contributions in this report is the dataset for the Saudi Arabia COVID19 as of March 28th that maps COVID19 cases to Saudi Cities and statistical analysis. Saudi Arabia cities COVID19 dataset was compiled manually by Hadeel Al-Dhubaiban and the illustrations and analysis done by Asaad AlGhamdi & Hadeel Al-Dhubaiban. Other datasets used are COVID19 public Kaggle datasets.","5e4868aa":"![epedemiccurve](https:\/\/miro.medium.com\/max\/1700\/1*O8g9T36LCp7A8jqvP9MNlQ.jpeg)"}}