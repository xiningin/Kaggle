{"cell_type":{"f3ad93e4":"code","172e133e":"code","b62572c5":"code","b06f539f":"code","3fc08478":"code","d7bb3862":"code","f07d673c":"code","99bc31bc":"code","e98c3a10":"code","58ffaf61":"code","4f431058":"code","1fd2d111":"code","4dd72e42":"code","bfe9f2e0":"code","15295a56":"code","3199e8c9":"code","883a0df4":"code","09715460":"code","4a96b463":"code","b979a15e":"code","f7e1f17d":"code","c251a3d1":"code","b378a977":"code","b8a094a9":"code","7d964142":"code","8ca53f80":"code","e92c1d96":"code","1b2bd3c4":"markdown","5504096c":"markdown","d68c5f44":"markdown","c00940d1":"markdown","3ee92218":"markdown","5fc61414":"markdown","bd944b0a":"markdown","83e5109a":"markdown","57816e28":"markdown","1312da60":"markdown","34a38275":"markdown","c40892b7":"markdown","d1f5c88e":"markdown","afa06503":"markdown","70b33bab":"markdown","1b042ab6":"markdown","eaa229c8":"markdown","0d948857":"markdown","d79d6db6":"markdown","4e29d8ce":"markdown","e876b1ca":"markdown","fee7cf04":"markdown","1ca20ce7":"markdown"},"source":{"f3ad93e4":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport statistics as sta","172e133e":"pd.set_option('display.max_rows', 50)\npd.set_option('display.max_columns', 10)","b62572c5":"data = pd.read_csv('..\/input\/netflix-shows\/netflix_titles.csv')\nt_basic = pd.read_csv('..\/input\/imdb-data\/title_basics.tsv', sep='\\t')\nt_rating = pd.read_csv('..\/input\/imdb-data\/title_rating.tsv', sep='\\t')","b06f539f":"t_basic = t_basic.drop_duplicates()\nt_basic = t_basic[['tconst', 'titleType', 'primaryTitle', 'originalTitle', 'startYear']]\nt_basic = t_basic[t_basic.startYear.apply(lambda x: str(x).isnumeric())]","3fc08478":"t_movies = t_basic[(t_basic.titleType == 'movie')|(t_basic.titleType == 'tvMovie')]\nt = pd.merge(t_movies.set_index('tconst'), t_rating.set_index('tconst'), how='inner', left_index=True, right_index=True)\nmovies = pd.merge(data, t, left_on = 'title', right_on = 'primaryTitle', how='inner')","d7bb3862":"movies_rating = movies[['title', 'averageRating']]\nmovies_rating.sort_values('averageRating', ascending=False, inplace=True)","f07d673c":"plt.figure()\nplt.plot(movies_rating[:10].title, movies_rating[:10].averageRating, color='darkred')\nplt.xticks(rotation=45)\nplt.xlabel('movie name')\nplt.ylabel('average rating')\nplt.ylim(8.5, 10)\nplt.title('Top 10 movies on netflix')","99bc31bc":"movies_director = movies.director.str.split(', ')\ntemp = pd.Series(dtype='float64')\n\nfor i in movies_director:\n    temp = temp.append(pd.Series(i))\n\ndire_10 = temp.value_counts()[:10]\n\ndire_list = temp.value_counts().index","e98c3a10":"plt.figure()\nplt.bar(dire_10.index, dire_10, color='salmon')\n\nplt.title('Top 10 director with largest number of movie')\nplt.ylabel('Numer of movies')\nplt.xlabel('Name')\nplt.xticks(rotation=90)\nplt.ylim(0, 30)","58ffaf61":"movies_dire_rating = movies[['director', 'averageRating']]\nmovies_dire_rating = movies_dire_rating.dropna()\nmovies_dire_rating = movies_dire_rating[movies_dire_rating.averageRating >= 8]","4f431058":"def dire_num(name):\n    num = 0\n    for x in movies_dire_rating.index:\n        if name in movies_dire_rating.director[x]:\n            num = num + 1\n    return num","1fd2d111":"s = pd.Series(dtype='float64')\nfor i in dire_list:\n    if dire_num(i) != 0:\n        s = s.append(pd.Series({i : dire_num(i)}))\ns = s.sort_values(ascending=False)\ns = s[:10].sort_values()","4dd72e42":"plt.figure()\n\ndef color():\n    a = []\n    for i in s:\n        if i >= 5:\n            a.append('darkred')\n        elif i > 3:\n            a.append('salmon')\n        else:\n            a.append('teal')\n    return a\n    \n    \nplt.barh(s.index, s, color=color())\n\nplt.title('Top 10 director who has largest number of high rating movies')\nplt.xlabel('Numer of movies')\nplt.ylabel('Name')\nplt.show()","bfe9f2e0":"movies_country = movies.country.str.split(', ')\ntemp = pd.Series(dtype='float64')\nfor i in movies_country:\n    temp = temp.append(pd.Series(i))\n    \ncountry_list = temp.value_counts().index\ncountry_list","15295a56":"movies_country_rating = movies[['country', 'averageRating']]\nmovies_country_rating = movies_country_rating.dropna()","3199e8c9":"def country_avg(name):\n    a = []\n    for x in movies_country_rating.index:\n        if name in movies_country_rating.country[x]:\n            a.append(movies_country_rating.averageRating[x])\n    avg = round(sta.mean(a), 2)\n    return avg","883a0df4":"s = []\nfor i in country_list:\n    s.append(country_avg(i))","09715460":"tem = pd.Series(s, index=country_list)\ntem = tem.sort_values(ascending=False)","4a96b463":"tem = tem[:10].sort_values(ascending=True)\nplt.figure()\nplt.barh(tem.index, tem, height=0.6, color='salmon')\nplt.xlim(6, 9)\nplt.ylabel('Country')\nplt.xlabel('Average Rating Score')\nplt.title('Top ten country whoes movies have highest rating')\nplt.show()","b979a15e":"t_tvshow = t_basic[(t_basic.titleType == 'tvShort')|(t_basic.titleType =='tvSeries')|(t_basic.titleType =='tvEpisode')|(t_basic.titleType =='tvMiniSeries')|(t_basic.titleType =='tvSpecial')]\nt_show = pd.merge(t_tvshow.set_index('tconst'), t_rating.set_index('tconst'), how='inner', left_index=True, right_index=True)\ntvshow = pd.merge(data, t_show, left_on = 'title', right_on = 'primaryTitle', how='inner')\ntvshow = tvshow.drop_duplicates()\ntvshow = tvshow[tvshow.type == 'TV Show']","f7e1f17d":"for x in tvshow.index:\n    tvshow.title[x] = '{} {}'.format(tvshow.title[x], tvshow.startYear[x])","c251a3d1":"tv_rating = tvshow[['title', 'averageRating']]\ntv_10 = tv_rating.sort_values(ascending=False, by='averageRating')[:10]","b378a977":"tv_10 = tv_10.sort_values(by='averageRating', ascending=True)","b8a094a9":"y_pos = np.arange(10)\nplt.figure()\ndef color():\n    color = []\n    for i in tv_10.averageRating:\n        if i == 10:\n            color.append('darkred')\n        else:\n            color.append('palevioletred')\n    return color\n\nplt.barh(y_pos, tv_10.averageRating, align='center', color=color(), height=0.4)\nplt.yticks(y_pos, tv_10.title)\nplt.xlim(8, 11)\nplt.title('Top 10 Tvshows on Netflix')\nplt.xlabel('Rating score')\nplt.show()","7d964142":"a = pd.Series(dtype='float64')\nfor x in tvshow.index:\n    if 'Friends' in tvshow.title[x]:\n        a = a.append(pd.Series({tvshow.title[x]: tvshow.averageRating[x]}))\na = a[8:]\na.sort_index(inplace=True)","8ca53f80":"year = [1977, '', '', '', '', '', '', '', '', '', '', 1999, '', '', '', '', '', '', '', '', '', '', '', '', 2011,'', '', '', '', '', '', '', '', 2020, '']\n\nplt.figure()\nplt.plot(a, color='indianred')\nplt.xticks(a.index, year)\nplt.ylim(4, 10)\nplt.xlabel('year')\nplt.ylabel('average score')\nplt.title('Rating score for Friends every season')","e92c1d96":"a = a.sort_values(ascending=False)\nplt.figure()\nplt.barh(a.index, a, color='indianred', height=0.4)\nplt.title('Rating score for Friends every season')","1b2bd3c4":"Get each country movies average rating list","5504096c":"sort Friends out of the tvshow data","d68c5f44":"sort all movies based on their average rating score","c00940d1":"Function to calculate a given country's average rating score","3ee92218":"# **set dataframe display**","5fc61414":"# Top 10 director with largest number of movie'","bd944b0a":"'''merge two dateframe from IMBN website, then merge it with Nerflix data'''","83e5109a":"# **'''Movies'''**\n'''clear data from IMBN website, take out movie'''","57816e28":"plot bar chart","1312da60":"Take ou the tvshow data from IMDb data set, then merge it with Netflix data","34a38275":"A function that can calculate the number of movies for a given director name ","c40892b7":"Find all movies with rating score above 8","d1f5c88e":"# Top 10 Country","afa06503":"# Average Rating for Friends","70b33bab":"make a series that contains all directors' name and the number of movies they conducted","1b042ab6":"# Top 10 movies on netflix","eaa229c8":"# TV shows","0d948857":"In order to analyze the Netflix data and the IMDb rating, I access to the newest IMDb data on https:\/\/www.imdb.com\/interfaces\/.\nWith two file: title_basics.tsv and title_rating.tsv\n\nI merge thoes two data with our Netflix data to analyze some issues of Movies and Tvshow rating.","d79d6db6":"get the list of all country","4e29d8ce":"# Top 10 director who has largest number of high rating movies","e876b1ca":"find the top 10 tvshow list","fee7cf04":"# Friends 2018 has the highest score","1ca20ce7":"# Top 10 Tvshow "}}