{"cell_type":{"e0fddac4":"code","41fb580f":"code","7d25b7e2":"code","3d93fd27":"code","4bf51268":"code","3ba500e0":"code","51cfd6d0":"code","b4632dcf":"code","76beda27":"code","75fc5f38":"code","39ce6cac":"code","320ddd2b":"code","2032a8ee":"code","4618dc18":"code","ee73f268":"code","d79d2345":"code","0a38cd04":"code","a1634dfc":"code","54485cc1":"code","f15ce76b":"code","b5df8f9c":"code","7bce4ecd":"code","c5198ee5":"code","8727a284":"code","0a26c87c":"code","0df5cb3f":"code","3c53e92d":"code","24bea8c7":"code","fd964706":"code","02bced89":"code","8cb1e8a7":"code","dd0f52ac":"code","b2849ee4":"code","3732e28e":"code","9450fd20":"code","b1841ee5":"code","8946248c":"code","ed7336df":"code","f0e00a00":"code","c6f9b5cb":"code","7bdab6ff":"code","3fef735b":"code","f2e0e588":"code","408148e8":"code","53e55b6e":"code","3712cf4c":"code","e3bfe574":"code","f82f11a1":"code","01de51aa":"code","2e510b67":"code","665cdad2":"code","ab825540":"code","19367abe":"code","9ae0992a":"code","a271ea59":"code","2c31ac20":"code","7f9a643a":"code","a72646d8":"code","b579e4cf":"code","8fd2b7cd":"code","477b1819":"code","c9603c76":"code","01d68e0a":"code","e68054e6":"code","5798bec4":"code","f96d2d1a":"code","48c4ad80":"code","ae62619c":"code","5e602455":"code","b9aff02b":"code","6650a98b":"code","0ec63586":"code","b55a75d5":"code","87089ae6":"code","97cc6a56":"code","f5068df2":"code","7a4998a6":"code","6bd3f1a7":"code","b009cfdf":"code","7756bcc4":"code","d83d160f":"code","aa639588":"code","86ed3e48":"code","2451f315":"code","fd4a643c":"code","565f2bd9":"code","5746a9ab":"code","e0db593e":"code","a1ec1de0":"code","fbf1a2e8":"code","d4be3083":"code","dfcb54f9":"code","c4779978":"code","99f78d00":"code","f55b6d4f":"code","b202e2ae":"code","4a1fa93d":"code","0808b75e":"code","415fe672":"code","23dcabb0":"code","d8ada2aa":"code","0154b916":"code","2ed35439":"code","8120995d":"code","43e3e71b":"code","29a8e992":"code","83661272":"code","baa8ffa7":"code","4957acc0":"code","48f9773f":"code","8cd5ada0":"code","5cd2684e":"code","e507ae5a":"code","793a2141":"code","088db62b":"code","277633fd":"code","bbdfded7":"code","9fc6ae8f":"code","1988048a":"code","57885165":"code","5646b454":"code","0c02e12b":"code","d6fd0d90":"markdown","b285d429":"markdown","d4823270":"markdown","c49fec9c":"markdown","813135cc":"markdown","86ae9916":"markdown","3a8c28cd":"markdown","dcc36c6c":"markdown","6c86d736":"markdown","df58e901":"markdown","68045711":"markdown","b6369167":"markdown","dc8de3c6":"markdown","0bd7c99f":"markdown","69633239":"markdown","cea34f28":"markdown","8da228b8":"markdown","c5c0ee4a":"markdown","ee19d67a":"markdown","9021e4c4":"markdown","b9e51ac5":"markdown","30f1281b":"markdown","40843a0d":"markdown","e7813fbf":"markdown","42c28170":"markdown","9e5b5f16":"markdown","acf3f277":"markdown","97721b1b":"markdown","dc42b814":"markdown","d24d55d5":"markdown","8f4cc6a3":"markdown","cd84bb72":"markdown","832b010f":"markdown","c66173c4":"markdown","636bee07":"markdown","cfd9eba4":"markdown","fdbce8fa":"markdown","6d02ea81":"markdown","9c5b2848":"markdown","0792c79b":"markdown"},"source":{"e0fddac4":"import numpy as np\nimport pandas as pd\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n%matplotlib inline\nimport plotly.graph_objects as go\n\nimport warnings\n\nwarnings.filterwarnings('ignore') # ou warnings.filterwarnings(action='once')","41fb580f":"\ndf = pd.read_csv(\"..\/input\/netflix-shows\/netflix_titles.csv\")\ndf.columns","7d25b7e2":"df.info()","3d93fd27":"df.isna().sum()","4bf51268":"df.drop(['cast','description', 'director'], axis=1, inplace=True)\ndf","3ba500e0":"df[\"date_added\"] = pd.to_datetime(df['date_added'])\ndf['year_added'] = df['date_added'].dt.year","51cfd6d0":"df['season_count'] = df.apply(lambda x : x['duration'].split(\" \")[0] if \"Season\" in x['duration'] else \"\", axis = 1)\ndf['duration_movie'] = df.apply(lambda x : x['duration'].split(\" \")[0] if \"Season\" not in x['duration'] else \"\", axis = 1)\ndf.head()","b4632dcf":"df.info()","76beda27":"df['principal_genero'] = df['listed_in'].apply(lambda x: x.split(\", \")[0])\ndf['principal_genero'].head()","75fc5f38":"df.loc[20, \"listed_in\"]","39ce6cac":"df.loc[20, \"principal_genero\"]","320ddd2b":"df.isna().sum()","2032a8ee":"ratings_ages = {\n    'TV-PG': 'Older Kids',\n    'TV-MA': 'Adults',\n    'TV-Y7-FV': 'Older Kids',\n    'TV-Y7': 'Older Kids',\n    'TV-14': 'Teens',\n    'R': 'Adults',\n    'TV-Y': 'Kids',\n    'NR': 'Adults',\n    'PG-13': 'Teens',\n    'TV-G': 'Kids',\n    'PG': 'Older Kids',\n    'G': 'Kids',\n    'UR': 'Adults',\n    'NC-17': 'Adults'\n}","4618dc18":"df['target_ages'] = df['rating'].replace(ratings_ages)\ndf['target_ages'].unique()","ee73f268":"df.columns","d79d2345":"df['type'] = pd.Categorical(df['type'])\n\ndf['target_ages'] = pd.Categorical(df['target_ages'], categories=['Kids', 'Older Kids', 'Teens', 'Adults'])\n\ndf['duration_movie'] = pd.to_numeric(df['duration_movie']) \n\ndf['year_added'] = pd.to_numeric(df['year_added'])\n\ndf.info()","0a38cd04":"df.isna().sum()","a1634dfc":"df['country'] = df['country'].fillna(df['country'].mode()[0])\ndf['target_ages'] = df['target_ages'].fillna(df['target_ages'].mode()[0])","54485cc1":"df['year_added'] = df['year_added'].fillna(df['year_added'].mode()[0])","f15ce76b":"df.isna().sum()","b5df8f9c":"df.drop(['date_added','rating', 'duration', 'listed_in',], axis=1, inplace=True)\n","7bce4ecd":"df.describe()","c5198ee5":"df.isna().sum()","8727a284":"df['principal_country'] = df['country'].apply(lambda x: x.split(\",\")[0])\ndf['principal_country'].head()","0a26c87c":"filmes_df=df[df['type']=='Movie']\ntv_show_df=df[df['type']=='TV Show']\n","0df5cb3f":"filme = len(filmes_df)\ntv_show = len(tv_show_df)","3c53e92d":"df_types_ = df['type'].value_counts()\ndf_types_= pd.DataFrame(df_types_)\ndf_types_ = df_types_.reset_index()\ndf_types_","24bea8c7":"df_types_ = df_types_.rename({'index': 'type',\n                          'type': 'quantidade'}, axis = 1)\n\ndf_types_","fd964706":"df['type'].value_counts(normalize=True)","02bced89":"fig = px.bar(df_types_, x=\"type\", y=\"quantidade\", color='type', title=\"Quantidade por tipo\")\nfig.show()","8cb1e8a7":"released_year_df = df.loc[df['release_year'] > 2007].groupby(['release_year', 'type']).agg({'show_id': 'count'}).reset_index()\nreleased_year_df","dd0f52ac":"added_year_df = df.loc[df['year_added'] > 2007].groupby(['year_added', 'type']).agg({'show_id': 'count'}).reset_index()\nadded_year_df","b2849ee4":"\nfig = go.Figure()\n\nfig.add_trace(go.Scatter( \n    x=released_year_df.loc[released_year_df['type'] == 'Movie']['release_year'], \n    y=released_year_df.loc[released_year_df['type'] == 'Movie']['show_id'],\n    mode='lines+markers',\n    name='Movie: Released Year',\n    marker_color='green',\n))\n\nfig.add_trace(go.Scatter( \n    x=released_year_df.loc[released_year_df['type'] == 'TV Show']['release_year'], \n    y=released_year_df.loc[released_year_df['type'] == 'TV Show']['show_id'],\n    mode='lines+markers',\n    name='TV Show: Released Year',\n    marker_color='Darkgreen',\n))\n\nfig.add_trace(go.Scatter( \n    x=added_year_df.loc[added_year_df['type'] == 'TV Show']['year_added'], \n    y=added_year_df.loc[added_year_df['type'] == 'TV Show']['show_id'],\n    mode='lines+markers',\n    name='TV Show: Added Year',\n    marker_color='blue',\n))\n\nfig.add_trace(go.Scatter( \n    x=added_year_df.loc[added_year_df['type'] == 'Movie']['year_added'], \n    y=added_year_df.loc[added_year_df['type'] == 'Movie']['show_id'],\n    mode='lines+markers',\n    name='Movie: Added Year',\n    marker_color='orange',\n))\n","3732e28e":"df['principal_country'].value_counts(normalize=True)","9450fd20":"main_pais_eua = df['principal_country'].value_counts().head(11).reset_index()","b1841ee5":"fig = px.bar(main_pais_eua, x=\"index\", y=\"principal_country\", \n             color ='principal_country',color_continuous_scale= 'deep', \n             title=\"10 maiores de produtores de conte\u00fado da Netflix\")\nfig.show()","8946248c":"main_pais = df['principal_country'].value_counts().head(11).reset_index()[1:]","ed7336df":"fig = px.bar(main_pais, x=\"index\", y=\"principal_country\", \n             color ='principal_country',color_continuous_scale= 'deep', \n             title=\"10 maiores de produtores de conte\u00fado da Netflix sem os EUA\")\nfig.show()","f0e00a00":"teste_df = df.groupby(['target_ages','type']).agg({'show_id': 'count'}).reset_index()","c6f9b5cb":"teste_antes = df.loc[df['year_added'] == 2013].groupby(['target_ages', 'type']).agg({'show_id': 'count'}).reset_index()\nteste_depois = df.loc[df['year_added'] == 2020].groupby(['target_ages', 'type']).agg({'show_id': 'count'}).reset_index()\n","7bdab6ff":"teste_df","3fef735b":"g = sns.catplot(\n    data= teste_df, kind=\"bar\",\n    x=\"target_ages\", y=\"show_id\", hue=\"type\",\n    ci=\"sd\", palette=\"Reds\", alpha=.6, height=6\n)\n\ng.despine(left=True)\ng.set_axis_labels(\"target ages\", \"N\u00famero de produ\u00e7\u00f5es\")\ng.legend.set_title(\"Legenda:\")\n","f2e0e588":"g = sns.catplot(\n    data= teste_antes, kind=\"bar\",\n    x=\"target_ages\", y=\"show_id\", hue=\"type\",\n    ci=\"sd\", palette=\"Reds\", alpha=.6, height=6\n)\n\ng.despine(left=True)\ng.set_axis_labels(\"target ages 2013\", \"N\u00famero de produ\u00e7\u00f5es 2013\")\ng.legend.set_title(\"Legenda:\")","408148e8":"g = sns.catplot(\n    data= teste_depois, kind=\"bar\",\n    x=\"target_ages\", y=\"show_id\", hue=\"type\",\n    ci=\"sd\", palette=\"Reds\", alpha=.6, height=6\n)\n\ng.despine(left=True)\ng.set_axis_labels(\"target ages 2020\", \"N\u00famero de produ\u00e7\u00f5es em 2020\")\ng.legend.set_title(\"Legenda:\")","53e55b6e":"df.columns","3712cf4c":"df['principal_genero'].value_counts(normalize=True).head(10)","e3bfe574":"main_genero = pd.DataFrame(df['principal_genero'].value_counts().head(10).reset_index())\nmain_genero\n","f82f11a1":"fig = px.bar(main_genero, x=\"index\", y=\"principal_genero\", \n             color ='principal_genero',color_continuous_scale= 'Reds', \n             title=\"10 principais g\u00eaneros listados no Dataset\")\nfig.show()","01de51aa":"filmes_df.head()\n","2e510b67":"tv_show_df.head()","665cdad2":"filme_pais = filmes_df['principal_country'].value_counts().head(11).reset_index()\nfilme_pais","ab825540":"fig = px.bar(filme_pais, x=\"index\", y=\"principal_country\", \n             color ='principal_country',color_continuous_scale= 'deep', \n             title=\"10 maiores de produtores de filme da Netflix\")\nfig.show()","19367abe":"fig = px.bar(filme_pais[2:], x=\"index\", y=\"principal_country\", \n             color ='principal_country',color_continuous_scale= 'deep', \n             title=\"10 maiores de produtores de filme da Netflix\")\nfig.show()","9ae0992a":"target_year_df = df.loc[df['year_added'] > 2013].groupby(['year_added', 'target_ages']).agg({'show_id': 'count'}).reset_index()\ntarget_year_df","a271ea59":"\nfig = go.Figure()\n\nfig.add_trace(go.Scatter( \n    x=target_year_df.loc[target_year_df['target_ages'] == 'Kids']['year_added'], \n    y=target_year_df.loc[target_year_df['target_ages'] == 'Kids']['show_id'],\n    mode='lines+markers',\n    name='Kids: Added Year',\n    marker_color='green',\n))\n\nfig.add_trace(go.Scatter( \n    x=target_year_df.loc[target_year_df['target_ages'] == 'Older Kids']['year_added'], \n    y=target_year_df.loc[target_year_df['target_ages'] == 'Older Kids']['show_id'],\n    mode='lines+markers',\n    name=' Older Kids: Added Year',\n    marker_color='Darkgreen',\n))\n\nfig.add_trace(go.Scatter( \n    x=target_year_df.loc[target_year_df['target_ages'] == 'Teens']['year_added'], \n    y=target_year_df.loc[target_year_df['target_ages'] == 'Teens']['show_id'],\n    mode='lines+markers',\n    name='Teens: Added Year',\n    marker_color='blue',\n))\n\nfig.add_trace(go.Scatter( \n    x=target_year_df.loc[target_year_df['target_ages'] == 'Adults']['year_added'], \n    y=target_year_df.loc[target_year_df['target_ages'] == 'Adults']['show_id'],\n    mode='lines+markers',\n    name='Adults: Added Year',\n    marker_color='orange',\n))\n","2c31ac20":"target_year_release = df.groupby(['release_year', 'target_ages']).agg({'show_id': 'count'}).reset_index()\ntarget_year_release","7f9a643a":"\nfig = go.Figure()\n\nfig.add_trace(go.Scatter( \n    x=target_year_release.loc[target_year_release['target_ages'] == 'Kids']['release_year'], \n    y=target_year_release.loc[target_year_release['target_ages'] == 'Kids']['show_id'],\n    mode='lines+markers',\n    name='Kids: Added Year',\n    marker_color='green',\n    \n    \n    ))\n\nfig.add_trace(go.Scatter( \n    x=target_year_release.loc[target_year_release['target_ages'] == 'Older Kids']['release_year'], \n    y=target_year_release.loc[target_year_release['target_ages'] == 'Older Kids']['show_id'],\n    mode='lines+markers',\n    name=' Older Kids: Ano de Lan\u00e7amento',\n    marker_color='Darkgreen',\n))\n\nfig.add_trace(go.Scatter( \n    x=target_year_release.loc[target_year_release['target_ages'] == 'Teens']['release_year'], \n    y=target_year_release.loc[target_year_release['target_ages'] == 'Teens']['show_id'],\n    mode='lines+markers',\n    name='Teens: Ano de Lan\u00e7amento',\n    marker_color='blue',\n))\n\nfig.add_trace(go.Scatter( \n    x=target_year_release.loc[target_year_release['target_ages'] == 'Adults']['release_year'], \n    y=target_year_release.loc[target_year_release['target_ages'] == 'Adults']['show_id'],\n    mode='lines+markers',\n    name='Adults: Ano de Lan\u00e7amento',\n    marker_color='orange',\n))\n\n\nfig.show()","a72646d8":"filmes_df","b579e4cf":"filmes_df.columns\n\n","8fd2b7cd":"filmes_df_ = filmes_df.loc[filmes_df['release_year']> 2007].groupby('year_added').agg({'show_id' : 'count'})","477b1819":"filmes_df_.diff().plot()","c9603c76":"filmes_df_1 = filmes_df.loc[filmes_df['release_year']> 2008].groupby('release_year').agg({'show_id' : 'count'})","01d68e0a":"filmes_df_1.diff().plot()","e68054e6":"tv_show_df\n\ntv_show_df_ = tv_show_df.loc[tv_show_df['release_year']> 2007].groupby('year_added').agg({'show_id' : 'count'})","5798bec4":"tv_show_df_","f96d2d1a":"tv_show_df_.diff().plot()","48c4ad80":"df_teste_1 = df[['title','release_year','year_added']]","ae62619c":"df_diff = df_teste_1.set_index('title').diff(axis=1)","5e602455":"df_diff","b9aff02b":"df_diff","6650a98b":"df_treino = df[['title','release_year','year_added']]","0ec63586":"target_df = df.loc[df['release_year'] == 2008]","b55a75d5":"target_df = target_df[['title','release_year','year_added']]","87089ae6":"target_df_diff = target_df.set_index('title').diff(axis=1)","97cc6a56":"target_df_diff.max()","f5068df2":"target_df_diff['year_added'].sort_values(ascending=False).head(10)","7a4998a6":"df.set_index('title').loc['Jaane Tu... Ya Jaane Na']","6bd3f1a7":"imdb_rating= pd.read_csv(\"..\/input\/imdb-extensive-dataset\/IMDb ratings.csv\",usecols=[\"weighted_average_vote\",\"total_votes\"])\nimdb_rating['total_votes'] \n","b009cfdf":"imdb_titles=pd.read_csv(\"..\/input\/imdb-extensive-dataset\/IMDb movies.csv\",usecols=['title','year','genre'])\nimdb_titles.columns\n","7756bcc4":"ratings_imdb=pd.DataFrame({'Title':imdb_titles['title'],\n                     'Release Year':imdb_titles['year'],\n                     'Rating': imdb_rating['weighted_average_vote'],\n                     'Total_votes': imdb_rating['total_votes'],\n                     'Genre': imdb_titles['genre']})","d83d160f":"ratings_imdb.sort_values('Total_votes',ascending=False).reset_index()","aa639588":"len(ratings_imdb)","86ed3e48":"len(df)","2451f315":"joint_data=ratings_imdb.merge(df,left_on=\"Title\",right_on='title',how='inner')\nlen(joint_data)","fd4a643c":"joint_data.isna().sum()","565f2bd9":"joint_data.set_index('Title').sort_values('Rating', ascending=False)","5746a9ab":"filmes_joint=joint_data[joint_data['type']=='Movie']\ntv_show_joint=joint_data[joint_data['type']=='TV Show']\n","e0db593e":"len(tv_show_joint)","a1ec1de0":"len(filmes_joint)","fbf1a2e8":"tv_show_joint.set_index('Title').sort_values('Rating', ascending=False).head(10)","d4be3083":"filmes_joint.columns","dfcb54f9":"filmes_joint.drop(['title','country','Release Year', 'Genre', 'type',], axis=1, inplace=True)","c4779978":"filmes_joint.drop([ 'season_count'], axis=1, inplace=True)","99f78d00":"filmes_joint.set_index('Title').sort_values('Rating', ascending=False)","f55b6d4f":"filmes_joint.describe().round(2).T","b202e2ae":"valor_minimo = filmes_joint['Total_votes'].min()\nvalor_maximo = filmes_joint['Total_votes'].max()\n","4a1fa93d":"classes = [valor_minimo, 50000, 500000, 1000000, valor_maximo]","0808b75e":"rotulos = ['votacao_D', 'votacao_C', 'votacao_B', 'votacao_A']","415fe672":"filmes_joint['votacao_label'] = pd.cut(x=filmes_joint['Total_votes'], bins=classes, labels=rotulos, include_lowest=True)","23dcabb0":"filmes_joint.set_index('Title').sort_values('Rating', ascending=False)","d8ada2aa":"filmes_joint.groupby('votacao_label').describe().round(2)","0154b916":"\nvalor_minimo = tv_show_joint['Total_votes'].min()\nvalor_maximo = tv_show_joint['Total_votes'].max()","2ed35439":"valor_minimo","8120995d":"valor_maximo","43e3e71b":"tv_show_joint.describe().round(2).T","29a8e992":"classes_tv = [valor_minimo, 50000, 300000,valor_maximo]","83661272":"rotulos_tv = ['votacao_C', 'votacao_B', 'votacao_A']","baa8ffa7":"tv_show_joint['votacao_label'] = pd.cut(x=tv_show_joint['Total_votes'], bins=classes_tv, labels=rotulos_tv, include_lowest=True)","4957acc0":"tv_show_joint.set_index('Title').sort_values('Rating', ascending=False)","48f9773f":"filmes_joint.set_index('Title').sort_values('Rating', ascending=True).head(20)\n","8cd5ada0":"ax1 = sns.distplot(filmes_joint['Rating'], norm_hist=True)\nax1.figure.set_size_inches(16, 8)\nax1.set_title('Distribui\u00e7\u00e3o das notas', fontsize=18,)\nax1.set_xlabel('Rating', fontsize=14)\nax1=0","5cd2684e":"import plotly.express as px\n\nfig = px.box(filmes_joint, x='Rating', orientation= 'h',  title= 'Boxplor das notas IMDb')\nfig.show()","e507ae5a":"sns.countplot(y=\"principal_genero\",data=filmes_joint)","793a2141":"filmes_top = filmes_joint.set_index('Title').sort_values('Rating', ascending=False).head(10)\nfilmes_top","088db62b":"sns.countplot(y=\"principal_genero\", data=filmes_top)","277633fd":"filmes_top","bbdfded7":"filmes_D = filmes_joint.loc[filmes_joint['votacao_label'] == 'votacao_D']\nfilmes_C = filmes_joint.loc[filmes_joint['votacao_label'] == 'votacao_C']\nfilmes_B = filmes_joint.loc[filmes_joint['votacao_label'] == 'votacao_B']\nfilmes_A = filmes_joint.loc[filmes_joint['votacao_label'] == 'votacao_A']\n","9fc6ae8f":"sns.set(style=\"darkgrid\")\nsns.kdeplot(data=filmes_A['Rating'])","1988048a":"filmes_A.describe().round(2).T","57885165":"filmes_D.describe().round(2).T","5646b454":"filmes_B.describe().round(2).T","0c02e12b":"sns.set(style=\"darkgrid\")\nsns.kdeplot(data=filmes_joint['duration_movie'])","d6fd0d90":"### Observa\u00e7\u00f5es\n\n- Os primeiros TV shows adicionados ao cat\u00e1logo eram das categorias teens e Adults\n- \u00c9 pr\u00f3ximo a propor\u00e7\u00e3o de TV shows e Movies no cen\u00e1rio de 2020 em compara\u00e7\u00e3 ao quadro geral\n- Nos dois cen\u00e1rios \u00e9 bastante pr\u00f3xima a produ\u00e7\u00e3o de Movies e TV shows da categoria Kids","b285d429":"### Curva de densidade da dura\u00e7\u00e3o de Movies \n\n- A curva de dura\u00e7\u00e3o dos Movies se assemelha a uma curva normal, mas assimetrica \u00e0 direita","d4823270":"### Como se divide o dataset entre Movies e Tv shows?","c49fec9c":"### Precisamos fazer algumas altera\u00e7\u00f5es no Dataframe\n<ul color='red' style='font-size: 18px; line-height: 2; text-align: justify;'>\n\n- Excluir a coluna 'Cast' e 'Description'\n- Criar a coluna 'Year_added' apartir da coluna 'Date_added'\n- Criar uma nova coluna \"Season_count\" no dataset para fixar a dura\u00e7\u00e3o das series de TV,atr\u00e1ves de uma fun\u00e7\u00e3o Lambda\n- Cortar da coluna \"duration\" os objetos que apresentam dura\u00e7\u00e3o em temporadas\n\n","813135cc":"# <font color='red' style='font-size: 30px;'>Juntando os datasets do Netflix e do IMDb<\/font>\n<hr style='border: 2px solid black;'>\n","86ae9916":"### Criando o DataFrame ratings_imdb","3a8c28cd":"### Tirando os EUA","dcc36c6c":"##  Dos filmes lan\u00e7ados a partir de 2008 qual demorou mais anos para ser adicionado no cat\u00e1logo da Netflix?","6c86d736":"### Crescimento ou decrescimento marginal da produ\u00e7\u00e3o de Movies e TV show?","df58e901":"## Transformando dados categ\u00f3ricos e n\u00famericos","68045711":"- 'teste_df' representa o dataset 'df' agrupado pela classifica\u00e7\u00e3o et\u00e1ria e pelo tipo\n- 'teste_antes' representa o dataset 'df' agrupado pela classifica\u00e7\u00e3o et\u00e1ria e pelo tipo adicionados em 2012\n- 'teste_depois' representa o dataset 'df' agrupado pela classifica\u00e7\u00e3o et\u00e1ria e pelo tipo adicionados em 2020","b6369167":"## Entre Movie e Tv Show's:","dc8de3c6":"# <font color='red' style='font-size: 30px;'>Dataset Netflix e IMDb<\/font>\n<hr style='border: 2px solid black;'>\n","0bd7c99f":"## Limpando dados faltantes","69633239":"### Juntando com o m\u00e9todo 'merge' os dois dataframes","cea34f28":"### Excluindo colunas que n\u00e3o ser\u00e3o utilizadas","8da228b8":"### Usando o m\u00e9todo mode() e utilizando a moda para preencher os valores ausentes","c5c0ee4a":"## Separando o DataFrame de Movies e Tv Show's","ee19d67a":"## Anexando o Dataset do IMDB\n\n- Utilizando apenas as colunas : \"weighted_average_vote\",\"total_votes\" do arquivo \"ratings.csv\"\n\n- Utilizando apenas as colunas : 'title','year','genre' do arquivo \"movies.csv\"\n","9021e4c4":"### Como se divide o Dataset entre as Classifica\u00e7\u00f5es et\u00e1rias? No geral e entre 2012 e 2020?","b9e51ac5":"### Os principais pa\u00edses produtores de conte\u00fado\n\n\n- Os EUA sozinhos representam 43% do Dataset\n- Para melhor analizarmos iremos dividir o dataset com e sem os EUA","30f1281b":"## Principais g\u00eaneros listados no Dataset","40843a0d":"### Observa\u00e7\u00f5es:\n<ul color='red' style='font-size: 18px; line-height: 2; text-align: justify;'>\n\n- Os filmes representam 69% do Dataset da Netflix","e7813fbf":"## Come\u00e7ando a An\u00e1lise Explorat\u00f3ria dos Dados","42c28170":"## <font color='red' style='font-size: 30px;'>Importando as bases de dados<\/font>","9e5b5f16":"### Os 10 filmes que mais demoraram para ser adicionados no cat\u00e1logo da Netflix","acf3f277":"### Separando os Dataframes de Filmes e TV Shows","97721b1b":"### <font color='black' style='font-size: 30px;'>Alterando as classifica\u00e7\u00f5es et\u00e1rias para melhor entendimento<\/font>","dc42b814":"### Extraindo o primeiro g\u00eanero listado e criando a coluna 'principal_genero'","d24d55d5":"## An\u00e1lise Explorat\u00f3ria dos dados","8f4cc6a3":"## Linha temporal de lan\u00e7amento e adi\u00e7\u00e3o de filmes a partir de 2008","cd84bb72":"### Criando a coluna do 'principal_country' que acomodar\u00e1 o principal pa\u00eds produtor","832b010f":"### Base de dados do Netflix","c66173c4":"## Como se distribuiu no tempo as classifica\u00e7\u00f5es et\u00e1rias?\n\n- 'target_year_df' representa o dataset agrupado pelas produ\u00e7\u00f5es adicionadas em 2012 e pelas suas classifica\u00e7\u00f5es et\u00e1rias\n- 'target_year_release' representa o dataset agrupado pelo ano de lan\u00e7amento e pela classifica\u00e7\u00e3o et\u00e1rias das produ\u00e7\u00f5es\n- Foi produzido dois gr\u00e1ficos para se avaliar o comportamento das produ\u00e7\u00f5es de acordo com sua categ\u00f3ria et\u00e1ria ao longo do tempo","636bee07":"### Como se comporta a produ\u00e7\u00e3o de Movies e Tv Shows?\n\n\n- released_year_df ser\u00e1  todas as produ\u00e7\u00f5es lan\u00e7adas a partir de 2008 agrupadas por ano de lan\u00e7amento e tipo.\n- added_year_df ser\u00e1  todas as produ\u00e7\u00f5es adicionadas ao cat\u00e1logo da Netdlix a partir de 2008 agrupadas por ano de lan\u00e7amento e tipo.","cfd9eba4":"### Tv show","fdbce8fa":"### Observa\u00e7\u00f5es\n\n- Drama e Com\u00e9dia s\u00e3o os g\u00eaneros mais famosos no dataset\n- O g\u00eanero de com\u00e9dia tamb\u00e9m pode ser considerado no g\u00eanero 'Stand-up Comedy'","6d02ea81":"### Atribuindo classes ao n\u00famero de votantes \n\n- No dataset h\u00e1 filmes avaliados por mais de 1 milh\u00e3o de usu\u00e1rios;\n- Por outro h\u00e1 filmes avaliados por apenas 100 usu\u00e1rios;\n- Seria justo avaliar as notas de produ\u00e7\u00f5es com diferen\u00e7as t\u00e3o discrepantes de avalia\u00e7\u00f5es?","9c5b2848":"## Importando as principais Bibliotecas\n\n<hr style='border: red;'>","0792c79b":"## Diferen\u00e7a entre ano de lan\u00e7amento e ano de adi\u00e7\u00e3o no cat\u00e1logo do Netflix"}}