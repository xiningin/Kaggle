{"cell_type":{"77f78215":"code","b5db19b3":"code","a853d665":"code","2b4e425d":"code","a032af1e":"code","8dc01bee":"code","0d2f55c6":"code","1719ca23":"code","d5219791":"code","93207f78":"markdown","6fbf0d9e":"markdown"},"source":{"77f78215":"%matplotlib inline\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"\nimport os\nimport ast\nimport datetime as dt\nimport matplotlib.pyplot as plt\nplt.rcParams['figure.figsize'] = [16, 10]\nplt.rcParams['font.size'] = 14\nimport seaborn as sns\nimport cv2\nimport pandas as pd\nimport numpy as np\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras.applications.mobilenet import preprocess_input","b5db19b3":"DP_DIR = '..\/input\/shuffle-csvs\/'\nINPUT_DIR = '..\/input\/quickdraw-doodle-recognition\/'\n\nBASE_SIZE = 256\nNCSVS = 100\nNCATS = 340\nnp.random.seed(seed=1987)\ntf.set_random_seed(seed=1987)\n\ndef f2cat(filename: str) -> str:\n    return filename.split('.')[0]\n\ndef list_all_categories():\n    files = os.listdir(os.path.join(INPUT_DIR, 'train_simplified'))\n    return sorted([f2cat(f) for f in files], key=str.lower)","a853d665":"size = 256\nbatchsize = 512","2b4e425d":"def draw_cv2_strokes1(raw_strokes, size=256, lw=4, index1=0, index2=1):\n    img = np.zeros((size, size, 3), np.uint8)\n    for t, stroke in enumerate(raw_strokes[index1:index2]):\n        for i in range(len(stroke[0]) - 1):\n            _ = cv2.line(img, (stroke[0][i]*size\/\/BASE_SIZE, stroke[1][i]*size\/\/BASE_SIZE),\n                         (stroke[0][i + 1]*size\/\/BASE_SIZE, stroke[1][i + 1]*size\/\/BASE_SIZE), (255,0,0), lw)\n        return img\n\n\ndef draw_cv2_strokes3(raw_strokes, size=256, lw=4, index1=0, index2=1):\n    img = np.zeros((size, size, 3), np.uint8)\n    for t, stroke in enumerate(raw_strokes[index1:index2]):\n        for i in range(len(stroke[0]) - 1):\n            _ = cv2.line(img, (stroke[0][i]*size\/\/BASE_SIZE, stroke[1][i]*size\/\/BASE_SIZE),\n                         (stroke[0][i + 1]*size\/\/BASE_SIZE, stroke[1][i + 1]*size\/\/BASE_SIZE), (0,0,255), lw)\n        return img\n\n\ndef draw_cv2_strokes2(raw_strokes, size=256, lw=4, index1=0, index2=1):\n    img = np.zeros((size, size, 3), np.uint8)\n    for t, stroke in enumerate(raw_strokes[index1:index2]):\n        for i in range(len(stroke[0]) - 1):\n            _ = cv2.line(img, (stroke[0][i]*size\/\/BASE_SIZE, stroke[1][i]*size\/\/BASE_SIZE),\n                         (stroke[0][i + 1]*size\/\/BASE_SIZE, stroke[1][i + 1]*size\/\/BASE_SIZE), (0,255,0), lw)\n        return img\n\n\ndef image_generator_xd(size, batchsize, ks, lw=6, time_color=True):\n    while True:\n        for k in np.random.permutation(ks):\n            filename = os.path.join(DP_DIR, 'train_k{}.csv.gz'.format(k))\n            for df in pd.read_csv(filename, chunksize=batchsize):\n                df['drawing'] = df['drawing'].apply(ast.literal_eval)\n                x = np.zeros((len(df), size, size, 3))\n                for i, raw_strokes in enumerate(df.drawing.values):\n                    num_of_strokes = len(raw_strokes)\n                    if num_of_strokes == 1:\n                        x[i, :, :, 0] = draw_cv2_strokes1(raw_strokes, size=size, lw=lw,\n                                                          index1=0, index2=1)[:,:,0]\n                        x[i, :, :, 1] = draw_cv2_strokes1(raw_strokes, size=size, lw=lw,\n                                                          index1=0, index2=1)[:,:,1]\n                        x[i, :, :, 2] = draw_cv2_strokes1(raw_strokes, size=size, lw=lw,\n                                                          index1=0, index2=1)[:,:,2]\n                    elif num_of_strokes == 2:\n                        x[i, :, :, 0] = draw_cv2_strokes1(raw_strokes, size=size, lw=lw,\n                                                          index1=0, index2=1)[:,:,0]\n                        x[i, :, :, 1] = draw_cv2_strokes2(raw_strokes, size=size, lw=lw,\n                                                          index1=1, index2=2)[:,:,1]\n                        x[i, :, :, 2] = draw_cv2_strokes2(raw_strokes, size=size, lw=lw,\n                                                         index1=0, index2=2)[:,:,2]\n                    else:\n                        x[i, :, :, 0] = draw_cv2_strokes1(raw_strokes, size=size, lw=lw,\n                                                         index1=0, index2=num_of_strokes \/\/ 3)[:,:,0]\n                        x[i, :, :, 1] = draw_cv2_strokes2(raw_strokes, size=size, lw=lw,\n                                                          index1=num_of_strokes \/\/ 3,\n                                                         index2=2 * num_of_strokes \/\/ 3)[:,:,1]\n                        x[i, :, :, 2] = draw_cv2_strokes3(raw_strokes, size=size, lw=lw,\n                                                         index1=2*num_of_strokes \/\/ 3,\n                                                         index2=3 * num_of_strokes \/\/ 3)[:,:,2]\n\n                x = preprocess_input(x).astype(np.float32)\n                y = keras.utils.to_categorical(df.y, num_classes=NCATS)\n                yield x, y","a032af1e":"train_datagen = image_generator_xd(size=size, batchsize=batchsize, ks=range(NCSVS - 1))","8dc01bee":"x, y = next(train_datagen)\nn = 6\nfig, axs = plt.subplots(nrows=n, ncols=n, sharex=True, sharey=True, figsize=(12, 12))\nfor i in range(n**2):\n    ax = axs[i \/\/ n, i % n]\n    (-x[i]+1)\/2\n    ax.imshow((x[i, :, :, :]+1)\/2)\n    ax.axis('off')\nplt.tight_layout()\nfig.savefig('gs.png', dpi=300)\nplt.show();","0d2f55c6":"color = [(187,255,255), (106, 90, 205),(0, 255, 127),(255,255,0),(255,193,37),(205,92,92),\n         (244, 164, 96), (255, 105, 180),(218, 112, 214),(255, 165, 0),(139, 134, 130),(24, 116, 205),\n         (187,255,255), (106, 90, 205),(0, 255, 127),(255,255,0),(255,193,37),(205,92,92),\n         (244, 164, 96), (255, 105, 180),(218, 112, 214),(255, 165, 0),(139, 134, 130),(24, 116, 205),\n        (187,255,255), (106, 90, 205),(0, 255, 127),(255,255,0),(255,193,37),(205,92,92),\n         (244, 164, 96), (255, 105, 180),(218, 112, 214),(255, 165, 0),(139, 134, 130),(24, 116, 205)]\n\ndef draw_cv2_strokes(raw_strokes, size=256, lw=4, color = color):\n    img = np.zeros((size, size, 3), np.uint8)\n    for t, stroke in enumerate(raw_strokes):\n        cl = color[t]\n        for i in range(len(stroke[0]) - 1):\n            _ = cv2.line(img, (stroke[0][i] * size \/\/ BASE_SIZE, stroke[1][i] * size \/\/ BASE_SIZE),\n                         (stroke[0][i + 1] * size \/\/ BASE_SIZE, stroke[1][i + 1] * size \/\/ BASE_SIZE), cl, lw)\n    return img\n\ndef image_generator_xd(size, batchsize, ks, lw=6):\n    while True:\n        for k in np.random.permutation(ks):\n            filename = os.path.join(DP_DIR, 'train_k{}.csv.gz'.format(k))\n            for df in pd.read_csv(filename, chunksize=batchsize):\n                df['drawing'] = df['drawing'].apply(ast.literal_eval)\n                x = np.zeros((len(df), size, size, 3))\n                for i, raw_strokes in enumerate(df.drawing.values):\n                    num_of_strokes = len(raw_strokes)\n                    if num_of_strokes == 1:\n                        x[i, :, :, 0] = draw_cv2_strokes(raw_strokes, size=size, lw=lw\n                                                           )[:, :, 0]\n                        x[i, :, :, 1] = draw_cv2_strokes(raw_strokes, size=size, lw=lw\n                                                          )[:, :, 1]\n                        x[i, :, :, 2] = draw_cv2_strokes(raw_strokes, size=size, lw=lw\n                                                           )[:, :, 2]\n                    elif num_of_strokes == 2:\n                        x[i, :, :, 0] = draw_cv2_strokes(raw_strokes, size=size, lw=lw\n                                                          )[:, :, 0]\n                        x[i, :, :, 1] = draw_cv2_strokes(raw_strokes, size=size, lw=lw\n                                                           )[:, :, 1]\n                        x[i, :, :, 2] = draw_cv2_strokes(raw_strokes, size=size, lw=lw\n                                                          )[:, :, 2]\n                    else:\n                        x[i, :, :, 0] = draw_cv2_strokes(raw_strokes, size=size, lw=lw\n                                                          )[:, :, 0]\n                        x[i, :, :, 1] = draw_cv2_strokes(raw_strokes, size=size, lw=lw\n                                                        )[:, :, 1]\n                        x[i, :, :, 2] = draw_cv2_strokes(raw_strokes, size=size, lw=lw\n                                                          )[:, :, 2]\n\n                x = preprocess_input(x).astype(np.float32)\n                y = keras.utils.to_categorical(df.y, num_classes=NCATS)\n                yield x, y\n\n\ndef df_to_image_array_xd(df, size, lw=6):\n    df['drawing'] = df['drawing'].apply(ast.literal_eval)\n    x = np.zeros((len(df), size, size, 3))\n    for i, raw_strokes in enumerate(df.drawing.values):\n        num_of_strokes = len(raw_strokes)\n        if num_of_strokes == 1:\n            x[i, :, :, 0] = draw_cv2_strokes(raw_strokes, size=size, lw=lw\n                                                           )[:, :, 0]\n            x[i, :, :, 1] = draw_cv2_strokes(raw_strokes, size=size, lw=lw\n                                                          )[:, :, 1]\n            x[i, :, :, 2] = draw_cv2_strokes(raw_strokes, size=size, lw=lw\n                                                           )[:, :, 2]\n        elif num_of_strokes == 2:\n            x[i, :, :, 0] = draw_cv2_strokes(raw_strokes, size=size, lw=lw\n                                                          )[:, :, 0]\n            x[i, :, :, 1] = draw_cv2_strokes(raw_strokes, size=size, lw=lw\n                                                           )[:, :, 1]\n            x[i, :, :, 2] = draw_cv2_strokes(raw_strokes, size=size, lw=lw\n                                                          )[:, :, 2]\n        else:\n            x[i, :, :, 0] = draw_cv2_strokes(raw_strokes, size=size, lw=lw\n                                                          )[:, :, 0]\n            x[i, :, :, 1] = draw_cv2_strokes(raw_strokes, size=size, lw=lw\n                                                        )[:, :, 1]\n            x[i, :, :, 2] = draw_cv2_strokes(raw_strokes, size=size, lw=lw\n                                                          )[:, :, 2]\n\n\n    x = preprocess_input(x).astype(np.float32)\n    return x","1719ca23":"train_datagen = image_generator_xd(size=size, batchsize=batchsize, ks=range(NCSVS - 1))","d5219791":"x, y = next(train_datagen)\nn = 6\nfig, axs = plt.subplots(nrows=n, ncols=n, sharex=True, sharey=True, figsize=(12, 12))\nfor i in range(n**2):\n    ax = axs[i \/\/ n, i % n]\n    (-x[i]+1)\/2\n    ax.imshow((x[i, :, :, :]+1)\/2)\n    ax.axis('off')\nplt.tight_layout()\nfig.savefig('gs.png', dpi=300)\nplt.show();","93207f78":"# Colored strokes\n\nHere is my way to color the srokes in three part and colored them in three original color. Really use some very redudant code and after my preprocessing the model getting worse to figure them out.","6fbf0d9e":"### Another way\nColor every stroke in different colors. Currently I use 12 color."}}