{"cell_type":{"5c9c6317":"code","a3f624f0":"code","92ceb1e7":"code","88ef3f3b":"code","5ed9649e":"code","4328c2cd":"code","5b1f1d28":"code","d1461b4a":"code","0a80a8e1":"code","f892286b":"code","5dbb733c":"code","4dafaa26":"code","588a2c30":"code","3afb9010":"code","7f7a50f3":"code","03ea1003":"code","c497ef77":"code","9967b601":"code","6a6ff85e":"code","e79e34e6":"code","b2665736":"markdown","682199c5":"markdown","5c6ce41b":"markdown"},"source":{"5c9c6317":"#Osman Balli\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom plotly.subplots import make_subplots\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","a3f624f0":"df = pd.read_csv(\"\/kaggle\/input\/videogamesales\/vgsales.csv\")\ndf.head()\n","92ceb1e7":"df.shape","88ef3f3b":"df.columns","5ed9649e":"#Count of Null Value\nprint(df.isnull().sum())","4328c2cd":"ax=sns.catplot(y = \"Platform\", kind = \"count\",\n            palette = \"pastel\", edgecolor = \".10\",\n            data = df)\n","5b1f1d28":"ax = sns.catplot(x='Genre',kind='count',data=df,orient=\"h\",height=10,aspect=1)\nax.fig.suptitle('Count of Games per Genre',fontsize=16,color=\"r\")\nax.fig.autofmt_xdate()","d1461b4a":"Genre_= df.groupby('Genre')[['NA_Sales','EU_Sales','JP_Sales','Other_Sales']].sum()\nprint(Genre_)","0a80a8e1":"import plotly.graph_objs as go\nimport plotly.offline as pyoff\n\nplot_data = [\n    go.Bar(x=Genre_.axes[0], y=Genre_[\"NA_Sales\"], name='NA_Sales',width=0.2,marker_color='rgb(220,20,60)'),\n    go.Bar(x=Genre_.axes[0], y=Genre_[\"EU_Sales\"], name='EU_Sales',width=0.2,marker_color='rgb(102,216,23)'),\n    go.Bar(x=Genre_.axes[0], y=Genre_[\"JP_Sales\"], name='JP_Sales',width=0.2,marker_color='rgb(5,200,200)'),\n    go.Bar(x=Genre_.axes[0], y=Genre_[\"Other_Sales\"], name='Other_Sales',width=0.2,marker_color='rgb(123,104,238)'),\n]\nplot_layout = go.Layout(\n        title='Total Sales by Genre',\n        yaxis_title='Sales',\n        xaxis_title='Genre'\n    )\nfig = go.Figure(data=plot_data, layout=plot_layout)\npyoff.iplot(fig)","f892286b":"import numpy as np\nMaxSaleGame=df[df[\"Global_Sales\"]==df[\"Global_Sales\"].max()][\"Name\"]\nlist=[\"NA_Sales\",\"EU_Sales\",\"JP_Sales\",\"Other_Sales\"]\nlist_value=[]\nfor i in list:\n    MaxGlobalSale=df[df[\"Global_Sales\"]==df[\"Global_Sales\"].max()][i]\n    list_value.append(MaxGlobalSale[0])\nlist_value","5dbb733c":"## plot\ntitle='sales percentages of the game with maximum sales -----> '+MaxSaleGame[0]\nimport plotly.graph_objects as go\nfrom plotly.offline import init_notebook_mode, iplot\ntrace = go.Pie(labels=list, values=list_value, pull=[0.02, 0.02, 0.02, 0.02])\nlayout = go.Layout(title=title, height=600, legend=dict(x=0.7, y=1))\nfig = go.Figure(data = [trace], layout = layout)\niplot(fig)","4dafaa26":"# Top 50 sales\nTop50 = df.sort_values(\"Global_Sales\").tail(20)[[ 'Name', 'Platform', 'Year', 'Genre', 'Publisher','Global_Sales']]\na=Top50[['Name','Global_Sales']]","588a2c30":"import plotly.express as px\nfig = px.bar(a, x=\"Global_Sales\", y=\"Name\", \n               text='Name', orientation='h', color_discrete_sequence = ['#a3de83'])\nfig.update_layout(title=\"Top 20 Sales\",height=550)\n","3afb9010":"uniq=df[\"Genre\"].unique()\ntotal_Genre = []\nfor i in uniq:\n    total_Genre.append(len(df[df[\"Genre\"]==i]))\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n\nlabels = uniq\n\n# Create subplots: use 'domain' type for Pie subplot\n\nfig.add_trace(go.Pie(labels=labels, values=total_Genre, name=\"Genre\"))\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=total_Genre, hole=.3)])\nfig.update_layout(\n    title_text=\"Total Game Count in Genre\",\n    # Add annotations in the center of the donut pies.\n    annotations=[dict(text='Genre', x=0.5, y=0.5, font_size=20, showarrow=False)])\nfig.show()","7f7a50f3":"#Remove of Null Value in Publisher\nPublisher=df.iloc[df[\"Publisher\"].dropna().index]\nPublisher.isnull().sum()","03ea1003":"uniq=Publisher[\"Publisher\"].unique()\ntotal_Publisher = []\nfor i in uniq:\n    total_Publisher.append(len(df[df[\"Publisher\"]==i]))\ntotal_Publisher","c497ef77":"plot_data = go.Scatter(\n    x=uniq,\n    y=total_Publisher,\n    mode='markers',\n)\n\nplot_layout = go.Layout(\n        title=\"Total Game Count in Publisher\",\n        yaxis_title='Count',\n        xaxis_title='Publisher'\n    )\nfig = go.Figure(data=plot_data, layout=plot_layout)\npyoff.iplot(fig)","9967b601":"#Remove of Null Value in Year\nYear=df.iloc[df[\"Year\"].dropna().index]\nYear.isnull().sum()","6a6ff85e":"global_sales_year = Year.groupby(\"Year\")[\"Global_Sales\"].sum()\nglobal_sales_year","e79e34e6":"import plotly.graph_objects as go\n\nfig = go.Figure(go.Scatter(\n    y=global_sales_year,\n    x=global_sales_year.axes[0],name='Total Global Sales',mode='lines+markers'))\n\nfig.update_layout(\n    title={\n        'text': \"Total Global Sales in Years\",\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\n\nfig.show()","b2665736":"# ****Analysis of Video Games Sales****","682199c5":"# [blog.osmanballi.com](https:\/\/blog.osmanballi.com\/)","5c6ce41b":"![](https:\/\/i1.wp.com\/www.thexboxhub.com\/wp-content\/uploads\/2019\/08\/game-controllers.jpg?fit=796%2C416&ssl=1)"}}