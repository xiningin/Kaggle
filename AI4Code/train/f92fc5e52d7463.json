{"cell_type":{"c2577153":"code","c4f0cfac":"code","7492db24":"code","f2ceca5e":"code","4807da40":"code","c99951e5":"code","2b33f7b1":"code","4ad2e0fa":"code","6771e500":"code","29ff4044":"code","dde07412":"code","b293024b":"code","901fb83b":"code","06805752":"code","dd29d6e2":"code","a5b31d3b":"code","eec49922":"code","e20a7644":"code","0db7ebd3":"code","576995cf":"code","84f2c3d0":"code","2d3d4bf2":"code","3e927495":"code","cee86a2b":"code","169aa055":"code","e61782da":"code","8485df09":"code","ef1c50f2":"markdown"},"source":{"c2577153":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","c4f0cfac":"import pandas as pd\ndf = pd.read_csv(\"..\/input\/wwwkagglecomkaixinguoguo\/ma_resp_data_temp.csv\")","7492db24":"df.head()","f2ceca5e":"df.info()","4807da40":"df[\"KBM_INDV_ID\"]=df[\"KBM_INDV_ID\"].astype(\"object\") ","c99951e5":"df.describe().T","2b33f7b1":"#\u53ef\u89c6\u5316\u6570\u636e\u5206\u5e03\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.style.use(\"seaborn\")\nplt.rcParams[\"font.sans-serif\"]=[\"SimHei\"]\nplt.rcParams[\"axes.unicode_minus\"]=False","4ad2e0fa":"#\u7edf\u8ba1\u76ee\u6807\u6807\u7b7e\u662f\u5426\u5e73\u8861\ndf.resp_flag.value_counts()[0]\/df.shape[0]","6771e500":"df.resp_flag.value_counts()[1]\/df.shape[0]","29ff4044":"plt.figure(figsize=(10,3))  #\u8bbe\u7f6e\u753b\u5e03\u5927\u5c0f\nsns.countplot(y=\"resp_flag\",data=df)#\u5206\u7c7b\u67f1\u72b6\u56fecountplot\nplt.show()","dde07412":"#\u67e5\u770b\u603b\u4f53\u7684\u5e74\u9f84\u5206\u5e03\u60c5\u51b5\nsns.distplot(df[\"age\"],bins=20)","b293024b":"#\u662f\u5426\u8d2d\u4e70\u4fdd\u9669\u5e74\u9f84\u6bb5\nimport seaborn as sns\nsns.kdeplot(df.age[df.resp_flag==1],label=\"1\",shade=True)\nsns.kdeplot(df.age[df.resp_flag==0],label=\"0\",shade=True)\nplt.xlim([60,90])\nplt.xlabel(\"Age\")\nplt.ylabel(\"Density\")","901fb83b":"#\u6027\u522b\u6bd4\u4f8b\nplt.figure(figsize=(3,5))  \nsns.countplot(x=\"GEND\",data=df)\nplt.show()","06805752":"#\u5b66\u5386\u6bd4\u4f8b\nplt.figure(figsize=(10,3))\nsns.countplot(y=\"c210mys\",data=df)\nplt.show()","dd29d6e2":"#\u4e0d\u540c\u5b66\u5386\u8d2d\u4e70\u4fdd\u9669\u60c5\u51b5\nsns.countplot(x=\"c210mys\",hue=\"resp_flag\",data=df)  #hue\u5206\u7c7b\u53d8\u91cf\nplt.xlabel(\"\u5b66\u5386\")\nplt.ylabel(\"\u8d2d\u4e70\u6570\u91cf\")","a5b31d3b":"#\u53bf\u7ea7\u5927\u5c0f\u8d2d\u4e70\u4fdd\u9669\u60c5\u51b5\nsns.countplot(x=\"N2NCY\",hue=\"resp_flag\",data=df)\nplt.xlabel(\"municipal\")\nplt.ylabel(\"count\")\nplt.rcParams['font.sans-serif'] = ['Microsoft YaHei'] \nplt.rcParams['axes.unicode_minus'] = False ","eec49922":"#\u5904\u7406\u7a7a\u503c\nNA=df.isnull().sum().reset_index()\nNA.columns=[\"Var\",\"NA_count\"]\nNA=NA[NA.NA_count>0].reset_index(drop=True)\nNA.NA_count\/df.shape[0]","e20a7644":"temp=[]\nfor i in NA.Var:\n    temp.append(df[i].dtypes)\nNA[\"\u6570\u636e\u7c7b\u578b\"]=temp  ","0db7ebd3":"#\u586b\u5145\u7a7a\u503c\nfor i in NA[NA.Var!=\"age\"].Var:\n    df[i].fillna(df[i].mode()[0],inplace=True)\ndf.age.fillna(df.age.mean(),inplace=True)","576995cf":"del df[\"KBM_INDV_ID\"]  ","84f2c3d0":"#\u53d8\u91cf\u7f16\u7801\nfrom sklearn.preprocessing import OrdinalEncoder\nfor i in df.columns:\n    if df[i].dtype==\"object\":\n        df[i]=OrdinalEncoder().fit_transform(df[[i]])","2d3d4bf2":"from sklearn.model_selection import train_test_split\nX=df.iloc[:,1:]\ny=df[\"resp_flag\"]\nXtrain,Xtest,ytrain,ytest=train_test_split(X,y,test_size=0.2,random_state=420)","3e927495":"from sklearn import tree\nclf=tree.DecisionTreeClassifier()\nclf.fit(Xtrain,ytrain)\nclf.score(Xtest,ytest)","cee86a2b":"max_depth=range(2,10)","169aa055":"from sklearn.model_selection import cross_val_score","e61782da":"score=[]\nfor i in max_depth:\n    clf=tree.DecisionTreeClassifier(max_depth=i)\n    result=cross_val_score(clf,Xtrain,ytrain,cv=5)\n    score.append(result.mean())\nplt.plot(max_depth,score)\n","8485df09":"clf=tree.DecisionTreeClassifier(max_depth=7,min_samples_leaf=500)\nclf.fit(Xtrain,ytrain)\nclf.score(Xtest,ytest)","ef1c50f2":"> \u6b64\u4e3a\u9488\u5bf965\u4ee5\u4e0a\u4eba\u7fa4\u63a8\u51fa\u7684\u533b\u7597\u9644\u52a0\u9669,\u76ee\u7684\u627e\u51fa\u6700\u5177\u6709\u8d2d\u4e70\u503e\u5411\u7684\u4eba\u7fa4\u8fdb\u884c\u4fdd\u9669\u8425\u9500"}}