{"cell_type":{"3c3c9175":"code","4ecbcc34":"code","9610807c":"code","4d81aa6f":"code","6d08a09f":"code","6bc707c6":"code","de894b94":"code","608e42d0":"code","7c1a598c":"code","57921b6a":"code","4c0060f3":"code","ecfa7bc9":"code","7adc8528":"code","049cbf2a":"code","fa1e23d4":"code","f45b3db4":"code","96ca4221":"code","d07e02c1":"code","e06f0b27":"code","8520c116":"code","5073e255":"code","e97da0ea":"code","53e7edc4":"code","d5d17e31":"code","db697446":"code","a2a7260e":"code","eaf0e511":"code","cbb6a91f":"code","682effdb":"code","f58d3716":"code","8b51fd38":"code","a31e8f5f":"code","08dead7d":"code","ff0cdc0f":"code","26550e79":"code","1c3141e7":"code","f7d8d6c8":"code","a8df64d9":"code","2e80d23a":"code","d2a0e6a5":"code","e0486565":"code","e4359629":"code","15ef11a5":"code","8c604adb":"code","d91f0f00":"code","5146f2fe":"code","a4758ff4":"code","01133168":"code","f6107c41":"code","39bfb0da":"code","3a95f672":"code","497050ec":"code","91da514e":"code","9c378398":"code","e65768f9":"code","659f93c8":"code","c5f020e0":"code","c3fa254e":"code","eec60f2e":"code","c81f41f9":"code","c61bbe84":"code","4a0335e2":"code","899fb2f4":"code","c7d40ee3":"code","94155d05":"code","b544d3c8":"code","51cf3129":"code","d5a4ce28":"code","321beaee":"code","f3fec75a":"code","aaa90a99":"code","596a4538":"code","84567932":"code","8a7bf6a4":"code","4dd8edb6":"code","b2072482":"code","cb2437a0":"code","0c691482":"code","9f079932":"code","aeb14f83":"code","7dc6c3f5":"code","89d38815":"code","1679cdd1":"code","fa850d14":"code","d084fc14":"code","c9c8d2f6":"code","16ce7ae3":"code","3aea558e":"code","cb181f2b":"code","65fd6a08":"code","d1015abd":"code","5ddd02dc":"code","5c587816":"code","85fcd354":"code","5eab0562":"code","f2fb285a":"code","2b5291a9":"code","c13e1a95":"code","d8580617":"code","45d16aea":"code","004bfe58":"code","1114057b":"code","88147b76":"code","ad881d7b":"code","5fd99b46":"code","b95e2a9b":"code","f052fdf7":"code","d9bbea7f":"code","110b75f9":"code","23781de9":"code","45adef6e":"code","927cf5ad":"code","294806c9":"code","c5c506a7":"code","34eee6ff":"code","d868730a":"code","f927735d":"code","72fe6b1c":"code","c62f9300":"code","8f322e85":"code","2923d428":"code","f789278e":"code","f87a2efe":"code","f6e18372":"code","1414664b":"code","95bb7135":"code","afd6fcaf":"code","449affa8":"code","56f34c1c":"code","bbe0a71e":"code","e8c7f09b":"code","08951b95":"code","2674f82d":"code","84db0a26":"code","f55c7607":"code","39ce0a20":"code","ab1ecb7c":"code","537ec3fb":"code","6f48f1bf":"code","e3afcb84":"code","55349a04":"code","3d5065b2":"code","09a732f1":"code","941d4df4":"markdown","2f8286cb":"markdown","1dcf3e0a":"markdown","0c778e7f":"markdown","3763543f":"markdown","198fbe43":"markdown","edc352c0":"markdown","b3835b91":"markdown","57ead0fc":"markdown","c2afbd33":"markdown","45494b83":"markdown","33d43f5d":"markdown","7aad61ab":"markdown","197bb724":"markdown","c7f3a5f5":"markdown","2bbea81a":"markdown","4c20eafd":"markdown","77e7b22b":"markdown","0bd8b875":"markdown","61e6f556":"markdown","e1ba2667":"markdown","3d858073":"markdown","2c1cfeb0":"markdown","fb14b2e6":"markdown","b43b3e0b":"markdown","51657535":"markdown","64645945":"markdown","773f4ef0":"markdown","e461a731":"markdown","4de49ea9":"markdown","ca24c4a5":"markdown","73e9e7a8":"markdown","facc3aed":"markdown","c9393f10":"markdown","fb484bfc":"markdown","d418a60e":"markdown","7feb9ab9":"markdown","9d61ffc4":"markdown","14d12e2d":"markdown","3b69fdf3":"markdown","f52949ca":"markdown","62010e69":"markdown","294eefb5":"markdown","e20d2f3c":"markdown","65d8cfe2":"markdown","460bc383":"markdown","69ab1d38":"markdown","9c85d222":"markdown","1ee79867":"markdown","3aa4da1e":"markdown","ae09f320":"markdown","79ce453b":"markdown","ef339c58":"markdown","a535ac7b":"markdown"},"source":{"3c3c9175":"# For Dataset handling\nimport numpy as np\nimport pandas as pd\n\n# For Checking Distribution Data\nfrom scipy.stats import chisquare, kstest, normaltest\n\n# For Data Visualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","4ecbcc34":"df = pd.read_csv('..\/input\/hr-analytics-job-change-of-data-scientists\/aug_train.csv')","9610807c":"pd.set_option('display.max_columns', None)","4d81aa6f":"df.head()","6d08a09f":"((df['target'].value_counts()\/len(df))*100).round(2)","6bc707c6":"sizes = list(df['target'].value_counts().sort_values().values)\nlabels = list(df['target'].value_counts().sort_values().index)\n\nexplode = [0, 0.1]\n\nplt.figure(figsize=(6,6))\nplt.pie(sizes, labels=labels, explode = explode,\n        autopct=lambda p:f'{p:.2f}%')\nplt.title('Looking for New Job Percentage', fontsize=25)\nplt.tight_layout()\nplt.show()","de894b94":"df.info()","608e42d0":"df.describe().T","7c1a598c":"df.describe(include = 'object').T","57921b6a":"dataDesc= []\n\nfor i in df.columns:\n    dataDesc.append([\n        i, \n        df[i].dtypes,\n        df[i].isna().sum(),\n        round((((df[i].isna().sum()) \/ len(df)) * 100),2),\n        df[i].nunique(),\n        df[i].sample(20).drop_duplicates().values\n    ])\npd.DataFrame(dataDesc, columns=[\n    \"Data features\", \n    \"Data types\",\n    \"Null\",\n    \"Null Percentage\",\n    \"Unique\",\n    \"Unique Sample\"\n])","4c0060f3":"df.isna().sum()","ecfa7bc9":"for column in ['gender','enrolled_university','education_level','major_discipline', 'experience', 'company_size', 'company_type','last_new_job']:\n    df[column].fillna(df[column].mode()[0], inplace=True)","7adc8528":"df.isna().sum()","049cbf2a":"pip install dython","fa1e23d4":"df = df.drop(columns=[\"enrollee_id\"])","f45b3db4":"#For Correlation Checking\nimport dython\nfrom dython.nominal import associations, cramers_v, correlation_ratio, theils_u","96ca4221":"# Crammers V\ncategorical = df.select_dtypes('object').columns.to_list()\n\nassoc_cramers = []\nfor i in  categorical:\n    assoc = round(cramers_v(df['target'], df[i]),2)\n    assoc_cramers.append(assoc)","d07e02c1":"df_cramers_v = pd.DataFrame(data=[assoc_cramers], columns=categorical, index=['target'])","e06f0b27":"plt.figure(figsize = (13,1))\nsns.heatmap(df_cramers_v, cbar = False, annot=True)","8520c116":"numerical = df.select_dtypes(['int64', 'float64']).columns.to_list()\n\nassoc_corratio = []\nfor i in  numerical:\n    assoc = round(correlation_ratio(df['target'], df[i]),2)\n    assoc_corratio.append(assoc)","5073e255":"numerical","e97da0ea":"df_corr_ratio = pd.DataFrame(data=[assoc_corratio], columns=numerical, index=['target'])","53e7edc4":"plt.figure(figsize = (13,1))\nsns.heatmap(df_corr_ratio, cbar = False, annot=True)","d5d17e31":"df.head()","db697446":"df[df.duplicated()]","a2a7260e":"df.duplicated().sum()","eaf0e511":"df.drop_duplicates(keep='first',inplace=True)\ndf.info()","cbb6a91f":"df['city'].nunique()","682effdb":"df['city'].value_counts()","f58d3716":"df['city'] = df['city'].str.replace('city_','')","8b51fd38":"df['city'].value_counts()","a31e8f5f":"df['city'] = df['city'].astype('int64')","08dead7d":"plt.figure(figsize=(12, 5))\nsns.kdeplot(data=df, x=\"city\", hue=\"target\",cut = 0,palette='Set2')\nplt.title('Density Person change a job based on City')\nplt.show()","ff0cdc0f":"plt.figure(figsize=(12, 5))\nsns.kdeplot(data=df, x=\"city_development_index\", hue=\"target\",cut = 0,palette='GnBu')\nplt.title('Density Person change a job based on City Development Index')\nplt.show()","26550e79":"plt.figure(figsize=(12, 5))\nsns.countplot(x=df[\"gender\"],hue=df[\"target\"], data=df, palette='mako')\nplt.title('Gender Status Comparison')\nplt.show()","1c3141e7":"Marital = ((pd.crosstab(index= df[\"gender\"], columns= df[\"target\"], normalize=\"index\"))*100).round(2)\nMarital.sort_values(1,ascending=False)","f7d8d6c8":"df['relevent_experience'].value_counts()","a8df64d9":"df['relevent_experience'] = df['relevent_experience'].map({'Has relevent experience' : 1, 'No relevent experience' : 0})","2e80d23a":"plt.figure(figsize=(15, 8))\nsns.countplot(x=df[\"relevent_experience\"],hue=df[\"target\"], data=df, palette='mako')\nplt.title('Relevent Experience Comparison')\nplt.show()","d2a0e6a5":"Marital = ((pd.crosstab(index= df[\"relevent_experience\"], columns= df[\"target\"], normalize=\"index\"))*100).round(2)\nMarital.sort_values(1,ascending=False)","e0486565":"plt.figure(figsize=(15, 8))\nsns.countplot(x=df[\"enrolled_university\"],hue=df[\"target\"], data=df, palette='mako')\nplt.title('University Enrollment Comparison')\nplt.show()","e4359629":"Marital = ((pd.crosstab(index= df[\"enrolled_university\"], columns= df[\"target\"], normalize=\"index\"))*100).round(2)\nMarital.sort_values(1,ascending=False)","15ef11a5":"plt.figure(figsize=(15, 8))\nsns.countplot(x=df[\"education_level\"],hue=df[\"target\"], data=df, palette='mako')\nplt.title('Education Level Comparison')\nplt.show()","8c604adb":"Marital = ((pd.crosstab(index= df[\"education_level\"], columns= df[\"target\"], normalize=\"index\"))*100).round(2)\nMarital.sort_values(1,ascending=False)","d91f0f00":"plt.figure(figsize=(15, 8))\nsns.countplot(x=df[\"major_discipline\"],hue=df[\"target\"], data=df, palette='mako')\nplt.title('Major Discipline Comparison')\nplt.show()","5146f2fe":"Marital = ((pd.crosstab(index= df[\"major_discipline\"], columns= df[\"target\"], normalize=\"index\"))*100).round(2)\nMarital.sort_values(1,ascending=False)","a4758ff4":"df['experience'].value_counts()","01133168":"df['experience'] =  df['experience'].replace({'<1' : '0','>20': '21'})","f6107c41":"df['experience'].value_counts()","39bfb0da":"df['experience'] = df['experience'].astype('int64')","3a95f672":"plt.figure(figsize=(15, 8))\nsns.kdeplot(data=df, x=\"experience\", hue=\"target\",cut = 0,palette='GnBu')\nplt.title('Density Person change a job based on Year Experience')\nplt.show()","497050ec":"Marital = ((pd.crosstab(index= df[\"experience\"], columns= df[\"target\"], normalize=\"index\"))*100).round(2)\nMarital.sort_values(1,ascending=False)","91da514e":"df['company_size'].value_counts()","9c378398":"company_size_mapping = {'<10': 1,'10\/49': 2,'50-99': 3, '100-500': 4,'500-999': 5,'1000-4999': 6,'5000-9999': 7,'10000+': 8}","e65768f9":"df['company_size'] = df['company_size'].map(company_size_mapping)","659f93c8":"plt.figure(figsize=(15, 8))\nsns.kdeplot(data=df, x=\"company_size\", hue=\"target\",cut = 0,palette='mako')\nplt.title('Density Person change a job based on Company Size')\nplt.show()","c5f020e0":"Marital = ((pd.crosstab(index= df[\"company_size\"], columns= df[\"target\"], normalize=\"index\"))*100).round(2)\nMarital.sort_values(1,ascending=False)","c3fa254e":"df['company_type'].value_counts()","eec60f2e":"plt.figure(figsize=(15, 8))\nsns.countplot(x=df[\"company_type\"],hue=df[\"target\"], data=df, palette='mako')\nplt.title('Company Type Comparison')\nplt.show()","c81f41f9":"Marital = ((pd.crosstab(index= df[\"company_type\"], columns= df[\"target\"], normalize=\"index\"))*100).round(2)\nMarital.sort_values(1,ascending=False)","c61bbe84":"df['last_new_job'].value_counts()","4a0335e2":"plt.figure(figsize=(15, 8))\nsns.countplot(x=df[\"last_new_job\"],hue=df[\"target\"], data=df, palette='mako')\nplt.title('Years in Last Job Comparison')\nplt.show()","899fb2f4":"Marital = ((pd.crosstab(index= df[\"last_new_job\"], columns= df[\"target\"], normalize=\"index\"))*100).round(2)\nMarital.sort_values(1,ascending=False)","c7d40ee3":"plt.figure(figsize=(15, 8))\nsns.kdeplot(data=df, x=\"training_hours\", hue=\"target\",cut = 0,palette='mako')\nplt.title('Density Person change a job based on Trainig Hours Taken')\nplt.show()","94155d05":"df = df.drop(columns=[\"gender\"])\ndf = df.drop(columns=[\"major_discipline\"])","b544d3c8":"df.head()","51cf3129":"from sklearn.model_selection import train_test_split,GridSearchCV,RandomizedSearchCV,StratifiedKFold\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import RobustScaler,PolynomialFeatures,PowerTransformer,OneHotEncoder\nfrom sklearn.compose import ColumnTransformer","d5a4ce28":"x = df.drop(columns='target')\ny = df['target']","321beaee":"x_train,x_test,y_train,y_test = train_test_split(x,y,train_size=.80,stratify=y,random_state=42)","f3fec75a":"from sklearn.svm import SVC\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\n\nfrom sklearn.preprocessing import StandardScaler, RobustScaler\n\nfrom sklearn.model_selection import train_test_split, StratifiedKFold, GridSearchCV, cross_val_score\nfrom sklearn.metrics import accuracy_score, recall_score, precision_score, f1_score, confusion_matrix, classification_report, roc_curve,roc_auc_score\nfrom sklearn.preprocessing import OrdinalEncoder, OneHotEncoder, LabelEncoder","aaa90a99":"def log_evaluation(data_sample_train,data_sample_test, aktual_train,aktual_test, model):\n    hasil_model_train = model.predict(data_sample_train)\n    accuracy_train = accuracy_score(aktual_train, hasil_model_train)\n    recall_train = recall_score(aktual_train, hasil_model_train)\n    precision_train = precision_score(aktual_train, hasil_model_train)\n    f1_train = f1_score(aktual_train, hasil_model_train)\n    rocauc_train = roc_auc_score(aktual_train,hasil_model_train)\n\n    hasil_model_test = model.predict(data_sample_test)\n    accuracy_test = accuracy_score(aktual_test, hasil_model_test)\n    recall_test = recall_score(aktual_test, hasil_model_test)\n    precision_test = precision_score(aktual_test, hasil_model_test)\n    f1_test = f1_score(aktual_test, hasil_model_test)\n    rocauc_test = roc_auc_score(aktual_test,hasil_model_test)\n    \n    cm = confusion_matrix(aktual_test, hasil_model_test, labels=[1,0])\n    df_cm = pd.DataFrame(cm, index = [\"akt1\", \"akt0\"],columns=[\"pred 1\" , \"pred 0\"])\n    cr = classification_report(aktual_test, hasil_model_test)\n\n\n    hasil_evaluation = pd.DataFrame(data= {\"Training\" : [accuracy_train, recall_train, precision_train,f1_train,rocauc_train],\"Testing\" : [accuracy_test, recall_test, precision_test,f1_test,rocauc_test]}, index=[\"accuracy\", \"recall\" , \"precission\", \"F1 Score\", \"ROCAUC\"] )\n\n    return hasil_model_train, hasil_model_test, hasil_evaluation, df_cm, cr","596a4538":"x.head()","84567932":"num_columns = ['city','city_development_index','relevent_experience','experience',\"company_size\",\"training_hours\"]\n\ncat_columns = [\"enrolled_university\", \"education_level\",\"company_type\",\"last_new_job\"]\n","8a7bf6a4":"num_pipeline = Pipeline([\n    ('imputer',SimpleImputer(strategy='mean'))\n])\n\n\ncat_pipeline = Pipeline([\n    ('encoder',OneHotEncoder())\n])\n\n\n\npreprocessor = ColumnTransformer([\n    ('numeric',num_pipeline,num_columns),\n    ('categoric1',cat_pipeline,cat_columns),\n \n])\n\nPipe_lr = Pipeline([\n    ('prep',preprocessor),\n    ('algo',LogisticRegression(solver='liblinear'))\n\n])","4dd8edb6":"Pipe_lr.fit(x_train,y_train)","b2072482":"lr_hasil_train, lr_hasil_test, lr_evaluation, lr_cm, lr_cr = log_evaluation(x_train, x_test, y_train, y_test, Pipe_lr)","cb2437a0":"lr_evaluation","0c691482":"lr_cm","9f079932":"print(lr_cr)","aeb14f83":"\n\nnum_pipeline = Pipeline([\n    ('imputer',SimpleImputer(strategy='mean')),\n    ('scaler',RobustScaler())\n])\n\n\ncat_pipeline = Pipeline([\n    ('encoder',OneHotEncoder())\n])\n\n\n\npreprocessor = ColumnTransformer([\n    ('numeric',num_pipeline,num_columns),\n    ('categoric1',cat_pipeline,cat_columns)\n    \n])\n\nPipe_SVC = Pipeline([\n    ('prep',preprocessor),\n    ('algo',SVC(max_iter=300,probability=True))\n\n])","7dc6c3f5":"Pipe_SVC.fit(x_train,y_train)","89d38815":"svm_hasil_train, svm_hasil_test, svm_evaluation, svm_cm, svm_cr = log_evaluation(x_train, x_test, y_train, y_test, Pipe_SVC)","1679cdd1":"svm_evaluation","fa850d14":"svm_cm","d084fc14":"print(svm_cr)","c9c8d2f6":"\nnum_pipeline = Pipeline([\n    ('imputer',SimpleImputer(strategy='mean'))\n])\n\n\ncat_pipeline = Pipeline([\n    ('encoder',OneHotEncoder())\n])\n\n\n\npreprocessor = ColumnTransformer([\n    # ('Nama Instruksi',fungsinya, data yang akan dieksekusi dengan fungsi tsb)\n    ('numeric',num_pipeline,num_columns),\n    ('categoric1',cat_pipeline,cat_columns),\n])\n\nPipe_rf = Pipeline([\n    ('prep',preprocessor),\n    ('algo',RandomForestClassifier())\n\n])","16ce7ae3":"Pipe_rf.fit(x_train,y_train)","3aea558e":"rf_hasil_train, rf_hasil_test, rf_evaluation, rf_cm, rf_cr = log_evaluation(x_train, x_test, y_train, y_test, Pipe_rf)","cb181f2b":"rf_evaluation","65fd6a08":"rf_cm","d1015abd":"print(rf_cr)","5ddd02dc":"from xgboost import XGBClassifier\nimport xgboost","5c587816":"\nnum_pipeline = Pipeline([\n    ('imputer',SimpleImputer(strategy='mean'))\n])\n\n\ncat_pipeline = Pipeline([\n    ('encoder',OneHotEncoder())\n])\n\n\n\npreprocessor = ColumnTransformer([\n    # ('Nama Instruksi',fungsinya, data yang akan dieksekusi dengan fungsi tsb)\n    ('numeric',num_pipeline,num_columns),\n    ('categoric1',cat_pipeline,cat_columns),\n])\n\nPipe_xgb = Pipeline([\n    ('prep',preprocessor),\n    ('algo',XGBClassifier(eval_metric='auc'))\n\n])","85fcd354":"Pipe_xgb.fit(x_train,y_train )","5eab0562":"xgb_hasil_train, xgb_hasil_test, xgb_evaluation, xgb_cm, xgb_cr = log_evaluation(x_train, x_test, y_train, y_test, Pipe_xgb)","f2fb285a":"xgb_evaluation","2b5291a9":"xgb_cm","c13e1a95":"print(xgb_cr)","d8580617":"print(svm_cr)","45d16aea":"skf = StratifiedKFold(n_splits=4)","004bfe58":"Pipe_xgb.get_params()","1114057b":"weights2 = np.arange(0.05,0.9,0.05)\nweights2","88147b76":"pm_xgb = {\n    'algo__n_estimators': [250, 500, 750],\n    'algo__max_depth': np.arange(0,50,1),\n    'algo__learning_rate': np.arange(0.1,1,0.05)\n\n}","ad881d7b":"gs_xgb = RandomizedSearchCV(Pipe_xgb, pm_xgb, cv = skf, n_jobs=-1,verbose = -1,scoring=\"balanced_accuracy\", random_state= 3, n_iter=3)","5fd99b46":"gs_xgb.fit(x_train,y_train)","b95e2a9b":"gs_xgb.best_params_","f052fdf7":"xgb_t = gs_xgb.best_estimator_","d9bbea7f":"xgbt_hasil_train, xgbt_hasil_test, xgbt_evaluation, xgbt_cm, xgbt_cr = log_evaluation(x_train, x_test, y_train, y_test, xgb_t)","110b75f9":"xgbt_evaluation","23781de9":"xgbt_cm","45adef6e":"print(xgbt_cr)","927cf5ad":"print(xgb_cr)","294806c9":"Pipe_SVC.get_params()","c5c506a7":"weights = np.arange(0.1,1.0,0.1)\nweights","34eee6ff":"pm_svm = {\n    \"algo__C\" : np.arange(1,20,1),\n    \"algo__gamma\" : np.arange(1,20,1),\n    'algo__class_weight': [{0:x, 1:1.0-x} for x in weights]\n    \n}","d868730a":"gs_svm = RandomizedSearchCV(Pipe_SVC, pm_svm, cv = skf, n_jobs=-1,verbose = -1, random_state= 3, n_iter=10, scoring=\"balanced_accuracy\")","f927735d":"gs_svm.fit(x_train,y_train)","72fe6b1c":"gs_svm.best_params_","c62f9300":"svm_t = gs_svm.best_estimator_","8f322e85":"svmt_hasil_train, svmt_hasil_test, svmt_evaluation, svmt_cm, svmt_cr = log_evaluation(x_train, x_test, y_train, y_test, svm_t)","2923d428":"svmt_evaluation","f789278e":"svmt_cm","f87a2efe":"print(svmt_cr)","f6e18372":"Pipe_rf.get_params()","1414664b":"weights2 = np.arange(0.1,0.9,0.1)\nweights2","95bb7135":"pm_rf = {\n    'algo__n_estimators': [250, 500, 750],\n    'algo__max_depth': np.arange(0,100,1),\n    'algo__class_weight': [{0:x, 1:1.0-x} for x in weights2]\n\n}","afd6fcaf":"gs_rft = RandomizedSearchCV(Pipe_rf, pm_rf, cv = skf, n_jobs=-1,verbose = -1,scoring=\"balanced_accuracy\", random_state= 3, n_iter=3)","449affa8":"gs_rft.fit(x_train,y_train)","56f34c1c":"gs_rft.best_params_","bbe0a71e":"rf_t = gs_rft.best_estimator_","e8c7f09b":"rft_hasil_train, rft_hasil_test, rft_evaluation, rft_cm, rft_cr = log_evaluation(x_train, x_test, y_train, y_test, rf_t)","08951b95":"rft_evaluation","2674f82d":"rft_cm","84db0a26":"print(rft_cr)","f55c7607":"print(xgbt_cr)","39ce0a20":"pd.concat([xgbt_evaluation,rft_evaluation], axis= 1).round(2)","ab1ecb7c":"pd.concat([xgbt_cm,rft_cm], axis= 1)","537ec3fb":"prob = rf_t.predict_proba(x)","6f48f1bf":"tabel_probability = pd.DataFrame(prob)\ntabel_probability","e3afcb84":"tabel_probability[1].round(1)","55349a04":"plt.figure(figsize=(15, 8))\nsns.countplot(x= tabel_probability[1].round(1) , data=tabel_probability)\nplt.title('Probability who would change job')\nplt.show()","3d5065b2":"tabel_probability = tabel_probability.drop(columns=0).round(1)\ntabel_probability","09a732f1":"tabel_probability.value_counts()","941d4df4":"# E. Data Cleaning","2f8286cb":"People with working experience 1 - 5 years are more likely to change their job and the trend is decline afterwards","1dcf3e0a":"# Hyperparameter Tuning","0c778e7f":"## D.2 Checking Data Info and Statistical Data","3763543f":"People who are never have job\/fresh graduate tend to be Data Scientist after taking the course. Following by people who working 1 year in their last job","198fbe43":"# A. Problem Definition\n\nA company who provided Data Science training is in need of Data Scientist for their own company. However, they faced difficulties in hiring process. After processing some Candidates, Candidates tend to bail out in end of recruitment process. This situation made HR team to start over again to find the suitable candidate.\n\nAs the end of the year, HR department decided to make new enhancement in the process of recruitment from candidates who sign up their training. The ais for this enhancement is Company will easily known which of these candidates are really wants to work for the company after training or looking for a new employment because it helps to reduce the cost and time as well as the quality of training or planning the courses and categorization of candidates. Information related to demographics, education, experience are in hands from candidates signup and enrollment.","edc352c0":"People who took training up to 25 hours. tend to change their job into Data Scientist","b3835b91":"As the two best result modelling are Support Vector Model and XG Boost, we only take this 2 for Cross Validation and GridSearchCV\/RandomSearchCV","57ead0fc":"## Random Forest Parameter Tuning","c2afbd33":"### SVM","45494b83":"## 12.training_hours ","33d43f5d":"## 3. Gender","7aad61ab":"There are no big differences of people who wants to change their job. This is also the reason why Crammer's V showing this feature has small correlation with target","197bb724":"## 10.company_type","c7f3a5f5":"### LOGISTIC REGRESSION BASE MODEL","2bbea81a":"## SVM Parameter Tuning","4c20eafd":"after hyperparameter tuning, SVM result is decrease than bfore tuning. So, I tried tuning for Random Forest","77e7b22b":"## 1. City","0bd8b875":"People with no experience as Data Science more likely to change job into Data Scientist, with the percentage number 33% of all people who take the training.","61e6f556":"# Probability\n\nI would like to check probability of the \"Yes\" prediction by this model. By knowing this probability, we're able to prioritize which customer to call first and make the telemarketing more efficient","e1ba2667":"# EDA Conclusion\n\n1. From KDEPlot above we can conclude that city with number between 20 - 30 have the peak density\n2. Based on KDEPlot above, City with higher development index is less likely have people who wants to change their job\n3. We can conclude that, Female has the highest percentage of changing job. However, the differences among the other categories is only thin line. \n    This is the reason why Cramer's V showing gender has no impact\/correlaction to the changing job decision\n4. People with no experience as Data Science more likely to change job into Data Scientist, with the percentage number 33% of all people who take the training.\n5. People who take the training Full Course are people who have intention to change their job, with percentage 37.94%\n6. Graduate people are those who in need the job change to be Data Scientist\n7. There are no big differences of people who wants to change their job based on Major Discpline. \n    This is also the reason why Crammer's V showing this feature has small correlation with target\n8. People with working experience 1 - 5 years are more likely to change their job and the trend is decline afterwards \n9. People who working in company size level 3 which is contains of 50-99 persons have the highest density to change their job\n10. People who works at private company have the highest percentage of changing job\n11. People who are never have job\/fresh graduate tend to be Data Scientist after taking the course. Following by people who working 1 year in their last job\n12. People who took training up to 25 hours. tend to change their job into Data Scientist","3d858073":"## 9.company_size","2c1cfeb0":"# B. Business Question \n\n## Business Questions for Machine Learning\n\nHow to predict the probability of a candidate to look for a new job or will work for the company, as well as interpreting affected factors on employee decision ?\n\n## Business Questions for Exploratory Data Analysis\n\n1. How each Data feature impact on target column ?\n\n","fb14b2e6":"## 8.experience","b43b3e0b":"Based on KDEPlot above, City with higher development index is less likely have people who wants to change their job","51657535":"### XGBoost Model","64645945":"# Modelling","773f4ef0":"People who works at private company have the highest percentage of changing job","e461a731":"## 2.City Development Index","4de49ea9":"Features\n\n- enrollee_id : Unique ID for candidate\n- city: City code\n- city_ development _index : Developement index of the city (scaled)\n- gender: Gender of candidate\n- relevent_experience: Relevant experience of candidate\n- enrolled_university: Type of University course enrolled if any\n- education_level: Education level of candidate\n- major_discipline :Education major discipline of candidate\n- experience: Candidate total experience in years\n- company_size: No of employees in current employer's company\n- company_type : Type of current employer\n- last new job: Difference in years between previous job and current job\n- training_hours: training hours completed \n- target: 0 \u2013 Not looking for job change, 1 \u2013 Looking for a job change","ca24c4a5":"# F. Data Preprocessing and Exploratory Data Analytics","73e9e7a8":"### Random Forest Base Model","facc3aed":"## D.1. Checking Data Proportion","c9393f10":"# D. Data Understanding","fb484bfc":"# Recommendation\n\nHR could be focus on people who have probability 0.7 - 0.9 as a lot of people fall into this category","d418a60e":"People who take the training Full Course are people who have intention to change their job, with percentage 37.94%","7feb9ab9":"Based on Classification report above, I choose Random Forest Hyperparameter Tuning as the best model because it reached 42% for recall in Target = 1 and also have less time for the modelling to finish compared to XG Boost","9d61ffc4":"### Comparison XGBoost and Random Forest after Hyper Parameter Tuning","14d12e2d":"### XGB Paramter Tuning","3b69fdf3":"We can conclude that, Female has the highest percentage of changing job. However, the differences among the other categories is only thin line. This is the reason why Cramer's V showing gender has no impact\/correlaction to the changing job decision","f52949ca":"Graduate people are those who in need the job change to be Data Scientist","62010e69":"### Base Model","294eefb5":"From KDEPlot above we can conclude that city with number between 20 - 30 have the peak density","e20d2f3c":"People who working in company size level 3 which is contains of 50-99 persons have the highest density to change their job","65d8cfe2":"in this section all data we got from EDA analysis the will be handled to be used for Machine Learning. I dropped Gender and Major Discipline data feature as there is no big correlation with the target","460bc383":"# C. About Dataset","69ab1d38":"## 11.last_new_job ","9c85d222":"## 5.enrolled_university","1ee79867":"## 7.major_discipline","3aa4da1e":"## Data Splitting","ae09f320":"## 6.education_level","79ce453b":"## 4.Relevant Experience","ef339c58":"- From numerical descriptive result : \n    - \"training_hours\" features having big differences between Q3 (75%) and max value which indicates an outlier. \n    ","a535ac7b":"## ML Function"}}