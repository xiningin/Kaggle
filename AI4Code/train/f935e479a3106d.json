{"cell_type":{"a61c29c8":"code","8f88c91d":"code","9cf2d2a9":"code","57ab9730":"code","8ac345e8":"code","eacd8633":"code","30e812c7":"code","da79b08b":"code","863e6c16":"code","02a93619":"code","495282fa":"code","88c692fb":"code","125923d2":"code","0a20eb48":"code","6fa6a8f3":"code","64cf87f9":"code","0787e045":"code","718600b1":"code","00561f1c":"code","09b2e8d8":"code","2a720dc2":"code","9253bc98":"markdown","acd1690f":"markdown"},"source":{"a61c29c8":"!pip install -q --upgrade pip\n!pip install -q efficientnet\nimport re\nimport os\nimport numpy as np\nimport pandas as pd\nimport tensorflow as tf\nfrom functools import partial\nimport efficientnet.tfkeras as efn\nfrom kaggle_datasets import KaggleDatasets\nfrom sklearn.model_selection import train_test_split","8f88c91d":"data_set_path=\"..\/input\/isic-2019\/ISIC_2019_Training_Input\/ISIC_2019_Training_Input\/\"\n\nground_truth=\"..\/input\/isic-2019\/ISIC_2019_Training_GroundTruth.csv\"\n\naug_ground_truth=\"..\/input\/augmentedisic2019\/train.csv\"\naug_data_set_path=\"..\/input\/augmentedisic2019\/\/images\/\"\n\n\n\ndata_set_path=\"..\/input\/isic-2019\/ISIC_2019_Training_Input\/ISIC_2019_Training_Input\/\"\nnew_data_set_path=\".\/\"\n\nnew_image_dir=\"augmented_isic_2019\"\nnew_data_set_path=os.path.join(new_data_set_path,new_image_dir)\nos.mkdir(new_data_set_path)\n\nnew_image_dir=\"images\"\nnew_data_set_path=os.path.join(new_data_set_path,new_image_dir)\nos.mkdir(new_data_set_path)\n\nground_truth=\"..\/input\/isic-2019\/ISIC_2019_Training_GroundTruth.csv\"\nnew_ground_truth=\".\/ISIC_2019_Training_GroundTruth.csv\"","9cf2d2a9":"data_set_path\ndata_set=pd.read_csv(\"..\/input\/isic-2019\/ISIC_2019_Training_GroundTruth.csv\")","57ab9730":"\ndata_set.head()\n","8ac345e8":"data_set.drop('UNK',axis=1,inplace=True)\ncols=['NV','BCC','AK','BKL','DF','VASC','SCC','MEL']\n","eacd8633":"from keras.preprocessing.image import ImageDataGenerator,array_to_img,img_to_array,load_img,save_img","30e812c7":"data_set\ndata_set.head()\n\n\nfor i in range(0,len(cols)):\n      print(\"Total images of \" + cols[i]+ \" : \"+ str(len(data_set[data_set[cols[i]]>0])))","da79b08b":"data_set[data_set[cols[0]]>0].iloc[:3000]\n\ndf=pd.concat([data_set[['image','MEL','BCC','AK','BKL','DF','VASC','SCC']], data_set[data_set[cols[0]]>0][cols[0]].iloc[:3000]], axis=1)\ndf=df.replace(np.nan, 0)","863e6c16":"df.head()","02a93619":"train=df\n\n\nfor i in range(0,len(cols)):\n      print(\"Total images of \" + cols[i]+ \" : \"+ str(len(train[train[cols[i]]>0])))","495282fa":"w=[2,2,7,2,19,18,8,1]\n\n\nprint(w)\n\n\nfor i in range(0,len(cols)):\n      print(\"Total images of \" + cols[i]+ \" : \"+ str(len(train[train[cols[i]]>0])*w[i]*2))","88c692fb":"int((1.3 -int(1.3) ) *10)\n","125923d2":"import matplotlib.pyplot as plt\nfrom skimage.transform import resize\ndatagen = ImageDataGenerator(\n        zoom_range=0.3,\n      \n        width_shift_range=0.1,\n        height_shift_range=0.1,\n        horizontal_flip=True,\n        vertical_flip=True,\n        fill_mode='nearest')\n\nfor z in range(0,len(cols)):\n    new_set=train[train[cols[z]]>0]\n\n    for i in range(len(new_set)):\n\n\n        img = load_img(data_set_path + new_set['image'].iloc[i]+'.jpg')  \n        x = img_to_array(img)\n        x=resize(x, (1000, 1000))\n        save_img(new_data_set_path+\"\/\"+new_set['image'].iloc[i]+\".jpg\",x)\n        x = x.reshape((1,) + x.shape)\n       \n        \n        j = 1\n        for batch in datagen.flow(x, batch_size=1):\n            f=w[z]\n            if z==0 or z==1 or z==7:\n                f=w[z]\n            else :\n                f=w[z]*2\n                \n            image = batch[0].astype('uint8')\n            im_name=new_set['image'].iloc[i]+\"_\"+str(j)\n            save_img(new_data_set_path+\"\/\"+im_name+\".jpg\",batch[0])\n            s=train[train[cols[z]]>0].iloc[i]\n            s['image']=im_name\n\n\n            train=train.append(s,ignore_index = True)\n    \n            \n                \n            j += 1\n            if j > int(f):\n                break  \n    print(z)","0a20eb48":"len(os.listdir(\".\/augmented_isic_2019\/images\"))\n","6fa6a8f3":"len(train)","64cf87f9":"\nfor i in range(0,len(cols)):\n      print(\"Total images of \" + cols[i]+ \" : \"+ str(len(train[train[cols[i]]>0])))","0787e045":"train.to_csv(\".\/augmented_isic_2019\/train.csv\")\n!zip -r .\/augmented_isic_2019.zip .\/augmented_isic_2019\n","718600b1":"import os\n\nos.listdir(\"..\/input\/augmented-isic-2019\/augmented_isic_2019.zip\")","00561f1c":"import pandas as pd\ntrain=pd.read_csv(\"..\/input\/augmented-isic-2019\/augmented_isic_2019\/train.csv\")\n","09b2e8d8":"len(train)\nimport shutil\n\noriginal =\"..\/input\/augmented-isic-2019\/augmented_isic_2019.zip\"\ntarget =\".\/augmented_isic_2019.zip\"\n\nshutil.copyfile(original, target)","2a720dc2":"\n\nimport shutil\nshutil.rmtree(\".\/augmented_isic_2019\", ignore_errors=True)","9253bc98":"![](http:\/\/)","acd1690f":"We do not any image of UNK so Droping UNK"}}