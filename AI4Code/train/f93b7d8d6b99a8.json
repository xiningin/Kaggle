{"cell_type":{"30788ac4":"code","b7b58973":"code","b1291807":"code","1b2ad6ba":"code","f8f9ad06":"code","524ec021":"code","5c80e797":"code","bff779a0":"code","c1c63124":"code","859f7e47":"code","7a8906d3":"code","d9acda71":"code","e336d020":"code","e7afe61a":"code","f8e81119":"code","9e04052f":"code","a21d296e":"code","ad45cd84":"code","44ec15c8":"code","88fe6946":"code","93d72f33":"markdown","269bdff3":"markdown","9e50d6bf":"markdown","21306c8a":"markdown","80d91001":"markdown","de95a18f":"markdown","71020814":"markdown","d775719d":"markdown","a70ef60f":"markdown","df4909c0":"markdown","4b4e8d9d":"markdown","34b7602a":"markdown","2663e9eb":"markdown","e6f95337":"markdown","e3ac7e3f":"markdown","623912ca":"markdown"},"source":{"30788ac4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b7b58973":"# csv file read\/load\ndata_2015 = pd.read_csv('..\/input\/crime-reports\/Crime_Data_2015.csv')\ndata_2016 = pd.read_csv('..\/input\/crime-reports\/Crime_Data_2016.csv')\ndata_2017 = pd.read_csv('..\/input\/crime-reports\/Crime_Data_2017.csv')\ndata_2018 = pd.read_csv('..\/input\/crime-reports\/Crime_Data_2018.csv')\ndata_2019 = pd.read_csv('..\/input\/crime-reports\/Crime_Data_2019.csv')","b1291807":"data_2015","1b2ad6ba":"a=data_2015.groupby(by=['CRIME_TYPE']).CRIME_TYPE.count()\na = a.sort_values(ascending=False)\nprint(a)","f8f9ad06":"a=data_2016.groupby(by=['CRIME_TYPE']).CRIME_TYPE.count()\na = a.sort_values(ascending=False)\nprint(a)","524ec021":"a=data_2017.groupby(by=['CRIME_TYPE']).CRIME_TYPE.count()\na = a.sort_values(ascending=False)\nprint(a)","5c80e797":"a=data_2018.groupby(by=['CRIME_TYPE']).CRIME_TYPE.count()\na = a.sort_values(ascending=False)\nprint(a)","bff779a0":"a=data_2019.groupby(by=['CRIME_TYPE']).CRIME_TYPE.count()\na = a.sort_values(ascending=False)\nprint(a)","c1c63124":"df = pd.concat([data_2015, data_2016, data_2017, data_2018, data_2019])\na=df.groupby(by=['CRIME_TYPE']).CRIME_TYPE.count()\na = a.sort_values(ascending=False)\nprint(a)","859f7e47":"a=df.groupby(by=['ATT_COMP']).ATT_COMP.count()\na = a.sort_values(ascending=False)\nprint(a)","7a8906d3":"a=df.groupby(by=['CITY']).CITY.count()\na = a.sort_values(ascending=False)\nprint(a)","d9acda71":"a=data_2019.groupby(by=['CITY']).CITY.count()\nb=data_2015.groupby(by=['CITY']).CITY.count()\nc=(a-b)\/b\nc = c.sort_values(ascending=False)\nprint(c)","e336d020":"a=df.groupby(by=['PREMISE_TYPE']).PREMISE_TYPE.count()\na = a.sort_values(ascending=False)\nprint(a)","e7afe61a":"a=data_2019.groupby(by=['PREMISE_TYPE']).PREMISE_TYPE.count() \nb=data_2015.groupby(by=['PREMISE_TYPE']).PREMISE_TYPE.count() \nc=(a-b)\/b\nc = c.sort_values(ascending=False)\nprint(c)","f8e81119":"a=df.groupby(by=['UCR_HIERARCHY']).UCR_HIERARCHY.count()\na = a.sort_values(ascending=False)\nprint(a)","9e04052f":"a=df.groupby(by=['LMPD_DIVISION']).LMPD_DIVISION.count()\na = a.sort_values(ascending=False)\nprint(a)","a21d296e":"a=df.groupby(by=['NIBRS_CODE']).NIBRS_CODE.count()\na = a.sort_values(ascending=False)\nprint(a)","ad45cd84":"a=df.groupby(by=['LMPD_BEAT']).LMPD_BEAT.count()\na = a.sort_values(ascending=False)\nprint(a)","44ec15c8":"a=df.groupby(by=['UOR_DESC']).UOR_DESC.count()\na = a.sort_values(ascending=False)\nprint(a)","88fe6946":"a=df.groupby(by=['CITY', 'CRIME_TYPE']).CRIME_TYPE.count()\na = a.sort_values(ascending=False)\nprint(a)","93d72f33":"5. Which city has the most improve in the crime rate?","269bdff3":"8. Which UCR_HIERACHY has the most activity?","9e50d6bf":"As you can see all datas are categorical or identifical data. So we go to next step and asking question.","21306c8a":"3. How much ATT_COMP is still attempted?","80d91001":"Input the libraries we need in this project:","de95a18f":"7. Which premise type has the most improve in the crime rate?","71020814":"6. Which place has the most crime rate?","d775719d":"11. Which LMPD beat has the most crime?","a70ef60f":"10. Which NIBRS has the most common case?","df4909c0":"4. Which city has the most crime in the last 5 years?","4b4e8d9d":"12. Which UOR is the most common?","34b7602a":"1. In every year, Which crime_type is the most common?","2663e9eb":"13. In every city, which crime_type is the most common?","e6f95337":"2. In this 5 years which crime_type is the most common? ","e3ac7e3f":"9. Which LMPD has the most crime case? ","623912ca":"Read file:"}}