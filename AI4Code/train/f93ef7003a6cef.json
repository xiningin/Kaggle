{"cell_type":{"0dea51a8":"code","a4b249d6":"code","73292d4b":"code","3b13a410":"code","e6e4475f":"code","f57cbee4":"code","ccdbcbef":"code","8ddedd99":"code","34522ea7":"code","d415a11f":"code","751b3f28":"code","d975010f":"code","65c8122f":"code","411ec127":"code","3dc5c8d6":"code","6d94487d":"code","4b925726":"code","027b75d3":"code","6eea1154":"code","5cb1b559":"code","c3d4e7dc":"code","4dffa0ca":"markdown"},"source":{"0dea51a8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a4b249d6":"df = pd.read_csv(\"\/kaggle\/input\/google-play-store-apps\/googleplaystore.csv\")\ndf","73292d4b":"df.dtypes","3b13a410":"df.isna().any()","e6e4475f":"df.isna().sum()","f57cbee4":"df['Installs'].unique()","ccdbcbef":"instll=[]\nfor i in range(len(df)):\n    instll.append(df['Installs'][i].split('+')[0])\ninstll","8ddedd99":"df['Installs']=instll\ndf","34522ea7":"install=[]\nfor i in range(len(df)):\n    install.append(df['Installs'][i].replace(',',''))\ndf['Installs']=install\ndf","d415a11f":"\ndf[df['Installs']=='Free']","751b3f28":"df=df.drop(10472)\ndf","d975010f":"df['Installs'].unique()","65c8122f":"df['Installs']=df['Installs'].apply(int)\ndf.dtypes","411ec127":"df['Installs'].max()","3dc5c8d6":"new_df=df[df['Installs']==df['Installs'].max()]\nnew_df","6d94487d":"new=new_df.groupby('App')['Installs'].sum()\nnew","4b925726":"new=new.reset_index()\nnew","027b75d3":"new=new.sort_values(by=['Installs'],ascending=False)\nnew","6eea1154":"new_=new.head(10)\nnew_","5cb1b559":"import matplotlib.pyplot as plt","c3d4e7dc":"plt.bar(new_['App'],new_['Installs'])\nplt.xticks(rotation=90)\nplt.title('Top 10 Apps with highest no of installs')\nplt.xlabel('Apps')\nplt.ylabel('No of installs')","4dffa0ca":"We are only interested with the 'installs' column and therefore we can leave the dataframe as it is."}}