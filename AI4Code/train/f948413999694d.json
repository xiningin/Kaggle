{"cell_type":{"036648ff":"code","b36c99a9":"code","23003851":"code","feae2b27":"code","76cac3a4":"code","9ea47d80":"code","d4f0275f":"code","bca9b5ea":"code","465b2e14":"code","3213e902":"code","5937b600":"code","fef7adba":"code","872e69c1":"code","c4132771":"code","10a07647":"code","b8ac53c6":"code","76c19415":"code","1bb0843b":"code","92ea4256":"code","8f03b076":"code","c5915044":"code","3faecc59":"code","3d62410f":"code","5faef54d":"code","a4ee014b":"code","65999a7b":"code","5982238b":"code","423c127b":"code","2675994d":"code","538f5a22":"code","132839c1":"code","4e950192":"code","0dc9b376":"markdown","bf05d52c":"markdown","03a14182":"markdown","0b09bf86":"markdown","f1647031":"markdown","2812eeda":"markdown","9119cd80":"markdown","5f075b2e":"markdown","0aead016":"markdown","e9145bc6":"markdown","551e9b08":"markdown","ca5edaec":"markdown","a93dd882":"markdown","ba71b988":"markdown","454f1599":"markdown","4e26acee":"markdown"},"source":{"036648ff":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno as missno\nimport mpl_toolkits\n\nfrom scipy import stats\nfrom sklearn import preprocessing\nfrom sklearn import feature_selection\nfrom sklearn.preprocessing import  LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import  GridSearchCV\nfrom sklearn.metrics import r2_score\nimport plotly.express as px\nimport warnings\nfrom plotly.offline import plot, iplot, init_notebook_mode\ninit_notebook_mode(connected=True)\nwarnings.filterwarnings('ignore')\n%matplotlib inline\n\n\ntrain = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')\nsample= pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv')","b36c99a9":"train.head()","23003851":"test.head()","feae2b27":"sample.head()","76cac3a4":"train.describe()","9ea47d80":"print(\"\u0422\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435:\")\nfor i in train.columns:\n    val=train[i].isnull().sum()\n    if val!=0:\n        print(\"\u0421\u0442\u043e\u043b\u0431\u0435\u0446 {} \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 {} Null \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\".format(i,val))","d4f0275f":"sns.heatmap(train.isnull(),yticklabels=False,cbar=False,cmap='viridis')","bca9b5ea":"print(\"\u0422\u0435\u0441\u0442\u043e\u0432\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435: \")\nfor i in test.columns:\n    val=test[i].isnull().sum()\n    if val!=0:\n        print(\"\u0421\u0442\u043e\u043b\u0431\u0435\u0446 {} \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 {} Null \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\".format(i,val))","465b2e14":"sns.heatmap(test.isnull(),yticklabels=False,cbar=False,cmap='viridis')","3213e902":"dt_nan=[]\nfor i in train.columns:\n    val=train[i].isnull().sum()\n    if val>500:\n        dt_nan.append(i)\ndt_nan","5937b600":"for i in test.columns:\n    val=test[i].isnull().sum()\n    if val>500:\n        dt_nan.append(i)\ndt_nan","fef7adba":"train=train.drop(list(set(dt_nan)),axis=1)\ntrain.head()","872e69c1":"test=test.drop(list(set(dt_nan)),axis=1)\ntest.head()","c4132771":"def impute_nan(df,variable):\n    df[variable]=df[variable].fillna(value = df[variable].mode())","10a07647":"for i in train.columns:\n    val=train[i].isnull().sum()\n    if val!=0:\n        train[i].fillna(value=train[i].mode(), inplace=True)","b8ac53c6":"for i in test.columns:\n    val=test[i].isnull().sum()\n    if val!=0:\n        test[i].fillna(value=test[i].mode(), inplace=True)","76c19415":"print(\"\u0422\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435:\")\nfor i in train.columns:\n    val=train[i].isnull().sum()\n    if val!=0:\n        print(\"\u0421\u0442\u043e\u043b\u0431\u0435\u0446 {} \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 {} Null \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\".format(i,val))","1bb0843b":"train['LotFrontage']=train['LotFrontage'].fillna(value=train['LotFrontage'].median())\ntrain['MasVnrArea']=train['MasVnrArea'].fillna(value=train['MasVnrArea'].median())\ntrain['GarageYrBlt']=train['GarageYrBlt'].fillna(value=train['GarageYrBlt'].median())","92ea4256":"print(\"\u0422\u0435\u0441\u0442\u043e\u0432\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435: \")\nfor i in test.columns:\n    val=test[i].isnull().sum()\n    if val!=0:\n        print(\"\u0421\u0442\u043e\u043b\u0431\u0435\u0446 {} \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 {} Null \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\".format(i,val))","8f03b076":"test['LotFrontage']=test['LotFrontage'].fillna(value=test['LotFrontage'].median())\ntest['MasVnrArea']=test['MasVnrArea'].fillna(value=test['MasVnrArea'].median())\ntest['BsmtFinSF1']=test['BsmtFinSF1'].fillna(value=test['BsmtFinSF1'].median())\ntest['BsmtFinSF2']=test['BsmtFinSF2'].fillna(value=test['BsmtFinSF2'].median())\ntest['BsmtUnfSF']=test['BsmtUnfSF'].fillna(value=test['BsmtUnfSF'].median())\ntest['TotalBsmtSF']=test['TotalBsmtSF'].fillna(value=test['TotalBsmtSF'].median())\ntest['BsmtFullBath']=test['BsmtFullBath'].fillna(value=test['BsmtFullBath'].median())\ntest['BsmtHalfBath']=test['BsmtHalfBath'].fillna(value=test['BsmtHalfBath'].median())\ntest['GarageYrBlt']=test['GarageYrBlt'].fillna(value=test['GarageYrBlt'].median())\ntest['GarageCars']=test['GarageCars'].fillna(value=test['GarageCars'].median())\ntest['GarageArea']=test['GarageArea'].fillna(value=test['GarageArea'].median())","c5915044":"def get_encoding(df):\n# \u0446\u0438\u043a\u043b \u043f\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u0430\u043c\n    for f in df.columns: \n        # \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0442\u0438\u043f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0441\u0442\u043e\u043b\u0431\u0446\u0430\n        if df[f].dtype=='object':\n          #\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c label encoder \n            lbl = LabelEncoder() \n            lbl.fit(list(df[f].values)) \n            df[f] = lbl.transform(list(df[f].values))\n\nget_encoding(train)\nget_encoding(test)","3faecc59":"train=train.drop(['Id'],axis=1)","3d62410f":"l=[]\nfor i in train.columns:\n    for j in train.columns:\n        if i!=j:\n            if train[i].corr(train[j])>0.9 or train[i].corr(train[j])<-0.9:\n                l.append(i)","5faef54d":"train=train.drop(l,axis=1)\ntest=test.drop(l,axis=1)","a4ee014b":"test=test.drop(['Utilities', 'Street', 'MiscVal', 'Condition2', 'Heating',\n               'LowQualFinSF', 'BsmtHalfBath', 'GarageCond', 'Electrical',\n               'RoofMatl', 'BsmtCond', 'BldgType', 'PavedDrive', 'GarageQual',\n               '3SsnPorch', 'BsmtFinType2', 'LandSlope', 'ExterCond', \n               'Foundation', 'BsmtFinSF2', 'Functional', 'SaleType', 'HouseStyle',\n               'HalfBath', 'PoolArea', 'EnclosedPorch', 'KitchenAbvGr', \n               'HeatingQC', 'RoofStyle', 'Condition1', 'BsmtFullBath', \n               'LotConfig', 'MasVnrType', 'Exterior2nd', 'BedroomAbvGr', \n               'MSZoning', 'LotShape', 'BsmtFinType1', 'Exterior1st', \n               'CentralAir', 'YrSold', 'BsmtExposure', 'LandContour', \n               'MSSubClass', 'TotRmsAbvGrd', 'MoSold', 'Fireplaces', \n               'ScreenPorch', 'SaleCondition'], axis=1)\ntrain=train.drop(['Utilities', 'Street', 'MiscVal', 'Condition2', 'Heating',\n               'LowQualFinSF', 'BsmtHalfBath', 'GarageCond', 'Electrical',\n               'RoofMatl', 'BsmtCond', 'BldgType', 'PavedDrive', 'GarageQual',\n               '3SsnPorch', 'BsmtFinType2', 'LandSlope', 'ExterCond', \n               'Foundation', 'BsmtFinSF2', 'Functional', 'SaleType', 'HouseStyle',\n               'HalfBath', 'PoolArea', 'EnclosedPorch', 'KitchenAbvGr', \n               'HeatingQC', 'RoofStyle', 'Condition1', 'BsmtFullBath', \n               'LotConfig', 'MasVnrType', 'Exterior2nd', 'BedroomAbvGr', \n               'MSZoning', 'LotShape', 'BsmtFinType1', 'Exterior1st', \n               'CentralAir', 'YrSold', 'BsmtExposure', 'LandContour', \n               'MSSubClass', 'TotRmsAbvGrd', 'MoSold', 'Fireplaces', \n               'ScreenPorch', 'SaleCondition'], axis=1)","65999a7b":"X=train.drop(['SalePrice'],axis=1)\nY=train[\"SalePrice\"]","5982238b":"x_train,x_test,y_train,y_test = train_test_split(X,Y,train_size=0.85,random_state=42)","423c127b":"model_rf = RandomForestRegressor(n_estimators=550, oob_score=True, random_state=100)\nmodel_rf.fit(x_train, y_train) \npred_train_rf= model_rf.predict(x_train)\n\nprint(\"\u0422\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0439 \u043d\u0430\u0431\u043e\u0440:\")\nprint(\"R2 Score\",r2_score(y_train, pred_train_rf))\nprint(\"\u0422\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u043d\u0430\u0431\u043e\u0440:\")\npred_test_rf = model_rf.predict(x_test)\nprint(\"R2 Score\",r2_score(y_test, pred_test_rf))","2675994d":"test=test.drop(['Id'],axis=1)","538f5a22":"feature_imp = pd.Series(model_rf.feature_importances_, index=test.columns).sort_values(ascending=False)\n\nplt.figure(figsize=(10,12))\nsns.barplot(x=feature_imp, y=feature_imp.index)\n# Add labels to your graph\nplt.xlabel('Feature Importance Score')\nplt.ylabel('Features')\nplt.title(\"Visualizing Important Features\")\nplt.tight_layout()","132839c1":"predictions_rf = model_rf.predict(test)\ntest_df=pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')","4e950192":"output = pd.DataFrame({'Id': test_df.Id, 'SalePrice': list(predictions_rf)})\noutput.to_csv('submission.csv', index=False)","0dc9b376":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u043a\u0430\u043a\u0438\u0435 \u0441\u0442\u043e\u043b\u0431\u0446\u044b \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u043e\u0433\u043e \u043d\u0430\u0431\u043e\u0440\u0430 \u0438\u043c\u0435\u044e\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f Null, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0447\u0438\u0441\u043b\u043e \u044d\u0442\u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439","bf05d52c":"\u041d\u0430 \u0442\u0435\u043f\u043b\u043e\u0432\u043e\u0439 \u043a\u0430\u0440\u0442\u0435 \u0443\u0432\u0438\u0434\u0438\u043c, \u043a\u0430\u043a \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u044b \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f Null \u0443 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u043e\u0433\u043e \u043d\u0430\u0431\u043e\u0440\u0430 \u0434\u0430\u043d\u043d\u044b\u0445\n\u041d\u0430 \u0442\u0435\u043f\u043b\u043e\u0432\u043e\u0439 \u043a\u0430\u0440\u0442\u0435 \u0443\u0432\u0438\u0434\u0438\u043c, \u043a\u0430\u043a \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u044b \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f Null \u0443 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u043e\u0433\u043e \u043d\u0430\u0431\u043e\u0440\u0430 \u0434\u0430\u043d\u043d\u044b\u0445","03a14182":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u043a\u0430\u043a \u0432\u044b\u0433\u043b\u044f\u0434\u044f\u0442 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435","0b09bf86":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043f\u0440\u0438\u043c\u0435\u0440 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430","f1647031":"\u0414\u043b\u044f \u043e\u0441\u0442\u0430\u0448\u0438\u0445\u0441\u044f \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u043c \u043d\u0443\u043b\u0435\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043c\u043e\u0434\u043e\u0439","2812eeda":"\u0422\u0430\u043a \u043a\u0430\u043a \u0432\u0441\u0435\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u043e\u0433\u043e \u043d\u0430\u0431\u043e\u0440\u0430 1460, \u0443\u0434\u0430\u043b\u0438\u043c \u0442\u0435 \u0441\u0442\u043e\u043b\u0431\u0446\u044b, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0447\u0438\u0441\u043b\u043e \u043d\u0443\u043b\u0435\u0432\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0431\u043e\u043b\u044c\u0448\u0435 500. \u0422\u0430\u043a \u043a\u0430\u043a \u0432 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u043c \u043d\u0430\u0431\u043e\u0440\u0435 1459 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432, \u0442\u0430\u043a \u0436\u0435 \u0443\u0434\u0430\u043b\u0438\u043c \u0442\u0435 \u0441\u0442\u043e\u043b\u0431\u0446\u044b, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0447\u0438\u0441\u043b\u043e \u043d\u0443\u043b\u0435\u0432\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0431\u043e\u043b\u044c\u0448\u0435 500","9119cd80":"\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u0440\u0440\u0435\u043b\u0438\u0440\u0443\u044e\u0449\u0438\u0445 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432","5f075b2e":"\u041d\u0430 \u0442\u0435\u043f\u043b\u043e\u0432\u043e\u0439 \u043a\u0430\u0440\u0442\u0435 \u0443\u0432\u0438\u0434\u0438\u043c, \u043a\u0430\u043a \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u044b \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f Null \u0443 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0433\u043e \u043d\u0430\u0431\u043e\u0440\u0430 \u0434\u0430\u043d\u043d\u044b\u0445","0aead016":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043e\u0441\u043d\u043e\u0432\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445","e9145bc6":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c LabelEncoder \u0434\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0438\u043b\u0438 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0447\u0438\u0441\u043b\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e\u043d\u0438\u043c\u0430\u044e\u0442 \u043b\u0443\u0447\u0448\u0435","551e9b08":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u043a\u0430\u043a\u0438\u0435 \u0441\u0442\u043e\u043b\u0431\u0446\u044b \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0433\u043e \u043d\u0430\u0431\u043e\u0440\u0430 \u0438\u043c\u0435\u044e\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f Null, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0447\u0438\u0441\u043b\u043e \u044d\u0442\u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439","ca5edaec":"\u0415\u0441\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432, \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 - Null. \u041d\u0430\u0439\u0434\u0435\u043c \u0442\u0430\u043a\u0438\u0435 \u0441\u0442\u043e\u043b\u0431\u0446\u044b \u0438 \u0443\u0434\u0430\u043b\u0438\u043c \u0438\u0445 \u0434\u043b\u044f \u043f\u043e\u0432\u044b\u0448\u0435\u043d\u0438\u044f \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u0438 \u043c\u043e\u0434\u0435\u043b\u0438","a93dd882":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u044c \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u043b\u0435\u0441\u0430","ba71b988":"\u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445. \n\u0423\u0434\u0430\u043b\u0438\u043c \u0441\u0442\u043e\u043b\u0431\u0446\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0447\u0442\u0438 \u043d\u0435 \u0432\u043b\u0438\u044f\u044e\u0442 \u043d\u0430 \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f","454f1599":"\u0412 \u043f\u043e\u043b\u0443\u0447\u0438\u0432\u0448\u0435\u043c\u0441\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u0435 \u0432\u0438\u0434\u043d\u043e, \u0447\u0442\u043e \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0439 \u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u043d\u0430\u0431\u043e\u0440\u044b \u0438\u043c\u0435\u044e\u0442 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0439 \u043d\u0430\u0431\u043e\u0440 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0447\u0438\u0441\u043b\u043e \u043d\u0443\u043b\u0435\u0432\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0431\u043e\u043b\u044c\u0448\u0435 500. \u0423\u0434\u0430\u043b\u0438\u043c \u044d\u0442\u0438 \u0441\u0442\u043e\u043b\u0431\u0446\u044b \u0432 \u043e\u0431\u043e\u0438\u0445 \u043d\u0430\u0431\u043e\u0440\u0430\u0445","4e26acee":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u043a\u0430\u043a \u0432\u044b\u0433\u043b\u044f\u0434\u044f\u0442 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435"}}