{"cell_type":{"5165eb9a":"code","9b0b2c0b":"code","2d7c6816":"code","8a594725":"code","c2a734e9":"code","1d3d7196":"code","8ff1f2c4":"code","5b4810a2":"code","a1b2cfd0":"code","8f1d1d99":"code","6f73ded1":"code","4a1dffdc":"code","14a6c838":"code","a5372c86":"code","fac01039":"code","7e6106ba":"code","b2cf42b1":"code","a14c7caf":"code","e11cdf25":"code","5cb92d04":"code","bb98376c":"code","255ce322":"code","8ecf8d6a":"code","eda54098":"code","3455f608":"code","89e361f0":"code","6d6dadb2":"code","40c7794a":"code","89063a3d":"code","606764f7":"code","e67ce387":"code","bf399620":"code","bc63acd9":"code","5fa3c3ac":"code","d0b0acab":"code","f8ad0ca3":"code","6a272852":"code","ba226f8d":"code","bc7bed69":"code","ae97dcae":"code","9860d991":"code","e9ae86cf":"markdown","4bfc4faf":"markdown","f9899e79":"markdown","33ca045e":"markdown","d90adaa2":"markdown","43f2af0c":"markdown","c3ad9f42":"markdown","7a7d4a3f":"markdown","df491db8":"markdown","b0365508":"markdown","6e660da2":"markdown","4f52b00d":"markdown","f134743d":"markdown","fb893bc1":"markdown","3ae5262c":"markdown","6fb8669b":"markdown","c81186a8":"markdown","9137451d":"markdown"},"source":{"5165eb9a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9b0b2c0b":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nimport numpy as np\nplt.style.use('fivethirtyeight') \nimport warnings\nwarnings.filterwarnings('ignore') ","2d7c6816":"os.curdir","8a594725":"!pwd","c2a734e9":"regular=pd.read_csv(\"\/kaggle\/input\/Regular_Season_Batter.csv\")","1d3d7196":"regular.head()","8ff1f2c4":"#regular \ub370\uc774\ud130 \uc14b\uc5d0\uc11c Null element\uac00 \uc5c6\ub294 \ub370\uc774\ud130 \uc14b\uc73c\ub85c \ub9cc\ub4e4\uae30\nregular=regular.loc[~regular['OPS'].isnull(),]","5b4810a2":"submission=pd.read_csv(\"\/kaggle\/input\/Batter.csv\")","a1b2cfd0":"agg={}\nfor i in regular.columns:\n    agg[i]=[]","8f1d1d99":"for i in submission['batter_name'].unique():\n    for j in regular.columns:\n        if j in ['batter_id','batter_name','height\/weight','year_born','position','starting_salary']:\n            agg[j].append(regular.loc[regular['batter_name']==i,j].iloc[0])\n        elif j=='year':\n            agg[j].append(2019)\n        else:\n            agg[j].append(0)\nregular=pd.concat([regular,pd.DataFrame(agg)])","6f73ded1":"regular.info()","4a1dffdc":"regular.columns","14a6c838":"corr = regular.loc[:,regular.dtypes == 'float64'].corr()\nsns.heatmap(corr, xticklabels=corr.columns, yticklabels=corr.columns, cmap=sns.diverging_palette(220, 10, as_cmap=True))","a5372c86":"corr = regular.loc[:,regular.dtypes == 'int64'].corr()\nsns.heatmap(corr, xticklabels=corr.columns, yticklabels=corr.columns, cmap=sns.diverging_palette(220, 10, as_cmap=True))","fac01039":"sns.pairplot(regular.loc[:,regular.dtypes == 'float64'])","7e6106ba":"sns.distplot(regular['year'])","b2cf42b1":"regular['year'].describe()","a14c7caf":"sns.distplot(regular['AB'])","e11cdf25":"sns.distplot(regular['OPS'].dropna())","5cb92d04":"regular['OPS'].describe()","bb98376c":"plt.scatter(regular['AB'],regular['OPS'])\nplt.xlabel('AB')\nplt.ylabel('OPS')","255ce322":"plt.scatter(regular['year'],regular['AB'])\nplt.xlabel('year')\nplt.ylabel('AB')","8ecf8d6a":"def get_self_corr(var,regular=regular):\n    x=[]\n    y=[]\n    regular1=regular.loc[regular['AB']>=50,]\n    for name in regular1['batter_name'].unique():\n        a=regular1.loc[regular1['batter_name']==name,].sort_values('year')\n        k=[]\n        for i in a['year'].unique():\n            if (a['year']==i+1).sum()==1:\n                k.append(i)\n        for i in k:\n            x.append(a.loc[a['year']==i,var].iloc[0])\n            y.append(a.loc[a['year']==i+1,var].iloc[0])\n    plt.scatter(x,y)\n    plt.title(var)\n    plt.show()\n    print(pd.Series(x).corr(pd.Series(y))**2)\n\nregular['1B']=regular['H']-regular['2B']-regular['3B']-regular['HR']","eda54098":"for i in ['avg','1B','2B','3B']:\n    get_self_corr(i)","3455f608":"for i in ['HR','BB']:\n    get_self_corr(i)","89e361f0":"regular['1b_luck']=regular['1B']\/(regular['AB']-regular['HR']-regular['SO'])\nregular['2b_luck']=regular['2B']\/(regular['AB']-regular['HR']-regular['SO'])\nregular['3b_luck']=regular['3B']\/(regular['AB']-regular['HR']-regular['SO'])","6d6dadb2":"for j in ['avg', 'G', 'AB', 'R', 'H','2B', '3B', 'HR', 'TB', 'RBI', 'SB', 'CS', 'BB', 'HBP', 'SO', 'GDP','SLG', 'OBP', 'E','1b_luck','2b_luck','3b_luck']:\n    lag_1_avg=[]\n    for i in range(len(regular)): \n        if len(regular.loc[(regular['batter_name']==regular['batter_name'].iloc[i])&(regular['year']==regular['year'].iloc[i]-1)][j])==0:\n            lag_1_avg.append(np.nan)\n        else:\n            lag_1_avg.append(regular.loc[(regular['batter_name']==regular['batter_name'].iloc[i])&(regular['year']==regular['year'].iloc[i]-1)][j].iloc[0])\n    \n    regular['lag_1_'+j]=lag_1_avg\n    print(j)","40c7794a":"def get_nujuk(name,year,var):\n    if (len(regular.loc[(regular['batter_name']==name)&(regular['year']<year-1),'H'])!=0):\n        return regular.loc[(regular['batter_name']==name)&(regular['year']<year-1),var].sum()\n    else:\n        return np.nan\n\nfor i in ['G', 'AB', 'R', 'H','2B', '3B', 'HR', 'TB', 'RBI', 'SB', 'CS', 'BB', 'HBP', 'SO']:\n    regular['total_'+i]=regular.apply(lambda x: get_nujuk(x['batter_name'],x['year'],i),axis=1)","89063a3d":"from sklearn.ensemble import RandomForestRegressor","606764f7":"train=regular.loc[regular['year']<=2017,]\ntest=regular.loc[regular['year']==2018,]\ny_train=train['OPS']\nX_train=train[[x for x in regular.columns if ('lag' in x)|('total' in x)]]\n\ny_test=test['OPS']\nX_test=test[[x for x in regular.columns if ('lag' in x)|('total' in x)]]","e67ce387":"rf=RandomForestRegressor(n_estimators=500)\nrf.fit(X_train.fillna(-1),y_train,sample_weight=train['AB'])","bf399620":"pred=rf.predict(X_test.fillna(-1))","bc63acd9":"real=test['OPS']\nab=test['AB']\n\nfrom sklearn.metrics import mean_squared_error\nmean_squared_error(real,pred,sample_weight=ab)**0.5","5fa3c3ac":"train=regular.loc[regular['year']<=2018,]\ntest=regular.loc[regular['year']==2019,]\ny_train=train['OPS']\nX_train=train[[x for x in regular.columns if ('lag' in x)|('total' in x)]]\n\n\nrf=RandomForestRegressor(n_estimators=500)\nrf.fit(X_train.fillna(-1),y_train,sample_weight=train['AB'])","d0b0acab":"test=regular.loc[regular['year']==2019,]","f8ad0ca3":"pred=rf.predict(test[[x for x in regular.columns if ('lag' in x)|('total' in x)]].fillna(-1))","6a272852":"pd.DataFrame({'batter_id':test['batter_id'],'OPS':pred}).to_csv(\"baseline_submission.csv\",index=False)","ba226f8d":"a = pd.read_csv(\"baseline_submission.csv\")\na","bc7bed69":"x = pd.read_csv(\"\/kaggle\/input\/Batter.csv\")\nx","ae97dcae":"x.loc[:,'OPS'] = a['OPS']\nx","9860d991":"x.to_csv(\"2019_Predict_OPS.csv\")","e9ae86cf":"\ud0c0\uc11d\uc218\uc640 OPS\ub294 \uc591\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \uac00\uc9c4\ub2e4. \uc2dc\uc98c\uc774 \uc9c4\ud589\ub428\uc5d0 \ub530\ub77c \uc798\ud558\ub294 \uc120\uc218\ub294 \ub9ce\uc774 \uae30\uc6a9\ub418\uace0, \ubabb\ud558\ub294 \uc120\uc218\ub294 \uc801\uac8c \uae30\uc6a9\ub418\uae30 \ub54c\ubb38\uc774\ub77c\uace0 \ubcf4\uc5ec\uc9d0","4bfc4faf":"# \uac04\ub2e8\ud55c \ubaa8\ub378 \ube4c\ub529\uacfc \uac80\uc99d","f9899e79":"\ud0c0\uc728,1\ub8e8\ud0c0, 2\ub8e8\ud0c0, 3\ub8e8\ud0c0\uc758 \uc120\uc218\ubcc4\ub85c \ub144\ub3c4 \uc790\uae30\uc0c1\uad00\uacc4\uc218\uac00 \ub0ae\uc740 \ud3b8\uc774\ub2e4.\n\n\uc774\ub4e4\uc740 \uc120\uc218\uc758 \uc5ed\ub7c9\uacfc \uad00\uacc4\uc5c6\ub294 \uc6b4\uc801\uc778 \uc694\uc18c\uc5d0 \ub9ce\uc774 \uc88c\uc6b0\ub41c\ub2e4\ub294 \uac83\uc744 \uc54c \uc218 \uc788\ub2e4.","33ca045e":"\ub144\ub3c4\uac00 \uc904\uc5b4\ub4e4\uc218\ub85d \uadf8 \uc218\uac00 \uc791\ub2e4.","d90adaa2":"\ub2e4\uc74c \uc2dc\uc98c \uc120\uc218\uc758 \uc131\uc801\uc744 \uc608\uce21\ud568\uc5d0 \uc788\uc5b4\uc11c \uc804 \uc2dc\uc98c \uc131\uc801\uc740 \ud544\uc218\uc801\uc778 \uc815\ubcf4\uc77c \uac83\uc774\ub2e4. \uc774\ub97c \ubc18\uc601\ud55c\ub2e4","43f2af0c":"# \ub204\uc801 \ubcc0\uc218","c3ad9f42":"# \uc120\uc218\uc758 \uc6b4\uacfc \uc9c4\uc9dc \uc2e4\ub825 \uad6c\ubd84\ud558\uae30","7a7d4a3f":"\ud0c0\uc11d\uc5d0 100\ubc88 \uc774\ud558 \ub4e4\uc5b4\uc628 \ud0c0\uc790\ub4e4\uc774 \uaf64 \ub9ce\ub2e4","df491db8":"# \ub370\uc774\ud130 \uc5ff\ubcf4\uae30","b0365508":"# \uc0c8\ub85c\uc6b4 \uc9c0\ud45c \uc0dd\uc131","6e660da2":"# Lag \ubcc0\uc218","4f52b00d":"ops\uc758 \ubd84\ud3ec\ub294 \ub300\ub7b5\uc801\uc73c\ub85c \uc815\uaddc\ubd84\ud3ec\ub97c \ub530\ub978\ub2e4","f134743d":"# 2019\ub144 \uc120\uc218 OPS \uc2e4\uc81c \uc608\uce21\uce58 \ub0b4\uae30","fb893bc1":"\uc9c1\uc804 \uc2dc\uc98c \uc131\uc801\ubfd0 \uc544\ub2c8\ub77c, \ud1b5\uc0b0\uc131\uc801\ub3c4 \uc911\uc694\ud55c \ubcc0\uc218\uac00 \ub420 \uc218 \uc788\ub2e4.","3ae5262c":"1B_LUCK=(1B)\/(AB-HR-SO)\n\n2B_LUCK=(2B)\/(AB-HR-SO)\n\n3B_LUCK=(3B)\/(AB-HR-SO)\n\n(\uc774 \uc9c0\ud45c\ub4e4\uc740 \uc6b4\uc801\uc778 \uc694\uc18c\uc5d0 \uc601\ud5a5\uc744 \ub9ce\uc774 \ubc1b\uc9c0 \uc54a\ub294 HR,BB,SO\uc640 \uac19\uc740 \uc2a4\ud0ef\uc758 \uc601\ud5a5\ub825\uc744 \uadf9\uc18c\ud654\uc2dc\ud0a4\uba74\uc11c, \uc120\uc218\uc758 \ud574\ub2f9 \uc2dc\uc98c '\uc6b4\ube68'\uc744 \uadf9\ub2e8\uc801\uc73c\ub85c \ubcf4\uc5ec\uc8fc\uae30 \uc704\ud574 \uc774\ub807\uac8c \ub9cc\ub4e4\uc5c8\ub2e4)\n\n\uc774\ub807\uac8c \ub9cc\ub4e0 \uc9c0\ud45c\ub294 \ud574\ub2f9 \uc2dc\uc98c \uc120\uc218\uac00 \uc5bc\ub9c8\ub098 \uc6b4\uc774 \uc88b\uc558\ub294\uc9c0\ub97c \uc54c\ub824\uc904 \uac83\uc774\ub2e4.","6fb8669b":"\uc57c\uad6c\uc5d0\ub294 \ubb34\ucc99 \ub9ce\uc740 \uc6b4\uc801\uc778 \uc694\uc18c\ub4e4\uc774 \uc874\uc7ac\ud55c\ub2e4.\n\n\ud0c0\uc790\uc758 \ubbf8\ub798 \uc131\uc801\uc744 \uc608\uce21\ud568\uc5d0 \uc788\uc5b4\uc11c \uc6b4\uacfc \uc9c4\uc9dc \uc2e4\ub825\uc744 \uad6c\ubd84\ud558\ub294 \uc791\uc5c5\uc774 \ub9e4\uc6b0 \uc911\uc694\ud558\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ubcf4\uc790. KBO\uc758 \ud0c0\uc790 A\uc640 B\ub294 2018\ub144 \uac19\uc740 \ud0c0\uc728 0.285\uc744 \uae30\ub85d\ud588\ub2e4. \uadf8\ub7f0\ub370 \uc120\uc218 A\ub294 \uc6b4\uc774 \uc88b\uc544\uc11c(\uc608\ub97c \ub4e4\uc5b4 \uc798 \ubabb\ud558\ub294 \ud22c\uc218\ub9cc \ub9cc\ub0ac\ub2e4\ub358\uc9c0 \ub4f1\ub4f1) \uc790\uae30 \uc2e4\ub825\ubcf4\ub2e4 \ub354 \ub192\uc740 \ud0c0\uc728\uc774 \ub098\uc628 \uac83\uc774\uace0, \uc120\uc218 B\ub294 \uc6b4\uc774 \ub098\ube60\uc11c(\uc0c1\ub300 \uc218\ube44\uac00 \uc5c4\uccad \uc798\ud588\ub2e4\uac70\ub098 \ub4f1\ub4f1) \uc790\uae30 \uc2e4\ub825\ubcf4\ub2e4 \ub0ae\uc740 \ud0c0\uc728\uc744 \uae30\ub85d\ud55c \uac83\uc774\ub77c\uba74 2019\ub144\uc5d0\ub294 A,B \uc911\uc5d0 \uc5b4\ub290 \ud0c0\uc790\uac00 \ub354 \uc88b\uc740 \uc131\uc801\uc744 \uae30\ub85d\ud560\uae4c? \ub2f9\uc5f0\ud788 B\uac00 \ub354 \uc88b\uc740 \uc131\uc801\uc744 \ub0bc \uac00\ub2a5\uc131\uc774 \ub192\uc744 \uac83\uc774\ub2e4. \uc774\ucc98\ub7fc, \ud2b9\uc815 \uc120\uc218 \uc131\uc801\uc758 \uc6b4\uacfc \uc2e4\ub825\uc744 \uc81c\ub300\ub85c\ub9cc \ubd84\ub958\ud560 \uc218 \uc788\ub2e4\uba74 \ub2e8\uc21c\ud788 \ud0c0\uc728 0.285\ub97c \uae30\ub85d\ud588\ub2e4\ub294 \uc815\ubcf4\ubcf4\ub2e4 \uc555\ub3c4\uc801\uc73c\ub85c \ub9ce\uc740 \uc815\ubcf4\ub97c \uc5bb\uac8c \ub418\ub294 \uac83\uc774\ub2e4. \uc774\ub294 \ubd84\uba85\ud788 \uc608\uce21\uc5d0 \ub3c4\uc6c0\uc774 \ub420 \uac83\uc774\ub2e4. \ub530\ub77c\uc11c \uc6b0\ub9b0 \ub2e4\uc591\ud55c \uc2a4\ud0ef(OPS,avg,SLG,1B,2B,3B,HR,BB \ub4f1\ub4f1)\ub4e4 \uc911\uc5d0\uc11c \uc6b4\uc5d0 \uc601\ud5a5\uc744 \ub9ce\uc774 \ub35c \ubc1b\ub294, \ud639\uc740 \uc6b4\uc758 \uc601\ud5a5\uc744 \ub9ce\uc774 \ubc1b\ub294 \uc2a4\ud0ef\uc744 \uace8\ub77c\ub0b4\ub294 \uc791\uc5c5\uc774 \uc911\uc694\ud558\ub2e4.\n\nex) 2007 \uc2dc\uc98c KBO \ubbf8\uc2a4\ud130\ub9ac: \uc774\ud604\uace4 \ud0c0\uaca9\uc655\n\n2007 \uc2dc\uc98c \uc774\ud604\uace4\uc740 \uc5ed\ub300 \ud55c\uad6d\ud504\ub85c\uc57c\uad6c \uc5ed\uc0ac\uc0c1 \uac00\uc7a5 \uc6b4 \uc88b\uc740 \ud0c0\uc790\uc600\ub2e4. \uc6b4\uc801\uc778 \uc694\uc18c \ub54c\ubb38\uc5d0 \uc2e4\ub825\uc5d0 \ube44\ud574 \uc9c0\ub098\uce58\uac8c \ub192\uc740 \uc131\uc801\uc744 \ubc1b\uc558\ub2e4.\n\n\uadf8\ub807\ub2e4\uba74 \uc5b4\ub5a4 \uc2a4\ud0ef\uc758 \uc6b4\uc5d0 \uc758\ud55c \uc601\ud5a5\ub3c4\ub97c \uc5b4\ub5bb\uac8c \uce21\uc815\ud560 \uc218 \uc788\uc744\uae4c? \uc5b4\ub5a4 \uc9c0\ud45c a\uac00 \uc6b4\uc5d0 \uc758\ud574 \ub9ce\uc774 \uc88c\uc6b0\ub41c\ub2e4\uba74, \uc120\uc218\ubcc4\ub85c \uc9c0\ud45c a\uc758 \ubcc0\ub3d9\uc131\uc740 \ud074 \uac83\uc774\ub2e4. \ubc18\ub300\ub85c \ub9cc\uc57d \uc9c0\ud45c a\uac00 \uc6b4\uc5d0 \uc758\ud574 \ub9ce\uc774 \uc88c\uc6b0\ub418\uc9c0 \uc54a\ub294\ub2e4\uba74, \uc120\uc218\ubcc4\ub85c \uc9c0\ud45c a\uc758 \ubcc0\ub3d9\uc131\uc740 \uc791\uc744 \uac83\uc774\ub2e4.\n\n\uc774\uac83\uc744 \uc6b0\ub9ac\ub294 \uc790\uae30\uc0c1\uad00\uc774\ub77c\ub294 \uac1c\ub150\uc73c\ub85c \uc218\uc2dd\uc801\uc73c\ub85c \uc811\uadfc\ud574\ubcfc \uac83\uc774\ub2e4. \uc989, \uac01 \uc120\uc218\uc758 \uc5f0\uc18d\ub41c \ub450 \uc2dc\uc98c\uac04\uc758 \ud2b9\uc815 \uc2a4\ud0ef\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \uc54c\uc544\ubcf4\ub294 \uac83\uc774\ub2e4. \uc774 \uc790\uae30\uc0c1\uad00\uc758 \uacc4\uc218\uac00 \ub0ae\ub2e4\uba74, \ud574\ub2f9 \uc2a4\ud0ef\uc740 \uc6b4\uc5d0 \uc758\ud574 \ub9ce\uc740 \uc601\ud5a5\uc744 \ubc1b\ub294 \ubcc0\ub3d9\uc131\uc774 \ud070 \uc9c0\ud45c\ub77c\uace0 \ud574\uc11d\ud560 \uc218 \uc788\uace0, \ub192\ub2e4\uba74, \ud574\ub2f9 \uc2a4\ud0ef\uc740 \uc6b4\uc5d0 \uc758\ud574 \uc601\ud5a5\uc744 \ube44\uad50\uc801 \ub35c \ubc1b\ub294, \ub2e4\uc2dc \ub9d0\ud574 \uc120\uc218\uc758 \uc9c4\uc9dc \uc2e4\ub825\uc744 \uc798 \ub098\ud0c0\ub0b4\uc8fc\ub294 \uc9c0\ud45c\ub77c\uace0 \ud574\uc11d\ud560 \uc218 \uc788\uc744 \uac83\uc774\ub2e4.","c81186a8":"# \uac04\ub2e8\ud55c EDA","9137451d":"\ud648\ub7f0, \ubcfc\ub137\uc758 \uc120\uc218\ubcc4\ub85c \ub144\ub3c4\ubcc4 \uc790\uae30\uc0c1\uad00\uacc4\uc218\uac00 \ub192\uc740 \ud3b8\uc774\ub2e4.\n\n\uc774\ub294 \uc6b4\uc801\uc778 \uc694\uc18c\uac00 \ube44\uad50\uc801 \ub35c \uac1c\uc785\ub41c, \uc989 \uc120\uc218\uc758 \uc9c4\uc9dc \uc2e4\ub825\uc744 \uc798 \ubcf4\uc5ec\uc8fc\ub294 \uc9c0\ud45c\ub77c\uace0 \ud560 \uc218 \uc788\ub2e4.\n\n\uc6b4\uc801\uc778 \uc694\uc18c\uc5d0 \ub9ce\uc774 \uc601\ud5a5\uc744 \ubc1b\ub294 \uc2a4\ud0ef: 1B,2B,3B\n\n\uc6b4\uc801\uc778 \uc694\uc18c\uc5d0 \ub9ce\uc774 \uc601\ud5a5\uc744 \ubc1b\uc9c0 \uc54a\ub294 \uc2a4\ud0ef: HR,BB,SO"}}