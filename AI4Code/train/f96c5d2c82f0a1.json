{"cell_type":{"3c328b50":"code","21b34a5f":"code","74ab7ae7":"code","aa850e35":"code","9219a487":"code","f3757490":"code","73e5d002":"code","65255074":"code","43ccc59b":"code","50f86a02":"code","9d1b72c8":"code","66f77ffb":"code","b25391cd":"code","484e79f6":"code","4c5923e5":"markdown","88479a1e":"markdown","5b0f1886":"markdown","5f1468f4":"markdown"},"source":{"3c328b50":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","21b34a5f":"# Lets import all the libraries\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","74ab7ae7":"# Reading the tables\n\nresto = pd.read_csv('\/kaggle\/input\/zomato-restaurants-hyderabad\/Restaurant names and Metadata.csv')\nreview = pd.read_csv('\/kaggle\/input\/zomato-restaurants-hyderabad\/Restaurant reviews.csv')","aa850e35":"resto.head()","9219a487":"review.head()","f3757490":"# Joining the two tables for further analysis\n\ndf = pd.merge(resto, review, left_on = 'Name', right_on = 'Restaurant', how = 'left')\ndf.head()","73e5d002":"# Removing unwanted columns\n\ndf.drop(['Restaurant', 'Links'], axis = 1, inplace = True)\ndf.head()","65255074":"cost_df = df[['Name', 'Cost']].drop_duplicates()\ncost_df","43ccc59b":"cost_df.info()","50f86a02":"# Cost seems to be a non-null object.\n\n# Convert it into float.\n\ncost_df['Cost'] = cost_df['Cost'].apply(lambda x : x.replace(',',''))\ncost_df['Cost'] = cost_df['Cost'].astype('float')","9d1b72c8":"# Probabality Mass Function (PMF)\n\ndef PMF(data):\n    \n    return data.value_counts().sort_index()\/len(data)\n\n\npmf = PMF(cost_df['Cost'])\n\n\n# Plotting PMF\npmf.plot.bar()\nplt.xlabel('Cost')\nplt.ylabel('PMF')","66f77ffb":"# Lets define a function for ECDF - Cumulative Density Function\n\ndef ecdf(data):\n    \n    y = (np.arange(1, len(data) + 1))\/len(data)\n    x = np.sort(data)\n    plt.plot(x,y, marker = '.', linestyle = 'none')\n    \n\necdf(cost_df['Cost'])","b25391cd":"# What are the available cuisines in Hyderabad's restaurants?\n\nCuisines = df[['Name', 'Cuisines']].drop_duplicates()\n\n\n# Lets make a dictionary for the unique cuisines in the dataset\n\ncuisines_dict = {}\nfor cuisine in Cuisines['Cuisines']:\n    for name in cuisine.split(', '):\n        if name in cuisines_dict:\n            cuisines_dict[name] = cuisines_dict[name] + 1\n        else:\n            cuisines_dict[name] = 1\n\ncuisines_dict","484e79f6":"# Lets plot the top 10 available cuisines\n\ncuisine_df = pd.DataFrame(cuisines_dict.items(), columns = ['Cuisines', 'Count']).sort_values(['Count'], ascending = False).head(10)\n\n\nchart = sns.barplot(x = 'Cuisines', y = 'Count', data = cuisine_df, palette = 'OrRd')\nchart.set_xlabel('Cuisines')\nchart.set_ylabel('Number of Availability')\nchart.set_xticklabels(chart.get_xticklabels(),\n                      rotation = 45)","4c5923e5":"According to the PMF, among the reviewed restaurant on Zomato, majority of the restaurants' average cost of two is likely between INR 150 and INR 1000.","88479a1e":"With CDF, we can clearly see that approximately 65% of the reviewed restaurants have average cost less than INR 1000.","5b0f1886":"# Basic Data Exploration","5f1468f4":"The bar graph seems to be self-explanatory. Among the cuisines available at the reviewed restaurants, North-Indian and Chinese cuisines top the list respectively. However, this may not provide a clear picture as some cuisines are a subset of other cuisines, but this surely provides us a starting point."}}