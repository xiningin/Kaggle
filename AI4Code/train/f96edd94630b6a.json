{"cell_type":{"74cd578b":"code","cd7ee7d8":"code","b34a659a":"code","637c6955":"code","958dc47a":"code","4c64ddc5":"code","b7a01b53":"code","ab13a593":"code","4b1f522e":"code","3cdb0c2e":"code","1f92c4fc":"code","07332bc6":"code","b4b25de4":"code","e3392245":"code","fa003bee":"code","64bf2bca":"code","a1d62a76":"code","c69a671c":"code","b5515eab":"code","03bfc2a2":"code","71578d4d":"code","dc16812b":"code","8d732d9c":"code","402f0206":"code","766adeb0":"code","201b7bac":"code","56eceace":"code","2023f693":"code","b9dc9698":"code","c2f46165":"markdown","02c9478b":"markdown","bba02d26":"markdown","15bf8f13":"markdown","959242c6":"markdown","738d6fff":"markdown","657be9a8":"markdown","0aad5d9c":"markdown","32db6e93":"markdown"},"source":{"74cd578b":"# Lets load the dataset\nimport pandas as pd\ndf = pd.read_csv(\"..\/input\/graduate-admissions\/Admission_Predict.csv\")","cd7ee7d8":"# Lets see the first five rows\ndf.head()","b34a659a":"# Lets see the shape of the dataset\ndf.shape","637c6955":"# Lets check for null values\ndf.isnull().sum()","958dc47a":"# Lets drop the \"Serial No.\" as it is not that useful\ndf.drop(\"Serial No.\", axis = 1, inplace = True)","4c64ddc5":"# Lets see the first five rows\ndf.head()","b7a01b53":"# Independent and Dependent features\nX = df.iloc[:,0:-1].values\ny = df.iloc[:,-1].values","ab13a593":"# Feature scaling\nfrom sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX = sc.fit_transform(X)","4b1f522e":"# Train test split\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.1, random_state = 0)","3cdb0c2e":"# Lets import tensorflow==2.5.0\n!pip install tensorflow==2.5.0","1f92c4fc":"# Lets see the tensorflow version\nimport tensorflow\ntensorflow.__version__","07332bc6":"# Importing the dependencies\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras import Sequential","b4b25de4":"# Lets create an object of the Sequential class\nmodel = Sequential()","e3392245":"# Model Building\nmodel.add(Dense(3, activation = \"relu\", input_dim = X_train.shape[1]))\nmodel.add(Dense(1, activation = \"linear\"))","fa003bee":"# Lets see the model summary\nmodel.summary()","64bf2bca":"# Model compile\nmodel.compile(optimizer = \"Adam\", loss = \"mean_squared_error\")","a1d62a76":"# Model Training\nmodel.fit(X_train, y_train, epochs = 10, batch_size = 10, verbose = 1)","c69a671c":"# Lets predict on the test data\ny_pred = model.predict(X_test)","b5515eab":"# R2 score\nfrom sklearn.metrics import r2_score\nr2_score(y_pred, y_test)","03bfc2a2":"# Lets try with increasing the number of epochs and see the effects on R2 score\nmodel.add(Dense(3, activation = \"relu\", input_dim = X_train.shape[1]))\nmodel.add(Dense(1, activation = \"linear\"))\n\n# Model compile\nmodel.compile(optimizer = \"Adam\", loss = \"mean_squared_error\")\n\n# Model Training\nmodel.fit(X_train, y_train, epochs = 100, batch_size = 10, verbose = 1)","71578d4d":"# Lets predict on the test data\ny_pred = model.predict(X_test)","dc16812b":"# R2 score\nfrom sklearn.metrics import r2_score\nr2_score(y_pred, y_test)","8d732d9c":"# Lets try with increasing the number of epochs, adding another layer and increasing neurons and see the effects on R2 score\nmodel.add(Dense(7, activation = \"relu\", input_dim = X_train.shape[1]))\nmodel.add(Dense(7, activation = \"relu\"))\nmodel.add(Dense(1, activation = \"linear\"))\n\n# Model compile\nmodel.compile(optimizer = \"Adam\", loss = \"mean_squared_error\")\n\n# Model Training\nmodel.fit(X_train, y_train, epochs = 100, batch_size = 10, verbose = 1)","402f0206":"# Lets predict on the test data\ny_pred = model.predict(X_test)","766adeb0":"# R2 score\nfrom sklearn.metrics import r2_score\nr2_score(y_pred, y_test)","201b7bac":"# Introducing validation split inside our model\nmodel.add(Dense(7, activation = \"relu\", input_dim = X_train.shape[1]))\nmodel.add(Dense(7, activation = \"relu\"))\nmodel.add(Dense(1, activation = \"linear\"))\n\n# Model compile\nmodel.compile(optimizer = \"Adam\", loss = \"mean_squared_error\")\n\n# Model Training\nhistory = model.fit(X_train, y_train, epochs = 100, batch_size = 10, verbose = 1, validation_split = 0.2)","56eceace":"# Lets predict on the test data\ny_pred = model.predict(X_test)","2023f693":"# R2 score\nfrom sklearn.metrics import r2_score\nr2_score(y_pred, y_test)","b9dc9698":"# Lets plot the training and the validation loss\nimport matplotlib.pyplot as plt\n%matplotlib inline\nplt.plot(history.history[\"loss\"])\nplt.plot(history.history[\"val_loss\"]);","c2f46165":"# College Graduate Admission using ANN\nThe goal of this project is to predict Graduate Admissions from an Indian perspective.\n\n### Loading the dataset","02c9478b":"Model performs even better, R2 incresed from 0.66 to 0.68","bba02d26":"### Model Building","15bf8f13":"### Data Preprocessing","959242c6":"### Prediction","738d6fff":"The model performance increased. R2 score increased from -0.28 to 0.61","657be9a8":"The model performance is very poor, giving a negative value of R2. Now, lets try to improve the model. We can improve the model performance by:\n1. Increasing the number of epochs.\n2. Increasing the nodes in hidden layers.\n3. Adding more layers.","0aad5d9c":"Model performance increased even further from R2 score of 0.61 to 0.66","32db6e93":"There are no null values."}}