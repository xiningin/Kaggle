{"cell_type":{"2c3effd6":"code","c6051088":"code","7a99085b":"code","97635935":"code","1117d824":"code","9d2d9410":"code","e2637fae":"code","af178266":"code","9baec229":"code","b09e5f83":"code","3c810abb":"code","52125246":"code","c3d627ae":"code","bd1816b2":"code","879a3343":"code","7d9f822c":"code","4940c33a":"markdown","f00d2fa0":"markdown","e45a71d2":"markdown","8c9c9e76":"markdown","87e68cfc":"markdown","bfe2f15d":"markdown","1f577732":"markdown","839fa074":"markdown","2c264304":"markdown","0cd4d914":"markdown","06f55e9f":"markdown","c9b586bc":"markdown","bba494f5":"markdown","ec71e5fc":"markdown","ffa3c402":"markdown"},"source":{"2c3effd6":"import pandas as pd; print (pd.__version__)\nimport numpy as np; print (np.__version__)\nimport os\nfrom pathlib import Path\nfrom sklearn.preprocessing import StandardScaler","c6051088":"filename = 'euro-millions-ireland' \n\ndf = pd.read_csv('..\/input\/euromillionsireland\/'+filename+'.csv')\ndf2 = df['Winning Numbers'].str.split(\" \",expand=True,)\ndf = df.drop(['Winning Numbers','Draw Date', 'Outcome', 'Jackpot'], axis = 1)\ndf = df2.join(df)\ndf.columns = ['A', 'B', 'C', 'D', 'E', 'Bonus', 'Extra']","7a99085b":"df.head()","97635935":"scaler = StandardScaler().fit(df.values)\ntransformed_dataset = scaler.transform(df.values)\ntransformed_df = pd.DataFrame(data=transformed_dataset, index=df.index)","1117d824":"number_of_rows= df.values.shape[0] #all our games\nwindow_length = 5 #amount of past games we need to take in consideration for prediction\nnumber_of_features = df.values.shape[1] #balls count","9d2d9410":"train = np.empty([number_of_rows-window_length, window_length, number_of_features], dtype=float)\nlabel = np.empty([number_of_rows-window_length, number_of_features], dtype=float)\n\nfor i in range(0, number_of_rows-window_length):\n    train[i]=transformed_df.iloc[i:i+window_length, 0: number_of_features]\n    label[i]=transformed_df.iloc[i+window_length: i+window_length+1, 0: number_of_features]","e2637fae":"train.shape","af178266":"label.shape","9baec229":"train[0]","b09e5f83":"train[1]","3c810abb":"label[0]","52125246":"label[1]","c3d627ae":"from keras.models import Sequential\nfrom keras.models import load_model\nfrom keras.layers import LSTM, Dense,Dropout\n\nimport numpy as np\n\nbatch_size = 25 ","bd1816b2":"if os.path.exists('..\/input\/euromillionsireland\/'+filename+'.h5'):\n    model = load_model('..\/input\/euromillionsireland\/'+filename+'.h5')\nelse:\n    model = Sequential()\n    model.add(LSTM(32,      \n               input_shape=(window_length, number_of_features),\n               return_sequences=True))\n    model.add(Dropout(0.2))\n    model.add(LSTM(32,           \n               return_sequences=False))\n    model.add(Dropout(0.2))\n    model.add(Dense(number_of_features))\n    model.compile(loss='mse', optimizer='rmsprop')\n    model.fit(train, label,\n          batch_size=64, epochs=10000)\n    model.save('input\/'+filename+'.h5')","879a3343":"to_predict=df.iloc[-5:]\nscaled_to_predict = scaler.transform(to_predict)","7d9f822c":"scaled_predicted_output_1 = model.predict(np.array([scaled_to_predict]))\ndata = scaler.inverse_transform(scaled_predicted_output_1).astype(int)\ndf = pd.DataFrame(data, columns=['A', 'B', 'C', 'D', 'E', 'Bonus', 'Extra'])\ndf.to_csv(''+filename+'.csv', index=False)  \ndf","4940c33a":"Training","f00d2fa0":"Shapes","e45a71d2":"## The LSTM model","8c9c9e76":"## Prediction","87e68cfc":"## Prepare\/Generate data set","bfe2f15d":"First, we load into our system the latest results of the lottery games in the input folder","1f577732":"# EUROMILLION\/Lotto Prediction using LSTM","839fa074":"Create train dataset and labels for each row. It should have format for keras lstm model (rows, window zise, balls)","2c264304":"Last step, we would like to predict the next results, the prediction will be based on the model and based on the last 5 results. And we will export everything to a csv file","0cd4d914":"Lets define hyper params of or model","06f55e9f":"Next we need to normalize data.","c9b586bc":"Conclusion <br\/>\nWe developed a LSTM model to forecast lotery game. Thanks for reading","bba494f5":"The purpose of this notebook is to predict the EUROMILLION results by the LSTM model. (For Viewing Euromillions Results: https:\/\/www.lottery.ie\/draw-games\/results\/view?game=euromillions&draws=0)","ec71e5fc":"## The libraries we will work with","ffa3c402":"The winning numbers look like this (A\tB C\tD E  are balls that take range 0 to 100 each, Bonus and Extra numbers):"}}