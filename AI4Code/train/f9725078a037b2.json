{"cell_type":{"d5ee2d2e":"code","e85a3928":"code","f6af167d":"code","b557e5fa":"code","95429729":"code","0499ad63":"code","07e21287":"code","517d6e59":"code","b76c52d7":"code","39da9031":"code","2fdbe84c":"code","f5af3d41":"code","4acf8cdb":"code","94bf25c8":"code","3ac37028":"code","33010e08":"code","537cb4d3":"code","20d8f326":"code","e01060ba":"code","63260272":"code","c30036af":"code","1a7e99cc":"code","940a0465":"code","ff134314":"code","ca630c56":"code","36dfe384":"code","6bee8ad1":"code","4e6dbb51":"code","30eb34bb":"code","241203a3":"code","7b691e63":"code","709efc32":"code","48411a4c":"code","7fdc74ba":"code","34dbd92c":"code","66e282ac":"code","dbe0da39":"code","a30ba45f":"code","3405b775":"code","b3a58bfe":"code","17f84a6b":"markdown","7ccdd376":"markdown","0b474777":"markdown","89919bc3":"markdown","ba312869":"markdown","a91640e6":"markdown","6bf5692c":"markdown","ca85b4d6":"markdown","9d207ba2":"markdown","9bf951ff":"markdown","bf8715f5":"markdown","be31d912":"markdown","63ad5d7a":"markdown","0b0d84c3":"markdown"},"source":{"d5ee2d2e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e85a3928":"data=pd.read_csv('\/kaggle\/input\/drug-classification\/drug200.csv')\ndata.head()","f6af167d":"print(f'Number of Rows in dataset is :{data.shape[0]}')\nprint(f'Number of Columns in dataset is :{data.shape[1]}')","b557e5fa":"data.info()","95429729":"data.describe()","0499ad63":"## making copy of the data \n\ndf=data.copy()","07e21287":"data.columns","517d6e59":"import seaborn as sns \nimport matplotlib.pyplot as plt \n\n%matplotlib inline","b76c52d7":"plt.figure(figsize=(8,5))\nsns.boxplot(x=df.Age)","39da9031":"plt.figure(figsize=(10,6))\nsns.boxplot(y=df.Age,x=df.Drug)","2fdbe84c":"plt.figure(figsize=(10,6))\ndf.Sex.value_counts().plot.pie(autopct='%.2f%%',explode=[0.08]*2)","f5af3d41":"plt.figure(figsize=(8,5))\nsns.countplot(x=df.Sex,hue=df.Drug)","4acf8cdb":"plt.figure(figsize=(10,6))\nsns.countplot(x=df.BP)","94bf25c8":"plt.figure(figsize=(10,6))\nsns.countplot(x=df.BP,hue=df.Drug)","3ac37028":"plt.figure(figsize=(10,5))\ndf.Cholesterol.value_counts().plot.pie(autopct='%.2f%%',explode=[0.03]*2)","33010e08":"plt.figure(figsize=(10,6))\nsns.countplot(x=df.Cholesterol,hue=df.Drug)","537cb4d3":"plt.figure(figsize=(10,6))\nsns.histplot(x=df.Na_to_K)","20d8f326":"plt.figure(figsize=(10,6))\nsns.boxplot(y=df.Na_to_K,x=df.Drug)","e01060ba":"## missing Value\n\ndf.isna().sum()","63260272":"sns.boxplot(x=df.Age)","c30036af":"sns.boxplot(x=df.Na_to_K)","1a7e99cc":"### function to remove outlier\n\ndef out(x):\n    sorted(x)\n    Q1,Q3=np.percentile(x,[25,75])\n    IQR=Q3-Q1\n    \n    low_lim=Q1-(IQR*1.5)\n    up_lim=Q3+(IQR*1.5)\n    \n    return low_lim,up_lim","940a0465":"l,u=out(df.Na_to_K)","ff134314":"df.drop(df[(df.Na_to_K<l) | (df.Na_to_K>u)].index,inplace=True)","ca630c56":"sns.boxplot(x=df.Na_to_K)","36dfe384":"## Dealing with categorical Attributes\n\ndf=pd.get_dummies(data=df,columns=['Cholesterol','BP','Sex'],drop_first=True)\ndf.head()","6bee8ad1":"## Spliting Data into target and dependent features \n\nX=df.drop('Drug',axis=1)\ny=df['Drug']\n\nX.head()","4e6dbb51":"## spliting data into training and testing \n\nfrom sklearn.model_selection import train_test_split\n\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=42)","30eb34bb":"## importing Models \n\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import AdaBoostClassifier\nfrom xgboost import XGBClassifier","241203a3":"## function to fit the  model\ndef fit_model(model):\n    clf=model()\n    clf.fit(X_train,y_train)\n    return clf.predict(X_test)","7b691e63":"from sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score","709efc32":"## Function to evaluate the model\n\ndef evaluate_model(y_pred):\n    print(classification_report(y_test,y_pred))\n    print(confusion_matrix(y_test,y_pred))\n    print(round(accuracy_score(y_test,y_pred)*100,2))\n    ","48411a4c":"y_pred_dt=fit_model(DecisionTreeClassifier)","7fdc74ba":"evaluate_model(y_pred_dt)","34dbd92c":"y_pred_rfc=fit_model(RandomForestClassifier)","66e282ac":"evaluate_model(y_pred_rfc)","dbe0da39":"y_pred_ada=fit_model(AdaBoostClassifier)","a30ba45f":"evaluate_model(y_pred_ada)","3405b775":"y_pred_xgb=fit_model(XGBClassifier)","b3a58bfe":"evaluate_model(y_pred_xgb)","17f84a6b":"### <u><em> Evaluation Metrics <\/em><\/u>","7ccdd376":"## <u>XGBoost<\/u>","0b474777":"## <u>Random Forest <\/u>","89919bc3":"## <u>AdaBoost<\/u>","ba312869":"### <em> Outliers :<\/em>","a91640e6":"## <u>Decision Tree<\/u>","6bf5692c":"### Our dataset has `no missing values`","ca85b4d6":"## <u><strong> Importing Data <\/strong><\/u>","9d207ba2":"### Most of the outliers were removed from the data ","9bf951ff":"## <u><strong> Data Preprocessing <\/strong><\/u>","bf8715f5":"## <u><strong> Feature Engineering: <\/strong><\/u>","be31d912":"### Some Outlier values are present in Na_to_k column","63ad5d7a":"## <u><em><strong> Exploratory Data Analysis <\/strong><\/em><\/u>","0b0d84c3":"## <u><strong> Machine Learing <\/strong><\/u>"}}