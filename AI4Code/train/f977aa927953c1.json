{"cell_type":{"e545935e":"code","fa3946dd":"code","7dcce47d":"code","08f08596":"code","e655add8":"code","da07ead5":"code","bbe872d6":"code","ccb38a01":"code","439fd105":"code","fa2ca4e7":"code","30893365":"code","f8d1bb65":"code","23e428c8":"code","7b1759ae":"code","18501346":"code","ba43592f":"code","66d7ef05":"code","f8fe2f4c":"code","26b968ac":"code","ad606462":"markdown","177ef10d":"markdown","d31c8d4d":"markdown","eefbbade":"markdown","d0e20429":"markdown"},"source":{"e545935e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","fa3946dd":"import seaborn as sns\nimport matplotlib.pyplot as plt","7dcce47d":"df=pd.read_csv(\"..\/input\/covid19-corona-virus-india-dataset\/complete.csv\")","08f08596":"df.head()\n","e655add8":"df.isnull().sum()","da07ead5":"df.columns","bbe872d6":"df.rename(columns={'Name of State \/ UT':'State','Total Confirmed cases (Indian National)':'Confirmed_cases_india', 'Total Confirmed cases (Foreign National)':' Confirmed_cases_Foreign'\n                 ,'Total Confirmed cases *': 'Total_Confirmed'},inplace=True)","ccb38a01":"df.columns","439fd105":"df.head()","fa2ca4e7":"df['Total_Confirmed'].plot.hist()","30893365":"sns.countplot(x='Death',data=df,hue='State',palette='mako')","f8d1bb65":"df['Total_Confirmed'].describe()","23e428c8":"top=df.nlargest(20,'Total_Confirmed')\n","7b1759ae":"sns.stripplot(x='State',y='Total_Confirmed',data=top)","18501346":"fig,ax = plt.subplots(1)\nfig.set_size_inches(14,6)\nsns.barplot(df[\"State\"],df[\"Total_Confirmed\"])\nplt.xticks(rotation=45,fontsize=10)\nplt.title(\"Total Confirmed Cases Statewise as on \",fontsize=16)\nplt.xlabel(\"State\/Union Territory\",fontsize=14)\nplt.ylabel(\"Total Confirmed Cases\",fontsize=14)\nplt.show()","ba43592f":"from matplotlib import style\nstyle.use('ggplot')\n\ndf.plot(x='Date',y='Total_Confirmed',kind='line',linewidth=5,color='R',figsize=(25,15))\nplt.ylabel('Corona Cases')\n\nplt.grid()\nplt.show()","66d7ef05":"sns.lmplot(x='Total_Confirmed',y='Death',data=df,hue='State',size=8)","f8fe2f4c":"\t\tCured\/Discharged\/Migrated\tLatitude\tLongitude\tDeath\tTotal_Confirmed","26b968ac":"\nfrom shapely.geometry import Point\nimport geopandas as gpd\nfrom geopandas import GeoDataFrame\n\n%matplotlib inline\nplt.style.use('ggplot')\n\ngeometry = [Point(xy) for xy in zip(df['Longitude'], df['Latitude'])]\ngeo_df = GeoDataFrame(df, geometry=geometry)\nworld = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))\ngeo_df.plot(ax=world.plot(figsize=(15, 15)), marker='o', color='red', markersize=15);","ad606462":"**Regression plot**","177ef10d":"Renamed data","d31c8d4d":"**Top state**","eefbbade":"**Loading of data**","d0e20429":"confirmed cases\n"}}