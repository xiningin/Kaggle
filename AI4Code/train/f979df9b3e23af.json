{"cell_type":{"bea3e9e5":"code","c8f0d315":"code","f4ab6807":"code","231702cc":"code","0f22c518":"code","9cf422e7":"code","42e134af":"code","23787b4d":"code","e17b81ad":"code","507b5c8e":"code","4cb6c72e":"markdown","b82f8c80":"markdown","d8d021ab":"markdown","28dccfda":"markdown","89098629":"markdown","2d7ec218":"markdown"},"source":{"bea3e9e5":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport keras\nfrom tensorflow.keras.layers import Input, Concatenate, Flatten, Dense\nfrom tensorflow.keras.models import Model\nimport tensorflow as tf\nimport pickle as pkl\nimport os","c8f0d315":"x = pkl.load(open('\/kaggle\/input\/melanoma-pickled-files\/numpy_image(3).pkl', 'rb'))\ntarget = pkl.load(open('\/kaggle\/input\/melanoma-pickled-files\/numpy_target(2).pkl', 'rb'))\nx_test = pkl.load(open('\/kaggle\/input\/melanoma-pickled-files\/numpy_image_test(2).pkl', 'rb'))","f4ab6807":"!pip install -q efficientnet\nimport efficientnet.tfkeras as efn\n\ntarget = keras.utils.to_categorical(target)","231702cc":"train_details = pd.read_csv('\/kaggle\/input\/siim-isic-melanoma-classification\/train.csv')\ntrain_details","0f22c518":"train_details['sex'] = train_details['sex'].fillna('male')\ntrain_details['age_approx'] = train_details['age_approx'].fillna(train_details['age_approx'].mean())\ntrain_details['anatom_site_general_challenge'] = train_details['anatom_site_general_challenge'].fillna('head\/neck')","9cf422e7":"from category_encoders import TargetEncoder\nenc1 = TargetEncoder()\nenc2 = TargetEncoder()\n\ntrain_details['sex'] = enc1.fit_transform(train_details['sex'], train_details['target'])\ntrain_details['anatom_site_general_challenge'] = enc2.fit_transform(train_details['anatom_site_general_challenge'], train_details['target'])\n\nx_vec = train_details[['sex','age_approx','anatom_site_general_challenge']]","42e134af":"image_input = Input((144, 144, 3))\nvector_input = Input((3,))\n\nenet = efn.EfficientNetB7(input_shape=(144, 144, 3), weights='imagenet', include_top=False, pooling = 'avg')\nenet_result = enet(image_input)\nflat_layer = Flatten()(enet_result)\n\nconcat_layer= Concatenate()([vector_input, flat_layer])\noutput = Dense(2, activation = 'sigmoid')(concat_layer)\n\nmodel = Model(inputs=[image_input, vector_input], outputs=output)\n\nmodel.compile(optimizer=tf.keras.optimizers.Adam(), loss = 'binary_crossentropy', metrics=[tf.keras.metrics.AUC()])\n\nclass_weights = {0:98, 1:2}\n\nmodel.fit([x,x_vec], target, epochs=5, validation_split = 0.15, class_weight = class_weights)","23787b4d":"test_details = pd.read_csv('\/kaggle\/input\/siim-isic-melanoma-classification\/test.csv')\ntest_details.head()","e17b81ad":"test_details['sex'] = test_details['sex'].fillna('male')\ntest_details['age_approx'] = test_details['age_approx'].fillna(test_details['age_approx'].mean())\ntest_details['anatom_site_general_challenge'] = test_details['anatom_site_general_challenge'].fillna('head\/neck')\n\ntest_details['sex'] = enc1.transform(test_details['sex'])\ntest_details['anatom_site_general_challenge'] = enc2.transform(test_details['anatom_site_general_challenge'])\n\nx_vec_test = test_details[['sex','age_approx','anatom_site_general_challenge']]","507b5c8e":"preds = model.predict([x_test, x_vec_test])\npreds = [float(x[1]) for x in preds]\n\nsubmission = {'image_name': test_details['image_name'], 'target': preds}\nsubmission = pd.DataFrame(submission)\n\nos.chdir('\/kaggle\/working')\nsubmission.to_csv(r'efficientnetb7_pred.csv', index = False)","4cb6c72e":"## Building the model with both inputs","b82f8c80":"## Loading a few Pickle Files\nThe pickle files used can be found here - https:\/\/www.kaggle.com\/aryanpandey1109\/melanoma-pickled-files","d8d021ab":"## Getting the test results","28dccfda":"### Loading Training data","89098629":"Here we will fill in some missing values","2d7ec218":"## Getting the efficientnet ready"}}