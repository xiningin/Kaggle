{"cell_type":{"e1097d6a":"code","2a298f4d":"code","66f366fc":"code","982bbc55":"code","0eaab32a":"code","adbf0bae":"code","4578dd96":"code","9038520a":"code","4b646d95":"code","a7b0560c":"code","f2ffda99":"code","e62c1811":"code","d5ae297d":"code","fcb994fb":"code","8beb16b8":"code","daccdfd6":"code","b93ebb06":"code","30028e8f":"code","16013e41":"code","b8c9809b":"code","86a52c7f":"code","98f110e7":"code","945028c7":"code","066712c2":"code","389ab69e":"code","b81b1c42":"code","f22dce0c":"code","bd1dc54c":"code","a089d343":"code","b513d36d":"code","b7f791e2":"code","27999765":"code","8e338626":"code","3cbd6f25":"code","aef1f16e":"code","b66d128c":"code","aaee4755":"code","4a037f2b":"code","9ac9afe8":"code","fa4edeef":"code","4a7ae4fa":"code","029a7ed7":"code","98c01b49":"code","c61ab031":"code","f1906827":"code","70193033":"code","dfdf523a":"code","d47e8e86":"code","6f73d0e9":"code","6410aae7":"code","3441e809":"code","e9763c55":"code","41f217b6":"code","0a1d6229":"code","e6d20421":"code","1ff6d56c":"code","7798debc":"code","effcb75d":"code","43cb68ad":"code","6437075c":"code","e4359a1f":"code","c737678c":"code","2fd3ffa0":"code","13e635d6":"code","389101c8":"code","d022e26c":"code","ee75f907":"code","a66d6ed4":"code","cd1410ab":"code","7478036c":"code","03bda621":"code","d8e92e8e":"code","63da046b":"code","bf5f2d82":"code","096c5701":"code","9875d07b":"code","8ac79099":"code","05edb95a":"code","2421641f":"code","5a618007":"code","882d3ff1":"code","0f707161":"code","20c87e12":"code","a0d0973c":"code","4718311d":"code","892339ff":"code","d328e9d3":"code","6cdec6ef":"code","72173a41":"code","7b36703c":"code","1b7aa7ef":"code","3873c45d":"code","69cf615d":"code","190580a2":"code","0f37bb0d":"code","8c4889d8":"code","6c9fcff8":"code","d01f1ec9":"code","74fb631e":"code","d5c07898":"code","693e07dd":"code","96a6f42b":"code","07c772e6":"code","fc7bb8c0":"code","a8a1aeb2":"code","f85a11f7":"code","8465ae7c":"code","abb79ecb":"code","dea53fe6":"code","56f997bb":"code","6a177a2c":"code","b851b55a":"code","a4cc1f9a":"code","f33541cb":"code","726a9f60":"code","b6219e4e":"code","719244c3":"code","64b9973a":"code","8dcc9469":"code","c88a5974":"code","ffa59308":"code","d7eebd89":"code","d31c90e8":"code","b2ad39fb":"code","de5f803f":"code","cea1bba0":"code","d256789f":"code","002c27ce":"code","c9eed21d":"code","9a7822cd":"code","835c4ae7":"code","9c82ef83":"code","1faaec82":"code","cd9fdefb":"code","8a542f9b":"code","9ddd8857":"code","76c3302d":"code","c81474d8":"code","87e726b0":"code","612b2954":"code","8073f577":"code","e53a939a":"code","ec266124":"code","000cc2ba":"code","18086626":"code","cfc01729":"code","4d208aba":"code","39a7a98b":"code","c9b0e630":"code","71dae2b0":"code","b9933245":"code","a5f32e81":"code","0dfba77b":"code","ffab6d9f":"code","7db29f86":"code","6c96da54":"code","287849a9":"code","0eec5f5b":"code","034b11a8":"code","996cb3ed":"code","c0dc4797":"code","0a9815bd":"code","f2bc282e":"code","11c4090e":"code","5718e05b":"code","56d2df1b":"code","246259c9":"code","a0b791eb":"code","fcc2239b":"code","093ac284":"code","95ca3c59":"code","35a59bd8":"code","fa3d5d5d":"code","bef53fa7":"code","a6cca364":"code","8de9c805":"code","d0d4cd34":"code","668e8255":"code","3fc4f915":"code","71b7f565":"code","0bf06848":"code","b8f1e271":"code","14bbd36f":"code","2f389e77":"code","63aa0942":"code","f81cb88f":"code","4f6dd316":"code","2d323452":"code","65db9d4e":"code","4993e97a":"code","f25aa776":"code","79f56d46":"code","999977d6":"code","45394a4f":"code","073d9a1f":"code","c878e163":"code","4a690a04":"code","92552eb8":"code","83eaa082":"code","2fcebeb4":"code","5adc691d":"code","3e65a946":"code","812ecf1d":"code","c7bee6bd":"code","b3563374":"code","51500392":"code","55ed558a":"code","b4a731ac":"code","cf9f2a05":"code","99d04473":"code","598309d5":"code","c3ac211b":"code","46dbf454":"code","bf5c1c7f":"code","824327b5":"code","217b2cad":"code","318aab4d":"code","b2786601":"code","ca01f621":"code","1d1a36a3":"code","789bfac3":"code","20e3eee3":"code","c3346d3b":"code","5665132f":"code","9c407bf8":"code","dc958526":"code","9aba0a66":"code","cfcdca0c":"markdown","9143e066":"markdown","f499bd3d":"markdown","8f308fda":"markdown","bca05679":"markdown","a730ba71":"markdown","c4ead573":"markdown","fba2a532":"markdown","41eaf14a":"markdown","a4cc10b0":"markdown","00f3f629":"markdown","35cfeb40":"markdown","63b7fa1b":"markdown","6ac3e7d7":"markdown","5bac9a54":"markdown","c4370537":"markdown","2939d046":"markdown","ef99cede":"markdown","1f6c6c3d":"markdown","cac8bcda":"markdown","f4f0ce2e":"markdown","99622654":"markdown","03445b8c":"markdown","272ba98d":"markdown","1a78d496":"markdown","c1a83ff0":"markdown","89906db5":"markdown","0f9a5b65":"markdown","a79f0396":"markdown","dfbf17bb":"markdown","d2da131e":"markdown","45344df5":"markdown","55e30781":"markdown","cde07b4e":"markdown","426f9f4f":"markdown","af76139e":"markdown","c155e076":"markdown","c570b63e":"markdown","0f2e6bfc":"markdown","54663f83":"markdown","57af3829":"markdown"},"source":{"e1097d6a":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom sklearn.decomposition import PCA\nimport seaborn as sns\nsns.set(style=\"darkgrid\")\npd.options.display.width = 100\npd.options.display.precision = 4\npd.options.display.max_columns = 10\nimport os\nprint(os.listdir(\"..\/input\"))","2a298f4d":"df = pd.read_csv('..\/input\/train.csv')","66f366fc":"# Tabulate single variables with proportions\ndef tabulate(var):\n    target = pd.crosstab(var, columns='count')\n    target['prop'] = target \/ target.sum()\n    print(target)","982bbc55":"# Crosstabulate two variables with proportions\ndef crosstab(var1, var2):\n    cross = pd.crosstab(index=var1, columns=var2, margins=True)\n    prop_cross = cross \/ cross.loc[\"All\", \"All\"]\n    cross_concat = pd.concat([cross, prop_cross], axis=1)\n    print(cross_concat)","0eaab32a":"# Get mean of a variable grouped by another variable\ndef get_mean_by_group(varlist, group):\n    mean_df = pd.DataFrame()\n    for var in varlist:\n        mean_df[var.name] = var.groupby(group).mean()\n    print(mean_df)","adbf0bae":"# Create a correlation heatmap\ndef corr_heatmap(df):\n    corr = df.corr()\n    fig, (ax) = plt.subplots(1, 1, figsize=(14,8))\n    hm = sns.heatmap(corr, ax=ax, cmap=\"coolwarm\",annot=True, fmt='.4f', linewidths=.05)\n    fig.subplots_adjust(top=0.95, left=0.2)\n    fig.suptitle('Correlation Heatmap', fontsize=14, fontweight='bold')","4578dd96":"def cleandatasetyesno(data):\n    varlists=['dependency','edjefe','edjefa']\n    for varlist in varlists: \n        data[varlist].replace(('yes', 'no'), (1, 0), inplace=True)\n        data[varlist]=pd.to_numeric(data[varlist])\n    return data","9038520a":"# Graph for three variables\ndef three_var_graph(varlist, titles, asset):\n    fig, (ax1, ax2, ax3) = plt.subplots(1,3,figsize=(12,4), sharex=True, sharey=True)\n    f = sns.catplot(\"Target\", varlist[0], data=df, ci=None, ax=ax1, kind=\"bar\")\n    plt.close(f.fig)\n    ax1.set_title(titles[0])\n    ax1.set_ylim([0,1])\n    ax1.set_ylabel(\"\")\n    g = sns.catplot(\"Target\", varlist[1], data=df, ci=None, ax=ax2, kind=\"bar\")\n    plt.close(g.fig)\n    ax2.set_title(titles[1])\n    ax2.set_ylabel(\"\")\n    h = sns.catplot(\"Target\", varlist[2], data=df, ci=None, ax=ax3, kind=\"bar\")\n    plt.close(h.fig)\n    ax3.set_title(titles[2])\n    ax3.set_ylabel(\"\")\n    plt.suptitle(asset, y=1)","4b646d95":"# Graph for four variables\ndef four_var_graph(varlist, titles, condition):\n    f, ((ax1, ax2), (ax3, ax4)) = plt.subplots(2, 2, sharex=True, sharey=True, figsize=(10,8))\n    c = sns.catplot(\"Target\", varlist[0], data=df, ci=None, ax=ax1, kind=\"bar\")\n    plt.close(c.fig)\n    ax1.set_ylim([0,1])\n    ax1.set_ylabel(\"\")\n    ax1.set_title(titles[0])\n    g = sns.catplot(\"Target\", varlist[1], data=df, ci=None, ax=ax2, kind=\"bar\")\n    plt.close(g.fig)\n    ax2.set_ylabel(\"\")\n    ax2.set_title(titles[1])\n    h = sns.catplot(\"Target\", varlist[2], data=df, ci=None, ax=ax3, kind=\"bar\")\n    plt.close(h.fig)\n    ax3.set_ylabel(\"\")\n    ax3.set_title(titles[2])\n    i = sns.catplot(\"Target\", varlist[3], data=df, ci=None, ax=ax4, kind=\"bar\")\n    plt.close(i.fig)\n    ax4.set_ylabel(\"\")\n    ax4.set_title(titles[3])\n    plt.suptitle(condition,y=0.93)","a7b0560c":"# Graph for five variables\ndef five_var_graph(varlist, titles, condition):\n    f, ((ax1, ax2, ax3), (ax4, ax5, ax6)) = plt.subplots(2, 3, sharex='col', sharey=True, figsize=(12,8))\n    c = sns.catplot(\"Target\", varlist[0], data=df, ci=None, ax=ax1, kind=\"bar\")\n    plt.close(c.fig)\n    ax1.set_ylim([0,1])\n    ax1.set_ylabel(\"\")\n    ax1.set_title(titles[0])\n    g = sns.catplot(\"Target\", varlist[1], data=df, ci=None, ax=ax2, kind=\"bar\")\n    plt.close(g.fig)\n    ax2.set_ylabel(\"\")\n    ax2.set_title(titles[1])\n    h = sns.catplot(\"Target\", varlist[2], data=df, ci=None, ax=ax3, kind=\"bar\")\n    plt.close(h.fig)\n    ax3.set_ylabel(\"\")\n    ax3.set_title(titles[2])\n    i = sns.catplot(\"Target\", varlist[3], data=df, ci=None, ax=ax4, kind=\"bar\")\n    plt.close(i.fig)\n    ax4.set_ylabel(\"\")\n    ax4.set_title(titles[3])\n    j = sns.catplot(\"Target\", varlist[4], data=df, ci=None, ax=ax5, kind=\"bar\")\n    plt.close(j.fig)\n    ax5.set_ylabel(\"\")\n    ax5.set_title(titles[4])\n    ax5.set_ylabel(\"\")\n    ax6.axis('off')\n    plt.suptitle(condition,y=0.97)","f2ffda99":"# Graph for six variables\ndef six_var_graph(varlist, titles, condition):\n    f, ((ax1, ax2, ax3), (ax4, ax5, ax6)) = plt.subplots(2, 3, sharex=True, sharey=True, figsize=(12,8))\n    c = sns.catplot(\"Target\", varlist[0], data=df, ci=None, ax=ax1, kind=\"bar\")\n    plt.close(c.fig)\n    ax1.set_ylim([0,1])\n    ax1.set_ylabel(\"\")\n    ax1.set_title(titles[0])\n    g = sns.catplot(\"Target\", varlist[1], data=df, ci=None, ax=ax2, kind=\"bar\")\n    plt.close(g.fig)\n    ax2.set_ylabel(\"\")\n    ax2.set_title(titles[1])\n    h = sns.catplot(\"Target\", varlist[2], data=df, ci=None, ax=ax3, kind=\"bar\")\n    plt.close(h.fig)\n    ax3.set_ylabel(\"\")\n    ax3.set_title(titles[2])\n    i = sns.catplot(\"Target\", varlist[3], data=df, ci=None, ax=ax4, kind=\"bar\")\n    plt.close(i.fig)\n    ax4.set_ylabel(\"\")\n    ax4.set_title(titles[3])\n    j = sns.catplot(\"Target\", varlist[4], data=df, ci=None, ax=ax5, kind=\"bar\")\n    plt.close(j.fig)\n    ax5.set_ylabel(\"\")\n    ax5.set_title(titles[4])\n    k = sns.catplot(\"Target\", varlist[5], data=df, ci=None, ax=ax6, kind=\"bar\")\n    plt.close(k.fig)\n    ax6.set_ylabel(\"\")\n    ax6.set_title(titles[5])\n    plt.suptitle(condition,y=0.95)","e62c1811":"# Number of individual records in dataset\nlen(df)","d5ae297d":"# Number of households\nlen(df['idhogar'].unique())","fcb994fb":"# Average household size\nround(len(df) \/ len(df['idhogar'].unique()), 2)","8beb16b8":"df.head()","daccdfd6":"df_slim=df.drop(['Id','idhogar','Target'], axis=1)\ndfType=df_slim.dtypes\ndfType=pd.DataFrame(dfType.value_counts())\ndfType=dfType.reset_index()\ndfType.columns=[\"VarType\",\"value\"]\ndfType['percent']=(dfType['value']\/len(df_slim.columns))*100\n\ndfType['Variables']=\"\"\nvartypes=[\"object\",\"float64\", \"int64\"]\nfor vartype in vartypes:\n    ObjectVarNam=df_slim.columns[df_slim.dtypes==vartype].tolist()\n    strObjectVarNam=', '.join('\"{0}\"'.format(w) for w in ObjectVarNam)\n    dfType.loc[(dfType['VarType']==vartype), \"Variables\"]= strObjectVarNam\n\ndfType","b93ebb06":"# Number of household heads\ntabulate(df['parentesco1'])","30028e8f":"missing_hh = df['parentesco1'].groupby(df['idhogar']).sum()\nmissing_hh[missing_hh==0]","16013e41":"# Creating single variable for area (only for exploratory analysis purposes)\ndf[\"area\"] = \"Urban\"\ndf.loc[df[\"area2\"]==1, \"area\"] = \"Rural\"\ntabulate(df[\"area\"])","b8c9809b":"# Creating single variable for region (only for exploratory analysis purposes)\ndf[\"region\"] = \"Central\"\ndf.loc[df[\"lugar2\"]==1, \"region\"] = \"Chorotega\"\ndf.loc[df[\"lugar3\"]==1, \"region\"] = \"Pacifico Central\"\ndf.loc[df[\"lugar4\"]==1, \"region\"] = \"Brunca\"\ndf.loc[df[\"lugar5\"]==1, \"region\"] = \"Huetar Atlantica\"\ndf.loc[df[\"lugar6\"]==1, \"region\"] = \"Huetar Norte\"\ntabulate(df[\"region\"])","86a52c7f":"missing_hh_list = ['03c6bdf85', '09b195e7a', '1367ab31d', '1bc617b23', '374ca5a19', '61c10e099',\n                   '6b1b2405f', '896fe6d3e', 'a0812ef17', 'ad687ad89', 'b1f4d89d7', 'bfd5067c2',\n                   'c0c8a5013', 'd363d9183', 'f2bfa75c4']\ntabulate(df.area[df.idhogar.isin(missing_hh_list)])","98f110e7":"tabulate(df.region[df.idhogar.isin(missing_hh_list)])","945028c7":"missing = pd.DataFrame(df.isnull().sum())\nmissing['Proportion'] = missing\/len(df)\nmissing.columns=[\"Missing\", \"Proportion\"]\nmissing[missing[\"Missing\"] > 0]","066712c2":"# Number of households for which monthly rent payment is missing\nlen(df.idhogar[df['v2a1'].isnull()].unique())","389ab69e":"sns.distplot(df.v2a1[df['v2a1'].isnull()==False])","b81b1c42":"# Number of individuals who rent\ntabulate(df.tipovivi3)","f22dce0c":"# v2a1 is missing for individuals who don't rent\ntabulate(df.tipovivi3[df['v2a1'].isnull()])","bd1dc54c":"# Number of individuals who own and are paying installments\ntabulate(df.tipovivi2)","a089d343":"tabulate(df.tipovivi2[df['v2a1'].isnull()])","b513d36d":"# Number of people who own a fully paid house\ntabulate(df.tipovivi1)","b7f791e2":"tabulate(df.tipovivi1[df['v2a1'].isnull()])","27999765":"# Households for which number of tablets per household is missing\nlen(df.idhogar[df['v18q1'].isnull()].unique())","8e338626":"tabulate(df.v18q)","3cbd6f25":"tabulate(df.v18q1)","aef1f16e":"tabulate(df.v18q[df['v18q1'].isnull()])","b66d128c":"df.loc[df['v18q1'].isnull(), 'v18q1'] = 0","aaee4755":"tabulate(df.rez_esc)","4a037f2b":"pd.crosstab(df.rez_esc, df.age)","9ac9afe8":"tabulate(df.age[df['rez_esc'].isnull() & (df.age < 18)])\n","fa4edeef":"df.idhogar[df.meaneduc.isnull()]\n","4a7ae4fa":"df.hhsize[df.meaneduc.isnull()]","029a7ed7":"df.escolari[df.meaneduc.isnull()]","98c01b49":"df.age[df.meaneduc.isnull()]","c61ab031":"temp_df = df['escolari'][df['age']>=18].groupby(df['idhogar']).mean().to_frame()\ntemp_df.rename(columns={'escolari': 'meaneduc_new'}, inplace=True)\ntemp_df['meaneduc_new'].describe()","f1906827":"df = df.merge(temp_df, left_on=\"idhogar\", right_index=True, how=\"outer\")\ndf[[\"idhogar\", \"age\", \"escolari\", \"meaneduc_new\", \"meaneduc\"]].head(10)","70193033":"df['meaneduc_new'].isnull().sum()","dfdf523a":"df[[\"idhogar\", \"age\", \"meaneduc\", \"escolari\"]][df['meaneduc_new'].isnull()]","d47e8e86":"df[\"meaneduc_new\"].fillna(8.6161, inplace=True)","6f73d0e9":"df[\"meaneduc_new\"].isnull().sum()","6410aae7":"df['meaneduc_new'].describe()","3441e809":"sns.distplot(df.meaneduc_new)","e9763c55":"tabulate(df.Target)","41f217b6":"# Creating single variable for sex\ndf[\"sex\"] = \"Male\"\ndf.loc[df[\"female\"]==1, \"sex\"] = \"Female\"\ntabulate(df[\"sex\"])","0a1d6229":"crosstab(df.Target, df.area)","e6d20421":"get_mean_by_group([df.instlevel1, df.instlevel2, df.instlevel3, df.instlevel4,\n                   df.instlevel5, df.instlevel6, df.instlevel7, df.instlevel8,\n                   df.instlevel9], df.Target)","1ff6d56c":"get_mean_by_group([df.v18q, df.refrig, df.computer, df.television, df.mobilephone, df.qmobilephone], df.Target)","7798debc":"get_mean_by_group([df.epared1, df.epared2, df.epared3, df.etecho1, df.etecho2, df.etecho3, df.eviv1, df.eviv2, df.eviv3], df.Target)","effcb75d":"# Water\nget_mean_by_group([df.abastaguadentro, df.abastaguafuera, df.abastaguano], df.Target)","43cb68ad":"# Toilet\nget_mean_by_group([df.sanitario1, df.sanitario2, df.sanitario3, df.sanitario5, df.sanitario6], df.Target)","6437075c":"# Rubbish disposal\nget_mean_by_group([df.elimbasu1, df.elimbasu2, df.elimbasu3, df.elimbasu4, df.elimbasu5, df.elimbasu6], df.Target)","e4359a1f":"# Cooking fuel\nget_mean_by_group([df.energcocinar1, df.energcocinar2, df.energcocinar3, df.energcocinar4], df.Target)","c737678c":"# Electricity\nget_mean_by_group([df.public, df.planpri, df.noelec, df.coopele], df.Target)","2fd3ffa0":"tabulate(df.dependency)","13e635d6":"tabulate(df.SQBdependency[df.dependency==\"yes\"])","389101c8":"tabulate(df.SQBdependency[df.dependency==\"no\"])","d022e26c":"tabulate(df.edjefe)","ee75f907":"tabulate(df.SQBedjefe[df.edjefe==\"yes\"])","a66d6ed4":"tabulate(df.SQBedjefe[df.edjefe==\"no\"])","cd1410ab":"tabulate(df.edjefa)","7478036c":"# Replacing yes\/no values with 1\/0 using helper function\ndf = cleandatasetyesno(df)","03bda621":"# Categorical variable for dependency\ndf['depend_cat'] = 1\ndf.loc[df['dependency']==1, 'depend_cat'] = 2\ndf.loc[df['dependency'] > 1, 'depend_cat'] = 3\ntabulate(df.depend_cat)","d8e92e8e":"get_mean_by_group([df.Target], df.depend_cat)","63da046b":"tabulate(df[\"edjefe\"])","bf5f2d82":"df.loc[(df[\"parentesco1\"]==1) & (df[\"female\"]==1), \"edjefe\"] = 99 # 99 is coded if the household head is a woman or individual not household head\ndf.loc[df[\"parentesco1\"]==0, \"edjefe\"] = 99\ntabulate(df[\"edjefe\"])","096c5701":"df.loc[(df[\"parentesco1\"]==1) & (df[\"male\"]==1), \"edjefa\"] = 99 # 99 is coded if the household head is a man or individual not household head\ndf.loc[df[\"parentesco1\"]==0, \"edjefa\"] = 99\ntabulate(df[\"edjefa\"])","9875d07b":"print(\"Number of male household heads: {}\".format(len(df.parentesco1[(df[\"parentesco1\"]==1) & (df[\"male\"]==1)])))\nprint(\"Number of female household heads: {}\".format(len(df.parentesco1[(df[\"parentesco1\"]==1) & (df[\"female\"]==1)])))","8ac79099":"# Creating categorical variables for household head female education\ndf[\"fhh_educ_cat1\"] = 0\ndf.loc[df.edjefa < 6, \"fhh_educ_cat1\"] = 1\ndf[\"fhh_educ_cat2\"] = 0\ndf.loc[(df.edjefa >= 6) & (df.edjefa < 12), \"fhh_educ_cat2\"] = 1\ndf[\"fhh_educ_cat3\"] = 0\ndf.loc[(df.edjefa >= 12) & (df.edjefa < 99), \"fhh_educ_cat3\"] = 1","05edb95a":"# One variable with categories for female household head education\ndf[\"fhh_educ\"] = 0\ndf.loc[df.fhh_educ_cat1==1, \"fhh_educ\"] = 1\ndf.loc[df.fhh_educ_cat2==1, \"fhh_educ\"] = 2\ndf.loc[df.fhh_educ_cat3==1, \"fhh_educ\"] = 3\ntabulate(df.fhh_educ)","2421641f":"# Creating categorical variables for household head male education\ndf[\"mhh_educ_cat1\"] = 0\ndf.loc[df.edjefe < 6, \"mhh_educ_cat1\"] = 1\ndf[\"mhh_educ_cat2\"] = 0\ndf.loc[(df.edjefe >= 6) & (df.edjefe < 12), \"mhh_educ_cat2\"] = 1\ndf[\"mhh_educ_cat3\"] = 0\ndf.loc[(df.edjefe >= 12) & (df.edjefe < 99), \"mhh_educ_cat3\"] = 1","5a618007":"# One variable with categories for male household head education\ndf[\"mhh_educ\"] = 0\ndf.loc[df.mhh_educ_cat1==1, \"mhh_educ\"] = 1\ndf.loc[df.mhh_educ_cat2==1, \"mhh_educ\"] = 2\ndf.loc[df.mhh_educ_cat3==1, \"mhh_educ\"] = 3\ntabulate(df.mhh_educ)","882d3ff1":"# Creating feature cross for male and female household heads\ndf[\"male_hh\"] = df[\"parentesco1\"] * df[\"male\"]\ndf[\"female_hh\"] = df[\"parentesco1\"] * df[\"female\"]","0f707161":"corr_heatmap(df[[\"Target\", \"epared1\", \"epared2\", \"epared3\", \"etecho1\", \"etecho2\", \"etecho3\", \"eviv1\", \"eviv2\", \"eviv3\"]])","20c87e12":"# water and electricity\ncorr_heatmap(df[[\"Target\", \"abastaguadentro\", \"abastaguafuera\", \"abastaguano\", \"public\", \"planpri\", \"noelec\", \"coopele\"]])","a0d0973c":"# Water and toilet\ncorr_heatmap(df[[\"Target\", \"abastaguadentro\", \"abastaguafuera\", \"abastaguano\", \n               \"sanitario1\", \"sanitario2\", \"sanitario3\", \"sanitario5\", \"sanitario6\"]])","4718311d":"# Energy and toilet\ncorr_heatmap(df[[\"Target\", \"energcocinar1\", \"energcocinar2\", \"energcocinar3\", \"energcocinar4\",\n                 \"sanitario1\", \"sanitario2\", \"sanitario3\", \"sanitario5\", \"sanitario6\"]])","892339ff":"# Rubbish disposal and toilet\ncorr_heatmap(df[[\"Target\", \"elimbasu1\", \"elimbasu2\", \"elimbasu3\", \"elimbasu4\", \"elimbasu6\",\n    \"sanitario1\", \"sanitario2\", \"sanitario3\", \"sanitario5\", \"sanitario6\"]])","d328e9d3":"# why I didn't include elimbasu5 in the corr_heatmap\ntabulate(df['elimbasu5'])","6cdec6ef":"corr_heatmap(df[[\"Target\", \"overcrowding\", \"tipovivi1\", \"tipovivi2\", \"tipovivi3\",\n                 \"tipovivi4\", \"tipovivi5\", \"computer\", \"television\", \"mobilephone\", \"qmobilephone\"]])","72173a41":"corr_heatmap(df[[\"Target\", \"v18q\", \"v18q1\", \"computer\", \"television\", \"mobilephone\", \"qmobilephone\"]])","7b36703c":"sns.countplot(\"Target\", data=df)","1b7aa7ef":"ax = sns.barplot(x=\"Target\", y=\"Target\", data=df, estimator=lambda x: len(x) \/ len(df) * 100)\nax.set(xlabel='Target', ylabel='Percent')","3873c45d":"# Average number of rooms per household by region and target\nsns.catplot(\"Target\", \"rooms\", kind=\"box\", col=\"region\", col_wrap=3, height=4, data=df)","69cf615d":"# Average years of education by region and target\nsns.catplot(\"Target\", \"escolari\", kind=\"box\", col=\"region\", col_wrap=3, height=4, data=df)","190580a2":"# Dependency by region and target\nsns.catplot(\"Target\", \"dependency\", kind=\"bar\", col=\"region\", col_wrap=3, height=4, ci=None, data=df)","0f37bb0d":"# Overcrowding by region and target\nsns.catplot(\"Target\", \"overcrowding\", kind=\"bar\", col=\"region\", col_wrap=3, height=4, ci=None, data=df)","8c4889d8":"# Average household size by region and target\nsns.catplot(\"Target\", \"hogar_total\", kind=\"bar\", col=\"region\", col_wrap=3, height=4, ci=None, data=df)","6c9fcff8":"sns.set(style=\"white\")\ndf[\"v2a1_2\"] = np.log(df[\"v2a1\"])\nplt.subplots(figsize=(10,6))\nsns.scatterplot(\"escolari\", \"v2a1_2\", hue=\"area\", alpha=0.7, data=df)\nplt.ylabel(\"Monthly rent in logs\")","d01f1ec9":"ax = sns.catplot(\"Target\", \"v2a1_2\", kind=\"box\", data=df.query(\"v2a1 < 300000\"), height=6, aspect=1.2, col=\"area\")\nax.set(ylabel=\"Monthly rent in logs\")","74fb631e":"ax = sns.catplot(\"Target\", \"v2a1_2\", kind=\"box\", data=df.query(\"v2a1 < 300000\"), height=4, aspect=1.2, col=\"region\", col_wrap=3)\nax.set(ylabel=\"Monthly rent in logs\")","d5c07898":"three_var_graph([\"etecho1\", \"etecho2\", \"etecho3\"], [\"Bad\", \"Regular\", \"Good\"], \"Roof\")","693e07dd":"three_var_graph([\"epared1\", \"epared2\", \"epared3\"], [\"Bad\", \"Regular\", \"Good\"], \"Walls\")","96a6f42b":"three_var_graph([\"eviv1\", \"eviv2\", \"eviv3\"], [\"Bad\", \"Regular\", \"Good\"], \"Floor\")","07c772e6":"tabulate(df[\"computer\"])","fc7bb8c0":"# Total number of computers by household\ntemp_df = df[\"computer\"].groupby(df[\"idhogar\"]).sum().to_frame()\ndf = df.merge(temp_df, left_on=\"idhogar\", right_index=True, how=\"outer\")\ntabulate(df[\"computer_y\"])","a8a1aeb2":"# Total number of televisions by household\ntemp_df = df[\"television\"].groupby(df[\"idhogar\"]).sum().to_frame()\ndf = df.merge(temp_df, left_on=\"idhogar\", right_index=True, how=\"outer\")\ntabulate(df[\"television_y\"])","f85a11f7":"three_var_graph([\"computer_y\", \"television_y\", \"v18q1\"], [\"Computer\", \"Television\", \"Tablets\"], \"Average assets per household\")","8465ae7c":"five_var_graph([\"tipovivi1\", \"tipovivi2\", \"tipovivi3\", \"tipovivi4\", \"tipovivi5\"], \n             [\"Owned\", \"Installments\", \"Rented\", \"Precarious\", \"Other\"],\n             \"Housing\")","abb79ecb":"five_var_graph([\"sanitario1\", \"sanitario2\", \"sanitario3\", \"sanitario5\", \"sanitario6\"], \n             [\"No toilet\", \"Sewer\", \"Septic tank\", \"Black hole or latrine\", \"Other\"],\n             \"Toilet\")","dea53fe6":"four_var_graph([\"energcocinar1\", \"energcocinar2\", \"energcocinar3\", \"energcocinar4\"],\n               [\"None\", \"Electricity\", \"Gas\", \"Wood or charcoal\"],\n                \"Cooking fuel\")","56f997bb":"sns.catplot(\"Target\", \"qmobilephone\", kind=\"bar\", ci=None, data=df)","6a177a2c":"four_var_graph([\"public\", \"planpri\", \"noelec\", \"coopele\"],\n               [\"Public\", \"Private\", \"None\", \"Cooperative\"],\n               \"Electricity provider\")","b851b55a":"six_var_graph([\"elimbasu1\", \"elimbasu2\", \"elimbasu3\", \"elimbasu4\", \"elimbasu5\", \"elimbasu6\"],\n              [\"Tanker truck\", \"Buried\", \"Burned\", \"Thrown away\", \"In river\", \"Other\"],\n              \"Rubbish disposal\")","a4cc1f9a":"f, ((ax1, ax2, ax3, ax4), (ax5, ax6, ax7, ax8)) = plt.subplots(2, 4, sharex=True, sharey=True, figsize=(16,8))\nc = sns.catplot(\"Target\", \"paredblolad\", data=df, ci=None, ax=ax1, kind=\"bar\")\nplt.close(c.fig)\nax1.set_ylim([0,1])\nax1.set_ylabel(\"\")\nax1.set_title(\"Block or brick\")\ng = sns.catplot(\"Target\", \"paredzocalo\", data=df, ci=None, ax=ax2, kind=\"bar\")\nplt.close(g.fig)\nax2.set_ylabel(\"\")\nax2.set_title(\"Socket\")\nh = sns.catplot(\"Target\", \"paredpreb\", data=df, ci=None, ax=ax3, kind=\"bar\")\nplt.close(h.fig)\nax3.set_ylabel(\"\")\nax3.set_title(\"Cement\")\ni = sns.catplot(\"Target\", \"pareddes\", data=df, ci=None, ax=ax4, kind=\"bar\")\nplt.close(i.fig)\nax4.set_ylabel(\"\")\nax4.set_title(\"Waste material\")\nj = sns.catplot(\"Target\", \"paredmad\", data=df, ci=None, ax=ax5, kind=\"bar\")\nplt.close(j.fig)\nax5.set_ylabel(\"\")\nax5.set_title(\"Wood\")\nk = sns.catplot(\"Target\", \"paredzinc\", data=df, ci=None, ax=ax6, kind=\"bar\")\nplt.close(k.fig)\nax6.set_ylabel(\"\")\nax6.set_title(\"Zinc\")\nl = sns.catplot(\"Target\", \"paredfibras\", data=df, ci=None, ax=ax7, kind=\"bar\")\nplt.close(l.fig)\nax7.set_ylabel(\"\")\nax7.set_title(\"Natural fibers\")\nm = sns.catplot(\"Target\", \"paredother\", data=df, ci=None, ax=ax8, kind=\"bar\")\nplt.close(m.fig)\nax8.set_ylabel(\"\")\nax8.set_title(\"Other\")\nplt.suptitle(\"Wall material\",y=0.95)","f33541cb":"six_var_graph([\"pisomoscer\", \"pisocemento\", \"pisoother\", \"pisonatur\", \"pisonotiene\", \"pisomadera\"],\n              [\"Mosaic or ceramic\", \"Cement\", \"Other\", \"Natural material\", \"No floor\", \"Wood\"],\n              \"Floor material\")","726a9f60":"four_var_graph([\"techozinc\", \"techoentrepiso\", \"techocane\", \"techootro\"],\n               [\"Metal foil or zinc\", \"Fiber cement\", \"Natural fibers\", \"Other\"],\n               \"Roof material\")","b6219e4e":"sns.catplot(\"Target\", \"cielorazo\", kind=\"bar\", ci=None, data=df)\nplt.ylim([0,1])\nplt.ylabel(\"Have a ceiling\")","719244c3":"sns.catplot(\"Target\", \"dis\", kind=\"bar\", ci=None, data=df)\nplt.ylim([0,1])\nplt.ylabel(\"Disabled\")","64b9973a":"f, ((ax1, ax2, ax3, ax4), (ax5, ax6, ax7, ax8)) = plt.subplots(2, 4, sharex=True, sharey=True, figsize=(16,8))\nc = sns.catplot(\"Target\", \"estadocivil1\", data=df, ci=None, ax=ax1, kind=\"bar\")\nplt.close(c.fig)\nax1.set_ylim([0,1])\nax1.set_ylabel(\"\")\nax1.set_title(\"Less than 10 years\")\ng = sns.catplot(\"Target\", \"estadocivil2\", data=df, ci=None, ax=ax2, kind=\"bar\")\nplt.close(g.fig)\nax2.set_ylabel(\"\")\nax2.set_title(\"Free or coupled union\")\nh = sns.catplot(\"Target\", \"estadocivil3\", data=df, ci=None, ax=ax3, kind=\"bar\")\nplt.close(h.fig)\nax3.set_ylabel(\"\")\nax3.set_title(\"Married\")\ni = sns.catplot(\"Target\", \"estadocivil4\", data=df, ci=None, ax=ax4, kind=\"bar\")\nplt.close(i.fig)\nax4.set_ylabel(\"\")\nax4.set_title(\"Divorced\")\nj = sns.catplot(\"Target\", \"estadocivil5\", data=df, ci=None, ax=ax5, kind=\"bar\")\nplt.close(j.fig)\nax5.set_ylabel(\"\")\nax5.set_title(\"Separated\")\nk = sns.catplot(\"Target\", \"estadocivil6\", data=df, ci=None, ax=ax6, kind=\"bar\")\nplt.close(k.fig)\nax6.set_ylabel(\"\")\nax6.set_title(\"Widower\")\nl = sns.catplot(\"Target\", \"estadocivil7\", data=df, ci=None, ax=ax7, kind=\"bar\")\nplt.close(l.fig)\nax7.set_ylabel(\"\")\nax7.set_title(\"Single\")\nax8.axis(\"off\")\nplt.suptitle(\"Civil status\",y=0.95)","8dcc9469":"f, ((ax1, ax2), (ax3, ax4)) = plt.subplots(2, 2, sharex=True, sharey=True, figsize=(10,8))\nc = sns.catplot(\"Target\", \"hogar_nin\", data=df, ci=None, ax=ax1, kind=\"bar\")\nplt.close(c.fig)\nax1.set_ylim([0,5])\nax1.set_ylabel(\"\")\nax1.set_title(\"0-19 years\")\ng = sns.catplot(\"Target\", \"hogar_adul\", data=df, ci=None, ax=ax2, kind=\"bar\")\nplt.close(g.fig)\nax2.set_ylabel(\"\")\nax2.set_title(\"Adults\")\nh = sns.catplot(\"Target\", \"hogar_mayor\", data=df, ci=None, ax=ax3, kind=\"bar\")\nplt.close(h.fig)\nax3.set_ylabel(\"\")\nax3.set_title(\"65+ years\")\ni = sns.catplot(\"Target\", \"hogar_total\", data=df, ci=None, ax=ax4, kind=\"bar\")\nplt.close(i.fig)\nax4.set_ylabel(\"\")\nax4.set_title(\"Total\")\nplt.suptitle(\"Household members\",y=0.93)","c88a5974":"df_materials = df[[\"paredblolad\", \"paredzocalo\", \"paredpreb\", \"pareddes\", \"paredmad\", \"paredzinc\",\n                   \"paredfibras\", \"paredother\", \"pisomoscer\", \"pisocemento\", \"pisoother\", \"pisonatur\",\n                   \"pisonotiene\", \"pisomadera\", \"techozinc\", \"techoentrepiso\", \"techoentrepiso\", \"techocane\",\n                   \"techootro\"]]","ffa59308":"pca_materials = PCA().fit(df_materials)\nprint(\"Explained variance by component: %s\" % pca_materials.explained_variance_ratio_)","d7eebd89":"pca_materials = pca_materials.transform(df_materials)\npca_mat_df = pd.DataFrame(data=pca_materials)\npca_mat_df[pca_mat_df.columns[0:6]].head(10)","d31c90e8":"pca_mat_df = pca_mat_df[pca_mat_df.columns[0:6]]\npca_mat_df.columns = ['pca_mat_1', 'pca_mat_2', 'pca_mat_3', 'pca_mat_4', 'pca_mat_5', 'pca_mat_6']\npca_mat_df.head()","b2ad39fb":"# No correlation\ncorr_heatmap(pca_mat_df)","de5f803f":"len(pca_mat_df)","cea1bba0":"pca_mat_df.isnull().sum()","d256789f":"df_living = df[[\"v14a\", \"cielorazo\", \"abastaguadentro\", \"abastaguafuera\", \"abastaguano\", \"public\", \"planpri\",\n                \"noelec\", \"coopele\", \"sanitario1\", \"sanitario2\", \"sanitario3\", \"sanitario5\", \"sanitario6\",\n                \"energcocinar1\", \"energcocinar2\", \"energcocinar3\", \"energcocinar4\", \"elimbasu1\", \"elimbasu2\",\n                \"elimbasu3\", \"elimbasu4\", \"elimbasu5\", \"elimbasu6\", \"epared1\", \"epared2\", \"epared3\",\n                \"etecho1\", \"etecho2\", \"etecho3\", \"eviv1\", \"eviv2\", \"eviv3\"]]","002c27ce":"pca_living = PCA().fit(df_living)\nprint(\"Explained variance by component: %s\" % pca_living.explained_variance_ratio_)","c9eed21d":"pca_living = pca_living.transform(df_living)\npca_liv_df = pd.DataFrame(data=pca_living)\npca_liv_df[pca_liv_df.columns[0:10]].head(10)","9a7822cd":"pca_liv_df = pca_liv_df[pca_liv_df.columns[0:10]]\npca_liv_df.columns = ['pca_liv_1', 'pca_liv_2', 'pca_liv_3', 'pca_liv_4', 'pca_liv_5', 'pca_liv_6',\n                      'pca_liv_7', 'pca_liv_8', 'pca_liv_9', 'pca_liv_10']\npca_liv_df.head()","835c4ae7":"# No correlation\ncorr_heatmap(pca_liv_df)","9c82ef83":"len(pca_liv_df)","1faaec82":"pca_liv_df.isnull().sum()","cd9fdefb":"pca_mat_liv_df = pd.concat([pca_mat_df, pca_liv_df], axis=1)\npca_mat_liv_df.head()","8a542f9b":"df_assets = df[['rooms', 'bedrooms', 'v18q1', 'computer_y', 'television_y', 'qmobilephone', 'refrig']]","9ddd8857":"pca_assets = PCA().fit(df_assets)\nprint(\"Explained variance by component: %s\" % pca_assets.explained_variance_ratio_)","76c3302d":"pca_assets = pca_assets.transform(df_assets)\npca_assets_df = pd.DataFrame(data=pca_assets)\npca_assets_df[pca_assets_df.columns[0:4]].head(10)","c81474d8":"pca_assets_df = pca_assets_df[pca_assets_df.columns[0:4]]\npca_assets_df.columns = ['pca_assets_1', 'pca_assets_2', 'pca_assets_3', 'pca_assets_4']\npca_assets_df.head()","87e726b0":"# No correlation\ncorr_heatmap(pca_assets_df)","612b2954":"len(pca_assets_df)","8073f577":"pca_assets_df.isnull().sum()","e53a939a":"pca_df = pd.concat([pca_mat_liv_df, pca_assets_df], axis=1)\npca_df.head()","ec266124":"features = df[[\"hacdor\", \"hacapo\", \"r4h1\", \"r4h2\", \"r4m1\", \"r4m2\", \"tamhog\", \"escolari\", \"dis\", \"male\", \"female\",\n               \"hogar_nin\", \"hogar_adul\", \"hogar_mayor\", \"instlevel1\", \"instlevel2\", \"instlevel3\", \"instlevel4\",\n               \"instlevel5\", \"instlevel6\", \"instlevel7\", \"instlevel8\", \"instlevel9\", \"overcrowding\", \"tipovivi1\",\n               \"tipovivi2\", \"tipovivi3\", \"tipovivi4\", \"tipovivi5\", \"lugar1\", \"lugar2\", \"lugar3\", \"lugar4\", \n               \"lugar5\", \"lugar6\", \"area1\", \"area2\", \"SQBage\", \"meaneduc_new\", \"depend_cat\", \"fhh_educ\", \"mhh_educ\",\n               \"male_hh\", \"female_hh\", \"Target\"]]","000cc2ba":"features = pd.concat([features, pca_df], axis=1)\nfeatures.head()","18086626":"len(features)","cfc01729":"missing = pd.DataFrame(features.isnull().sum())\nmissing['Proportion'] = missing\/len(features)\nmissing.columns=[\"Missing\", \"Proportion\"]\nmissing[missing[\"Missing\"] > 0]","4d208aba":"df_test = pd.read_csv('..\/input\/test.csv')","39a7a98b":"# Sample size (number of individuals)\nlen(df_test)","c9b0e630":"# Number of households\nlen(df_test['idhogar'].unique())","71dae2b0":"# Average household size\nround(len(df_test) \/ len(df_test['idhogar'].unique()), 2)","b9933245":"tabulate(df_test[\"parentesco1\"])","a5f32e81":"missing = pd.DataFrame(df_test.isnull().sum())\nmissing['Proportion'] = missing\/len(df_test)\nmissing.columns=[\"Missing\", \"Proportion\"]\nmissing[missing[\"Missing\"] > 0]","0dfba77b":"df_test.head()","ffab6d9f":"# Households for which number of tablets per household is missing\nlen(df_test.idhogar[df_test['v18q1'].isnull()].unique())","7db29f86":"tabulate(df_test.v18q)","6c96da54":"tabulate(df_test.v18q1)","287849a9":"tabulate(df_test.v18q[df_test['v18q1'].isnull()])","0eec5f5b":"df_test.loc[df_test['v18q1'].isnull(), 'v18q1'] = 0","034b11a8":"tabulate(df_test.v18q1)","996cb3ed":"df_test[[\"idhogar\", \"age\", \"female\"]][df_test.meaneduc.isnull()]","c0dc4797":"temp_df = df_test['escolari'][df_test['age']>=18].groupby(df_test['idhogar']).mean().to_frame()\ntemp_df.rename(columns={'escolari': 'meaneduc_new'}, inplace=True)\ndf_test = df_test.merge(temp_df, left_on=\"idhogar\", right_index=True, how=\"outer\")\ndf_test[[\"idhogar\", \"age\", \"escolari\", \"meaneduc_new\", \"meaneduc\"]].head(10)","0a9815bd":"df_test['meaneduc_new'].isnull().sum()","f2bc282e":"df_test[\"meaneduc_new\"].describe()","11c4090e":"df_test[\"meaneduc_new\"].fillna(8.5675, inplace=True)","5718e05b":"df_test[\"meaneduc_new\"].isnull().sum()","56d2df1b":"sns.distplot(df_test.meaneduc_new)","246259c9":"df_test = cleandatasetyesno(df_test)","a0b791eb":"# Categorical variable for dependency\ndf_test['depend_cat'] = 1\ndf_test.loc[df_test['dependency']==1, 'depend_cat'] = 2\ndf_test.loc[df_test['dependency'] > 1, 'depend_cat'] = 3\ntabulate(df_test.depend_cat)","fcc2239b":"df_test.loc[(df_test[\"parentesco1\"]==1) & (df_test[\"male\"]==1), \"edjefa\"] = 99\ndf_test.loc[df_test[\"parentesco1\"]==0, \"edjefa\"] = 99\ntabulate(df_test[\"edjefa\"])","093ac284":"df_test.loc[(df_test[\"parentesco1\"]==1) & (df_test[\"female\"]==1), \"edjefe\"] = 99\ndf_test.loc[df_test[\"parentesco1\"]==0, \"edjefe\"] = 99\ntabulate(df_test[\"edjefe\"])","95ca3c59":"print(\"Number of male household heads: {}\".format(len(df_test.parentesco1[(df_test[\"parentesco1\"]==1) & (df_test[\"male\"]==1)])))\nprint(\"Number of female household heads: {}\".format(len(df_test.parentesco1[(df_test[\"parentesco1\"]==1) & (df_test[\"female\"]==1)])))","35a59bd8":"# Creating categorical variables for household head female education\ndf_test[\"fhh_educ_cat1\"] = 0\ndf_test.loc[df_test.edjefa < 6, \"fhh_educ_cat1\"] = 1\ndf_test[\"fhh_educ_cat2\"] = 0\ndf_test.loc[(df_test.edjefa >= 6) & (df_test.edjefa < 12), \"fhh_educ_cat2\"] = 1\ndf_test[\"fhh_educ_cat3\"] = 0\ndf_test.loc[(df_test.edjefa >= 12) & (df_test.edjefa < 99), \"fhh_educ_cat3\"] = 1","fa3d5d5d":"df_test[\"fhh_educ\"] = 0\ndf_test.loc[df_test.fhh_educ_cat1==1, \"fhh_educ\"] = 1\ndf_test.loc[df_test.fhh_educ_cat2==1, \"fhh_educ\"] = 2\ndf_test.loc[df_test.fhh_educ_cat3==1, \"fhh_educ\"] = 3\ntabulate(df_test.fhh_educ)","bef53fa7":"# Creating categorical variables for household head male education\ndf_test[\"mhh_educ_cat1\"] = 0\ndf_test.loc[df_test.edjefe < 6, \"mhh_educ_cat1\"] = 1\ndf_test[\"mhh_educ_cat2\"] = 0\ndf_test.loc[(df_test.edjefe >= 6) & (df_test.edjefe < 12), \"mhh_educ_cat2\"] = 1\ndf_test[\"mhh_educ_cat3\"] = 0\ndf_test.loc[(df_test.edjefe >= 12) & (df_test.edjefe < 99), \"mhh_educ_cat3\"] = 1","a6cca364":"df_test[\"mhh_educ\"] = 0\ndf_test.loc[df_test.mhh_educ_cat1==1, \"mhh_educ\"] = 1\ndf_test.loc[df_test.mhh_educ_cat2==1, \"mhh_educ\"] = 2\ndf_test.loc[df_test.mhh_educ_cat3==1, \"mhh_educ\"] = 3\ntabulate(df_test.mhh_educ)","8de9c805":"tabulate(df_test[\"computer\"])","d0d4cd34":"temp_df = df_test[\"computer\"].groupby(df_test[\"idhogar\"]).sum().to_frame()\ndf_test = df_test.merge(temp_df, left_on=\"idhogar\", right_index=True, how=\"outer\")\ntabulate(df_test[\"computer_y\"])","668e8255":"temp_df = df_test[\"television\"].groupby(df_test[\"idhogar\"]).sum().to_frame()\ndf_test = df_test.merge(temp_df, left_on=\"idhogar\", right_index=True, how=\"outer\")\ntabulate(df_test[\"television_y\"])","3fc4f915":"df_test[\"male_hh\"] = df_test[\"parentesco1\"] * df_test[\"male\"]\ndf_test[\"female_hh\"] = df_test[\"parentesco1\"] * df_test[\"female\"]","71b7f565":"df_materials = df_test[[\"paredblolad\", \"paredzocalo\", \"paredpreb\", \"pareddes\", \"paredmad\", \"paredzinc\",\n                   \"paredfibras\", \"paredother\", \"pisomoscer\", \"pisocemento\", \"pisoother\", \"pisonatur\",\n                   \"pisonotiene\", \"pisomadera\", \"techozinc\", \"techoentrepiso\", \"techoentrepiso\", \"techocane\",\n                   \"techootro\"]]","0bf06848":"pca_materials = PCA().fit(df_materials)\nprint(\"Explained variance by component: %s\" % pca_materials.explained_variance_ratio_)","b8f1e271":"pca_materials = pca_materials.transform(df_materials)\npca_mat_df = pd.DataFrame(data=pca_materials)\npca_mat_df[pca_mat_df.columns[0:6]].head(10)","14bbd36f":"pca_mat_df = pca_mat_df[pca_mat_df.columns[0:6]]\npca_mat_df.columns = ['pca_mat_1', 'pca_mat_2', 'pca_mat_3', 'pca_mat_4', 'pca_mat_5', 'pca_mat_6']\npca_mat_df.head()","2f389e77":"len(pca_mat_df)","63aa0942":"pca_mat_df.isnull().sum()","f81cb88f":"df_living = df_test[[\"v14a\", \"cielorazo\", \"abastaguadentro\", \"abastaguafuera\", \"abastaguano\", \"public\", \"planpri\",\n                \"noelec\", \"coopele\", \"sanitario1\", \"sanitario2\", \"sanitario3\", \"sanitario5\", \"sanitario6\",\n                \"energcocinar1\", \"energcocinar2\", \"energcocinar3\", \"energcocinar4\", \"elimbasu1\", \"elimbasu2\",\n                \"elimbasu3\", \"elimbasu4\", \"elimbasu5\", \"elimbasu6\", \"epared1\", \"epared2\", \"epared3\",\n                \"etecho1\", \"etecho2\", \"etecho3\", \"eviv1\", \"eviv2\", \"eviv3\"]]","4f6dd316":"pca_living = PCA().fit(df_living)\nprint(\"Explained variance by component: %s\" % pca_living.explained_variance_ratio_)","2d323452":"pca_living = pca_living.transform(df_living)\npca_liv_df = pd.DataFrame(data=pca_living)\npca_liv_df[pca_liv_df.columns[0:10]].head(10)","65db9d4e":"pca_liv_df = pca_liv_df[pca_liv_df.columns[0:10]]\npca_liv_df.columns = ['pca_liv_1', 'pca_liv_2', 'pca_liv_3', 'pca_liv_4', 'pca_liv_5', 'pca_liv_6',\n                      'pca_liv_7', 'pca_liv_8', 'pca_liv_9', 'pca_liv_10']\npca_liv_df.head()","4993e97a":"len(pca_liv_df)","f25aa776":"pca_liv_df.isnull().sum()","79f56d46":"pca_mat_liv_df = pd.concat([pca_mat_df, pca_liv_df], axis=1)\npca_mat_liv_df.head()","999977d6":"df_assets = df_test[['rooms', 'bedrooms', 'v18q1', 'computer_y', 'television_y', 'qmobilephone', 'refrig']]","45394a4f":"pca_assets = PCA().fit(df_assets)\nprint(\"Explained variance by component: %s\" % pca_assets.explained_variance_ratio_)","073d9a1f":"pca_assets = pca_assets.transform(df_assets)\npca_assets_df = pd.DataFrame(data=pca_assets)\npca_assets_df[pca_assets_df.columns[0:4]].head(10)","c878e163":"pca_assets_df = pca_assets_df[pca_assets_df.columns[0:4]]\npca_assets_df.columns = ['pca_assets_1', 'pca_assets_2', 'pca_assets_3', 'pca_assets_4']\npca_assets_df.head()","4a690a04":"len(pca_assets_df)","92552eb8":"pca_assets_df.isnull().sum()","83eaa082":"pca_df = pd.concat([pca_mat_liv_df, pca_assets_df], axis=1)\npca_df.head()","2fcebeb4":"test = df_test[[\"Id\",\"hacdor\", \"hacapo\", \"r4h1\", \"r4h2\", \"r4m1\", \"r4m2\", \"tamhog\", \"escolari\", \"dis\", \"male\", \"female\",\n               \"hogar_nin\", \"hogar_adul\", \"hogar_mayor\", \"instlevel1\", \"instlevel2\", \"instlevel3\", \"instlevel4\",\n               \"instlevel5\", \"instlevel6\", \"instlevel7\", \"instlevel8\", \"instlevel9\", \"overcrowding\", \"tipovivi1\",\n               \"tipovivi2\", \"tipovivi3\", \"tipovivi4\", \"tipovivi5\", \"lugar1\", \"lugar2\", \"lugar3\", \"lugar4\", \n               \"lugar5\", \"lugar6\", \"area1\", \"area2\", \"SQBage\", \"meaneduc_new\", \"depend_cat\", \"fhh_educ\", \"mhh_educ\",\n               \"male_hh\", \"female_hh\"]]","5adc691d":"test = pd.concat([test, pca_df], axis=1)\ntest.head()","3e65a946":"test[\"Target\"] = np.nan","812ecf1d":"from sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import f1_score, make_scorer\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.preprocessing import Imputer\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import classification_report","c7bee6bd":"ffeatures = pd.concat([features, test[test.columns[1:]]], axis=0, sort=False)\nffeatures[\"Target\"] = ffeatures[\"Target\"] - 1\ntabulate(ffeatures[\"Target\"])","b3563374":"#data_balance=ffeatures.drop(ffeatures.query('Target == 3').sample(frac=.75).index)\ndata_balance=ffeatures","51500392":"train_labels = np.array(list(data_balance[data_balance['Target'].notnull()]['Target'].astype(np.uint8)))\ntrain_set = data_balance[data_balance['Target'].notnull()]\ntest_set = data_balance[data_balance['Target'].isnull()]","55ed558a":"pipeline = Pipeline([('imputer', Imputer(strategy = 'median')),('scaler', MinMaxScaler())])\n\nX_train=train_set.drop(['Target'], axis=1)\ny_train=train_set['Target']\n\nX_test=test_set.drop(['Target'], axis=1)\ny_test=test_set['Target']","b4a731ac":"# Fit and transform training data\nX_train = pipeline.fit_transform(X_train)\n#X_test = pipeline.transform(X_test)\nX_test = pipeline.fit_transform(X_test)","cf9f2a05":"from fastai.structured import *\nfrom fastai.column_data import *\nfrom sklearn.model_selection import train_test_split\nimport xgboost as xgb\nimport lightgbm as lgb","99d04473":"train_df = X_train\ntest_df = X_test\nX_train, X_test, y_train, y_test = train_test_split(train_df,y_train,test_size=.3, random_state=42)\ndtrain = xgb.DMatrix(X_train, label=y_train)\ndtest = xgb.DMatrix(X_test, label=y_test)","598309d5":"params = dict()\nparams['max_depth'] = 70\nparams['min_child_weight'] = 1\nparams['num_class'] = 4\nparams['subsample'] = 1.0\nparams['colsample_bytree'] = 1.0 \nparams['eta'] = .2  \nparams['silent']=1","c3ac211b":"num_boost_round = 1000\ncv_results = xgb.cv( params, dtrain, num_boost_round=num_boost_round, seed=42, nfold=5, metrics={'merror'}, early_stopping_rounds=100 )\ncv_results['test-merror-mean'].min()","46dbf454":"model = xgb.train(\n    params,\n    dtrain,\n    num_boost_round=num_boost_round,\n    evals=[(dtest, \"Test\")],\n    early_stopping_rounds=100\n)","bf5c1c7f":"num_boost_round = model.best_iteration + 1\n\nbest_model = xgb.train(\n    params,\n    dtrain,\n    num_boost_round=num_boost_round,\n    evals=[(dtest, \"Test\")]\n)","824327b5":"accuracy_score(best_model.predict(dtest).astype(np.uint8), y_test)","217b2cad":"best_model.save_model(\"XGB_tuned.model\")","318aab4d":"train_labels = np.array(list(data_balance[data_balance['Target'].notnull()]['Target'].astype(np.uint8)))\ntrain_set = data_balance[data_balance['Target'].notnull()]\ntest_set = data_balance[data_balance['Target'].isnull()]","b2786601":"pipeline = Pipeline([('imputer', Imputer(strategy = 'median')),('scaler', MinMaxScaler())])\n\nX_train=train_set.drop(['Target'], axis=1)\ny_train=train_set['Target']\n\nX_test=test_set.drop(['Target'], axis=1)\ny_test=test_set['Target']","ca01f621":"tabulate(y_train)","1d1a36a3":"# Fit and transform training data\nX_train = pipeline.fit_transform(X_train)\n#X_test = pipeline.transform(X_test)\nX_test = pipeline.fit_transform(X_test)","789bfac3":"dtrain = xgb.DMatrix(X_train, label=y_train)\ndtest = xgb.DMatrix(X_test, label=y_test)","20e3eee3":"num_boost_round = 1000\ncv_results = xgb.cv( params, dtrain, num_boost_round=num_boost_round, seed=42, nfold=5, metrics={'merror'}, early_stopping_rounds=100 )\ncv_results['test-merror-mean'].min()","c3346d3b":"model = xgb.train(\n    params,\n    dtrain,\n    num_boost_round=num_boost_round\n)","5665132f":"model.save_model(\"XGB_tuned.model\")\nloaded_model = xgb.Booster()\nloaded_model.load_model(\"XGB_tuned.model\")","9c407bf8":"xgb_pred=loaded_model.predict(dtest)\nlen(xgb_pred)","dc958526":"xgb_pred","9aba0a66":"test['Target'] = np.array(xgb_pred).astype(int) + 1\nad_submit = pd.concat([test[test.columns[0]], test['Target'] ], axis=1)\nad_submit.head()\nad_submit.to_csv(\"ad_submit_5.csv\", index=False)","cfcdca0c":"This number does not match the number of households (2988). There are 15 households who do not have a household head. This is either because those households don't have household heads or it has been misrecorded. We can check if there is a specific region where the bias exists.","9143e066":"The distribution of education is very similar to that in the training set.","f499bd3d":"#### Analysing some other key variables","8f308fda":"Most missing values for rez_esc are because it is age-specific (not relevant for ages above 18, and less than 7).","bca05679":"There are nine households with only people less than 18 years. The mean education variable cannot be constructed for these. So how do these households have values for this variable? I would use the newly constructed variable and impute missing values by using the mean of the variable to make sure we don't drop these observations.","a730ba71":"There seems to be no way to directly impute so many missing rent values from the information available. Also, for those who own their house (5911 individuals), it will be difficult to determine the rent. Therefore, we can consider dropping this variable for the analysis for now. If required, in a later model we can attempt to impute these values using a regression model.","c4ead573":"Variables of **dependency**, **edjefe**, and **edjefa** have the same issue as in the training set. Therefore, we will resolve it the same way.","fba2a532":"#### Get coverage of utilities by 'Target' level","41eaf14a":"Problem of missing values for v18q1 solved. It is missing when v18q is 0. Therefore, we just need to replace NaN values with 0 in v18q1.","a4cc10b0":"## Overview of challenge","00f3f629":"Computer and television are household assets and mobile phone is an individual level asset","35cfeb40":"### Helper functions","63b7fa1b":"The file is a set of household characteristics from a representative sample of Costa Rican Households. The dataset has observations for each member of the household but the classification is done at the household level. The objective of the competition is to develop a model that can accurately predict the income level (\"Target\") of a household:\n\n    Target \n    1 = extreme poverty \n    2 = moderate poverty \n    3 = vulnerable households \n    4 = non vulnerable households\n\nKernel prepared by Amit Prasad and Doohee You","6ac3e7d7":"We need to find out if edjefe is 0 because of no education or because the household head is a woman. Same for edjefa - where education is 0 or household head is a man. The variables should be able to separate these values.","5bac9a54":"Wall, floor, and roof quality are highly correlated. Does it extend to other characteristics?","c4370537":"This seems to be an issue with teenage families. Maybe we should account for this in our model.","2939d046":"Nearly 2.5 times the size of the training dataset.","ef99cede":"### Exploring the test dataset","1f6c6c3d":"Although the missing household head info is all from rural areas, there is no particular regional bias. We could still use this in the model.","cac8bcda":"#### Getting proportions of asset variables by 'Target' level","f4f0ce2e":"#### Tabulating and cross-tabulating variables especially in relation to the target variable 'Target'","99622654":"### Store features dataframe","03445b8c":"#### Missing data","272ba98d":"The dependency variable consists of 3939 values coded as either \"yes\" or \"no\". These represent numerical values of 1 and 0 respectively. ","1a78d496":"### Plotting the data","c1a83ff0":"#### New variables","89906db5":"#### Taking care of missing data","0f9a5b65":"#### Creating test features dataset","a79f0396":"Target variable does not exist in the test set as expected. We decided to ignore v2a1 as a feature and we have to be consistent in the test set. In the case of \"meaneduc\" we have to create a new variable for education of household heads from \"escolari\".","dfbf17bb":"### Model","d2da131e":"Same issue as for the training data. Easy fix.","45344df5":"### Exploring the dataset","55e30781":"We would be better off calculating the average education for the three households using the escolari variable on our own. SQBmeaned is missing because of the missing meaneduc.","cde07b4e":"Some of the correlations especially among housing materials, utilities and assets reveal that there is scope for dimensionality reduction using PCA.","426f9f4f":"The same issue, as is for dependency, is true for edjefe and edjefa variables: 1 and 0 have been coded in as \"yes\"\/\"no\". Although in the case of edjefa we do not have a squared variable to double check with. We will make the assumption anyway (which is reasonable in this case).","af76139e":"Missing data patterns are similar to the training dataset.","c155e076":"### Correlations","c570b63e":"### Dimensionality reduction","0f2e6bfc":"Instead of the variable on mobile phones we should use qmobilephone","54663f83":"### Dimensionality reduction","57af3829":"### Fastai model-2"}}