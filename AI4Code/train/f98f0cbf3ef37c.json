{"cell_type":{"ed963257":"code","494f8020":"code","d2ea6799":"code","9e6b308c":"code","4b963b3e":"code","e7cfed4f":"code","a118fc76":"code","e4ba2182":"code","fd291193":"code","73269993":"code","6dbc808c":"code","330da015":"code","9dc5ea76":"code","aa6cf316":"code","2c3467f3":"code","ac4dbdd1":"code","148fab52":"code","fa50d7b0":"code","967f73b9":"code","bad0ac10":"code","482b43da":"code","11e11d19":"code","38de517d":"markdown","733c1c9c":"markdown","ad655937":"markdown","33ed26fc":"markdown"},"source":{"ed963257":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","494f8020":"country_vacc = pd.read_csv('\/kaggle\/input\/covid-world-vaccination-progress\/country_vaccinations.csv')\nvacc_manu = pd.read_csv('\/kaggle\/input\/covid-world-vaccination-progress\/country_vaccinations_by_manufacturer.csv')","d2ea6799":"vacc_manu.describe()","9e6b308c":"vacc_manu.head()","4b963b3e":"# look for null values\nvacc_manu.isna().sum()","e7cfed4f":"vacc = vacc_manu.drop(columns=['date', 'location'], axis=1)\nprint(vacc.head())\nnew_vacc = vacc.groupby(['vaccine'], sort=False)['total_vaccinations'].sum()\nprint(new_vacc.head())\n#new_vacc.describe()","a118fc76":"# OR DF CAN BE ACHIEVED USING PIVOT TABLE\ndf1 = pd.pivot_table(vacc, index=[ 'vaccine'], values=['total_vaccinations'], aggfunc=np.sum)\nprint(df1.head())\nprint(df1.info())","e4ba2182":"plt.figure(figsize=(12,10))\nsns.histplot(df1, x='vaccine', y='total_vaccinations',legend=True)","fd291193":"# vaccines per country\n#vacc_manu.location.unique()\nvacc_per_country = vacc_manu.drop(['date'], axis=1)\n#vacc_per_country.head()\ndf2 = pd.pivot_table(vacc_manu, index=[ 'location','vaccine'],values=['total_vaccinations'], aggfunc=np.sum)\ndf2.head()","73269993":"# draw a histogram with number of vaccinnes per vaccine in each country\nplt.figure(figsize=(12,10)) \ndf2.plot.bar()\nplt.show()","6dbc808c":"# group the data for location and vaccine and count number of times a particular vaccine was used.\ndf3 = vacc_per_country.drop('total_vaccinations', axis=1)\ndf = df3.groupby(['location', 'vaccine']).size().reset_index(name='Freq')\n\nfont = {'family': 'calibri',\n        'color':  'darkblue',\n        'weight': 'bold',\n        'size': 12,\n        }\n\nfig, ax = plt.subplots(figsize=(20,8))\n#ind = 0\nfor i, loc in enumerate(df.location.unique()):   \n    ax = fig.add_subplot(5,3,i+1 )\n    #for vac in df['vaccine'].loc[df['location'] == loc]:\n    sns.barplot(data=df[df['location'] == loc],x='vaccine', y='Freq', ax=ax )\n    #df[df['location'] == loc].plot.bar(x='vaccine', y='Freq')\n    plt.title(loc)\n    plt.xlabel('Vaccines Types',fontdict=font)\n    plt.ylabel('days #', fontdict=font)\n\nfig.tight_layout()\nfig.show()","330da015":"# lets look at vaccination in each country dataset\ncountry_vacc.head()","9dc5ea76":"# lets look at empty values\ncountry_vacc.isna().sum()","aa6cf316":"country_vacc.describe()","2c3467f3":"country_vacc.info()","ac4dbdd1":"# source_name and source_website does not seem to have any value add, remove them\n# replace all nan with 0.0\n\ncountry_vacc_new = country_vacc.replace(np.nan, 0.0)\ncountry_vacc_new = country_vacc_new.drop(['source_name', 'source_website', 'vaccines', 'country'], axis=1)\ncountry_vacc_new.head()","148fab52":"# split the date column in month, date and year\ncountry_vacc_new[['year', 'month', 'day']] = country_vacc_new['date'].str.split('-', expand=True)","fa50d7b0":"# drop unwanted columns\ncountry_vacc_new = country_vacc_new.drop(['date', 'day'], axis=1)\ncountry_vacc_new.head()","967f73b9":"# lets group the data on monthly basis and sum it up\ndf4 = country_vacc_new.groupby(['iso_code', 'month', 'year']).sum().reset_index()\ndf4.head()","bad0ac10":"# visualize the data for each month\nfont = {'family': 'calibri',\n        'color':  'darkblue',\n        'weight': 'bold',\n        'size': 12,\n        }\n\nfig, ax = plt.subplots(figsize=(20,35))\n\nfor i, month in enumerate(df4.month.unique()):\n    ax = fig.add_subplot(1,6,i+1)\n    sns.barplot(data=df4[df4['month'] == month],y='iso_code', x='people_vaccinated', ax=ax )\n    year = df4[df4['month'] == month].year.unique()\n    plt.title(month+'\/'+year)\n    plt.xlabel('Country codes',fontdict=font)\n    plt.ylabel('No.of people vaccinated', fontdict=font)\n\nfig.tight_layout()\nfig.show()\n    ","482b43da":"# lets sum up the data yearly wise and see which country has vaccinated most\n\n# 1. drop the month column\ndf5 = country_vacc_new.drop(['month'], axis=1)\n\n# 2. Group the data based on iso code\ndf5 = df5.groupby(['iso_code']).sum().reset_index()\n#df5.head()\n\n# 3. draw a histrogram to see maximum number of people immunized country wise\nplt.figure(figsize=(15,45))\nsns.barplot(data=df5, y='iso_code', x='people_fully_vaccinated')\nplt.plot()\n","11e11d19":"# 3. draw a histrogram to see maximum number of people immunized per population country wise\nplt.figure(figsize=(15,45))\nsns.barplot(data=df5, y='iso_code', x='people_fully_vaccinated_per_hundred')\nplt.plot()","38de517d":"**#above graph shows that most of the countries are using Biontech\/Pfizer as the most preferred vaccine followed by Moderna******","733c1c9c":"**from above diagram shows that USA already started vaccinating since december 2020 and is going the strongest \n amongst other countries, followed by India, followed by Isreal**","ad655937":"**** here we see that Isreal is doing really well, vaccinating people in terms of population, followed by Gibraltar, Chile and Bahrain********\n**US is doing OK, but India is really going very slow**","33ed26fc":"**again we see, USA is leading with maximum number of people vaccinated, followed ba India**"}}