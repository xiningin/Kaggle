{"cell_type":{"6535e24e":"code","63b504fd":"code","7a8a48ad":"code","439acb27":"code","7060e579":"code","9e837f53":"code","e0ae6e09":"code","6f6450c8":"code","e5765df1":"code","876e248f":"code","78f9958f":"code","3a363438":"code","1875ce22":"code","26e247df":"code","a1910616":"code","f1c2c5b4":"code","5f6de130":"code","eff0ad5e":"code","6122a309":"code","019c5644":"code","21b57a93":"markdown","fe37f870":"markdown","7cf28664":"markdown","beef932c":"markdown"},"source":{"6535e24e":"!pip install youtokentome","63b504fd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7a8a48ad":"from sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.pipeline import Pipeline, FeatureUnion\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import roc_auc_score\n\nimport youtokentome as yttm\n\nfrom tqdm.notebook import tqdm","439acb27":"train = pd.read_csv('\/kaggle\/input\/text-practice\/train.csv')","7060e579":"train.head()","9e837f53":"for i in train[train.positive == 1].review.iloc[:10]:\n    print(i, '\\n')","e0ae6e09":"for i in train[train.negative == 1].review.iloc[:10]:\n    print(i, '\\n')","6f6450c8":"for i in train[train.neutral == 1].review.iloc[:10]:\n    print(i, '\\n')","e5765df1":"texts = train['title'].fillna('') + train['review']","876e248f":"model = Pipeline([\n    ('tfidf', TfidfVectorizer(analyzer='word', ngram_range=(1, 3), max_features=100000)),\n    ('logreg', LogisticRegression(max_iter=1000, verbose=1))\n], verbose=1)","78f9958f":"labels = ['positive', 'negative', 'neutral']\nX_train, X_val, y_train, y_val = train_test_split(texts, train[labels].to_numpy().argmax(axis=1), random_state=0, test_size=0.1)","3a363438":"model.fit(X_train, y_train)","1875ce22":"%%time\npredict = model.predict_proba(X_val)","26e247df":"roc_auc_score(y_val, predict, multi_class='ovr')","a1910616":"test = pd.read_csv('\/kaggle\/input\/text-practice\/test.csv')","f1c2c5b4":"test_texts = test['title'].fillna('') + test['review']","5f6de130":"sample_submission = pd.read_csv('\/kaggle\/input\/text-practice\/sample_submission.csv')","eff0ad5e":"%%time\nsample_submission[labels] = model.predict_proba(test_texts)","6122a309":"sample_submission.head()","019c5644":"sample_submission.to_csv('submission.csv', index=None)","21b57a93":"## \u0427\u0442\u043e \u0435\u0449\u0435 \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c?\n\n### Byte Pair Encoding\n\n\u0418\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u044d\u0442\u043e\u0442 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0430\u043b\u0441\u044f \u0434\u043b\u044f \u043a\u043e\u043c\u043f\u0440\u0435\u0441\u0441\u0438\u0438 \u0442\u0435\u043a\u0441\u0442\u043e\u0432, \u043d\u043e \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043b\u0435\u0442 \u043d\u0430\u0437\u0430\u0434 \u0435\u0433\u043e \u0441\u0442\u0430\u043b\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u0442\u043e\u043a\u0435\u043d\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u043a\u0441\u0442\u0430 \u0432 \u043c\u0430\u0448\u0438\u043d\u043d\u043e\u043c \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0435. \u0421\u0435\u0439\u0447\u0430\u0441 \u043e\u043d \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0448\u0438\u0440\u043e\u043a\u043e\u0433\u043e \u043a\u0440\u0443\u0433\u0430 \u0437\u0430\u0434\u0430\u0447, \u0432 \u0442\u043e\u043c \u0447\u0438\u0441\u043b\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0432 \u043c\u043e\u0434\u0435\u043b\u044f\u0445 BERT \u0438 GPT-2.\n\n[https:\/\/arxiv.org\/abs\/1508.07909](http:\/\/)\n\n**\u041f\u0440\u0438\u043d\u0446\u0438\u043f:**\n\n\u0427\u0430\u0441\u0442\u043e \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u044e\u0449\u0438\u0435\u0441\u044f \u0433\u0440\u0443\u043f\u043f\u044b \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u043d\u0435 \u0437\u0430\u043c\u0435\u043d\u044f\u044e\u0442\u0441\u044f \u043d\u0430 \u0434\u0440\u0443\u0433\u043e\u0439 \u0441\u0438\u043c\u0432\u043e\u043b, \u0430 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u044e\u0442\u0441\u044f \u0432 \u0442\u043e\u043a\u0435\u043d \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u044c. \u0410\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0442\u043e\u043a\u0435\u043d\u0438\u0437\u0430\u0446\u0438\u0438 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 BPE \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044f\u043c \u0443\u0437\u043d\u0430\u0432\u0430\u0442\u044c \u043a\u0430\u043a \u043c\u043e\u0436\u043d\u043e \u0431\u043e\u043b\u044c\u0448\u0435 \u0441\u043b\u043e\u0432 \u043f\u0440\u0438 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u043d\u043e\u043c \u043e\u0431\u044a\u0435\u043c\u0435 \u0441\u043b\u043e\u0432\u0430\u0440\u044f \u0438 \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u0442\u0430\u043a:\n\n    - \u041e\u0431\u0443\u0447\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u043a\u043e\u0440\u043f\u0443\u0441\u0435 \u0441\u043b\u043e\u0432(\u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u0440\u0430\u0437\u043c\u0435\u0440 \u0441\u043b\u043e\u0432\u0430\u0440\u044f)\n    \n    - \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u043b\u043e\u0432\u0430 \u0438\u0437 \u0442\u0435\u043a\u0441\u0442\u0430 \u043a\u0430\u043a \u0441\u043f\u0438\u0441\u043a\u0438 \u0431\u0443\u043a\u0432.\n    \n    - \u0421\u0447\u0438\u0442\u0430\u0435\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0439 \u043a\u0430\u0436\u0434\u043e\u0439 \u043f\u0430\u0440\u044b \u0431\u0443\u043a\u0432.\n    \n    -  \u041e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c \u0441\u0430\u043c\u044b\u0435 \u0447\u0430\u0441\u0442\u043e\u0442\u043d\u044b\u0435 \u0432 \u0442\u043e\u043a\u0435\u043d \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u044c.\n    \n    - \u041f\u043e\u0432\u0442\u043e\u0440\u044f\u0435\u043c \u0448\u0430\u0433 3 \u0434\u043e \u0442\u0435\u0445 \u043f\u043e\u0440, \u043f\u043e\u043a\u0430 \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0430.\n   \n   \n**\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f**\n\n[https:\/\/github.com\/VKCOM\/YouTokenToMe](http:\/\/)\n\n\n\n## FastText\n[https:\/\/github.com\/facebookresearch\/fastText](http:\/\/)\n\n\n\n## CatBoost TextClassification\n[https:\/\/catboost.ai\/docs\/features\/text-features.html](http:\/\/)","fe37f870":"### TF-idf \u043d\u0430 \u0442\u0435\u043a\u0441\u0442\u0435[](http:\/\/)","7cf28664":"TF-IDF \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437 \u0434\u0432\u0443\u0445 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u0432: Term Frequency (\u0447\u0430\u0441\u0442\u043e\u0442\u043d\u043e\u0441\u0442\u044c \u0441\u043b\u043e\u0432\u0430 \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0435) \u0438 Inverse Document Frequency (\u0438\u043d\u0432\u0435\u0440\u0441\u0438\u044f \u0447\u0430\u0441\u0442\u043e\u0442\u044b \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430). \u041e\u043d\u0438 \u0441\u0447\u0438\u0442\u0430\u044e\u0442\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c:\n\n![\u0430\u043b\u044c\u0442](https:\/\/python-school.ru\/wp-content\/ql-cache\/quicklatex.com-7afde4e2195a6542b8daa8fc1b22d27e_l3.svg \"Term Frequency Token\")\n\n![\u0430\u043b\u044c\u0442](https:\/\/python-school.ru\/wp-content\/ql-cache\/quicklatex.com-9ccb91a056e64eca6eace25e28055850_l3.svg \"IDF Token\")\n\n- \u0433\u0434\u0435 n_i \u2013 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0437 \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u0442\u0441\u044f \u0442\u043e\u043a\u0435\u043d \u0432 i-\u043e\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0435,\n- N_i \u2013 \u043e\u0431\u0449\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0442\u043e\u043a\u0435\u043d\u043e\u0432 \u0432 i-\u043e\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0435,\n- p \u2013 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u0442\u0441\u044f \u0442\u043e\u043a\u0435\u043d,\n- P \u2013 \u043e\u0431\u0449\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432.\n- \u0412 \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u043c \u0441\u0447\u0435\u0442\u0435, TF-IDF \u2013 \u044d\u0442\u043e \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 TF \u043d\u0430 IDF:\n\n![\u0430\u043b\u044c\u0442](https:\/\/python-school.ru\/wp-content\/ql-cache\/quicklatex.com-0ad3556549127bded7880f14f0d10de2_l3.svg \"TF-IDF Token\")","beef932c":"# \u041f\u0440\u0435\u0434\u0438\u043a\u0442"}}