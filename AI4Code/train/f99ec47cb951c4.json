{"cell_type":{"4495a230":"code","4b31a1e0":"code","783ef38a":"code","278b311b":"code","a950b25b":"code","a12a56d6":"code","4ce64a66":"code","90c3db09":"code","d1b3453f":"code","fbc5c59f":"code","39c69b2a":"code","9a9efb29":"code","bbd24b1d":"code","7d83e170":"code","acccc37d":"code","0999dbcc":"code","ffd6e9ad":"code","92232e45":"code","59fbc6f1":"code","27c54732":"code","553303e6":"code","745ee26a":"markdown","edba14ac":"markdown","d8b8800f":"markdown","10e19dee":"markdown","391cbad2":"markdown","e48b7d31":"markdown","d5cd89d5":"markdown","3d1292ed":"markdown","4850581b":"markdown"},"source":{"4495a230":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\nimport os\nfor dirname, _, filenames in os.walk(\"\/kaggle\/input\"):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n# Any results you write to the current directory are saved as output.","4b31a1e0":"data = pd.read_csv(\"\/kaggle\/input\/iris-flower-dataset\/IRIS.csv\")\ndata","783ef38a":"data.info()","278b311b":"names = [\"John\",\"Muhammed\",\"Ahmet\",\"Can\"]\nsurnames = [\"Carl\",\"Sert\",\"Kaya\",\"Cenan\"]\nages = [15,21,41,18]\nlist_label = [\"name\",\"surname\",\"age\"]\nlist_col = [names,surnames,ages]\nzipped = list(zip(list_label,list_col))\ndata_dict = dict(zipped)\n\ndf = pd.DataFrame(data_dict)\ndf","a950b25b":"df[\"e_mail\"] = [\"john@mail.com\",\"sert@mail.com\",\"ahmet@mail.com\",\"can@mail.com\"]\ndf","a12a56d6":"df[\"income\"] = 0\ndf","4ce64a66":"data.plot()\nplt.show()","90c3db09":"data.plot(subplots = True)\nplt.show()","d1b3453f":"data.plot(kind = \"scatter\", x = \"sepal_length\",y = \"sepal_width\")\nplt.show()","fbc5c59f":"data.info()","39c69b2a":"data.plot(kind = \"hist\", y = \"petal_width\", bins = 70)","9a9efb29":"# histogram subplot with non cumulative and cumulative\nfig, axes = plt.subplots(nrows=2,ncols=1)\ndata.plot(kind = \"hist\",y = \"petal_width\",bins = 50,ax = axes[0])\ndata.plot(kind = \"hist\",y = \"petal_width\",bins = 50,ax = axes[1],cumulative = True)\nplt.savefig('graph.png')\nplt.show()","bbd24b1d":"data.describe()","7d83e170":"time_list = [\"2001-01-05\",\"2022-12-30\",\"2012-05-25\"]\nprint(type(time_list))\n\n# Transform to be datetime object\ndatetime_object = pd.to_datetime(time_list)\nprint(type(datetime_object))","acccc37d":"date_list = [\"1995-10-15\",\"1995-05-01\",\"1996-06-06\",\"1995-05-15\"]\ndate_object = pd.to_datetime(date_list)\ndf[\"date\"] = date_object\n# Make date as index\ndf = df.set_index(\"date\")\ndf\n","0999dbcc":"print(df.loc[\"1995-10-15\"])\nprint(\"\\n\\n\\n\\n\\n\")\nprint(df.loc[\"1996-01-01\":\"2005-01-01\"])","ffd6e9ad":"df.describe()","92232e45":"df.resample(\"A\").mean()","59fbc6f1":"df.resample(\"M\").mean()","27c54732":"df.resample(\"M\").first().interpolate(\"linear\")","553303e6":"df.resample(\"M\").mean().interpolate(\"linear\")","745ee26a":"Create new column and asign a value to entire column","edba14ac":"Create new column and asign different values to entire column","d8b8800f":"# **Building Data Frames From Scratch**\nWe can build dataframe from dicts\n1. Create dict from lists\n2. Create data frame from dict","10e19dee":"# **Statistical Exploratory Data Analysis**","391cbad2":"* count: number of entries\n* mean: avarage of entries\n* std: standart deviation\n* min: minimum entry\n* 25%: first quantile (Q1)\n* 50%: median or second quantile (Q2)\n* 75%: third quantile (Q3)\n* max: maximum entry","e48b7d31":"# **Visual Exploratory Data Analysis**\n* Plot\n* Subplot\n* Scatter plot\n* Histogram plot","d5cd89d5":"As you can see there are a lot of NaN because df does not include all months\n\nWe can solve this problem with interpolate","3d1292ed":"# **Resampling Pandas Time Series**\nResampling: statistical method over different time intervals\n* Needs string to specify frequency like \"M\" = month or \"A\" = year","4850581b":"# **Indexing Pandas Time Series**"}}