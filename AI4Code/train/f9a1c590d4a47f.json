{"cell_type":{"215c174e":"code","829a9d40":"code","075870bc":"code","85647b49":"code","5649d1f4":"code","1d9d8a34":"code","c137a40d":"code","5378bbc2":"code","0bdb29d5":"code","b82e6f17":"code","9fd67cb0":"code","1ec54be3":"markdown","571d1c1c":"markdown","17b15d75":"markdown","20cff378":"markdown","1dd5cc10":"markdown","84643dd5":"markdown","c2e35d2c":"markdown","7980f376":"markdown","d08d92fe":"markdown"},"source":{"215c174e":"#Author : Rohini Garg\nimport numpy as np\nimport pandas as pd\n# 1.2 For plotting\nimport matplotlib.pyplot as plt\n#import matplotlib\n#import matplotlib as mpl     # For creating colormaps\nimport seaborn as sns\n# 1.3 For data processing\nfrom sklearn.preprocessing import StandardScaler\n# 1.4 OS related\nimport os\n\n%matplotlib inline\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"\nplt.style.use('dark_background')\n\n\n#os.chdir(\"\/home\/puneet\/Desktop\/Notebook\/COVID\")\n\nos.chdir(\"\/kaggle\/input\/uncover\/ECDC\")\nos.listdir()            # List all files in the folder\n\n#load data\ndf = pd.read_csv(\"\/kaggle\/input\/uncover\/ECDC\/current-data-on-the-geographic-distribution-of-covid-19-cases-worldwide.csv\", parse_dates=['daterep'])\n#df.head()\n\ndf[df['continentexp'] == 'Asia']['geoid'].unique()\n#df.columns.values\n\ndf['year'].unique()    # Data of two years\ndf['month'].unique()   # Data from december to april\ndf['daterep'] = pd.to_datetime(df['year'] * 10000 + df['month'] * 100 + df['day'], format='%Y%m%d')\n#df['month'] = df['month'].map({ 12: 'Dec', 1: 'Jan', 2: 'Feb', 3: 'Mar', 4: 'April' })\nimport calendar\ndf['month']=df['month'].apply(lambda x: calendar.month_abbr[x])\ndf['month']=df['month'] + '-' + df.year.astype(str)\ndf.sort_values(by = 'daterep', inplace=True, ascending=True)\ndf['month_no']=df.daterep.dt.month\n\ndf.head\ndf['cum_cases'] = 0\ndf['cum_deaths'] = 0\ndf.rename({\n    'countriesandterritories': 'country', \n    'popdata2018': 'pop', \n    'countryterritorycode': 'code',\n    'continentexp': 'cont'}, axis=1, inplace=True)\n#\n#  Cummulative cases, deaths for each country\n#\ngr = df.groupby('country')\nfor country in df['country'].unique():\n    g = gr.get_group(country)\n    df.loc[df.country == country, 'cum_cases'] = g['cases'].cumsum(axis=0)\n    df.loc[df.country == country, 'cum_deaths'] = g['deaths'].cumsum(axis=0)\ndf['mort_rate'] = df['cum_deaths'] \/ df['cum_cases'] * 100\ndf.loc[ ~np.isfinite(df['mort_rate']), 'mort_rate' ] = np.nan\ndf.fillna({'mort_rate': 0}, inplace=True)   # Remove Nan\n","829a9d40":"import math\n\ngrpCountry = df.groupby(['country', 'month'])\n\ntotalMonths = df.month.unique().size\nnrows = math.ceil(totalMonths \/ 2)\nfig, ax = plt.subplots(nrows, 2, figsize=(10, 10))\nax = ax.ravel()\nfig.suptitle(\"Total cases in Afganistan\")\nfor idx, month in enumerate(df.month.unique()):\n    dfTemp = grpCountry.get_group(('Afghanistan', month))\n    ax[idx].plot('day', 'cum_cases', 'go--', data=dfTemp)\n    ax[idx].set(title='Total cases till {} is {}'.format(month, dfTemp['cum_cases'].max()), xlabel='#Days', ylabel='# Cases')\n    \nplt.subplots_adjust(wspace = 0.5, hspace = 0.5)\n#Observation: Cases are increasing since Mid Mar 2020","075870bc":"import math\ngrpCountry=df.groupby(['country','month'])\nnoofmonths=len(df['month'][df.country=='India'].unique())\nnoofrows=math.ceil(noofmonths\/2)\nfg,ax=plt.subplots(noofrows,2,figsize=(10,10))\nfg.suptitle(\"Deaths in India\")\nax=ax.ravel()\nfor idx,month in enumerate (df['month'][df.country=='India'].unique()):\n    dfIndiaMonth=grpCountry.get_group(('India',month))\n    ax[idx].plot('day','cum_deaths','--go',data=dfIndiaMonth)\n    ax[idx].set(title=\"Month {} Total Deaths {}\".format(month,dfIndiaMonth.cum_deaths.max()),xlabel='# Days',ylabel=\"# Deaths\")\nplt.subplots_adjust(wspace=.5,hspace=.5)\n#Observations : Deaths are increasing day by day since  5th April 2020\n    ","85647b49":"# Mortality rates in india\ndfIndia = df.loc[df.country == 'India', :]\nfig = plt.figure(figsize=(17, 5))\nplt.plot('daterep', 'mort_rate', 'ro--', data = dfIndia)\nplt.xlabel(\"#Day\")\nplt.ylabel(\"Mort Rate%\")\nplt.title(\"Mortality rate in India\")\nplt.grid(True)\n#Mortality rate is around 3.2 in the end of april","5649d1f4":"fig = plt.figure(figsize=(17, 15))\n\n#  Total cases\nax = plt.subplot(3, 1, 1)\nax.plot('daterep', 'cum_cases', 'go--', data=dfIndia)\nax.set(title=\"Total cases in India\", xlabel='Date', ylabel='# cases')\nplt.grid(True)\n\n#  Total deaths\nax = plt.subplot(3, 1, 2)\nax.plot('daterep', 'cum_deaths', 'yo--', data=dfIndia)\nax.set(title=\"Total deaths in India\", xlabel='Date', ylabel='# deaths')\nplt.grid(True)\n\n#  Mortality rate\nax = plt.subplot(3, 1, 3)\nax.plot('daterep', 'mort_rate', 'ro--', data=dfIndia)\nax.set(title=\"Mortality rate in India\", xlabel='Date', ylabel='Mortality rate')\nplt.grid(True)\n# Drastic change in curve of cases and deaths since second week of April 2020","1d9d8a34":"import seaborn as sns","c137a40d":"#cases everymonth continent wise\nfig=plt.figure(figsize=(17,8))\nsns.barplot(x = 'cont',\n            y = 'cases',\n            hue = 'month',      \n            estimator = np.sum,\n            ci = 65,\n            data =df)\n\n# America is most affected cont.","5378bbc2":"fig=plt.figure(figsize=(20,20))\nax=sns.relplot(x=\"month\", y=\"mort_rate\", hue=\"cont\", kind=\"line\",data=df);\nax.set( ylabel=\"Mortaility rate%\")\n#America and #Africa has highest mortality rate in April 2020","0bdb29d5":"fig=plt.figure(figsize=(8,10))\ngr=df.groupby(['month'])\nTotal_deaths_cases_month=gr.agg(Total_Death = ('deaths','sum'),Total_cases = ('cases','sum')).reset_index()\nx = np.arange(Total_deaths_cases_month.shape[0])\nTot_cases_list=Total_deaths_cases_month.Total_cases.tolist()\nTot_death_list=Total_deaths_cases_month.Total_Death.tolist()\nmonth_list=Total_deaths_cases_month.month.tolist()\nplt.bar(x,Tot_cases_list, width=0.25, label='Total cases')\nplt.bar(x+.25,Tot_death_list, width=0.25, label='Total Deaths')\nplt.xticks(ticks=x,labels=month_list)\nplt.ylabel('No of Cases')\nplt.title('Wordwide No of Deaths Vs No of Cases Comparision for each month')\nplt.legend()\nplt.grid(True)\n# Cases increased exponentially in the month of April 2020","b82e6f17":"#all country cases\nfig=plt.figure(figsize=(17,17))\ngr_country_month=df.groupby(['country','month'])\ngr_country_month_agg=gr_country_month.cases.sum().unstack()\nsns.heatmap(gr_country_month_agg, cmap = plt.cm.coolwarm)\n#United State of America is most affected Country with CO-VID 19","9fd67cb0":"import plotly.express as px\n\nimport plotly.graph_objects as go \n\ndf['month_no']=df.daterep.dt.month\ngr_cont_month=df.groupby(['country','cont','month','month_no','year'])\ndf_cont_month=gr_cont_month.agg(Total_Deaths = ('deaths','sum'),Total_cases = ('cases','sum')).reset_index()\n\n\ndf_cont_month[\"mort_rate\"]=df_cont_month.Total_Deaths\/df_cont_month.Total_cases *100\n\ndf_cont_month.loc[ ~np.isfinite(df_cont_month['mort_rate']), 'mort_rate' ] = np.nan\ndf_cont_month.fillna({'mort_rate': 0}, inplace=True)  \ndf_cont_month=df_cont_month[df_cont_month.Total_cases > 0]\ndf_cont_month[df_cont_month.mort_rate < 0]\ndf_cont_month.sort_values(by=['year','month_no'],ascending=[True,True],inplace=True)\ndf_cont_month.head()\n\nfig=px.scatter(df_cont_month,\n           x=\"Total_cases\",\n           y=\"Total_Deaths\",\n           size=\"mort_rate\",\n           size_max=60,\n           color=\"cont\",\n           hover_name=\"country\",\n           animation_frame=\"month\",\n           animation_group=\"country\",\n           log_x=True,\n           range_x=[100,100000],\n           range_y=[25,90]\n           )\nfig.layout.updatemenus[0].buttons[0].args[1][\"frame\"][\"duration\"] = 2000\nfig.show()","1ec54be3":"# Wordwide No of Deaths, No of Cases for each month","571d1c1c":"# Analysis of deaths for every month for India","17b15d75":"# Continent vs month","20cff378":"# Author:Rohini Garg","1dd5cc10":"# Combined graph","84643dd5":"# Mortality rate of India","c2e35d2c":"# Analysis of cases every month for Afganistaan","7980f376":"# Relation between Mortality rate,Total deaths & cases","d08d92fe":"# Mortality rate of Continent vs month"}}