{"cell_type":{"c67e8996":"code","6b938169":"code","b3071019":"code","d28a8843":"code","0c2b6f89":"code","471fc450":"code","425de360":"code","01767312":"code","1b9b20a0":"code","ef6aa8cc":"code","6eb813b8":"code","7bafe905":"code","251b20ac":"code","69fc47d8":"code","5d633b62":"code","6f421339":"code","4468c1c3":"code","a1b55517":"code","04ba6569":"code","69d79998":"code","5c687548":"code","0281240c":"code","f9ab2872":"code","a2ca99e5":"code","65be4f02":"code","499923d1":"code","8b34e190":"code","30aefa27":"code","50b6be9e":"code","82c38703":"code","31b9b98d":"code","7af93f72":"code","05b23200":"code","ca87e94b":"code","1224da6d":"code","a025d3e6":"code","293fd0b4":"code","aada6884":"code","9fa3258a":"code","22a65bea":"code","8f87ff40":"markdown","9ae37895":"markdown","d3164f0c":"markdown","9f5edc82":"markdown","58513d1d":"markdown","18ce6f87":"markdown","bd7df1a4":"markdown","8aa5ddb0":"markdown","f123b29b":"markdown","b805d4dc":"markdown","87bfd910":"markdown","8784f212":"markdown","3e748dc3":"markdown","43a71c45":"markdown","d3a65d3d":"markdown","9455d209":"markdown","4c9818a6":"markdown","b17c9950":"markdown","1576ef13":"markdown","762c27fd":"markdown","b04e5792":"markdown","e29b40a4":"markdown","b1370449":"markdown","2874462d":"markdown","b197c26f":"markdown","6d839153":"markdown","d71e3c40":"markdown","b54de3ed":"markdown","a0cf0667":"markdown","4eee222b":"markdown","3372aba8":"markdown","b002f641":"markdown","f9fd763f":"markdown","124bf1b9":"markdown","a287a186":"markdown","28a8a126":"markdown","8b9c4871":"markdown","5e385ef0":"markdown","534c5635":"markdown","e274ffeb":"markdown"},"source":{"c67e8996":"import pandas as pd\nimport numpy as np\nimport datetime\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\nfrom matplotlib import cm","6b938169":"path = '..\/input\/solar-power-generation-data'\n\nplant1_generation = pd.read_csv(f'{path}\/Plant_1_Generation_Data.csv')\nplant1_sensor = pd.read_csv(f'{path}\/Plant_1_Weather_Sensor_Data.csv')\nplant2_generation = pd.read_csv(f'{path}\/Plant_2_Generation_Data.csv')\nplant2_sensor = pd.read_csv(f'{path}\/Plant_2_Weather_Sensor_Data.csv')","b3071019":"plant1_generation.head()","d28a8843":"plant2_generation.head()","0c2b6f89":"plant1_sensor.head()","471fc450":"plant2_sensor.head()","425de360":"plant1_generation.describe()","01767312":"plant2_generation.describe()","1b9b20a0":"plant1_sensor.describe()","ef6aa8cc":"plant2_sensor.describe()","6eb813b8":"print(plant1_generation.isna().sum())\nprint(plant1_sensor.isna().sum())\nprint(plant2_generation.isna().sum())\nprint(plant2_sensor.isna().sum())","7bafe905":"# Do some feature engineering for the sake of analysis\nplant1_generation['DATE_TIME'] = pd.to_datetime(plant1_generation['DATE_TIME'], format='%d-%m-%Y %H:%M') #Caution! The format is completely different. Format must be provided. Or you'll get mistaken data\nplant1_sensor['DATE_TIME'] = pd.to_datetime(plant1_sensor['DATE_TIME'])\nplant2_generation['DATE_TIME'] = pd.to_datetime(plant2_generation['DATE_TIME'])\nplant2_sensor['DATE_TIME'] = pd.to_datetime(plant2_sensor['DATE_TIME'])\n\nplant1_generation['DATE'] = plant1_generation['DATE_TIME'].dt.date\nplant1_sensor['DATE'] = plant1_sensor['DATE_TIME'].dt.date\nplant2_generation['DATE'] = plant2_generation['DATE_TIME'].dt.date\nplant2_sensor['DATE'] = plant2_sensor['DATE_TIME'].dt.date","251b20ac":"def print_time_frame(data, label):\n    print(f\"{label}  -  start:{data['DATE_TIME'].min()}   end:{data['DATE_TIME'].max()}\")\n\nprint_time_frame(plant1_generation, 'Plant1 ')\nprint_time_frame(plant2_generation, 'Plant2 ')\nprint_time_frame(plant1_sensor, 'Sensor1')\nprint_time_frame(plant2_sensor, 'Sensor2')","69fc47d8":"daily_yield_for_each_plant = plant1_generation.sort_values(['SOURCE_KEY', 'DATE_TIME', 'DAILY_YIELD']).drop_duplicates(['SOURCE_KEY', 'DATE'], keep='last')\nmean_daily_yield1 = daily_yield_for_each_plant['DAILY_YIELD'].mean()\n\ndaily_yield_for_each_plant = plant2_generation.sort_values(['SOURCE_KEY', 'DATE_TIME', 'DAILY_YIELD']).drop_duplicates(['SOURCE_KEY', 'DATE'], keep='last')\nmean_daily_yield2 = daily_yield_for_each_plant['DAILY_YIELD'].mean()\n\nprint(f'Daily yield mean of each plants - plant1: {mean_daily_yield1}  plant2: {mean_daily_yield2}')","5d633b62":"def show_ranking_of_inverter_daily_yield_mean(data, label=''):\n    data = data.sort_values(['SOURCE_KEY', 'DATE_TIME', 'DAILY_YIELD']).drop_duplicates(['SOURCE_KEY', 'DATE'], keep='last')\n\n    sources = pd.DataFrame()\n\n    for source_key in data['SOURCE_KEY'].unique():\n        daily_yield_mean = data[data['SOURCE_KEY'] == source_key]['DAILY_YIELD'].mean()\n        sources = sources.append({'SOURCE_KEY':source_key, 'DAILY_YIELD_MEAN': daily_yield_mean}, ignore_index=True)\n        \n    print(f' {label} - Ranking of daily yield for each sources')\n    print(sources.sort_values(['DAILY_YIELD_MEAN'], ascending=False).reset_index(drop=True))\n    \n    return sources","6f421339":"daily_yield_mean1 = show_ranking_of_inverter_daily_yield_mean(plant1_generation, 'Plant1')\nprint('')\ndaily_yield_mean2 = show_ranking_of_inverter_daily_yield_mean(plant2_generation, 'Plant2')","4468c1c3":"beginning_of_total_yield_plant1 = plant1_generation.sort_values(['SOURCE_KEY', 'DATE_TIME']).drop_duplicates('SOURCE_KEY', keep='first')[['SOURCE_KEY', 'TOTAL_YIELD']].sort_values('TOTAL_YIELD', ascending=False)\nbeginning_of_total_yield_plant2 = plant2_generation.sort_values(['SOURCE_KEY', 'DATE_TIME']).drop_duplicates('SOURCE_KEY', keep='first')[['SOURCE_KEY', 'TOTAL_YIELD']].sort_values('TOTAL_YIELD', ascending=False)\n\nprint('-- The initial values of TOTAL_YIELD at plant 1')\nprint(beginning_of_total_yield_plant1)\n\nprint('')\nprint('-- The initial values of TOTAL_YIELD at plant 2')\nprint(beginning_of_total_yield_plant2)","a1b55517":"plant1_generation = plant1_generation.merge(beginning_of_total_yield_plant1, on='SOURCE_KEY', how='left', suffixes=['', '_init'])\nplant1_generation['TOTAL_YIELD'] -= plant1_generation['TOTAL_YIELD_init']\n\nplant2_generation = plant2_generation.merge(beginning_of_total_yield_plant2, on='SOURCE_KEY', how='left', suffixes=['', '_init'])\nplant2_generation['TOTAL_YIELD'] -= plant2_generation['TOTAL_YIELD_init']","04ba6569":"def show_ranking_of_inverter_total_yield(data, label=''):\n    pd.options.display.float_format = '{:.0f}'.format\n    tmp = data.groupby(['SOURCE_KEY']).agg({'TOTAL_YIELD':'max'}).reset_index().sort_values(['TOTAL_YIELD'], ascending=False).reset_index(drop=True)\n    print(tmp)\n    \n    return tmp    ","69d79998":"def show_ranking_total_yield():\n    print('ranking of TOTAL_YIELD - plant 1')\n    total_yield1 = show_ranking_of_inverter_total_yield(plant1_generation)\n    print('')\n    print('ranking of TOTAL_YIELD - plant 2')\n    total_yield2 = show_ranking_of_inverter_total_yield(plant2_generation)\n    \n    return total_yield1, total_yield2\n    \ntotal_yield1, total_yield2 = show_ranking_total_yield()","5c687548":"tmp = daily_yield_mean1.merge(total_yield1, on='SOURCE_KEY', how='left')\ntmp = tmp.merge(beginning_of_total_yield_plant1, on='SOURCE_KEY', how='left', suffixes=['_init', '_all']).sort_values('TOTAL_YIELD_init', ascending=False).reset_index(drop=True)\nprint(tmp)\n\nprint('')\ntmp = daily_yield_mean2.merge(total_yield2, on='SOURCE_KEY', how='left')\ntmp = tmp.merge(beginning_of_total_yield_plant2, on='SOURCE_KEY', how='left', suffixes=['_init', '_all']).sort_values('TOTAL_YIELD_init', ascending=False).reset_index(drop=True)\nprint(tmp)","0281240c":"print(f\"Numbers of sensors at plant1 : {len(plant1_sensor['SOURCE_KEY'].unique())}\")\nprint(f\"Numbers of sensors at plant2 : {len(plant2_sensor['SOURCE_KEY'].unique())}\")","f9ab2872":"def show_cum_dc_ac(data, ax, label):\n    data = data.groupby('DATE_TIME').sum().reset_index()\n    data['TIME'] = data['DATE_TIME'].dt.time\n    data.plot(x='TIME', y=['AC_POWER', 'DC_POWER'], style='o', ax=ax)\n    ax.set_title(label)","a2ca99e5":"fig, ax = plt.subplots(ncols=3, nrows=1, figsize=(24,6))\nshow_cum_dc_ac(plant1_generation, ax[0], 'Fig1. AC vs DC at Plant 1')\nshow_cum_dc_ac(plant2_generation, ax[1], 'Fig2. AC vs DC at Plant 2')\n\ntmp = plant1_generation.copy()\ntmp['DC_POWER'] \/= 10\nshow_cum_dc_ac(tmp, ax[2], 'Fig3. AC vs DC at Plant 1, DC divided by 10')","65be4f02":"def conv_rate(data):\n    tmp = data.sum()\n    return round(tmp['AC_POWER'] \/ tmp['DC_POWER'] * 100, 2)","499923d1":"print(\"Conversion rate of DC to AC\")\nprint(f\"{conv_rate(plant1_generation)}% : Plant1\")\nprint(f\"{conv_rate(plant2_generation)}% : Plant2\")\n\ntmp = plant1_generation.copy()\ntmp['DC_POWER'] \/= 10\nprint(f\"{conv_rate(tmp)}% : Plant1 DC divided by 10\")","8b34e190":"plant1_generation['DC_POWER'] \/= 10","30aefa27":"def rate(data, target):\n    return len(data[data[target]==0]) \/ len(data) * 100\n\nprint('The percentage of zeros of DC, AC power')\nprint(f\"{rate(plant1_generation, 'DC_POWER')}%: DC POWER at plant1\")\nprint(f\"{rate(plant2_generation, 'DC_POWER')}%: DC POWER at plant2\")\nprint(f\"{rate(plant1_generation, 'AC_POWER')}%: AC POWER at plant1\")\nprint(f\"{rate(plant2_generation, 'AC_POWER')}%: AC POWER at plant2\")","50b6be9e":"print('The percentage of zeros of irradiation')\nprint(f\"{rate(plant1_sensor, 'IRRADIATION')}%: Plant 1\")\nprint(f\"{rate(plant2_sensor, 'IRRADIATION')}%: Plant 2\")\n","82c38703":"chars = ['--', '-.', ':', '-o', '-v', '-s']\ndef show_power_transition(data, fr, target, ax, step=6):\n    data = data.groupby(['SOURCE_KEY', 'DATE']).agg({'DC_POWER':'sum', 'AC_POWER':'sum'}).reset_index()\n    for i, source_key in enumerate(data['SOURCE_KEY'].unique()[fr:fr+step]):\n        tmp = data[data['SOURCE_KEY'] == source_key]\n        ax.plot(tmp['DATE'], tmp[target], chars[i], label=source_key)\n    ax.legend()","31b9b98d":"fig, ax = plt.subplots(ncols=1, nrows=4, figsize=(32,20))\n\ndata = plant1_generation\nlabel = 'DC_POWER'\nshow_power_transition(data, 0, label, ax[0])\nshow_power_transition(data, 6, label, ax[1])\nshow_power_transition(data, 12, label, ax[2])\nshow_power_transition(data, 18, label, ax[3])","7af93f72":"fig, ax = plt.subplots(ncols=1, nrows=4, figsize=(32,20))\n\ndata = plant2_generation\nlabel = 'DC_POWER'\nshow_power_transition(data, 0, label, ax[0])\nshow_power_transition(data, 6, label, ax[1])\nshow_power_transition(data, 12, label, ax[2])\nshow_power_transition(data, 18, label, ax[3])","05b23200":"fig, ax = plt.subplots(ncols=1, nrows=5, figsize=(32,30))\n\ndata = plant2_generation\nlabel = 'DC_POWER'\n\n\ntmp = data[data['SOURCE_KEY'].isin(['PeE6FRyGXUgsRhN','V94E5Ben1TlhnDV','oZZkBaNadn6DNKz','xoJJ8DcxJEcupym'])]\nshow_power_transition(tmp, 0, 'DC_POWER', ax[0])\n\ntmp = data[data['SOURCE_KEY'].isin(['Et9kgGMDl729KT4','LYwnQax7tkwH5Cb', 'Quc1TzYxW2pYoWX','rrq4fwE8jgrTyWY','q49J1IKaHRwDQnt'])]\nshow_power_transition(tmp, 0, 'DC_POWER', ax[1])\n\ntmp = data[data['SOURCE_KEY'].isin(['81aHJ1q11NBPMrL','9kRcWv60rDACzjR','LlT2YUhhzqhg5Sw','WcxssY2VbP4hApt','vOuJvMaM2sgwLmb'])]\nshow_power_transition(tmp, 0, 'DC_POWER', ax[2])\n\ntmp = data[data['SOURCE_KEY'].isin(['4UPUqMRk7TRMgml','Mx2yZCDsyf6DPfv', 'Qf4GUc1pJu5T6c6','oZ35aAeoifZaQzV'])]\nshow_power_transition(tmp, 0, 'DC_POWER', ax[3])\n\ntmp = data[data['SOURCE_KEY'].isin(['IQ2d7wF4YD8zU1Q','NgDl19wMapZy17u','mqwcsP2rE7J0TFp', 'xMbIugepa2P7lBB'])]\nshow_power_transition(tmp, 0, 'DC_POWER', ax[4])","ca87e94b":"all_inverters = set(plant2_generation['SOURCE_KEY'].unique())\ntmp = plant2_generation[(datetime.date(2020, 5, 21) <= plant2_generation['DATE']) & (plant2_generation['DATE'] <= datetime.date(2020, 5, 28))]\n\nprint(\"The following inverters don't have any data between May 21 to 28\")\nprint(all_inverters - set(tmp['SOURCE_KEY'].unique()))","1224da6d":"tmp1 = plant1_generation[~((datetime.date(2020, 5, 20) <= plant1_generation['DATE']) & (plant1_generation['DATE'] <= datetime.date(2020, 5, 29)))]\ntmp2 = plant2_generation[~((datetime.date(2020, 5, 20) <= plant2_generation['DATE']) & (plant2_generation['DATE'] <= datetime.date(2020, 5, 29)))]\n\nprint('The percentage of zeros of DC, AC power')\nprint(f\"{rate(tmp1, 'DC_POWER')}%: DC POWER at plant1\")\nprint(f\"{rate(tmp2, 'DC_POWER')}%: DC POWER at plant2\")\nprint(f\"{rate(tmp1, 'AC_POWER')}%: AC POWER at plant1\")\nprint(f\"{rate(tmp2, 'AC_POWER')}%: AC POWER at plant2\")","a025d3e6":"_ = show_ranking_total_yield()","293fd0b4":"fig, ax = plt.subplots(ncols=1, nrows=6, figsize=(100,22))\n\ndef show_comparison(data, data2, inverter_id, label, ax):\n    tmp = data[data['SOURCE_KEY']==inverter_id].merge(data2, on='DATE_TIME', how='left')\n    ax.plot(tmp['DATE_TIME'], tmp['DC_POWER'], label=label)\n    ax.legend()\n\nshow_comparison(plant2_generation, plant2_sensor, 'Mx2yZCDsyf6DPfv', 'Mx2yZCDsyf6DPfv (Better', ax[0])\nshow_comparison(plant2_generation, plant2_sensor, 'Quc1TzYxW2pYoWX', 'Quc1TzYxW2pYoWX (Worst1', ax[0])\n\nshow_comparison(plant2_generation, plant2_sensor, 'Mx2yZCDsyf6DPfv', 'Mx2yZCDsyf6DPfv (Better', ax[1])\nshow_comparison(plant2_generation, plant2_sensor, 'Et9kgGMDl729KT4', 'Et9kgGMDl729KT4 (Worst2', ax[1])\n\nshow_comparison(plant2_generation, plant2_sensor, 'Mx2yZCDsyf6DPfv', 'Mx2yZCDsyf6DPfv (Better', ax[2])\nshow_comparison(plant2_generation, plant2_sensor, 'LYwnQax7tkwH5Cb', 'LYwnQax7tkwH5Cb (Worst3', ax[2])\n\nshow_comparison(plant2_generation, plant2_sensor, 'Mx2yZCDsyf6DPfv', 'Mx2yZCDsyf6DPfv (Better', ax[3])\nshow_comparison(plant2_generation, plant2_sensor, 'rrq4fwE8jgrTyWY', 'rrq4fwE8jgrTyWY (Worst3', ax[3])\n\nshow_comparison(plant2_generation, plant2_sensor, 'Mx2yZCDsyf6DPfv', 'Mx2yZCDsyf6DPfv (Better', ax[4])\nshow_comparison(plant2_generation, plant2_sensor, 'xoJJ8DcxJEcupym', 'xoJJ8DcxJEcupym (Worst4', ax[4])\n\nshow_comparison(plant2_generation, plant2_sensor, 'Mx2yZCDsyf6DPfv', 'Mx2yZCDsyf6DPfv (Better', ax[5])\nshow_comparison(plant2_generation, plant2_sensor, 'LlT2YUhhzqhg5Sw', 'LlT2YUhhzqhg5Sw (Worst5', ax[5])","aada6884":"def show_iverter_to_environment(data, inverter_id, target, ax1, ax2):\n    tmp = data[data['SOURCE_KEY']==inverter_id].merge(plant2_sensor, on='DATE_TIME', how='left')\n\n    c1 = cm.Set1.colors[1]\n    c2 = cm.Set1.colors[0]\n    \n    ax1.plot(tmp['DATE_TIME'], tmp['DC_POWER'], label='DC_POWER', color=c1)\n    ax2.plot(tmp['DATE_TIME'], tmp[target], label=target, color=c2)\n\n    ax1.tick_params(axis='y', colors=c1)\n    ax2.tick_params(axis='y', colors=c2)\n    \n    handler1, label1 = ax1.get_legend_handles_labels()\n    handler2, label2 = ax2.get_legend_handles_labels()\n    ax1.legend(handler1 + handler2, label1 + label2, loc=2, borderaxespad=0.)\n\nfig, ax1 = plt.subplots(ncols=1, nrows=3, figsize=(100,12))\n\nax2 = ax1[0].twinx()\nshow_iverter_to_environment(plant2_generation, 'Quc1TzYxW2pYoWX', 'MODULE_TEMPERATURE', ax1[0], ax2)\nax2 = ax1[1].twinx()\nshow_iverter_to_environment(plant2_generation, 'Quc1TzYxW2pYoWX', 'IRRADIATION', ax1[1], ax2)\nax2 = ax1[2].twinx()\nshow_iverter_to_environment(plant2_generation, 'Quc1TzYxW2pYoWX', 'AMBIENT_TEMPERATURE', ax1[2], ax2)","9fa3258a":"fig, ax = plt.subplots(ncols=1, nrows=2, figsize=(100,8))\n\nshow_comparison(plant1_generation, plant1_sensor, 'adLQvlD726eNBSB', 'adLQvlD726eNBSB (Best', ax[0])\nshow_comparison(plant1_generation, plant1_sensor, 'bvBOhCH3iADSZry', 'bvBOhCH3iADSZry (Worst1', ax[0])\n\nshow_comparison(plant1_generation, plant1_sensor, 'adLQvlD726eNBSB', 'adLQvlD726eNBSB (Best', ax[1])\nshow_comparison(plant1_generation, plant1_sensor, '1BY6WEcLGh8j5v7', '1BY6WEcLGh8j5v7 (Worst2', ax[1])","22a65bea":"fig, ax1 = plt.subplots(ncols=1, nrows=3, figsize=(100,12))\n\nid = '1BY6WEcLGh8j5v7'\n\nax2 = ax1[0].twinx()\nshow_iverter_to_environment(plant1_generation, id, 'MODULE_TEMPERATURE', ax1[0], ax2)\nax2 = ax1[1].twinx()\nshow_iverter_to_environment(plant1_generation, id, 'IRRADIATION', ax1[1], ax2)\nax2 = ax1[2].twinx()\nshow_iverter_to_environment(plant1_generation, id, 'AMBIENT_TEMPERATURE', ax1[2], ax2)","8f87ff40":"##### The answer for this question\nThese underperforming inverters stop working in the middle of days time to time.<br>\nIt can be because of module temperature but we are not sure of it.","9ae37895":"## We've got new questions\n\n1. At plant 1, why these 2 inverters underperforming? Especially June 14.\n1. At plant 2, why there are 4 inverters which don't have any data between 21 to 28? (Is it even possible to find some answer?\n\nLet's try answering them later.","d3164f0c":"## Let's visualize them\nAs we found some facts and many questions, we can visualize the data so we might have good ideas to answere these questions.","9f5edc82":"##### The answer for this question\n\n**It remains mistery for now... let's get back here later.**","58513d1d":"### Q:Plant 2 looks far too good in yielding power considering its DC and AC power\n*Even plant 2 yields less DC and AC power, plant 2 has far better TOTAL_YIELD even 2 digits. Why?*\n\nWe already know the answer for this.<br>\nTOTAL_YIELD is cumulative sum of the power since the beginning.<br>\nHence TOTAL_YIELD for each inverters are similar now.<br>\nWe see there are some outliers like \"Quc1TzYxW2pYoWX\", we are going to investigate them later.","18ce6f87":"Some of them are pretty similar! Maybe they are located at the same place. ","bd7df1a4":"If there's no irradiation, the power of DC and AC might be zero as well, right? So let's see the percentage of zeros of irradiation.","8aa5ddb0":"We don't want to see nulls in the dataset.","f123b29b":"## Sensors","b805d4dc":"### Q:Looks like there are some underperfoming inverters. Why?\nOkay, now it's time to go to the next one.\n\n*When we see the inverter ranking, it is clear that there are huge gap in TOTAL_YIELD_init between the best one and the bottom one. Considring TOTAL_YIELD_all, these underperforming inverters are not always old. So what's the reasons?*\n","87bfd910":"Even there's irradiation, as we assumed, it stopped working in the middle of days. <br>\nIt usually happens when MODULE_TEMPERATURE is high but not always. <br>\nI think we need domain knowledge to dig this part.<br>","8784f212":"For safety, let's confirm that there are only one sensors installed at each plants.","3e748dc3":"So basically the inverter performs well as the best performing one.<br>\nBut on June 7 and June 14, we can see it stopped working for a while in the middle of the day.<br>\nAnd it happened to both of them at the same time! It's weird. There must be some reason. <br>","43a71c45":"Now, we can rank TOTAL_YIELD in the time frame we got. ","d3a65d3d":"As TOTAL_YIELD is not starting from zero, we can assume that TOTAL_YIELD has been accumulated since the inverters are installed. <br>","9455d209":"Okay, so far so good. \n\n### Obvious findings\n\n1. Datetime in generation data for plant 1 has different form. It have to be taken care of. \n1. No nulls are found. Great.\n\n\n### Questions that we should find answeres\n\n1. The ratio of DC power and AC power looks different between plant1 to plant2. At plant1, DC is much higher than AC. At plant2, these two are almost the same. We don't know what is going on here for now.\n1. As concern as DC power and AC power, 50% of plant 2 data has 0, which means it is not working for some reason. What's the reasons? And why plant 2 yields less DC and AC power?\n1. Even plant 2 yields less DC and AC power, plant 2 has far better TOTAL_YIELD even 2 digits. Why?","4c9818a6":"As we can know from the data description, DAILY_YIELD is a comulative sum of power generated on that day. <br>\nIf we want to know the conclusive generated power for a day, we have to see the last record of each day. ","b17c9950":"Let's visualize the transition of DC yields.","1576ef13":"### Q:There are 2 underperforming inverters at plant 1\n\n*At plant 1, why these 2 inverters underperforming? Especially June 14.*\n\nLet's make some graphs.","762c27fd":"Now we got some interesting findings.\n\n1. At plant 1, there are 2 faulty inverters found. These ids are 'lBY6WEcLGh8j5v7' and 'bvBOhCH3iADSZry'.\n1. At plant 2, there are 8 days of missing data in 4 inverters. These ids are 'IQ2d7wF4YD8zU1Q', 'mqwcsP2rE7J0TFp', 'xMbIugepa2P7lBB' and 'NgDl19wMapZy17u'.\n\nSo at plant 2, some data is missing. Is that's why plant 2 has more zeros ratio? Let's see it from different perspective.","b04e5792":"# Data Exploration\n## Have take a look\nFor the starter, take a look at the each data.","e29b40a4":"We should see the relation of plant data and sensor data as well, but it should be easier to see it using graphs. We can analyze it a bit later.","b1370449":"## We've got another question here\n\n1. The best 4 performing inverters at plant 2, these 4 inverters completely matchs with the converters which don't have 8 days of data. These are 'mqwcsP2rE7J0TFp', 'IQ2d7wF4YD8zU1Q', 'NgDl19wMapZy17u', 'xMbIugepa2P7lBB'. Is this just a coincidence?","2874462d":"In this notebook, we are going to try finding some facts of solar power plants in India from the dataset. <br>\nFrom this 13 columns of data for 2 solar power plants, we can get surprisingly huge amount of information. <br>\n<br>\nSo let's begin finding some interesting fact. ","b197c26f":"# Take a closer look...\n\nWe should check the timespan of the data for each plants and sensors. If the time frame was different, we have to consider about it.","6d839153":"Interestingly, the percentage of DC vs AC are completely the same. <br>\nNow I get a hypothesis, is it happening because of the weather? <br>\nAs of mentioned in [this discussion](https:\/\/www.kaggle.com\/anikannal\/solar-power-generation-data\/discussion\/185351), these two plants are located far, over 500km. \nLet's visualize the some sensor data.","d71e3c40":"### Q:Huge difference of DC power at plant 1 between plant 2\nLet's try answering the next question.\n\n*The ratio of DC power and AC power looks different between plant1 to plant2. At plant1, DC is much higher than AC. At plant2, these two are almost the same.*\n\nTo do this, we're visualizing the relationship of DC and AC for each plants. \nWe're plotting DC and AC in the same frame, grouping all the data with TIME. ","b54de3ed":"##### The answer for this question\n\nNow it's clear that at plant 1, AC and DC has huge gap. <br>\nInteresting thing is, if we divide DC by 10 at plant 1, now it looks pretty similar to plant 2.<br>\n\nI think we can make assumptions why there's this huge gap.\n1. If we believe the description of DC_POWER and AC_POWER on [Data](https:\/\/www.kaggle.com\/anikannal\/solar-power-generation-data) page, the units of these values are kW. Which means inverters at plant 1 is super ineffective. The efficiency is only 9.78%. \n1. If we can have doubt in the description, the data itself can be faulty. \n\nI take the second assumption. The reasons are follows.\n1. It is unlikely that the conversion rate is this low. Usually the conversion rate should be over 80%. \n1. If 90% of the power was lost, where did the power go? If there's no facilities using DC around the area, it just goes to heat. If it was right, the solar panels can be seriously damaged. \n\nAccording to the assumption, we are going to take the DC power of plant 1 as divided by 10.","a0cf0667":"Let's combine the results into a table.","4eee222b":"Then, it's not the case. Plant 2 has less irradiation. We don't see any correlation.\n\nHow about taking a look at DC, AC power of each inverters in each day? If some inverter at plant 1 didn't work, it can happen. <br>\nLet's make some graphs.<br>\n\n*I show only DC power transition. Because AC shows pretty similar transition with DC.*","3372aba8":"We can see the huge gap between inverters.<br>\nTo set the start line, we will subtract the result from TOTAL_YIELD.<br>\nNow TOTAL_YIELD means, cumulative sum of power in this time frame.","b002f641":"We've got some other findings and questions.\n\n### Findings\n\n1. Time frame is fixed. It is safe that using DATE_TIME as axis without special care. \n1. Each plants has only 1 sensor. Because each sensors has only 1 SOURCE_KEY. \n1. We have same number of inverters for each plants. Which is 22.\n1. Plant 2 has significantly large amount of TOTAL_YIELD, we can assume that plant 2 has established far earlier than plant 1. Also at plant 2, we can see huge gap between the top inverter and the bottom inverter. It seems some inverters running long, and some are installed lately. On the other hand, at plant 1, most inverters yield similar amount of TOTAL_YIELD. It seems that most of or all of the inverters are installed at the same time. \n1. Seeing the TOTAL_YIELD ranking, almost all the inverters perform similar at plant 1. Contrary at plant 2, some inverters look underperform significantly.\n\n### Questions that we should find answers\n\n1. When we see the inverter ranking, it is clear that there are huge gap in TOTAL_YIELD_init between the best one and the bottom one. Considring TOTAL_YIELD_all, these underperforming inverters are not always old. So what's the reasons?","f9fd763f":"##### The answer for this question\n\nWe don't know the exact reason but these two inverters stop working during the day time.<br>\nBasically these two inverters perform well as others, but because of the halt, they yield less power. ","124bf1b9":"### Q:It looks plant 2 is working less. \nLet\u2019s get to the next one.\n\n*As concern as DC power and AC power, 50% of plant 2 has 0, which means it is not working for some reason. What's the reasons? And why plant 2 yields less DC and AC power?*\n\nTo make the observation clearer, let's calculate the percentage of zeros. ","a287a186":"Now we want to see the DC to AC conversion rate of each plants.","28a8a126":"## Plants","8b9c4871":"Let's see the ranking of the mean of DAILY_YIELD, the best performing inverter for each plants.","5e385ef0":"## to be continued...\n\nI'm gonna add a bit more.","534c5635":"I feel that there are some similar patterns between inverters. Let's classify them manually.","e274ffeb":"We can see that they don't yield any power in the middle of days time to time!<br>\nAnd we found some data is missing as well. <br>\nSo why it is happening? Let's dig it deeper."}}