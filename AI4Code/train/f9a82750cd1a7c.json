{"cell_type":{"92740359":"code","57b4b61b":"code","d3249d3e":"code","e0c41d7a":"code","9ead534e":"code","e2e47b2b":"code","dcd988aa":"code","7743d239":"code","5c3e3654":"code","8c143442":"code","75f518e6":"code","36d4ac18":"code","a0678acd":"code","a0bfe14e":"code","b7e38a99":"code","087e6008":"code","f0825b32":"markdown","87cbd65d":"markdown","b1c950dc":"markdown","934dc8c1":"markdown"},"source":{"92740359":"import numpy as np\nfrom tensorflow import keras\nimport pickle\nimport matplotlib.pyplot as plt","57b4b61b":"f = open('..\/input\/zero-accuracy-character-recognition-dataset\/TrainX.m','rb')\nDataX = pickle.load(f)\nf.close()\n\nf = open('..\/input\/zero-accuracy-character-recognition-dataset\/TrainY.m','rb')\nDataY = pickle.load(f)\nf.close()","d3249d3e":"print(np.unique(DataY))\nprint(len(np.unique(DataY)))","e0c41d7a":"plt.hist(DataY,bins=29)\nplt.show()","9ead534e":"plt.imshow(DataX[100])\nplt.show()\nprint(DataY[100])","e2e47b2b":"plt.imshow(DataX[1100])\nplt.show()\nprint(DataY[1100])","dcd988aa":"mnv2 = keras.applications.MobileNetV2(input_shape=(224,224,3),include_top=True,classes=29,weights=None)","7743d239":"opt = keras.optimizers.Adam(learning_rate=0.001)\nmnv2.compile(optimizer=opt,loss='sparse_categorical_crossentropy',metrics=['accuracy'])","5c3e3654":"mnv2.fit(DataX,DataY,epochs=2,validation_split=0.15)","8c143442":"mnv2.evaluate(DataX,DataY)","75f518e6":"mnv2 = keras.applications.MobileNetV2(input_shape=(224,224,3),include_top=False,weights=None)","36d4ac18":"X = keras.layers.Flatten()(mnv2.output)\nX = keras.layers.Dense(1024,activation='relu')(X)\nX = keras.layers.BatchNormalization()(X)\nX = keras.layers.Dense(1024,activation='relu')(X)\nX = keras.layers.BatchNormalization()(X)\nX = keras.layers.Dense(30, activation = 'softmax')(X)\n\nmodel = keras.models.Model(inputs=mnv2.input,outputs=X)\n\nopt = keras.optimizers.Adam(learning_rate=0.001)\nmodel.compile(optimizer=opt,loss='sparse_categorical_crossentropy',metrics=['accuracy'])","a0678acd":"# model.train(DataX,DataY)","a0bfe14e":"# model.evaluate(DataX,DataY)","b7e38a99":"model.load_weights('..\/input\/zero-accuracy-character-recognition-dataset\/weights.h5')","087e6008":"print('Accuracy and loss with pre-trained weight')\nmodel.evaluate(DataX,DataY)","f0825b32":"With the pre-trained wights, on the same dataset, we get the accuracy correct. But i don't know why it is not working now. On this training i had a redundant class, so i removed it. But it's the same dataset. As you can see here.","87cbd65d":"# Pre-trained weight on 30 classes and a little different model","b1c950dc":"As you can see, the training accuracy is fine. but validation accuracy is zero. Even the train set accuracy is zero after training. Help us out, what is wrong with it.","934dc8c1":"# Zero accuracy"}}