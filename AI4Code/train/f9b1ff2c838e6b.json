{"cell_type":{"ed46d344":"code","96ab64f6":"code","27fcffa6":"code","570419be":"code","0daaaf9c":"code","509a1a78":"markdown"},"source":{"ed46d344":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","96ab64f6":"df=pd.read_csv('\/kaggle\/input\/covid19-period-airtraffic-dataset\/flightlist_20190101_20190131.csv')\ndf.head()","27fcffa6":"df.shape","570419be":"df.info()","0daaaf9c":"import matplotlib.pyplot as plt\nimport seaborn as sns","509a1a78":"# About the dataset \nThis dataset is derived and cleaned from the full OpenSky dataset to illustrate the development of air traffic during the COVID-19 pandemic. It spans all flights seen by the network's more than 2500 members \n\n1. callsign: the identifier of the flight displayed on ATC screens (usually the first three letters are reserved for an airline: AFR for Air France, DLH for Lufthansa, etc.)\n2. number: the commercial number of the flight, when available (the matching with the callsign comes from public open API)\n3. aircraft_uid: a unique anonymised identifier for aircraft;\n4. typecode: the aircraft model type (when available);\n5. origin: a four letter code for the origin airport of the flight (when available);\n6. destination: a four letter code for the destination airport of the flight (when available);\n7. firstseen: the UTC timestamp of the first message received by the OpenSky Network;\n8. lastseen: the UTC timestamp of the last message received by the OpenSky Network;\n9. day: the UTC day of the last message received by the OpenSky Network;\n10. latitude_1, longitude_1, altitude_1: the first detected position of the aircraft;\n11. latitude_2, longitude_2, altitude_2: the last detected position of the aircraft."}}