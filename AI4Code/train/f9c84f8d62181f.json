{"cell_type":{"844c0fbe":"code","c8d942b8":"code","7170eac2":"code","994b0250":"code","ebda818c":"code","f7a0736f":"code","fbd44820":"code","5639eba4":"code","bc66f53b":"code","f2690b8c":"code","17723960":"code","7adcfbc5":"code","f4437f22":"code","e91f5799":"markdown","6dd519ef":"markdown","3f972a07":"markdown","84298355":"markdown","27b87ff3":"markdown"},"source":{"844c0fbe":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c8d942b8":"import numpy as np\nimport pandas as pd\nfrom sklearn.datasets import load_breast_cancer","7170eac2":"# Breast cancer dataset for classification\ncancer = load_breast_cancer()\n\nprint('Keys:\\n\\n', cancer.keys())\nprint('\\n--------------------------------------------------------------------------------------------------------------')\nprint ('\\n\\nFeature Names:\\n\\n', cancer.feature_names)\nprint('\\n--------------------------------------------------------------------------------------------------------------')\nprint ('\\n\\nTarget Names:\\n\\n', cancer.target_names)\nprint('\\n--------------------------------------------------------------------------------------------------------------')\nprint('\\n\\nData:', cancer.target)\nprint('\\n--------------------------------------------------------------------------------------------------------------')\nprint('\\n\\nDESCR:', cancer.DESCR)\nprint('\\n--------------------------------------------------------------------------------------------------------------')\nprint('\\n\\nfilename:', cancer.filename)\nprint('\\n--------------------------------------------------------------------------------------------------------------')","994b0250":"data = pd.DataFrame(cancer.data, columns=[cancer.feature_names])\ndata['Target'] = pd.Series(data=cancer.target, index=data.index)","ebda818c":"print (data.keys())\nprint (data.shape)","f7a0736f":"data.head()","fbd44820":"data['Target'].value_counts()","5639eba4":"pip install evalml","bc66f53b":"import evalml\n\nX, y = evalml.demos.load_breast_cancer()\nX_train, X_test, y_train, y_test = evalml.preprocessing.split_data(X, y, problem_type='binary')","f2690b8c":"from evalml.automl import AutoMLSearch\nautoml = AutoMLSearch(X_train=X_train, y_train=y_train, problem_type='binary')\nautoml.search()","17723960":"automl.rankings","7adcfbc5":"pipeline = automl.best_pipeline\npipeline.fit(X_train, y_train)\nprediction = pipeline.predict(X_test)","f4437f22":"data['y_test'] = prediction.to_series()\n#data.to_csv('submission.csv',index=False)\ndata['y_test'].head()","e91f5799":"<h1 style=\"background-color:LimeGreen; font-family:newtimeroman; font-size:220%; text-align:center; border-radius: 15px 50px;\"> Breast cancer dataset <\/h1>","6dd519ef":"<h1 style=\"background-color:LimeGreen; font-family:newtimeroman; font-size:180%; text-align:center; border-radius: 15px 50px;\"> 4) Get best pipeline and predict on new data <\/h1>","3f972a07":"<h1 style=\"background-color:LimeGreen; font-family:newtimeroman; font-size:180%; text-align:center; border-radius: 15px 50px;\"> 3) View pipeline rankings <\/h1>","84298355":"<h1 style=\"background-color:LimeGreen; font-family:newtimeroman; font-size:180%; text-align:center; border-radius: 15px 50px;\"> 2) Load and split example data <\/h1>","27b87ff3":"<h1 style=\"background-color:LimeGreen; font-family:newtimeroman; font-size:180%; text-align:center; border-radius: 15px 50px;\"> 1) Install from PyPI <\/h1>"}}