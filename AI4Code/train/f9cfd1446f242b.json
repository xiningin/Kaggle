{"cell_type":{"eb75b179":"code","e50303fe":"code","1ffe92c9":"code","b97b6512":"code","0ee8c64a":"code","ad40eae5":"code","f91b867e":"code","dc0cec30":"code","bc975e67":"code","bf8cdceb":"code","310b2702":"code","8436a549":"code","bd35b7c0":"code","40572f89":"code","c0294509":"code","da91dbb6":"code","5e5274b1":"markdown","6f12b071":"markdown","7ef3a12b":"markdown","30dabe8a":"markdown","74a4547f":"markdown"},"source":{"eb75b179":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcTC4WsGUcAqsaJ5GBsekG_rqHYzDu8PmKe753bFtl17yBVUycRD',width=400,height=400)","e50303fe":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn import feature_extraction, linear_model, model_selection, preprocessing\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","1ffe92c9":"df = pd.read_excel('\/kaggle\/input\/karanata-district-wise-quarantine-people\/Karnataka Quarantine dataset\/Mysore.xls')\ndf.head()","b97b6512":"df.dtypes","0ee8c64a":"df = df.rename(columns={'S.No.':'SNo', 'Port of Origin of journey': 'origin', 'Port of Final Destination': 'final'})","ad40eae5":"cnt_srs = df['final'].value_counts().head()\ntrace = go.Bar(\n    y=cnt_srs.index[::-1],\n    x=cnt_srs.values[::-1],\n    orientation = 'h',\n    marker=dict(\n        color=cnt_srs.values[::-1],\n        colorscale = 'Reds',\n        reversescale = True\n    ),\n)\n\nlayout = dict(\n    title='Final Port Distribution',\n    )\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"final\")","f91b867e":"cnt_srs = df['origin'].value_counts().head()\ntrace = go.Bar(\n    y=cnt_srs.index[::-1],\n    x=cnt_srs.values[::-1],\n    orientation = 'h',\n    marker=dict(\n        color=cnt_srs.values[::-1],\n        colorscale = 'Greens',\n        reversescale = True\n    ),\n)\n\nlayout = dict(\n    title='Origin - Port Distribution',\n    )\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"origin\")","dc0cec30":"df1 = pd.read_excel('\/kaggle\/input\/karanata-district-wise-quarantine-people\/Karnataka Quarantine dataset\/Bengaluru.xls')\ndf1.head()","bc975e67":"df1 = df1.rename(columns={'S.No.':'SNo', 'Port of Origin of journey': 'origin', 'Port of Final Destination': 'final'})","bf8cdceb":"cnt_srs = df1['origin'].value_counts().head()\ntrace = go.Bar(\n    y=cnt_srs.index[::-1],\n    x=cnt_srs.values[::-1],\n    orientation = 'h',\n    marker=dict(\n        color=cnt_srs.values[::-1],\n        colorscale = 'plotly3',\n        reversescale = True\n    ),\n)\n\nlayout = dict(\n    title='Origin - Port Distribution',\n    )\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"origin\")","310b2702":"cnt_srs = df1['final'].value_counts().head()\ntrace = go.Bar(\n    y=cnt_srs.index[::-1],\n    x=cnt_srs.values[::-1],\n    orientation = 'h',\n    marker=dict(\n        color=cnt_srs.values[::-1],\n        colorscale = 'Purples',\n        reversescale = True\n    ),\n)\n\nlayout = dict(\n    title='Final Port Distribution',\n    )\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"final\")","8436a549":"cat = []\nnum = []\nfor col in df.columns:\n    if df[col].dtype=='O':\n        cat.append(col)\n    else:\n        num.append(col)  \n        \n        \nnum ","bd35b7c0":"plt.style.use('dark_background')\nfor col in df[num].drop(['S.NO'],axis=1):\n    plt.figure(figsize=(8,5))\n    plt.plot(df[col].value_counts(),color='Red')\n    plt.xlabel(col)\n    plt.ylabel('S.NO')\n    plt.tight_layout()\n    plt.show()","40572f89":"plt.figure(figsize=(10,4))\nsns.heatmap(df1.corr(),annot=True,cmap='Reds')\nplt.show()","c0294509":"sns.pairplot(df)\nplt.show()","da91dbb6":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcTnhIzBKajg4v1YIM1vIfYTirf2UGU-bQ5PCAk8BX1h8XpK8j_K',width=400,height=400)","5e5274b1":"#Karnataka to stamp primary, secondary contacts of quarantined people\n\nIn Bengaluru city alone, more than 10,000 people have already been stamped and home quarantined.\n\nBENGALURU: All primary and secondary contacts of the stamped home quarantined people in Karnataka will also be stamped to avert community transmission of coronavirus, a top official said on Wednesday.\n\"To check the coronavirus pandemic from reaching the community transmission stage, the government has decided to stamp all primary and secondary contacts of those already stamped and under isolation,\" Bengaluru civic body Commissioner B. H. Anil Kumar tweeted.\nKumar said all the primary and secondary contacts will also be home quarantined. He shared a link listing all the home quarantined people across the state, without giving their names.\nhttps:\/\/www.newindianexpress.com\/states\/karnataka\/2020\/mar\/25\/karnataka-to-stamp-primary-secondary-contacts-of-quarantined-people-2121514.html","6f12b071":"#Codes from Thor God of Thunder","7ef3a12b":"thelogicalindian.com - Coronavirus Outbreak: Maharashtra Govt Stamps Left Hand Of Those Advised To Self-Quarantine\n\nhttps:\/\/thelogicalindian.com\/news\/maha-govt-left-hand-stamp-20196","30dabe8a":"youtube.com","74a4547f":"Kaggle Notebook Runner: Mar\u00edlia Prata  @mpwolke"}}