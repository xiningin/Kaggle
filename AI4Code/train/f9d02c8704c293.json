{"cell_type":{"ae3dae41":"code","c1d5a32c":"code","2684a9d0":"code","8bbe5c68":"code","05d73fda":"code","75658d8e":"code","5c572012":"code","a18e9718":"code","44bcfb8b":"code","73ef4bd1":"code","32315385":"code","586ca3ec":"code","db4e0ac5":"code","e958fd61":"code","ec9e25f5":"code","4dc4f988":"code","d663cfc2":"code","fea98e05":"code","fae4b6a1":"code","5455fbfd":"code","1c67f765":"code","4a50ad56":"markdown"},"source":{"ae3dae41":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c1d5a32c":"import warnings\nimport matplotlib.pyplot as plt\nimport matplotlib\nimport seaborn as sns\n!pip install pycaret\nfrom pycaret.regression import *\n\n\nwarnings.filterwarnings('ignore')\n%matplotlib inline","2684a9d0":"data = pd.read_csv('\/kaggle\/input\/latest-covid19-india-statewise-data\/Latest Covid-19 India Status.csv')\nprint('Shape of the given Data-', data.shape)\nprint('Columns in given data are-',data.columns.values)","8bbe5c68":"#Click show ouput to view the data ","05d73fda":"data.isnull().sum()","75658d8e":"data.info()","5c572012":"data.describe()","a18e9718":"data.style.background_gradient(cmap=\"Blues\")","44bcfb8b":"data = data.rename(columns={'State\/UTs': 'State'})\ndata.at[7,'State']='DNHDD'","73ef4bd1":"plt.figure(figsize=(10,5))\nsns.barplot(x= data['State'],y= data['Total Cases'])\nplt.xticks(rotation=90)\nplt.show()","32315385":"plt.figure(figsize=(17,6))\nplots = sns.barplot(x= data['State'],y= data['Active Ratio (%)'])\nplt.xticks(rotation=90)\nfor bar in plots.patches:\n    plots.annotate(format(bar.get_height(), '.2f'),\n                   (bar.get_x() + bar.get_width() \/ 2,\n                    bar.get_height()), ha='center', va='center',\n                   size=8, xytext=(0, 8),\n                   textcoords='offset points')\n \n","586ca3ec":"plt.figure(figsize=(17,6))\nplots = sns.barplot(x= data['State'],y= data['Discharge Ratio (%)'])\nplt.xticks(rotation=90)\nfor bar in plots.patches:\n    plots.annotate(format(bar.get_height(), '.2f'),\n                   (bar.get_x() + bar.get_width() \/ 2,\n                    bar.get_height()), ha='center', va='center',\n                   size=8, xytext=(0, 8),\n                   textcoords='offset points')\n ","db4e0ac5":"plt.figure(figsize=(17,6))\nplots = sns.barplot(x= data['State'],y= data['Death Ratio (%)'])\nplt.xticks(rotation=90)\nfor bar in plots.patches:\n    plots.annotate(format(bar.get_height(), '.2f'),\n                   (bar.get_x() + bar.get_width() \/ 2,\n                    bar.get_height()), ha='center', va='center',\n                   size=8, xytext=(0, 8),\n                   textcoords='offset points')\n ","e958fd61":"plt.figure(figsize=(10,10))\nsns.heatmap(data.corr(),annot=True, square= True, cmap='Blues')","ec9e25f5":"X = data.drop(['State','Death Ratio (%)'],axis=1)\ny = data['Death Ratio (%)']","4dc4f988":"data_1 = data.copy()\ndata_1.drop(['Death Ratio (%)'],axis=1,inplace=True)\ndata_1.drop(['State'],axis=1,inplace=True)\ncol_drop = data_1.iloc[:1]\ndata_1 = data_1.iloc[1:]\nDeaths = col_drop.Deaths\ncol_drop.drop('Deaths',axis=1,inplace=True)","d663cfc2":"env = setup(data= data_1,target='Deaths',train_size=0.99,normalize=True,normalize_method='robust',session_id = 69,silent=True)","fea98e05":"model = compare_models(sort='R2')","fae4b6a1":"tuned_model = tune_model(model,fold=10,optimize='RMSE',early_stopping=True,early_stopping_max_iters=10,choose_better = True)\nfinal_model = finalize_model(tuned_model)\nprint(final_model)","5455fbfd":"from sklearn.linear_model import HuberRegressor\ny_train = data_1.Deaths\ndata_1.drop(['Deaths'],axis=1,inplace=True)\nhub = HuberRegressor(alpha=0.001, epsilon=1.7, fit_intercept=True, max_iter=100,\n               tol=1e-05, warm_start=False)\nhub.fit(data_1,y_train)\npred = hub.predict(col_drop)","1c67f765":"print(f'Predicted Deaths: {int(pred[0])}')\nprint(f'Actual Casuality caused: {Deaths.values[0]}')","4a50ad56":"<h1>Data Description<\/h1>\n\nThis dataset contains latest Covid-19 India state-wise data as on September 07, 2021. This dataset can be used to analyze covid condition in India.\nThis dataset is great for Exploratory Data Analysis\n\n* Attribute Information\n* State\/UTs - Names of Indian States and Union Territories.\n* Total Cases - Total number of confirmed cases\n* Active - Total number of active cases\n* Discharged - Total number of discharged cases\n* Deaths - Total number of deaths\n* Active Ratio (%) - Ratio of number of active cases to total cases\n* Discharge Ratio (%) - Ratio of number of discharged cases to total cases\n* Death Ratio (%) - Ratio of number of deaths to total cases"}}