{"cell_type":{"d22f7faf":"code","c3199ab1":"code","31f0d7fe":"code","e96ac88a":"code","2511a350":"code","8fb81edd":"code","57f50f6d":"code","6da645f3":"code","506596a1":"code","56e3eecc":"code","7fcd0bd8":"code","46680e11":"code","7d10824b":"code","b1b91dd5":"code","2914cb38":"code","f01c45a7":"code","a7de71c5":"code","19de9390":"code","54ad2724":"code","24ce2e30":"code","9af37530":"code","f0c386d2":"code","5140dc59":"code","2a5be943":"code","8a49f168":"code","7855e93f":"code","bc32c663":"code","fb1da6d8":"code","1a1c217f":"code","1c313efe":"code","9307ed74":"code","64c19544":"markdown","e5f7f6e0":"markdown","dedf58ba":"markdown","9a3e1478":"markdown","b5798ee6":"markdown"},"source":{"d22f7faf":"import numpy as np\n\nimport pandas as pd\n\nimport matplotlib.pyplot as plt","c3199ab1":"#Read Data\ndata_PlayTennis = pd.read_csv('..\/input\/playtennis\/PlayTennis.csv')","31f0d7fe":"#show shape\ndata_PlayTennis.shape","e96ac88a":"data_PlayTennis","2511a350":"data_PlayTennis.isnull().sum()","8fb81edd":"from sklearn.preprocessing import LabelEncoder","57f50f6d":"#Create Object from LabelEncoder\nlabel_En = LabelEncoder()","6da645f3":"data_PlayTennis['outlook']= label_En.fit_transform(data_PlayTennis['outlook'])\ndata_PlayTennis['temp']=label_En.fit_transform(data_PlayTennis['temp'])\ndata_PlayTennis['humidity']=label_En.fit_transform(data_PlayTennis['humidity'])\ndata_PlayTennis['windy']=label_En.fit_transform(data_PlayTennis['windy'])\ndata_PlayTennis['play']=label_En.fit_transform(data_PlayTennis['play'])","506596a1":"data_PlayTennis","56e3eecc":"data_PlayTennis.head()","7fcd0bd8":"print(data_PlayTennis.columns)","46680e11":"X = data_PlayTennis.drop(['play'] , axis=1 )\nY = data_PlayTennis['play']","7d10824b":"print('The Features is ::\\n' , X)","b1b91dd5":"print('The Target Is (Play)::\\n' , Y)","2914cb38":"#Importing train_test_split\nfrom sklearn.model_selection import train_test_split\nx_train  , x_test, y_train, y_test =train_test_split(X ,Y , test_size=0.3 ,stratify=Y ,random_state=101)","f01c45a7":"x_train","a7de71c5":"y_train","19de9390":"x_test","54ad2724":"y_test","24ce2e30":"print(len(X))\nprint(len(Y))\nprint(len(x_train))\nprint(len(y_train))\nprint(len(x_test))\nprint(len(y_test))","9af37530":"from sklearn.tree import DecisionTreeClassifier","f0c386d2":"#Create Object from Decision Tree Classifier\nD_T_C_Model =DecisionTreeClassifier(criterion='entropy' ,random_state=10)","5140dc59":"D_T_C_Model.fit(x_train , y_train)","2a5be943":"#check training score\nD_T_C_Model.score(x_train , y_train)","8a49f168":"#check testing score\nD_T_C_Model.score(x_test , y_test)","7855e93f":"y_pred = D_T_C_Model.predict(x_test)\ny_pred","bc32c663":"D_T_C_Model.predict_proba(x_test)","fb1da6d8":"#visualize the tree using tree.plot_tree\nfrom sklearn import tree\ntree.plot_tree(D_T_C_Model)","1a1c217f":"#Graphviz\nimport graphviz\ngraph_data = tree.export_graphviz(D_T_C_Model, out_file=None) \ngraph = graphviz.Source(graph_data) \ngraph","1c313efe":"#Check Accurcy score(y_test , y_pred)\nfrom sklearn.metrics import accuracy_score","9307ed74":"accuracy_score(y_test , y_pred)","64c19544":"# Importing Decision Tree Classifier","e5f7f6e0":"# Import Libiraries","dedf58ba":"# Implementation For Decision Tree","9a3e1478":"* X[0]==Outlook\n* X[1]==Temperature\n* X[2]==Humidity\n* X[3]==Wind","b5798ee6":"**We Need to convert classification values to numerical values**"}}