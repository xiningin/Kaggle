{"cell_type":{"1201a102":"code","59a820f6":"code","7c64597c":"code","1896ab35":"code","eb916452":"code","a712b63d":"code","acb71d16":"code","411f7cc0":"code","ee4f2f4b":"code","c09682af":"code","2cebbb07":"code","9d3b20e8":"code","a5be6d26":"code","cedf684f":"code","9b0c678e":"code","fc4a9991":"code","0cdc7ccc":"code","fb4be719":"code","ba7f8d4e":"code","93871909":"code","dbe784b8":"code","15b4ee0c":"code","eec7cf39":"code","2214c555":"code","5e77cc4d":"code","4b0fbe11":"code","e0cdaa61":"code","4bdd72e0":"code","98d82ecb":"code","be57e9b4":"code","fbfde871":"code","7ebc6849":"code","5d4fa5e5":"code","c06221b7":"markdown","0bb6d1dd":"markdown","08ddedc2":"markdown","5cb0ba69":"markdown","dc1525c7":"markdown","c0ae58ac":"markdown"},"source":{"1201a102":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","59a820f6":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np","7c64597c":"# Reading the csv data\nsupermarket_sales = pd.read_csv('\/kaggle\/input\/supermarket-sales\/supermarket_sales - Sheet1.csv')","1896ab35":"# Checking the columns and type\nsupermarket_sales.info()","eb916452":"# Checking for number of rows and columns\nsupermarket_sales.shape","a712b63d":"# Checking for top 5 records\nsupermarket_sales.head()","acb71d16":"# Statistical information of numerical columns\nsupermarket_sales.describe()","411f7cc0":"# Check for missing values\nsupermarket_sales.isnull().sum()","ee4f2f4b":"# Check for duplicate values\nsupermarket_sales.duplicated().sum()","c09682af":"# Converting Date object to datetime\nsupermarket_sales['Date'] = pd.to_datetime(supermarket_sales['Date'], format = '%m\/%d\/%Y')\nsupermarket_sales.head()","2cebbb07":"# Checking the unique City, Customer Type, Gender, Product Line, Payments\nprint('City: ', supermarket_sales['City'].unique())\nprint('Branch: ',supermarket_sales['Branch'].unique())\nprint('Customer Type: ',supermarket_sales['Customer type'].unique())\nprint('Gender: ',supermarket_sales['Gender'].unique())\nprint('Product Line: ',supermarket_sales['Product line'].unique())\nprint('Payment: ',supermarket_sales['Payment'].unique())","9d3b20e8":"# Deriving Month and Year from Date \nsupermarket_sales['Month'] = supermarket_sales['Date'].dt.month\nsupermarket_sales['Year'] = supermarket_sales['Date'].dt.year\nprint('Year: ',supermarket_sales['Year'].unique())\nprint('Month: ',supermarket_sales['Month'].unique())","a5be6d26":"# a) Food and beverages are the most sold product line\nsns.countplot(supermarket_sales['Product line'],\n              order = supermarket_sales['Product line'].value_counts().index)\nplt.xticks(rotation=45)\n# Conclusion: Hypothesis is false as Fashion accessories are most sold product line","cedf684f":"# b) Female buyers are greater than male buyers\nsns.countplot(supermarket_sales['Gender'],\n              order = supermarket_sales['Gender'].value_counts().index)\nplt.xticks(rotation=45)\n# Conclusion: Hypothesis is true as Female buyers are more","9b0c678e":"# c) Cash is the most convinient mode of payment\nsns.countplot(supermarket_sales['Payment'],\n              order = supermarket_sales['Payment'].value_counts().index)\nplt.xticks(rotation=45)\n# Conclusion: Hypothesis is false as Ewallet is preferred more than cash or credit card","fc4a9991":"# d) January month has the most purchase in 2019\nsns.countplot(supermarket_sales['Month'],\n              order = supermarket_sales['Month'].value_counts().index)\nplt.xticks(rotation=45)\n# Conclusion: Hypothesis is true followed by March and February","0cdc7ccc":"# e) There is a linear relationship between Total and Price\nsns.scatterplot(x=supermarket_sales['Unit price'], y=supermarket_sales['Total'])\n# Conclusion: The hypothesis is true as the relationship seen is linear","fb4be719":"# Plotting numerical value vs date\nsupermarket_sales[['Date','Total']].set_index('Date').plot()\nplt.xlabel('Date')\nplt.ylabel('Total')\nplt.title('Plot of Total Vs Date')","ba7f8d4e":"# Date Wise Analysis\nsupermarket_sales[supermarket_sales['Month'] == 1][['Date','Total']].set_index('Date').plot()\nplt.xlabel('Date')\nplt.ylabel('Total')\nplt.title('January Month Total Distribution')","93871909":"supermarket_sales[supermarket_sales['Month'] == 2][['Date','Total']].set_index('Date').plot()\nplt.xlabel('Date')\nplt.ylabel('Total')\nplt.title('February Month Total Distribution')","dbe784b8":"supermarket_sales[supermarket_sales['Month'] == 3][['Date','Total']].set_index('Date').plot()\nplt.xlabel('Date')\nplt.ylabel('Total')\nplt.title('March Month Total Distribution')","15b4ee0c":"# Histogram for numerical data\nnumerical_cols = ['Unit price', 'Quantity', 'Tax 5%', 'Total', 'cogs', 'gross margin percentage', 'gross income', 'Rating']\nsupermarket_sales[numerical_cols].hist(bins=15, figsize=(25, 10), layout=(3, 3));","eec7cf39":"# Boxplot for numerical data\nsupermarket_sales[numerical_cols].boxplot()\nplt.xticks(rotation=45)","2214c555":"# Barplot for categorical data\nsns.countplot(supermarket_sales['Customer type'],\n              order = supermarket_sales['Customer type'].value_counts().index)\nplt.xticks(rotation=45)","5e77cc4d":"# Product Line Vs Total boxplot\nsorted_salesdata = supermarket_sales.groupby(['Product line'])['Total'].median().sort_values()\nsns.boxplot(x='Product line', y='Total', data=supermarket_sales, order=list(sorted_salesdata.index))\nplt.xticks(rotation=90)","4b0fbe11":"# City Vs Total boxplot\nsorted_salesdata = supermarket_sales.groupby(['City'])['Total'].median().sort_values()\nsns.boxplot(x='City', y='Total', data=supermarket_sales, order=list(sorted_salesdata.index))\nplt.xticks(rotation=90)","e0cdaa61":"# Crating scatterplot for categorical data for Gender\nsns.catplot(x=\"Gender\", y=\"Total\", data=supermarket_sales)","4bdd72e0":"# Distribution of Product Line for Gender\nsns.catplot(x=\"Product line\", y=\"Total\", data=supermarket_sales, hue='Gender')\nplt.xticks(rotation=90)","98d82ecb":"# Distribution of Product Line for Payment\nsns.catplot(x=\"Product line\", y=\"Total\", data=supermarket_sales, hue='Payment')\nplt.xticks(rotation=90)","be57e9b4":"# Plot showing the combination of scatter plot along with histogram\nsns.jointplot(x=supermarket_sales['Unit price'], y=supermarket_sales['gross income'])","fbfde871":"# Creating a correlation heatmaps\nplt.figure(figsize=(8, 8))\nsns.heatmap(supermarket_sales[numerical_cols].corr(), annot=True)","7ebc6849":"# Bonus : What is the average rating of the supermarket\nsupermarket_sales['Rating'].mean()","5d4fa5e5":"# Bonus : What is the average rating City wise\nsupermarket_sales.groupby(['City'])['Rating'].mean()","c06221b7":"# Univariate Analysis","0bb6d1dd":"# Step 2: Data Cleaning","08ddedc2":"# Step 1: Load the data set and check for the structure","5cb0ba69":"# EDA is Exploratory Data Analysis\n# It is a means to visualize the data and derive insights from it\n# It is complementary to inferential statistics\n# Import Libraries","dc1525c7":"# Bivariate Analysis","c0ae58ac":"# Step 3: Hypothesis Building\n# a) Food and beverages are the most sold product line\n# b) Female buyers are greater than male buyers\n# c) Cash is the most convinient mode of payment\n# d) January month has the most purchase in 2019\n# e) There is a linear relationship between Total and Price\n\n# Step 4: Hypothesis testing using EDA"}}