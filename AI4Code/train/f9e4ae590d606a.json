{"cell_type":{"b746345a":"code","e099516d":"code","9ad0a8fd":"code","09b45282":"code","72d760be":"code","75c5b658":"code","19ccf361":"code","1dc9f359":"code","8ed0a87c":"code","9ab5ae19":"code","84e98a4a":"code","3af33bc7":"code","366cf931":"code","5bff9a8a":"markdown"},"source":{"b746345a":"import os\nimport cv2\nimport glob\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","e099516d":"train = '..\/input\/famous-iconic-women\/output\/train'\nface_cascade = cv2.CascadeClassifier('..\/input\/haarcascades\/haarcascade_frontalface_default.xml')\neye_cascade = cv2.CascadeClassifier('..\/input\/haarcascades\/haarcascade_eye.xml')","9ad0a8fd":"images =[]\nclassNames=[]\nmyList = os.listdir(train)\nfor cl in myList:\n    curImg=cv2.imread(f'{train}\/{cl}')\n    images.append(curImg)\n    classNames.append(os.path.splitext(cl)[0])\nprint(classNames)","09b45282":"# create folder name cropped\nos.mkdir('\/kaggle\/working\/cropped')","72d760be":"def proc_img(filepath):\n    labels = list(map(lambda x: os.path.split(os.path.split(x)[0])[1], filepath))\n    filepath = pd.Series(filepath, name='FilePath').astype(str)\n    labels = pd.Series(labels, name='Name')\n    df = pd.concat([filepath, labels], axis=1)\n    df = df.sample(frac=1).reset_index(drop = True)\n    return df","75c5b658":"def get_cropped_image_if_2_eyes(image_path):\n    img = cv2.imread(image_path)\n    faces = face_cascade.detectMultiScale(img, 1.3, 5)\n    for (x,y,w,h) in faces:\n        roi_color = img[y:y+h, x:x+w]\n        eyes = eye_cascade.detectMultiScale(roi_color)\n        if len(eyes) >= 2:\n            return roi_color","19ccf361":"path_data = train\nimg_dirs = []\nfor entry in os.scandir(path_data):\n    if entry.is_dir():\n        img_dirs.append(entry.path)","1dc9f359":"cr = '\/kaggle\/working\/cropped\/'\nimport shutil\nif os.path.exists(cr):\n    shutil.rmtree(cr)\nos.mkdir(cr)","8ed0a87c":"cropped_image_dirs = []\ncelebrity_file_names_dict = {}\n\nfor img_dir in img_dirs:\n    count = 1\n    celebrity_name = img_dir.split('\/')[-1]\n    print(celebrity_name)\n    \n    celebrity_file_names_dict[celebrity_name] = []\n    \n    for entry in os.scandir(img_dir):\n        roi_color = get_cropped_image_if_2_eyes(entry.path)\n        if roi_color is not None:\n            cropped_folder = cr + celebrity_name\n            if not os.path.exists(cropped_folder):\n                os.makedirs(cropped_folder)\n                cropped_image_dirs.append(cropped_folder)\n                \n            cropped_file_name = celebrity_name + str(count) + \".jpg\"\n            cropped_file_path = cropped_folder + \"\/\" + cropped_file_name \n            \n            cv2.imwrite(cropped_file_path, roi_color)\n            celebrity_file_names_dict[celebrity_name].append(cropped_file_path)\n            count += 1","9ab5ae19":"path_img_cropped = '\/kaggle\/working\/cropped'\nfilepaths_train = list(glob.glob(path_img_cropped+'\/**\/*.jpg'))","84e98a4a":"train_df = proc_img(filepaths_train)","3af33bc7":"train_df.head()","366cf931":"fig, axes = plt.subplots(nrows=5, ncols=6, figsize=(15, 7),\n                        subplot_kw={'xticks': [], 'yticks': []})\n\nfor i, ax in enumerate(axes.flat):\n    ax.imshow(plt.imread(train_df.FilePath[i]))\n    ax.set_title(train_df.Name[i])\nplt.tight_layout()\nplt.show()","5bff9a8a":"# Functions"}}