{"cell_type":{"dcb2a353":"code","b404546e":"markdown","09326c63":"markdown"},"source":{"dcb2a353":"# Write Your Code Below\nimport numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_absolute_error\nfrom xgboost import XGBRegressor\n\n# Read the data\ndata_path='..\/input\/house-prices-advanced-regression-techniques\/train.csv'\ntrain = pd.read_csv( data_path)\nprint(train.describe())\nprint(train.columns)\n# pull data into target (y) and predictors (X)\ny = train.SalePrice\npredictor_cols = ['LotArea', 'OverallQual', 'YearBuilt', 'TotRmsAbvGrd']\nx = train[predictor_cols]\n# Create training predictors data\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)\n\nmy_model=XGBRegressor(n_estimators=180)\nmy_model.fit(x_train,y_train,verbose=False)\ny_pred=my_model.predict(x_test)\nmae=mean_absolute_error(y_test,y_pred)\nprint(mae)\n# Read the test data\ntest_path='..\/input\/house-prices-advanced-regression-techniques\/test.csv'\ntest = pd.read_csv(test_path)\n# Treat the test data in the same way as training data. In this case, pull same columns.\ntest_X = test[predictor_cols]\n# Use the model to make predictions\npredicted_prices = my_model.predict(test_X)\n# We will look at the predicted prices to ensure we have something sensible.\nprint(predicted_prices)\nmy_submission=pd.DataFrame({'Id':test.Id,'SalePrice':predicted_prices})\nmy_submission.to_csv('submission.csv',index=False)\n\n","b404546e":"# Introduction\n**This will be your workspace for the [Machine Learning course](https:\/\/www.kaggle.com\/learn\/machine-learning).**\n\nYou will need to translate the concepts to work with the data in this notebook, the Iowa data. Each page in the Machine Learning course includes instructions for what code to write at that step in the course.\n\n# Write Your Code Below\nimport numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_absolute_error\nfrom xgboost import XGBRegressor\n\n# Read the data\ndata_path='..\/input\/house-prices-advanced-regression-techniques\/train.csv'\ntrain = pd.read_csv( data_path)\nprint(train.describe())\nprint(train.columns)\n# pull data into target (y) and predictors (X)\ny = train.SalePrice\npredictor_cols = ['LotArea', 'OverallQual', 'YearBuilt', 'TotRmsAbvGrd']\nx = train[predictor_cols]\n# Create training predictors data\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)\n\nmy_model=XGBRegressor(n_estimators=180)\nmy_model.fit(x_train,y_train,verbose=False)\ny_pred=my_model.predict(x_test)\nmae=mean_absolute_error(y_test,y_pred)\nprint(mae)\n# Read the test data\ntest_path='..\/input\/house-prices-advanced-regression-techniques\/test.csv'\ntest = pd.read_csv(test_path)\n# Treat the test data in the same way as training data. In this case, pull same columns.\ntest_X = test[predictor_cols]\n# Use the model to make predictions\npredicted_prices = my_model.predict(test_X)\n# We will look at the predicted prices to ensure we have something sensible.\nprint(predicted_prices)\nmy_submission=pd.DataFrame({'Id':test.Id,'SalePrice':predicted_prices})\nmy_submission.to_csv('submission.csv',index=False)\n","09326c63":"\n**If you have any questions or hit any problems, come to the [Learn Discussion](https:\/\/www.kaggle.com\/learn-forum) for help. **\n\n**Return to [ML Course Index](https:\/\/www.kaggle.com\/learn\/machine-learning)**"}}