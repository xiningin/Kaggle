{"cell_type":{"7ce6f119":"code","ae8c0828":"code","f11a15a0":"code","1abb64a1":"code","fab83f6b":"code","9b760356":"code","2247642f":"code","8f865033":"code","7bfce0e6":"code","99ac146c":"code","ca6e6da2":"code","03689dbb":"code","9ccacc92":"code","992cde7a":"code","50bf7b6d":"code","1bb4190a":"code","9d483fa4":"code","e176181d":"code","2647448d":"code","74016ee7":"code","0891ff2c":"code","b553b385":"code","8923fbc2":"code","0a5a9d39":"code","de89f6b1":"code","3411c83e":"code","10663819":"code","53e7f34b":"code","a7d5f3fa":"code","4c4d9636":"code","b634f6ef":"code","f0084f57":"code","6ec52b6c":"code","c75f9f22":"code","217a1671":"code","2f39a99c":"code","bac2d2a4":"code","fae33d05":"code","836ae14a":"code","2f5585a9":"code","33aa9ce7":"code","3da0ee78":"code","e2234e07":"code","c3119460":"code","35a2bb8c":"code","31acc307":"code","81c2b814":"markdown"},"source":{"7ce6f119":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","ae8c0828":"training_data=pd.read_csv('..\/input\/train.csv')\n","f11a15a0":"training_data.describe()","1abb64a1":"training_data.columns","fab83f6b":"training_data.info()","9b760356":"training_data.isnull().sum()","2247642f":"training_data['Age'].fillna(training_data['Age'].mode(),inplace=True)\ntraining_data['Embarked'].fillna(training_data['Embarked'].mode(),inplace=True)","8f865033":"training_data['Embarked']=training_data['Embarked'].astype('category')\ntraining_data['Sex']=training_data['Sex'].astype('category')","7bfce0e6":"training_data['Embarked']=training_data['Embarked'].cat.codes\ntraining_data['Sex']=training_data['Sex'].cat.codes\ntraining_data.head()","99ac146c":"training_data.shape","ca6e6da2":"#dropping the columns which are not needed and do not impact the analysis\ntraining_data.drop(columns=['Ticket','Fare','Cabin'],axis=1,inplace=True)","03689dbb":"training_data[['Pclass','Survived']].groupby(by='Pclass').sum().sort_values(by='Survived',ascending=False)","9ccacc92":"training_data[['Sex','Survived']].groupby(by='Sex').sum().sort_values(by='Survived',ascending=False)","992cde7a":"training_data[['Embarked','Survived']].groupby(by='Embarked').sum().sort_values(by='Survived',ascending=False)","50bf7b6d":"training_data[['Parch','Survived']].groupby(by='Parch').sum().sort_values(by='Survived',ascending=False)","1bb4190a":"training_data['AgeBracket']=pd.cut(training_data['Age'],8)","9d483fa4":"training_data[['AgeBracket','Survived']].groupby(by='AgeBracket').sum().sort_values(by='Survived',ascending=False)","e176181d":"training_data.isnull().sum()","2647448d":"training_data['IsAlone']=((training_data['SibSp']+training_data['Parch']+1)>0).astype(int)","74016ee7":"training_data['Age'].fillna(value=training_data['Age'].mode()[0],inplace=True)","0891ff2c":"training_data['Embarked'].fillna(value=training_data['Embarked'].mode()[0],inplace=True)","b553b385":"training_data.drop(columns=['SibSp','Parch','AgeBracket','Name','PassengerId'],axis=1,inplace=True)","8923fbc2":"training_data.head()","0a5a9d39":"training_data['Age']=(training_data['Age'] - training_data['Age'].min()) \/ (training_data['Age'].max() - training_data['Age'].min())","de89f6b1":"x=training_data[['Pclass','Sex','Age','Embarked','IsAlone']]\ny=training_data['Survived']","3411c83e":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.25,random_state=0)\nlogre=LogisticRegression()\nlogre.fit(x_train,y_train)","10663819":"from sklearn.model_selection import KFold\nfrom sklearn.model_selection import cross_val_score\n\nkfold=KFold(n_splits=100,shuffle=False,random_state=None)\ncvs=cross_val_score(estimator=logre,X=x,y=y,cv=kfold)","53e7f34b":"np.mean(cvs)","a7d5f3fa":"logre.fit(x,y)","4c4d9636":"y_pred=logre.predict(x_test)","b634f6ef":"from sklearn.ensemble import RandomForestClassifier\nrf=RandomForestClassifier(n_estimators=400,n_jobs=-1,max_leaf_nodes=16)\nrf.fit(x_train,y_train)\nrf_y_pred=rf.predict(x_test)","f0084f57":"print(metrics.accuracy_score(y_test,rf_y_pred))","6ec52b6c":"rf.fit(x,y)","c75f9f22":"from sklearn import metrics\nimport seaborn as sns\nconfusion_matrix=metrics.confusion_matrix(y_test,y_pred)\nsns.heatmap(pd.DataFrame(confusion_matrix),annot=True,cmap=\"YlGnBu\",fmt='g')\n","217a1671":"print(metrics.classification_report(y_test,y_pred))","2f39a99c":"print('The Jacaard Similarity score is {0}'.format(metrics.jaccard_similarity_score(y_test,y_pred)))","bac2d2a4":"print('The accuracy score is {0}'.format(metrics.accuracy_score(y_test,y_pred)))","fae33d05":"test_data=pd.read_csv('..\/input\/test.csv')\nx_testing=test_data.copy()","836ae14a":"x_testing['Age'].fillna(x_testing['Age'].mode()[0],inplace=True)\nx_testing['Embarked'].fillna(x_testing['Embarked'].mode()[0],inplace=True)\nx_testing['Embarked']=x_testing['Embarked'].astype('category')\nx_testing['Sex']=x_testing['Sex'].astype('category')\nx_testing['Embarked']=x_testing['Embarked'].cat.codes\nx_testing['Sex']=x_testing['Sex'].cat.codes\nx_testing.drop(columns=['Ticket','Fare','Cabin'],axis=1,inplace=True)\nx_testing['IsAlone']=((x_testing['SibSp']+x_testing['Parch']+1)>0).astype(int)\nx_testing.drop(columns=['SibSp','Parch','Name','PassengerId'],axis=1,inplace=True)\nx_testing['Age']=(x_testing['Age'] - x_testing['Age'].min()) \/ (x_testing['Age'].max() - x_testing['Age'].min())\n","2f5585a9":"survived_pred=pd.DataFrame(logre.predict(x_testing),columns=['Survived'])","33aa9ce7":"result=pd.DataFrame(data={'PassengerId':test_data['PassengerId'],'Survived':survived_pred['Survived']})","3da0ee78":"result.head()","e2234e07":"final_pred=pd.DataFrame(rf.predict(x_testing),columns=['Survived'])\nfinal_pred.head()","c3119460":"final_result=pd.DataFrame(data={'PassengerId':test_data['PassengerId'],'Survived':final_pred['Survived']})","35a2bb8c":"final_result.to_csv(\"..\/working\/finalresult.csv\", index=False)","31acc307":"final_result.head(30)","81c2b814":"**Import the dataset**"}}