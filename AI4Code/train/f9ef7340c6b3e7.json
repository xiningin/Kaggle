{"cell_type":{"869d2705":"code","3dbd6a95":"code","80483612":"code","2440d926":"code","4b58171c":"code","ec0058e1":"code","290feed9":"code","f9f59e32":"code","906c22fc":"code","66b28917":"code","5ea6bf9c":"code","5fff2c3c":"code","0da5ab09":"code","42e8f253":"code","04cc6fdb":"code","355e2d52":"code","a45beba1":"code","8c379c3f":"code","6fed4d86":"code","85ddd0fa":"code","bc643e06":"code","bfa1c4e1":"code","f1dc0aab":"code","aad3343d":"code","f8f0419b":"code","68415f91":"code","578d5483":"code","8fb20632":"code","71c3631d":"code","d682e30d":"code","2288afbf":"code","c9a95dc3":"code","3496c4d2":"code","5551dcaf":"code","4638ebc5":"code","d091c7f0":"code","7a2f291b":"code","5118f36d":"code","0cbb64f9":"code","f0bf1515":"code","6006f717":"code","e145bad0":"code","22ee815b":"code","e74e49f8":"code","8eac68ae":"code","4bd29669":"code","16a0afd7":"code","f9ebf07a":"markdown","04262d2b":"markdown","4642625f":"markdown","343bf4d4":"markdown","c076c905":"markdown","54fc0bc0":"markdown","37b88e42":"markdown","16bac45b":"markdown","41668aba":"markdown","23328770":"markdown","7f54aa4d":"markdown","ffa9e4d5":"markdown"},"source":{"869d2705":"import pandas as pd\nimport numpy as np","3dbd6a95":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","80483612":"data_jobs = pd.read_csv(\"\/kaggle\/input\/data-analyst-jobs\/DataAnalyst.csv\")","2440d926":"data_jobs.head()","4b58171c":"data_jobs.info()","ec0058e1":"data_jobs.columns","290feed9":"# Droping Unnamed column\ndata_jobs.drop(\"Unnamed: 0\",1,inplace=True)","f9f59e32":"# This shows that column Company contains a NaN Value\ndata_jobs.notnull().all()","906c22fc":"# The 1860 index contained the NaN value\ndata_jobs[data_jobs[\"Company Name\"].isnull()][\"Company Name\"]","66b28917":"data_jobs[\"Company Name\"].dropna(inplace=True)","5ea6bf9c":"data_jobs = data_jobs.apply(lambda x: x.replace(\"-1\",np.nan))\ndata_jobs = data_jobs.apply(lambda x: x.replace(-1,np.nan))\ndata_jobs = data_jobs.apply(lambda x: x.replace(\"-1.0\",np.nan))\ndata_jobs = data_jobs.apply(lambda x: x.replace(\"Unknown \/ Non-Applicable\",np.nan))","5fff2c3c":"plt.figure(figsize=(14,8))\nsns.heatmap(data_jobs.isnull(), yticklabels=False, cbar=False,cmap=\"viridis\")\nplt.tight_layout()","0da5ab09":"len(data_jobs[data_jobs[\"Rating\"].isnull()][\"Rating\"])","42e8f253":"def missing_value_perc(check):\n    null_value = data_jobs[check].isnull()\n    len_value = len([x for x in null_value if x])\n    percentage = (len_value\/2253) * 100\n    \n    print(f\"Total missing values in {check} is ({len_value}) and it's {round(percentage,2)}%\")\n    \nmissing_value_perc(\"Job Title\")\nmissing_value_perc(\"Salary Estimate\")\nmissing_value_perc(\"Job Description\")\nmissing_value_perc(\"Rating\")\nmissing_value_perc(\"Company Name\")\nmissing_value_perc(\"Location\")\nmissing_value_perc(\"Headquarters\")\nmissing_value_perc(\"Size\")\nmissing_value_perc(\"Founded\")\nmissing_value_perc(\"Type of ownership\")\nmissing_value_perc(\"Industry\")\nmissing_value_perc(\"Sector\")\nmissing_value_perc(\"Revenue\")\nmissing_value_perc(\"Competitors\")\nmissing_value_perc(\"Easy Apply\")\n","04cc6fdb":"# droping columns with missing values greater that 70%\ndata_jobs.drop([\"Easy Apply\", \"Competitors\"],1,inplace=True)","355e2d52":"# Removing the rating values(\\n float)\ndata_jobs[\"Company Name\"].dropna(inplace=True)\ndata_jobs[\"Company Name\"] = data_jobs[\"Company Name\"].apply(lambda x: x.split(\"\\n\")[0])","a45beba1":"# Removing (Glassdoor)\ndata_jobs[\"Salary Estimate\"].dropna(how=\"all\",inplace=True)\ndata_jobs[\"Salary Estimate\"] = data_jobs[\"Salary Estimate\"].apply(lambda salary: salary.split()[0])","8c379c3f":"data_jobs[\"Salary Estimate\"].dropna(how=\"all\",inplace=True)\ndata_jobs.insert(loc=2, column=\"Salary min_Estimate\", \n                 value=data_jobs[\"Salary Estimate\"].apply(lambda x: x.split(\"-\")[0]))\ndata_jobs.insert(loc=3, column=\"Salary max_Estimate\", \n                 value=data_jobs[\"Salary Estimate\"].apply(lambda x: x.split(\"-\")[1]))","6fed4d86":"# Seperating city from location\nloc_city = data_jobs[\"Location\"].apply(lambda x: x.split(\",\")[1])   \ndata_jobs.insert(loc=8, column=\"Location City\", value=loc_city)","85ddd0fa":"# Removing cities from location\ndata_jobs[\"Location\"] = data_jobs[\"Location\"].apply(lambda x: x.split(\",\")[0])","bc643e06":"data_jobs.head(3)","bfa1c4e1":"data_jobs[\"Rating\"].head(20)","f1dc0aab":"plt.figure(figsize=(14,5))\nsns.set_style(\"whitegrid\")\nsns.set_palette(\"RdPu_r\", 5, 1)\nsns.set_context(\"paper\", rc={\"lines.linewidth\": 1.5})\nsns.distplot(data_jobs[\"Rating\"])","aad3343d":"print(data_jobs[\"Rating\"].skew())\nprint(data_jobs[\"Rating\"].median())","f8f0419b":"data_jobs[\"Rating\"].describe()","68415f91":"data_jobs[\"Rating\"].fillna(value=round(data_jobs[\"Rating\"].mean(),1), inplace=True)","578d5483":"data_jobs[data_jobs[\"Salary min_Estimate\"].isnull()]","8fb20632":"data_jobs[\"Salary min_Estimate\"].dropna(how=\"all\",inplace=True)\ndata_jobs[\"Salary min_Estimate\"] = data_jobs[\"Salary min_Estimate\"].apply(\n    lambda x: float(x.split(\"$\")[1].strip('K')))","71c3631d":"data_jobs[\"Salary min_Estimate\"].describe()","d682e30d":"plt.figure(figsize=(14,5))\nsns.set_style(\"whitegrid\")\nsns.set_palette(\"prism\", 5, 1)\nsns.set_context(\"paper\", rc={\"lines.linewidth\": 1.5})\nsns.distplot(data_jobs[\"Salary min_Estimate\"])\nplt.title(\"MINIMUM SALARY DISTRIBUTION FOR DATA ANALYST JOBS\")","2288afbf":"data_jobs[\"Salary max_Estimate\"].dropna(how=\"all\",inplace=True)\ndata_jobs[\"Salary max_Estimate\"] = data_jobs[\"Salary max_Estimate\"].apply(\n    lambda x: float(x.split(\"$\")[1].strip('K')))","c9a95dc3":"data_jobs[\"Salary max_Estimate\"].describe()","3496c4d2":"plt.figure(figsize=(14,5))\nsns.set_style(\"whitegrid\")\nsns.set_palette(\"rainbow_r\", 5, 1)\nsns.set_context(\"paper\", rc={\"lines.linewidth\": 1.5})\nsns.distplot(data_jobs[\"Salary max_Estimate\"])\nplt.title(\"MAXIMUM SALARY DISTRIBUTION FOR DATA ANALYST JOBS\")","5551dcaf":"data_jobs.dropna(inplace=True)","4638ebc5":"plt.figure(figsize=(14,8))\nsns.heatmap(data_jobs.isnull(), yticklabels=False, cbar=False,cmap=\"viridis\")\nplt.tight_layout()","d091c7f0":"data_jobs[\"Salary max_Estimate\"].fillna(value=90.0,inplace=True)\ndata_jobs[\"Salary min_Estimate\"].fillna(value=54.3,inplace=True)","7a2f291b":"data_jobs[\"Salary max_Estimate\"].sort_values().unique()","5118f36d":"data_jobs[\"Salary min_Estimate\"].sort_values().unique()","0cbb64f9":"data = data_jobs.groupby([\"Job Title\"])[[\"Salary min_Estimate\",\"Salary max_Estimate\"]].mean().sort_values([\"Salary min_Estimate\",\"Salary max_Estimate\"],ascending=False)\ndata = data[(data[\"Salary max_Estimate\"] == 132.0) & (data[\"Salary min_Estimate\"] == 113.0)]\ndata.reset_index(inplace=True)\ndata","f0bf1515":"plt.figure(figsize=(13,6))\nsns.set_context(\"paper\", rc={\"lines.linewidth\": 1.5})\nsns.barplot(x=\"Salary min_Estimate\", y=\"Job Title\", data=data)\nplt.title(\"BEST JOB WITH THE MEAN OF THE MINIMUM SALARY\")","6006f717":"plt.figure(figsize=(13,6))\nsns.set_context(\"paper\", rc={\"lines.linewidth\": 1.5})\nsns.barplot(x=\"Salary max_Estimate\", y=\"Job Title\", data=data)\nplt.title(\"BEST JOB WITH THE MEAN OF THE MAXIMUM SALARY\")","e145bad0":"data_jobs[\"Rating\"].sort_values().unique()","22ee815b":"data_jobs[\"Rating\"].max()","e74e49f8":"data_jobs[data_jobs[\"Rating\"] == 5.0][[\"Job Title\",\"Rating\"]]","8eac68ae":"data_jobs[data_jobs[\"Rating\"] == 5.0][\"Job Title\"].unique()","4bd29669":"data_jobs[\"Location\"].value_counts()","16a0afd7":"print(data_jobs[data_jobs[\"Location\"] == \"New York\"][\"Job Title\"].unique())","f9ebf07a":"#### INVESTIGATING FURTHER ON RATING","04262d2b":"## DATA CLEANING","4642625f":"From the analysis above, Easy Apply column and more tend to have lot of missing values,\nthe best thing we could do is to drop these columns, as it's not giving enough information.","343bf4d4":"Checking for missing values can be done in many ways.\nMost of the time, i prefer using heatmap.","c076c905":"## BEST JOBS BY LOCATION","54fc0bc0":"## BEST JOBS BY RATING","37b88e42":"#### INVESTIGATING FUTHER ON MIN SALARY AND MAX SALARY","16bac45b":"## I'M open TO ACCEPT CORRECTIONS.","41668aba":"## BEST JOBS BY SALARY","23328770":"## IMPORTING LIBRARIES AND DATASET","7f54aa4d":"## DATA EXPLORATION","ffa9e4d5":"Some columns contain alot of \"-1\",\"-1.0\", -1, Unknown \/ Non-Applicable,\nReplacing these values to NaN "}}