{"cell_type":{"70a29bac":"code","c3e87a46":"code","cca73dc9":"code","482bde61":"code","f1758c56":"code","f3010a51":"code","8531bb20":"code","e35e59e4":"code","e9c42bc1":"code","dfe709e6":"code","12ac2b80":"code","c0d05cd9":"code","386ac574":"code","01684693":"code","33fdafdc":"code","6882cd99":"code","1629d0bf":"code","61d8fd11":"code","accd5041":"code","0ffc06fd":"code","083fc5e5":"code","5ef271ae":"code","f2c71f31":"code","4c1d8013":"code","88b6026c":"code","dc8db5e4":"code","b8e5f727":"code","4712a202":"code","6de98ac7":"code","bee39723":"code","91b61989":"code","8a67e3b1":"code","5e2d8409":"code","86da5326":"code","53a0cada":"code","3b419dc5":"code","4bd0fd6d":"code","de4afa52":"code","00bcdc68":"code","9d29a0cd":"code","f1a32a5c":"code","d8f67154":"code","68c89bdb":"code","0e75f70b":"code","6565cdd4":"code","776972e4":"code","345e7a20":"code","6de8c04b":"code","11444c1d":"code","7ad7a0ae":"code","4cd161be":"code","0bfddb3d":"code","0037cb8d":"code","911d9a6b":"code","6bd6cdfc":"code","b664bde7":"code","ff5c40c1":"code","2ae31b5e":"code","c96accab":"code","be72b184":"code","e301f398":"code","91301eaf":"code","f033b3ed":"code","f7bb6bec":"code","49152fc8":"code","16d94611":"code","5f9e8c64":"code","8b35e56c":"code","e476cbb1":"code","b1875e4d":"code","75f8eaf5":"code","32e7e72a":"code","d150cbee":"code","ee82c83c":"code","77620eab":"code","01effe00":"code","ebb6b839":"code","5b3bec55":"code","e74703e1":"code","4e6fe920":"markdown","56c9c338":"markdown","2f867b58":"markdown","675ce2e3":"markdown","45611ae7":"markdown","fbb5c5d0":"markdown","4ebfa218":"markdown","d4a9a5ea":"markdown","2ab7248f":"markdown"},"source":{"70a29bac":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport re\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c3e87a46":"# Data Loading\ndf = pd.read_csv('\/kaggle\/input\/bengaluru-house-price-data\/Bengaluru_House_Data.csv')","cca73dc9":"# Making a copy pf dataframe as data\ndata=df.copy()","482bde61":"# Data Info\ndata.info()","f1758c56":"data.isna().sum()\/data.shape[0]*100","f3010a51":"# Dealing Missing Values.\ndata.isna().sum()","8531bb20":"# Society Column-\ndata['society'].fillna(\"Info Not available\",inplace = True)","e35e59e4":"# Location Column--\ndata[data.location.isna()]","e9c42bc1":"# Looking for same society\ndata[data.society=='Grare S']","dfe709e6":"data.location.fillna('Anantapura',inplace=True)","12ac2b80":"# Size Column--\ndata[data['size'].isna()]","c0d05cd9":"data[data.society=='Orana N']","386ac574":"data.area_type.unique()","01684693":"# Will look in missing Value later.","33fdafdc":"# Total Sqft column- dealing with range value data and other sq. unit data.","6882cd99":"def preprocess_total_sqft(my_list):\n    if len(my_list) == 1:\n        \n        try:\n            return float(my_list[0])\n        except:\n            strings = ['Sq. Meter', 'Sq. Yards', 'Perch', 'Acres', 'Cents', 'Guntha', 'Grounds']\n            split_list = re.split('(\\d*.*\\d)', my_list[0])[1:]\n            area = float(split_list[0])\n            type_of_area = split_list[1]\n            \n            if type_of_area == 'Sq. Meter':\n                area_in_sqft = area * 10.7639\n            elif type_of_area == 'Sq. Yards':\n                area_in_sqft = area * 9.0\n            elif type_of_area == 'Perch':\n                area_in_sqft = area * 272.25\n            elif type_of_area == 'Acres':\n                area_in_sqft = area * 43560.0\n            elif type_of_area == 'Cents':\n                area_in_sqft = area * 435.61545\n            elif type_of_area == 'Guntha':\n                area_in_sqft = area * 1089.0\n            elif type_of_area == 'Grounds':\n                area_in_sqft = area * 2400.0\n            return float(area_in_sqft)\n        \n    else:\n        return (float(my_list[0]) + float(my_list[1]))\/2.0","1629d0bf":"data['total_sqft'] = data.total_sqft.str.split('-').apply(preprocess_total_sqft)","61d8fd11":"data.groupby('size')['total_sqft'].mean()","accd5041":"data['size'].unique()","0ffc06fd":"data['size']","083fc5e5":"data.head()","5ef271ae":"data.isnull().sum()","f2c71f31":"data[data['size'].isna()]","4c1d8013":"sqft_list = data.groupby('size')['total_sqft'].mean()","88b6026c":"type(sqft_list)","dc8db5e4":"def closest_size(K):  \n    idx = (np.abs(sqft_list - K)).argmin() \n    return sqft_list.index[idx]","b8e5f727":"missing_size = data[data['size'].isna()]['total_sqft'].apply(closest_size)","4712a202":"missing_size.shape","6de98ac7":"missing_size","bee39723":"data.iloc[missing_size.index,3]=missing_size.values","91b61989":"# for i,j in zip(data['size'],data['total_sqft']):\n#     if ~(type(i)==str):\n#         i = closest(j)","8a67e3b1":"data.isnull().sum()","5e2d8409":"# making three column-- bedroom, hall, kitchen\n# Bedroom-\ndata['bedroom'] = data['size'].apply(lambda x: x.split(' ')[0] if isinstance(x,str) else np.nan)\ndata['bedroom'] = data['bedroom'].astype(float)\n\n\n# Hall-\ndef isHall(x):\n    if type(x)==str:\n        tokens = x.split(' ')\n        if tokens[1]=='BHK':\n            return 1\n        else:\n            return 0\n        \n        \n# Kitchen\ndef isKitchen(x):\n    if type(x)==str:\n        tokens = x.split(' ')\n        if (tokens[1]=='BHK')| (tokens[1]=='RK'):\n            return 1\n        else:\n            return 0","86da5326":"data['hall']=data['size'].apply(isHall,)\ndata['kitchen']=data['size'].apply(isKitchen)","53a0cada":"# Two column missing value- Bath and balcony.\n# can be filled with mode or as the above apraoch for size(based on sqft available)","3b419dc5":"import matplotlib.pyplot as plt","4bd0fd6d":"data.groupby('bath')['bedroom'].mean()","de4afa52":"# Bath\nbedroom_list_bath = data.groupby('bath')['bedroom'].mean()","00bcdc68":"df[df.bath==18]","9d29a0cd":"bedroom_list_bath","f1a32a5c":"data[data.bath==18]","d8f67154":"def closest_bath(K):  \n    idx = (np.abs(bedroom_list_bath - K)).argmin() \n    return bedroom_list_bath.index[idx]","68c89bdb":"missing_bath = data[data['bath'].isna()]['bedroom'].apply(closest_bath)","0e75f70b":"missing_bath.shape","6565cdd4":"missing_bath","776972e4":"data.iloc[missing_bath.index,6]=missing_bath.values","345e7a20":"# Balcony\nbedroom_list_balcony = data.groupby('balcony')['bedroom'].mean()","6de8c04b":"def closest_balcony(K):  \n    idx = (np.abs(bedroom_list_balcony - K)).argmin() \n    return bedroom_list_balcony.index[idx]","11444c1d":"missing_balcony = data[data['balcony'].isna()]['bedroom'].apply(closest_balcony)","7ad7a0ae":"data.iloc[missing_balcony.index, 7]=missing_balcony.values","4cd161be":"data.isnull().sum()","0bfddb3d":"data.isnull().sum()","0037cb8d":"data.head()","911d9a6b":"data.describe()","6bd6cdfc":"data[data.bath>10]","b664bde7":"data.iloc[344]","ff5c40c1":"df.loc[344]","2ae31b5e":"df[df.bath>10]","c96accab":"data.isnull().sum()","be72b184":"data.info()","e301f398":"# No need to have size- as all data has been extracted in bedroom hall and kitchen column.\ndata.drop('size',axis=1 ,inplace=True)","91301eaf":"data.info()","f033b3ed":"data.area_type.unique()","f7bb6bec":"data.society.nunique()","49152fc8":"data.location.nunique()","16d94611":"plt.plot(data.location,data.price)","5f9e8c64":"data","8b35e56c":"data.availability.unique()","e476cbb1":"data.area_type.value_counts()","b1875e4d":"replace_area_type = {'Super built-up  Area': 0, 'Built-up  Area': 1, 'Plot  Area': 2, 'Carpet  Area': 3}\ndata['area_type'] = data.area_type.map(replace_area_type)","75f8eaf5":"def replacing_availabilty(string):\n    if string == 'Ready To Move':\n        return 0\n    elif string == 'Immediate Possession':\n        return 1\n    else:\n        return 2","32e7e72a":"data['availability'] = data.availability.apply(replacing_availabilty)","d150cbee":"data.head()","ee82c83c":"from sklearn.preprocessing import LabelEncoder","77620eab":"loc_encoder = LabelEncoder()\nloc_encoder.fit(data['location'])\ndata['location'] = loc_encoder.transform(data['location'])","01effe00":"data.head()","ebb6b839":"loc_encoder = LabelEncoder()\nloc_encoder.fit(data['society'])\ndata['society'] = loc_encoder.transform(data['society'])","5b3bec55":"data.head()","e74703e1":"data.info()","4e6fe920":"# Filling size nan value--\n* Taking total_sqft and comparing it with mean of groupby on size data and fill with closest one.","56c9c338":"## **Labelling the column 'society'**\n\nUsing LabelEncoder to convert locations into numerals.","2f867b58":"1. **Dealing with Missing Values**\n2. **Removing Duplicates**\n3. **Dealing With Inconsistancy**\n3. **Reshaping Data**","675ce2e3":"1 BHK- 1 Bedroom hall and Kitchen\n\n1 RK- 1 Room(Bedroom+hall combined) and Kitchen","45611ae7":"## **Labelling the column 'location'**\n\nUsing LabelEncoder to convert locations into numerals.","fbb5c5d0":"**Converting the categorical values in the column 'availability' into 3 categories.**\n* Ready to move\n* Immediate Possession\n* Others","4ebfa218":"**Insights from info and looking at data**\n* There are some null Values in out Data set.\n* Irrelevant data types of columns- total-sqft, bath, balcony\n* Availability column - Non Consistant data\n* Size Column- need to extract numeric data\n* Total-sqft column- have range value and some in other unit(sq. meter...etc).\n* Location column- One missing data\n* Society Column-- 41% data missing(Lot of data is missing)","d4a9a5ea":"Above for Society Grare S location is Anantapura.","2ab7248f":"## **Labeling- area_type column**\n4-unique categories"}}