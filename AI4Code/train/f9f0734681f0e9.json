{"cell_type":{"22b800a5":"code","274dc653":"code","cca88ce2":"code","b2bd931b":"code","2812546d":"code","aa098929":"code","a126c6b0":"code","ecc769c3":"code","3d4d0705":"code","3a6b39e9":"code","4a32ce79":"code","32004bf6":"code","218f225a":"code","30853561":"code","33bebb39":"code","04740ae5":"code","43798421":"code","f32ed946":"code","b8400078":"code","7926ca8d":"code","465b8769":"code","8bf4b84d":"code","71af357d":"code","cd81576a":"code","04ed7230":"code","f60c18c4":"code","3132ed5d":"code","1eb13b9f":"code","3dca488b":"code","f4e67ea3":"code","fbdfebcd":"code","4339b36e":"code","7e80042f":"code","06f4356d":"code","d8a77233":"code","08884ca5":"code","104c41ba":"code","acb0175b":"code","c6b21608":"code","91c584b1":"code","3bc664d3":"markdown","caa2fbd3":"markdown","35608a63":"markdown","4f46dd28":"markdown","1d658b16":"markdown","4e32f3c0":"markdown","7d2a8002":"markdown","a8ef057b":"markdown","1567b128":"markdown","cb3a9018":"markdown","a040f983":"markdown","284ca6d4":"markdown","2bc03f71":"markdown","733c0a8d":"markdown","0431cb09":"markdown","0712cd29":"markdown"},"source":{"22b800a5":"import numpy as np\nimport pandas as pd\n\nimport re\nimport nltk\nfrom nltk.corpus import stopwords\nfrom nltk.stem.porter import PorterStemmer\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.preprocessing import FunctionTransformer\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.model_selection import train_test_split, cross_val_score\nfrom sklearn.naive_bayes import GaussianNB, MultinomialNB, BernoulliNB\n\nfrom sklearn.metrics import accuracy_score","274dc653":"df = pd.read_csv('..\/input\/imdb-dataset-of-50k-movie-reviews\/IMDB Dataset.csv')","cca88ce2":"df.head()","b2bd931b":"# One review\ndf['review'][0]","2812546d":"df.shape","aa098929":"df.info()","a126c6b0":"df['sentiment'].replace({'positive': 1, 'negative': 0}, inplace=True)","ecc769c3":"df.head()","3d4d0705":"# Testing the RegEx\nclean = re.compile('<.*?>')\nre.sub(clean,'',df.iloc[2].review)","3a6b39e9":"# Function to clean HTML tags\ndef clean_html(text):\n    clean = re.compile('<.*?>')\n    return re.sub(clean,'',text)","4a32ce79":"# Removing HTML tags from reviews column\ndf['review'] = df['review'].apply(clean_html)\ndf.head()","32004bf6":"def convert_lower(text):\n    return text.lower()","218f225a":"df['review'] = df['review'].apply(convert_lower)\ndf.head()","30853561":"def remove_special(text):\n    x=''\n    for t in text:\n        if t.isalnum():\n            x=x+t\n        else:\n            x=x+' '\n    \n    return x","33bebb39":"df['review'] = df['review'].apply(remove_special)\ndf.head()","04740ae5":"def remove_stopwords(text):\n    x = []\n    for i in text.split():\n        if i not in stopwords.words('english'):\n            x.append(i)\n    \n    # Transporting all the contents of x to y\n    y = x[:]\n    x.clear()\n    return y","43798421":"df['review'] = df['review'].apply(remove_stopwords)\ndf.head()","f32ed946":"ps = PorterStemmer()","b8400078":"y = []\ndef stem_words(text):\n    for i in text:\n        y.append(ps.stem(i))\n    z = y[:]\n    y.clear()\n    return z","7926ca8d":"df['review'] = df['review'].apply(stem_words)","465b8769":"# Join back\ndef join_back(list_input):\n    return \" \".join(list_input)","8bf4b84d":"df['review'] = df['review'].apply(join_back)\ndf.head()","71af357d":"cv = CountVectorizer(max_features=5000)","cd81576a":"X = cv.fit_transform(df['review']).toarray()","04ed7230":"X.shape","f60c18c4":"y = df.iloc[:,-1].values\ny.shape","3132ed5d":"clf1 = GaussianNB()\nclf2 = MultinomialNB()\nclf3 = BernoulliNB()","1eb13b9f":"print(\"GaussianNB accuracy : \", cross_val_score(clf1,X,y,cv=10,scoring='accuracy').mean()*100 , ' %')\nprint(\"MultinomialNB accuracy : \", cross_val_score(clf2,X,y,cv=10,scoring='accuracy').mean()*100 , ' %')\nprint(\"BernoulliNB accuracy : \", cross_val_score(clf3,X,y,cv=10,scoring='accuracy').mean()*100 , ' %')","3dca488b":"clf3.fit(X,y)","f4e67ea3":"trnf1 = FunctionTransformer(func = clean_html)\n# Eg:\ntrnf1.transform(\"<p> Swades is an excellent, mindblowing movie played by Shah Rukh Khan <\/p>\")","fbdfebcd":"trnf2 = FunctionTransformer(func = convert_lower)\n# Eg: \ntrnf2.transform(' Swades is an excellent, mindblowing movie played by Shah Rukh Khan ')","4339b36e":"trnf3 = FunctionTransformer(func = remove_special)\n# Eg: \ntrnf3.transform(' swades is an excellent, mindblowing movie played by shah rukh khan ')","7e80042f":"trnf4 = FunctionTransformer(func = remove_stopwords)\n# Eg: \ntrnf4.transform(' swades is an excellent  mindblowing movie played by shah rukh khan ')","06f4356d":"trnf5 = FunctionTransformer(func = stem_words)\n# Eg: \ntrnf5.transform(['swades',\n 'excellent',\n 'mindblowing',\n 'movie',\n 'played',\n 'shah',\n 'rukh',\n 'khan'])","d8a77233":"trnf6 = FunctionTransformer(func = join_back)\n# Eg: \ntrnf6.transform(['swade', 'excel', 'mindblow', 'movi', 'play', 'shah', 'rukh', 'khan'])","08884ca5":"pipe = Pipeline([\n    ('trnf1',trnf1),\n    ('trnf2',trnf2),\n    ('trnf3',trnf3),\n    ('trnf4',trnf4),\n    ('trnf5',trnf5),\n    ('trnf6',trnf6)\n])","104c41ba":"review1 = 'Bhool Bhoolaiya, Phir Hera pheri, De Dana Dan and Bhaagam Bhaag are a few of the good comedy movies played by Akshay Kumar as a lead actor'\nreview2 = 'Golmaal 2 is the worst movie in the entire frenchise'","acb0175b":"def sentiment_analyzer(text):\n    buffer = []\n    buffer.append(pipe.transform(text))\n    estimator = clf3.predict(cv.transform(buffer))[0]\n\n    if estimator == 0:\n        return 'the review is negative'\n    else: \n        return 'the review is positive'","c6b21608":"sentiment_analyzer(review1)","91c584b1":"sentiment_analyzer(review2)","3bc664d3":"## Removing HTML tags using RegEx","caa2fbd3":"## Removing the stopwords","35608a63":"## Removing Special characters","4f46dd28":"# Text Cleaning \n\n1. Remove HTML tags\n2. Remove special characters\n3. Converting everything to lowercase\n4. Removing stopwords\n5. Stemming ( playing, played, plays, player, players, playful ------> play )","1d658b16":"# Vectorization [ Bag of Words ]","4e32f3c0":"# Importing required libraries","7d2a8002":"## Converting all the reviews to lower case","a8ef057b":"# ML Algorithm","1567b128":"## ***We have now built a pipeline which can be readily deployed on a testing environment wherein we just need to input the reviews and then run it down the pipeline of function transformers which preprocess our data. The Bernoulli Naive Bayes ML model would then predict the proprocessed data resulting in either a positive or a negative review***","cb3a9018":"# ***Building readily deployable Pipeline***","a040f983":"# Problem statement description\n\n*IMDB dataset having 50K movie reviews for natural language processing or Text analytics.\nThis is a dataset for binary sentiment classification containing substantially more data than previous benchmark datasets. We provide a set of 25,000 highly polar movie reviews for training and 25,000 for testing. So, predict the number of positive and negative reviews using either classification or deep learning algorithms.\nFor more dataset information, please go through the following link,\nhttp:\/\/ai.stanford.edu\/~amaas\/data\/sentiment\/*","284ca6d4":"***It is clearly visible from the cross validated results that Bernoulli Naive Bayes works better than any other algorithm with a mean accuracy of 84.73%***","2bc03f71":"## ***Steps*** [ Plan of attack ]\n\n1. Text Preprocessing\n    - Removal of HTML tags. ( Due to inefficient web scraping of the data ) \n    - Removal of Stopwords which have no contribution in the analysis ( a, and, the, or, many, which,...) \n    - Removing the Special characters. For our usecase (differentiating the samtiment between positive and negative), special characters aren't required\n    \n    \n2. Vectorization of Data (Technique : Bag of Words)\n\n3. Apply appropriate ML algorithm\n\n4. Hyperparameter Tuning\n\n5. Building deployment ready pipelines","733c0a8d":"## Character Encoding the sentiment column","0431cb09":"No missing values in both the columns","0712cd29":"## Stemming"}}