{"cell_type":{"1cb15b45":"code","1fc15f34":"code","b2580e09":"code","e064fe20":"code","99a7669f":"code","52f096aa":"code","c8c8da77":"code","eb1e8af7":"code","686138df":"code","313c1c6d":"code","346068f0":"code","9baf65e0":"code","53fd2ae6":"code","0cd80ff5":"code","ba929a87":"code","9a95c504":"code","f519d7c7":"code","55ed6746":"code","7c050075":"code","af662800":"code","93a6519c":"code","3978c971":"code","30ff00df":"code","3fe23b17":"code","0a63d395":"code","ed13c75b":"code","c92729c9":"markdown","eb1e1d06":"markdown","ce3df039":"markdown"},"source":{"1cb15b45":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1fc15f34":"# Import Libraries\nimport pandas as pd\nimport numpy as np","b2580e09":"# Import Dataset\ndataset = pd.read_csv('\/kaggle\/input\/preprocessing-tool-kit\/Churn_Modelling.csv')\nX = dataset.iloc[:, 3:-1].values\ny = dataset.iloc[:, -1].values","e064fe20":"# Encoding the categorical data\nfrom sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\nX[:,2] = le.fit_transform(X[:, 2])","99a7669f":"X","52f096aa":"from sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder\nct = ColumnTransformer(transformers = [('encoder', OneHotEncoder(), [1])], remainder='passthrough')\nX = np.array(ct.fit_transform(X))","c8c8da77":"# Splitting the dataset into train and test\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)\nprint(X_train.shape)\nprint(X_test.shape)\nprint(y_train.shape)\nprint(y_test.shape)","eb1e8af7":"# Feature selection\nfrom sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.fit_transform(X_test)","686138df":"import tensorflow\ntensorflow.__version__","313c1c6d":"# Initializing the ANN\nann = tensorflow.keras.Sequential()","346068f0":"# Adding first input layer and the first hidden layer\nann.add(tensorflow.keras.layers.Dense(units = 6, activation = 'relu'))","9baf65e0":"# Adding second hidden layer\nann.add(tensorflow.keras.layers.Dense(units = 6, activation = 'relu'))","53fd2ae6":"# Adding the output layer\nann.add(tensorflow.keras.layers.Dense(units = 1, activation = 'sigmoid'))","0cd80ff5":"# Training the ANN\nann.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])","ba929a87":"ann.fit(X_train, y_train, batch_size = 32, epochs=100)","9a95c504":"y_pred = ann.predict(X_test)","f519d7c7":"y_pred","55ed6746":"y_pred = np.array([1 if i >= 0.5 else 0 for i in y_pred])","7c050075":"print(np.concatenate((y_test.reshape(len(y_test),1),y_pred.reshape(len(y_pred),1)),1))","af662800":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, y_pred)\nprint(cm)","93a6519c":"from sklearn.metrics import accuracy_score\nprint(\"Accuracy Score is - {}\".format(accuracy_score(y_test, y_pred)))","3978c971":"Unknown_data = [600, 'France', 'Male', 40, 3, 60000, 2, 1, 1, 50000 ]","30ff00df":"Unknown_data[2] = le.transform([Unknown_data[2]])[0]","3fe23b17":"Unknown_data","0a63d395":"Unknown_data = ct.transform([Unknown_data])","ed13c75b":"ann.predict(sc.transform(Unknown_data)) > 0.5","c92729c9":"There is less chance of this customer will move out from bank.","eb1e1d06":"Predict customer exit or not using the below unknow data --\n\nUse our ANN model to predict if the customer with the following informations will leave the bank:\n\nGeography : France\n\nCredit Score : 600\n\nGender : Male\n\nAge : 40 years old\n\nTenure : 3 years\n\nBalance : $ 60000\n\nNumber of products : 2\n\nDoes this customer having credit card? Yes\n\nIs this customer an active member? Yes\n\nEstimated Salary : $ 50000\n\nSo, should we say good bye to customer","ce3df039":"Building the ANN\n\n**Initializing the ANN\n\n**Adding the input layer and first hidden layer\n\n**Adding the second hidden layer\n\n**Adding the output layer"}}