{"cell_type":{"13be2278":"code","986d2bb3":"code","ca0a5453":"code","8b8f73be":"code","4c8ee405":"code","929eadff":"code","0b0d2c4f":"code","7da978a2":"code","4218cc61":"code","ba75d694":"code","92be837f":"code","6e996cf8":"code","7cee4365":"code","6588920c":"code","3e7018d3":"code","dec02641":"markdown","13ac1574":"markdown","c829b26d":"markdown","f443b7cb":"markdown"},"source":{"13be2278":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nimport nltk\nnltk.download('punkt')\nnltk.download('stopwords')\nnltk.download('wordnet')\nfrom nltk.corpus import stopwords\nfrom nltk.util import ngrams\nfrom nltk.tokenize import word_tokenize,sent_tokenize\nimport re\nimport string\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.feature_extraction.text import CountVectorizer\n\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.metrics import classification_report, confusion_matrix\nfrom sklearn.linear_model import PassiveAggressiveClassifier\nfrom sklearn.svm import SVC\n\nfrom wordcloud import WordCloud","986d2bb3":"dados = pd.read_csv(\"\/kaggle\/input\/brazilian-election-fake-news-2018\/rumor-election-brazil-2018.csv\",delimiter=\";\")\ndados.head()","ca0a5453":"def clean_text(text):\n    \n    text = str(text).lower() \n    text = re.sub('\\[.*?\\]','', text)\n    text = re.sub('https?:\/\/\\S+|www\\.\\S+', '', text)\n    text = re.sub('<.*?>+','', text)\n    text = re.sub('[%s]' % re.escape(string.punctuation), '', text)\n    text = re.sub('\\n', '', text)\n    text = re.sub('\\w*\\d\\w*', '', text)\n    \n    return text\n\ndados['texto'] = dados['texto'].apply(lambda x:clean_text(x))","8b8f73be":"stop = stopwords.words('portuguese')\ndados['texto'] = dados['texto'].apply(lambda x: ' '.join([word for word in x.split() if word not in (stop)]))","4c8ee405":"def lemmatize_words(text):\n    wnl = nltk.stem.WordNetLemmatizer()\n    lem = ' '.join([wnl.lemmatize(word) for word in text.split()])    \n    return lem\n\ndados['texto'] = dados['texto'].apply(lemmatize_words)","929eadff":"y = dados['rotulo']\nX = dados['texto']\n\nX_train, X_test, y_train, y_test = train_test_split(X, y,test_size=0.2,random_state=53)","0b0d2c4f":"std_list = nltk.corpus.stopwords.words('portuguese')","7da978a2":"count_vectorizer = CountVectorizer(stop_words=std_list)\n\ncount_train = count_vectorizer.fit_transform(X_train.values)\ncount_test = count_vectorizer.transform(X_test.values)","4218cc61":"def plot_confusion_matrix(y_test, y_pred):\n    cm = confusion_matrix(y_test, y_pred, labels=['FALSO','VERDADE'])\n    clr = classification_report(y_test, y_pred, labels=['FALSO','VERDADE'])\n    \n    plt.figure(figsize=(6, 6))\n    sns.heatmap(cm, annot=True, fmt='g', vmin=0, cmap='Blues', cbar=False)\n    plt.xticks(ticks=[0.5, 1.5], labels=['FALSO','VERDADE'])\n    plt.yticks(ticks=[0.5, 1.5], labels=['FALSO','VERDADE'])\n    plt.xlabel(\"Predi\u00e7\u00e3o\")\n    plt.ylabel(\"Real\")\n    plt.title(\"Matriz de Confus\u00e3o\")\n    plt.show()","ba75d694":"nb_classifier1 = MultinomialNB(alpha=10)\nnb_classifier1.fit(count_train, y_train)\n\npred1 = nb_classifier1.predict(count_test)\n\nprint(classification_report(y_test, pred1, target_names = ['FALSO','VERDADE']))\n\nplot_confusion_matrix(y_test,pred1)","92be837f":"svc_model2 = SVC(kernel='rbf', gamma= 0.2)\nsvc_model2.fit(count_train, y_train)\n\nprediction2 = svc_model2.predict(count_test)\n\nprint(classification_report(y_test, prediction2, target_names = ['FALSO','VERDADE']))\nplot_confusion_matrix(y_test, prediction2)","6e996cf8":"pac=PassiveAggressiveClassifier(C=300,max_iter=100)\npac.fit(count_train, y_train)\n\nprediction = pac.predict(count_test)\n\nprint(classification_report(y_test, prediction, target_names = ['FALSO','VERDADE']))\nplot_confusion_matrix(y_test, prediction)","7cee4365":"def generate_word_cloud(texto, title, color):\n    wordcloud = WordCloud(width = 800, height = 800, \n                        background_color =color,  \n                        min_font_size = 20).generate(texto) \n  \n    plt.figure(figsize = (15, 12)) \n    plt.imshow(wordcloud,interpolation='bilinear') \n    plt.axis(\"off\")\n    plt.title(title)\n    plt.show() ","6588920c":"real_news = \" \".join(dados[dados['rotulo']==\"VERDADE\"]['texto'])\n\ngenerate_word_cloud(real_news, 'Not\u00edcias Confi\u00e1veis', 'white')","3e7018d3":"fake_news = \" \".join(dados[dados['rotulo']==\"FALSO\"]['texto'])\n\ngenerate_word_cloud(fake_news, 'Not\u00edcias Falsas', 'black')","dec02641":"## ### PassiveAggressiveClassifier","13ac1574":"## WordCloud","c829b26d":"## Naive Bayes","f443b7cb":"## SVM"}}