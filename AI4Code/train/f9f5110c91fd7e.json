{"cell_type":{"9772b477":"code","1cea8536":"code","66bf68fb":"code","33f71c4b":"code","7825f03e":"code","3fa4a3d7":"markdown","d17b31be":"markdown","182303d5":"markdown","5c1ae3bb":"markdown","4ae20aa9":"markdown","5c259708":"markdown"},"source":{"9772b477":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Import data and skip 2nd row\ndat = pd.read_csv('..\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv',\n                  header=0, low_memory=False, skiprows=[1])","1cea8536":"plt.figure(figsize=(18, 6))\n\n# Log-transform time\ndat['log_time'] = np.log(dat['Time from Start to Finish (seconds)'].astype(int) + 1)\n#dat['Q1'] = pd.Categorical(dat.Q1) \n\n# Discard |x - mu|\/sigma > 3\nnorm_log_time = (dat['log_time'] - dat['log_time'].mean()) \/ dat['log_time'].std()\ndat.loc[norm_log_time.abs() > 3, 'Q1'] = np.nan\n\nsns.violinplot(x=pd.Categorical(dat.Q1) , y='log_time', data=dat)","66bf68fb":"# Q2 and Q4\ngb = dat.groupby('Q2')['Q4'].value_counts().unstack().apply(lambda x: x \/ x.sum(), axis=1)\n\ngb.plot(kind='bar', stacked=True, figsize=(18, 6))","33f71c4b":"dat['Q25'] = pd.Categorical(dat['Q25'])\nidx = np.argsort(dat['Q25'].cat.categories.str.replace('-[0-9,]+|\\$|>|,', '').astype(int))\ndat['Q25'] = dat['Q25'].cat.reorder_categories(dat['Q25'].cat.categories[idx])\n\n# Q2 and Q4\ngb = dat.groupby('Q25')['Q2'].value_counts().unstack().apply(lambda x: x \/ x.sum(), axis=1)\n\ngb.plot(kind='bar', stacked=True, figsize=(18, 4), xlabel='Salary(USD)', ylabel='Frequency')","7825f03e":"plt.figure(figsize=(12, 8))\n\n# Q8\n\n#gb = dat.groupby('Q2')['Q4'].value_counts().unstack().apply(lambda x: x \/ x.sum(), axis=1)\nlang = dat.loc[:, dat.columns.str.startswith('Q7_')]\nlang_labels = lang.apply(lambda x: x[x.notnull()].unique()[0]).tolist()\n\nlang_mat = lang.notnull().astype(int)\nco_occ = lang_mat.T.dot(lang_mat)\nsns.heatmap(co_occ, fmt='d', annot=True, xticklabels=lang_labels, yticklabels=lang_labels, cbar_kws={'label': 'No.Respondents'})","3fa4a3d7":"## Does response time relate to respondent age?\n\nHere we will check how response time distributes across the different age groups. For this I will log-transform response time, hoping to approximate a more normal distribution.","d17b31be":"Here we do not see many differences; interestingly those that \"prefer not to say\" their gender also report \"I prefer not to answer\" to Q4 the most. What about salary?\n\n## Does gender reflect differences in salary?","182303d5":"After dismissing points lying further than three standard deviations away from the mean - which for a standard normal distribution encompasses 99% of the observations - we see a clear tendency for older respondents to take longer in filling in the survey. To me this could be because i) young respondents are more agile, and \/ or ii) older respondents pay more attention to the different questions.\n\n## Does gender reflect differences in education?\n\nNext we can investigate differences in educational attainment among reported genders.","5c1ae3bb":"Here we see - unsurprisingly - Python taking the lead, followed by SQL.","4ae20aa9":"# Kaggle Survey 2021\n\nMy intent here is to look at things that were not covered in the report authored by Kaggle. For now this notebook tries to answer the questions:\n\n* Does response time relate to respondent age?\n* Does gender reflect differences in education?\n* How do programming languages compared with each other?\n\nThis is ongoing work; I will investigate further questions and release updates in the next few days.","5c259708":"Here we observe the clear men-majority in the participants, but also an apparent gender pay gap. To settle this we would need to run additional analysis and test hypotheses. Also interestingly, a large proportion of non-binary respondants claim to earn over 1,000,000USD a year; to me this seems to be largely compounded by unfaithful responses.\n\n## How do programming languages compare with each other?\n\nNow we focus on which programming languages are used together the most, using a co-occurrence matrix."}}