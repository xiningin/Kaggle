{"cell_type":{"66ef5e2e":"code","71a1fe40":"code","acd1a57b":"code","94f0f94c":"code","45c96876":"code","356c7f9f":"code","b4477623":"code","9317db0f":"code","a1a8a39a":"code","f1042876":"code","48cf8c78":"code","17ec881c":"code","af99803f":"code","55908a18":"code","471363bc":"code","8bd857e3":"code","680d00d1":"code","95b72675":"code","e471afca":"code","1355123e":"code","9043e541":"code","18fba7f2":"code","af122c21":"markdown"},"source":{"66ef5e2e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt \n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","71a1fe40":"train_data = pd.read_csv('\/kaggle\/input\/forest-cover-type-prediction\/train.csv')\ntrain_data.head()","acd1a57b":"test_data = pd.read_csv('\/kaggle\/input\/forest-cover-type-prediction\/test.csv')\ntest_data.head()","94f0f94c":"test_data.info()","45c96876":"train_data.info()","356c7f9f":"train_data['Slope'].plot(kind='hist')","b4477623":"train_data['Elevation'].plot(kind='hist')","9317db0f":"test_data['Elevation'].plot(kind='hist')","a1a8a39a":"train_data['Cover_Type'].value_counts()#from results it is visible that nothing is over sampled or under sampled","f1042876":"from sklearn.model_selection import train_test_split ","48cf8c78":"X=train_data.drop(labels=['Id','Cover_Type'],axis=1)\ny=train_data['Cover_Type']","17ec881c":"X_train, X_val, y_train,y_val = train_test_split(X,y,random_state=40)","af99803f":"print(X_train.shape,y_train.shape)\nprint(X_val.shape,y_val.shape)","55908a18":"from sklearn.ensemble import RandomForestClassifier","471363bc":"rfc=RandomForestClassifier(n_estimators=70)","8bd857e3":"rfc.fit(X_train,y_train)","680d00d1":"rfc.score(X_val,y_val)","95b72675":"predict=rfc.predict(test_data.drop(labels=['Id'],axis=1))","e471afca":"submission = pd.DataFrame(data=predict,columns=['Cover_Type'])\nsubmission.head()","1355123e":"submission['Id'] = test_data['Id']\nsubmission.set_index('Id',inplace=True)","9043e541":"submission.head()","18fba7f2":"submission.to_csv('Submission.csv')","af122c21":"test_data['Slope'].plot(kind='hist')"}}