{"cell_type":{"e0c16ffb":"code","c5bb6488":"code","715346d1":"code","4153fd8d":"code","53e4dd0b":"code","180d66ae":"code","617e81e7":"code","3ae61979":"code","b14d3870":"code","4356899b":"code","4acede7e":"code","286c1741":"code","f3ded68c":"code","f939e2d9":"code","9dedcf08":"markdown","5449ea97":"markdown","f2285d57":"markdown"},"source":{"e0c16ffb":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns \nfrom sklearn.model_selection import cross_val_score\npd.set_option('display.max_columns', None)\n#pd.set_option('display.max_rows', None)\n\n\ntrain=pd.read_csv('..\/input\/tabular-playground-series-dec-2021\/train.csv')\ntest=pd.read_csv('..\/input\/tabular-playground-series-dec-2021\/test.csv')","c5bb6488":"plt.figure(figsize=(14,5))\ntarget_values = train['Cover_Type'].value_counts()\nsns.barplot(x=target_values.index, y=target_values.values,linewidth=1.5, facecolor='blue',\n                 errcolor=\".2\", edgecolor=\".2\")\nplt.title(\"Target unique values\", fontdict={'fontsize':20})\nplt.show()","715346d1":"y=train.pop('Cover_Type')\nid_=train.pop('Id')\nid_test=test.pop('Id')\ny=pd.DataFrame(y)","4153fd8d":"print(f'1',y[y['Cover_Type']==1].shape)\nprint(f'2',y[y['Cover_Type']==2].shape)\nprint(f'3',y[y['Cover_Type']==3].shape)\nprint(f'4',y[y['Cover_Type']==4].shape)\nprint(f'5',y[y['Cover_Type']==5].shape)\nprint(f'6',y[y['Cover_Type']==6].shape)\nprint(f'7',y[y['Cover_Type']==7].shape)","53e4dd0b":"sampling_strategy = { 1: 1468136, 2: 1468136, 3: 195712, 4: 377, 5: 1, 6: 11426, 7: 62261}","180d66ae":"from imblearn.under_sampling import RandomUnderSampler\nrus = RandomUnderSampler(sampling_strategy=sampling_strategy,random_state=42, replacement=True)# fit predictor and target variable\nx_rus, y_rus = rus.fit_resample(train, y)","617e81e7":"plt.figure(figsize=(14,5))\ntarget_values = y_rus['Cover_Type'].value_counts()\nsns.barplot(x=target_values.index, y=target_values.values,linewidth=1.5, facecolor='blue',\n                 errcolor=\".2\", edgecolor=\".2\")\nplt.title(\"Target unique values\", fontdict={'fontsize':20})\nplt.show()","3ae61979":"print(f'1',y_rus[y_rus['Cover_Type']==1].shape)\nprint(f'2',y_rus[y_rus['Cover_Type']==2].shape)\nprint(f'3',y_rus[y_rus['Cover_Type']==3].shape)\nprint(f'4',y_rus[y_rus['Cover_Type']==4].shape)\nprint(f'5',y_rus[y_rus['Cover_Type']==5].shape)\nprint(f'6',y_rus[y_rus['Cover_Type']==6].shape)\nprint(f'7',y_rus[y_rus['Cover_Type']==7].shape)","b14d3870":"from catboost import CatBoostClassifier\nmodel = CatBoostClassifier( task_type = 'GPU',devices = '0')\nmodel.fit(x_rus, y_rus)\n\n","4356899b":"score = cross_val_score(model, x_rus, y_rus)","4acede7e":"print('model Score', round(score.mean() * 100, 2).astype(str) + '%')","286c1741":"sub = pd.read_csv('..\/input\/tabular-playground-series-dec-2021\/sample_submission.csv')\nsub['Cover_Type'] =model.predict(test)\nsub.to_csv(\"submission.csv\",index=False)\nsub.head()","f3ded68c":"model = CatBoostClassifier( task_type = 'GPU',devices = '0')\nmodel.fit(train, y)\n\nscore = cross_val_score(model, train, y)","f939e2d9":"print('model Score', round(score.mean() * 100, 2).astype(str) + '%')","9dedcf08":"**We have seven varieties, of which two are very few\nThe strategy that we will do is to take a part of the samples with a large number to make their number equal to the smaller samples**","5449ea97":"![RandomUnderSampler](http:\/\/https:\/\/www.google.com\/url?sa=i&url=https%3A%2F%2Fdataaspirant.com%2F17-undersampling%2F&psig=AOvVaw2oyOG6xBcBwKBr3RSMV4AG&ust=1638436338321000&source=images&cd=vfe&ved=0CAsQjRxqFwoTCLjB45GhwvQCFQAAAAAdAAAAABAJ)","f2285d57":"**Let's see the result of all the data (unbalanced)**"}}