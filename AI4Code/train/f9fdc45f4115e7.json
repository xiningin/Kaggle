{"cell_type":{"2213ab03":"code","886a7be2":"code","0a7b9733":"code","3d6992f7":"code","cadf1794":"code","911d081d":"code","09163d18":"code","2ca4a539":"code","0f731bf1":"code","764fbd38":"code","5c8e9580":"code","fb5c5fc1":"markdown","df94f862":"markdown"},"source":{"2213ab03":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","886a7be2":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport time\nimport math\nimport pickle\nimport warnings\nimport scipy\nfrom sklearn import linear_model \nfrom sklearn.metrics import auc\nfrom IPython.display import display \nwarnings.filterwarnings(\"ignore\")\nwarnings.simplefilter('ignore')\n%matplotlib inline","0a7b9733":"df = pd.read_csv('\/kaggle\/input\/person-attributes\/dataset_person_attributes_train.csv')","3d6992f7":"# height(feet),weight(lbs), foot size(inches)\ndf.head(10)","cadf1794":"df.columns","911d081d":"from sklearn.naive_bayes import GaussianNB","09163d18":"train_cols = ['height', 'weight', 'foot size']\nresponse_col = ['Person']","2ca4a539":"clf = GaussianNB()\nclf.fit(df[train_cols], df[response_col])","0f731bf1":"df_test = pd.read_csv('\/kaggle\/input\/person-attributes\/dataset_person_attributes_test.csv')\ndf_test.head()","764fbd38":"clf.predict(df_test[train_cols])","5c8e9580":"np.round(clf.predict_proba(df_test[train_cols]),2)","fb5c5fc1":"<h1> Result <\/h1>\n<font style=\"font-size:15px;color:blue;font-style: italic;\" >\n<li>The first instance gets classified as female and second and third test-instances gets classified as male. \n<li>We can clearly see the third-instance is a boundary case the model is more or less giving equal probability of being a male or female. \n<\/font>","df94f862":"<h1> Task Details <\/h1>\n<br>\n\n<font style=\"font-size:15px;color:blue;font-style: italic;\" >\nThe task is to classify whether a given person is a male or a female based on the measured features. The features include height, weight, and foot size.  \n<\/font>\n<figure><center>\n<img src = 'https:\/\/image.freepik.com\/free-vector\/gender_24908-54123.jpg' \/>  <figcaption><b>Image Source:<\/b><a href='https:\/\/www.freepik.com\/free-vector\/gender_4811951.htm'>https:\/\/www.freepik.com\/free-vector\/gender_4811951.htm <\/a><\/figcaption><\/center><\/figure>\n"}}