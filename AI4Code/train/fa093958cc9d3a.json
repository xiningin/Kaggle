{"cell_type":{"f30988ac":"code","e7ea7a69":"code","38d9929c":"code","153a5a1b":"code","4c2307ea":"code","88a1f1bc":"code","5eed4615":"code","baa05060":"code","ade16d9a":"code","7a15ac1d":"code","136ea87f":"code","015b300c":"code","ce1666bf":"code","b5f12131":"code","3cfe5b92":"code","5610b24a":"code","59ddc716":"code","aa2e12e1":"code","cccc7023":"code","aa490b74":"code","534a2009":"markdown","45a3cbbd":"markdown","90b16858":"markdown","2eb48e87":"markdown","9292d2ea":"markdown","409c360f":"markdown","8d7f5556":"markdown","8009f443":"markdown","cc1c6b26":"markdown","e61cbc7f":"markdown","498b080d":"markdown"},"source":{"f30988ac":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.metrics import confusion_matrix\nfrom keras.utils import to_categorical\nfrom keras.models import Sequential\nfrom keras.layers import Dense,Dropout,Flatten,Conv2D,MaxPool2D\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","e7ea7a69":"train_dataset=pd.read_csv(\"..\/input\/fashionmnist\/fashion-mnist_train.csv\")\ntest_dataset=pd.read_csv(\"..\/input\/fashionmnist\/fashion-mnist_test.csv\")","38d9929c":"sns.countplot(train_dataset.label)\nplt.title(\"Count Plot\")\nplt.xlabel(\"Labels\")\nplt.ylabel(\"Count\")\nplt.show()","153a5a1b":"x_train=train_dataset.iloc[:,1:].values\ny_train=train_dataset.iloc[:,0].values\nx_test=test_dataset.iloc[:,1:].values\ny_test=test_dataset.iloc[:,0].values","4c2307ea":"print(\"x train :\",x_train.shape)\nprint(\"y train :\",y_train.shape)\nprint(\"x test :\",x_test.shape)\nprint(\"y test :\",y_test.shape)","88a1f1bc":"x_train=x_train.reshape(x_train.shape[0],28,28,1)\nx_test=x_test.reshape(x_test.shape[0],28,28,1)\nprint(\"new x train shape :\",x_train.shape)\nprint(\"new x test shape :\",x_test.shape)","5eed4615":"img=x_train[48]\nplt.imshow(img.reshape(28,28))\nplt.title(y_train[48])\nplt.axis(\"off\")\nplt.show()","baa05060":"y_train=to_categorical(y_train,num_classes=10)\ny_test=to_categorical(y_test,num_classes=10)\nprint(\"new y train shape :\",y_train.shape)\nprint(\"new y test shape :\",y_test.shape)","ade16d9a":"x_train=x_train \/ 255.0\nx_test =x_test \/ 255.0","7a15ac1d":"model=Sequential()\n\nmodel.add(Conv2D(filters=100,kernel_size=(3,3),padding=\"same\",activation=\"relu\",input_shape=(28,28,1)))\nmodel.add(MaxPool2D(pool_size=(2,2)))\nmodel.add(Dropout(0.4))\n\nmodel.add(Conv2D(filters=100,kernel_size=(3,3),padding=\"same\",activation=\"relu\"))\nmodel.add(MaxPool2D(pool_size=(2,2)))\nmodel.add(Dropout(0.4))\n\nmodel.add(Flatten())\nmodel.add(Dense(206,activation=\"relu\"))\nmodel.add(Dropout(0.4))\nmodel.add(Dense(103,activation=\"relu\"))\nmodel.add(Dropout(0.4))\nmodel.add(Dense(10,activation=\"softmax\"))","136ea87f":"model.summary()","015b300c":"model.compile(optimizer=\"adam\",loss=\"categorical_crossentropy\",metrics=[\"accuracy\"])","ce1666bf":"hist=model.fit(x_train,y_train,batch_size=250,epochs=100,validation_data=(x_test,y_test))","b5f12131":"print(hist.history.keys())","3cfe5b92":"plt.plot(hist.history[\"loss\"],color=\"green\",label=\"Train Loss\")\nplt.plot(hist.history[\"val_loss\"],color=\"red\",label=\"Validation Loss\")\nplt.legend()\nplt.title(\"Loss Plot\")\nplt.xlabel(\"Number of Epochs\")\nplt.ylabel(\"Loss Values\")\nplt.grid()\nplt.show()","5610b24a":"plt.plot(hist.history[\"accuracy\"],color=\"green\",label=\"Train Accuracy\")\nplt.plot(hist.history[\"val_accuracy\"],color=\"red\",label=\"Validation Accuracy\")\nplt.legend()\nplt.title(\"Accuracy Plot\")\nplt.xlabel(\"Number of Epochs\")\nplt.ylabel(\"Accuracy Values\")\nplt.grid()\nplt.show()","59ddc716":"prediction=model.predict(x_test)","aa2e12e1":"predicted_classes=np.argmax(prediction,axis=1)\ny_true=np.argmax(y_test,axis=1)","cccc7023":"print(\"predicted classes shape :\",predicted_classes.shape)\nprint(\"y true shape :\",y_true.shape)","aa490b74":"cfm=confusion_matrix(y_true,predicted_classes)\nf,ax=plt.subplots(figsize=(10,10))\nsns.heatmap(cfm,annot=True,cmap=\"coolwarm\",linecolor=\"black\",linewidths=1,fmt=\".0f\",ax=ax)\nplt.xlabel(\"Real Values\")\nplt.ylabel(\"Predicted Values\")\nplt.show()","534a2009":"#### I converted csv file to arrray","45a3cbbd":"#### I loaded the train dataset and test dataset","90b16858":"#### I started to work my model","2eb48e87":"#### I reshaped the array's shape four dimension because CNN algorithm can work that","9292d2ea":"#### I categorized the labels","409c360f":"#### I normalized pixels of images","8d7f5556":"#### I observed the labels' numbers","8009f443":"# CONVOLUTIONAL NEURAL NETWORK","cc1c6b26":"#### I wanted to see an image","e61cbc7f":"#### I imported necessary libraries","498b080d":"#### I created my CNN model"}}