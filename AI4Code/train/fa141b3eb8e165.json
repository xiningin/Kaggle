{"cell_type":{"2fb027fb":"code","3be0fcac":"code","cfeffac7":"code","33fd984c":"code","4b43b275":"code","c95901e3":"code","722cb092":"code","3c0c838a":"code","bf36e558":"code","a9cc2074":"code","17c77b8a":"code","9b912a05":"code","cd276d46":"code","e377494a":"code","09e57735":"code","1626d0a8":"code","b19f3dac":"code","22b47716":"code","eafeaf8f":"code","768f1eca":"code","49939e9b":"code","8f0bffd4":"code","9f3896c5":"code","bb9ca478":"code","7e162597":"code","d4f746a2":"code","3eedd99c":"code","f04f8ee3":"code","5a60287d":"code","b20369dc":"code","ce1791fc":"code","cb872c28":"code","31b6d2ea":"code","3831a627":"markdown","2c5c46ca":"markdown","5b9bbce2":"markdown","b92cc49d":"markdown","21f94271":"markdown","2a6c0451":"markdown","4dc65508":"markdown","2f3d51c1":"markdown","86d978ec":"markdown","a548e9bb":"markdown","e6f66ce1":"markdown","cb56b59e":"markdown","3840023d":"markdown","7e911b99":"markdown","3839d813":"markdown","d6bc454b":"markdown","49b96da0":"markdown","d075d753":"markdown","88f5fad2":"markdown","6be65df4":"markdown","6a2597c2":"markdown","fda87b86":"markdown","07c4a491":"markdown","1fe47668":"markdown","ecc952d9":"markdown","ee5a0d76":"markdown","30c04cf1":"markdown","09334be9":"markdown","777e86e9":"markdown","47a23b83":"markdown"},"source":{"2fb027fb":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport shap\nimport os\npalette = ['#ffb6b9', '#fae3d9',\"#bbded6\",\"#8ac6d1\"]\nbackcolor = '#EAEAEA'\n%matplotlib inline\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","3be0fcac":"data = pd.read_csv('..\/input\/employee-future-prediction\/Employee.csv')\ndata.head()","cfeffac7":"data.info()","33fd984c":"print(len(data))\nprint(data.duplicated().sum())","4b43b275":"data = data.drop_duplicates()\nprint(len(data))","c95901e3":"sns.set_palette(palette)\nsm = data.shape[0]\nplt.figure(figsize=(10,6))\ng = sns.countplot(data=data,x=\"LeaveOrNot\",edgecolor=\"black\",linewidth=3)\ng.set_xlabel('LeaveOrNot', weight='bold', size=13,alpha=0.65)\ng.set_ylabel('LeaveOrNot_COUNTS', weight='bold', size=13,alpha=0.65)\ng.set_facecolor(backcolor)\ng.spines[['top', 'right','bottom']].set_visible(False)\ng.set_title(f\"LeaveOrNot percent\", size=15, weight='bold',fontname=\"Microsoft YaHei\",alpha=0.65)\nfor patch in g.patches:\n    x, height, width = patch.get_x(), patch.get_height(), patch.get_width()\n    g.text(x + width \/ 2, height + 10, f'{height} \/ {height \/ sm * 100:2.2f}%', va='center', ha='center', size=15, alpha=0.5,bbox={'facecolor': 'w', 'boxstyle': 'round4'}\n          )\nplt.show()","722cb092":"sns.set_palette(palette)\nsm = data.shape[0]\nplt.figure(figsize=(10,6))\ng = sns.countplot(data=data,x=\"Education\",edgecolor=\"black\",linewidth=3,hue=\"LeaveOrNot\")\ng.set_xlabel('Education', weight='bold', size=13,alpha=0.65)\ng.set_ylabel('Education_COUNTS', weight='bold', size=13,alpha=0.65)\ng.set_facecolor(backcolor)\ng.spines[['top', 'right','bottom']].set_visible(False)\ng.set_title(f\"Education percent\", size=15, weight='bold',fontname=\"Microsoft YaHei\",alpha=0.65)\nfor patch in g.patches:\n    x, height, width = patch.get_x(), patch.get_height(), patch.get_width()\n    g.text(x + width \/ 2, height + 10, f'{height} \/ {height \/ sm * 100:2.2f}%', va='center', ha='center', size=10, alpha=0.5,bbox={'facecolor': 'w', 'boxstyle': 'round4'}\n          )\nplt.show()","3c0c838a":"sns.set_palette(palette)\nsm = data.shape[0]\nplt.figure(figsize=(10,6))\ng = sns.countplot(data=data,x=\"JoiningYear\",edgecolor=\"black\",linewidth=3,hue=\"LeaveOrNot\")\ng.set_xlabel('JoiningYear', weight='bold', size=13,alpha=0.65)\ng.set_ylabel('JoiningYear_COUNTS', weight='bold', size=13,alpha=0.65)\ng.set_facecolor(backcolor)\ng.spines[['top', 'right','bottom']].set_visible(False)\ng.set_title(f\"JoiningYear percent\", size=15, weight='bold',fontname=\"Microsoft YaHei\",alpha=0.65)\nfor patch in g.patches:\n    x, height, width = patch.get_x(), patch.get_height(), patch.get_width()\n    g.text(x + width \/ 2, height + 10, f'{height} \/ {height \/ sm * 100:2.2f}%', va='center', ha='center', size=8, alpha=0.5,bbox={'facecolor': 'w', 'boxstyle': 'round4'}\n          )\nplt.show()","bf36e558":"sns.set_palette(palette)\nsm = data.shape[0]\nplt.figure(figsize=(10,6))\ng = sns.countplot(data=data,x=\"City\",edgecolor=\"black\",linewidth=3,hue=\"LeaveOrNot\")\ng.set_xlabel('City', weight='bold', size=13,alpha=0.65)\ng.set_ylabel('City_COUNTS', weight='bold', size=13,alpha=0.65)\ng.set_facecolor(backcolor)\ng.spines[['top', 'right','bottom']].set_visible(False)\ng.set_title(f\"City percent\", size=15, weight='bold',fontname=\"Microsoft YaHei\",alpha=0.65)\nfor patch in g.patches:\n    x, height, width = patch.get_x(), patch.get_height(), patch.get_width()\n    g.text(x + width \/ 2, height + 10, f'{height} \/ {height \/ sm * 100:2.2f}%', va='center', ha='center', size=8, alpha=0.5,bbox={'facecolor': 'w', 'boxstyle': 'round4'}\n          )\nplt.show()","a9cc2074":"sns.set_palette(palette)\nsm = data.shape[0]\nplt.figure(figsize=(10,6))\ng = sns.countplot(data=data,x=\"PaymentTier\",edgecolor=\"black\",linewidth=3,hue=\"LeaveOrNot\")\ng.set_xlabel('PaymentTier', weight='bold', size=13,alpha=0.65)\ng.set_ylabel('PaymentTier_COUNTS', weight='bold', size=13,alpha=0.65)\ng.set_facecolor(backcolor)\ng.spines[['top', 'right','bottom']].set_visible(False)\ng.set_title(f\"PaymentTier percent\", size=15, weight='bold',fontname=\"Microsoft YaHei\",alpha=0.65)\nfor patch in g.patches:\n    x, height, width = patch.get_x(), patch.get_height(), patch.get_width()\n    g.text(x + width \/ 2, height + 10, f'{height} \/ {height \/ sm * 100:2.2f}%', va='center', ha='center', size=8, alpha=0.5,bbox={'facecolor': 'w', 'boxstyle': 'round4'}\n          )\nplt.show()","17c77b8a":"plt.figure(figsize=(10,6))\nsns.catplot(data=data,kind='count',x=\"Age\",alpha=0.6,col=\"LeaveOrNot\",palette=[\"#8ac6d1\"])","9b912a05":"sns.set_palette(palette)\nsm = data.shape[0]\nplt.figure(figsize=(10,6))\ng = sns.countplot(data=data,x=\"Gender\",edgecolor=\"black\",linewidth=3,hue=\"LeaveOrNot\")\ng.set_xlabel('Gender', weight='bold', size=13,alpha=0.65)\ng.set_ylabel('Gender_COUNTS', weight='bold', size=13,alpha=0.65)\ng.set_facecolor(backcolor)\ng.spines[['top', 'right','bottom']].set_visible(False)\ng.set_title(f\"Gender percent\", size=15, weight='bold',fontname=\"Microsoft YaHei\",alpha=0.65)\nfor patch in g.patches:\n    x, height, width = patch.get_x(), patch.get_height(), patch.get_width()\n    g.text(x + width \/ 2, height + 10, f'{height} \/ {height \/ sm * 100:2.2f}%', va='center', ha='center', size=8, alpha=0.5,bbox={'facecolor': 'w', 'boxstyle': 'round4'}\n          )\nplt.show()","cd276d46":"sns.set_palette(palette)\nsm = data.shape[0]\nplt.figure(figsize=(10,6))\ng = sns.countplot(data=data,x=\"ExperienceInCurrentDomain\",edgecolor=\"black\",linewidth=3,hue=\"LeaveOrNot\")\ng.set_xlabel('ExperienceInCurrentDomain', weight='bold', size=13,alpha=0.65)\ng.set_ylabel('ExperienceInCurrentDomain_COUNTS', weight='bold', size=13,alpha=0.65)\ng.set_facecolor(backcolor)\ng.spines[['top', 'right','bottom']].set_visible(False)\ng.set_title(f\"ExperienceInCurrentDomain percent\", size=15, weight='bold',fontname=\"Microsoft YaHei\",alpha=0.65)\nfor patch in g.patches:\n    x, height, width = patch.get_x(), patch.get_height(), patch.get_width()\n    if height>250:\n        g.text(x + width \/ 2, height + 10, f'{height} \/ {height \/ sm * 100:2.2f}%', va='center', ha='center', size=8, alpha=0.5,bbox={'facecolor': 'w', 'boxstyle': 'round4'}\n          )\nplt.show()","e377494a":"sns.set_palette(palette)\nsm = data.shape[0]\nplt.figure(figsize=(10,6))\ng = sns.countplot(data=data,x=\"EverBenched\",edgecolor=\"black\",linewidth=3,hue=\"LeaveOrNot\")\ng.set_xlabel('EverBenched', weight='bold', size=13,alpha=0.65)\ng.set_ylabel('EverBenched_COUNTS', weight='bold', size=13,alpha=0.65)\ng.set_facecolor(backcolor)\ng.spines[['top', 'right','bottom']].set_visible(False)\ng.set_title(f\"EverBenched percent\", size=15, weight='bold',fontname=\"Microsoft YaHei\",alpha=0.65)\nfor patch in g.patches:\n    x, height, width = patch.get_x(), patch.get_height(), patch.get_width()\n    g.text(x + width \/ 2, height + 10, f'{height} \/ {height \/ sm * 100:2.2f}%', va='center', ha='center', size=8, alpha=0.5,bbox={'facecolor': 'w', 'boxstyle': 'round4'}\n          )\nplt.show()","09e57735":"from sklearn.preprocessing import LabelEncoder,StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import recall_score,precision_score,confusion_matrix,ConfusionMatrixDisplay,roc_curve,roc_auc_score\nfrom scipy import stats\nle = LabelEncoder()\nstd = StandardScaler()\ndata[\"Education\"] = le.fit_transform(data[\"Education\"])\ndata[\"JoiningYear\"] = data[\"JoiningYear\"].apply(lambda x:2018-x)\ndata[\"Gender\"] = le.fit_transform(data[\"Gender\"])\ndata[\"EverBenched\"] = le.fit_transform(data[\"EverBenched\"])\ndata[\"Age\"]=stats.boxcox(data[\"Age\"])[0]\ndata[\"City\"] = data[\"City\"].map(dict(data[\"City\"].value_counts(normalize=True)))\ndata.head()","1626d0a8":"plt.figure(figsize=(10,6))\nsns.heatmap(data.corr(),annot=True)","b19f3dac":"from imblearn.over_sampling import SMOTE\nsm = SMOTE(random_state=123)\nX = data.drop(columns=[\"LeaveOrNot\"])\nY = data[[\"LeaveOrNot\"]]\nxtrain,xtest,ytrain,ytest = train_test_split(X,Y,test_size=0.25,random_state=123)\nstd.fit(xtrain[[\"Age\"]])\n#------------------------------------------------------------\nxtrain,ytrain = sm.fit_resample(xtrain,ytrain.values.ravel())\nxtest,ytest = sm.fit_resample(xtest,ytest)\nxtrain[\"Age\"] = std.transform(xtrain[\"Age\"].values.reshape(-1,1))\nxtest['Age'] = std.transform(xtest[\"Age\"].values.reshape(-1,1))  #To prevent data leakage\n#------------------------------------------------------------\nfrom sklearn.linear_model import LassoCV\nlv = LassoCV()\nlv.fit(xtrain,ytrain)\nlv.coef_","22b47716":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import log_loss\nx_new_train = xtrain.drop(columns=[\"City\"])\nx_new_test = xtest.drop(columns=[\"City\"])\nlr_1 = LogisticRegression(random_state=123)\nlr_1.fit(xtrain,ytrain)\nlr_1_pre = lr_1.predict(xtest)\nlr_1_prob = lr_1.predict_proba(xtest)[:,1]\nprint('contain_city_recall_score:',recall_score(ytest,lr_1_pre))\nprint('contain_city_precision_score:',precision_score(ytest,lr_1_pre))\nlr_1.fit(x_new_train,ytrain)\nlr_2_pre = lr_1.predict(x_new_test)\nprint('no_city_recall_score:',recall_score(ytest,lr_2_pre))\nprint('no_city_precision_score:',precision_score(ytest,lr_2_pre))","eafeaf8f":"com = confusion_matrix(ytest,lr_1_pre,labels=lr_1.classes_)\ndis = ConfusionMatrixDisplay(com,display_labels=lr_1.classes_)\ndis.plot()","768f1eca":"fpr,tpr,thres = roc_curve(ytest,lr_1_prob)\nplt.plot(fpr,tpr)\nplt.title(\"ROC\")\nplt.xlabel(\"FPR\")\nplt.ylabel(\"TPR\")\nplt.show()\nprint(\"rou_acu_score:\",roc_auc_score(ytest,lr_1_prob))","49939e9b":"from sklearn.model_selection import GridSearchCV\nlR = LogisticRegression(random_state=123)\nparmas = {\n    'C':[0.005,0.006,0.01,0.03,0.06]\n}\ngs = GridSearchCV(lR,parmas,cv=10,scoring=\"recall\")\ngs.fit(xtrain,ytrain)\ngs.best_params_","8f0bffd4":"lr = LogisticRegression(C=0.06,random_state=123)\nlr.fit(xtrain,ytrain)\nlr_pre = lr.predict(xtest)\nlr_prob = lr.predict_proba(xtest)[:,1]\nprint('adjust_recall_score:',recall_score(ytest,lr_pre))\nprint('adjust_precision_score:',precision_score(ytest,lr_pre))","9f3896c5":"from xgboost import XGBClassifier\nxgb=XGBClassifier(n_jobs=-1,random_state=1234,eval_metric='logloss')\nparameters = {'n_estimators':[ 50,100,200],'max_depth':[5,6,7,8],'learning_rate':[0.1,0.01]}\nxgb_grid = GridSearchCV(xgb, parameters,cv=10,verbose=1).fit(xtrain,ytrain)\nprint(xgb_grid.best_params_)","bb9ca478":"xgbb=XGBClassifier(n_jobs=-1,random_state=1234,n_estimators=200,max_depth=6,learning_rate=0.01,eval_metric='logloss')\nxgbb.fit(xtrain,ytrain)\nxgpre= xgbb.predict(xtest)\nprob_xgb = xgbb.predict_proba(xtest)[:,1]\nprint('xgb_recall_score:',recall_score(ytest,xgpre))\nprint('xgb_precision_score:',precision_score(ytest,xgpre))\nprint(\"xgb_auc:\",roc_auc_score(ytest,prob_xgb))","7e162597":"xgbproba = xgbb.predict_proba(xtest)[:,1]\ncam = confusion_matrix(ytest,xgpre)\ndg = ConfusionMatrixDisplay(cam)\ndg.plot()","d4f746a2":"shap_values = shap.TreeExplainer(xgbb).shap_values(xtrain)\nshap.summary_plot(shap_values,xtrain,plot_type=\"bar\")","3eedd99c":"fig,ax = plt.subplots(1,1,figsize=(8,6))\nax.barh(xtrain.columns.tolist(),xgbb.feature_importances_)\nax.spines[['top', 'right','bottom']].set_visible(False)\nplt.show()","f04f8ee3":"pd.crosstab(data[\"PaymentTier\"],data[\"JoiningYear\"])","5a60287d":"a = pd.DataFrame()\na[\"LeaveOrNot\"] = ytrain\ndata_train = pd.concat([xtrain,a],axis=1)\nb = pd.DataFrame()\nb[\"LeaveOrNot\"] = ytest\ndata_test = pd.concat([xtest,b],axis=1)\nfor col in [ \"City\",\"Education\",\"ExperienceInCurrentDomain\",\"EverBenched\"]: \n    temp_dict = data_train.groupby([col])['LeaveOrNot'].agg(['mean']).reset_index().rename(columns={'mean': col + '_target_mean'})\n    temp_dict.index = temp_dict[col].values\n    temp_dict = temp_dict[col + '_target_mean'].to_dict()\n\n    data_train[col + '_target_mean'] = data_train[col].map(temp_dict)\n    data_test[col + '_target_mean'] = data_test[col].map(temp_dict)","b20369dc":"data_train.corr(method=\"spearman\").style.background_gradient(cmap='Blues')","ce1791fc":"data_train = data_train.drop(columns=[\"Education\",\"EverBenched_target_mean\"])\ndata_test = data_test.drop(columns=[\"Education\",\"EverBenched_target_mean\"])\nxtrain,ytrain = data_train.drop(columns=[\"LeaveOrNot\"]),data_train[[\"LeaveOrNot\"]]\nxtest,ytest = data_test.drop(columns=[\"LeaveOrNot\"]),data_test[[\"LeaveOrNot\"]]","cb872c28":"newxg=XGBClassifier(n_jobs=-1,random_state=1234,n_estimators=200,max_depth=6,learning_rate=0.01,eval_metric='logloss')\nnewxg.fit(xtrain,ytrain)\nnew_pre= newxg.predict(xtest)\nnew_prb = newxg.predict_proba(xtest)[:,1]\nprint('xgb_recall_score:',recall_score(ytest,new_pre))\nprint('xgb_precision_score:',precision_score(ytest,new_pre))\nprint(\"xgb_auc:\",roc_auc_score(ytest,new_prb))","31b6d2ea":"shap_value = shap.TreeExplainer(newxg).shap_values(xtrain)\nshap.summary_plot(shap_value,xtrain,plot_type=\"bar\")","3831a627":"- The age distribution of the people leaving and staying is similar, concentrated in 26-30","2c5c46ca":"- The number of educational qualifications is Bachelors, followed by Masters. We can also find that in MASTERS, whether to leave or not is balanced.","5b9bbce2":"- We discard the city column and compare the models.\n- **Conclusion: The city column is eliminated, but the effect is not good in the end.**","b92cc49d":"- **Looking at the variables of model interpretability, we found that the first three variables are Joinning year and gender and paymenttier.**","21f94271":"<div style=\"color: #fff7f7;\n           display:fill;\n           border-radius:10px;\n           border-style: solid;\n           border-color:#424949;\n           text-align:center;\n           background-color:#8ac6d1 ;\n           font-size:20px;\n           letter-spacing:0.5px;\n           padding: 0.7em;\n           text-align:left\">  \n<center> \u27644. LogisticRegression\u2764 <\/center> \n<\/div>","2a6c0451":"<div style=\"color: #fff7f7;\n           display:fill;\n           border-radius:10px;\n           border-style: solid;\n           border-color:#424949;\n           text-align:center;\n           background-color:#8ac6d1 ;\n           font-size:20px;\n           letter-spacing:0.5px;\n           padding: 0.7em;\n           text-align:left\">  \n<center> \ud83d\udc402. data visualization\ud83d\udc40 <\/center> \n<\/div>","4dc65508":"- **It can be seen that, according to the feature importance of xgboost, the model interpretability of shap is basically the same.**","2f3d51c1":"<div style=\"color: #fff7f7;\n           display:fill;\n           border-radius:10px;\n           border-style: solid;\n           border-color:#424949;\n           text-align:center;\n           background-color:#8ac6d1 ;\n           font-size:20px;\n           letter-spacing:0.5px;\n           padding: 0.7em;\n           text-align:left\">  \n<center> <h1>\ud83e\uddd1 Employee's future  \ud83d\udc69<\/h1> <\/center> \n<\/div>","86d978ec":"- **We do not consider other features, and through the above four features interact with the target value to form new features, to verify whether the algorithm can be improved.**","a548e9bb":"<div style=\"color: #fff7f7;\n           display:fill;\n           border-radius:10px;\n           border-style: solid;\n           border-color:#424949;\n           text-align:center;\n           background-color:#8ac6d1 ;\n           font-size:20px;\n           letter-spacing:0.5px;\n           padding: 0.7em;\n           text-align:left\">  \n<center> \u26a15. View model interpretability\u26a1 <\/center> \n<\/div>","e6f66ce1":"<div style=\"color: #263859;\n           display:fill;\n           border-radius:10px;\n           border-style: solid;\n           border-color:#424949;\n           text-align:center;\n           font-size:20px;\n           letter-spacing:0.5px;\n           padding: 0.7em;\n           text-align:left\">  \n<h4> So,the conclusion? \ud83d\ude2b<\/h4>\n<hr>  \n<ul>\n  <li>The recall rate and accuracy are 70% and 63%, respectively. <\/li>\n  <li>The Auc score is 69%, and the effect is not very good. <\/li>\n  <li>Let's reset the model parameters, or change to another algorithm, such as xgboost.<\/li>\n<\/ul>    \n<hr> \n<\/div>","cb56b59e":"- Observe the data, the data is not balanced","3840023d":"<div style=\"color: #fff7f7;\n           display:fill;\n           border-radius:10px;\n           border-style: solid;\n           border-color:#424949;\n           text-align:center;\n           background-color:#8ac6d1 ;\n           font-size:20px;\n           letter-spacing:0.5px;\n           padding: 0.7em;\n           text-align:left\">  \n<center> \ud83d\udea25. xgboost algorithm, new challenges\ud83d\udea2 <\/center> \n<\/div>","7e911b99":"- The proportion of men is the highest, and we found that the proportion of women who leave or not are roughly the same.","3839d813":"- What? There are so many duplicate values?","d6bc454b":"<div style=\"color: #fff7f7;\n           display:fill;\n           border-radius:10px;\n           border-style: solid;\n           border-color:#424949;\n           text-align:center;\n           background-color:#8ac6d1 ;\n           font-size:20px;\n           letter-spacing:0.5px;\n           padding: 0.7em;\n           text-align:left\">  \n<center> \u26944. Adjust the parameters and fight again\u2694 <\/center> \n<\/div>","49b96da0":"- When the payment level is 3, the proportion of the number of people left is relatively large, but when the payment level is 2, the proportion of the number of people leaving is large.","d075d753":"<div style=\"color: #263859;\n           display:fill;\n           border-radius:10px;\n           border-style: solid;\n           border-color:#424949;\n           text-align:center;\n           font-size:20px;\n           letter-spacing:0.5px;\n           padding: 0.7em;\n           text-align:left\">  \n<h4> A reluctant answer? \ud83d\ude2b<\/h4>\n<hr>  \n<ul>\n  <li>The accuracy increased by 2 percentage points, but the recall rate dropped by 9 percentage points.<br> If we care more about accuracy, perhaps this answer is acceptable, otherwise, we can only choose the original model. <\/li>\n  <li>Our newly constructed feature city_traget_mean seems to be more interpretable than the original Gender.. <\/li>\n  <li>In order to improve the effect, there may be two options. The first is to change to another model, and the second is to construct a feature with strong interpretability..<\/li>\n<\/ul>    \n<hr> \n<\/div>","88f5fad2":"<div style=\"color: #fff7f7;\n           display:fill;\n           border-radius:10px;\n           border-style: solid;\n           border-color:#424949;\n           text-align:center;\n           background-color:#8ac6d1 ;\n           font-size:20px;\n           letter-spacing:0.5px;\n           padding: 0.7em;\n           text-align:left\">  \n<center> \ud83d\ude2c3. Feature engineering\ud83d\ude2c<\/center> \n<\/div>","6be65df4":"- The year of joining the company was concentrated in 2017. We can find that the employees who joined in 2018 had a very high turnover rate, and 239 people ended up leaving only 5 people.","6a2597c2":"<div style=\"color: #fff7f7;\n           display:fill;\n           border-radius:10px;\n           border-style: solid;\n           border-color:#424949;\n           text-align:center;\n           background-color:#8ac6d1 ;\n           font-size:20px;\n           letter-spacing:0.5px;\n           padding: 0.7em;\n           text-align:left\">  \n<h4> So, what information does this data represent? \ud83e\uddd0<\/h4>\n<hr>  \n<ul>\n  <li>Education---EDUCATION LEVEL. <\/li>\n  <li>Joining Year---YEAR OF JOINING COMPANY. <\/li>\n  <li>city---CITY OFFICE WHERE POSTED.<\/li>\n  <li>Age---Current age. <\/li>\n  <li>Gender---Female or Male. <\/li>\n  <li>EverBenched--- EVER KEPT OUT OF PROJECTS FOR 1 MONTH OR MORE.<\/li>\n  <li>ExperienceCurrent---EXPERIENCE IN CURRENT FIELD. <\/li>\n  <li>LeaveOrNot---WHETHER EMPLOYEE LEAVES THE COMPANY IN NEXT 2 YEARS<\/li>\n<\/ul>    \n<hr> \n<\/div>","fda87b86":"- **The above characteristics do not seem to have a significant correlation.**\n- **If we use 0.6 as the threshold to filter the correlation features, we can consider deleting Education, leaving the transformed features.**\n- **drop EverBenched_target_mean**","07c4a491":"- The city where most people live is Bangalore, followed by new delhi. We also found that in the city type of pune, the proportion of them leaving is roughly the same.","1fe47668":"<div style=\"color: #fff7f7;\n           display:fill;\n           border-radius:10px;\n           border-style: solid;\n           border-color:#424949;\n           text-align:center;\n           background-color:#8ac6d1 ;\n           font-size:20px;\n           letter-spacing:0.5px;\n           padding: 0.7em;\n           text-align:left\">  \n<center> \ud83d\udcaa6. Restructure the data\ud83d\udcaa <\/center> \n<\/div>","ecc952d9":"- **As you can see, the effect of the xgboost model is better than logistic regression.**","ee5a0d76":"- No missing values","30c04cf1":"- **After adjusting the parameters, the recall rate actually dropped. This shows that the model parameters are not as good as the previous model. Let's try the xgboost algorithm**.","09334be9":"- When a person withdraws from the project for a month or longer, the probability of the person leaving is greater.","777e86e9":"<div style=\"color: #fff7f7;\n           display:fill;\n           border-radius:10px;\n           border-style: solid;\n           border-color:#424949;\n           text-align:center;\n           background-color:#8ac6d1 ;\n           font-size:20px;\n           letter-spacing:0.5px;\n           padding: 0.7em;\n           text-align:left\">  \n<center> <a id=\"aa\" herf=\"\">1. Simple view of data<\/a> <\/center> \n<\/div>","47a23b83":"- The largest number of people with 2 years of industry experience"}}