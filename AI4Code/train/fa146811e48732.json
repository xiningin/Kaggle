{"cell_type":{"e43b96d5":"code","e11c9438":"code","19b63e31":"code","e902bc69":"code","f205d8ce":"code","d403f76e":"code","66b2ec97":"code","8b5b29ab":"code","85039e9d":"code","db3c0f63":"code","87d1c947":"code","81e3ef55":"code","6ecb4972":"code","a92cce4b":"code","a798d1ee":"code","d2383941":"code","3f6b4d86":"code","8fd13c56":"code","25d041e9":"code","bc969a80":"code","8194a327":"code","b8044a34":"code","0a5d59a8":"code","b717c3bc":"code","b74ee79c":"code","c1d01bf1":"code","03aa1d42":"code","dc341c65":"code","12838bc4":"code","ca589ff0":"code","da667a2f":"code","a24ffd79":"code","4bcae33d":"code","b0cd7028":"code","eeb9cb6c":"code","753c3669":"code","fa28b719":"code","6fea612b":"code","1841bd79":"code","51f30dbf":"code","87aa4bbc":"code","a755e3ce":"code","834e5434":"code","13247d87":"code","38f9f82a":"code","3088492a":"code","8fe01934":"code","47cd32ee":"code","b4c45763":"code","aaa40e42":"code","79d20e90":"code","24146f01":"code","2464858e":"code","d06878fc":"code","5ae87d46":"code","bf63647c":"code","65d4216b":"code","eea6f94f":"code","c488eee1":"code","e267d063":"code","d67a7dd2":"code","b885e4fb":"code","26c3d878":"code","b4ff38d4":"code","638e480d":"code","ad9d904e":"code","5273ff0c":"code","7d38a0b1":"code","ba444c25":"code","fe4d06cf":"code","d2d46be6":"code","f59f1fda":"code","891f1150":"code","78fc54cc":"code","a2a04ab6":"markdown","19016c2a":"markdown","de482b03":"markdown","d0180ae9":"markdown","f97f0e86":"markdown","8cd0bb73":"markdown","2283d9e0":"markdown","be919dc5":"markdown","fa24e262":"markdown","79826f19":"markdown","0a013a41":"markdown","ab72ebf3":"markdown","7a28d05f":"markdown","5cf12d80":"markdown","c97292b2":"markdown","cfee960c":"markdown","6017d986":"markdown","8393f81c":"markdown","015738fb":"markdown","8b700d04":"markdown","83ed3275":"markdown","a4eb2730":"markdown","97f73ae5":"markdown","835b4506":"markdown","83fca8ac":"markdown","48555fe0":"markdown"},"source":{"e43b96d5":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\nimport pandas_profiling as pp\nimport plotly.express as px\n%matplotlib inline","e11c9438":"dataset = pd.read_csv('..\/input\/fetal-health-classification\/fetal_health.csv')\ndataset.head()","19b63e31":"dataset.columns","e902bc69":"sns.heatmap(dataset.isnull())","f205d8ce":"dataset.isnull().sum()","d403f76e":"dataset.info()","66b2ec97":"dataset.describe()","8b5b29ab":"pp.ProfileReport(dataset)","85039e9d":"dataset['fetal_health'].value_counts()","db3c0f63":"X1 = dataset.iloc[:,:-1]\ny1 = dataset.iloc[:,-1]","87d1c947":"from sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import f_classif\nfit_best_features = SelectKBest(score_func=f_classif,k=10)\nbest_features=fit_best_features.fit(X1,y1)","81e3ef55":"dataset_scores = pd.DataFrame(best_features.scores_)\ndataset_cols = pd.DataFrame(X1.columns)","6ecb4972":"featurescores = pd.concat([dataset_cols,dataset_scores],axis=1)\nfeaturescores.columns=['column','scores']","a92cce4b":"featurescores","a798d1ee":"print(featurescores.nlargest(13,'scores'))","d2383941":"corr_data=dataset.corr()\nfig, axes = plt.subplots(figsize=(15,10))\nsns.heatmap(corr_data,annot=True)","3f6b4d86":"sns.set_style('whitegrid')\nsns.countplot(x='fetal_health',data=dataset)","8fd13c56":"sns.distplot(dataset['baseline value'],bins=40)","25d041e9":"sns.barplot(x='fetal_health',y='baseline value',data=dataset)","bc969a80":"sns.boxplot(x='fetal_health',y='accelerations',data=dataset)","8194a327":"sns.violinplot(x='fetal_health',y='fetal_movement',data=dataset)","b8044a34":"px.area(dataset, x=\"accelerations\", y=\"uterine_contractions\",color='fetal_health')","0a5d59a8":"px.bar(dataset, x=\"fetal_health\", y='uterine_contractions', color=\"fetal_health\")","b717c3bc":"px.pie(dataset, values='prolongued_decelerations', names='fetal_health', title='prolongued_decelerations')","b74ee79c":"px.sunburst(dataset, path=['fetal_health'], values='abnormal_short_term_variability')","c1d01bf1":"sns.barplot(x='fetal_health',y='mean_value_of_short_term_variability',data=dataset)","03aa1d42":"px.area(dataset, x=\"prolongued_decelerations\", y=\"abnormal_short_term_variability\",color='fetal_health')","dc341c65":"sns.barplot(x='fetal_health',y='percentage_of_time_with_abnormal_long_term_variability',data=dataset)","12838bc4":"px.area(dataset, x=\"mean_value_of_short_term_variability\", y=\"baseline value\",color='fetal_health')","ca589ff0":"X = dataset[['baseline value','accelerations','uterine_contractions','prolongued_decelerations', 'abnormal_short_term_variability',\n       'mean_value_of_short_term_variability']]\ny = dataset['fetal_health']","da667a2f":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size = 0.2,random_state=101)","a24ffd79":"from sklearn.model_selection import train_test_split\nX_X_train,X_val,y_y_train,y_val = train_test_split(X_train,y_train,test_size=0.2,random_state=101)","4bcae33d":"from sklearn.preprocessing import StandardScaler\nss = StandardScaler()\nX_X_train=ss.fit_transform(X_X_train)\nX_val=ss.transform(X_val)\nX_test=ss.transform(X_test)\n\n","b0cd7028":"from imblearn.over_sampling import RandomOverSampler\nos =  RandomOverSampler()\nX_train_res, y_train_res = os.fit_sample(X_X_train, y_y_train)","eeb9cb6c":"from collections import Counter\nprint('Original dataset shape {}'.format(Counter(y_y_train)))\nprint('Resampled dataset shape {}'.format(Counter(y_train_res)))","753c3669":"from collections import Counter\nprint('Original dataset shape {}'.format(Counter(y_test)))\n#print('Resampled dataset shape {}'.format(Counter(y_train_res)))","fa28b719":"\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier","6fea612b":"model_param = {\n    'DecisionTreeClassifier':{\n        'model':DecisionTreeClassifier(),\n        'param':{\n            'criterion': ['gini','entropy'],\n            'splitter':['best', 'random'],'max_features':['auto', 'sqrt', 'log2']\n        }\n    },\n        'KNeighborsClassifier':{\n        'model':KNeighborsClassifier(),\n        'param':{\n            'n_neighbors': [5,10,15,20,25]\n            ,'weights':['uniform', 'distance'],'algorithm':['auto', 'ball_tree', 'kd_tree', 'brute'],\n            'leaf_size':[10,20,30,40,50]\n        }\n    },\n        'SVC':{\n        'model':SVC(),\n        'param':{\n            'kernel':['rbf','linear','sigmoid'],\n            'C': [0.1, 1, 10, 100]\n         \n        }\n    }\n    \n}","1841bd79":"from sklearn.model_selection import GridSearchCV","51f30dbf":"scores =[]\nfor model_name, mp in model_param.items():\n    model_selection = GridSearchCV(estimator=mp['model'],param_grid=mp['param'],cv=5,return_train_score=False)\n    model_selection.fit(X_X_train,y_y_train)\n    scores.append({\n        'model': model_name,\n        'best_score': model_selection.best_score_,\n        'best_params': model_selection.best_params_\n    })","87aa4bbc":"df_model_score = pd.DataFrame(scores,columns=['model','best_score','best_params'])\npd.set_option('display.max_colwidth', -1)\ndf_model_score","a755e3ce":"knn_model = KNeighborsClassifier(leaf_size=10,n_neighbors=10,weights='distance')\nknn_model.fit(X_train_res,y_train_res)","834e5434":"from sklearn.model_selection import cross_val_score\naccuracies = cross_val_score(estimator=knn_model, X=X_val ,y=y_val,cv=10)\nprint(\"accuracy is {:.2f} %\".format(accuracies.mean()*100))\nprint(\"std is {:.2f} %\".format(accuracies.std()*100))","13247d87":"decision_model = DecisionTreeClassifier(criterion='entropy',max_features='log2')\ndecision_model.fit(X_train_res,y_train_res)\n","38f9f82a":"from sklearn.model_selection import cross_val_score\naccuracies = cross_val_score(estimator=decision_model, X=X_val ,y=y_val,cv=10)\nprint(\"accuracy is {:.2f} %\".format(accuracies.mean()*100))\nprint(\"std is {:.2f} %\".format(accuracies.std()*100))","3088492a":"svc_modell = SVC(C=10,kernel='rbf')\nsvc_modell.fit(X_train_res,y_train_res)\n","8fe01934":"from sklearn.model_selection import cross_val_score\naccuracies = cross_val_score(estimator=svc_modell, X=X_val ,y=y_val,cv=10)\nprint(\"accuracy is {:.2f} %\".format(accuracies.mean()*100))\nprint(\"std is {:.2f} %\".format(accuracies.std()*100))","47cd32ee":"random_model = RandomForestClassifier()\nrandom_model.fit(X_train_res,y_train_res)\n","b4c45763":"from sklearn.model_selection import cross_val_score\naccuracies = cross_val_score(estimator=random_model, X=X_val,y=y_val,cv=10)\nprint(\"accuracy is {:.2f} %\".format(accuracies.mean()*100))\nprint(\"std is {:.2f} %\".format(accuracies.std()*100))","aaa40e42":"xgb_model = XGBClassifier()\nxgb_model.fit(X_train_res,y_train_res)\n","79d20e90":"from sklearn.model_selection import cross_val_score\naccuracies = cross_val_score(estimator=xgb_model, X=X_val ,y=y_val,cv=10)\nprint(\"accuracy is {:.2f} %\".format(accuracies.mean()*100))\nprint(\"std is {:.2f} %\".format(accuracies.std()*100))","24146f01":"from sklearn.metrics import confusion_matrix,accuracy_score","2464858e":"from sklearn.ensemble import AdaBoostClassifier\nadaboost_model = AdaBoostClassifier(base_estimator=RandomForestClassifier(max_depth=1))\nadaboost_model.fit(X_train_res,y_train_res)","d06878fc":"from sklearn.model_selection import cross_val_score\naccuracies = cross_val_score(estimator=adaboost_model, X=X_val ,y=y_val,cv=5)\nprint(\"accuracy is {:.2f} %\".format(accuracies.mean()*100))\nprint(\"std is {:.2f} %\".format(accuracies.std()*100))","5ae87d46":"from sklearn.ensemble import BaggingClassifier\nbagging_model = BaggingClassifier()\nbagging_model.fit(X_train_res,y_train_res)","bf63647c":"from sklearn.model_selection import cross_val_score\naccuracies = cross_val_score(estimator=bagging_model, X=X_val ,y=y_val,cv=5)\nprint(\"accuracy is {:.2f} %\".format(accuracies.mean()*100))\nprint(\"std is {:.2f} %\".format(accuracies.std()*100))","65d4216b":"from sklearn.ensemble import ExtraTreesClassifier\nextra_model = ExtraTreesClassifier()\nextra_model.fit(X_train_res,y_train_res)","eea6f94f":"from sklearn.model_selection import cross_val_score\naccuracies = cross_val_score(estimator=extra_model, X=X_val ,y=y_val,cv=5)\nprint(\"accuracy is {:.2f} %\".format(accuracies.mean()*100))\nprint(\"std is {:.2f} %\".format(accuracies.std()*100))","c488eee1":"from sklearn.ensemble import GradientBoostingClassifier\ngradiant_model = GradientBoostingClassifier()\ngradiant_model.fit(X_train_res,y_train_res)","e267d063":"from sklearn.model_selection import cross_val_score\naccuracies = cross_val_score(estimator=gradiant_model, X=X_val ,y=y_val,cv=5)\nprint(\"accuracy is {:.2f} %\".format(accuracies.mean()*100))\nprint(\"std is {:.2f} %\".format(accuracies.std()*100))","d67a7dd2":"knn_pre = knn_model.predict(X_test)\nacc_knn = accuracy_score(knn_pre,y_test)","b885e4fb":"xgb_pre = xgb_model.predict(X_test)\nacc_xgb = accuracy_score(xgb_pre,y_test)","26c3d878":"svm_pre = svc_modell.predict(X_test)\nacc_svm = accuracy_score(svm_pre,y_test)","b4ff38d4":"decision_pre = decision_model.predict(X_test)\nacc_decision  = accuracy_score(decision_pre,y_test)","638e480d":"random_pre = random_model.predict(X_test)\nacc_random = accuracy_score(random_pre,y_test)","ad9d904e":"adaboost_pre = adaboost_model.predict(X_test)\nacc_adaboost = accuracy_score(adaboost_pre,y_test)","5273ff0c":"gradiant_model_pre = gradiant_model.predict(X_test)\nacc_gradient = accuracy_score(gradiant_model_pre,y_test)","7d38a0b1":"bagging_pre = bagging_model.predict(X_test)\nacc_bagging = accuracy_score(bagging_pre,y_test)","ba444c25":"extra_pre = extra_model.predict(X_test)\nacc_extra = accuracy_score(extra_pre,y_test)","fe4d06cf":"print(acc_knn)\nprint(acc_xgb)\nprint(acc_svm)\nprint(acc_decision)\nprint(acc_random)\nprint(acc_adaboost)\nprint(acc_extra)\nprint(acc_gradient)\nprint(acc_bagging)","d2d46be6":"from sklearn.metrics import classification_report\nprint(classification_report(random_pre,y_test))","f59f1fda":"from sklearn.metrics import classification_report\nprint(classification_report(xgb_pre,y_test))","891f1150":"from sklearn.metrics import classification_report\nprint(classification_report(extra_pre,y_test))","78fc54cc":"from sklearn.metrics import classification_report\nprint(classification_report(bagging_pre,y_test))","a2a04ab6":"# Classification report of best models.","19016c2a":"# Model building","de482b03":"**bagging classifier report**","d0180ae9":"**Standardization**","f97f0e86":"**XGB classifier classifiaction report**","8cd0bb73":"**Random forest classification report**","2283d9e0":"# Accuracies of all models.","be919dc5":"Balancing the dataset using RandomOverSampler","fa24e262":"# Please upvote","79826f19":"# Importing neccesary libraries.","0a013a41":"**Splitting the data into training and testing datasets.**","ab72ebf3":"# EDA","7a28d05f":"**Extra tree classifier classification report**","5cf12d80":" **TASK**: **Fetal health classification- An Approch to reduce fetal mortality (please upvote)**","c97292b2":"These are the top 13  important features. ","cfee960c":"**It seems to be random forest classifier and extra tress classifier are best performing model with 92% accuracy.**","6017d986":"# Let us now see the overview of dataset","8393f81c":"**Fetal health classification with 92% Accuracy**","015738fb":"The target feature is seem to be imbalanced.. We need to fix this, before moving into this let us see the feature importance first.","8b700d04":" Fetal mortality is a public health issue that put in risk the women\u2019s or baby\u2019s life.This notebook uses several Machine Learning Classification techniques in order to predict the risk level of the fetal health ,it attempts to classify into three classes namely-\n1.  Normal\n2. Suspect\n3. Pathological","83ed3275":"Now again splitting the training dataset into two parts namely training and validation dataset.The reason why i have done this is because our fetal_health dataset is imbalanced and we have to balance the dataset.\n\n**The model performance on the imbalanced testing dataset will be bad if the training dataset is balanced and validation set is also balanced , but the model performance will be better if the training dataset is balanced and validation set is imbalanced . Since the model performance would be same with the validation set and testing set we can evaluate the accuracy of our model precisely when dealing with hyperparameter tuning.**","a4eb2730":"Hyperparameter tuning","97f73ae5":"**Let us separate our dependent and independent variables.**","835b4506":"This shows there is no missing values in the dataset.","83fca8ac":"**Model prediction**","48555fe0":"Now let us see the correlation among the features."}}