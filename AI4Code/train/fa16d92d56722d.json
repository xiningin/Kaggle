{"cell_type":{"b2d34b63":"code","362ed4c8":"code","77bb14ce":"code","9a65b46f":"code","23a5c9f9":"code","9aadf5a8":"code","dfb3da75":"code","43d410f6":"code","82af5b89":"code","832d1c18":"code","9f60343a":"code","a81aef4d":"code","2a3d58e5":"code","21b2bb43":"code","c6f18dc9":"code","a88334f8":"code","e299645d":"code","471b2847":"code","db27c735":"code","b2606dbf":"code","be447dc3":"code","1e402272":"code","4faaa09a":"code","51336478":"code","9813ef01":"code","941ae8ed":"code","54c34c73":"code","a72f97a0":"code","89bf428d":"code","4f55eeb2":"code","b41484b6":"code","681e927e":"code","b0b8a9d8":"code","4420959b":"markdown","c680e184":"markdown","88578346":"markdown","ed74cd5e":"markdown","947f39e7":"markdown","58edc53c":"markdown","cf6c78da":"markdown","da7455d4":"markdown","9b97c7f3":"markdown","6e7450dc":"markdown","9570ae2c":"markdown","1bcd168b":"markdown","63502a3f":"markdown"},"source":{"b2d34b63":"!pip install yfinance","362ed4c8":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\nimport yfinance as yahooFinance","77bb14ce":"# Here We are getting Facebook financial information\n# We need to pass ITC as argument for that .NS for National Stock Exchange u can also use only tickers but it won't come from nse \nGet_ITC_Information = yahooFinance.Ticker(\"ITC.NS\")\n \n# whole python dictionary is printed here\nprint(Get_ITC_Information.info) \n\n# info \u2013 This method prints out a JSON formatter output which contains a lot of information \n# about the company starting from their business full name, summary, industry, exchanges listed on with country and time zone, and more. \n# It also comes equipped with the beta coefficient.","9a65b46f":" # get all key value pairs that are available\nfor key, value in Get_ITC_Information.info.items():\n    print(key, \":\", value,'\\n')","23a5c9f9":" # display Company Sector\nprint(\"Company Sector : \", Get_ITC_Information.info['sector'])\n \n# display Price Earnings Ratio\nprint(\"Price Earnings Ratio : \", Get_ITC_Information.info['trailingPE'])\n \n# display Company Beta\nprint(\" Company Beta : \", Get_ITC_Information.info['beta'])\n\n#display Summary\nprint()\nprint()\nprint(\"Summary : \", Get_ITC_Information.info['longBusinessSummary'])","9aadf5a8":"# Valid options are 1d, 5d, 1mo, 3mo, 6mo, 1y,\n# 2y, 5y, 10y and ytd.\nprint(Get_ITC_Information.history(period=\"5mo\"))","dfb3da75":" # Let us  get historical stock prices for Facebook\n# covering the past few years.\n# max->maximum number of daily prices available\n# for Facebook.\n# Valid options are 1d, 5d, 1mo, 3mo, 6mo, 1y, 2y,\n# 5y, 10y and ytd.\nprint(Get_ITC_Information.history(period=\"max\"))","43d410f6":"# in order to specify start date and\n# end date we need datetime package\nimport datetime\n \n# startDate , as per our convenience we can modify\nstartDate = datetime.datetime(2019, 5, 31)\n \n# endDate , as per our convenience we can modify\nendDate = datetime.datetime(2021, 1, 30)\nGet_Information = yahooFinance.Ticker(\"ITC.NS\")\n \n# pass the parameters as the taken dates for start and end\nprint(Get_Information.history(start=startDate,\n                                     end=endDate))","82af5b89":"!pip install yahoofinancials","832d1c18":"from yahoofinancials import YahooFinancials","9f60343a":"ticker = 'AAPL'\nyahoo_financials = YahooFinancials(ticker)\nbalance_sheet_data_qt = yahoo_financials.get_financial_stmts('quarterly', 'balance')\nncome_statement_data_qt = yahoo_financials.get_financial_stmts('quarterly', 'income')\nall_statement_data_qt =  yahoo_financials.get_financial_stmts('quarterly', ['income', 'cash', 'balance'])\napple_earnings_data = yahoo_financials.get_stock_earnings_data()\napple_net_income = yahoo_financials.get_net_income()\nhistorical_stock_prices = yahoo_financials.get_historical_price_data('2008-09-15', '2018-09-15', 'weekly')","a81aef4d":"balance_sheet_data_qt","2a3d58e5":"type(balance_sheet_data_qt)","21b2bb43":"tech_stocks = ['AAPL', 'MSFT', 'INTC']\nbank_stocks = ['WFC', 'BAC', 'C']\ncommodity_futures = ['GC=F', 'SI=F', 'CL=F']\ncryptocurrencies = ['BTC-USD', 'ETH-USD', 'XRP-USD']\ncurrencies = ['EURUSD=X', 'JPY=X', 'GBPUSD=X']\nmutual_funds = ['PRLAX', 'QASGX', 'HISFX']\nus_treasuries = ['^TNX', '^IRX', '^TYX']\n\nyahoo_financials_tech = YahooFinancials(tech_stocks)\nyahoo_financials_banks = YahooFinancials(bank_stocks)\nyahoo_financials_commodities = YahooFinancials(commodity_futures)\nyahoo_financials_cryptocurrencies = YahooFinancials(cryptocurrencies)\nyahoo_financials_currencies = YahooFinancials(currencies)\nyahoo_financials_mutualfunds = YahooFinancials(mutual_funds)\nyahoo_financials_treasuries = YahooFinancials(us_treasuries)\n\ntech_cash_flow_data_an = yahoo_financials_tech.get_financial_stmts('annual', 'cash')\nbank_cash_flow_data_an = yahoo_financials_banks.get_financial_stmts('annual', 'cash')\n\nbanks_net_ebit = yahoo_financials_banks.get_ebit()\ntech_stock_price_data = yahoo_financials_tech.get_stock_price_data()\ndaily_bank_stock_prices = yahoo_financials_banks.get_historical_price_data('2008-09-15', '2018-09-15', 'daily')\ndaily_commodity_prices = yahoo_financials_commodities.get_historical_price_data('2008-09-15', '2018-09-15', 'daily')\ndaily_crypto_prices = yahoo_financials_cryptocurrencies.get_historical_price_data('2008-09-15', '2018-09-15', 'daily')\ndaily_currency_prices = yahoo_financials_currencies.get_historical_price_data('2008-09-15', '2018-09-15', 'daily')\ndaily_mutualfund_prices = yahoo_financials_mutualfunds.get_historical_price_data('2008-09-15', '2018-09-15', 'daily')\ndaily_treasury_prices = yahoo_financials_treasuries.get_historical_price_data('2008-09-15', '2018-09-15', 'daily')","c6f18dc9":"yahoo_financials = YahooFinancials('ITC.NS')\nITC_stats=(yahoo_financials.get_key_statistics_data())\nprint(ITC_stats)","a88334f8":"type(ITC_stats)","e299645d":"start_date = '1987-09-15'\nend_date = '1988-09-15'\nyahoo_financials = YahooFinancials(['ITC.NS', 'WFC'])\ndividend_itc= yahoo_financials.get_daily_dividend_data(start_date, end_date)\nprint(dividend_itc, '\\n')\nprint(type(dividend_itc))\n","471b2847":"yahoo_financials = YahooFinancials('BTC-USD')\nBTC_summary = yahoo_financials.get_summary_data()\nprint(BTC_summary,'\\n')\nprint(type(BTC_summary))","db27c735":"Get_Information = yahooFinance.Ticker(\"BTC-USD\")\nprint(Get_Information.info) \n","b2606dbf":"tickers = pd.read_csv('..\/input\/stocks-listed-on-nifty-500-july-2021\/ind_niftymicrocap250_list.csv')\ndisplay(tickers)\n\nplt.xticks(rotation=90)\nplt.title('Sectorwise distribution of Nifty Micro Cap 250')\nsns.countplot(tickers.Industry,\n              order = tickers['Industry'].value_counts().index);","be447dc3":"tickers[tickers['Industry']=='TELECOM']","1e402272":"tele_symbol = tickers[tickers['Industry']=='TELECOM'].Symbol\ntele_symbol","4faaa09a":"#DRY Run\ni= 'GTLINFRA'\nk= i+ '.NS'\nGet_Information = yahooFinance.Ticker(k)\nprint(\"Summary : \", Get_Information.info['longBusinessSummary'])","51336478":"print('A Brief description about stocks ', '\\n')\nprint()\n\nfor i in tele_symbol:\n    k= i+ '.NS'\n    Get_Information = yahooFinance.Ticker(k)\n    print(\"Summary of \", i, \" : \", Get_Information.info['longBusinessSummary'],'\\n')","9813ef01":"data=pd.DataFrame()\ndf=pd.DataFrame()\n\nfor i in tele_symbol:\n    k= i+ '.NS'\n    Get_Information = yahooFinance.Ticker(k)\n    data[i]= Get_Information.history(period=\"6mo\").Close\n    \ndata","941ae8ed":"df.isnull().sum()","54c34c73":"data=pd.DataFrame()\ndf=pd.DataFrame()\n\nfor i in tele_symbol:\n    k= i+ '.NS'\n    Get_Information = yahooFinance.Ticker(k)\n    data[i]= Get_Information.history(period=\"6mo\").Close\n    #print(data)\n    #df=pd.concat([data, df], axis = 1)\ndata","a72f97a0":"!pip install plotly","89bf428d":"data.plot();","4f55eeb2":"import plotly.express as px\n\nimport plotly.graph_objects as go","b41484b6":"gen_info = yahooFinance.Ticker('VINDHYATEL.NS')\nvl= Get_Information.history(period=\"6mo\", interval='1h')\nvl.head(2)","681e927e":"fig = go.Figure( data= [\n    go.Candlestick(\n    x=vl.index,\n    low=vl.Low,\n    high=vl.High,\n    close=vl.Close,\n    open=vl.Open,\n    increasing_line_color='green',\n    decreasing_line_color='red')\n])\nfig.show()","b0b8a9d8":"for i in tele_symbol:\n    k= i+ '.NS'\n    Get_Information = yahooFinance.Ticker(k)\n    df_temp= Get_Information.history(period=\"6mo\")\n    \n    fig = go.Figure( data= [\n    go.Candlestick(\n    x=df_temp.index,\n    low=df_temp.Low,\n    high=df_temp.High,\n    close=df_temp.Close,\n    open=df_temp.Open,\n    increasing_line_color='green',\n    decreasing_line_color='red')\n        ])\n    fig.update_layout(\n    title={\n        'text': i,\n        'y':0.9,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\n    \n    fig.update_layout(title_font_size=25,\n                     title_font_color='blue')\n    fig.show()","4420959b":"<a id=2>\n\n# yahoofinancials","c680e184":"<a id= 4>\n\n# Interactive CandleStick with Ploty","88578346":"* **get_stock_quote_type_data()** \u2013 This method returns a lot of generic information about a stock which is `similar to the yfinance info() function`.\n\n* **get_summary_data()** \u2013 This method returns a `summary of the whole company along with useful data like the beta value`, price to book value, and more.\n\n* **get_stock_earnings_data()** \u2013 THis method returns the `information on the quarterly and yearly earnings of the company` along with the next date when the company will report its earnings.\n\n* **get_financial_stmts()** \u2013 This is another useful method to `retrieve financial statements of a company` which is useful for the analysis of a stock\n\n* **get_historical_price_data()** \u2013 This is a method `similar` to the `download()` or `Ticker()` function to get the prices of stock with start_date, end_date and interval ranges.","ed74cd5e":"### Apples and ITC daily Dividend Data","947f39e7":"### ITC Key Statistics data ","58edc53c":"## Content\n1. [yfinance](#1)\n2. [YahooFinance](#2)\n3. [Penny Stock Analysis](#3)\n     * [Interactive Candlestick](#4)\n     * [Statistical Analysis](#5)","cf6c78da":"# Pair Trading \n**Will among**\n* Ambuja Cement and ACC\n* ACC and Shree Cement\n* Infosys and wipro\n* Tech Mahindra and TCS\n* Cipla and Sun Pharma\n* ICICI Bank and Banknifty\n* Tata Steel and JSW Steel","da7455d4":"# Short intro to Yahoo finance\n","9b97c7f3":"<a id=3>\n    \n    \n# MicroCap AKA Penny Stock","6e7450dc":"### I will Analyse telecom sector","9570ae2c":"# Visualization","1bcd168b":"### Summary","63502a3f":"<a id=5>\n    \n\n# Statistical Analysis"}}