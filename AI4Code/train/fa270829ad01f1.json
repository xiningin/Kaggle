{"cell_type":{"1074ef24":"code","01b84a1e":"code","e8cb2cd6":"code","403a29ba":"code","64894ffd":"code","f9a26ab3":"code","6b585e43":"code","ed4de8e3":"code","50df40f9":"code","2d737b9b":"code","acb383d7":"code","79f6d58d":"code","40794590":"code","ad8ae3da":"code","fee7ddcd":"code","364a3f22":"code","7395b219":"code","b2dafc80":"code","26289e6e":"code","4b59c0d7":"code","042ed956":"code","551f97b5":"code","2c1ad429":"code","65003f67":"code","04922e01":"code","78460971":"code","3a2ddc1c":"code","2af2ca4d":"code","7e9535b6":"code","5a44466b":"code","50580ca6":"code","76160cb8":"code","bcb06c31":"code","a02f6f20":"code","eb6f8586":"code","3f47ae9a":"code","89a56d3b":"code","78ad5d30":"code","14f846e2":"code","c7bee6d8":"code","4924341b":"code","58108295":"code","90854c6e":"code","01f04243":"code","27925ac0":"code","3cebfbcf":"code","45756f4b":"code","3e83f6be":"code","5afab254":"code","31ef559f":"code","b5d47e8e":"code","03fd858a":"code","d2f8a4ab":"code","43c6b6c5":"code","3631e911":"code","dab1131c":"code","d1bf4376":"markdown","48bb9c0b":"markdown","f6cc35eb":"markdown","eb13101c":"markdown","349fdf44":"markdown","66fbba62":"markdown","c403a3fb":"markdown","9f20baf4":"markdown","9dfda323":"markdown","ba6f7fb0":"markdown","2269dc97":"markdown","30487e5d":"markdown","87ab5484":"markdown","e8c6ecb8":"markdown","204788a3":"markdown","a7defa36":"markdown","8a64e3f2":"markdown","afcced52":"markdown","3981c552":"markdown","7eb07a62":"markdown","4b4b258a":"markdown","de252c79":"markdown","a8b22bbe":"markdown","a1c5fe19":"markdown","05ceb7af":"markdown","33703283":"markdown","0d855f8e":"markdown","c28ac8c4":"markdown","f0d6109a":"markdown"},"source":{"1074ef24":"import pandas as pd\nimport numpy as np\nimport math\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\nplt.style.use(\"Solarize_Light2\")\n\nfrom sklearn.metrics import r2_score\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import mean_absolute_error\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import StandardScaler\n\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.linear_model import Ridge\nfrom sklearn.linear_model import Lasso\nfrom sklearn.linear_model import ElasticNet\nfrom sklearn.linear_model import LarsCV\nfrom sklearn.linear_model import BayesianRidge\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.svm import LinearSVR\nfrom sklearn.svm import SVR\nfrom sklearn.ensemble import AdaBoostRegressor\nfrom sklearn.ensemble import BaggingRegressor\nfrom sklearn.ensemble import ExtraTreesRegressor\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost import XGBRegressor\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","01b84a1e":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","e8cb2cd6":"data = pd.read_csv('\/kaggle\/input\/insurance\/insurance.csv')","403a29ba":"data","64894ffd":"data.drop_duplicates(inplace=True)","f9a26ab3":"data.info()","6b585e43":"data.nunique()","ed4de8e3":"data.columns","50df40f9":"numerical = ['age', 'bmi', 'children']\ncategorial = ['sex', 'smoker', 'region']\ntarget = ['charges']","2d737b9b":"sns.pairplot(data[numerical + target])","acb383d7":"data[numerical + target].hist(bins=45, figsize=(10, 10))","79f6d58d":"plt.figure(figsize=(15,12))\nplt.subplot(2, 2, 1)\ndata.charges.hist(bins=25)\nplt.subplot(2, 2, 2)\ndata.charges.plot.box()","40794590":"data['log_charges'] = np.log(data['charges'])","ad8ae3da":"plt.figure(figsize=(15,12))\nplt.subplot(2, 2, 1)\ndata.log_charges.hist(bins=25)\nplt.subplot(2, 2, 2)\ndata.log_charges.plot.box()","fee7ddcd":"data.head(3)","364a3f22":"data.smoker.value_counts().plot.barh(figsize=(9, 4))","7395b219":"labelencoder = LabelEncoder()","b2dafc80":"data['smoker'] = labelencoder.fit_transform(data['smoker'])","26289e6e":"data.groupby('smoker')['charges'].agg(['mean'])","4b59c0d7":"data.groupby('smoker')['charges'].agg(['mean']).reset_index().plot.bar(x='smoker')","042ed956":"data.head(3)","551f97b5":"data['age'].value_counts(normalize=True).plot.barh(figsize=(8, 10))","2c1ad429":"plt.figure(figsize=(10,7))\nsns.scatterplot(x='age', y='charges', data=data, hue='smoker', palette=['blue','red'])","65003f67":"data.head(3)","04922e01":"data.sex.value_counts(normalize=True).plot.barh(figsize=(9, 4))","78460971":"data.groupby('sex').agg(['mean'])","3a2ddc1c":"plt.figure(figsize=(5,7))\nsns.boxplot(x='sex', y='charges', data=data)","2af2ca4d":"data['sex'] = labelencoder.fit_transform(data['sex'])","7e9535b6":"data.sex.unique()","5a44466b":"data.head(3)","50580ca6":"data['region'].value_counts(normalize=True).plot.barh(figsize=(4, 4))","76160cb8":"data.groupby('region').agg('mean')","bcb06c31":"data.groupby('region')[['smoker', 'charges']].agg('mean')","a02f6f20":"data = pd.get_dummies(data, columns=['region'])","eb6f8586":"data.head(3)","3f47ae9a":"data['children'].value_counts().plot.barh(figsize=(5, 5))","89a56d3b":"data.groupby('children')[['smoker', 'charges']].agg('mean')","78ad5d30":"data.bmi.hist(bins=45)","14f846e2":"sns.scatterplot(x=data.bmi, y=data.charges, hue=data.smoker, palette=['blue','red'])","c7bee6d8":"data['bmi_group'] = pd.cut(data['bmi'], (0, 16, 18.5, 25, 30, 35, 40, np.inf), labels=[1, 2, 3, 4, 5, 6, 7])","4924341b":"plt.figure(figsize=(8,6))\nsns.scatterplot(x=data.bmi, y=data.charges, hue=data.bmi_group)","58108295":"data = pd.get_dummies(data, columns=['bmi_group'])","90854c6e":"data.drop(['bmi'], axis=1, inplace=True)\nnumerical.remove('bmi')","01f04243":"data","27925ac0":"X_train, X_test, y_train, y_test = train_test_split(\n    data.drop(['charges', 'log_charges'], axis=1), \n    data['log_charges'],\n    test_size=0.25, random_state=42\n)","3cebfbcf":"scaler = StandardScaler()\n\nX_train_scaler = scaler.fit_transform(X_train[numerical])\nX_test_scaler = scaler.transform(X_test[numerical])\n\nX_train[numerical] = X_train_scaler\nX_test[numerical] = X_test_scaler","45756f4b":"X_train.head()","3e83f6be":"len(X_train) + len(X_test) == len(data)","5afab254":"len(y_train) + len(y_test) == len(data)","31ef559f":"#data_msg = pd.DataFrame(columns=['NAME', 'R2', 'MAE', 'RMSE', 'MAPE'])","b5d47e8e":"def models_log(X_train, X_test, y_train, y_test):\n    data_msg = pd.DataFrame(columns=['NAME', 'R2', 'MAE', 'RMSE', 'MAPE'])\n    models = []\n    models.append(('LR', LinearRegression()))\n    models.append(('R', Ridge()))\n    models.append(('L', Lasso()))\n    models.append(('ELN', ElasticNet()))\n    models.append(('LARS', LarsCV()))\n    models.append(('BR', BayesianRidge(n_iter=1000)))\n    models.append(('KNR', KNeighborsRegressor()))\n    models.append(('DTR', DecisionTreeRegressor()))\n    models.append(('LSVR', LinearSVR()))\n    models.append(('SVR', SVR()))\n    models.append(('ABR', AdaBoostRegressor(n_estimators=200)))\n    models.append(('BR', BaggingRegressor(n_estimators=200)))\n    models.append(('ETR', ExtraTreesRegressor(n_estimators=200)))\n    models.append(('GBR', GradientBoostingRegressor(n_estimators=200)))\n    models.append(('RFR', RandomForestRegressor(n_estimators=200)))\n    models.append(('XGBR', XGBRegressor(n_estimators=200, eta=0.05, gamma=0.1)))\n    names = []\n    \n    for name, model in models:\n        model.fit(X_train, y_train)\n        m_predict = model.predict(X_test)\n        \n        r2 = r2_score(np.exp(y_test), np.exp(m_predict)) # coefficient of determination-R2 score\n        \n        mae = mean_absolute_error(np.exp(y_test), np.exp(m_predict)) # mean absolute error\n        \n        rmse = np.sqrt(mean_absolute_error(np.exp(y_test), np.exp(m_predict))) # root mean squared error\n        \n        mape = np.mean(np.abs((np.exp(y_test) - np.exp(m_predict)) \/ np.exp(m_predict))) * 100 # mean absolute percentage error\n        \n        new_msg = {'NAME': name, 'R2': r2, 'MAE': mae, 'RMSE': rmse, 'MAPE': mape}\n        data_msg = data_msg.append(new_msg, ignore_index=True)\n        \n    return data_msg","03fd858a":"models_log(X_train, X_test, y_train, y_test)","d2f8a4ab":"RFR = RandomForestRegressor(n_estimators=300, criterion='mae', \n                                  max_depth=None, min_samples_split=8, min_samples_leaf=1, max_features='auto', \n                                  max_leaf_nodes=None, random_state=42) \nRFR_clf=RFR.fit(X_train, y_train)\nRFR_predict = RFR.predict(X_test)\nprint('r2_score', r2_score(np.exp(y_test), np.exp(RFR_predict)))","43c6b6c5":"XGBR = XGBRegressor(n_estimators = 200, eta=0.05, gamma=0.1, \n                    max_depth=4, min_child_weight=8, \n                    colsample_bytree=0.7, subsample=0.99)\nXGBR.fit(X_train, y_train)\nXGBR_predict = XGBR.predict(X_test)\nprint('r2_score', r2_score(np.exp(y_test), np.exp(XGBR_predict)))","3631e911":"RFR_diff = (-np.exp(y_test) + np.exp(RFR_predict))[:55]\nXGBR_diff = (-np.exp(y_test) + np.exp(XGBR_predict))[:55]\ny_test_diff = (y_test - y_test).head(55)","dab1131c":"x_ax = range(len(np.exp(y_test_diff)))\nplt.figure(figsize=(25,14))\nplt.plot(x_ax, y_test_diff, lw=1, color=\"blue\", label=\"Actual\")\nplt.plot(x_ax, RFR_diff, lw=1, color=\"red\", label=\"RandomForestRegressor\")\nplt.plot(x_ax, XGBR_diff, lw=1, color=\"green\", label=\"XGBRegressor\")\nplt.legend()\nplt.show()","d1bf4376":"**For smokers, charges increase with an increase in bmi, non-smokers do not have such changes**","48bb9c0b":"# GradientBoostingRegressor","f6cc35eb":"**The bmi distribution is close to normal. We will logarithm the target attribute charges**","eb13101c":"**We encode it in 1 and 0**","349fdf44":"## data.charges","66fbba62":"**Difference between the predicted and actual values on the example of 55 values**","c403a3fb":"## data.age","9f20baf4":"## data.smoker","9dfda323":"**The graph shows how the smoker variable correlates with age and charges**","ba6f7fb0":"**The average value of charges for male and female is the same, the range of values is wider for men, and narrower for women.**","2269dc97":"**Gender does not affect our data in any way. There are more smokers among men, so charges for men are a little more.**","30487e5d":"## data.children","87ab5484":"## data.bmi","e8c6ecb8":"# Data preprocessing","204788a3":"**RFR, BR, TR, BR and SVR have the best results**","a7defa36":"## data.region","8a64e3f2":"**The smoker attribute has a very strong effect on the charges target variable.**","afcced52":"# Training the model","3981c552":"# Split and scaled","7eb07a62":"**1% - age from 18 to 19 years**","4b4b258a":"**Let's create a new feature of bmi_group, where we interpret bmi: 1 - body weight deficit, 7 - obesity.**","de252c79":"**charges are higher in northwest and southwest because the proportion of smokers there is higher**","a8b22bbe":"# Data overview","a1c5fe19":"# Visualization","05ceb7af":"# RandomForestRegressor","33703283":"**According to the children variable, we also see the influence of smoker on the target variable charges**","0d855f8e":"# Importing Necessary Libraries","c28ac8c4":"**The values of the region variable are distributed equally**","f0d6109a":"## data.sex"}}