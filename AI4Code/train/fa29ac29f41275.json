{"cell_type":{"50c89d61":"code","c7e22bcc":"code","6ec7a7cc":"code","62ddc772":"code","ec3b944f":"code","ae4351b3":"code","b1c6568b":"code","aef91727":"code","f0b56624":"code","b0c9d1ca":"code","716b2d1e":"code","ca5d5804":"markdown","17c136dc":"markdown","c6221645":"markdown","a28e8420":"markdown","245aedf9":"markdown","fb65da4d":"markdown","c55610e0":"markdown","442bc50c":"markdown","f41cd74f":"markdown","8f8b6e43":"markdown","02a844cb":"markdown","5db55be3":"markdown","d2f7bf8d":"markdown","008dacd7":"markdown","67596c79":"markdown","4aef9257":"markdown","171a32e8":"markdown","37df4aee":"markdown","22055800":"markdown","fbc98edd":"markdown","0bea8a6a":"markdown","1f610b6d":"markdown"},"source":{"50c89d61":"from keras.models import Sequential\nfrom keras.layers import Dense\nimport numpy","c7e22bcc":"seed = 9\nnumpy.random.seed(seed)","6ec7a7cc":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","62ddc772":"from pandas import read_csv\n\nfilename = '\/kaggle\/input\/BBCN.csv'\ndataframe = read_csv(filename)","ec3b944f":"array = dataframe.values","ae4351b3":"X = array[:,0:11] \nY = array[:,11]","b1c6568b":"dataframe.head()","aef91727":"model = Sequential()\nmodel.add(Dense(12, input_dim=11, bias_initializer='uniform', activation='relu'))\nmodel.add(Dense(8, bias_initializer='uniform', activation='relu'))\nmodel.add(Dense(1, bias_initializer='uniform', activation='sigmoid'))","f0b56624":"model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])","b0c9d1ca":"model.fit(X, Y, epochs=200, batch_size=30)","716b2d1e":"scores = model.evaluate(X, Y)\nprint(\"%s: %.2f%%\" % (model.metrics_names[1], scores[1]*100))\n","ca5d5804":"The first thing we need to do is put our data in an array. \n\n> An array is a data structure that stores values of **same data type**. \n\nIn Python, this is the main difference between arrays and lists. While python lists can contain values corresponding to different data types, arrays in python can only contain values corresponding to same data type.","17c136dc":"Let's import the object called read_csv. \n\nWe define a variable called filename and put our data set in it. \n\nThe last line does the work. It using the function called **read_csv** to put the contents of our data set into a variable called dataframe. ","c6221645":"# Welcome to A Gentle Introduction to Keras ","a28e8420":"# Step 5.  Fit the Model","245aedf9":"Run an algorithm on a dataset and you've built a great model. Can you produce the same model again given the same data?\nYou should be able to. It should be a requirement that is high on the list for your modeling project.\n\n> We achieve reproducibility in applied machine learning by using the exact same code, data and sequence of random numbers.\n\nRandom numbers are created using a random number generator. It\u2019s a simple program that generates a sequence of numbers that are random enough for most applications.\n\nThis math function is deterministic. If it uses the same starting point called a seed number, it will give the same sequence of random numbers.\n\nHold on... what's **deterministic** mean? \n\n> \"a deterministic algorithm is an algorithm which, given a particular input, will always produce the same output, with the underlying machine always passing through the same sequence of states\"\n\nLet's apply an English translator to this: \n\n> The **only purpose of seeding** is to make sure that you get the **exact same result** when you run this code many times on the exact same data.","fb65da4d":"**Where does machine learning fit into data science?**\n\nData science is a much broader discipline. \n\n> Data Scientists take the raw data, analyse it, connect the dots and tell a story often via several visualizations. They usually have a broader range of skill-set and may not have too much depth into more than one or two. They are more on the creative side. Like an Artist. An Engineer, on the other hand, is someone who looks at the data as something they have to take in and churn out an output in some appropriate form in the most efficient way possible. The implementation details and other efficiency hacks are usually on the tip of their fingers. There can be a lot of overlap between the two but it is more like A Data Scientist is a Machine Learning Engineer but not the other way round. -- Ria Chakraborty, Data Scientist\n\n\n\n","c55610e0":"We can piece it all together by adding each layer. \n\n> The first layer has 11 neurons and expects 11 input variables. \n\nThe second hidden layer has 8 neurons.\n\nThe third hidden layer has 8 neurons. \n\nThe output layer has 1 neuron to predict the class. \n\nHow many hidden layers are in our model? ","442bc50c":"# Step 5.  Compile the Model","f41cd74f":"# Step 3.  Import our data set\n","8f8b6e43":"# Step 4.  Build the Model\n","02a844cb":"batch_size denotes the subset size of your training sample (e.g. 100 out of 1000) which is going to be used in order to train the network during its learning process. \n\nEach batch trains network in a successive order, taking into account the updated weights coming from the appliance of the previous batch. \n\n>Example: if you have 1000 training examples, and your batch size is 500, then it will take 2 iterations to complete 1 epoch.\n\n","5db55be3":"Whenever you train a model with your data, you are actually producing some new values (predicted) for a specific feature. However, that specific feature already has some values which are real values in the dataset. \n\n> We know the the closer the predicted values to their corresponding real values, the better the model.\n\nWe are using cost function to measure **how close the predicted values are to their corresponding real values.**\n\nSo, for our model we choose binary_crossentropy. ","d2f7bf8d":"The code below is the trickest part of the exercise. Now, we are assinging X and y as output variables.\n\n> That looks pretty easy but keep in mind that an array starts at 0. \n\nIf you take a look at the shape of our dataframe (shape means the number of columns and rows) you can see we have 12 rows. \n\nOn the X array below we saying... include all items in the array from 0 to 11. \n\nOn the y array below we are saying... just use the column in the array mapped to the **11th row**. The **BikeBuyer** column. \n\n> Before we split X and Y out we are going to put them in an array. \n\n\n","008dacd7":"### ***Show Your support by Upvoting this Post*** \ud83d\udc4d \n\n### ***Follow me on Kaggle for getting more of such resources.***","67596c79":"**Epoch:** A full pass over all of your training data.\n\nFor example, let's say you have 1213 observations. So an epoch concludes when it has finished a training pass over all 1213 of your observations.\n\n> What you'd expect to see from running fit on your Keras model, is a decrease in loss over n number of epochs.","4aef9257":"# Step 4.  Split the Output Variables\n","171a32e8":"# Step 6.  Score the Model","37df4aee":"This course focuses on a specific sub-field of machine learning called **predictive modeling.**\n\nWithin predicitve modeling is a speciality or another sub-field called **deep learning.**\n\nWe will be crafting deep learning models with a library called Keras. \n\n>**Predictive modeling** is focused on developing models that make accurate predictions at the expense of explaining why predictions are made. \n\nYou and I don't need to be able to write a binary classification model. We need to know how to use and interpret the results of the model. ","22055800":"Binary learning models are models which just predict one of two outcomes: positive or negative. These models are very well suited to drive decisions, such as whether to administer a patient a certain drug or to include a lead in a targeted marketing campaign.\n\n> Accuracy is perhaps the most intuitive performance measure. **It is simply the ratio of correctly predicted observations.**\n\nUsing accuracy is only good for symmetric data sets where the class distribution is 50\/50 and the cost of false positives and false negatives are roughly the same. In our case our classes are balanced. ","fbc98edd":"# Step 2.  Set our random seed\n","0bea8a6a":"A metric is a function that is used to judge the performance of your model. Metric functions are to be supplied in the  metrics parameter when a model is compiled.\n\n>  Lastly, we set the cost (or loss) function to categorical_crossentropy. The (binary) cross-entropy is just the technical term for the **cost function** in logistic regression, and the categorical cross-entropy is its generalization for multi-class predictions via softmax","1f610b6d":"# Step 1. Import our modules\n\nTwo important points here. Firstly, the **from** means we aren't importing the entire library, only a specific module. Secondly, notice we **are** imporing the entire numpy library. \n\n> If you get a message that states: WARNING (theano.configdefaults): g++ not detected, blah... blah. Run this in your Anaconda prompt. \n\nconda install mingw libpython\n\n"}}