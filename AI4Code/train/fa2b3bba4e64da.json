{"cell_type":{"5f6ccefa":"code","842f3e98":"code","151637df":"code","1c146a65":"code","061ea80f":"code","77a434e4":"code","8e9cde77":"code","9ec9d218":"code","040d27c2":"code","f80450db":"code","4dfd7c2c":"code","aa3157c6":"code","71d8cfc5":"code","6f8b66cf":"code","87c0c757":"code","9c03f92d":"code","16900be4":"code","554121a4":"code","caf66c58":"code","f8ef6b77":"code","62a02a1c":"code","62f8f77b":"code","bea48d26":"code","78b25a3e":"code","5304c7de":"code","d4b8b298":"code","d97a8422":"code","2cfb763b":"code","f6dafd32":"code","30b4298c":"code","9745f1b3":"code","7c6a0f18":"code","d62b9a6e":"code","0eb9fbda":"code","7c02a035":"code","c869fdd5":"code","5301462d":"code","87d0fe34":"code","fe90a653":"code","28c3caca":"code","600c56bb":"code","7ea5538c":"code","f00009d5":"code","99ffd163":"markdown","82965e44":"markdown","86cabd81":"markdown","166b8eba":"markdown","c5ce9249":"markdown","fa7fe114":"markdown","28627872":"markdown","8a61361e":"markdown","6dac0e23":"markdown","4c550d0b":"markdown","f44e306d":"markdown","753531e7":"markdown","9cbbdd78":"markdown","7ac3f036":"markdown","222f4dea":"markdown","584bca28":"markdown","d593c6b7":"markdown","6cba53d6":"markdown","82f4fb47":"markdown","7396b43d":"markdown","e90e83f1":"markdown","324ba90f":"markdown","b32ee0be":"markdown","314fec1b":"markdown","315b2b75":"markdown","989f7cb3":"markdown","fa7139ae":"markdown","397eccd6":"markdown","2f10978a":"markdown","cf27587e":"markdown","3ccc4935":"markdown","0a5ce42e":"markdown","6201357a":"markdown","38018249":"markdown","be0e61db":"markdown","d9c8e559":"markdown","51da665a":"markdown","553c32a7":"markdown","af3b1612":"markdown","5b402e9a":"markdown","a6c0ff60":"markdown","74bd0aaa":"markdown"},"source":{"5f6ccefa":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score\n\nfrom scipy.cluster.hierarchy import linkage\nfrom scipy.cluster.hierarchy import dendrogram\nfrom scipy.cluster.hierarchy import cut_tree\n\npd.set_option('display.max_rows',500)\npd.set_option('display.max_columns',100)","842f3e98":"df = pd.read_csv('..\/input\/unsupervised-learning-on-country-data\/Country-data.csv')\ndf.head()","151637df":"data_dict = pd.read_csv('..\/input\/unsupervised-learning-on-country-data\/data-dictionary.csv')\ndata_dict","1c146a65":"df.shape","061ea80f":"df.info()","77a434e4":"df.isnull().sum()","8e9cde77":"df.describe()","9ec9d218":"df['country'].duplicated().sum()","040d27c2":"len(list(df['country'].unique()))","f80450db":"# Since variables exports, health and imports are in percentage based on gdpp - Converting them to actual values\ndf['exports'] = df['exports'] * df['gdpp']\/100\ndf['imports'] = df['imports'] * df['gdpp']\/100\ndf['health'] = df['health'] * df['gdpp']\/100","4dfd7c2c":"df.head()","aa3157c6":"df.columns # Columns in the dataframe","71d8cfc5":"columns = df.columns[1:] # Exluding variable - country in columns list for data visualization","6f8b66cf":"# Visualization of Data distubution among all numerical variables\nfor col in columns:\n    sns.distplot(df[col])\n    plt.show();\n    ","87c0c757":"sns.pairplot(df)\nplt.show()","9c03f92d":"# Correlation data and visualization using heatmaps\nplt.figure(figsize=(12,10))\ndf_corr = (df.drop('country',axis=1)).corr()\nsns.heatmap(df_corr,cmap=\"YlGnBu\",annot=True)","16900be4":"i=1\nplt.subplots(ncols=3,nrows=3, figsize=(15,12))\nfor col in columns:\n    plt.subplot(3,3,i)\n    sns.boxplot(df[col])\n    i+=1;\nplt.show()","554121a4":"# Treatment using soft capping\nfor col in columns:\n    percentiles = df[col].quantile([0.01,0.99]).values\n    df[col][df[col] <= percentiles[0]] = percentiles[0]\n    df[col][df[col] >= percentiles[1]] = percentiles[1]","caf66c58":"i=1\nplt.subplots(ncols=3,nrows=3, figsize=(15,12))\nfor col in columns:\n    plt.subplot(3,3,i)\n    sns.boxplot(df[col])\n    i+=1;\nplt.show()","f8ef6b77":"#Scaling the data\nscaler = StandardScaler()\nscaled_data = pd.DataFrame(scaler.fit_transform(df.drop('country',axis=1)))\nscaled_data.columns = df.drop('country',axis=1).columns\nscaled_data.head()","62a02a1c":"#Calculating the Hopkins statistic\nfrom sklearn.neighbors import NearestNeighbors\nfrom random import sample\nfrom numpy.random import uniform\nimport numpy as np\nfrom math import isnan\n \ndef hopkins(X):\n    d = X.shape[1]\n    #d = len(vars) # columns\n    n = len(X) # rows\n    m = int(0.1 * n) \n    nbrs = NearestNeighbors(n_neighbors=1).fit(X.values)\n \n    rand_X = sample(range(0, n, 1), m)\n \n    ujd = []\n    wjd = []\n    for j in range(0, m):\n        u_dist, _ = nbrs.kneighbors(uniform(np.amin(X,axis=0),np.amax(X,axis=0),d).reshape(1, -1), 2, return_distance=True)\n        ujd.append(u_dist[0][1])\n        w_dist, _ = nbrs.kneighbors(X.iloc[rand_X[j]].values.reshape(1, -1), 2, return_distance=True)\n        wjd.append(w_dist[0][1])\n \n    H = sum(ujd) \/ (sum(ujd) + sum(wjd))\n    if isnan(H):\n        print(ujd, wjd)\n        H = 0\n \n    return H\nhopkins(df.drop('country',axis=1))","62f8f77b":"ssd = []\nrange_n_clusters = list(range(2,10))\nfor num_clusters in range_n_clusters:\n    kmeans = KMeans(n_clusters=num_clusters, max_iter=50,random_state=0)\n    kmeans.fit(scaled_data)\n    \n    ssd.append(kmeans.inertia_)\n    \n# plot the SSDs for each n_clusters\n# ssd\nplt.plot(ssd)\nplt.title('Elbow curve')\nplt.grid(True)\n","bea48d26":"# silhouette analysis\n\nrange_n_clusters = list(range(2,10))\nsil_score = []\nfor num_clusters in range_n_clusters:\n    \n    # intialise kmeans\n    kmeans = KMeans(n_clusters=num_clusters, max_iter=50)\n    kmeans.fit(scaled_data)\n    \n    cluster_labels = kmeans.labels_\n    \n    # silhouette score\n    silhouette_avg = silhouette_score(scaled_data, cluster_labels)\n    sil_score.append([num_clusters,silhouette_score(scaled_data, cluster_labels)])\n    print(\"For n_clusters={0}, the silhouette score is {1}\".format(num_clusters, silhouette_avg))\n\nprint()\nsil_df = pd.DataFrame(sil_score)\nsil_df    \n","78b25a3e":"plt.plot(sil_df[0],sil_df[1])\nplt.title('silhoutte_score')","5304c7de":"# final model with k=3\nkmeans = KMeans(n_clusters=3, max_iter=50, random_state=0)\nkmeans.fit(scaled_data)","d4b8b298":"kmeans.labels_","d97a8422":"# Assigning the cluster labels into data frame for further data retrival\ndf['cluster_id_kmeans'] = kmeans.labels_\ndf.head()","2cfb763b":"# Dendogram using single linkage\nplt.figure(figsize=(8,6))\nmergings = linkage(scaled_data, method=\"single\", metric='euclidean')\ndendrogram(mergings)\nplt.title('Single linkage')\nplt.show()","f6dafd32":"# complete linkage\nplt.figure(figsize=(8,6))\nmergings = linkage(scaled_data, method=\"complete\", metric='euclidean')\ndendrogram(mergings)\nplt.title('Complete linkage')\nplt.show()","30b4298c":"# From the above dendogram considering 3 clusters and labels as follows\ncluster_labels = cut_tree(mergings, n_clusters=3).reshape(-1, )\ncluster_labels","9745f1b3":"# Assigning the cluster lables to main dataframe\ndf['cluster_id_hc'] = cluster_labels\ndf.head()","7c6a0f18":"# GDPP v\/s Income\nplt.figure(figsize=(12,5))\nplt.subplot(1,2,1)\nsns.scatterplot(x='gdpp',y='income',data=df,hue='cluster_id_kmeans',palette='Set1')\nplt.title('K-means clustering')\nplt.subplot(1,2,2)\nsns.scatterplot(x='gdpp',y='income',data=df,hue='cluster_id_hc',palette='Set1')\nplt.title('Heirarchical clustering')\nplt.show()","d62b9a6e":"# Child mortality rate v\/s Income\nplt.figure(figsize=(12,5))\nplt.subplot(1,2,1)\nsns.scatterplot(x='child_mort',y='income',data=df,hue='cluster_id_kmeans',palette='Set1')\nplt.title('K-means clustering')\nplt.subplot(1,2,2)\nsns.scatterplot(x='child_mort',y='income',data=df,hue='cluster_id_hc',palette='Set1')\nplt.title('Heirarchical clustering')\nplt.show()","0eb9fbda":"# GDPP v\/s Child mortality\nplt.figure(figsize=(12,5))\nplt.subplot(1,2,1)\nsns.scatterplot(x='gdpp',y='child_mort',data=df,hue='cluster_id_kmeans',palette='Set1')\nplt.title('K-means clustering')\nplt.subplot(1,2,2)\nsns.scatterplot(x='gdpp',y='child_mort',data=df,hue='cluster_id_hc',palette='Set1')\nplt.title('Hierarchical clustering')\nplt.show()","7c02a035":"# Grouping the data to find the centroids of the clusters\ndf[['gdpp','income','child_mort','cluster_id_kmeans']].groupby('cluster_id_kmeans').mean()","c869fdd5":"df[['gdpp','income','child_mort','cluster_id_kmeans']].groupby('cluster_id_kmeans').mean().plot(kind='bar')","5301462d":"# Box plots\nplt.subplots(ncols=3,figsize=(15,5))\nplt.subplot(1,3,1)\nsns.boxplot(x='cluster_id_kmeans', y='gdpp', data=df)\nplt.subplot(1,3,2)\nsns.boxplot(x='cluster_id_kmeans', y='income', data=df)\nplt.subplot(1,3,3)\nsns.boxplot(x='cluster_id_kmeans', y='child_mort', data=df)","87d0fe34":"# Grouping the direst need top 5 countries from k-means clustering method\ndf[df['cluster_id_kmeans']==0].sort_values(['gdpp','income','child_mort'],ascending=[True,True,False]).head()","fe90a653":"# Grouping the data to find the centroids of the clusters\ndf[['gdpp','income','child_mort','cluster_id_hc']].groupby('cluster_id_hc').mean()","28c3caca":"# Plot of centroids using barplot\ndf[['gdpp','income','child_mort','cluster_id_hc']].groupby('cluster_id_hc').mean().plot(kind='bar')","600c56bb":"plt.subplots(ncols=3,figsize=(15,5))\nplt.subplot(1,3,1)\nsns.boxplot(x='cluster_id_hc', y='gdpp', data=df)\nplt.subplot(1,3,2)\nsns.boxplot(x='cluster_id_hc', y='income', data=df)\nplt.subplot(1,3,3)\nsns.boxplot(x='cluster_id_hc', y='child_mort', data=df)","7ea5538c":"# Grouping the direst need top 5 countries from Hierarchical clustering method\ndf[df['cluster_id_hc']==0].sort_values(['gdpp','income','child_mort'],ascending=[True,True,False]).head()","f00009d5":"(df[df['cluster_id_hc']==0].sort_values(['gdpp','income','child_mort'],ascending=[True,True,False]).head())[['country']]","99ffd163":"### Describing the data","82965e44":"> Soft capping will reduce the influence of outliers on biasing and help in analysis.","86cabd81":"### Reading Data dictionary","166b8eba":"### Checking for info - Datatypes","c5ce9249":"## Data Preparation\n### Outlier","fa7fe114":"### Check for shape \/ size parameters","28627872":"> Clusters are well distinguished","8a61361e":"> From the silhoutte analysis we have got highest sil_score at k=2, since we are not considering in practice so going to next highest sil_score i.e., k=3","6dac0e23":"> From above plot, it is observed that after k=3 nature if SSD elbow curve i.e., the rate of change of kmeans inertia is insignificant.","4c550d0b":"# Clustering of countries","f44e306d":"> K-Means clustering is done.","753531e7":"> All data types are correct","9cbbdd78":"### __Check for null values__","7ac3f036":"# Cluster profiling:","222f4dea":"### Univariate analysis","584bca28":"#### From above pair plot and heatmap\n> Child mortality rate, life ecpectancy and total fertility are highly correlated.\n\n> __GDPP__ is highly correlated with exports, imports, health and income. If __GDPP__ is good, income will be is good and will have good health infra so, health is not an issue.","d593c6b7":"> Clusters labelled 0 and 1 are found to be overlapped. May be due to not consdering the other variables","6cba53d6":"> Based on the clustering of countries done using K-Means and hierarchical clustering, we have below common observations\n\n- Resulted with optimal value of k = 3 i.e, number of clusters\n- All 3 clusters showing the different characteristics required as follows\n    \n    - Low __GDPP__, low __Income__ and high __Child_mortality__.\n    - Medium __GDPP__, __income__ and __Child_mortality__.\n    - High __GDPP__, high __income__ and low __Child_mortality__.\n    \n- Since our objective and interest is to identify the countries with bad socio-economic and high child mortality which is direly need in the help. Below mentioned the country named which is need in help.\n    - __Liberia__\n    - __Burundi__\n    - __Congo, Dem. Rep__\n    - __Niger__\n    - __Sierra Leone__","82f4fb47":"> From the above barplot and data frame we can notice 3 clusters with different characteristics as follows\n\n- Low __GDPP__, low __Income__ and high __Child_mortality__.\n\n- Medium __GDPP__, __income__ and __Child_mortality__.\n\n- High __GDPP__, high __income__ and low __Child_mortality__","7396b43d":"# Visualize using scatterplot","e90e83f1":"### K-means Clustering","324ba90f":"> We have got hopkins value of 0.866 which says, the data we have got is ~87% dissimilar and thus data is not uniformly randomly distributed.","b32ee0be":"### Importing required libraries","314fec1b":"### K-means clustering parameters analysis","315b2b75":"### Finding the duplicate entries of coutry names","989f7cb3":"> From the above barplot and data frame we can notice 3 clusters with different characteristics as follows\n\n- Low __GDPP__, low __Income__ and high __Child_mortality__.\n\n- Medium __GDPP__, __income__ and __Child_mortality__.\n\n- High __GDPP__, high __income__ and low __Child_mortality__","fa7139ae":"> From the above dendogram, we have notices that the data points are soo close and hard to determing the value of k. So, let's go ahead with complete linkage.","397eccd6":"> Except in life expectancy all the variables are having outliers above the upper hinge.\n\n> As per our objective we need to find out the countries who are in dire need of health aid. So we sholud keep in mind about high child mortality, low health, low life expectancy regarding health and high inflation, low income, low gdpp are our targets.\n\n> Soft capping is considered for further analysis. Since dataset is small and all the lower socio-economic countries are important.","2f10978a":"### Bivariate analysis","cf27587e":"> All the country names are unique and no duplicates found.","3ccc4935":"## Algorithm for analysis (Clustering)\n\n>1. Data Quality Check\n\n>2. EDA: Univariate and Bivariate\n\n>3. Outlier\n\n>4. Scaling\n\n>5. Hopkin's Test\n\n>6. Finding the best value of k(Number of clusters) using SSD Elbow, Silhoutte Score\n\n>7. Using the final value of k(Number of clusters), performing the k-Means analysis\n\n>8. Visualization the clustering using scatter plot\n\n>9. Performing Cluster profiling: __GDPP, CHILD_MORT and INCOME.__\n\n>10. Hierarchical Clustering: Single linkage, Complete Linkage\n","0a5ce42e":"> It is evident from above plots that clustering done is effective at value of k=3, since all the medians are distant and nature of plot is as per criteria derived from above barplot.","6201357a":"### Hierarchical clustering","38018249":"> It is evident from mabove plots that clustering done is effective at value of k=3, since all the medians are distant and nature of plot is as per criteria derived from above barplot.","be0e61db":"> From the above dendogram we can see dissimilarity of clusters are found at distance 10. We will get k=3.","d9c8e559":"### Hierarchical clustering - Parameters analysis","51da665a":"## Problem Statement\nHELP International is an international humanitarian NGO that is committed to fighting poverty and providing the people of backward countries with basic amenities and relief during the time of disasters and natural calamities. It runs a lot of operational projects from time to time along with advocacy drives to raise awareness as well as for funding purposes.\n\nAfter the recent funding programmes, they have been able to raise around $ 10 million. \n\n## Objective\n- The CEO of the NGO needs to decide how to use this money strategically and effectively. The significant issues that come while making this decision are mostly related to choosing the countries that are in the direst need of aid. \n\n- Categorise the countries using some socio-economic and health factors that determine the overall development of the country. Then you need to suggest the countries which the CEO needs to focus on the most.  The datasets containing those socio-economic factors and the corresponding data dictionary are provided below.","553c32a7":"### Reading the data","af3b1612":"> - Normal distrubution of data is observed in exports, imports, inflation. There is possibility of internal grouping for clustering. Since, all the values fall under 3\u03c3 over the mean.\n\n> - gdpp, total fertility, income, child mortality, health are showing multi modal distrubution. Where we can find the patternd for clustering. ","5b402e9a":"> No null values are observed","a6c0ff60":"> Clusters are well distinguished","74bd0aaa":"### Data Quality Check"}}