{"cell_type":{"257db7e2":"code","c5184194":"code","0153c1b1":"code","d245572e":"code","832f410f":"code","e18aa2c9":"code","d2074c49":"code","2bcfd54e":"code","65fc44e6":"code","4b2c000f":"code","35b5d6a4":"code","af786351":"code","1fcfbb2b":"code","9ecd68f3":"code","e51d157b":"code","569dd5b7":"code","a4814563":"code","d851967a":"code","2a312cc8":"code","a1afb3d7":"markdown","60d98b55":"markdown","1118efd7":"markdown","d869ae1b":"markdown","b1334801":"markdown"},"source":{"257db7e2":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcTRr1Gn-jlGX456nMVwueufhP1bICaomacgIKnBG2nF_1eVuzF0&usqp=CAU',width=400,height=400)","c5184194":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px\nplt.style.use('fivethirtyeight')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0153c1b1":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcRhcM90BIhI1N81YeMCtzjRh-M_tJZuaX-BT7iaeOGQrEHmPLvh&usqp=CAU',width=400,height=400)","d245572e":"df = pd.read_csv('..\/input\/andrewng-machine-learning-tweets\/AndrewNG Machine Learning Tweets.csv', encoding='ISO-8859-2')","832f410f":"df.head() ","e18aa2c9":"df.plot(subplots=True, figsize=(10, 10), sharex=False, sharey=False)\nplt.show()","d2074c49":"sns.countplot(df['polarity'],linewidth=3,palette=\"Set2\",edgecolor='black')\nplt.show()","2bcfd54e":"from category_encoders import OneHotEncoder\nfrom sklearn.linear_model import LinearRegression, Ridge\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler, MaxAbsScaler\n\ncols_selected = ['username']\nohe = OneHotEncoder(cols=cols_selected, use_cat_names=True)\ndf_t = ohe.fit_transform(df[cols_selected+['id']])\n\n#scaler = MaxAbsScaler()\nX = df_t.iloc[:,:-1]\ny = df_t.iloc[:, -1].fillna(df_t.iloc[:, -1].mean()) \/ df_t.iloc[:, -1].max()\n\nmdl = Ridge(alpha=0.1)\nmdl.fit(X,y)\n\npd.Series(mdl.coef_, index=X.columns).sort_values().head(10).plot.barh()","65fc44e6":"df['id'].hist(figsize=(10,5), bins=20)","4b2c000f":"sns.countplot(x=\"polarity\",data=df,palette=\"GnBu_d\",edgecolor=\"black\")\nplt.xticks(rotation=45)\nplt.yticks(rotation=45)\n# changing the font size\nsns.set(font_scale=1)","35b5d6a4":"ax = df['polarity'].value_counts().plot.barh(figsize=(14, 6))\nax.set_title('Polarity Distribution', size=18)\nax.set_ylabel('polarity', size=14)\nax.set_xlabel('id', size=14)","af786351":"import matplotlib.ticker as ticker\nax = sns.distplot(df['polarity'])\nplt.xticks(rotation=45)\nax.xaxis.set_major_locator(ticker.MultipleLocator(2))","1fcfbb2b":"import warnings\nwarnings.filterwarnings(\"ignore\")\nsns.boxplot(x='polarity', y='id', data=df, palette='rainbow')","9ecd68f3":"fig = px.bar(df[['polarity','id']].sort_values('id', ascending=False), \n                        y = \"id\", x= \"polarity\", color='id', template='ggplot2')\nfig.update_xaxes(tickangle=45, tickfont=dict(family='Rockwell', color='crimson', size=14))\nfig.update_layout(title_text=\"Andrew Ng tweets\")\n\nfig.show()","e51d157b":"fig = px.parallel_categories(df, color=\"polarity\", color_continuous_scale=px.colors.sequential.Viridis)\nfig.show()","569dd5b7":"plt.figure(figsize=(18,6))\nplt.subplot(1, 2, 1)\nsns.countplot(x=df['polarity'],hue=df['id'],palette='summer',linewidth=3,edgecolor='white')\nplt.title('id')\nplt.subplot(1, 2, 2)\nsns.countplot(x=df['polarity'],hue=df['conversation_id'],palette='hot',linewidth=3,edgecolor='white')\nplt.title('conversation_id')\nplt.show()","a4814563":"fig = px.bar(df, x= \"polarity\", y= \"id\", color_discrete_sequence=['crimson'],)\nfig.show()","d851967a":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.tweet)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set2', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","2a312cc8":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcTtQw2GSN_QCpC7B-Pf9SP2o93ym2WH7-c1MxjQFikDNS9oUW3L&usqp=CAU',width=400,height=400)","a1afb3d7":"towardsdatascience.com - I don't understand most part what I'm doing though many times it's helpful to adopt a \"I don't try to understand the way people behave\" way of thinking. Trying to understand people reasons can be too painful.","60d98b55":"azquotes.com - I don't know if he ever said that. But the more we reflect the better we can read people.","1118efd7":"Andrew Ng is Co-founder of Coursera, and an Adjunct Professor of Computer Science at Stanford University. His machine learning course is the MOOC that had led to the founding of Coursera! \nIn 2011, he led the development of Stanford University\u2019s main MOOC (Massive Open Online Courses) platform and also taught an online Machine Learning class to over 100,000 students, thus helping launch the MOOC movement and also leading to the founding of Coursera.\n\nNg also works on machine learning, with an emphasis on deep learning. He had founded and led the \u201cGoogle Brain\u201d project, which developed massive-scale deep learning algorithms. This resulted in the famous \u201cGoogle cat\u201d result, in which a massive neural network with 1 billion parameters learned from unlabeled YouTube videos to detect cats. Until recently, he led Baidu's ~1300 person AI Group, which developed technologies in deep learning, speech, computer vision, NLP, and other areas. \nhttps:\/\/www.coursera.org\/instructor\/andrewng","d869ae1b":"Kaggle Notebook Runner: Mar\u00edlia Prata   @mpwolke","b1334801":"youtube.com"}}