{"cell_type":{"cc8e9730":"code","04b44926":"code","a2d623c3":"code","9f5c5ba2":"code","b0e1ae0d":"code","fdd19286":"code","ccb90c5b":"code","fa80a1c7":"code","f201e193":"code","ab7e8864":"code","65a9d700":"code","fcb6d1c3":"code","e1f2a3c9":"code","4b887993":"code","1c8b2598":"code","165c1788":"code","fbff201e":"code","878ae2ae":"code","13f13139":"code","c6e5e6a4":"code","bdd359cb":"code","b1769314":"code","d2c91af6":"code","3079bee3":"code","a94c62fa":"code","a63f2348":"code","dea45dbc":"code","be45b854":"code","4a7bd7be":"code","3ec55365":"code","1f3780c9":"code","639b4679":"code","aa53dc53":"code","6142da8b":"markdown","a5baad5c":"markdown","45564f72":"markdown","cf75e51e":"markdown","b55e136c":"markdown","e4f3a0ef":"markdown","0acdfb9b":"markdown","1b8cea15":"markdown"},"source":{"cc8e9730":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","04b44926":"dataframe = pd.read_csv(\"..\/input\/Iris.csv\")","a2d623c3":"dataframe.info()","9f5c5ba2":"dataframe.corr()","b0e1ae0d":"f, ax = plt.subplots(figsize=(12,12))\nsns.heatmap(dataframe.corr(), annot=True, linewidths=.5,fmt='.1f', ax=ax)\nplt.show()","fdd19286":"dataframe.head(10)","ccb90c5b":"dataframe.tail(10)","fa80a1c7":"dataframe.columns","f201e193":"dataframe.Species.unique() # data frame columns 'Species' unique()","ab7e8864":"setosa = dataframe[dataframe.Species == \"Iris-virginica\"] # data frame setosa","65a9d700":"virginica = dataframe[dataframe.Species == \"Iris-virginica\"] # data frame virginica","fcb6d1c3":"versicolor = dataframe[dataframe.Species == \"Iris-versicolor\"] # data frame versicolor","e1f2a3c9":"#setosa.describe()\n#virginica.describe()\n#versicolor.describe()","4b887993":"#data =  dataframe.drop([\"Id\"], axis=1)","1c8b2598":"dataframe['PetalLengthCm'].plot(kind= 'line', color='red', grid=True,label='PetalLengthCm', alpha= 0.7,linewidth=1)\ndataframe['PetalWidthCm'].plot(kind= 'line', color= 'blue', grid=True, alpha=0.7, label='PetalWidthCm', linewidth=1)\ndataframe['SepalWidthCm'].plot(kind= 'line', color= 'green', grid=True, alpha=0.7, label = 'SepalWidthCm', linewidth=1)\nplt.xlabel('x axis')\nplt.ylabel('y axis')\nplt.show()","165c1788":"# Line Plot\nplt.plot(setosa.Id,setosa.PetalLengthCm,color=\"green\",linewidth=1, label= \"setosa\")\nplt.plot(virginica.Id,virginica.PetalWidthCm, color=\"blue\", label= \"virginica\",)\nplt.plot(versicolor.Id,versicolor.SepalWidthCm,color=\"red\", label= \"versicolor\")\nplt.legend(loc=\"upper right\")\nplt.xlabel(\"x axis\")\nplt.ylabel(\"y axis\")\nplt.title(\"Line Plot\")\nplt.show()","fbff201e":"plt.plot(setosa.Id,setosa.PetalLengthCm,color=\"green\",linewidth=1, label= \"setosa\")\nplt.xlabel('x axis')\nplt.ylabel('y axis')\nplt.show()","878ae2ae":"plt.plot(versicolor.Id,versicolor.SepalWidthCm,color=\"red\", label= \"versicolor\")\nplt.xlabel('x axis')\nplt.ylabel('y axis')\nplt.show()","13f13139":"plt.plot(virginica.Id,virginica.PetalWidthCm, color=\"blue\", label= \"virginica\",)\nplt.xlabel('x axis')\nplt.ylabel('y axis')\nplt.show()","c6e5e6a4":"# Scatter Plot\ndataframe.plot(kind= \"scatter\", color= \"blue\", alpha=0.5, x = \"PetalLengthCm\", y = \"PetalWidthCm\")\nplt.xlabel(\"versicolor\")\nplt.ylabel(\"setosa\")\nplt.title(\"Setosa and Versicolor\")\nplt.show()","bdd359cb":"# Histogram Plot\ndataframe['PetalLengthCm'].plot(kind= \"hist\", bins= 50, range= (0,10),figsize=(10,10))\nplt.show()","b1769314":"# dictionary keys and values dictionary\ndictionary = {'Turkey' : 'erzincan','ankara' : 'kemah'}\nprint(dictionary.keys())\nprint(dictionary.values())","d2c91af6":"# change dictionary content or clear\n# list is change\ndictionary['ankara'] = \"turkey\"\nprint(dictionary)\ndictionary['erzincan'] = \"kemah\"\nprint(dictionary)\ndel dictionary[\"erzincan\"]\nprint(dictionary)\nprint(\"ankara\" in dictionary)\ndictionary.clear()\nprint(dictionary)","3079bee3":"print(dictionary)","a94c62fa":"dataframe = pd.read_csv('..\/input\/Iris.csv')","a63f2348":"series = dataframe['PetalLengthCm']\nprint(type(series))\ndata_frame = dataframe[['PetalLengthCm']]\nprint(type(data_frame))","dea45dbc":"# Comparison operator\nprint(3 > 2)\nprint(3 != 2)\n# Boolean operator\nprint(True and False)\nprint(True or False)","be45b854":"dataframe.columns","4a7bd7be":"# Filtring pandas data frame\na = dataframe['SepalLengthCm']>7.6 # are Length who have higher Iris-virginica ('SepalLengthCm')\ndataframe[a]","3ec55365":"# Filtering pandas with logical_and\ndataframe[np.logical_and(dataframe['SepalLengthCm']>7, dataframe['PetalWidthCm']>1.9)] ","1f3780c9":"# Filtring Pandas\ndataframe[(dataframe[\"SepalLengthCm\"]>7.6) & (dataframe['PetalWidthCm']>2)] # Length and Width","639b4679":"# while loop\ni = 0\nwhile i != 5 :\n    print('i is: ',i)\n    i +=1\nprint(i, 'is equal to 5')","aa53dc53":"# for loop\nlis = [1,2,3,4,5]\nfor i in lis:\n    print('i is: ', i)\nprint('')","6142da8b":"# DATAI Team ","a5baad5c":"### MATPLOTLIB\n\n### Line Plot","45564f72":"### Dictionary\nIt has 'key' and 'value'","cf75e51e":"Filtering. Comparison operator: ==, <, >, <= ","b55e136c":"### Histogram Plot","e4f3a0ef":"### PANDAS\nCSV: comma - separated values","0acdfb9b":"### Scatter Plot","1b8cea15":"### WHILE and for loops\nbasic while and for loops"}}