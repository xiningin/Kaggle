{"cell_type":{"6957e0ac":"code","dd479c9d":"code","c12e2785":"code","19b6d757":"code","05017e8e":"code","b02c415e":"code","c3dfa679":"code","97386805":"code","b886a04d":"code","4504fcf3":"code","921901b7":"code","3d854971":"code","01ccebf8":"code","b9208c70":"code","09ffbbf9":"code","5616df6a":"code","fe2e06ee":"code","4d88c9a1":"code","05bdeaf8":"code","faa1e374":"code","5805e089":"code","4d1b893b":"code","99c8d1fd":"code","76543fc8":"code","20ff6a9f":"code","1249b993":"code","791cfa8c":"code","7cc5d496":"code","1b2be6e9":"code","65bbb352":"code","f89d7f31":"code","424b1530":"code","57a5f71d":"code","1ce584f1":"code","2c8c8be6":"code","3497d44d":"code","78483529":"code","57ed3f23":"code","40a5e794":"code","979816ba":"code","ef8e1bb3":"code","765d90e7":"code","cfa82400":"code","e6ce6dbc":"code","a3f140b7":"code","bacdef8d":"code","7b420c52":"code","e03253c2":"code","f98e2d64":"code","edb45145":"code","19b6bf65":"code","8a93c49d":"code","cabe0a95":"code","2865d482":"code","a08ecd2c":"code","c087bfc3":"code","e2d38d12":"code","7dfb54b0":"code","b68700ac":"code","147f57d0":"code","be4ae50e":"code","4aa70cde":"code","7bd877dc":"code","d2e4c1c2":"code","fe6c7a1e":"code","8602c5ff":"code","fc91af31":"code","b3a5901e":"code","04673ef9":"code","138e5bbd":"code","9128d486":"code","5ffd2f2f":"code","13826807":"code","a9524634":"code","60b733c8":"code","23be45af":"code","9e7e2000":"code","9b2eb5c6":"code","52895152":"code","a3c72136":"code","a9d63a9e":"code","c7b703da":"code","2e34c6e5":"code","c21ae439":"code","af04c560":"code","6a0b7a83":"code","7e1bf61a":"code","8acdd3a1":"code","1999205b":"code","12fbd27c":"code","949943f5":"code","1405010d":"code","7bc24986":"code","45ed22bb":"code","cc9f02f7":"code","8cf4832a":"code","f0b29ca8":"code","0346afaf":"code","5ee3f6c8":"code","7621b65a":"code","1a578d26":"code","a59bc2a9":"code","9d91724a":"code","b6e89ade":"code","a9fc6fb6":"code","e2047881":"code","ca9b8d8d":"code","ad272623":"code","fe0104ab":"code","01b35d74":"code","70b8c1fe":"code","ebde29b1":"code","f7a1ce21":"code","dce656d1":"code","8ce289c7":"code","e20807e4":"code","e48d0df7":"code","b8b88fc1":"code","711e8608":"code","28aead3a":"code","6827d627":"code","ae45bc4d":"code","c433fc18":"code","b4056653":"code","baee428a":"code","83352ae3":"markdown","9f38dc29":"markdown","311c7794":"markdown","844fa10e":"markdown","9dd45ce7":"markdown","35a08708":"markdown","e2c02a75":"markdown","2f6c5f09":"markdown","17691236":"markdown","47bc2573":"markdown","00188c16":"markdown","897e943e":"markdown","952aab59":"markdown","a52ce270":"markdown","b46c9808":"markdown","f7209155":"markdown","6c3c9f9b":"markdown","83e8524d":"markdown","56951bf7":"markdown","c740231f":"markdown","82b9869d":"markdown","c2213a3b":"markdown","85db5a3b":"markdown","ca6a179e":"markdown","d95d7e58":"markdown","a2de1e35":"markdown","7b708b5a":"markdown","bdb84bc6":"markdown","b9b93691":"markdown","c0c78b72":"markdown","6566cdb3":"markdown","450a6bb4":"markdown","70fb812f":"markdown","caf6bee0":"markdown","08ba3bf4":"markdown","78d83817":"markdown","cead4983":"markdown","6daf3235":"markdown","82bc53af":"markdown","f0cdf7d2":"markdown","8f1e7c36":"markdown","2020aeb7":"markdown","40ecf0e0":"markdown","5ee2706b":"markdown","b9ef6e56":"markdown","e790f20a":"markdown","2eeb05f4":"markdown","0d7aca5e":"markdown","85f30b58":"markdown","33c5231e":"markdown","f8c54161":"markdown","9a04cdcd":"markdown","8f2d0341":"markdown"},"source":{"6957e0ac":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom collections import Counter\n%matplotlib inline\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","dd479c9d":"data=pd.read_csv(\"\/kaggle\/input\/students-performance-in-exams\/StudentsPerformance.csv\")\ndata","c12e2785":"data.info()","19b6d757":"data.describe()","05017e8e":"data.columns","b02c415e":"data.corr()","c3dfa679":"f,ax=plt.subplots(figsize=(8,8))\nsns.heatmap(data.corr(),annot=True,lw=.5,fmt=\".1f\",ax=ax)\nplt.show()","97386805":"data.head(3)","b886a04d":"data[\"math score\"].plot(kind=\"line\",color=\"b\",label=\"math score\",ls=\"-\",lw=.7,alpha=.6,grid=True,figsize=(10,10))\ndata[\"writing score\"].plot(kind=\"line\",color=\"r\",label=\"writing score\",ls=\"-\",lw=.5,alpha=.5,grid=True)\ndata[\"reading score\"].plot(kind=\"line\",color=\"g\",label=\"writing score\",ls=\"-\",lw=.5,alpha=.4,grid=True)\nplt.xlabel(\"x axis\",color=\"m\")\nplt.ylabel(\"y axis\",color=\"m\")\nplt.show()","4504fcf3":"data.plot(kind=\"scatter\",x=\"reading score\",y=\"writing score\",color=\"orange\",alpha=.6,figsize=(9,9),grid=True)\nplt.xlabel(\"reading score\",color=\"k\")\nplt.ylabel(\"writing score\",color=\"k\")\nplt.title(\"Reading vs. Writing Score\")\nplt.show()","921901b7":"plt.subplots(figsize=(10,10))\nplt.scatter(data[\"reading score\"],data[\"writing score\"],color=\"c\",alpha=.5)\nplt.grid(True)","3d854971":"data[\"reading score\"].plot(kind=\"hist\",color=\"m\",alpha=.5,grid=True,figsize=(8,8))","01ccebf8":"plt.hist(data[\"reading score\"])","b9208c70":"series=data[\"reading score\"]\nseries","09ffbbf9":"data_frame=data[[\"reading score\"]]\ndata_frame","5616df6a":"#1.\nx=data[\"math score\"]>97\ndata[x]","fe2e06ee":"#2.\ndata[np.logical_and(data[\"math score\"]>97,data[\"reading score\"]>98)]","4d88c9a1":"#3.\ndata[(data[\"reading score\"]>98)&(data[\"math score\"]>97)]","05bdeaf8":"#4.\ndata[(data[\"gender\"]==\"female\")&(data[\"test preparation course\"]==\"completed\")&(data[\"writing score\"]>99)&(data[\"math score\"]>95)&(data[\"lunch\"]==\"standard\")]","faa1e374":"#5.\nfirst_filter=data[\"math score\"]>97\nsecond_filter=data[\"reading score\"]>97\ndata[first_filter & second_filter]","5805e089":"#6.\ndata[\"reading score\"][data[\"math score\"]>97]","4d1b893b":"#While loop\ni=0\nwhile i!= 8:\n    print(i)\n    i+=2\nprint(i,\"is equal to 8\")","99c8d1fd":"#for loop\n#1)lists:\nliste1=[5,1,8,-3,0,4,13]\nfor index,value in enumerate(liste1):\n    print(\"index:\",index,\", value:\",value)","76543fc8":"#2)dictionaries:\ndictionary={\"turkey\":\"ankara\",\n            \"usa\"   :\"washington dc\",\n            \"china\" :\"pekin\"}\nfor key,value in dictionary.items():\n    print(\"key:\",key,\", value:\",value)","20ff6a9f":"#3)pandas(dataframes):\nfor index,value in data[[\"writing score\"]][0:4].iterrows():\n    print(index,value)","1249b993":"# *args\ndef f(*args):\n    for i in args:\n        print(i)\nf(1)\nf(\"\")\nf(1,2,3,7)","791cfa8c":"f(\"asdasdasdas\",4545)","7cc5d496":"# **kwargs\ndef f(**kwargs):\n    \"\"\"print key and value of dictionary\"\"\"\n    for key,value in kwargs.items():\n        print(\"key:\",key,\"value:\",value)\nf(country = 'spain', capital = 'madrid', population = 123456)","1b2be6e9":"total=lambda x,y,z,t : x*y+z*t\ntotal(3,-1,4,7)","65bbb352":"liste2=[1,2,3,4,5]\nx=map(lambda x : x**(1\/2),liste2)\nlist(x)","f89d7f31":"name=\"marcelo\"\nit=iter(name)","424b1530":"next(it)","57a5f71d":"next(it)","1ce584f1":"next(it)","2c8c8be6":"print(*it)","3497d44d":"list1=[1,3,5,6,0]\nlist2=[40,56,8,-17,8]\nz=zip(list1,list2)\na=list(z)\na","78483529":"un_zip=zip(*a)\nunlist1,unlist2=list(un_zip) #burada list yada tuple diyebiliriz.\nprint(unlist1)               #ikisinde de tuple yapar.\nprint(unlist2)\nprint(type(unlist2))","57ed3f23":"print(list(unlist1))\nprint(type(list(unlist1)))","40a5e794":"m=[1,2,3,5,7,11,13]\nn=[i**2 for i in m]\nn","979816ba":"p=[20,35,40]\nq=[i**2 if i%10==0 else i\/5 for i in p]\nq","ef8e1bb3":"data.head(3)","765d90e7":"print(data[\"race\/ethnicity\"].value_counts(dropna=False))","cfa82400":"print(data[\"gender\"].value_counts(dropna=False))","e6ce6dbc":"print(data[\"parental level of education\"].value_counts(dropna=False))","a3f140b7":"print(data[\"lunch\"].value_counts(dropna=False))","bacdef8d":"print(data[\"test preparation course\"].value_counts(dropna=False))","7b420c52":"print(data[\"math score\"].value_counts(dropna=False))","e03253c2":"x=sum(data[\"math score\"])\/len(data[\"math score\"])\nx","f98e2d64":"data.head(3)","edb45145":"data.boxplot(column=\"math score\",by=\"gender\",figsize=(8,8),grid=True)","19b6bf65":"data.boxplot(column=\"math score\",by=\"gender\",figsize=(8,8),grid=True,notch=True)","8a93c49d":"data.boxplot(column=\"math score\",by=\"gender\",figsize=(8,8),grid=True,notch=True,patch_artist=True)","cabe0a95":"plt.subplots(figsize=(10,10))\ndata2 = [np.random.normal(0, std, 1000) for std in range(1, 6)]\nbox = plt.boxplot(data2, notch=True, patch_artist=True)\ncolors = ['cyan', 'lightblue', 'lightgreen', 'tan', 'pink']\nfor patch, color in zip(box['boxes'], colors):\n    patch.set_facecolor(color)\nplt.show()","2865d482":"data_new=data.head()\ndata_new","a08ecd2c":"data[\"math score\"]=data[\"math score\"].astype(int)\ndata[\"reading score\"]=data[\"reading score\"].astype(int)\ndata[\"writing score\"]=data[\"writing score\"].astype(int)","c087bfc3":"melted=pd.melt(frame=data_new,id_vars=\"race\/ethnicity\", value_vars=[\"math score\",\"reading score\",\"writing score\"])\nmelted","e2d38d12":"#melted.pivot(index=\"race\/ethnicity\",columns=\"variable\",values=\"value\")","7dfb54b0":"data3=data.head()\ndata4=data.tail()\nconcat_row=pd.concat([data3,data4],axis=0,ignore_index=True)\nconcat_row","b68700ac":"concat_row2=pd.concat([data3,data4],axis=0)\nconcat_row2","147f57d0":"concat_row3=pd.concat([data3,data4],axis=1,ignore_index=True)\nconcat_row3","be4ae50e":"data[\"math score\"]=data[\"math score\"].astype(\"int\")","4aa70cde":"data.dtypes","7bd877dc":"data5=data.copy()\ndata5[\"parental level of education\"].dropna(False)","d2e4c1c2":"data[\"test preparation course\"].fillna(\"empty\",inplace=True)\n# bu columndaki bo\u015f olanlar\u0131 empty yaz\u0131s\u0131 ile doldurduk.","fe6c7a1e":"data.head(3)","8602c5ff":"race=[\"group A\",\"group B\",\"group C\"]\nedu=[\"bachelor's degree\",\"some college\",\"master's degree\"]\ngender=[\"male\",\"female\",\"empty\"]\nlist_label=[\"race\",\"edu\",\"gender\"]\nlist_col=[race,edu,gender]\nzipped=list(zip(list_label,list_col))\ndata_dict=dict(zipped)\ndf=pd.DataFrame(data_dict)\ndf","fc91af31":"data_dict","b3a5901e":"df[\"success\"]=[\"yes\",\"no\",\"no\"]","04673ef9":"df","138e5bbd":"df[\"country\"]=\"US\"","9128d486":"df","5ffd2f2f":"data6=data.loc[:,[\"math score\",\"reading score\",\"writing score\"]]\ndata6.plot()","13826807":"import warnings\nwarnings.filterwarnings(\"ignore\")","a9524634":"data6.plot(subplots=True)\nplt.legend(loc=\"upper left\")\nplt.show()","60b733c8":"data6.plot(kind=\"scatter\",x=\"reading score\",y=\"writing score\")\nplt.show()","23be45af":"data6.plot(kind=\"hist\")","9e7e2000":"data6.plot(kind=\"hist\",x=\"math score\")","9b2eb5c6":"data6.plot(kind=\"hist\",y=[\"math score\",\"reading score\"])","52895152":"data6.plot(kind=\"hist\",y=\"math score\",bins=40,range=(0,120))","a3c72136":"data6.plot(kind=\"hist\",y=\"math score\",bins=40,range=(0,120),rwidth=.2,orientation=\"horizontal\")","a9d63a9e":"data6.plot(kind=\"hist\",y=\"math score\",bins=40,range=(0,120),rwidth=.7,orientation=\"vertical\")","c7b703da":"fig,axes=plt.subplots(nrows=2,ncols=1)\ndata6.plot(kind=\"hist\",y=\"math score\",bins=50,ax=axes[0]) #noncumulative\ndata6.plot(kind=\"hist\",y=\"math score\",bins=50,ax=axes[1],cumulative=True)  #cumulative\nplt.savefig(\"cumulative.png\")\nplt.show()","2e34c6e5":"fig,axes=plt.subplots(nrows=2,ncols=3,figsize=(12,9))\n\ndata6.plot(kind=\"hist\",y=\"math score\",bins=50,ax=axes[0][0]) #noncumulative\ndata6.plot(kind=\"hist\",y=\"math score\",bins=50,ax=axes[1][0],cumulative=True)  #cumulative\ndata6.plot(kind=\"hist\",y=\"reading score\",bins=50,ax=axes[0][1])\ndata6.plot(kind=\"hist\",y=\"reading score\",bins=50,ax=axes[1][1],cumulative=True)\ndata6.plot(kind=\"hist\",y=\"writing score\",bins=50,ax=axes[0][2])\ndata6.plot(kind=\"hist\",y=\"writing score\",bins=50,ax=axes[1][2],cumulative=True)\nplt.savefig(\"cumulative.png\")\nplt.show()","c21ae439":"data7=data.tail()\ndata7","af04c560":"data_list=[\"2020-10-1\",\"2018-8-3\",\"2018-2-5\",\"2018-2-5\",\"2016-2-7\"]\ndatatime=pd.to_datetime(data_list)\ndata7[\"date\"]=datatime\ndata7","6a0b7a83":"data7=data7.set_index(\"date\")\ndata7","7e1bf61a":"print(data7.loc[\"2018-02-05\t\"])","8acdd3a1":"print(data7.loc[\"2020-10-01\":\"2018-02-05\"])","1999205b":"data7.resample(\"A\").mean()","12fbd27c":"data7.resample(\"M\").mean()","949943f5":"data7.resample(\"M\").first().interpolate(\"linear\")","1405010d":"data7.resample(\"M\").mean().interpolate(\"linear\")","7bc24986":"data.head()","45ed22bb":"data.loc[1,[\"parental level of education\"]]","cc9f02f7":"data[[\"gender\",\"math score\"]]","8cf4832a":"type(data[\"gender\"])","f0b29ca8":"type(data[[\"gender\"]])","0346afaf":"data.loc[0:10,\"gender\":\"lunch\"]","5ee3f6c8":"data.loc[0:10,[\"gender\",\"lunch\"]]","7621b65a":"data.loc[10:0:-1,[\"gender\",\"lunch\"]]","1a578d26":"data.loc[2:10,\"lunch\":]","a59bc2a9":"#1st\n#def and apply\ndef div(n):\n    return n\/10\ndata[\"writing score\"].apply(div)","9d91724a":"#2nd\n#lambda and apply\ndata[\"writing score\"].apply(lambda n : n\/10)","b6e89ade":"#3rd\n# Defining column using other columns\ndata[\"language_score\"]=data[\"reading score\"]+data[\"writing score\"]\ndata.head()","a9fc6fb6":"data.language_score.head()","e2047881":"#1st\n#Learning Index's name\nprint(data.index.name)","ca9b8d8d":"#2nd\n#Changing index's name\ndata.index.name=\"index\"\ndata.head(3)","ad272623":"#3rd\ndata8=data.copy()\ndata8.index=range(100,2100,2)\ndata8","fe0104ab":"data9=data.set_index([\"gender\",\"lunch\"])\ndata9.head(20)","01b35d74":"#stacking\ndata10=data.head(10).set_index([\"gender\",\"math score\"])\ndata10","70b8c1fe":"#unstacking\ndata10.unstack()\n#default => level 0, 1st index column is deleted","ebde29b1":"data10.unstack(level=0)\n#level1, 0th index column is deleted","f7a1ce21":"data10.unstack(level=1)\n#level 0, 1st index column is deleted","dce656d1":"# changing inner and outer level index position\ndata11=data10.swaplevel(0,1)\ndata11","8ce289c7":"data12=data10.swaplevel(1,0)\ndata12","e20807e4":"data9","e48d0df7":"pd.melt(data9,id_vars=\"gender\",value_vars=[\"language_score\",\"math score\"])","b8b88fc1":"data9.groupby(\"gender\").mean()","711e8608":"data9.groupby(\"gender\")[\"language_score\"].max()","28aead3a":"data9.groupby(\"gender\").max()","6827d627":"data9.groupby(\"gender\")[[\"language_score\",\"math score\"]].min()","ae45bc4d":"data9.groupby(\"gender\").min()","c433fc18":"data.head()","b4056653":"data[\"parental level of education\"].value_counts()","baee428a":"data[\"parental level of education\"].unique()","83352ae3":"# VISUAL EXPLORATORY DATA ANALYSIS","9f38dc29":"# Broadcasting\n> broadcasting ile eklenecek columnda her rowa ayn\u0131 de\u011fer verilir.","311c7794":"<a id=\"1\"><\/a><br>\n# 1. Data Science","844fa10e":"> # melting and pivoting the data\n\n> pd.melt()\n\n> pivot reverse of melt","9dd45ce7":"# Scatter plot","35a08708":"# Transforming a column to index column (Bir column'\u0131 index s\u00fctunu yapma)","e2c02a75":"# Line plot","2f6c5f09":"# Review of pandas","17691236":"# Bar plot","47bc2573":"# Filtering","00188c16":"# Series vs. DataFrame","897e943e":"# copy() and dropna(False)","952aab59":"# Scatter plot","a52ce270":"# Histogram plot","b46c9808":"# S\u0131f\u0131rdan DataFrame olu\u015fturmak","f7209155":"# Data type transforming","6c3c9f9b":"# Plotting all data","83e8524d":"# While-For loop","56951bf7":"# INDEXING PANDAS TIME SERIES\n","c740231f":"# list comprehension","82b9869d":"* single column -> series\n* NaN -> Not a Number\n* DataFrame.values -> numpy","c2213a3b":"# Types of columns","85db5a3b":"<font color=\"red\">\n* Content:\n    1. [Data Science](#1)\n    1. [Seaborn](#2)","ca6a179e":"# Cumulative ad noncumulative histograms","d95d7e58":"# Subplots","a2de1e35":"<a id=\"2\"><\/a><br>\n# 2. Seaborn","7b708b5a":"# Select index informations","bdb84bc6":"# MELTING DATA FRAMES","b9b93691":"* [i**2 for i in m] -> list comprehension\n* i**2 ->list comprehension syntax\n* for i in m -> for loop syntax\n* i -> iterator\n* m -> iterable object","c0c78b72":"* M -> Month\n* A -> Year\n* Resample (yeniden \u00f6rneklendirmek)","6566cdb3":"# zip\n> iki listeyi birle\u015ftirme","450a6bb4":"# Concatenating ","70fb812f":"> # Box plot","caf6bee0":"# TRANSFORMING DATA","08ba3bf4":"# Introduction","78d83817":"> Bunu \u015fu \u015fekilde  de \u00e7izdirebiliriz:","cead4983":"# CATEGORICALS AND GROUPBY","6daf3235":"# zip(*...)\n> birle\u015ftirilmi\u015f iki listeyi ay\u0131rma\n","82bc53af":"# STACKING and UNSTACKING DATAFRAME","f0cdf7d2":"# SLICING DATA FRAME","8f1e7c36":"# Add new columns","2020aeb7":"# Lambda and map function","40ecf0e0":"# Flexible arguments","5ee2706b":"# INDEX OBJECTS AND LABELED DATA","b9ef6e56":"# iter","e790f20a":"# MANIPULATING DATA FRAMES WITH PANDAS\n> # INDEXING DATA FRAMES","2eeb05f4":"# RESAMPLING PANDAS TIME SERIES","0d7aca5e":"# EXPLORATORY DATA ANALYSIS\n> value_caounts()","85f30b58":"# HIERARCHICAL INDEXING","33c5231e":"> reading score values when math score greater than 97 (math score 97'den b\u00fcy\u00fckkenki reading score de\u011ferleri)","f8c54161":"# histogram","9a04cdcd":"# Fillna()","8f2d0341":"# Ignore warnings"}}