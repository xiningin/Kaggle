{"cell_type":{"267af7c1":"code","2c0837fb":"code","41a36b09":"code","a5acd51d":"code","8c39a24c":"code","be64d999":"code","d3359d8e":"code","d9822ba7":"code","6fd36884":"code","58d5d617":"code","b03e2357":"code","c19a1daa":"code","c449940a":"code","ca8faad5":"code","50ea9d39":"code","4b658a96":"code","f29c559c":"code","d32b5912":"code","95694ee1":"code","c499f5b1":"code","f580e333":"code","ab8eb138":"code","0815c5bb":"code","932a5d09":"code","fd0fe17d":"code","3302bd7e":"code","2bb31287":"code","4025bc61":"code","3afea1e3":"code","7f26e31c":"code","117d80cd":"code","ad42346b":"code","30ed5836":"code","90ebae2e":"code","09ea0c16":"code","ec57f36a":"code","59a376a2":"code","91feddc5":"code","43d2757f":"code","9206c5e5":"code","44d94661":"code","c53f21aa":"code","dbfd660f":"code","d4a59ee8":"code","6ee53aa6":"code","cfd5757a":"code","65f20510":"code","3ff25ce5":"code","5c65556b":"code","7d29c46b":"code","a33ea153":"code","71ab0d3f":"code","5f48c1c5":"code","399eccf0":"code","101811b9":"code","00c781bb":"code","123241fb":"code","85855190":"code","ac28e286":"code","a9c2f86f":"code","4cad3ed5":"code","ad5256c1":"code","2711bc0a":"code","662ffb39":"code","17cd9f4c":"code","da9a8339":"code","e8cf171f":"code","8d8189ce":"code","04fa965e":"code","d21ea807":"code","7b4296ea":"code","339781cd":"code","49e7340c":"code","b5e76f0d":"code","a3990981":"code","67d8aefc":"code","e28be9a7":"code","6a8ae4ce":"code","32f9e0fd":"code","bf6ee75b":"code","2eb8f1f0":"code","0267e753":"code","a9e8fdf1":"code","245cb910":"code","2b0ed811":"code","1651fa17":"code","de0131ce":"code","02c26878":"code","16218f50":"code","a23ec8cc":"code","ba9fd067":"code","d13f2ce9":"code","48ec89ab":"code","8b499af1":"code","d91487f7":"code","a941930f":"code","64883c0a":"code","343581b6":"code","c5f5282e":"code","015bd805":"code","b7ccf502":"code","2c1c8956":"code","c773da43":"code","633df2e4":"code","3d3e8c29":"code","e2c4f0b9":"code","82c4e912":"code","86c0e361":"code","2ef77c05":"code","bdc49b2d":"code","86a00584":"code","d5484f7b":"code","229c534b":"code","236b5895":"code","6b0ca681":"code","8597a7d2":"code","7f133a52":"code","fd5f7f32":"code","f3618c83":"code","509cfcfd":"code","5584706c":"code","a73093e5":"code","cdaf212f":"code","6e690457":"code","729a1df7":"code","4762439f":"code","0d93dfac":"code","4d0a72d3":"code","e97997fe":"code","68e87a7e":"code","393578c9":"code","c3ff2a99":"code","dddf4838":"code","37bb8b04":"code","533b888a":"code","79bb49b4":"code","1a3fe795":"code","ee01fed5":"code","c1c33925":"code","e5e3d5b6":"code","8dac6ee7":"code","02b2686d":"code","4a5ba497":"code","e7548ecd":"code","9868f04f":"code","732dad1d":"code","9a0e7116":"code","d8e7d69c":"code","efbb22aa":"code","55a947ee":"code","2468bb6e":"code","7a741642":"code","3e551aaf":"code","bc1d48b6":"code","97a1bf58":"code","7c939e38":"code","b88cbc44":"code","9c2e154e":"code","9ebf5166":"code","ab0cb739":"code","76609268":"code","d473fb5d":"code","3e9a084c":"code","1b4c86f2":"code","af9f78e9":"code","20d701ed":"code","96672318":"code","b0a5d970":"code","b7b791a6":"code","627a1fe9":"code","ac3ce2ee":"code","4f442419":"code","148fe209":"code","015ea511":"code","49d53fee":"code","4620bcb1":"code","ad43ef10":"code","82797ac4":"code","2ff9e5d3":"code","277e85fc":"code","5cd6b0e6":"code","317dfd17":"code","cf9fb758":"code","426026c0":"code","26e3c637":"code","397cd52c":"code","5bb309a0":"code","aeed49f8":"code","a35c3471":"markdown","a1491e96":"markdown","7c557227":"markdown","05a2260c":"markdown","f3d36642":"markdown","ea057beb":"markdown","1876018a":"markdown","52562190":"markdown","962ee096":"markdown","f208aaf7":"markdown","b387d0f5":"markdown","2bf32b28":"markdown","bf76eb28":"markdown","e88572d5":"markdown","ed804278":"markdown","ffa7d0ed":"markdown","b150f081":"markdown","3bf11321":"markdown","9fa0de15":"markdown","3407866a":"markdown","cb30f5b9":"markdown","ef787999":"markdown","d0972648":"markdown","626a2198":"markdown","4a337258":"markdown","449b6ce6":"markdown","87f99eb7":"markdown","1ea1ba47":"markdown","ec267520":"markdown","28bec64e":"markdown","822684c0":"markdown","d99cf23e":"markdown","0e627bcf":"markdown","a13766e4":"markdown","b234bcad":"markdown","4bc6a703":"markdown","a4c023e7":"markdown","dddc3a42":"markdown","233bb9fa":"markdown","d7fa2406":"markdown","6d04b06a":"markdown","b38361b8":"markdown","161d20e1":"markdown","4b8a696e":"markdown","e08e9d2f":"markdown","0f8cabed":"markdown","b77819ad":"markdown","8b20a617":"markdown","deeff384":"markdown","d6542974":"markdown","00f9c167":"markdown","ac980aae":"markdown","f2718b7e":"markdown","9e8c208c":"markdown","eea26cd6":"markdown"},"source":{"267af7c1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2c0837fb":"a = [1,2,3,4]\nb = [2,3,4,5]","41a36b09":"ab = []\nfor i in range(0, len(a)):\n    ab.append(a[i]*b[i])\nab","a5acd51d":"import numpy as np","8c39a24c":"a = np.array([1,2,3,4])\nb = np.array([2,3,4,5])","be64d999":"a*b","d3359d8e":"np.array([1,2,3,4,5])","d9822ba7":"a = np.array([1,2,3,4,5])\ntype(a)","6fd36884":"np.array([3.14,4,2,13],dtype = int)","58d5d617":"np.zeros(10, dtype=int)","b03e2357":"np.ones((3,5),dtype = int)","c19a1daa":"np.full((6,5),4)","c449940a":"np.arange(0,31,3)","ca8faad5":"np.linspace(0,1,10)","50ea9d39":"np.random.normal(10,4,(3,4))#normal-da\u011f\u0131l\u0131m, 10-ortalama, 4-stdsapma, (3,4)-array boyutu","4b658a96":"np.random.randint(0,10,(3,3))","f29c559c":"np.random.randint(10,size=10)\na = np.random.randint(10,size=10)","d32b5912":"a.ndim","95694ee1":"a.shape","c499f5b1":"a.size","f580e333":"a.dtype","ab8eb138":"b = np.random.randint(10,size = (3,5))","0815c5bb":"b.ndim","932a5d09":"b.shape","fd0fe17d":"b.size","3302bd7e":"b.dtype","2bb31287":"np.arange(1,10)","4025bc61":"np.arange(1,10).reshape((3,3))","3afea1e3":"a=np.arange(1,10)","7f26e31c":"a.ndim","117d80cd":"b= a.reshape((1,9))","ad42346b":"b.ndim","30ed5836":"x = np.array([1,2,3])\ny = np.array([4,5,6])","90ebae2e":"np.concatenate([x,y])","09ea0c16":"z = np.array([7,8,9])","ec57f36a":"np.concatenate([x,y,z])","59a376a2":"a = np.array([[1,2,3,],\n             [4,5,6]])","91feddc5":"np.concatenate([a,a])#burada axis 0d\u0131r","43d2757f":"np.concatenate([a,a],axis=1)","9206c5e5":"x = np.array([1,2,3,99,99,3,2,1])","44d94661":"np.split(x,[3,5])","c53f21aa":"a,b,c = np.split(x,[3,5])","dbfd660f":"b","d4a59ee8":"m = np.arange(16).reshape(4,4)\nm","6ee53aa6":"np.vsplit(m,[2])","cfd5757a":"ust,alt = np.vsplit(m,[2])","65f20510":"alt","3ff25ce5":"m","5c65556b":"np.hsplit(m,[2])","7d29c46b":"sag,sol=np.hsplit(m,[2])","a33ea153":"sol","71ab0d3f":"v = np.array([2,1,3,5,7,9,8,])","5f48c1c5":"v","399eccf0":"np.sort(v)#vyi s\u0131ralad\u0131 ancak kal\u0131c\u0131 olarak de\u011fil","101811b9":"v #vyi s\u0131ralad\u0131 ancak kal\u0131c\u0131 olarak de\u011fil orijinal yap\u0131s\u0131 bozulmad\u0131","00c781bb":"v.sort()#vyi olarak kal\u0131c\u0131 s\u0131ralad\u0131 yap\u0131s\u0131 de\u011fi\u015fti yani","123241fb":"v","85855190":"m = np.random.normal(20,5,(3,3))","ac28e286":"m","a9c2f86f":"np.sort(m, axis=1) #sat\u0131rlar\u0131 k\u00fc\u00e7\u00fckten b\u00fcy\u00fc\u011fe s\u0131ralama","4cad3ed5":"np.sort(m, axis=0) #s\u00fctunlar\u0131 k\u00fc\u00e7\u00fckten b\u00fcy\u00fc\u011fe s\u0131ralama","ad5256c1":"a = np.random.randint(10, size=10)\na","2711bc0a":"a[0]","662ffb39":"a[-1] #tersten 1. eleman","17cd9f4c":"a[0]=100","da9a8339":"a","e8cf171f":"m = np.random.randint(10, size=(3,5))\nm","8d8189ce":"m[0,0]","04fa965e":"m[1,1]","d21ea807":"m[2,3]","7b4296ea":"m[2,3]=33\nm","339781cd":"a=np.arange(20,30)\na","49e7340c":"a[0:3]","b5e76f0d":"a[1::2]#1. indexten sonra 2\u015ferli alarak git","a3990981":"m = np.random.randint(10,size= (5,5))\nm","67d8aefc":"m[:,0] #ilk s\u00fctun yani t\u00fcm sat\u0131rlar ve 0. s\u00fctunun kesi\u015fimi","e28be9a7":"m[0,:] #ilk sat\u0131r yani 0 sat\u0131r ve t\u00fcm s\u00fctunlar\u0131n kesi\u015fimi","6a8ae4ce":"a = np.random.randint(10,size = (5,5))\na","32f9e0fd":"alt_a = a[0:3,0:2]\nalt_a","bf6ee75b":"alt_a[0,0]=99999\nalt_a[1,1]=888\nalt_a","2eb8f1f0":"a #arrayin kendi de de\u011fi\u015fti","0267e753":"m = np.random.randint(10,size = (5,5))\nm","a9e8fdf1":"alt_b = m[0:3,0:2].copy() #copy methodu ile alt k\u00fcmenin kopyas\u0131n\u0131 olu\u015fturduk art\u0131k ana array etkilenmeyecek\nalt_b","245cb910":"v= np.arange(0,30,3)\nv","2b0ed811":"[v[1],v[3],v[5]]","1651fa17":"al_getir=[1,3,5]","de0131ce":"v[al_getir] #fancy index","02c26878":"m=np.arange(9).reshape(3,3)\nm","16218f50":"satir = np.array([0,1])\nsutun = np.array([1,2])","a23ec8cc":"m[satir,sutun] #iki boyutta fancy index","ba9fd067":"m","d13f2ce9":"m[0,[1,2]] #fancy ile basit index bir arada","48ec89ab":"m[0:,[1,2]]","8b499af1":"v = np.array([1,2,3,4,5])","d91487f7":"v < 3","a941930f":"v[v<3] #fancyden yard\u0131m ald\u0131k","64883c0a":"v*3","343581b6":"v\/5","c5f5282e":"v = np.array([1,2,3,4,5])\nv","015bd805":"np.subtract(v,1) #her elemandan 1 \u00e7\u0131kart","b7ccf502":"np.add(v,1) #her elemana 1 ekle","2c1c8956":"np.multiply(v,2)#her eleman\u0131 2 ile \u00e7arp","c773da43":"np.divide(v,3)#her eleman\u0131 3e b\u00f6l","633df2e4":"np.power(v,3) #her eleman\u0131n k\u00fcp\u00fcn\u00fc almak","3d3e8c29":"np.mod(v,2)#her eleman\u0131n ikiye b\u00f6l\u00fcm\u00fcnden kalan\u0131 verir","e2c4f0b9":"np.absolute(np.array([-3])) #mutlak de\u011fer alma fonksiyonu","82c4e912":"np.sin(360)","86c0e361":"np.cos(180)","2ef77c05":"c = np.array([1,2,3])","bdc49b2d":"np.log(c) #logaritma alma","86a00584":"np.log2(c) #2. dereceden logaritmas\u0131n\u0131 almak","d5484f7b":"import numpy as np\n","229c534b":"a = np.array([[5,1],[1,3]])\nb = np.array([12,10])","236b5895":"a","6b0ca681":"b","8597a7d2":"x = np.linalg.solve(a,b) #lineer cebir \u00e7\u00f6z\u00fcm\u00fc sa\u011flayan \u00f6zel fonksiyon\nx","7f133a52":"import pandas as pd\npd.Series([1,2,3,4,5])","fd5f7f32":"seri = pd.Series([1,2,3,4,5])\ntype(seri)","f3618c83":"seri.dtype #serinin elemanlar\u0131n\u0131n de\u011fi\u015fken tipini verir","509cfcfd":"seri.size #serinin boyutunu verir","5584706c":"seri.ndim #boyut bilgisi","a73093e5":"seri.values #serinin i\u00e7indeki de\u011ferleri verir bize index numaralar\u0131 olmakas\u0131z\u0131n","cdaf212f":"seri.head #serinin ilk 5 de\u011feri","6e690457":"pd.Series([99,33,66,44,22,5])","729a1df7":"pd.Series([99,33,66,44,22,5], index = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\"]) #ya da say\u0131 da olabilir\n#slice i\u015flemleri yani alt k\u00fcme \u015fekilinde de ayr\u0131labilir seri[\"a\":\"c\"] \u015feklinde","4762439f":"sozluk = pd.Series({\"reg\":10, \"log\":11, \"cart\":12}) #\u015feklinde yap\u0131labilir \nsozluk\n\n#sozluk = {\"reg\":10, \"log\":11, \"cart\":12}\n#seri = pd.Series (sozluk) \u015feklinde de s\u00f6zl\u00fck olu\u015futurulabilir bu y\u00f6ntem daha \u015f\u0131k","0d93dfac":"pd.concat([seri,seri]) #alt alta bir\u015fletirme","4d0a72d3":"import numpy as np\na =np.array([1,2,33,444,75])\nseri = pd.Series(a)\nseri","e97997fe":"l = [1,2,39,67,90]\nl","68e87a7e":"m= np.arange(1,10).reshape(3,3)\nm","393578c9":"pd.DataFrame(m, columns= [\"var1\",\"var2\",\"var3\"])","c3ff2a99":"df = pd.DataFrame(m, columns = [\"va1\",\"var2\",\"var3\"])\ndf.head #ilk 3 sat\u0131r\u0131 verir\ndf.tail #son \u00fc\u00e7 sat\u0131r\u0131 veriri","dddf4838":"df.columns = (\"deg1\",\"deg2\",\"deg3\") #yeniden atama yapmadan de\u011fi\u015fken ismi de\u011fi\u015ftirme\ndf","37bb8b04":"df.axes\n","533b888a":"s1 = np.random.randint(10, size=5)\ns2 = np.random.randint(10, size=5)\ns3 = np.random.randint(10, size=5)","79bb49b4":"sozluk = {\"var1\":s1, \"var2\":s2, \"var3\":s3}\nsozluk","1a3fe795":"df = pd.DataFrame(sozluk)\ndf","ee01fed5":"#df.drop(1, axis=0 # ,inplace = True) #ana data frame de\u011fi\u015fmez\n#diez i\u015faretinden sonrki arg\u00fcman\u0131 yazarsak ana data frame de de\u011fi\u015fir","c1c33925":"l= [2,4]","e5e3d5b6":"df.drop(l,axis=0)","8dac6ee7":"\"var1\" in df #var1 df i\u00e7inde var m\u0131 yok mu kontrol ettik\n","02b2686d":"l = [\"var1\",\"var2\",\"var3\"]","4a5ba497":"for i in l:\n    print(i in df)","e7548ecd":"df[\"var4\"] = df[\"var1\"]\/df[\"var2\"] #4.bir variable olu\u015fturmak\ndf","9868f04f":"df.drop(\"var4\",axis=1, inplace = True)\ndf","732dad1d":"m = np.random.randint(1,30, size = (10,3))\ndf = pd.DataFrame(m,columns = [\"var1\",\"var2\",\"var3\"])\ndf","9a0e7116":"df.loc[0:3] #0dan 3e dahil olmak \u00fczere se\u00e7im yapt\u0131 [0,3]","d8e7d69c":"df.iloc[0:3] #0dan 3e kadar e\u00e7im yapt\u0131 [0,3)","efbb22aa":"df.iloc[:3,:2]","55a947ee":"df.loc[0:3,\"var3\"]","2468bb6e":"#df.iloc[0:3,\"var3\"] hata verir","7a741642":"m = np.random.randint(1,30, size = (10,3))\ndf = pd.DataFrame(m,columns = [\"var1\",\"var2\",\"var3\"])\ndf","3e551aaf":"df[\"var1\"][0:2]","bc1d48b6":"df[df.var1>10] #10dan b\u00fcy\u00fck de\u011ferleri g\u00f6zlemlemek","97a1bf58":"df[(df.var1>10) & (df.var3<5) ]","7c939e38":"import pandas as pd","b88cbc44":"m = np.random.randint(1,30, size = (5,3))\ndf1 = pd.DataFrame(m,columns = [\"var1\",\"var2\",\"var3\"])\ndf1","9c2e154e":"df2 = df1+ 99\ndf2","9ebf5166":"pd.concat([df1,df2],ignore_index=True)","ab0cb739":"df1.columns","76609268":"df2.columns","d473fb5d":"df2.columns = [\"var1\",\"var2\",\"deg3\"]\ndf2","3e9a084c":"pd.concat([df1,df2]) #deg3 iki veri setinde olmad\u0131\u011f\u0131ndan hata verebilir","1b4c86f2":"pd.concat([df1,df2],join=\"inner\")#hata vermemesi i\u00e7in join=\"inner\" kullan\u0131ld\u0131 kesi\u015fimlerindeki de\u011fi\u015fkenleri ald\u0131 sadece","af9f78e9":"#pd.concat([df1,df2], join_axes = [df2.columns],ignore_index=True)#df1deki kolonlardaki bilgilere g\u00f6re birle\u015ftirildi","20d701ed":"df1 = pd.DataFrame({\"calisanlar\":[\"ali\",\"veli\",\"ayse\",\"fatma\"],\n                   \"grup\" :[\"muhasebe\",\"muhendislik\",\"muhendislik\",\"ik\"]})\ndf1","96672318":"df2 = pd.DataFrame({\"calisanlar\":[\"ali\",\"veli\",\"ayse\",\"fatma\"],\n                   \"ilk_giris\":[2009,2014,2010,2019]})\ndf2","b0a5d970":"pd.merge(df1,df2)","b7b791a6":"pd.merge(df1,df2,on = \"calisanlar\") #on calisanlar \u00e7al\u0131\u015fanlar de\u011fi\u015fkeni \u00fczerinde birle\u015ftir demek","627a1fe9":"df3 = pd.merge(df1,df2)\ndf3","ac3ce2ee":"df4 = pd.DataFrame({\"grup\":[\"muhasebe\",\"muhendislik\",\"ik\"],\n                   \"mudur\":[\"caner\",\"mustafa\",\"berkcan\"]})\ndf4","4f442419":"pd.merge(df3,df4)","148fe209":"df5=pd.DataFrame({\"grup\":[\"muhasebe\",\"muhasebe\",\"muhendislik\",\"muhendislik\",\"ik\",\"ik\"],\n                 \"yetenekler\":[\"matematik\",\"excel\",\"kodlama\",\"linux\",\"excel\",\"yonetim\"]})\ndf5","015ea511":"pd.merge(df1,df5)","49d53fee":"import seaborn as sns","4620bcb1":"?sns.load_dataset","ad43ef10":"df = sns.load_dataset(\"planets\")\ndf.head()","82797ac4":"df.shape","2ff9e5d3":"df[\"mass\"].mean()","277e85fc":"df[\"mass\"].count()","5cd6b0e6":"df[\"mass\"].min()","317dfd17":"df[\"mass\"].max()","cf9fb758":"df[\"mass\"].sum()","426026c0":"df[\"mass\"].std()","26e3c637":"df[\"mass\"].var()","397cd52c":"df.describe().T ","5bb309a0":"df.dropna().describe().T #bo\u015f h\u00fccreleri g\u00f6rmezden gelerek inceleme","aeed49f8":"df = pd.DataFrame({\"gruplar\":[\"A\",\"B\",\"C\",\"A\",\"B\",\"C\"],\n                  \"veri\":[10,11,52,23,43,55]},columns=[\"gruplar\",\"veri\"])\ndf","a35c3471":"de\u011fi\u015fkenler i\u00e7im","a1491e96":"# Index \u0130le Elemanlara Eri\u015fmek ","7c557227":"# Alt K\u00fcme \u00dczerinde \u0130\u015flem Yapmak\nAl k\u00fcme \u00fczerindeki i\u015flemlerin t\u00fcm arrayi etkilememesi ama\u00e7","05a2260c":"de\u011fi\u015fken silmek","f3d36642":"# Pandas # ","ea057beb":"iloc: al\u0131\u015f\u0131k oldu\u011fumuz indexleme mant\u0131\u011f\u0131 ile se\u00e7im yapar","1876018a":"coktan coka","52562190":"Birebir birle\u015ftirme","962ee096":"birlerden array olu\u015furma ","f208aaf7":"belli bir say\u0131dan olu\u015fan array","b387d0f5":"iki say\u0131 aras\u0131nda x tane de\u011fer olu\u015fturan array tipi","2bf32b28":"loc: tan\u0131mland\u0131\u011f\u0131 \u015fekliyle se\u00e7im yapmak i\u00e7in kullan\u0131l\u0131r","bf76eb28":"# Neden Numpy","e88572d5":"# Splitting Array Ay\u0131rma","ed804278":"\u0130ki boyutlu ay\u0131rma","ffa7d0ed":"Random integer array olu\u015fturma","b150f081":"seri.axes #serinin i\u00e7eri\u011fi hakk\u0131nda bilgi verir 5 elemanl\u0131 1 den ba\u015fyal\u0131p 5e kadar 1er 1er artm\u0131\u015f   ","3bf11321":"dataframe (df) isimlendirme","9fa0de15":"# Concatenation (Array Birle\u015ftirme","3407866a":"Pandas data frame eleman i\u015flemleri","cb30f5b9":"# Aggregation and Grouping (toplula\u015ft\u0131rma ve gruplama)\nBasit toplula\u015ft\u0131rma fonksiyonlar\u0131:\n* Count()\n* first()\n* last()\n* mean()\n* median()\n* min()\n* max()\n* std()\n* var()\n* sum()","ef787999":"normal da\u011f\u0131l\u0131ma uygun ortalama ve standart sapmas\u0131na benim karar verdi\u011fim tek ya da \u00e7ift boyutlu array olu\u015fturma\n(tek boyutlu array vekt\u00f6r, 2 boyutlu matristir","d0972648":"# Fancy Index ile Elemanlara Eri\u015fmek","626a2198":"# Gruplama i\u015flemleri","4a337258":"s\u0131f\u0131rlardan array olu\u015fturma","449b6ce6":"\u0130ndex \u0130simlendirmesi","87f99eb7":"slice ile fancy bir arada","1ea1ba47":"# \u0130leri birle\u015ftirme i\u015flemleri","ec267520":"yukar\u0131da matris \u00e7arp\u0131m\u0131 yap\u0131lm\u0131\u015ft\u0131r. Bunun kolay\u0131n\u0131 numpy ile yapabiliriz","28bec64e":"# Pandas serisi olu\u015fturma","822684c0":"# Numpy Array \u00d6zellikleri\n* ndim:boyut say\u0131s\u0131\n* shape:boyut bilgisi\n* size: toplam eleman say\u0131s\u0131\n* dtype: array veri tipi","d99cf23e":"\u0130ki boyut","0e627bcf":"# Numpy ile \u0130ki Bilinmeyenli Denklem \u00c7\u00f6z\u00fcm\u00fc","a13766e4":"# Sorting (s\u0131ralama)","b234bcad":"fancy ile silme","4bc6a703":"# Eleman \u0130\u015flemleri","a4c023e7":"# Reshaping","dddc3a42":"\u0130ki boyutlu","233bb9fa":"silme","d7fa2406":"\u0130ki boyutlu slice i\u015flemleri","6d04b06a":"# Pandas DataFrame Olu\u015fturma","b38361b8":"# G\u00f6zlem ve de\u011fi\u015fken se\u00e7imi: loc&iloc","161d20e1":"# Birle\u015ftirme (Join) \u0130\u015flemleri","4b8a696e":"\u0130ki boyutta fancy index","e08e9d2f":"# Ko\u015fullu Eleman \u0130\u015flemleri","0f8cabed":"do\u011frusal bir dizi olu\u015furma \u00f6rne\u011fin 0 31 aras\u0131 3er artan bir dizi","b77819ad":"# Slicing ( Array Alt K\u00fcmelerine Eri\u015fmek)","8b20a617":"numpy mathematics **cheatsheet** (cheatsheet uzant\u0131s\u0131 t\u00fcm fonksiyonlar\u0131 derli topluca verir)","deeff384":"# Numpy Array'i Olu\u015fturmak","d6542974":"dtype o arraydeki de\u011fi\u015fken tipini se\u00e7memize yarar","00f9c167":"# Ko\u015fullu Eleman \u0130\u015femleri","ac980aae":"5*x0+x1=12\nx0+3*x1=10 problemimiz","f2718b7e":"# Matematiksel \u0130\u015flemler\nufunc ile fonksiyon ile \u00e7al\u0131\u015f\u0131yor","9e8c208c":"\u00e7okta teke","eea26cd6":"basit index ile fancy index"}}