{"cell_type":{"6f06b834":"code","5d0496af":"code","35d5e228":"code","cf1bcf7a":"code","386b45bf":"code","73b79f94":"code","dba08644":"code","7eefa5a0":"code","7d779647":"code","1423b74e":"code","3dc3ad5a":"code","05591bce":"code","5da951a5":"markdown"},"source":{"6f06b834":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5d0496af":"df = pd.read_csv('\/kaggle\/input\/factors-affecting-campus-placement\/Placement_Data_Full_Class.csv')\ndf = df.drop(['sl_no'], axis = 1)\ndf.head()","35d5e228":"df.info()","cf1bcf7a":"df.fillna(0, inplace=True)","386b45bf":"df = df.replace(['F','M'], [0,1])\ndf = df.replace(['Others','Central'], [0,1])\ndf = df.replace(['Placed','Not Placed'], [0,1])\ndf = df.replace(['Mkt&HR','Mkt&Fin'], [0,1])\ndf = df.replace(['Sci&Tech','Comm&Mgmt','Others'], [0,1,2])\ndf = df.replace(['Commerce','Science','Arts'], [0,1,2])\ndf = df.replace(['Yes','No'], [0,1])","73b79f94":"df.hsc_s.unique()","dba08644":"df.head()","7eefa5a0":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split","7d779647":"X = df.drop(['status'],axis= 1)\ny = df['status']\nX_train, X_test, y_train, y_test = train_test_split(X,y)","1423b74e":"scalee = StandardScaler()\nscalee.fit(X_train)\nX_train = scalee.transform(X_train)\nX_test = scalee.transform(X_test)","3dc3ad5a":"model = KNeighborsClassifier(n_neighbors = 5)\nmodel.fit(X_train,y_train)","05591bce":"model.score(X_test,y_test)","5da951a5":"**Handling Non Numerical Data**\nCan anyone help me handle this better?"}}