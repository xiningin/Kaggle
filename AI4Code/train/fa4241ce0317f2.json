{"cell_type":{"0505b64b":"code","4c284774":"code","5aecec71":"code","daef77e4":"code","056ad0d2":"code","115189c0":"code","77bffaef":"code","26f120eb":"code","c15002a3":"code","57c055a1":"code","47e979f7":"code","0b8676ca":"code","3d139116":"code","76dad1bc":"code","1356cea7":"code","ec357edf":"code","f3deddcd":"code","7d388682":"code","b6d5dffa":"code","c98a3760":"markdown"},"source":{"0505b64b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4c284774":"df=pd.read_csv(\"\/kaggle\/input\/creditcardfraud\/creditcard.csv\")","5aecec71":"\ndf.head()\n","daef77e4":"df.info()","056ad0d2":"df['Class'].value_counts()\n","115189c0":"from sklearn.model_selection import train_test_split\n\nfrom sklearn.preprocessing import StandardScaler\n\nscalar = StandardScaler()","77bffaef":"X = df.drop('Class', axis=1)\ny = df.Class","26f120eb":"X = scalar.fit_transform(X)","c15002a3":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)","57c055a1":"from sklearn.svm import SVC\n","47e979f7":"model_svc = SVC()\n","0b8676ca":"\nmodel_svc.fit(X_train, y_train)\n","3d139116":"\n\nmodel_svc.score(X_train,y_train)\n\n","76dad1bc":"y_predict = model_svc.predict(X_test)","1356cea7":"from sklearn.metrics import classification_report , confusion_matrix\n","ec357edf":"import numpy as np\n","f3deddcd":"cm = np.array(confusion_matrix(y_test, y_predict, labels=[1,0]))\nconfusion = pd.DataFrame(cm, index=['is Fraud', 'is Normal'],columns=['predicted fraud','predicted normal'])\nconfusion\n","7d388682":"\nsns.heatmap(confusion, annot=True)","b6d5dffa":"print(classification_report(y_test, y_predict))","c98a3760":"In the output above we can see that there is no null value and no non integer valued column is present. This dataset doesn't require cleaning and we are good to go."}}