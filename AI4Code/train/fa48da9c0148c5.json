{"cell_type":{"d642549d":"code","a4e11f7d":"code","0c0db42e":"code","5caddf78":"code","b639e19d":"code","418b8ce2":"code","2e8a3e8d":"code","d29185f6":"code","c1ed01b1":"code","de1e319f":"code","4c4dbb71":"code","5550347d":"code","3be8330d":"code","cd86b1a7":"code","483c5435":"code","30b18a86":"code","5fc75101":"code","1db36f03":"code","4732eaf5":"code","e59e80c7":"code","e4ace636":"code","ff6aaec9":"code","49ab7a33":"code","199e0cdc":"code","4b694cb7":"code","976a56c8":"code","51dd931a":"code","8ba0eb56":"code","4224f1fe":"code","557c0647":"code","de6ce40f":"code","8f8b8f62":"code","5a38b012":"code","2c600d40":"code","3e32fc38":"code","4a05b08a":"code","8b850dfa":"code","a2c1c251":"code","9fb298b3":"code","e9216a64":"code","3caf8867":"code","e179f2cd":"code","7ed8f0e7":"code","dce7a868":"code","2c1940f5":"code","6553d4bc":"markdown","2821660c":"markdown","3e570a0b":"markdown","245746d6":"markdown","50c0b030":"markdown","40f13b1f":"markdown","eb5e770b":"markdown","b734dbac":"markdown","74f4e2aa":"markdown","87c5b0e8":"markdown","3518c7c4":"markdown"},"source":{"d642549d":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nplt.style.use('bmh')\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nimport os\nprint(os.listdir(\"..\/input\"))\n# Any results you write to the current directory are saved as output.","a4e11f7d":"data=pd.read_csv(\"..\/input\/data.csv\",index_col=0)","0c0db42e":"data.info()","5caddf78":"data.head()","b639e19d":"data.shape","418b8ce2":"data.Age.median()","2e8a3e8d":"data.Age.mean()","d29185f6":"data.Age.max()","c1ed01b1":"data.Age.min()","de1e319f":"index_of_oldest_player=data.Age.idxmax()\nprint(data.Name.iloc[index_of_oldest_player])","4c4dbb71":"correlation=data.corr(method='pearson')\ncorrelation","5550347d":"plt.figure(figsize=(9, 8))\nsns.heatmap(correlation)","3be8330d":"plt.figure(figsize=(9, 8))\nsns.heatmap(correlation[(correlation >= 0.5) | (correlation <= -0.4)], \n            cmap='viridis', vmax=1.0, vmin=-1.0, linewidths=0.1,\n            annot=True, annot_kws={\"size\": 8}, square=True);","cd86b1a7":"plt.figure(figsize=(9, 8))\nsns.distplot(data.Age)","483c5435":"plt.figure(figsize=(9, 8))\nsns.distplot(data.Overall)","30b18a86":"data_no_img = data.drop(columns=[\"Photo\", \"Flag\", \"Club Logo\", \"Real Face\"], axis=1)","5fc75101":"data_imp = data_no_img.drop(columns=[\"ID\", \"Nationality\", \"Club\", \"Preferred Foot\",\n                                     \"Loaned From\", \"Joined\", \"Jersey Number\",\n                                     \"Contract Valid Until\", \"Name\", \"Work Rate\",\n                                     \"Body Type\", \"Position\", \"Height\", \"Weight\", \n                                     \"LS\", \"ST\", \"RS\", \"LW\", \"LF\", \"CF\", \"RF\", \"RW\",\n                                     \"LAM\", \"CAM\", \"RAM\", \"LM\", \"LCM\", \"CM\", \"RCM\", \n                                     \"RM\", \"LWB\", \"LDM\", \"CDM\", \"RDM\",\"RWB\", \"LB\",\n                                     \"LCB\", \"RCB\", \"RB\", \"CB\"], axis=1)","1db36f03":"data_imp = data_imp.fillna(0)","4732eaf5":"data_imp.info()","e59e80c7":"def convert_money(money):\n    if money == 0:\n        return float(0)\n    else:\n        money = money[1:] # remove \"\u20ac\" symbol\n        unit = money[-1]\n        if unit == 'K':\n            value = float(money[0:-1])*1000\n        elif unit == 'M':\n            value = float(money[0:-1])*1000000\n        else:\n            value = float(money)\n        return value","e4ace636":"convert_money(\"\u20ac565K\")","ff6aaec9":"data_imp[\"Wage\"] = data_imp[\"Wage\"].apply(convert_money)","49ab7a33":"data_imp[\"Value\"] = data_imp[\"Value\"].apply(convert_money)","199e0cdc":"data_imp[\"Release Clause\"] = data_imp[\"Release Clause\"].apply(convert_money)","4b694cb7":"from sklearn.model_selection import train_test_split","976a56c8":"y = data_imp[\"Value\"]\nx = data_imp.drop(\"Value\", axis=1)","51dd931a":"x_norm = (x-x.mean())\/x.std()","8ba0eb56":"x_train, x_test = train_test_split(x_norm, test_size=0.2)","4224f1fe":"y_train, y_test = train_test_split(y, test_size=0.2)","557c0647":"from keras.models import Sequential\nfrom keras.layers import Dense, Activation, Flatten","de6ce40f":"model = Sequential([\n    Dense(43, input_shape=(43, )),\n    Activation('relu'),\n    Dense(33),\n    Activation('relu'),\n    Dense(23),\n    Activation('relu'),\n    Dense(13),\n    Activation('relu'),\n    Dense(11),\n    Activation('relu'),\n    Dense(1),\n    Activation('relu')\n])","8f8b8f62":"print(model.summary())","5a38b012":"from keras import optimizers","2c600d40":"# For a mean squared error regression problem\nadam = optimizers.Adam(lr=0.003)\nmodel.compile(optimizer=adam,\n              loss='mse')","3e32fc38":"# Train the model, iterating on the data in batches of 64 samples\nmodel.fit(x_train, y_train, epochs=50, batch_size=64)","4a05b08a":"model.evaluate(x_test, y_test, batch_size=64)","8b850dfa":"x_train.iloc[[0]]","a2c1c251":"y_train.iloc[[0]]","9fb298b3":"ex = x_train.iloc[[0]]\n\nmodel.predict(ex)","e9216a64":"test_predictions = model.predict(x_test).flatten()\n\nplt.scatter(y_test, test_predictions)\nplt.xlabel('True Values')\nplt.ylabel('Predictions')\nplt.axis('equal')\nplt.xlim(plt.xlim())\nplt.ylim(plt.ylim())\nplt.plot([-100, 100], [-100, 100])","3caf8867":"error = test_predictions - y_test\nplt.hist(error, bins = 50)\nplt.xlabel(\"Prediction Error\")\nplt.ylabel(\"Count\")","e179f2cd":"from keras.models import load_model","7ed8f0e7":"model.save('fifa_model.h5')  # creates a HDF5 file 'my_model.h5'","dce7a868":"# returns a compiled model\n# identical to the previous one\nexa = load_model('fifa_model.h5')","2c1940f5":"print(os.listdir('..\/working'))","6553d4bc":"# Data Loading","2821660c":"# Data Preprocessing","3e570a0b":"**First of all , convert the csv file into a data frame:**","245746d6":"# Build NN model","50c0b030":"# Save Model","40f13b1f":"# Get Train and Test data","eb5e770b":"## Dropping all images","b734dbac":"# Regression Model to expect player price value","74f4e2aa":"# Data Exploration","87c5b0e8":"## Input Normalization\n**Any changes to the input data must be applied to the test data in production**","3518c7c4":"## Convert money amount to float number\nfor Value, Wage, and Release Claues"}}