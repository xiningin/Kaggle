{"cell_type":{"1db9f09d":"code","4f49ed7f":"code","cfeda5fa":"code","1e95ed83":"code","1a14f794":"code","eac414a1":"code","6e98d9ab":"code","c4685caa":"code","0a2045f2":"code","22183718":"code","3fe15857":"code","84769a7f":"markdown","a0534767":"markdown","85ea512b":"markdown","490a422e":"markdown"},"source":{"1db9f09d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4f49ed7f":"import matplotlib.pyplot as plt\nimport seaborn as sns","cfeda5fa":"space = pd.read_csv(\"\/kaggle\/input\/all-space-missions-from-1957\/Space_Corrected.csv\")","1e95ed83":"space.head()","1a14f794":"space['Company Name'].value_counts()","eac414a1":"plt.figure(figsize=(25,10))\nspace['Company Name'].value_counts().plot.bar() #very easy way to create a bar\nplt.xlabel(\"Space Agencies\")\nplt.ylabel(\"Total launches by different agencies\")\nfor i,v in enumerate(space['Company Name'].value_counts().values): #for bar values\n    plt.text(i-0.2,v+0.9,str(v)) #first two parameter are used to adjust position of text\nplt.show()","6e98d9ab":"plt.figure(figsize=(14,8))\nplt.pie(space['Company Name'].value_counts(),radius=2,labels=space['Company Name'].value_counts().index,labeldistance=1.01,autopct=\"%.1f%%\")\nplt.show()","c4685caa":"companies = np.array(space['Company Name'].value_counts().index).reshape(28,2) #we will create subplots of N*2 That's why i reshaped it like this","0a2045f2":"import warnings\nwarnings.filterwarnings('ignore')","22183718":"fig,axes=plt.subplots(28,2,figsize=(20,100))\nfor i in range(28):\n    for j in range(2):\n        space[space['Company Name'] == companies[i,j]]['Status Mission'].value_counts().plot(kind=\"pie\",ax=axes[i,j],radius=2.,autopct=\"%.1f%%\")\n        axes[i,j].set_xlabel(companies[i,j],labelpad=50,fontsize=20)\n        axes[i,j].set_ylabel(\"\")\n        plt.axis(\"equal\")\nplt.tight_layout()\nplt.show()","3fe15857":"fig,axes=plt.subplots(28,2,figsize=(20,300))\nfor i in range(28):\n    for j in range(2):\n        sns.barplot(x=space[space['Company Name'] == companies[i,j]]['Location'].value_counts().index,y=space[space['Company Name'] == companies[i,j]]['Location'].value_counts().values,ax=axes[i,j])\n        axes[i,j].set_xlabel(\"\")\n        axes[i,j].set_ylabel(\"\")\n        axes[i,j].set_title(\"Launches by {0}\".format(companies[i,j]))\n        axes[i,j].tick_params(axis='x',rotation=90)\nfig.subplots_adjust(hspace=2)\nplt.show()","84769a7f":"# Total Launches by different-different space agencies","a0534767":"# Launches by agencies from different Launch pads","85ea512b":"# Launch Status of different Agencies","490a422e":"# Shares of different space agencies in total launches"}}