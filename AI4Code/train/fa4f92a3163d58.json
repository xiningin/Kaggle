{"cell_type":{"79702adb":"code","af93c5ec":"code","f6a0dfa1":"code","0d509a42":"code","1dc56a1b":"code","b77343e6":"code","089d88b2":"code","441cf957":"code","2665d006":"code","59282656":"code","3bf17d9a":"code","53463ab5":"code","eae8caa7":"code","f940b050":"code","d1aa2c2f":"code","93b1e972":"code","5a16dc3e":"code","f7d9686f":"code","4fbfb8a3":"code","5b39a4ea":"code","196f7eab":"code","8543ab8f":"code","1474b720":"code","03570fe2":"markdown","c1e374ce":"markdown","2241c7ad":"markdown","d00dc135":"markdown","d0b28b05":"markdown","866deb8e":"markdown"},"source":{"79702adb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","af93c5ec":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","f6a0dfa1":"train_data=pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain_data.head()","0d509a42":"test_data=pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_data.head()","1dc56a1b":"#train_data.isnull()","b77343e6":"sns.heatmap(train_data.isnull(),yticklabels=False)","089d88b2":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',data=train_data)","441cf957":"sns.countplot(x='Survived',hue='Sex',data=train_data)","2665d006":"sns.countplot(x='Survived',hue='Pclass',data=train_data)","59282656":"sns.distplot(train_data['Age'].dropna(),kde=False,bins=40)","3bf17d9a":"sns.countplot(x='SibSp',data=train_data)","53463ab5":"sns.distplot(train_data['Fare'],kde=False,bins=50)","eae8caa7":"plt.figure(figsize=(10,5))\nsns.boxplot(x='Pclass',y='Age',data=train_data)","f940b050":"def impute_age(columns):\n    Age=columns[0]\n    Pclass=[1]\n    \n    if pd.isnull(Age):\n        \n        if Pclass==1:\n            return 37\n        elif Pclass==2:\n            return 28\n        else:\n            return 24\n        \n    else:\n        return Age","d1aa2c2f":"train_data['Age']=train_data[['Age','Pclass']].apply(impute_age,axis=1)\ntrain_data.drop('Cabin',axis=1,inplace=True)","93b1e972":"sns.heatmap(train_data.isnull())","5a16dc3e":"train_data.head()","f7d9686f":"#embark=pd.get_dummies(train_data['Embarked'],drop_first=True)\n#embark.head()","4fbfb8a3":"#sex=pd.get_dummies(train_data['Sex'])\n#sex.head()","5b39a4ea":"#train_data.drop(['Sex','Embarked','Name','Ticket'],axis=1,inplace=True)\n#train_data.head()","196f7eab":"#train_data=pd.concat([train_data,sex,embark],axis=1)\n#train_data.head()","8543ab8f":"#from sklearn.ensemble import RandomForestClassifier\n\n#y = train_data[\"Survived\"]\n\n#features = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\n#X = pd.get_dummies(train_data[features])\n#X_test = pd.get_dummies(test_data[features])\n\n#model = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\n#model.fit(X, y)\n#predictions = model.predict(X_test)\n\n#output = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\n#output.to_csv('my_submission.csv', index=False)\n#print(\"Your submission was successfully saved!\")\n","1474b720":"from sklearn.neighbors import KNeighborsClassifier\n\ny=train_data[\"Survived\"]\n\nfeatures=[\"Pclass\",\"Sex\", \"SibSp\", \"Parch\",\"Embarked\"]\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n\nmodel=KNeighborsClassifier(n_neighbors=3)\nmodel.fit(X,y)\npredictions=model.predict(X_test)\n#predictions\n\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")\n\n","03570fe2":"# Creating Model","c1e374ce":"**Replacing the Null values in Age column with the respective Pclass average age and Dropping cabin column.**","2241c7ad":"**Finding out the missing values in the data**","d00dc135":"# **Exploratory Data Analysis**","d0b28b05":"**Since the two columns i.e. age and cabin columns has missing data. By Observing we see that cabin has more number of missing data values as compared to the age column, so we will drop the cabin column.**","866deb8e":"# **Removing the null values from the data**"}}