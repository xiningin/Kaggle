{"cell_type":{"f047278c":"code","9bb17dda":"code","331c3ee3":"code","d965af01":"code","9a665940":"code","742545ed":"code","c6527578":"code","61d5234a":"code","5e5c29b5":"code","f3ae5df3":"code","b174b28f":"code","40be5c5a":"code","4ddee6a1":"code","2c3a68a1":"code","a8cc6969":"code","6668aab0":"code","eddb7252":"code","f3bfdddf":"code","fa3f4c25":"code","0dadec9b":"code","cb7b151e":"code","3f952b36":"code","bd37cd88":"markdown","e5c0e043":"markdown","5b86c6e1":"markdown","fa14405f":"markdown","07cf46ba":"markdown","0b5c9c8d":"markdown","424d27b4":"markdown","f0783dbf":"markdown","4d8b107b":"markdown"},"source":{"f047278c":"import numpy as np\nimport pandas as pd\nfrom scipy import stats\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nplt.rcParams['figure.figsize'] = 15, 6\n\nimport statsmodels.api as sm","9bb17dda":"# reference: https:\/\/logics-of-blue.com\/wp-content\/uploads\/2017\/05\/python-state-space-models.html","331c3ee3":"df = pd.read_csv(\"..\/input\/rossmann-store-sales\/train.csv\", parse_dates = True, index_col = 'Date')\ndf.head()","d965af01":"data = df['Sales'].groupby('Date').sum()\ndata.head()","9a665940":"thres = '2014-12-31'\ntrain = data[data.index <= thres]\ntest = data[data.index > thres]","742545ed":"train.shape","c6527578":"test.shape","61d5234a":"test.tail()","5e5c29b5":"plt.plot(train)","f3ae5df3":"plt.plot(test)","b174b28f":"def mape(y_true, y_pred):\n    y_true, y_pred = np.array(y_true), np.array(y_pred)\n    return np.mean(np.abs((y_true - y_pred) \/ y_true))","40be5c5a":"def rmspe(y_true, y_pred):\n    y_true, y_pred = np.array(y_true), np.array(y_pred)\n    return np.sqrt(np.mean(((y_true - y_pred) \/ y_true)**2))","4ddee6a1":"mod_local_level = sm.tsa.UnobservedComponents(train, 'local level', freq='D')\n\nres_local_level = mod_local_level.fit()\n\nprint(res_local_level.summary())\nplt.rcParams['figure.figsize'] = 24, 20\nres_local_level.plot_components();","2c3a68a1":"pred_local_level = res_local_level.predict('2015-01-01', '2015-07-31')\nplt.plot(test)\nplt.plot(pred_local_level, 'r');\nprint(\"MAPE = \", mape(test, pred_local_level))\nprint(\"RMSPE = \", rmspe(test, pred_local_level))","a8cc6969":"mod_trend = sm.tsa.UnobservedComponents(train, 'local linear trend', freq='D')\n\nres_trend = mod_trend.fit()\n\nprint(res_trend.summary())\nplt.rcParams['figure.figsize'] = 24, 20\nres_trend.plot_components();","6668aab0":"pred_trend = res_trend.predict('2015-01-01', '2015-07-31')\nplt.rcParams['figure.figsize'] = 24, 6\nplt.plot(test)\nplt.plot(pred_trend, 'r');\nprint(\"MAPE = \", mape(test, pred_trend))\nprint(\"RMSPE = \", rmspe(test, pred_trend))","eddb7252":"mod_season_local_level = sm.tsa.UnobservedComponents(train, 'local level', freq='D', seasonal=12)\n\nres_season_local_level = mod_season_local_level.fit()\n\nprint(res_season_local_level.summary())\nplt.rcParams['figure.figsize'] = 24, 20\nres_season_local_level.plot_components();","f3bfdddf":"pred_season_local_level = res_season_local_level.predict('2015-01-01', '2015-07-31')\nplt.rcParams['figure.figsize'] = 24, 6\nplt.plot(test)\nplt.plot(pred_season_local_level, 'r');\nprint(\"MAPE = \", mape(test, pred_season_local_level))\nprint(\"RMSPE = \", rmspe(test, pred_season_local_level))","fa3f4c25":"mod_season_trend = sm.tsa.UnobservedComponents(train, 'local linear trend', freq='D', seasonal=12)\n\nres_season_trend = mod_season_trend.fit()\n\nprint(res_season_trend.summary())\nplt.rcParams['figure.figsize'] = 24, 20\nres_season_trend.plot_components();","0dadec9b":"pred_season_trend = res_season_trend.predict('2015-01-01', '2015-07-31')\nplt.rcParams['figure.figsize'] = 24, 6\nplt.plot(test)\nplt.plot(pred_season_trend, 'r');\nprint(\"MAPE = \", mape(test, pred_season_trend))\nprint(\"RMSPE = \", rmspe(test, pred_season_trend))","cb7b151e":"mod_season_trend = sm.tsa.UnobservedComponents(train, 'local linear trend', freq='D', seasonal=12)\n\n#res_season_trend = mod_season_trend.fit()\nres_season_trend = mod_season_trend.fit(\n    method='bfgs',\n    maxiter=500,\n    start_params=mod_season_trend.fit(method='nm', maxiter=500).params\n)\n\nprint(res_season_trend.summary())\nplt.rcParams['figure.figsize'] = 24, 20\nres_season_trend.plot_components();","3f952b36":"pred_season_trend = res_season_trend.predict('2015-01-01', '2015-07-31')\nplt.rcParams['figure.figsize'] = 24, 6\nplt.plot(test)\nplt.plot(pred_season_trend, 'r');\nprint(\"MAPE = \", mape(test, pred_season_trend))\nprint(\"RMSPE = \", rmspe(test, pred_season_trend))","bd37cd88":"$$\\textrm{RMSPE} = \\sqrt{\\frac{1}{n} \\sum_{t=1}^{n} \\left(\\frac{y_t - \\hat{y}_t}{y_t}\\right)^2}$$\nwhere $y_t$ is the actual value and $\\hat{y}_t$ is the forecast value.","e5c0e043":"## Local level model","5b86c6e1":"## Seasonal local linear trend model","fa14405f":"# State space models","07cf46ba":"# Mean absolute percentage error (MAPE)","0b5c9c8d":"$$MAPE=\\frac{1}{n}\\sum_{t=1}^{n}\\left |\\frac{y_t - \\hat{y}_t}{y_t}\\right|$$","424d27b4":"## Local linear trend model","f0783dbf":"# Root Mean Square Percentage Error (RMSPE)","4d8b107b":"## Seasonal local level model"}}