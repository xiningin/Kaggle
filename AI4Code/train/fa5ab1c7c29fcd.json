{"cell_type":{"14771ae9":"code","babcd7ce":"code","f3e1a1f8":"code","cdb55579":"code","de1fda04":"code","50540471":"code","2d9313fa":"code","9a6afcf0":"code","f577e8de":"code","ac825b0d":"code","3ff63741":"code","d129abd0":"code","01470744":"code","ffb09d03":"code","d90688ca":"code","ac284e6f":"code","91a7a05f":"code","8d932b47":"code","7bfc9a2e":"code","81a9efb3":"code","741520a4":"markdown","bd4be7c2":"markdown","50733967":"markdown","a386c2f5":"markdown","06d50b23":"markdown","002bd7be":"markdown","44929473":"markdown","30aa55ce":"markdown","44b45cde":"markdown","ab02fd77":"markdown","0b17ec55":"markdown"},"source":{"14771ae9":"import pandas as pd\nimport numpy as np\nimport sklearn\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nimport matplotlib.pyplot as plt\nimport seaborn as sns","babcd7ce":"dataset= pd.read_csv('..\/input\/heart-disease-classification-dataset\/heart disease classification dataset.csv')\ndataset.head()","f3e1a1f8":"dataset.drop(dataset.columns[0], axis = 1, inplace = True)\ndataset.head()","cdb55579":"dataset.info()","de1fda04":"dataset.target.value_counts()","50540471":"with_heart_disease = dataset.target.value_counts()[0]\nwithout_heart_disease = dataset.target.value_counts()[1]\nprint('With Heart Disease: ', with_heart_disease)\nprint('Without Heart Disease: ', without_heart_disease)","2d9313fa":"plt.bar(['With Heart Disease'], [with_heart_disease])\nplt.bar(['Without Heart Disease'], [without_heart_disease])\nplt.xlabel('Heart Disease')\nplt.ylabel('Count')\nplt.title('Heart Disease Count')\nplt.show()","9a6afcf0":"dataset.isnull().sum()","f577e8de":"dataset=dataset.dropna(axis=0,subset=['trestbps','chol','thalach']) \ndataset.isnull().sum()","ac825b0d":"dataset['target'].unique()","3ff63741":"dataset['target']=dataset['target'].map({'yes':1,'no':0})","d129abd0":"dataset['sex'].unique()","01470744":"dataset['sex']=dataset['sex'].map({'male':1,'female':0})","ffb09d03":"dataset.head()","d90688ca":"from sklearn.preprocessing import StandardScaler\nscaler=StandardScaler()\nscaler.fit(dataset.drop(['target'], axis = 1))","ac284e6f":"scaled_features= scaler.transform(dataset.drop(['target'], axis = 1))\ndataset_feat=pd.DataFrame(scaled_features,columns=dataset.columns[:-1])\ndataset_feat.head()","91a7a05f":"sns.pairplot(dataset,hue='target')","8d932b47":"y = dataset.target.values\nx = dataset.drop(['target'], axis = 1)\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=0)","7bfc9a2e":"print(x_train.shape)\nprint(y_train.shape)\nprint(x_test.shape)\nprint(y_test.shape)","81a9efb3":"from sklearn.linear_model import LogisticRegression\n\nlogistic_regression_model = LogisticRegression(max_iter=1000)\nlogistic_regression_model.fit(x_train, y_train) \nlogistic_predictions =logistic_regression_model.predict(x_test)\nlogistic_regression_accuracy=accuracy_score(y_test, logistic_predictions)*100\n\n\nprint('Logistic Regression Testing Accuracy: ',logistic_regression_accuracy)","741520a4":"### Splitting the data into training data and testing data","bd4be7c2":"### Pair Plot","50733967":"### Importing Necessary Libraries","a386c2f5":"### Loading the dataset as dataframe using pandas","06d50b23":"### Logistic Regression","002bd7be":"### Data Pre Processing","44929473":"#### Handling Null Values","30aa55ce":"### Model Training","44b45cde":"#### Encoding Categorical Features","ab02fd77":"### Data Analysis","0b17ec55":"### Standardize the Variables"}}