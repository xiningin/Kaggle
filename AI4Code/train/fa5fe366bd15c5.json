{"cell_type":{"c377e4be":"code","44c340eb":"code","d5788ee3":"code","507bb3ab":"code","58f05426":"code","bac11d0d":"code","5e38e60c":"code","f21ef10c":"code","0430b766":"code","7727e35c":"code","2b4062c7":"code","7680c321":"code","7f865442":"code","30c9e799":"code","1ffe6232":"code","4843e31f":"code","9e8535b4":"code","d5d8543f":"code","7ea095ca":"markdown","31f2f34e":"markdown","46db982b":"markdown","c668584a":"markdown","4867c71a":"markdown","920f77ae":"markdown","5e53d309":"markdown","ce673182":"markdown","6dfd7485":"markdown"},"source":{"c377e4be":"import pandas as pd\nimport numpy as np\n\nfrom sklearn import metrics\nfrom scipy.stats import zscore\n\n\nimport io\nimport requests\nimport os\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics\n\nfrom pandas.api.types import is_string_dtype\nfrom pandas.api.types import is_numeric_dtype\n\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Activation\nfrom tensorflow.keras.callbacks import EarlyStopping","44c340eb":"from tensorflow.keras.utils import get_file\n\ntry:\n    path = get_file('kddcup.data_10_percent.gz', origin=\n    'http:\/\/kdd.ics.uci.edu\/databases\/kddcup99\/kddcup.data_10_percent.gz')\nexcept:\n    print('Error downloading')\n    raise\n    \ndf = pd.read_csv(path, header=None)\ndf.head()\n","d5788ee3":"df.columns = [\n    'duration',\n    'protocol_type',\n    'service',\n    'flag',\n    'src_bytes',\n    'dst_bytes',\n    'land',\n    'wrong_fragment',\n    'urgent',\n    'hot',\n    'num_failed_logins',\n    'logged_in',\n    'num_compromised',\n    'root_shell',\n    'su_attempted',\n    'num_root',\n    'num_file_creations',\n    'num_shells',\n    'num_access_files',\n    'num_outbound_cmds',\n    'is_host_login',\n    'is_guest_login',\n    'count',\n    'srv_count',\n    'serror_rate',\n    'srv_serror_rate',\n    'rerror_rate',\n    'srv_rerror_rate',\n    'same_srv_rate',\n    'diff_srv_rate',\n    'srv_diff_host_rate',\n    'dst_host_count',\n    'dst_host_srv_count',\n    'dst_host_same_srv_rate',\n    'dst_host_diff_srv_rate',\n    'dst_host_same_src_port_rate',\n    'dst_host_srv_diff_host_rate',\n    'dst_host_serror_rate',\n    'dst_host_srv_serror_rate',\n    'dst_host_rerror_rate',\n    'dst_host_srv_rerror_rate',\n    'outcome'\n]\n\ndf.head()","507bb3ab":"#df.to_csv('KDD99_dataset.csv')","58f05426":"df.columns","bac11d0d":"df.shape","5e38e60c":"df.isnull().sum()","f21ef10c":"def analyze_column(col):\n  \n  categories = df[col].unique()\n  count = df[col].value_counts()\n  ucount = df[col].nunique()\n\n  print(df[col].sample(10))\n  if is_numeric_dtype(df[col]) == True:\n    print(\"\\n\\n\\nNumeric DataType\")\n  elif is_string_dtype(df[col]) == True:\n    print(\"\\n\\n\\nString DataType\")\n  else:\n    print(\"Unknown Datatype\")\n\n  print(\"\\n\\n\\nCategories:\",categories)\n  print(\"\\n\\n\\nNumber of Categories:\",ucount)\n  print(\"\\nCounts:\\n\",count)\n\nanalyze_column('num_file_creations')","0430b766":"df.info()","7727e35c":"def encode_numeric_zscore(df, name, mean=None, sd=None):\n    if mean is None:\n        mean = df[name].mean()\n\n    if sd is None:\n        sd = df[name].std()\n\n    df[name] = (df[name] - mean) \/ sd\n\ndef encode_text_dummy(df, name):\n    dummies = pd.get_dummies(df[name])\n    for x in dummies.columns:\n        dummy_name = f\"{name}-{x}\"\n        df[dummy_name] = dummies[x]\n    df.drop(name, axis=1, inplace=True)","2b4062c7":"encode_text_dummy(df, 'protocol_type')\nencode_text_dummy(df, 'service')\nencode_text_dummy(df, 'flag')\nencode_text_dummy(df, 'land')\nencode_text_dummy(df, 'logged_in')\nencode_text_dummy(df, 'is_host_login')\nencode_text_dummy(df, 'is_guest_login')\n\n\n\nencode_numeric_zscore(df, 'duration')\nencode_numeric_zscore(df, 'src_bytes')\nencode_numeric_zscore(df, 'dst_bytes')\nencode_numeric_zscore(df, 'wrong_fragment')\nencode_numeric_zscore(df, 'urgent')\nencode_numeric_zscore(df, 'hot')\nencode_numeric_zscore(df, 'num_failed_logins')\nencode_numeric_zscore(df, 'num_compromised')\nencode_numeric_zscore(df, 'root_shell')\nencode_numeric_zscore(df, 'su_attempted')\nencode_numeric_zscore(df, 'num_root')\nencode_numeric_zscore(df, 'num_file_creations')\nencode_numeric_zscore(df, 'num_shells')\nencode_numeric_zscore(df, 'num_access_files')\nencode_numeric_zscore(df, 'num_outbound_cmds')\nencode_numeric_zscore(df, 'count')\nencode_numeric_zscore(df, 'srv_count')\nencode_numeric_zscore(df, 'serror_rate')\nencode_numeric_zscore(df, 'srv_serror_rate')\nencode_numeric_zscore(df, 'rerror_rate')\nencode_numeric_zscore(df, 'srv_rerror_rate')\nencode_numeric_zscore(df, 'same_srv_rate')\nencode_numeric_zscore(df, 'diff_srv_rate')\nencode_numeric_zscore(df, 'srv_diff_host_rate')\nencode_numeric_zscore(df, 'dst_host_count')\nencode_numeric_zscore(df, 'dst_host_srv_count')\nencode_numeric_zscore(df, 'dst_host_same_srv_rate')\nencode_numeric_zscore(df, 'dst_host_diff_srv_rate')\nencode_numeric_zscore(df, 'dst_host_same_src_port_rate')\nencode_numeric_zscore(df, 'dst_host_srv_diff_host_rate')\nencode_numeric_zscore(df, 'dst_host_serror_rate')\nencode_numeric_zscore(df, 'dst_host_srv_serror_rate')\nencode_numeric_zscore(df, 'dst_host_rerror_rate')\nencode_numeric_zscore(df, 'dst_host_srv_rerror_rate')\n","7680c321":"df.head()","7f865442":"df.dropna(inplace=True,axis=1)","30c9e799":"# Convert to numpy - Classification\nx_columns = df.columns.drop('outcome')\nx = df[x_columns].values\n\ndummies = pd.get_dummies(df['outcome']) # Classification\noutcomes = dummies.columns\nnum_classes = len(outcomes)\n\ny = dummies.values","1ffe6232":"df.groupby('outcome')['outcome'].count()","4843e31f":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)\n\n# Create neural net\nmodel = Sequential()\nmodel.add(Dense(10, input_dim=x.shape[1], activation='relu'))\nmodel.add(Dense(50, input_dim=x.shape[1], activation='relu'))\nmodel.add(Dense(10, input_dim=x.shape[1], activation='relu'))\n\nmodel.add(Dense(1, kernel_initializer='normal'))\n\nmodel.add(Dense(y.shape[1],activation='softmax'))\n\nmodel.compile(loss='categorical_crossentropy',metrics=['accuracy'], optimizer='adam')\nmonitor = EarlyStopping(monitor='val_loss', min_delta=1e-3, patience=5, verbose=1, mode='auto',restore_best_weights=True)\nmodel.fit(x_train,y_train,validation_data=(x_test,y_test), callbacks=[monitor],verbose=2,epochs=100)\n","9e8535b4":"pred = model.predict(x_test)\npred = np.argmax(pred,axis=1)\ny_eval = np.argmax(y_test,axis=1)\nscore = metrics.accuracy_score(y_eval, pred)\nprint(\"Validation score: {}\".format(score))","d5d8543f":"model.save(\"zscore_ANN.h5\")","7ea095ca":"### Model Pickle","31f2f34e":"## Data Analysis","46db982b":"### Encoding features\nFrom the insights drawn by alaysis of the columns individually, we decide to convert some columns to Z-scores and others to a One Hot Encoding.","c668584a":"## Neural Network","4867c71a":"# Measure accuracy","920f77ae":"### Save the modified dataset:\n\n","5e53d309":"# Anomaly Detection\n\nAnomaly detection is a process for identifying unexpected data, event or behavior that require some examination. It is a well-established field within data science and there is a large number of algorithms to detect anomalies in a dataset depending on data type and business context. \n\n### z-score\nZ-score is probably the simplest algorithm that can rapidly screen candidates for further examination to determine whether they are suspicious or not.\n\n### What is Z-score\nSimply speaking, Z-score is a statistical measure that tells you how far is a data point from the rest of the dataset. In a more technical term, Z-score tells how many standard deviations away a given observation is from the mean.\nFor example, a Z score of 2.5 means that the data point is 2.5 standard deviation far from the mean. And since it is far from the center, it\u2019s flagged as an outlier\/anomaly.","ce673182":"## Data","6dfd7485":"### analyze_column()\nSince, there are a lot of columns to understand we are building as custom function\n\nThis function takes a column name (in quotes eg. 'column name')\n\nAnd, returns:\n- A sample of the data.\n- If the column's data is Numerical or String.\n- Types of categories.\n- Count of all the categories.\n\nWith this function we can easily analyse all the columns and understand the data."}}