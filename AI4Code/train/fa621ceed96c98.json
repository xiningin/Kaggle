{"cell_type":{"50c5dcdd":"code","74ad9946":"code","012b9241":"code","dad3f2f1":"code","9509cc13":"code","71735405":"code","63cf9ce7":"code","1949ed6b":"code","b19b81de":"code","ce7c39ee":"code","3b07c2df":"code","d1a46fcc":"code","7859d948":"code","0b2f6e3d":"code","e75370b4":"code","8bae2899":"code","fbf3610f":"code","a11e6fcc":"code","1f9f55d2":"code","510a8d69":"code","ad9bc335":"code","f3013dbe":"code","30caf985":"code","f0b7abd9":"markdown","547ecc34":"markdown","c1d2dfb0":"markdown","d7ca5484":"markdown","fa4101c8":"markdown","dcffc1f8":"markdown"},"source":{"50c5dcdd":"import pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns","74ad9946":"df = pd.read_csv('..\/input\/oussama\/voice.csv')","012b9241":"df.head()","dad3f2f1":"df.columns","9509cc13":"from IPython.core.display import HTML\ndisplay(HTML(df.head(10).to_html()))","71735405":"df.shape","63cf9ce7":"df.describe()","1949ed6b":"male = df.label=='male'\nfemale = df.label=='female'","b19b81de":"sns.jointplot(\"skew\", \"kurt\", df, kind='kde');","ce7c39ee":"plt.figure(figsize=(12,12))\nsns.kdeplot(df.maxfun, df.minfun,  shade=True)","3b07c2df":"plt.figure(figsize=(12,12))\nsns.kdeplot(df[male].maxfun, df[male].minfun, cmap=\"Reds\",  shade=True, alpha=0.3, shade_lowest=False)\nsns.kdeplot(df[female].maxfun, df[female].minfun, cmap=\"Greens\", shade=True, alpha=0.3, shade_lowest=False)","d1a46fcc":"sns.violinplot(x=\"label\", y=\"maxfun\", data=df)","7859d948":"fig = sns.FacetGrid(df, hue=\"label\", aspect=3, palette=\"Set2\") # aspect=3 permet d'allonger le graphique\nfig.map(sns.kdeplot, \"maxfun\", shade=True)\nfig.add_legend()","0b2f6e3d":"sns.lmplot(x=\"Q25\", y=\"Q75\", data=df, fit_reg=False, hue='label')","e75370b4":"data_train = df.sample(frac=0.8, random_state=1)          # 80% des donn\u00e9es avec frac=0.8\ndata_test = df.drop(data_train.index)     # le reste des donn\u00e9es pour le test","8bae2899":"X_train = data_train.drop(['label'], axis=1)\ny_train = data_train['label']\nX_test = data_test.drop(['label'], axis=1)\ny_test = data_test['label']","fbf3610f":"plt.figure(figsize=(9,9))\n\nlogistique = lambda x: np.exp(x)\/(1+np.exp(x))   \n\nx_range = np.linspace(-10,10,50)       \ny_values = logistique(x_range)\n\nplt.plot(x_range, y_values, color=\"red\")","a11e6fcc":"from sklearn.linear_model import LogisticRegression","1f9f55d2":"lr = LogisticRegression(solver='liblinear')  \nlr.fit(X_train,y_train)","510a8d69":"y_lr = lr.predict(X_test)","ad9bc335":"from sklearn.metrics import accuracy_score, confusion_matrix","f3013dbe":"\ncm = confusion_matrix(y_test, y_lr)\nprint(cm)","30caf985":"pd.crosstab(y_test, y_lr, rownames=['Reel'], colnames=['Prediction'], margins=True)","f0b7abd9":"**# Matrice de confusion**","547ecc34":"**Machine learning**","c1d2dfb0":"selon la CART Diagram on voit que pour les gens qui ont moins de 0,14 en meanfun sont des femmes et donc on a plutot 75% qui sont des femmes vu que leurs mean fundamental est inferieur \u00e0 140 Hz","d7ca5484":"VISIUALISATION","fa4101c8":"**Donn\u00e9es**","dcffc1f8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session"}}