{"cell_type":{"6fd80643":"code","4970351f":"code","61fb69f7":"code","7e747a85":"code","e286ad88":"code","fd19490a":"code","414cfd26":"code","d21b7006":"markdown","9a3fe9e4":"markdown","24c1bc46":"markdown","3b0f85b9":"markdown"},"source":{"6fd80643":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4970351f":"df = pd.read_excel(\"\/kaggle\/input\/covid19-symptoms-dataset\/covid19-symptoms-dataset.xlsx\")\ndf.head()","61fb69f7":"x=df.iloc[:,:-1]\ny=df.iloc[:,-1]\ny = y.map({'Yes':1,'No':0})\nprint(x.head())\nprint(y.head())","7e747a85":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y)\nprint(x_train,y_train)","e286ad88":"from sklearn.linear_model import LinearRegression\nregressor = LinearRegression()\nregressor.fit(x_train,y_train)","fd19490a":"y_pred = regressor.predict(x_train)\nfrom IPython.display import display_html \ny_pred=regressor.predict(x_train)\ndf1_styler = pd.DataFrame(y_train).style.set_table_attributes(\"style='display:inline'\")\ndf2_styler = pd.DataFrame(y_pred,columns=['Predicted Outcome']).style.set_table_attributes(\"style='display:inline'\")\ndisplay_html(df1_styler._repr_html_()+\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"+df2_styler._repr_html_(), raw=True)","414cfd26":"y_pred_test=regressor.predict(x_test)\ndf1_styler = pd.DataFrame(y_test).style.set_table_attributes(\"style='display:inline'\")\ndf2_styler = pd.DataFrame(y_pred_test,columns=['Predicted Outcome']).style.set_table_attributes(\"style='display:inline'\")\ndisplay_html(df1_styler._repr_html_()+\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"+df2_styler._repr_html_(), raw=True)","d21b7006":"SPLIT THE DATA INTO TRAINING AND TEST SET","9a3fe9e4":"LINEAR REGRESSION","24c1bc46":"IMPORT THE DATASET","3b0f85b9":"ASSIGN X AND Y"}}