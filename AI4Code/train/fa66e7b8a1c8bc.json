{"cell_type":{"27c73d0b":"code","b233ae1a":"code","2841bcaf":"code","f3daefa7":"code","0b61ee53":"code","3fe8745b":"code","9b5eb958":"code","8c4334aa":"code","b0f3cd92":"code","5cc6da96":"code","80ebeb84":"code","76a9c08e":"code","56453c86":"code","a5795cf8":"code","56286e7a":"code","a8921cca":"markdown","79e8747b":"markdown","852d94df":"markdown","32b46867":"markdown","12b7fbeb":"markdown","4ead1474":"markdown"},"source":{"27c73d0b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b233ae1a":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')","2841bcaf":"df_train = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/sales_train.csv')\ndf_shops = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/shops.csv')\ndf_items = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/items.csv')\ndf_item_cat = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/item_categories.csv')\ndf_test = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/test.csv')","f3daefa7":"df_train.head()","0b61ee53":"df_train.describe()","3fe8745b":"df_train.isnull().sum()","9b5eb958":"df_item_cat","8c4334aa":"plt.figure(figsize=(19,9))\nsns.barplot(df_item_cat['item_category_id'], df_item_cat['item_category_id'])\nplt.title('Count for Different Items Categories', fontsize = 30)\nplt.xlabel('Item Categories', fontsize = 15)\nplt.ylabel('Items in each Categories', fontsize = 15)\nplt.show()","b0f3cd92":"plt.figure(figsize=(19,9))\nsns.countplot(df_train['date_block_num'])\nplt.title('Date blocks according to months', fontsize = 30)\nplt.xlabel('Different blocks of months', fontsize = 15)\nplt.ylabel('No. of Purchases', fontsize = 15)\nplt.show()","5cc6da96":"df_train.nunique()","80ebeb84":"#removing the null values\ndf_train['item_id'].value_counts()","76a9c08e":"x = df_train['item_id'].nunique()\nx","56453c86":"df_item_cat.head(4)","a5795cf8":"from wordcloud import WordCloud\nplt.figure(figsize= (20,20))\nwords= \"\".join(df_item_cat['item_category_name'])\nfinal = WordCloud(width = 2000, height = 800, background_color =\"black\",min_font_size = 10).generate(words)\nplt.imshow(final)\nplt.show()","56286e7a":"from wordcloud import WordCloud\nplt.figure(figsize= (20,20))\nwords= \"\".join(df_items['item_name'])\nfinal = WordCloud(width = 2000, height = 800, background_color =\"black\",min_font_size = 10).generate(words)\nplt.imshow(final)\nplt.show()","a8921cca":"**Number of unique item present in the store**","79e8747b":"# Predicting the date of maximum sale in a month","852d94df":"# Making a word cloud for item categories name","32b46867":"# Plotting the item category with its count","12b7fbeb":"# Making a word cloud for item name","4ead1474":"# Reading all the csv files"}}