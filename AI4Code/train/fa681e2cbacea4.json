{"cell_type":{"b50d2b19":"code","9a0ed054":"code","5cb073f2":"code","9da63d74":"code","32dc58a7":"code","78233797":"code","ffe6f56b":"code","88352e7e":"code","f8f7fa4e":"code","ebf36445":"code","5de4e6e9":"code","a2f5920f":"code","3789d7c3":"code","7aa765de":"code","7f57a1c4":"code","4e01743c":"code","c028d7b9":"code","be48da46":"code","8b5a59d7":"code","bec4e654":"code","eeff58eb":"code","af756a30":"code","c412a674":"code","8744ccb6":"code","4b6f0f8a":"code","94c1700d":"code","a5d40f80":"code","f8d713eb":"code","60a137d9":"code","1fd30fa5":"code","c57df35d":"code","c6f5383d":"code","59d7f72c":"code","7579205e":"code","747e6fc4":"code","f968b7a4":"code","793f8417":"markdown","88cef946":"markdown","8b650489":"markdown","a66ac615":"markdown","f8a18fb6":"markdown","4374032b":"markdown","56f453a4":"markdown","e89ba025":"markdown","23f59a86":"markdown","b5a9f73f":"markdown","1ecebb27":"markdown"},"source":{"b50d2b19":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","9a0ed054":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","5cb073f2":"raw_train=pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv')\nraw_test=pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv')","9da63d74":"#display all columns\npd.set_option('display.max_columns', None)\n#display all rows\npd.set_option('display.max_rows', None)\nraw_train.head()","32dc58a7":"raw_train.describe(include='all').T","78233797":"raw_test.describe(include='O').T.shape","ffe6f56b":"from scipy import stats","88352e7e":"sns.distplot(raw_train['SalePrice'],color='blue')","f8f7fa4e":"stats.probplot(raw_train['SalePrice'],plot=plt)","ebf36445":"#heatmap\nfig = plt.figure(figsize=(16,9))\nsns.heatmap(raw_train.corr(),cmap='Blues')","5de4e6e9":"#TotalBsmtSF  1stFlrSF GarageYrBlt YearBuilt GrLivArea TotRmsAbvGrd GarageCars GarageArea OverallQual\nsns.heatmap(raw_train[['SalePrice','TotalBsmtSF','1stFlrSF' ,'GarageYrBlt' ,'YearBuilt' ,'GrLivArea' ,'TotRmsAbvGrd','GarageCars','GarageArea' ,'OverallQual']].corr(),annot=True)","a2f5920f":"columns=['GrLivArea','GarageCars','OverallQual','YearBuilt','TotalBsmtSF','SalePrice']\nsns.pairplot(raw_train[columns])","3789d7c3":"#Relationship with numerical variables\n#GrLiveArea and Saleprise\ndata=pd.concat([raw_train['SalePrice'],raw_train['GrLivArea']],axis=1)\ndata.plot.scatter('GrLivArea','SalePrice',ylim=(0,800000),xlim=(0,6000))","7aa765de":"#MSZoning  and Saleprise\ndata=pd.concat([raw_train['SalePrice'],raw_train['TotalBsmtSF']],axis=1)\ndata.plot.scatter('TotalBsmtSF','SalePrice')","7f57a1c4":"#Relationship with categorical features\n#GarageCars and SalePrice\ndata=pd.concat([raw_train['SalePrice'],raw_train['GarageCars']],axis=1)\nfig=sns.boxplot(x='GarageCars',y='SalePrice',data=data)\nfig.axis(ymin=0, ymax=800000)","4e01743c":"#OverallQual and SalePrice\ndata=pd.concat([raw_train['SalePrice'],raw_train['OverallQual']],axis=1)\nfig=sns.boxplot(x='OverallQual',y='SalePrice',data=data)\nfig.axis(ymin=0, ymax=800000)","c028d7b9":"#YearBuilt and SalePrice\ndata=pd.concat([raw_train['SalePrice'],raw_train['YearBuilt']],axis=1)\nf, ax = plt.subplots(figsize=(16, 8))\nfig = sns.boxplot(x='YearBuilt',y=\"SalePrice\", data=data)\nfig.axis(ylim=0,ymax=800000)","be48da46":"n1=raw_train.isnull().sum().sort_values(ascending=False)\nn2=raw_test.isnull().sum().sort_values(ascending=False)\nnull_features=pd.concat([n1[n1!=0],n2[n2!=0]],axis=1, keys=['Train', 'Test'],sort=False)\n\ntrain_percent=pd.DataFrame(((n1[n1!=0])*100\/len(raw_train)).sort_values(ascending=False),columns=['train_percent'])\ntest_percent=pd.DataFrame(((n2[n2!=0])*100\/len(raw_train)).sort_values(ascending=False),columns=['test_percent'])\nnull_count=pd.concat([null_features,train_percent,test_percent],axis=1,sort=False)\n\nnull_count","8b5a59d7":"#Drop missing data largely and Multicollinearity avriables\nraw_train.drop(columns=['PoolQC','MiscFeature','Alley','Fence','FireplaceQu','TotRmsAbvGrd','1stFlrSF','GarageYrBlt','GarageArea','TotalBsmtSF','2ndFlrSF'],inplace=True)\nraw_test.drop(columns=['PoolQC','MiscFeature','Alley','Fence','FireplaceQu','TotRmsAbvGrd','1stFlrSF','GarageYrBlt','GarageArea','TotalBsmtSF','2ndFlrSF'],inplace=True)\n","bec4e654":"raw_test.shape","eeff58eb":"#fill the null whith average  or mode\ncol=['GarageCars','BsmtUnfSF','KitchenQual','Exterior1st','SaleType','Exterior2nd','BsmtFinSF1','BsmtFinSF2','BsmtFullBath','Functional','MSZoning','Utilities','BsmtHalfBath']\nfor c in col:\n    raw_test[c].fillna(method='bfill',inplace=True)\n\nraw_train['LotFrontage'].fillna(raw_train['LotFrontage'].mean(),inplace=True)\nraw_test['LotFrontage'].fillna(raw_test['LotFrontage'].mean(),inplace=True)\n\ncol1=['GarageCond','GarageType','GarageFinish','GarageQual','BsmtExposure','BsmtFinType1','BsmtFinType2','BsmtCond','BsmtQual','MasVnrArea','MasVnrType']\nfor c in col1:\n    raw_train[c].fillna(raw_train[c].mode()[0],inplace=True)\n    raw_test[c].fillna(raw_test[c].mode()[0],inplace=True)\n\n# remember mode()[0] or it still is nan","af756a30":"train=raw_train\ntest=raw_test# avoid occur some mistakes ,we can't go back\n\ntrain.dropna(inplace=True)\n\nprint('null:',train.isnull().sum().max())\nprint('null:',test.isnull().sum().max())# 0 null value","c412a674":"X_train=train.iloc[:,1:-1]\ny_train=train.iloc[:,-1]\nX_test=test.iloc[:,1:]\n","8744ccb6":"X_train.shape,X_test.shape#the foermat must be same,we got it!","4b6f0f8a":"#we should find out these categorical features\ncategorical=X_train.describe(include='O').T\nc_name=categorical.index\nc_name\n","94c1700d":"from sklearn.preprocessing import LabelEncoder\nfor c in c_name:\n    labelencoder=LabelEncoder()\n    X_train[c]=labelencoder.fit_transform(X_train[c])\n    X_test[c]=labelencoder.fit_transform(X_test[c])","a5d40f80":"tr_numeric_feats = X_train.dtypes[X_train.dtypes != \"object\"].index\nte_numeric_feats = X_test.dtypes[X_test.dtypes != \"object\"].index\nfrom scipy.stats import norm, skew \ntr_skewed_feats = X_train[tr_numeric_feats].apply(lambda x:skew(x.dropna())).sort_values(ascending=False)\nte_skewed_feats = X_test[te_numeric_feats].apply(lambda x:skew(x.dropna())).sort_values(ascending=False)","f8d713eb":"tr_skewed_feats=tr_skewed_feats[tr_skewed_feats > 0.75].index\nte_skewed_feats=te_skewed_feats[te_skewed_feats > 0.75].index\n\nX_train[tr_skewed_feats]=np.log1p(X_train[tr_skewed_feats])\nX_test[te_skewed_feats]=np.log1p(X_test[te_skewed_feats])\n","60a137d9":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split ","1fd30fa5":"# data standardization except y\nX_train = StandardScaler().fit_transform(X_train)\nX_test=StandardScaler().fit_transform(X_test)","c57df35d":"X_tr,X_te,y_tr,y_te=train_test_split(X_train,y_train,random_state=3)","c6f5383d":"# method1:xgboox it work wery well!\nimport xgboost as xgb\nmodel_xgb = xgb.XGBRegressor(n_estimators=360, max_depth=2, learning_rate=0.1)\nmodel_xgb.fit(X_train,y_train)\nresult=model_xgb.predict(X_test)","59d7f72c":"#method2:RandomForestRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nmodel_randomFore = RandomForestRegressor(n_estimators=400)\nmodel_randomFore.fit(X_train,y_train)\ny_pred=model_randomFore.predict(X_tr)","7579205e":"#method3:SVC\nfrom sklearn.svm import SVC\nmodel_svc = SVC(kernel = 'sigmoid', random_state = 3)\nmodel_svc.fit(X_train, y_train)\nresult=model_svc.predict(X_test)","747e6fc4":"#method4:DecisionTreeClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nmodel_dct = DecisionTreeClassifier(criterion = 'entropy', random_state = 19)\nmodel_dct.fit(X_train, y_train)\nresult=model_dct.predict(X_test)","f968b7a4":"pre=pd.DataFrame(result,columns=['SalePrice'])\nsubmmison=pd.concat([raw_test['Id'],pre],axis=1)\nsubmmison.to_csv('.\/sub.csv',index=False)","793f8417":"## 8.Modelling","88cef946":"## 2.Import the dataset","8b650489":"#### We can conclude:there is a strong correlation between \"1stFlrSF\" and \"TotalBsmtSF\",\"YearBuilt\" and \"GarageYrBlt\",  \"TotRmsAbvGrd\" and \"GrLivArea\",  \"GarageArea\" and \"GarageCars\". 'OverallQual', \"GrLivArea\" and \"GarageCars\" are strongly correlated with \"SalePrice\"\n#### My principle of variable selection is to choose if the variable is not related to other variables, but the result has a strong correlation\uff0cso we choose TotalBsmtSF,YearBuilt, GrLivArea,GarageCars,OverallQual,","a66ac615":"## 5.Check the null values","f8a18fb6":"## 1.Import libraries","4374032b":"## 3.Check the data","56f453a4":"### In summary\uff0ccategorical data has 43,numerical data has 38,including \"SalePrice\"","e89ba025":"## 6.Spliti train_set and test_set","23f59a86":"## 7.apply LabelEncoder transform to categorical features ","b5a9f73f":"## 9.submit the file","1ecebb27":"## 4. find the correlation between variables"}}