{"cell_type":{"eb22ecbf":"code","99ccd4d1":"code","63d82b3e":"code","0652e201":"code","59ff8850":"code","1657d7a3":"code","88f8854b":"code","4cf4dae9":"code","3192a125":"code","fda83665":"code","261715ef":"code","2b6433ee":"code","89ac8e17":"code","e6e299e4":"code","7ca543ba":"code","172298f4":"markdown","41f1af1f":"markdown","2caeb01f":"markdown","66e34592":"markdown","b2e2959e":"markdown","fb9abaef":"markdown","eabf8c2d":"markdown","3420251b":"markdown","cbab4764":"markdown","479ed2c5":"markdown","f31d5481":"markdown"},"source":{"eb22ecbf":"import pandas as pd\nimport seaborn as sns\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport numpy as np","99ccd4d1":"train = pd.read_csv(\"..\/input\/tabular-playground-series-dec-2021\/train.csv\")\ntest = pd.read_csv(\"..\/input\/tabular-playground-series-dec-2021\/test.csv\")","63d82b3e":"train = train.drop('Id', axis = 1)\ntest = test.drop('Id', axis = 1)","0652e201":"print(train.shape)\nprint(test.shape)","59ff8850":"train.head()","1657d7a3":"test.head()","88f8854b":"train[\"null_count\"] = train.isnull().sum(axis=1)\ncounts = train.groupby(\"null_count\")[\"null_count\"].count().to_dict()\npie, ax = plt.subplots(figsize=[5, 5])\ncolors = sns.color_palette(\"bwr_r\")[0:5]\nnull_data = {\"{} Null values\".format(k) : v for k, v in counts.items() if k < 6}\nplt.pie(x=null_data.values(), autopct=\"%.2f%%\", explode=[0.05]*len(null_data.keys()), \\\n        labels=null_data.keys(), pctdistance=0.5, colors=colors)\n_ = plt.title(\"Percentage of Null Values Per Row (Train Data)\", fontsize=12)\nplt.show()","4cf4dae9":"test[\"null_count\"] = test.isnull().sum(axis=1)\ncounts = test.groupby(\"null_count\")[\"null_count\"].count().to_dict()\npie, ax = plt.subplots(figsize=[5, 5])\ncolors = sns.color_palette(\"bwr_r\")[0:5]\nnull_data = {\"{} Null Value(s)\".format(k) : v for k, v in counts.items() if k < 6}\nplt.pie(x=null_data.values(), autopct=\"%.2f%%\", explode=[0.05]*len(null_data.keys()), \\\n        labels=null_data.keys(), pctdistance=0.5, colors=colors)\n_ = plt.title(\"Percentage of Null Values Per Row (Test Data)\", fontsize=12)\nplt.show()","3192a125":"fig, ax = plt.subplots()\nsns.countplot(x='Cover_Type', data=train, order=sorted(train['Cover_Type'].unique()), ax=ax)\nax.set_title(\"Distribution of the target variable\")\nplt.show()","fda83665":"train.describe().T.style.bar(subset=['mean'], color='orange')\\\n                            .background_gradient(subset=['std'], cmap='Blues')","261715ef":"test.describe().T.style.bar(subset=['mean'], color='orange')\\\n                            .background_gradient(subset=['std'], cmap='Blues')","2b6433ee":"(train.describe() - test.describe())[test.columns].T.iloc[:,1:].style\\\n        .bar(subset=['mean', 'std'], align='mid', color=['red', 'green'])","89ac8e17":"def zerodata(zero_data):\n  fig, ax = plt.subplots(1,1,figsize=(12, 20))\n  ax.barh(zero_data.index, 100, color='grey', height=0.6)\n  barh_label = ax.barh(zero_data.index, zero_data, color='lightblue', height=0.6)\n  ax.bar_label(barh_label, fmt='%.01f %%', color='black')\n  ax.spines[['left', 'bottom']].set_visible(False)\n  ax.set_xticks([])\n  ax.set_title('# of Zeros (by feature)', loc='center', fontweight='bold', fontsize=15)    \n  plt.show()","e6e299e4":"zero_data_train = ((train.iloc[:,:54]==0).sum() \/ len(train) * 100)[::-1]\nzerodata(zero_data_train)","7ca543ba":"fig, ax = plt.subplots(figsize=(12 , 12))\ncorr = train.corr()\nmask = np.zeros_like(corr, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\nsns.heatmap(corr,\n        square=True, center=0, linewidth=0.2,\n        cmap=sns.diverging_palette(250, 20, as_cmap=True),\n        mask=mask, ax=ax) \nax.set_title('Feature Correlation', loc='left', fontweight='bold')\nplt.show()","172298f4":"**Use describe to find more details about train and test data**","41f1af1f":"**Find how the target variable is distributed**","2caeb01f":"**Find whether if there are null values in train and test data**","66e34592":"**To find the correlation between the features**","b2e2959e":"**References :**\n\n1. [Pandas Docs](https:\/\/pandas.pydata.org\/docs\/)\n2. [Matplot Docs](https:\/\/matplotlib.org\/stable\/index.html)\n3. [TPS-May](https:\/\/www.kaggle.com\/subinium\/tps-may-categorical-eda)\n4. [TPS-Dec](https:\/\/https:\/\/www.kaggle.com\/craigmthomas\/tps-dec-2021-eda)","fb9abaef":"If you find this notebook useful, please do upvote the notebook.","eabf8c2d":"**Import the necessary libraries**","3420251b":"**Function to find the total percentage of zeros in the features**","cbab4764":"**Comparision between the test and train set using the describe**","479ed2c5":"**Loading and dropping unwanted columns in the data**","f31d5481":"**Introduction**\n\nThis notebook contains the EDA for the december 2021 tabular playground data. The libraries used are pandas, numpy, seaborn and matplot with version 3.4"}}