{"cell_type":{"7fa4e5ed":"code","ef361518":"code","08885309":"code","66ab4b4a":"code","cc838f37":"code","b4ed9ee7":"code","cb5d787c":"code","5e4cd1f7":"code","37f3cfb6":"code","86589284":"code","131e278e":"code","3f3042af":"code","d41a17db":"code","b58b32ce":"code","29288e31":"code","4cb9789e":"code","8095dcf1":"code","61e5dc2a":"code","f45cbd9e":"code","24470e61":"code","25b0f9a9":"code","571bd6c9":"code","9dfce5a8":"code","966ae13d":"code","616100f0":"code","5ac31ce5":"code","ad55ee88":"code","2bf5ec1c":"code","e772ed25":"code","a27a6507":"code","6b2f157f":"code","dd41a536":"code","e14bf9aa":"code","f07e7548":"code","29e97e78":"code","564b12ad":"code","be186266":"code","c7b97cb1":"code","f0ec7878":"code","21177151":"code","b1546e02":"code","3e1f6dc8":"code","d7ea43bf":"code","e8cd2b75":"markdown","4a00cbd8":"markdown","85ea983a":"markdown","b0458b62":"markdown","eefe92d6":"markdown","0321b1b0":"markdown","18ab7dc1":"markdown","fbe39c38":"markdown","a72bb777":"markdown","102db7e8":"markdown","6a757140":"markdown","9b7f9bcd":"markdown","be6f2c1b":"markdown","366b3303":"markdown","f7894c50":"markdown","3784862b":"markdown","1accacf0":"markdown","773198ae":"markdown","50107343":"markdown","580572dc":"markdown","a3eb5be2":"markdown","d6da730b":"markdown","130cf7e5":"markdown","bee47e54":"markdown","ac330fbe":"markdown","a9478b37":"markdown","3a604d14":"markdown","bf648fa5":"markdown","e9a341d3":"markdown","26e96837":"markdown","c4b1e6bb":"markdown","af7d57c8":"markdown","b0a433fc":"markdown"},"source":{"7fa4e5ed":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","ef361518":"from kaggle.competitions import twosigmanews\nenv = twosigmanews.make_env()\n","08885309":"(market_train_df, news_train_df) = env.get_training_data()","66ab4b4a":"market_train_df.dtypes","cc838f37":"market_train_df.tail()","b4ed9ee7":"market_train_df.isna().sum()","cb5d787c":"import matplotlib as plt\n((market_train_df.isnull().sum()\/market_train_df.shape[0])*100).sort_values(ascending=False).plot(kind='bar')","5e4cd1f7":"market_train_df.nunique()","37f3cfb6":"print(\"Min date: \",market_train_df['time'].min())\nprint(\"Max date: \",market_train_df['time'].max())","86589284":"market_train_df['time'].dt.time.describe()","131e278e":"market_train_df[['assetCode','assetName']].head()","3f3042af":"print(\"unique asset name\", market_train_df['assetName'].nunique())\nprint(\"unique asset code\", market_train_df['assetCode'].nunique())\nprint(\"Difference\", abs(market_train_df['assetName'].nunique()-market_train_df['assetCode'].nunique()))\n","d41a17db":"market_train_df[market_train_df['assetName']=='Unknown'].head()","b58b32ce":"unknown_assetname_codes=market_train_df[market_train_df['assetName']=='Unknown']['assetCode'].unique()\nunknown_assetname_codes","29288e31":"import numpy as np\nfor code in unknown_assetname_codes:\n   print(np.count_nonzero(market_train_df[market_train_df['assetCode']==code]['assetName']!='Unknown'))","4cb9789e":"market_train_df[market_train_df['assetCode']=='AAPL.O']","8095dcf1":"market_train_df[market_train_df['assetCode']=='A.N']","61e5dc2a":"def volume_trend(assetCode):\n    market_train_df[market_train_df['assetCode']==assetCode].sort_values(by='time',ascending=True)[['time','assetCode','volume']].groupby(['time','assetCode']).sum().plot(kind='line',figsize=(25,5))\n","f45cbd9e":"volume_trend('AAPL.O')","24470e61":"top_10_byvolume=market_train_df[(market_train_df['time'].dt.year==2016)&(market_train_df['time'].dt.day==30)&(market_train_df['time'].dt.month==12)].sort_values(by='volume',ascending=False)[['assetCode','volume']].head(10)","25b0f9a9":"import matplotlib.pyplot as plt\n\nmarket_train_df[market_train_df['assetCode'].isin(list(top_10_byvolume['assetCode']))].sort_values(by='time',ascending=True)[['time','assetCode','volume']].groupby(['time','assetCode']).sum().unstack().plot(figsize=(25,10))\n#plot(x='time', y='volume')\n#market_train_df[market_train_df['assetCode']==assetCode].sort_values(by='time',ascending=True)[['time','assetCode','volume']].groupby(['time','assetCode']).sum().plot(kind='line',figsize=(25,5))","571bd6c9":"#some of the stocks have data for few years\nmarket_train_df[market_train_df['assetCode']=='AMD.O']['time'].dt.year.unique()","9dfce5a8":"market_train_df[market_train_df['assetCode'].isin(list(top_10_byvolume['assetCode']))].sort_values(by='time',ascending=True)[['time','assetCode','volume']].groupby([market_train_df['time'].dt.month,market_train_df['time'].dt.year,'assetCode']).median().unstack().plot(figsize=(25,10),kind='line')","966ae13d":"market_train_df[market_train_df['assetCode']=='AAPL.O'].sort_values(by='time',ascending=True)[['time','assetCode','volume']].groupby([market_train_df['time'].dt.month,market_train_df['time'].dt.year,'assetCode']).median().unstack().plot(figsize=(25,10),kind='line')\n","616100f0":"market_train_df[market_train_df['assetCode']=='AAPL.O'].sort_values(by='time',ascending=True)[['time','assetCode','volume']].groupby([market_train_df['time'].dt.month,market_train_df['time'].dt.year,'assetCode']).median().unstack().plot(figsize=(25,10),kind='bar')\n","5ac31ce5":"market_train_df[market_train_df['assetCode']=='BAC.N'].sort_values(by='time',ascending=True)[['time','assetCode','volume']].groupby([market_train_df['time'].dt.month,market_train_df['time'].dt.year,'assetCode']).median().unstack().plot(figsize=(25,10),kind='line')\n","ad55ee88":"market_train_df[market_train_df['assetCode']=='BAC.N'].sort_values(by='time',ascending=True)[['time','assetCode','volume']].groupby([market_train_df['time'].dt.month,market_train_df['time'].dt.year,'assetCode']).median().unstack().plot(figsize=(25,10),kind='bar')\n","2bf5ec1c":"market_train_df[market_train_df['assetCode'].isin(list(top_10_byvolume['assetCode']))].sort_values(by='time',ascending=True)[['time','assetCode','volume']].groupby([market_train_df['time'].dt.year,'assetCode']).mean().unstack().plot(figsize=(25,10),kind='line')","e772ed25":"market_train_df['volume'].describe()","a27a6507":"market_train_df['close'].describe()","6b2f157f":"market_train_df[market_train_df['assetCode']=='BAC.N'].head()","dd41a536":"market_train_df[market_train_df['assetCode']=='BAC.N'].sort_values(by='time',ascending=True)[['time','close']].groupby('time').median().plot(figsize=(25,10),kind='line')","e14bf9aa":"market_train_df[market_train_df['assetCode']=='BAC.N'].sort_values(by='time',ascending=True)[['time','close']].groupby([market_train_df['time'].dt.month,market_train_df['time'].dt.year]).median().plot(figsize=(25,10),kind='line')","f07e7548":"import random\nnum_to_select = 5                          # set the number to select here.\nlist_of_random_assets = random.sample(list(set(market_train_df['assetCode'])), num_to_select)\nlist_of_random_assets ","29e97e78":"market_train_df[market_train_df['assetCode'].isin(list(list_of_random_assets))].sort_values(by='time',ascending=True)[['time','assetCode','close']].groupby(['time','assetCode']).median().unstack().plot(figsize=(25,10))\n","564b12ad":"list(set(market_train_df[market_train_df['assetCode']=='SGI.O']['time'].dt.year))","be186266":"market_train_df[market_train_df['assetCode'].isin(list(list_of_random_assets))].sort_values(by='time',ascending=True)[['time','assetCode','close']].groupby([market_train_df['time'].dt.month,market_train_df['time'].dt.year,'assetCode']).median().unstack().plot(figsize=(25,10))\n","c7b97cb1":"market_train_df[market_train_df['assetCode'].isin(list(list_of_random_assets))].sort_values(by='time',ascending=True)[['time','assetCode','close']].groupby([market_train_df['time'].dt.month,market_train_df['time'].dt.year,'assetCode']).median().unstack().plot(figsize=(25,10),kind='bar')\n","f0ec7878":"desc_assets=market_train_df[market_train_df['time'].dt.year==2016].groupby('assetCode').describe()","21177151":"desc_assets","b1546e02":"#list(top_10_byvolume['assetCode'])\ndesc_assets['close'].transpose()[list(top_10_byvolume['assetCode'])].boxplot(figsize=(25,10))\n","3e1f6dc8":"market_train_df[market_train_df['assetCode']=='BAC.N'][['time','assetCode','volume','close','open']].head()","d7ea43bf":"#market_train_df[market_train_df['assetCode']=='BAC.N'][['time','assetCode','volume','close','open']]","e8cd2b75":"This tells us that for some asset codes, we dont have asset name","4a00cbd8":"Check closing price trend of BAC.N","85ea983a":"lets see boxplot of closing prices of top 10 volumes for year 2016","b0458b62":"Lets now analyze and corelate both volume and closing price\n","eefe92d6":"Pattern can easily be detected\n","0321b1b0":"Lets now analyze closing prices","18ab7dc1":"As we see right over here, closing of one day is not same as next day opening. This is due to price discovery which I read about. (effected by speculation). Here news data can help us","fbe39c38":"Lets pick random assets and plot closing price","a72bb777":" assetCode with unknown assetName","102db7e8":"Lets check # of unique values","6a757140":"Perfect trend can be seen, timeseries analysis can easily be performed here","9b7f9bcd":"Pattern can easily be seen here, time series analysis can be performed here","be6f2c1b":"We can see that this company only traded in 2011. So there are companies which traded for few years may be due to acquisition, bankruptcy etc ","366b3303":"this is random plot every time you make.\nFrom this random plot I see that there are some companies who only traded for few years. May be it was then acquired by some other company. Here I see one of the company SGI.O which I see was acquired by some other company.\n\nStocks of some of the company went up while stocks of some of the company went down may be due to bankruptcy. \n\nSome are stable.\n\nLets see assetCode='SGI.O''\n\nYou may see other asset codes","f7894c50":"Lets check closing price trend month, year basis","3784862b":"Lets check Apple Volumes ","1accacf0":"Lets check volumes yearly","773198ae":"* Time ==> DateTime\n* AssetCode ==> Object\n* AssetName ==> Category\n* Rest all our float","50107343":"Picking one of the assets","580572dc":"Lets check asset code and associated asset name","a3eb5be2":"**Null found , we see that returnsOpenPrevMktres10 and returnsClosePrevMktres10 have most nulls","d6da730b":"We also have apple inc on top 10 , lets check that","130cf7e5":"#Lets check the count of each month,year","bee47e54":"Lets group it monthly and then check","ac330fbe":"Perfect trend can be seen here, this means we can model using time and closing price","a9478b37":"Describe each asset for particular year","3a604d14":"Lets see top volumes on latest date, top 10","bf648fa5":"Check some of the stocks","e9a341d3":"> Check error in data for assetcodes with unknown assetname, 0 ==> no error","26e96837":"time==>shows that market is closed on saturdays and sundays, also on official holidays","c4b1e6bb":"Bank of America is at top but recently during last 4 to 5 years, volume has decreased","af7d57c8":"Apple Volumes have increased in recent years","b0a433fc":"From the above analysis, we can see that assetcodes are more than asset names which means some of the assets codes might have null in them."}}