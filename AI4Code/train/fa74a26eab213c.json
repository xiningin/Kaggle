{"cell_type":{"0250c98d":"code","19ac06f4":"code","fb681bd0":"code","7f9c8921":"code","66b28b0c":"code","321b808f":"code","c45bf491":"code","f669d4e3":"code","879cd598":"code","115887d9":"code","085263b6":"code","f5983d8d":"code","cb0b69ad":"code","990d7417":"code","01391533":"code","4d8c5cd2":"code","a8492807":"code","82a0d1d2":"code","da2f037d":"code","b11ca700":"code","ecfed760":"code","39773524":"code","2d7379ee":"code","3e1f3920":"code","96e94d11":"code","e802f02b":"code","f6510bc8":"code","779250ba":"code","81cfff2f":"code","4f7e4df1":"code","8104bc6d":"markdown","bd361871":"markdown","4e8a9525":"markdown","add89e06":"markdown","6f95b1a7":"markdown","f9c0b0dd":"markdown","b929bfcc":"markdown","9845280c":"markdown","f0e48be2":"markdown","f891dc2b":"markdown","5562effe":"markdown","0631acda":"markdown","4529e62a":"markdown","1f4ccd76":"markdown","1f08aef2":"markdown","d7eb03e2":"markdown","58f7494f":"markdown","f2707042":"markdown","7a975e8c":"markdown","0d3b7bf5":"markdown","18574818":"markdown","adbd2a73":"markdown","6496cd6b":"markdown","5b6bc36b":"markdown","197496d0":"markdown","8ab0b106":"markdown","6d7d9401":"markdown","7596039a":"markdown","535af585":"markdown","78e6e2ee":"markdown","bf287beb":"markdown","59ead3b3":"markdown","d2e907d7":"markdown","14d90c90":"markdown","655bc2ba":"markdown","05adffbf":"markdown","0f73e6ca":"markdown","ca75335e":"markdown","d9ac6aa5":"markdown","f7ff4d13":"markdown","26f1a63e":"markdown","37197d71":"markdown","2d4dc5c1":"markdown","91ec7217":"markdown","a642a6c3":"markdown","00cafe85":"markdown","48994044":"markdown","79a2e2a6":"markdown","cea69f57":"markdown","ed042961":"markdown","33273173":"markdown","dc0f94bb":"markdown","6472a144":"markdown","864de4b3":"markdown"},"source":{"0250c98d":"import matplotlib.pyplot as plt\nimport pandas as pd\nfrom sklearn.metrics import classification_report\nfrom sklearn.preprocessing import OrdinalEncoder\nimport seaborn as sns\nimport plotly.graph_objects as go\nfrom xgboost import XGBClassifier\n\nfrom sklearn import svm\nimport plotly.figure_factory as ff\nimport warnings\nfrom sklearn.ensemble import RandomForestRegressor, RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\nimport numpy as np\nimport plotly.express as px\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import classification_report, confusion_matrix, accuracy_score\nwarnings.filterwarnings('ignore')\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","19ac06f4":"data = pd.read_csv(\"..\/input\/mushroom-classification\/mushrooms.csv\")\ndata.head()","fb681bd0":"labels = ['Edible', 'Poisonous']\nvalues = [data.describe()['class']['freq'], data.describe()['class']['count']-data.describe()['class']['freq']]\ncolors = ['green', 'red']\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, opacity=0.8)])\nfig.update_traces(textinfo='percent+label', marker=dict(line=dict(color='#000000', width=2), colors=colors))\nfig.update_layout(title_text='Distribution of the Mushrooms by their Classes', title_x=0.5, title_font=dict(size=28))\nfig.show()","7f9c8921":"plt.figure(figsize=(15, 8))\nsplot = sns.countplot(data=data, x='cap-shape',\n                      hue='class',\n                      order=data['cap-shape'].value_counts().index,\n                      palette=['red', 'forestgreen'],\n                      edgecolor=(0, 0, 0),\n                      linewidth=2)\n                      \nsplot.set_xticklabels(['Convex', 'Flat', 'Knobbed', 'Bell', 'Sunken', 'Conical'])\n\nfor p in splot.patches:\n    splot.annotate(format(p.get_height(), '.1f'),\n                   (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                   ha='center', va='center',\n                   xytext=(0, 9),\n                   textcoords='offset points')\n                   \nplt.legend(['Poisonous', 'Edible'], loc='upper right')\nplt.ylabel('Number of the Mushrooms', fontsize=14)\nplt.xlabel('Types of the Cap Shapes of the Mushrooms', fontsize=14)\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nplt.title('Distribution of the Mushrooms by their Classes and Cap Shapes', fontsize=20)","66b28b0c":"plt.figure(figsize=(15, 8))\nsplot = sns.countplot(data=data, x='cap-surface',\n                      hue='class',\n                      order=data['cap-surface'].value_counts().index,\n                      palette=['red', 'forestgreen'],\n                      edgecolor=(0, 0, 0),\n                      linewidth=2)\n                      \nsplot.set_xticklabels(['Scaly', 'Smooth', 'Fibrous', 'Grooves'])\n\nfor p in splot.patches:\n    splot.annotate(format(p.get_height(), '.1f'),\n                   (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                   ha='center', va='center',\n                   xytext=(0, 9),\n                   textcoords='offset points')\n                   \nplt.legend(['Poisonous', 'Edible'], loc='upper right')\nplt.ylabel('Number of the Mushrooms', fontsize=14)\nplt.xlabel('Types of the Cap Surfaces of the Mushrooms', fontsize=14)\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nplt.title('Distribution of the Mushrooms by their Classes and Cap Surfaces', fontsize=20)","321b808f":"plt.figure(figsize=(15, 8))\nsplot = sns.countplot(data=data, x='cap-color',\n                      hue='class',\n                      order=data['cap-color'].value_counts().index,\n                      palette=['red', 'forestgreen'],\n                      edgecolor=(0, 0, 0),\n                      linewidth=2)\n                      \nsplot.set_xticklabels(['Brown', 'Gray', 'Red', 'Yellow', 'White', 'Buff', 'Pink', 'Cinnamon', 'Purple', 'Green'])\n\nfor p in splot.patches:\n    splot.annotate(format(p.get_height(), '.1f'),\n                   (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                   ha='center', va='center',\n                   xytext=(0, 9),\n                   textcoords='offset points')\n                   \nplt.legend(['Poisonous', 'Edible'], loc='upper right')\nplt.ylabel('Number of the Mushrooms', fontsize=14)\nplt.xlabel('The Cap Colors of the Mushrooms', fontsize=14)\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nplt.title('Distribution of the Mushrooms by their Classes and Cap Colors', fontsize=20)","c45bf491":"plt.figure(figsize=(15, 8))\nsplot = sns.countplot(data=data, x='bruises',\n                      hue='class',\n                      order=data['bruises'].value_counts().index,\n                      palette=['red', 'forestgreen'],\n                      edgecolor=(0, 0, 0),\n                      linewidth=2)\n                      \nsplot.set_xticklabels(['Mushrooms without Bruises', 'Mushrooms with Bruises'])\n\nfor p in splot.patches:\n    splot.annotate(format(p.get_height(), '.1f'),\n                   (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                   ha='center', va='center',\n                   xytext=(0, 9),\n                   textcoords='offset points')\n                   \nplt.legend(['Poisonous', 'Edible'], loc='upper right')\nplt.ylabel('Number of the Mushrooms', fontsize=14)\nplt.xlabel('Mushrooms by having Bruises', fontsize=14)\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nplt.title('Distribution of the Mushrooms by Classes and Bruises', fontsize=20)","f669d4e3":"plt.figure(figsize=(15, 8))\nsplot = sns.countplot(data=data, x='odor',\n                      hue='class',\n                      order=data['odor'].value_counts().index,\n                      palette=['red', 'forestgreen'],\n                      edgecolor=(0, 0, 0),\n                      linewidth=2)\n                      \nsplot.set_xticklabels(['No Odor', 'Foul', 'Fishy', 'Spicy', 'Anise', 'Almond', 'Pungent',\n                       'Creosote', 'Musty'])\n\nfor p in splot.patches:\n    splot.annotate(format(p.get_height(), '.1f'),\n                   (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                   ha='center', va='center',\n                   xytext=(0, 9),\n                   textcoords='offset points')\n                   \nplt.legend(['Poisonous', 'Edible'], loc='upper right')\nplt.ylabel('Number of the Mushrooms', fontsize=14)\nplt.xlabel('Odor of the Mushrooms', fontsize=14)\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nplt.title('Distribution of the Mushrooms by Classes and Odor', fontsize=20)","879cd598":"plt.figure(figsize=(15, 8))\nsplot = sns.countplot(data=data, x='gill-attachment',\n                      hue='class',\n                      order=data['gill-attachment'].value_counts().index,\n                      palette=['red', 'forestgreen'],\n                      edgecolor=(0, 0, 0),\n                      linewidth=2)\n                      \nsplot.set_xticklabels(['Free', 'Attached'])\n\nfor p in splot.patches:\n    splot.annotate(format(p.get_height(), '.1f'),\n                   (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                   ha='center', va='center',\n                   xytext=(0, 9),\n                   textcoords='offset points')\nplt.legend(['Poisonous', 'Edible'], loc='upper right')\nplt.ylabel('Number of the Mushrooms', fontsize=14)\nplt.xlabel('Types of the Gill Attachments', fontsize=14)\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nplt.title('Distribution of the Mushrooms by their Classes vs Gill Attachments', fontsize=20)","115887d9":"plt.figure(figsize=(15, 8))\nsplot = sns.countplot(data=data, x='gill-spacing',\n                      hue='class',\n                      order=data['gill-spacing'].value_counts().index,\n                      palette=['red', 'forestgreen'],\n                      edgecolor=(0, 0, 0),\n                      linewidth=2)\n                      \nsplot.set_xticklabels(['Close', 'Crowded'])\n\nfor p in splot.patches:\n    splot.annotate(format(p.get_height(), '.1f'),\n                   (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                   ha='center', va='center',\n                   xytext=(0, 9),\n                   textcoords='offset points')\nplt.legend(['Poisonous', 'Edible'], loc='upper right')\nplt.ylabel('Number of the Mushrooms', fontsize=14)\nplt.xlabel('Types of the Gill Spacing', fontsize=14)\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nplt.title('Distribution of the Mushrooms by their Classes vs Gill Spacing', fontsize=20)","085263b6":"plt.figure(figsize=(15, 8))\nsplot = sns.countplot(data=data, x='gill-color',\n                      hue='class',\n                      order=data['gill-color'].value_counts().index,\n                      palette=['red', 'forestgreen'],\n                      edgecolor=(0, 0, 0),\n                      linewidth=2)\n                      \nsplot.set_xticklabels(['Buff', 'Pink', 'White', 'Brown', 'Gray', 'Chocolate', 'Purple', 'Black', 'Red',\n                       'Yellow', 'Orange', 'Green'])\n\nfor p in splot.patches:\n    splot.annotate(format(p.get_height(), '.1f'),\n                   (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                   ha='center', va='center',\n                   xytext=(0, 9),\n                   textcoords='offset points')\nplt.legend(['Poisonous', 'Edible'], loc='upper right')\nplt.ylabel('Number of the Mushrooms', fontsize=14)\nplt.xlabel('The Gill Colors of the Mushrooms', fontsize=14)\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nplt.title('Distribution of the Mushrooms by their Classes vs Gill Colors', fontsize=20)","f5983d8d":"plt.figure(figsize=(15, 8))\nsplot = sns.countplot(data=data, x='stalk-shape',\n                      hue='class',\n                      order=data['stalk-shape'].value_counts().index,\n                      palette=['red', 'forestgreen'],\n                      edgecolor=(0, 0, 0),\n                      linewidth=2)\n                      \nsplot.set_xticklabels(['Tapering', 'Enlarging'])\n\nfor p in splot.patches:\n    splot.annotate(format(p.get_height(), '.1f'),\n                   (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                   ha='center', va='center',\n                   xytext=(0, 9),\n                   textcoords='offset points')\n\nplt.legend(['Poisonous', 'Edible'], loc='upper right')\nplt.ylabel('Number of the Mushrooms', fontsize=14)\nplt.xlabel('Types of the Stalk Shapes', fontsize=14)\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nplt.title('Distribution of the Mushrooms by their Classes vs Stalk Shapes', fontsize=20)","cb0b69ad":"# The stalk-root feature has missing values. I filled the missing values with the most frequent object which is 'b'.\ndata = data.replace(['?'], 'b')\n\nplt.figure(figsize=(15, 8))\nsplot = sns.countplot(data=data, x='stalk-root',\n                      hue='class',\n                      order=data['stalk-root'].value_counts().index,\n                      palette=['red', 'forestgreen'],\n                      edgecolor=(0, 0, 0),\n                      linewidth=2\n                      )\n\nsplot.set_xticklabels(['Bulbous', 'Equal', 'Club', 'Rooted'])\n\nfor p in splot.patches:\n    splot.annotate(format(p.get_height(), '.1f'),\n                   (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                   ha='center', va='center',\n                   xytext=(0, 9),\n                   textcoords='offset points')\nplt.legend(['Poisonous', 'Edible'], loc='upper right')\nplt.ylabel('Number of the Mushrooms', fontsize=14)\nplt.xlabel('Types of the Stalk Roots', fontsize=14)\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nplt.title('Distribution of the Mushrooms by their Classes vs Stalk Root', fontsize=20)","990d7417":"plt.figure(figsize=(15, 8))\nsplot = sns.countplot(data=data, x='stalk-surface-above-ring',\n                      hue='class',\n                      order=data['stalk-surface-above-ring'].value_counts().index,\n                      palette=['red', 'forestgreen'],\n                      edgecolor=(0, 0, 0),\n                      linewidth=2)\n                      \nsplot.set_xticklabels(['Smooth', 'Silky', 'Fibrous', 'Scaly'])\n\nfor p in splot.patches:\n    splot.annotate(format(p.get_height(), '.1f'),\n                   (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                   ha='center', va='center',\n                   xytext=(0, 9),\n                   textcoords='offset points')\n                   \nplt.legend(['Poisonous', 'Edible'], loc='upper right')\nplt.ylabel('Number of the Mushrooms', fontsize=14)\nplt.xlabel('Types of the Stalk Surfaces Above Rings', fontsize=14)\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nplt.title('Distribution of the Mushrooms by their Classes vs Stalk Surfaces Above Ring', fontsize=20)\n","01391533":"plt.figure(figsize=(15, 8))\nsplot = sns.countplot(data=data, x='stalk-surface-below-ring',\n                      hue='class',\n                      order=data['stalk-surface-below-ring'].value_counts().index,\n                      palette=['red', 'forestgreen'],\n                      edgecolor=(0, 0, 0),\n                      linewidth=2)\n\nsplot.set_xticklabels(['Smooth', 'Silky', 'Fibrous', 'Scaly'])\n\nfor p in splot.patches:\n    splot.annotate(format(p.get_height(), '.1f'),\n                   (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                   ha='center', va='center',\n                   xytext=(0, 9),\n                   textcoords='offset points')\nplt.legend(['Poisonous', 'Edible'], loc='upper right')\nplt.ylabel('Number of the Mushrooms', fontsize=14)\nplt.xlabel('Types of the Stalk Surfaces Below Rings', fontsize=14)\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nplt.title('Distribution of the Mushrooms by their Classes vs Stalk Surfaces Below Ring', fontsize=20)\n","4d8c5cd2":"plt.figure(figsize=(15, 8))\nsplot = sns.countplot(data=data, x='veil-type',\n                      hue='class',\n                      order=data['veil-type'].value_counts().index,\n                      palette=['red', 'forestgreen'],\n                      edgecolor=(0, 0, 0),\n                      linewidth=2)\n\nsplot.set_xticklabels(['Partial'])\n\nfor p in splot.patches:\n    splot.annotate(format(p.get_height(), '.1f'),\n                   (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                   ha='center', va='center',\n                   xytext=(0, 9),\n                   textcoords='offset points')\nplt.legend(['Poisonous', 'Edible'], loc='upper right')\nplt.ylabel('Number of the Mushrooms', fontsize=14)\nplt.xlabel('Types of the Veils', fontsize=14)\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nplt.title('Distribution of the Mushrooms by their Classes vs Veil Types', fontsize=20)","a8492807":"plt.figure(figsize=(15, 8))\nsplot = sns.countplot(data=data, x='veil-color',\n                      hue='class',\n                      order=data['veil-color'].value_counts().index,\n                      palette=['red', 'forestgreen'],\n                      edgecolor=(0, 0, 0),\n                      linewidth=2)\n\nsplot.set_xticklabels(['White', 'Brown', 'Orange', 'Yellow'])\n\nfor p in splot.patches:\n    splot.annotate(format(p.get_height(), '.1f'),\n                   (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                   ha='center', va='center',\n                   xytext=(0, 9),\n                   textcoords='offset points')\nplt.legend(['Poisonous', 'Edible'], loc='upper right')\nplt.ylabel('Number of the Mushrooms', fontsize=14)\nplt.xlabel('Veil Colors', fontsize=14)\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nplt.title('Distribution of the Mushrooms by their Classes vs Veil Colors', fontsize=20)","82a0d1d2":"x = ['None', 'One', 'Two']\ny = ['Poisonous', 'Edible']\nz = [[data[data['class'] == 'p']['ring-number'].value_counts()[2],\n      data[data['class'] == 'p']['ring-number'].value_counts()[0],\n      data[data['class'] == 'p']['ring-number'].value_counts()[1]],\n     [0, data[data['class'] == 'e']['ring-number'].value_counts()[0],\n      data[data['class'] == 'e']['ring-number'].value_counts()[1]]\n     ]\n\nfig = ff.create_annotated_heatmap(z, x=x, y=y, colorscale='magma')\nfig.update_layout(title_text='Heatmap of the Mushrooms by their Classes vs Number of the Rings',\n                  title_x=0.5, title_font=dict(size=22))\nfig.update_layout(xaxis=dict(\n    tickfont=dict(size=15),\n),\n    yaxis=dict(tickfont=dict(size=15)))\nfig.show()","da2f037d":"plt.figure(figsize=(15, 8))\nsplot = sns.countplot(data=data, x='ring-type',\n                      hue='class',\n                      order=data['ring-type'].value_counts().index,\n                      palette=['red', 'forestgreen'],\n                      edgecolor=(0, 0, 0),\n                      linewidth=2)\n\nsplot.set_xticklabels(['Pendant', 'Evanescent', 'Large', 'Flaring', 'None'])\n\nfor p in splot.patches:\n    splot.annotate(format(p.get_height(), '.1f'),\n                   (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                   ha='center', va='center',\n                   xytext=(0, 9),\n                   textcoords='offset points')\nplt.legend(['Poisonous', 'Edible'], loc='upper right')\nplt.ylabel('Number of the Mushrooms', fontsize=14)\nplt.xlabel('Ring Types', fontsize=14)\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nplt.title('Distribution of the Mushrooms by their Classes vs Ring Types', fontsize=20)","b11ca700":"plt.figure(figsize=(15, 8))\nsplot = sns.countplot(data=data, x='spore-print-color',\n                      hue='class',\n                      order=data['spore-print-color'].value_counts().index,\n                      palette=['red', 'forestgreen'],\n                      edgecolor=(0, 0, 0),\n                      linewidth=2)\n\nsplot.set_xticklabels(['White', 'Brown', 'Black', 'Chocolate', 'Green', 'Orange', 'Yellow', 'Buff', 'Purple'])\n\nfor p in splot.patches:\n    splot.annotate(format(p.get_height(), '.1f'),\n                   (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                   ha='center', va='center',\n                   xytext=(0, 9),\n                   textcoords='offset points')\nplt.legend(['Poisonous', 'Edible'], loc='upper right')\nplt.ylabel('Number of the Mushrooms', fontsize=14)\nplt.xlabel('Spore Print Colors', fontsize=14)\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nplt.title('Distribution of the Mushrooms by their Classes vs Spore Print Color', fontsize=20)\n","ecfed760":"plt.figure(figsize=(15, 8))\nsplot = sns.countplot(data=data, x='population',\n                      hue='class',\n                      order=data['population'].value_counts().index,\n                      palette=['red', 'forestgreen'],\n                      edgecolor=(0, 0, 0),\n                      linewidth=2)\n\nsplot.set_xticklabels(['Several', 'Solitary', 'Scattered', 'Numerous', 'Abundant', 'Clustered'])\n\nfor p in splot.patches:\n    splot.annotate(format(p.get_height(), '.1f'),\n                   (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                   ha='center', va='center',\n                   xytext=(0, 9),\n                   textcoords='offset points')\nplt.legend(['Poisonous', 'Edible'], loc='upper right')\nplt.ylabel('Number of the Mushrooms', fontsize=14)\nplt.xlabel('Populations', fontsize=14)\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nplt.title('Distribution of the Mushrooms by their Classes vs Populations', fontsize=20)","39773524":"plt.figure(figsize=(15, 8))\nsplot = sns.countplot(data=data, x='habitat',\n                      hue='class',\n                      order=data['habitat'].value_counts().index,\n                      palette=['red', 'forestgreen'],\n                      edgecolor=(0, 0, 0),\n                      linewidth=2)\n\nsplot.set_xticklabels(['Woods', 'Grasses', 'Paths', 'Leaves', 'Urban', 'Meadows', 'Waste'])\n\nfor p in splot.patches:\n    splot.annotate(format(p.get_height(), '.1f'),\n                   (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                   ha='center', va='center',\n                   xytext=(0, 9),\n                   textcoords='offset points')\nplt.legend(['Poisonous', 'Edible'], loc='upper right')\nplt.ylabel('Number of the Mushrooms', fontsize=14)\nplt.xlabel('Habitats', fontsize=14)\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nplt.title('Distribution of the Mushrooms by their Classes vs Habitats', fontsize=20)","2d7379ee":"count_NaN = data.isna().sum()\ncount_NaN\n\n# There no missing data points, actually there were some data points for the \"stalk-type\" feature. But I filled the missing values with the most frequent one which is 'b'","3e1f3920":"# Encoding the string-type data points\n\ndata2 = pd.get_dummies(data)\n\ny = data2[['class_e', 'class_p']]   # The label for the machine learning models\nX = data2.drop(['class_e', 'class_p'], axis=1)   #Features\n\nX","96e94d11":"trainX, testX, trainY, testY = train_test_split(X, y, test_size=0.2, shuffle=True, random_state=13)\ntrainX.head()","e802f02b":"# trainY set which is labels\ntrainY.head()","f6510bc8":"rf = RandomForestClassifier(oob_score=True)\nrf.fit(trainX, trainY)\n\ntrain_scoreRF = rf.score(trainX, trainY)\noob_score = rf.oob_score_\nAdjusted_R2_trainRF = 1 - (1 - rf.score(trainX, trainY)) * (len(trainY) - 1) \/ (len(trainY) - trainX.shape[1] - 1)\nAdjusted_R2_testRF = 1 - (1 - rf.score(testX, testY)) * (len(testY) - 1) \/ (len(testY) - testX.shape[1] - 1)\n\nprint('Train Adjusted R2: %', Adjusted_R2_trainRF * 100)\nprint('Test Adjusted R2: %', Adjusted_R2_testRF * 100)\nprint('OOB Score: %', oob_score * 100)","779250ba":"predictions_rf = pd.DataFrame(rf.predict(testX))\nplt.figure(figsize=(12, 8))\nconf_mat = confusion_matrix(y_true=testY['class_e'], y_pred=predictions_rf[0])\nsns.heatmap(conf_mat, annot=True, fmt='g')\nplt.title('Confusion Matrix of the Test Data (Edible Class Based)', fontsize=14)\nplt.ylabel('Real Class', fontsize=12)\nplt.xlabel('Predicted Class', fontsize=12)\nplt.show()","81cfff2f":"clf = svm.SVC(kernel='linear', probability=True)\nclf.fit(trainX, trainY['class_e'])\n\npredictions_svm = clf.predict(testX)\n\nacc_svm = accuracy_score(testY['class_e'], predictions_svm)\nprint('Accuracy of SVM Model: %', 100 * acc_svm)","4f7e4df1":"model = XGBClassifier(learning_rate=0.005, max_depth=10, n_estimators=30,\n                      colsample_bytree=0.3, min_child_weight=0.5, reg_alpha=0.3,\n                      )\nmodel.fit(trainX, trainY['class_e'])\n\npredictions_XGBC = model.predict(testX)\nacc_XGBC = accuracy_score(predictions_XGBC, testY['class_e'])\nprint('----------------------------------------------------')\nprint('Accuracy of XGBClassifier: %', 100 * acc_XGBC)","8104bc6d":"# Data Pre-Process\n\n**In this step, I will check for the missing data points and then, encode the string data types. According to dataset exploration, all columns have string-type data.**","bd361871":"# Confusion Matrix of the Random Forest (Edible Class based)","4e8a9525":"**The Figure above represents the Distribution of the Mushrooms by their Classes and Populations. The x-axis represents the Populations and, the y-axis represents that the Number of Mushrooms. According to the graph above, the mushrooms populated as Several types are highly poisonous. In contrast, the mushrooms with Numerous, Abundant, and Clustered populations are pretty edible.**","add89e06":"**As seen from the results, the XGBClassifier also performed %100 accuracies. The XGBClassifier is tuned before the publish of this notebook.**","6f95b1a7":"# Veil Types\n![veil types.png](attachment:863bb505-0cc9-42f0-815c-3dedb274a32e.png)","f9c0b0dd":"**The Figure above represents the Distribution of the Mushrooms by their Classes and Odors. The x-axis represents that the Odor of the Mushrooms and, the y-axis represents that the Number of Mushrooms. According to the graph above, mushrooms with no odor are highly safe for humans. But the mushrooms with the Foul, Fishy, and Spicy odor are high frequently poisonous. The mushrooms with the Anise and Almond odor have no poisonous class.**","b929bfcc":"# Importing the Libraries","9845280c":"# Habitats","f0e48be2":"**The Figure above represents the Distribution of the Mushrooms by their Classes and Bruises. The x-axis represents that mushrooms by having Bruises and, the y-axis represents that the Number of Mushrooms. As you can see from the graph above, Mushrooms without Bruises are high frequently poisonous. In contrast, the Mushrooms with the Bruises are highly edible.**","f891dc2b":"# Train-Test Split","5562effe":"**The Figure above represents the Distribution of the Mushrooms by their Habitats and Populations. The x-axis represents the Habitats and, the y-axis represents that the Number of Mushrooms.**","0631acda":"**The Figure above represents the Distribution of the Mushrooms by their Classes and Veil Types. The x-axis represents the Veil Types and, the y-axis represents that the Number of Mushrooms. In this dataset, we have only Partial type Veils. As you can see, most of them are edible but the number of the poisonous class mushrooms are pretty close to the edible class of mushrooms.**","4529e62a":"**The Figure above represents the Distribution of the Mushrooms by their Classes and Spore Pring Colors. The x-axis represents the Spore Pring Colors and, the y-axis represents that the Number of Mushrooms. As seen from the figure, the White and Chocolate spore print colored mushrooms are high frequently poisonous. In contrast, the mushrooms with the Brown and Black spore print colors are high frequently edible.**","1f4ccd76":"# Odor","1f08aef2":"**The Figure above represents the Distribution of the Mushrooms by their Classes and Cap Shapes. The x-axis represents that the Types of the Cap Shapes of the Mushrooms and the y-axis represents that the Number of the Mushrooms. According to this graph, the Convex Cap Shape is the most frequent. The Edible and Poisonous class mushrooms are pretty close to each other for the Convex and the Flat type. In contrast, for the following types which are Kobbed and Bell, the class types are pretty imbalanced distributed. The Sunken and the Conical types are completely edible.**","d7eb03e2":"# Populations","58f7494f":"# Gill Color","f2707042":"**The Figure above represents the Distribution of the Mushrooms by their Classes and Types of Stalk Surfaces Below the Ring. The x-axis represents the Types of Stalk Surfaces Below the Ring and, the y-axis represents that the Number of Mushrooms.**","7a975e8c":"# Stalk Shape\n\n![stalk shape.JPG](attachment:b23b6d8b-d084-47fd-9c6a-badcd18b292b.JPG)","0d3b7bf5":"# Cap Shapes\n![cap shape.jpg](attachment:1e2e8073-6a69-4a73-9205-87de330356f1.jpg)","18574818":"**The Figure above represents the Distribution of the Mushrooms by their Classes and Types of the Stalk Shapes. The x-axis represents that the Types of the Types of the Stalk Shapes and, the y-axis represents that the Number of Mushrooms.**","adbd2a73":"**The Figure above represents the Distribution of the Mushrooms by their Classes and Cap Colors. The x-axis represents that The Cap Colors of the Mushrooms and the y-axis represents that the Number of the Mushrooms. According to this graph, the Edible and Poisonous class mushrooms are pretty close to each other for Brown, Gray, and Red cap colors. The White cap-colored mushrooms are highly edible. Purple and Green cape-colored mushrooms have no poisonous class.**","6496cd6b":"**The Figure above represents the Distribution of the Mushrooms by their Classes and Veil Colors. The x-axis represents the Veil Colors and, the y-axis represents that the Number of Mushrooms. According to our dataset, most of the mushrooms have White colors. The class distribution of the White-colored Veils is approximately equal. The Brown, Orange, and Yellow Veil-colored mushrooms have no poisonous class.**","5b6bc36b":"# Conclusions\n\n**In this notebook, I used simple EDA methods for exploring the features of the mushrooms. While doing that, I learned pretty many things about mushrooms (it was fun).**\n\n**For the next step, I trained 3 different machine learning models which are Random Forest Classifier, SVM, and finally, XGBClassifier.**\n\n**Due to the results of these machine learning models, I obtained %100 accuracy for each machine learning model. As far as I search about the Discussion Forum of this dataset, it is pretty common for everyone. And as far as analyzed the errors of the models, every 3 models do not perform overfitting.**\n\n**Thank you if you followed me this far!**\n\n**I am open to your feedback and suggestions, feel free to contact me!**\n","197496d0":"# Stalk Surface Above and Below Ring","8ab0b106":"# Veil Colors","6d7d9401":"# SVM\n\n**For this step, I will train a SVM model for the observing the resuls.**","7596039a":"**As seen from above, our dataset has 23 columns. Each column has a different feature of the mushrooms which are the column names of the dataset.**","535af585":"# Cap Colors","78e6e2ee":"**The Figure above represents the Distribution of the Mushrooms by their Classes and Gill Spacing. The x-axis represents that the Types of the Gill Spacing and, the y-axis represents that the Number of Mushrooms. According to this figure, the Crowded type gill spacing is high frequently edible. In contrast, we cannot say the same thing for the Close-type gill spacing mushrooms. Their class distribution by gill spacing is pretty close to each other.**","bf287beb":"**For the performance measurement of the model, I used the Adjusted R2 score. According to Train, Tests, and OOB score, the model has %100 accuracies. As far as I check the Discussion Forum of the dataset, it is pretty common for everyone. And the model train and test errors have the same percentage. It looks the model did not overfit.**","59ead3b3":"**The Figure above represents the Distribution of the Mushrooms by their Classes and Cap Surfaces. The x-axis represents that the Types of the Cap Surfaces of the Mushrooms and the y-axis represents that the Number of the Mushrooms. As seen from the figure, the Scaly and Smooth types are high probability poisonous. In contrast, the Fibrous type is mostly edible.**","d2e907d7":"**As seen from the output, the SVM Model also performed as well as the Random Forest Classifier.**","14d90c90":"**The Figure above represents the Distribution of the Mushrooms by their Classes and Gill Attachments. The x-axis represents that the Types of the Gill Attachments and, the y-axis represents that the Number of Mushrooms. The dataset has high frequently Free type gill attachments. According to this graph, the Free type gill attachments are approximately equally distributed. In contrast, the Attached type gill attachments are most frequently edible.**","655bc2ba":"# Exploratory Data Analysis\n\n**In the EDA step, I will visualize each feature by its class distribution. The \"class\" refers that the information of this mushroom is edible or poisonous.**","05adffbf":"# Mushroom Class","0f73e6ca":"**The Figure above represents the Distribution of the Mushrooms by their Classes and Ring Types. The x-axis represents the Ring Types and, the y-axis represents that the Number of Mushrooms. As seen from the graph, the mushrooms with the Pendant type are high frequently edible. In contrast, the mushrooms with the Large type have only the poisonous class.**","ca75335e":"**According to performance measurement of the model -model performed %100 accuracy-, I was expeding the see a \"perfect\" confusion matrix for the test dataset.**","d9ac6aa5":"# Reading the Dataset","f7ff4d13":"**The Figure above represents the Distribution of the Mushrooms by their Classes and Types of Stalk Roots. The x-axis represents the Types of Stalk Roots and, the y-axis represents that the Number of Mushrooms. As seen from the figure, most data points are Bulbous-type stalk root. The Equal, Club, and Rooted type stalk roots are highly edible but the Bulbous type stalk root is highly poisonous.**","26f1a63e":"# XGBClassifier\n\n**For this step, I will train a XGBC model for the observing the resuls.**","37197d71":"**As seen from the figure above, the red part represents that the percentage of the poisonous mushrooms in the dataset. The green part represents that the percentage of edible mushrooms. The percentages of these classes are pretty close to each other. From now on, I will represent the red color for the poisonous class and green for the edible class of the mushrooms.**","2d4dc5c1":"# Gill Spacing\n![gill spacing.JPG](attachment:a8ee5e4c-035c-4e77-9683-f7b50041753b.JPG)","91ec7217":"**The Figure above represents the Distribution of the Mushrooms by their Classes and Gill Colors. The x-axis represents that the Types of the Gill Colors and, the y-axis represents that the Number of Mushrooms. As seen from the figure above, the Buff-colored gills are highly poisonous. In contrast, the White, Brown, Purple, Black, and Red gill colors are high frequently edible.**","a642a6c3":"# Number of the Rings","00cafe85":"# Bruises","48994044":"# Random Forest Classifier\n\n**In this step, I will train a Random Forest Classifier model and check the results.**","79a2e2a6":"**The Figure above represents the Distribution of the Mushrooms by their Classes and Types of Stalk Surfaces Above the Ring. The x-axis represents the Types of Stalk Surfaces Above the Ring and, the y-axis represents that the Number of Mushrooms.**","cea69f57":"# Aim of the Notebook\n\n**Welcome everyone!**\n\n\n**In this notebook, I will be dealing with the Mushroom Classification by using Random Forest Classifier, SVM, XGBooster Classifier.**\n\n\n**For the first step of this notebook, I will work on the EDA of this dataset by using Seaborn and Plotly libraries.**\n\n**For the next step, I will deal with the missing data points -if they exist -, and then encode the dataset for the data pre-processing step.**\n\n**Finally, I will train 3 different models which are Random Forest Classifier, SVM, and XGBoost Classifier.**\n\n**I am open to feedback and suggestions, feel free to comment your feedback and suggestions on the comment section or contact me.**\n\n**So, let's get started!**","ed042961":"# Spore Print Colors","33273173":"# Stalk Root","dc0f94bb":"# Ring Types\n![ring types.JPG](attachment:9f754bac-3ab7-40c4-bb77-08678e0e08e7.JPG)","6472a144":"# Cap Surfaces\n![glossary_pic16.jpg](attachment:9cdfbf6d-0cd3-4e14-a1f9-dfd241689cbd.jpg)","864de4b3":"# Gill Attachments\n![Types-of-gill-attachment-to-stipe.png](attachment:80fea8e2-c06e-43ab-94d5-298366c7c159.png)"}}