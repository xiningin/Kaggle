{"cell_type":{"32801c31":"code","1e5c82d3":"code","08f12f97":"code","0fed1556":"code","2e14e99e":"code","0c57b999":"code","9417a97b":"code","6cc0938b":"code","cbc013fe":"code","713d0bfd":"code","bd0ad8ce":"code","ed4f8145":"code","3d83558d":"code","19088349":"code","3ebf5bb7":"code","e7766b32":"markdown","0d82095a":"markdown","63eabd08":"markdown","5b5bb583":"markdown","d429742e":"markdown","b4f94974":"markdown","a5771a79":"markdown"},"source":{"32801c31":"import numpy as np\nimport pandas as pd\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nfrom statsmodels.tsa.statespace.sarimax import SARIMAX\nfrom statsmodels.tsa.seasonal import seasonal_decompose\nimport plotly.express as px\n%matplotlib inline","1e5c82d3":"calendar_df = pd.read_csv('..\/input\/m5-forecasting-accuracy\/calendar.csv', parse_dates=['date'], usecols=['date','d'])\nsample_sub = pd.read_csv('..\/input\/m5-forecasting-accuracy\/sample_submission.csv', index_col='id')\n\n# udv\u00e6lger kun de datoer som ligger i sales_train_validation\n\ncalendar_stv = calendar_df[:1913]\nsales = pd.read_csv('..\/input\/m5-forecasting-accuracy\/sales_train_validation.csv', index_col='id')\n","08f12f97":"sales_mean = sales.mean()\nsales_mean.index = calendar_stv['date']\nsales_mean_trans = sales_mean.transpose()","0fed1556":"decomp = seasonal_decompose(sales_mean_trans['2014':], period=7)\nplt.rcParams['figure.figsize'] = [20, 15]\ndecomp.plot()\nplt.show()","2e14e99e":"fig = px.scatter(sales_mean_trans, x=sales_mean_trans.index, y=sales_mean_trans.values, trendline='ols')\nfig.show()","0c57b999":"diffed = sales_mean_trans.diff().dropna()\nfig = px.scatter(diffed, x=diffed.index, y=diffed.values, trendline='ols')\nfig.show()","9417a97b":"diffed_season = sales_mean_trans.diff().diff(7).dropna()\nfig = px.scatter(diffed_season, x=diffed_season.index, y=diffed_season.values, trendline='ols')\nfig.show()","6cc0938b":"from statsmodels.tsa.stattools import adfuller\nresults = adfuller(sales_mean_trans)\nprint('ingen dif')\nprint('  ADF Statistic: {}'.format(results[0]))\nprint('  p-value: {}'.format(results[1]))\nresults = adfuller(diffed)\nprint('diffed')\nprint('  ADF Statistic: {}'.format(results[0]))\nprint('  p-value: {}'.format(results[1]))\nresults = adfuller(diffed_season)\nprint('diffed+seasonal diffed 7 dage')\nprint('  ADF Statistic: {}'.format(results[0]))\nprint('  p-value: {}'.format(results[1]))\nresults = adfuller(diffed.diff(30).dropna())\nprint('diffed+seasonal diffed 30 dage')\nprint('  ADF Statistic: {}'.format(results[0]))\nprint('  p-value: {}'.format(results[1]))\nresults = adfuller(diffed.diff(365).dropna())\nprint('diffed+seasonal diffed 365 dage')\nprint('  ADF Statistic: {}'.format(results[0]))\nprint('  p-value: {}'.format(results[1]))","cbc013fe":"from statsmodels.graphics.tsaplots import plot_acf, plot_pacf\nfig,(ax1, ax2) = plt.subplots(2,1, figsize=(20,10))\nplot_acf(diffed, zero=False, ax=ax1, lags=21)\nplot_pacf(diffed, zero=False, ax=ax2, lags=21)\nplt.show()","713d0bfd":"diffed_7 = diffed.diff(7).dropna()\nfig,(ax1, ax2) = plt.subplots(2,1, figsize=(20,10))\nplot_acf(diffed_7, zero=False, ax=ax1, lags=21)\nplot_pacf(diffed_7, zero=False, ax=ax2, lags=21)\nplt.show()","bd0ad8ce":"from statsmodels.graphics.tsaplots import plot_acf, plot_pacf\nfig,(ax1, ax2) = plt.subplots(2,1, figsize=(20,10))\nnormal_lags = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]\nlags7 =  [element * 7 for element in normal_lags]\n\nplot_acf(diffed_7, lags=lags7, ax=ax1)\nplot_pacf(diffed_7, lags=lags7, ax=ax2)\nplt.show()","ed4f8145":"%%time\nmodel = SARIMAX(sales_mean_trans, order=(4,1,2), seasonal_order=(5,1,1,7))\nresults = model.fit()\nprint(results.aic, results.bic)","3d83558d":"print(results.summary())","19088349":"forecast = results.get_prediction(start=-28)\nmean_forecast = forecast.predicted_mean\nconfidence_intervals = forecast.conf_int()\n\n#confidence_intervals\nlower_limits = confidence_intervals.loc[:,'lower y']\nupper_limits = confidence_intervals.loc[:,'upper y']\nplt.figure(figsize=(20,10))\n#Plot prediction\nplt.plot(sales_mean_trans[-35:])\nplt.plot(mean_forecast.index,\n         mean_forecast.values,\n         color='red',\n         label='forecast')\n#shade uncertainty area\nplt.fill_between(mean_forecast.index, lower_limits, upper_limits, color='pink')\nplt.show()","3ebf5bb7":"#mean_forecast\nRMSE = np.mean((sales_mean_trans[-28:] - mean_forecast)**2)**0.5\nprint(\"Sarimax(4,1,2)(5,1,1)7\\n - RMSE score: {}\\n - fitting Tid: {}\".format(RMSE, '110 sekunder'))\n","e7766b32":"Da jeg ved at der er en s\u00e6son komponent i data, plotter jeg mine acf og pacf med det diffede s\u00e6t","0d82095a":"Diffet datas\u00e6t - generel trend er fjernet\n- Ved at kigge p\u00e5 ACF tyder det p\u00e5 at en m\u00f8nster gentages for hver 7 dage\n- Vi pr\u00f8ver at fjerne det m\u00f8nster:\n","63eabd08":"# Trend i data","5b5bb583":"De samme principper g\u00e6lder som ved p,q v\u00e6rdierne: P afl\u00e6ses p\u00e5 pacf og Q afl\u00e6ses p\u00e5 acf\n- Q = 1, lag 0 s\u00e6ller ikke med som en faktor\n- P = 5,6 m\u00e5ske 9 \n  - Grafen er mere tvetydig for afl\u00e6sning","d429742e":"Der er en opadg\u00e5ende trend i datas\u00e6ttet, som bliver fjernet af at diffe.","b4f94974":"p\u00e5 nuv\u00e6rende tidspunkt er datas\u00e6ttet blevet diffet en gang og en gang med en s\u00e6son p\u00e5 7.\n\nSARIMAX best\u00e5r af parametrene (p,d,q)(P,D,Q)s\n- d og D og s v\u00e6rdierne kender vi:\n  - d=1 da datas\u00e6ttet skal diffes for at fjerne trenden\n  - D=1 fordi vi har obseveret seasonality\n  - s=7 fordi vi har sat seasonality til en uge\n- P\u00e5 acf-grafen kan man umiddelbart afl\u00e6se antallet af lags der skal bruges i MA(q)\n  - q=2\n- p\u00e5 pacf-grafen kan man umiddelbart afl\u00e6se antallet af lags p\u00e5 AR(p)\n  - p=4\n- S\u00e5 mangler vi P og Q v\u00e6rdierne:","a5771a79":"Nu plotter vi acf og pacf med lags der svarer til intevaller p\u00e5 7 dage"}}