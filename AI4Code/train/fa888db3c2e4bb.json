{"cell_type":{"ef978900":"code","b5398217":"code","01e28f39":"code","3f28e476":"code","97f0c965":"code","808cf444":"code","45bd0375":"code","79f40436":"code","34eb7633":"code","c1b530aa":"code","08317bf6":"code","cce96ce4":"code","5392fd63":"code","42510f26":"markdown","76098bd6":"markdown","04ee295b":"markdown","51466ca8":"markdown","4cfbf1e0":"markdown","31b73020":"markdown","1cdc1053":"markdown","5007789a":"markdown"},"source":{"ef978900":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b5398217":"data = pd.read_csv('..\/input\/videogamesales\/vgsales.csv')","01e28f39":"data.head()","3f28e476":"data.describe()","97f0c965":"data.info()","808cf444":"data['Year'].fillna(value = 0,axis = 0,inplace = True)\ndata.dropna(how = 'any',subset = ['Publisher'],inplace = True)\ndata['Year'] = data['Year'].apply(lambda x: int(x))","45bd0375":"import plotly as py\nimport plotly .graph_objs as go\nfrom plotly.graph_objs import Scatter\npy.offline.init_notebook_mode()","79f40436":"Popular_Genre = data.groupby('Genre')['Genre'].count().sort_values(ascending = False)\n\ntrace_basic = [go.Bar(x = Popular_Genre.index.tolist(),\n                     y = Popular_Genre.values.tolist(),\n                     marker = dict(color = ['red','orange','pink','blue','lightblue',\n                                           'indianred','darkblue','steelblue','green',\n                                         'darkgray','yellow','aqua']),opacity = 0.7)]\n\nlayout = go.Layout(title = 'Popularity of each genre',\n                  xaxis = {'title':'Genre'},\n                  )\nfigure_basic = go.Figure(data = trace_basic,layout = layout)\nfigure_basic.show()","34eb7633":"#Popularity of Each Genre\uff1a\nPopular_Genre = pd.DataFrame(data = Popular_Genre)\nPopular_Genre = Popular_Genre.rename(columns = {'Genre':'Quantity'}).reset_index()\nPopular_Genre['Percent'] = Popular_Genre['Quantity'] \/ Popular_Genre['Quantity'].sum() * 100\n\ntrace_basic = [go.Pie(labels = Popular_Genre['Genre'],\n                    values = Popular_Genre['Percent'],\n                    hole = 0.3, textfont = dict(size = 12,color = 'white'))]\n\nlayout = go.Layout(title = 'Percent of each genre',\n                  xaxis = {'title':'Genre'},\n                  )\nfigure_basic = go.Figure(data = trace_basic,layout = layout)\nfigure_basic.show()","c1b530aa":"import matplotlib.pyplot as plt\nimport seaborn as sns","08317bf6":"grouped_platform = data.groupby('Platform')['Platform'].count().sort_values(ascending = False)\ngrouped_platform = pd.DataFrame(data = grouped_platform).rename(columns = {'Platform' : 'Quantity'})\n\nplt.figure(figsize = (12,8),dpi = 300)\nsns.barplot(x = grouped_platform.index,\n            y = grouped_platform['Quantity'],\n            data = grouped_platform)\nplt.xlabel('Platform',labelpad = 20,fontsize = 15)\nplt.ylabel('Quantity',labelpad = 20,fontsize = 15)\nplt.xticks(rotation = 45,fontsize = 10)\nplt.show()","cce96ce4":"#This is another way to plot\uff1asns.countplot\uff08\uff09\nplt.figure(figsize = (12,8),dpi = 300)\nsns.countplot(x = 'Platform',data = data)\nplt.xlabel('Platform',labelpad = 20,fontsize = 15)\nplt.ylabel('Quantity',labelpad = 20,fontsize = 15)\nplt.xticks(rotation = 45,fontsize = 10)\nplt.show()","5392fd63":"grouped_publisher = data.groupby('Publisher')[['Publisher','Global_Sales']].sum()\ngrouped_publisher = grouped_publisher.reset_index().sort_values(by = 'Global_Sales',ascending = False)\ngrouped_publisher_top20 = grouped_publisher[0:20]\n\nplt.figure(figsize = (12,8),dpi = 300)\nsns.barplot(x = 'Publisher',\n            y = 'Global_Sales',\n             data = grouped_publisher_top20,\n           palette=\"Spectral_r\")\nplt.xlabel('Publisher',labelpad = 20,fontsize = 15)\nplt.ylabel('Revenue',labelpad = 20,fontsize = 15)\nplt.xticks(rotation = 90,fontsize = 12)\nplt.show()","42510f26":"# data analysis","76098bd6":"### analysis of platform","04ee295b":"# 2.Data Cleaning","51466ca8":"# 1.check data","4cfbf1e0":"### the top 10 most popular Genre","31b73020":"- The most popular genre is Action.\n- The top four categories in popularity account for more than 50 percent of sales.","1cdc1053":"### Processing missing value","5007789a":"### Video Game Revenue of Publisher(top 20)"}}