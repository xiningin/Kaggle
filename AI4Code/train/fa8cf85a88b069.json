{"cell_type":{"d07908e1":"code","000cba51":"code","c18bade3":"code","59d1313e":"code","38277a60":"code","2f8a3b54":"code","0bf5daeb":"code","48bf231a":"code","1725106f":"code","4e002ebc":"code","17641bf5":"code","2af74cae":"code","3e8254b1":"code","33dc7ca1":"markdown","29302c71":"markdown","56e58d58":"markdown","6e39b6c5":"markdown"},"source":{"d07908e1":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nfrom nltk.tokenize import RegexpTokenizer\nfrom nltk.stem.porter import PorterStemmer\nfrom nltk.corpus import stopwords\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.naive_bayes import BernoulliNB, MultinomialNB, GaussianNB","000cba51":"df = pd.read_csv('..\/input\/nlp-getting-started\/train.csv')\ndf.head()","c18bade3":"# let's look at what are the unique values are there for the keyword and location columns\n\ndf['keyword'].unique()","59d1313e":"df['location'].unique()","38277a60":"df = df.drop(['id', 'keyword', 'location'], axis = 1)\n\ndf","2f8a3b54":"# We will seperating the text feature and the target, \n# and then splitting both into train and validation sets\n\nX = df['text']\ny = df['target']\n\nX_train, X_val, y_train, y_val = train_test_split(X, y, test_size = 0.25)\n\nX_train.head()","0bf5daeb":"cv = CountVectorizer()\n\nX_vec = cv.fit_transform(X_train).toarray()\nXval_vec = cv.transform(X_val).toarray()\n\nprint(X_vec.shape)\nprint(Xval_vec.shape)","48bf231a":"# MultinomialNB\n\nmnb = MultinomialNB()\nmnb.fit(X_vec, y_train)","1725106f":"## Test the accuracy of our classifier on the validation set\n\nmnb.score(Xval_vec, y_val)","4e002ebc":"# BernoulliNB\n\nbnb = BernoulliNB()\nbnb.fit(X_vec, y_train)","17641bf5":"## Test the accuracy of our classifier on the validation set\n\nbnb.score(Xval_vec, y_val)","2af74cae":"# GaussianNB\n\ngnb = GaussianNB()\ngnb.fit(X_vec, y_train)","3e8254b1":"## Test the accuracy of our classifier on the validation set\n\ngnb.score(Xval_vec, y_val)","33dc7ca1":"## Define the classifier","29302c71":"## Get to know the data","56e58d58":"Since, the keywords can be found in the tweet itself and location isn't really important for our text classification model, we will be removing these two columns along with the id.","6e39b6c5":"## Import libraries"}}