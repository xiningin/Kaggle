{"cell_type":{"7a1f21f5":"code","4127189f":"code","0eb485e4":"code","757d2344":"code","d192e4d0":"code","3ab3fb85":"code","f62837cd":"code","2971c92b":"code","bb359970":"code","991334e6":"code","9c1783bf":"code","eda5ee0d":"code","ecda7503":"code","d8b44fee":"code","30cdcf5f":"code","c8e9df5d":"code","12d2a362":"code","08b2dbae":"code","0621820c":"code","302c1ff4":"code","2358ba6b":"code","c3107704":"code","057620ab":"code","cff36110":"code","21326e22":"code","e1038b4e":"code","16a3521a":"code","100387c2":"code","9d11355e":"code","a1c4cfa7":"markdown","1e42fc51":"markdown","a88b83b0":"markdown","3e4bef26":"markdown","afe8d272":"markdown","88e276db":"markdown","8db11eae":"markdown","ce149b45":"markdown","1fb19bc7":"markdown","29a38fe2":"markdown","4d09e953":"markdown","503ef268":"markdown","aec3ecc6":"markdown","d3b8da43":"markdown","3df9865a":"markdown","e4c71467":"markdown","7570850b":"markdown","b93c335a":"markdown","e4b64ecd":"markdown","ff449252":"markdown"},"source":{"7a1f21f5":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom datetime import datetime, timedelta\nimport warnings\nwarnings.filterwarnings('ignore')","4127189f":"df=pd.read_csv(\"..\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv\")","0eb485e4":"df.head(50)","757d2344":"df.tail(50)","d192e4d0":"df = df.rename(columns={'Province\/State': 'Province','Country\/Region':'Country','ObservationDate':'Date','Confirmed':'Cases'})\n","3ab3fb85":"df.describe().T","f62837cd":"df.Country.replace({'Mainland China': 'China'}, inplace=True)\ndf['Date'] = df['Date'].apply(pd.to_datetime)\ndf.drop(['SNo'],axis=1,inplace=True)\ndf.drop(list(df[df.Cases==0.0].index), axis = 0, inplace=True)","2971c92b":"df.isnull().sum()","bb359970":"dfmissing=df[df['Province'].isnull()]['Country'].value_counts().to_frame(name='Missing_Province_count')\ndfcountry=df['Country'].value_counts().to_frame(name='Country_count')\nmergedDf = dfcountry.merge(dfmissing, left_index=True, right_index=True)","991334e6":"mergedDf[mergedDf.Missing_Province_count>1]","9c1783bf":"df[df.Country=='Australia']=df[df.Country=='Australia'].fillna(df[df.Country=='Australia'][\"Province\"].mode()[0])\n\ndf[\"Province\"]=df[\"Province\"].fillna(df[\"Country\"]);","eda5ee0d":"df.sort_values(by='Cases', ascending=False)['Country'].unique()","ecda7503":"df[df.Country=='Others']","d8b44fee":"df.Country.replace({'Others': 'Japan'}, inplace=True)","30cdcf5f":"countries=df.sort_values(by='Cases', ascending=False)['Country'].unique()","c8e9df5d":"print(\"\\nNumber of countries affected by virus: \",len(countries))","12d2a362":"df.groupby(\"Country\").aggregate(['mean', np.std,max,'count']).sort_values([('Cases','max')], ascending=False).head(40)","08b2dbae":"df.groupby(\"Country\").aggregate(['mean', np.std,max,'count']).sort_values([('Deaths','max')], ascending=False).head(40)","0621820c":"dftotal=df.groupby(['Date','Country'])['Cases','Deaths','Recovered'].sum()\ndftotal.reset_index(inplace=True)  \ndftotal['Death_rate']=dftotal['Deaths']\/dftotal['Cases']\ndftotal['Recovery_rate']=dftotal['Recovered']\/dftotal['Cases']","302c1ff4":"dftotal[dftotal.Country=='US']","2358ba6b":" dftotal['log(Cases)']=np.log(dftotal.Cases)","c3107704":"plt.rcParams[\"axes.labelsize\"] = 20\nplt.rcParams[\"xtick.labelsize\"] = 12\nplt.rcParams[\"ytick.labelsize\"] = 12\nsns.set_style(\"whitegrid\")\nsns.lineplot(x=\"Date\", y=\"log(Cases)\", hue='Country',linewidth=6,  data=dftotal[dftotal.Country.isin(countries[0:10])]);\nplt.xticks(rotation=45,ha='right');\nsns.set(rc={'figure.figsize':(14,14)})\nleg = plt.legend(fontsize='x-large',loc=4, facecolor='white', )\n# set the linewidth of each legend object\nfor i in leg.legendHandles:\n    i.set_linewidth(10.0)","057620ab":"plt.rcParams[\"axes.labelsize\"] = 20\nplt.rcParams[\"xtick.labelsize\"] = 16\nplt.rcParams[\"ytick.labelsize\"] = 16\nsns.set_style(\"whitegrid\")\nsns.lineplot(x=\"Date\", y=\"log(Cases)\", hue='Country',linewidth=6,  data=dftotal[(dftotal.Country.isin(countries[0:10]))&(dftotal.Date>'2020-04-15')]);\nplt.xticks(rotation=45,ha='right');\nsns.set(rc={'figure.figsize':(14,14)})\nleg = plt.legend(fontsize='x-large',loc=4, facecolor='white', )\n# set the linewidth of each legend object\nfor i in leg.legendHandles:\n    i.set_linewidth(10.0)","cff36110":"plt.rcParams[\"axes.labelsize\"] = 20\nplt.rcParams[\"xtick.labelsize\"] = 16\nplt.rcParams[\"ytick.labelsize\"] = 16\nsns.set_style(\"whitegrid\")\nsns.lineplot(x=\"Date\", y=\"log(Cases)\", hue='Country',linewidth=6,  data=dftotal[dftotal.Country.isin(countries[10:30])]);\nplt.xticks(rotation=45,ha='right');\nsns.set(rc={'figure.figsize':(14,14)})\nleg = plt.legend(fontsize='x-large',loc=2, facecolor='white', )\n# set the linewidth of each legend object\nfor i in leg.legendHandles:\n    i.set_linewidth(10.0)","21326e22":"plt.rcParams[\"axes.labelsize\"] = 20\nplt.rcParams[\"xtick.labelsize\"] = 16\nplt.rcParams[\"ytick.labelsize\"] = 16\nsns.set_style(\"whitegrid\")\nsns.lineplot(x=\"Date\", y=\"log(Cases)\", hue='Country',linewidth=6,  data=dftotal[(dftotal.Country.isin(countries[10:20]))&(dftotal.Date>'2020-04-15')]);\nplt.xticks(rotation=45,ha='right');\nsns.set(rc={'figure.figsize':(14,14)})\nleg = plt.legend(fontsize='x-large',loc=4, facecolor='white', )\n# set the linewidth of each legend object\nfor i in leg.legendHandles:\n    i.set_linewidth(10.0)","e1038b4e":"plt.rcParams[\"axes.labelsize\"] = 20\nplt.rcParams[\"xtick.labelsize\"] = 16\nplt.rcParams[\"ytick.labelsize\"] = 16\nsns.set_style(\"whitegrid\")\nsns.lineplot(x=\"Date\", y=\"log(Cases)\", hue='Country',linewidth=6,  data=dftotal[(dftotal.Country.isin(countries[20:30]))&(dftotal.Date>'2020-04-15')]);\nplt.xticks(rotation=45,ha='right');\nsns.set(rc={'figure.figsize':(14,14)})\nleg = plt.legend(fontsize='x-large',loc=4, facecolor='white', )\n# set the linewidth of each legend object\nfor i in leg.legendHandles:\n    i.set_linewidth(10.0)","16a3521a":"plt.rcParams[\"axes.labelsize\"] = 20\nplt.rcParams[\"xtick.labelsize\"] = 16\nplt.rcParams[\"ytick.labelsize\"] = 16\nsns.set_style(\"whitegrid\")\nsns.lineplot(x=\"Date\", y=\"Death_rate\", hue='Country', linewidth=6, data=dftotal[(dftotal.Country.isin(countries[0:10]))&(dftotal.Date>'2020-03-15')]);\nplt.xticks(rotation=45,ha='right');\nsns.set(rc={'figure.figsize':(14,14)})\nleg = plt.legend(fontsize='x-large',loc=2, facecolor='white', )\n# set the linewidth of each legend object\nfor i in leg.legendHandles:\n    i.set_linewidth(10.0)","100387c2":"plt.rcParams[\"axes.labelsize\"] = 20\nplt.rcParams[\"xtick.labelsize\"] = 16\nplt.rcParams[\"ytick.labelsize\"] = 16\nsns.set_style(\"whitegrid\")\nsns.lineplot(x=\"Date\", y=\"Recovery_rate\", hue='Country',linewidth=6, data=dftotal[(dftotal.Country.isin(countries[0:10]))&(dftotal.Date>'2020-03-15')]);\nplt.xticks(rotation=45,ha='right');\nsns.set(rc={'figure.figsize':(14,14)})\nleg = plt.legend(fontsize='x-large',loc=2, facecolor='white', )\n# set the linewidth of each legend object\nfor i in leg.legendHandles:\n    i.set_linewidth(10.0)","9d11355e":"plt.rcParams[\"axes.labelsize\"] = 20\nplt.rcParams[\"xtick.labelsize\"] = 16\nplt.rcParams[\"ytick.labelsize\"] = 16\nsns.set_style(\"whitegrid\")\nsns.lineplot(x=\"Date\", y=\"Death_rate\", hue='Country',linewidth=6,  data=dftotal[(dftotal.Country.isin(countries[10:29]))&(dftotal.Date>'2020-03-15')]);\nplt.xticks(rotation=45,ha='right');\nsns.set(rc={'figure.figsize':(14,14)})\nleg = plt.legend(fontsize='x-large',loc=2, facecolor='white', )\n# set the linewidth of each legend object\nfor i in leg.legendHandles:\n    i.set_linewidth(10.0)","a1c4cfa7":"## Cases after 15\/04\/2020 for the 11-20th countries ","1e42fc51":"### Countries in Descending order with respect to number of cases","a88b83b0":"## Deaths rates for the top 10 counries according to their number of cases","3e4bef26":"### Preprocessing\n##### Renaming Mainland China as China, formatting date,dropping Sno and zero confirmed observations","afe8d272":"##    ## THIS NOTEBOOK USES DATA UNTIL 9 AUGUST 2020. CHECK  THE PREVIOUS VERSIONS FOR EARLIER DATES. SINCE IT USES DAILY UPDATED DATA, IF YOU RUN THIS NOTEBOOK LATER YOU WILL HAVE THE LATEST POSSIBLE GRAPHS. ONLY THE COMMENTS CAN CHANGE WITH THE UPDATED DATA.","88e276db":"Excluding China, Germany and Belgium, rapid rise of Coronavirus continues in all other 7 countries. Only in Turkey and Qatar there are some drops in the accelaration of the growth rate but they are also still far from stabilization.","8db11eae":"### Descriptives in descending order with respect to maximum cases in all data for the first 40 country","ce149b45":"### Recovery rates after 15\/03\/2020","1fb19bc7":"## Cases after 15\/04\/2020 for the 20-30th countries","29a38fe2":"##### Assigning country names for missing provinces as there are almost no province data for those countries \n##### (Excluding Australia for which it is set the most frequent province)","4d09e953":"##  Log(Cases) for the next 20 countries ","503ef268":"##### Assigning the cruise ship to Japan as it was mostly situated in Japan","aec3ecc6":"The growth of the confirmed case rates seem to stabilize only in Italy,Spain, France and UK. There is a significant accelation in the case groeth rates in  India,  Chile and Brazil. Despite some drop in their accelations, the cases in Russia,Iran and US seem to be far from stabilization.","d3b8da43":"## Visualisations","3df9865a":" ## Death rates for the next 20 countries after 15\/03\/2020","e4c71467":"#### Examining missing provinve data ","7570850b":"## First 10 Countries with respect to highest number of Log (Coronavirus Cases)","b93c335a":"### Descriptives in descending order with respect to maximum deaths in all data for the first 40 country","e4b64ecd":"##### Missing values","ff449252":"## Cases after 15\/03\/2020"}}