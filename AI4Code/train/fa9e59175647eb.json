{"cell_type":{"60868be5":"code","a2f68b26":"code","2899985d":"code","b4d95c22":"code","158e56c3":"code","fdae97dd":"code","0c2c9eaa":"code","cbf8b076":"code","de28ff44":"code","8852494f":"code","833f4b96":"code","9cc30539":"code","db27398c":"code","09230367":"code","97580cbf":"code","40610374":"code","625adc05":"code","8c410d54":"code","c002c94b":"code","2c6ec370":"code","cc55f348":"code","623c86f9":"code","d222c3f7":"code","4cca7937":"code","7cd7e6f7":"code","f6449a72":"code","d4c2b7c1":"markdown","3016bb3b":"markdown","bea9f623":"markdown","a86ab464":"markdown","1762a81f":"markdown","e7444ad7":"markdown","38d4b826":"markdown","084fba6e":"markdown","55b86dae":"markdown"},"source":{"60868be5":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","a2f68b26":"df = pd.read_csv(\"\/kaggle\/input\/rental-price-of-indias-it-capital-pune-mh-ind\/train.csv\")\ndf.head(n=5)","2899985d":"df.shape","b4d95c22":"df.isnull().sum()","158e56c3":"df.duplicated().sum()","fdae97dd":"df = df.drop_duplicates()\ndf.reset_index(drop=True,inplace=True)\ndf.shape","0c2c9eaa":"from sklearn.preprocessing import LabelEncoder\ncols = ['furnishing','avalable_for','facing','floor_type','address','gate_community','maintenance_amt','corner_pro','wheelchairadption','petfacility','propertyage']\ndf[cols] = df[cols].apply(LabelEncoder().fit_transform)\ndf.head(n=10)","cbf8b076":"plt.style.use('ggplot')\nplt.figure(figsize=(25,30))\nplt.subplot(4,2,1)\nsns.countplot(data = df,x = df['bedroom'])\nplt.subplot(4,2,2)\nsns.countplot(data = df,x=df['bathrooms'])\nplt.subplot(4,2,3)\nsns.countplot(data = df,x=df['floor_number'])\nplt.subplot(4,2,4)\nsns.countplot(data = df,x = df['gate_community'])\nplt.subplot(4,2,5)\nsns.countplot(data = df,x=df['facing'])\nplt.subplot(4,2,6)\nsns.countplot(data = df,x=df['powerbackup'])\nplt.subplot(4,2,7)\nsns.countplot(data = df,x=df['petfacility'])\nplt.subplot(4,2,8)\nsns.countplot(data = df,x=df['wheelchairadption'])\nplt.show()","de28ff44":"plt.figure(figsize=(30,30))\nsns.heatmap(df.corr(),annot=True,cmap='coolwarm')\nplt.show()","8852494f":"plt.figure(figsize=(30,30))\nfor i,col in enumerate(df.columns,1):\n    plt.subplot(15,2,i)\n    sns.boxplot(data=df,x=col, orient=\"h\")\nplt.show()","833f4b96":"plt.figure(figsize=(20,20))\nfor i,column in enumerate(df.columns,1):\n    plt.subplot(15,2,i)\n    sns.violinplot(data = df,x = df[column],orient = 'h')\nplt.show()","9cc30539":"from scipy import stats\nzscore = np.abs(stats.zscore(df))\nprint(zscore)","db27398c":"print(np.where(zscore > 3))","09230367":"df = df[(zscore<3).all(axis=1)]","97580cbf":"X = df.drop(['rent'],axis=True)\ny = df['rent']","40610374":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=42)","625adc05":"x_train.shape,x_test.shape,y_train.shape,y_test.shape","8c410d54":"from sklearn.preprocessing import MinMaxScaler\nms = MinMaxScaler()\nx_train = ms.fit_transform(x_train)\nx_test = ms.transform(x_test)","c002c94b":"from sklearn.linear_model import LinearRegression\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom xgboost import XGBRegressor\nfrom sklearn.metrics import r2_score","2c6ec370":"k_reg = KNeighborsRegressor()\nk_reg.fit(x_train,y_train)\n\nk_acc = r2_score(y_test,k_reg.predict(x_test))\n\nprint(\"Train accuracy:\", (k_reg.score(x_train,y_train)))\nprint(\"Test accuracy:\", (k_reg.score(x_test,y_test)))","cc55f348":"l_reg = LinearRegression()\nl_reg.fit(x_train,y_train)\n\nl_acc = r2_score(y_test,l_reg.predict(x_test))\n\nprint(\"Train accuracy:\", (l_reg.score(x_train,y_train)))\nprint(\"Test accuracy:\", (l_reg.score(x_test,y_test)))","623c86f9":"d_reg = DecisionTreeRegressor()\nd_reg.fit(x_train,y_train)\n\nd_acc = r2_score(y_test,d_reg.predict(x_test))\n\nprint(\"Train accuracy:\", (d_reg.score(x_train,y_train)))\nprint(\"Test accuracy:\", (d_reg.score(x_test,y_test)))","d222c3f7":"r_reg = RandomForestRegressor()\nr_reg.fit(x_train,y_train)\n\nr_acc = r2_score(y_test,r_reg.predict(x_test))\n\nprint(\"Training accuracy:\",(r_reg.score(x_train,y_train)))\nprint(\"Test accuracy:\",(r_reg.score(x_test,y_test)))","4cca7937":"x_reg = XGBRegressor()\nx_reg.fit(x_train,y_train)\n\nx_acc = r2_score(y_test,x_reg.predict(x_test))\n\nprint(\"Training accuracy:\",(x_reg.score(x_train,y_train)))\nprint(\"Test accuracy:\",(x_reg.score(x_test,y_test)))","7cd7e6f7":"models = pd.DataFrame({\n    'Models': ['Knn','Linear','DecisionTree','RandomForest','XGB'],\n    'Scores': [k_acc,l_acc,d_acc,r_acc,x_acc]\n\n})\n\nmodels.sort_values(by = 'Scores',ascending = False)","f6449a72":"sns.barplot(x='Models',y='Scores',data=models)\nplt.show()","d4c2b7c1":"**Loab Packages**","3016bb3b":"**splitting Data**","bea9f623":"**corelation**","a86ab464":"**Data visualization**","1762a81f":"**Data Preprocessing**","e7444ad7":"**normalisation**","38d4b826":" on checking correlation mostly appartments with (1 or 2) bedrooms,(1 or 2) bathrooms,floor number,floor type, **gate community,facing,powerbackup, petfacility,wheelchairadption**","084fba6e":"**Checking outliers**","55b86dae":"**Load Data**"}}