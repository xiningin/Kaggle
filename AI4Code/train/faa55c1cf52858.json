{"cell_type":{"11243037":"code","bb03aa54":"code","c49352a5":"code","2fb20490":"code","8b314747":"code","8c96faa1":"code","a8ab7f53":"code","c865d51f":"code","138f548b":"code","c7ef6819":"code","df79b8b6":"markdown","7292addb":"markdown","11f073e4":"markdown","13b0f900":"markdown","557e9076":"markdown","6346af54":"markdown","b9461a51":"markdown","232ba6f9":"markdown","0d10bb6b":"markdown","dc3d8989":"markdown","885d0905":"markdown","2cfae2fb":"markdown","2f59a28a":"markdown","38dbc194":"markdown","fb51cfb5":"markdown"},"source":{"11243037":"import pandas as pd\nimport numpy as np\nimport datetime as dt\nimport matplotlib.pyplot as plt \nfrom matplotlib.pyplot import figure\n%matplotlib inline\nimport seaborn as sns\nsns.set_style(\"whitegrid\")\nfrom plotly import __version__\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\n\nprint(__version__) # requires version >= 1.9.0\nimport cufflinks as cf\ninit_notebook_mode(connected=True)\ncf.go_offline()\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","bb03aa54":"# export data\n\ndf1 = pd.read_csv('\/kaggle\/input\/asia-covid-19-cases-updated-10-oct-21\/AsiaCases_.csv')\n\n# check for null values\n\ndf1.isnull().sum()\n\n# drop null\n\ndf1.dropna(inplace=True)\ndf1.isnull().sum()","c49352a5":"# change index to country instead so it's easier to see the data\n\ndf1.set_index('Country', inplace=True)\n\n# find top 10 countries with highest covid cases\n\ntop10 = df1['TotalCases'].sort_values(ascending=False).head(10)\ntop10 = pd.DataFrame(data=top10)","2fb20490":"# query and sort top 10 countries \n\ntop10 = df1['TotalCases'].sort_values(ascending=False).head(10)\n\n# create dataframe for ease of viewing and plotting\n\ntop10 = pd.DataFrame(data=top10)\n\n# get default indexing\n\ntop10.reset_index(level=0,inplace=True)\n\n# construct layer 2 data which is the percentage of population struck by covid\n\nstruck_by_covid = pd.DataFrame(round((df1['TotalCases']\/df1['TotalPopulation'])*100,2),columns=['StruckByCovid']).astype(str).add('%')\nstruck_by_covid.reset_index(level=0,inplace=True)\n\n# join layer 1 and layer 2 data into single dataframe (df)\n\ntop10_covidcases = top10.join(struck_by_covid.set_index('Country'), on='Country')\ntop10_covidcases \n\n# draw chart\n\nfig, ax = plt.subplots(figsize=(14,3))\ndata = ax.bar(top10_covidcases['Country'],top10_covidcases['TotalCases']) # L1 data\n\n# label the bars\n\nax.bar_label(data,top10_covidcases['StruckByCovid'],label_type='edge', fontsize=15) # display L2 data on chart\nax.bar_label(data,top10_covidcases['TotalCases'],label_type='center') # display L1 data on chart\n\n# label the axis and title\n\nax.set_title('Top 10 Countries with Highest Covid19 Cases', fontsize=20)\nax.set_ylabel('Total Cases', fontsize=20)\nax.set_xlabel('Country',  fontsize=20)\n\nplt.show()","8b314747":"# slice TotalDeaths and TotalPopulation from df1 into desired df \n\ntotal_deaths_and_population=pd.DataFrame(df1[['TotalDeaths','TotalPopulation']])\ntotal_deaths_and_population.reset_index(level=0,inplace=True)\n\n# add index \n\ndf2 = top10_covidcases.join(total_deaths_and_population.set_index('Country'), on='Country')\ndf2\n\n# calculation for % death rates\n\nperc_covid_deaths = round(((df2['TotalDeaths']\/df2['TotalPopulation'])*100),3).astype(str).add('%') # math\nperc_covid_deaths_df = pd.DataFrame(perc_covid_deaths,columns=['DeathRates']) # put in a df\nperc_covid_deaths_df.reset_index(level=0) # reset index\nperc_covid_deaths_df\n\n# joining cal for % death rates into df2\n\ndf3 = df2.join(perc_covid_deaths_df)\n\n# draw the chart\n\nfig, ax = plt.subplots(figsize=(14,3))\ndata = ax.bar(df3['Country'],df3['TotalCases']) # L1 data\n\n# label the bars\n\nax.bar_label(data,df3['DeathRates'],label_type='edge', fontsize=15) # display L2 data on chart\nax.bar_label(data,df3['TotalCases'],label_type='center') # display L1 data on chart\n\n# label the axis and title\n\nax.set_title('Top 10 Countries in terms of covid deaths', fontsize=20)\nax.set_ylabel('Total Cases', fontsize=20)\nax.set_xlabel('Country', fontsize=20)\n\nplt.show()","8c96faa1":"df_lowtest = round(((df1['TotalTests']\/df1['TotalPopulation'])),4).sort_values(ascending=True).head(10).astype(str).add('%')\ndf_lowtest = pd.DataFrame(df_lowtest,columns=['TestRates']) # put in a df\ndf_lowtest.reset_index(level=0,inplace=True) # reset index\ndf_lowtest = (df1['TotalTests']\/df1['TotalPopulation'])*100\ndf_lowtest = round(df_lowtest.sort_values(ascending=True).head(10),3).astype(str).add('%')\ndf_lowtest_df = pd.DataFrame(df_lowtest,columns=['TestRate'])\ndf_lowtest_df.reset_index(level=0,inplace=True)\n\n# draw the chart\n\nfig, ax = plt.subplots(figsize=(20,5))\nbottom10 = ax.bar(df_lowtest_df['Country'],df_lowtest_df['TestRate']) # L1 data\n\n# label the axis and title\n\nax.set_title('Bottom 10 Countries in terms of covid test\/population', fontsize=20)\nax.set_ylabel('Total test', fontsize=20)\nax.set_xlabel('Country', fontsize=20)\nplt.ylim([0, 9])\n\n# label the bars\n\nax.bar_label(bottom10,df_lowtest_df['TestRate'],label_type='edge', fontsize=15) # display L2 data on chart\n\nplt.show()","a8ab7f53":"corr = round(df1.corr(method='pearson'),2)\nfig, ax = plt.subplots(figsize=(12, 8))\nax = sns.heatmap(corr, annot=True, cmap='RdGy')","c865d51f":"death_recovery_ratio = round(df1['TotalDeaths']\/df1['TotalRecovered'],3).sort_values(ascending=False).head(10).astype(str).add('%')\ndeath_recovery_ratio = pd.DataFrame(death_recovery_ratio, columns=['%'])\ndeath_recovery_ratio.reset_index(level=0,inplace=True)\n\n# draw the chart\n\nfig, ax = plt.subplots(figsize=(20,5))\ndeath10 = ax.bar(death_recovery_ratio['Country'],death_recovery_ratio['%']) # L1 data\n\n# # label the axis and title\n\nax.set_title('Top 10 Countries in terms of Death\/Recovery Ratio', fontsize=20)\nax.set_ylabel('Death\/Recovery Ratio', fontsize=20)\nax.set_xlabel('Country', fontsize=20)\nplt.ylim([0, 9])\n\n# label the bars\n\nax.bar_label(death10,death_recovery_ratio['%'],label_type='edge', fontsize=15) # display L2 data on chart\n\n\nplt.show()","138f548b":"# top 10 countries with higest number of tests\n\nvar1 = df1['TotalTests'].sort_values(ascending=False).head(10)\nvar1 = pd.DataFrame(var1)\nvar1.reset_index()\n\nvar1 = var1.join(df1['TotalCases'], 'Country')\nvar1 = var1.join(df1['TotalRecovered'], 'Country')\nvar1 = var1.join(df1['TotalDeaths'], 'Country')\n\nrecovery_rate = pd.DataFrame((var1['TotalRecovered']\/var1['TotalCases']),columns=['RecoveryRate'])\nvar1 = var1.join(recovery_rate,'Country')\nvar1.reset_index(level=0,inplace=True)\nvar1 = var1.round(decimals=3)\n\n# draw the chart\n\nfig, ax = plt.subplots(figsize=(20,5))\ndata1 = ax.bar(var1['Country'],var1['TotalTests']) # L1 data\n\n# label the axis and title\n\nax.set_title('Top 10 Countries in terms of cases and its recovery rate', fontsize=20)\nax.set_ylabel('TotalTests', fontsize=20)\nax.set_xlabel('Country', fontsize=20)\n\n# label the bars\n\nax.bar_label(data1,var1['RecoveryRate'].astype(str).add('%'),label_type='edge', fontsize=15) # display L2 data on chart\n\n\nplt.show()","c7ef6819":"testrate = pd.DataFrame((df1['TotalTests']\/df1['TotalPopulation']).sort_values(ascending=False),columns=['TestRate']).head(10)\ntestrate = testrate.reset_index()\ncases = df1['TotalCases']\ntestrate = testrate.join(cases,'Country')\ndeath = pd.DataFrame((df1['TotalDeaths']\/df1['TotalCases']),columns=['DeathRate'])\ntestrate = testrate.join(death,'Country')\nactive = pd.DataFrame(df1['ActiveCases'])\ntestrate = testrate.join(active, 'Country')\n\n# draw the chart\n\nfig, ax = plt.subplots(nrows=3,figsize=(20,9))\n\nax[0].plot(testrate['Country'],testrate['TestRate'])\nax[1].plot(testrate['Country'],testrate['DeathRate'])\nax[2].plot(testrate['Country'],testrate['ActiveCases'])\n\n# label the axis and title\n\nax[0].set_title('Highest Test Rates', fontsize=25)\nax[1].set_title('Death Rates', fontsize=25)\nax[2].set_title('Active Cases', fontsize=25)\n\n# label points of interest\n\n\nax[1].annotate('A',\n            xy=('UAE', 0.002865), xycoords='data',\n            xytext=(-15, 25), textcoords='offset points',\n            arrowprops=dict(facecolor='black', shrink=0.05),\n            horizontalalignment='right', verticalalignment='bottom')\nax[2].annotate('A',\n            xy=('UAE', 4481), xycoords='data',\n            xytext=(-15, 25), textcoords='offset points',\n            arrowprops=dict(facecolor='black', shrink=0.05),\n            horizontalalignment='right', verticalalignment='bottom')\n\nax[1].annotate('B',\n            xy=('Singapore', 0.001276), xycoords='data',\n            xytext=(-15, 25), textcoords='offset points',\n            arrowprops=dict(facecolor='black', shrink=0.05),\n            horizontalalignment='right', verticalalignment='bottom')\nax[2].annotate('B',\n            xy=('Singapore', 26307), xycoords='data',\n            xytext=(-15, 25), textcoords='offset points',\n            arrowprops=dict(facecolor='black', shrink=0.05),\n            horizontalalignment='right', verticalalignment='bottom')\n\nax[1].annotate('C',\n            xy=('Hong Kong', 0.017361), xycoords='data',\n            xytext=(-15, 25), textcoords='offset points',\n            arrowprops=dict(facecolor='black', shrink=0.05),\n            horizontalalignment='right', verticalalignment='bottom')\nax[2].annotate('C',\n            xy=('Hong Kong', 103), xycoords='data',\n            xytext=(-15, 25), textcoords='offset points',\n            arrowprops=dict(facecolor='black', shrink=0.05),\n            horizontalalignment='right', verticalalignment='bottom')\n\nax[1].annotate('D',\n            xy=('Georgia', 0.014583), xycoords='data',\n            xytext=(-15, 25), textcoords='offset points',\n            arrowprops=dict(facecolor='black', shrink=0.05),\n            horizontalalignment='right', verticalalignment='bottom')\nax[2].annotate('D',\n            xy=('Georgia', 23942), xycoords='data',\n            xytext=(-15, 25), textcoords='offset points',\n            arrowprops=dict(facecolor='black', shrink=0.05),\n            horizontalalignment='right', verticalalignment='bottom')\n\nplt.tight_layout()\nplt.show()","df79b8b6":"#### Hypothesis #2 : low number of cases with high test rate indicates that the country is safe to travel to","7292addb":"Find correlation","11f073e4":"![Screenshot 2021-12-17 at 2.58.26 PM.png](attachment:386466ec-6295-47fd-bf1e-cb6d61c533d0.png)","13b0f900":"#### Results of hypothesis #1: Wherever you get covid your recovery rate is the same\n\nTo ensure we test recovery rate of covid-19 fairly we accessed the countries with top 10 highest test rate. The above graph indicates that despite india having the most covid cases and the highest test rate, the recovery rate is 98%, consistent with the rest of the countries. Further proves that no matter where you get the virus, you will have a 90-98% recovery rate from covid. Caveat to the fact that medical infrastructure has to be in place to facilitate recovery.\n","557e9076":"Top 10 countries in terms of cases and it's recovery rate","6346af54":"Top 10 countries in terms of covid-19 cases","b9461a51":"#### Point D : Georgia's medical infrastructure is not equipped to support covid cases along with it's aging population contributed to high deathrates and high transmissibility of covid-19\n\nGeogia has a relatively high aging population of 14.8% which may be reason for the higher death rates in the country. Also it suffers from healthcare system breakdowns which enacted it's country's national guards to assist in medical efforts. In addition, Masks and vaccinations are \u201cstrongly encouraged, but not mandated,\u201d hence explains the high infection and deathrates despite being one of the top 10 highest testing rate countries in asia. \n\nAging population: https:\/\/www.prb.org\/resources\/countries-with-the-oldest-populations-in-the-world\/\n\nStruggling infrastructure: https:\/\/apnews.com\/article\/health-education-georgia-coronavirus-pandemic-68d49b68b7dc73cf6615bc646972a4ec\n\n#### Conclusion\nWith the exception of Georgia, which appears to be the only outlier in this chart. Most of these top 10 countries are relatively safe to travel to during this covid season they have adequate vaccinated population, medical infrastructure and low death rates to quel the worries of possible infections. ","232ba6f9":"Singapore was quick to adapt it's healthcare infrastructure to accomodate for the rise in cases, similar to china's temporary hospital concept during the height of their covid infection. Singapore was also quick to innovate by researching and developing new test kits, ventilators and technology to anticipate shortages in medical supplies should it ever arises. Hence, it managed to handle the high active cases with relative ease and kept death rates low.\n\nS11 case: https:\/\/www.scmp.com\/week-asia\/explained\/article\/3080466\/how-did-migrant-worker-dormitories-become-singapores-biggest\n\nInfrastructure: https:\/\/www.ihis.com.sg\/Project_Showcase\/covid-19\/Pages\/covid-community-care-facility-expo-healthtech.aspx\n\nVentilators: https:\/\/www.straitstimes.com\/singapore\/singhealth-team-develops-ventilator-to-pre-empt-shortage-for-severe-covid-19-cases\n\n#### Point C : Hong Kong's medical aging population contributed to high deathrates\nHK has a low active case number which suggest that transmission is low but mortality rate is much higher than it's peers. This may be due to it's larger demographic of aging population. HK has 16.4% of population above 65 years old, one of the highest in Asia. ","0d10bb6b":"The above shows countries with highest test rates, its death rates and its active cases. Within this list of 10, countries with high test rate, death rate, active cases are deemed to be more dangerous to travel to. While the opposite means that country is safe to travel to. \n\n#### Point A : UAE is the safest place to be in during Q3 of 2021\nUAE is the safest with the highest test rate low death, and low active cases. Research showed in the period of sept 2021, Abu Dahbi relaxed domestic tourism restrictions and had a extensive testing regime to ensure tourism returns. Further research suggests that UAE's eagerness to reinstate tourism is due to it's 11.6% contribution to the country's GDP. \n\nTourism returns: https:\/\/www.khaleejtimes.com\/uae\/sharjah-islamic-art-festival-addresses-essence-of-existence\n\nUAE GDP: https:\/\/www.moec.gov.ae\/en\/tourism-indicators#:~:text=The%20Contribution%20of%20the%20Travel,amounted%20to%20AED%20143.1%20billion.\n\n#### Point B : Singapore's medical infrastructure is well equipped to support high active cases\nSingapore had high active cases, and high cases in general throughout the covid period. However, it's deathrate remained low. Singapore had several high profile covid cluster in the period of 2020 to 2021. One of the most notable is the S11 dormitory cluster - this contributed to community spread as inter mingling workers socialise across dormitories on their days off, then again with different groups of friends within their dormitories. This promoted rapid inter-dormitories infection and eventually leaking into local communities. \n","dc3d8989":"# Additional Analysis","885d0905":"![Screenshot 2021-12-17 at 3.32.27 PM.png](attachment:8c1005e5-def1-4345-a48b-a64c4221cdd3.png)","2cfae2fb":"Bottom 10 countries in covid cases","2f59a28a":"# Analysis by Kaggle page","38dbc194":"Top 10 countries in terms of covid-19 deaths","fb51cfb5":"Top 10 countries in terms of death\/recovery ratio"}}