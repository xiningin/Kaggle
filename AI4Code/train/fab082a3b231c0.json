{"cell_type":{"b472af12":"code","bf67faf5":"code","f27330ec":"code","d9ba2f84":"code","1eed84c1":"code","63e91391":"markdown","e2fe8bf4":"markdown"},"source":{"b472af12":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bf67faf5":"pip install googletrans==4.0.0-rc1","f27330ec":"from googletrans import Translator\n\ntranslator = Translator()\n\ntxt = \"\u091c\u094d\u0935\u093e\u0932\u093e \u0917\u0941\u091f\u094d\u091f\u093e (\u091c\u0928\u094d\u092e: 7 \u0938\u093f\u0924\u0902\u092c\u0930 1983; \u0935\u0930\u094d\u0927\u093e, \u092e\u0939\u093e\u0930\u093e\u0937\u094d\u091f\u094d\u0930) \u090f\u0915 \u092d\u093e\u0930\u0924\u0940\u092f \u092c\u0948\u0921\u092e\u093f\u0902\u091f\u0928 \u0916\u093f\u0932\u093e\u0921\u0940 \u0939\u0948\u0902\u0964\"\n\n#\u3000\u65e5\u672c\u8a9e\u3078\u7ffb\u8a33\ntrans_ja = translator.translate(txt, src = \"hi\", dest = \"ja\")\nprint(trans_ja.text)\n","d9ba2f84":"from googletrans import Translator\nimport csv\n\n#translator = Translator()\ntranslator = Translator(service_urls=['translate.google.co.kr'])\n\n# \u914d\u5217\u5ba3\u8a00\ntrain_id = []\ntrain_context = []\ntrain_qestion = []\ntrain_answer = []\ntrain_lang = []\n\ntrans_context = []\ntrans_qestion = []\ntrans_answer = []\n\ndata=[]\n\n\n#with open(\"..\/input\/chaii-hindi-and-tamil-question-answering\/train.csv\") as f:\n    #reader = csv.reader(f)\n    #header = next(reader)  # \u898b\u51fa\u3057\u884c\u306f\u5225\u6271\u3044\nf = open('..\/input\/chaii-hindi-and-tamil-question-answering\/train.csv','r',encoding=\"utf-8\")\nreader = csv.reader(f,delimiter=',')\nfor row2 in reader:\n    data.append(row2);\n    print(reader)\n    flag=0\n        \n    for row in data:\n        if(flag==0):\n            flag=flag+1\n        else:\n         train_id.append(row[0])\n         train_context.append(str(row[1]))\n         train_qestion.append(str(row[2]))\n         train_answer.append(str(row[3]))\n         train_lang.append(str(row[5]))\n         print(\"OK\")\n         print(flag)\n         #trans_ja = translator.translate(str(row[1]), src = row[5][:2], dest = \"ja\")\n         #trans_context.append(trans_ja)\n         trans_ja = translator.translate(row[2], src = row[5], dest = \"ja\")\n         trans_qestion.append(trans_ja)\n         print(trans_ja)\n         trans_ja_ans = translator.translate(row[3], src = row[5], dest = \"ja\")\n         trans_answer.append(trans_ja_ans)\n         flag=flag+1\n        \n        \n        \n        #trans_ja = translator.translate(row[2], src = row[5][:2], dest = \"ja\")\n        #trans_qestion.append(trans_ja.text)\n        #print(trans_ja.text)\n        #trans_ja = translator.translate(row[3], src = row[5][:2], dest = \"ja\")\n        #trans_answer.append(trans_ja.text)\n\n        ","1eed84c1":"with open('.\/trans_ja.csv', 'w') as f:\n writer = csv.writer(f)\n for i in range(len(train_id)):\n    #print(i)\n    writer.writerow([train_id[i], train_context[i], trans_qestion[i], trans_answer[i], train_lang[i]])\n     ","63e91391":"\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u306e\u305f\u3081\u306b\u3072\u3068\u307e\u305a\u65e5\u672c\u8a9e\u306b\u7ffb\u8a33\u3059\u308b\nGoogle\u7ffb\u8a33\u306eAPI\u3092\u5229\u7528\u3057\u3066\u30d2\u30f3\u30c7\u30a3\u30fc\u8a9e\u2192\u65e5\u672c\u8a9e\u306b\u7ffb\u8a33","e2fe8bf4":"\u30a4\u30f3\u30d7\u30c3\u30c8CSV\u3092\u8aad\u307f\u8fbc\u3080"}}