{"cell_type":{"60ab2db3":"code","69ea6f30":"code","9922749b":"code","98fb3392":"code","0fbff69c":"code","26119f9a":"code","8a0f73e8":"code","eef98837":"code","0ebab0a2":"code","09f9b502":"code","7782617b":"code","76bd95f1":"code","c2d8b9a0":"code","2bdb3d33":"code","240a0f7d":"code","c845cd0d":"code","4a296f0e":"code","0093a4b9":"code","49e959e0":"code","22b8f76f":"code","8c9926a4":"code","70103c6b":"code","56df7bd4":"code","1d3bb1f4":"code","610f4600":"code","853281a3":"code","8edfddd2":"code","e14837b0":"code","3a462319":"code","2d09a459":"code","5ffef9f2":"code","6d56860a":"code","73646dd5":"code","6f41ec2a":"code","b8e4b38b":"code","0223bcc2":"code","4c596861":"code","8f6255bd":"code","649bd894":"code","ef6835e5":"code","f71f6aca":"code","d7d1242d":"code","49099fdf":"code","f5933db6":"code","7dffa4a3":"code","27caa4b0":"code","123d76a0":"code","775baf52":"code","d03e5bcc":"code","6b27c1c7":"markdown","d283d055":"markdown","44ebf81c":"markdown","f31bf26a":"markdown","42fc6dc0":"markdown","7357b2eb":"markdown","100e6deb":"markdown","1e26525f":"markdown","a8dd2a2b":"markdown","afdbe5ba":"markdown","afa07cce":"markdown","048b48b4":"markdown","e3f41a61":"markdown","b7fdfee8":"markdown","ab0add02":"markdown","23c450ba":"markdown","81ae097d":"markdown","c7ed9673":"markdown","f19b0d6f":"markdown","afede214":"markdown","f92c534e":"markdown","22c5a238":"markdown","7c9f5280":"markdown","2e12e40a":"markdown","851534d7":"markdown","a8a6c76c":"markdown","6a76599c":"markdown","afe9e833":"markdown","3611b56a":"markdown","8a71a9bf":"markdown","7909ac6e":"markdown"},"source":{"60ab2db3":"#Hello everyone,\n\n#As i have started my journey towards becoming an expert Data Scientist, i am very glad to present you  all my first piece of work.\n\n#Covid-19 Cases in India has been on a rise since past two months and it has become very necessary to analyze as well as predict the rise of Covid-19 Cases for the forthcoming months.\n\n#As the State of Maharashtra has seen a rapid increase of Covid-19 cases , i have focused on Prediction of Covid cases in Maharashtra for next two months.   \n\n#So here is my small piece of work where i have Predicted  Daily Covid-19 Newcases in Maharashtra  for the month of August and September.\n\n\n#I have also plotted some graphs showing: \n#1. First 10 states where the Total number of Confirmed Cases till date are the highest  \n#2. Total Number of Confirmed Cases  in Maharashtra for Every Month  (Bar Plot)\n#3.  Number of Newcases  Everyday  in Maharashtra (Time Series Plot)\n#4. Auto Correlation plot and Partial Auto Correlation plot\n#5. Actual vs Predicted Covid Cases Graph for the current time frame (Timeseries plot)\n#6. Actual vs Predicted Covid Cases Graph for future time frame (TimeSeries plot)\n#7. Daily Covid Expected New Cases in Maharashtra for the month August and September (Bar plot)\n#8. Total Number of Newases In Maharashtra for Month of August and September (Bar Plot)\n\n#Language Used : Python\n#Libraries Used : Pandas, Seaborn, Matplotlib, Numpy , Statsmodel, Sklearn\n#Model Used : Timeseries SARIMAX\n\n#As it is my first work with Timeseries Model i request you all to go through it.\n#Guidance on any modifications as well as new ideas for the model is welcomed.","69ea6f30":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as snd\n%matplotlib inline\nimport numpy as np\nimport calendar\nimport datetime\nimport matplotlib.dates as mdates\nimport statsmodels.api as sm\nimport statsmodels.tsa.api as smt\nimport statsmodels.formula.api as smf\nfrom io import StringIO\nfrom sklearn.metrics import mean_squared_error\nfrom pandas.tseries.offsets import DateOffset\nimport warnings as warn\nwarn.filterwarnings(\"ignore\")\nfrom matplotlib.dates import DateFormatter\npd.set_option('precision', 0)","9922749b":"dataindia=pd.read_csv(\"..\/input\/covid19-in-india\/covid_19_india.csv\")\ndataindia.head()","98fb3392":"dataindiag=dataindia[\"State\/UnionTerritory\"]\ndataindiag.value_counts()","0fbff69c":"total_case_india=dataindia[[\"State\/UnionTerritory\",\"Confirmed\"]]\ntotal_case_india=total_case_india.groupby([\"State\/UnionTerritory\"]).agg(\"max\").reset_index()","26119f9a":"total_case_india=total_case_india.sort_values(\"Confirmed\",ascending=False)","8a0f73e8":"plt.figure(figsize=(12,8))\nsnd.barplot(x='State\/UnionTerritory',y='Confirmed',data=total_case_india[:10])","eef98837":"dataindia=dataindia.drop([\"Time\",\"ConfirmedIndianNational\",\"ConfirmedForeignNational\",\"Sno\",\"Cured\",\"Deaths\"],axis=1)","0ebab0a2":"dataindia.head()","09f9b502":"indexNames = dataindia[ dataindia['State\/UnionTerritory'] != \"Maharashtra\" ].index\ndatamaha=dataindia.drop(indexNames)","7782617b":"datamaha.loc[97, \"Confirmed\"]=8\ndatamaha.head()","76bd95f1":"dates=pd.date_range(start=\"2020-03-09\",freq=\"D\",periods=len(datamaha))\ndatamaha[\"Month\"]=dates.month_name()\ndatamaha.head()","c2d8b9a0":"datamaha.set_index(dates,inplace=True)\ndatamaha=datamaha.drop([\"Date\"],axis=1)\ndatamaha.tail()","2bdb3d33":"Monthly_data=datamaha[[\"Month\",\"Confirmed\"]]\nMonthly_data=Monthly_data.groupby([\"Month\"]).agg(\"max\").reset_index()\nMonthly_data=Monthly_data.sort_values(\"Confirmed\",ascending=True)","240a0f7d":"Monthly_data","c845cd0d":"plt.figure(figsize=(7,5))\nsnd.barplot(x=\"Month\", y=\"Confirmed\",data=Monthly_data)","4a296f0e":"datamaha[\"Confirmed1\"]=datamaha[[\"Confirmed\"]]\ndatamaha[\"Confirmed1\"]=datamaha[\"Confirmed1\"].shift(1)\ndatamaha[\"Newcases\"]=datamaha[\"Confirmed\"] - datamaha[\"Confirmed1\"] \ndatamaha.head()","0093a4b9":"datamaha=datamaha.drop([\"Confirmed\",\"Confirmed1\"],axis=1)\ndatamaha.head()","49e959e0":"datamaha=datamaha.fillna(2)\ndatamaha[\"Newcases\"][datamaha[\"Newcases\"] < 0 ]= 1\ndatamaha.head(3)","22b8f76f":"from pandas.plotting import register_matplotlib_converters\nregister_matplotlib_converters()\nplt.figure(figsize=(10,5))\nplt.grid(axis='both', alpha=.3)\n#datamaha[\"Newcases\"].plot()\nplt.plot(datamaha[\"Newcases\"])\nplt.xlabel(\"Months\")\nplt.ylabel(\"Newcases\")","8c9926a4":"rolmean=datamaha[\"Newcases\"].rolling(window=12).mean()\nrolstd=datamaha[\"Newcases\"].rolling(window=12).std()","70103c6b":"plt.figure(figsize=(12,8))\nplt.plot(datamaha[\"Newcases\"],label='Newcases')\nplt.plot(rolmean,label=\"Rolling mean\")\nplt.plot(rolstd,label=\"Rolling Std\")\nplt.legend(loc=\"best\")\nplt.show(block=False)","56df7bd4":"decompostion=sm.tsa.seasonal_decompose(datamaha[\"Newcases\"])\nfig=decompostion.plot()","1d3bb1f4":"from statsmodels.tsa.stattools import adfuller ","610f4600":"stationary_result=adfuller(datamaha[\"Newcases\"])\n#print(stationary_result)","853281a3":"def stationfnct(stationary_result): \n    labels=[\"ADF test stat\",\"p-value\",\"Lags used\",\"no of obs\"]\n    for value,label in zip(stationary_result,labels):\n            print(label+\" : \"+str(value)) \n            \nstationfnct(stationary_result)            ","8edfddd2":"#adf_test=ADFTest(alpha=0.05)\n#adf_test.should_diff(datamaha[\"Newcases\"])\n","e14837b0":"datamaha[\"Differencing\"]=datamaha[\"Newcases\"]-datamaha[\"Newcases\"].shift(2)\ndatamaha=datamaha.dropna()\ndatamaha.head()","3a462319":"stationfnct(adfuller(datamaha[\"Differencing\"].dropna()))\nstationary_result=adfuller(datamaha[\"Differencing\"].dropna())\nprint(stationary_result)","2d09a459":"rolmean=datamaha[\"Differencing\"].rolling(window=12).mean()\nrolstd=datamaha[\"Differencing\"].rolling(window=12).std()\n","5ffef9f2":"plt.figure(figsize=(10,5))\nplt.grid(axis='both', alpha=.3)\nplt.plot(datamaha[\"Differencing\"],label=\"Newcases\")\nplt.plot(rolmean,label=\"Rolling mean\")\nplt.plot(rolstd,label=\"Rolling Std\")\nplt.xlabel(\"Months\")\nplt.ylabel(\"Newcases\")\nplt.legend(loc=\"best\")\nplt.show(block=False)","6d56860a":"from statsmodels.graphics.tsaplots import plot_acf,plot_pacf","73646dd5":"fig=plt.figure(figsize=(12,8))\nax1=fig.add_subplot(211)\nfig=sm.graphics.tsa.plot_acf(datamaha[\"Differencing\"].dropna(),lags=30,ax=ax1)\nax2=fig.add_subplot(212)\nfig=sm.graphics.tsa.plot_pacf(datamaha[\"Differencing\"].dropna(),lags=30,ax=ax2)","6f41ec2a":"#from pmdarima.arima import auto_arima\n\n#model = auto_arima(datamaha_train[\"Newcases\"], trace=True, error_action='ignore', suppress_warnings=True)\n#model.fit(datamaha_train[\"Newcases\"])\n\n#forecast = model.predict(n_periods=len(datamaha_test[\"log\"]))\n#forecast = pd.DataFrame(forecast,index = datamaha_test[\"log\"].index,columns=['Prediction'])\n\n#plot the predictions for validation set\n#plt.plot(datamaha_train[\"log\"], label='Train')\n#plt.plot(datamaha_test[\"log\"], label='Valid')\n#plt.plot(forecast, label='Prediction')\n#plt.show()","b8e4b38b":"model=sm.tsa.statespace.SARIMAX(datamaha[\"Newcases\"],order=(1,2,3),seasonal_order=(1,2,3,4))\nresultss=model.fit()","0223bcc2":"datamaha[\"Expected_NewCases\"]=resultss.predict(start=125,end=143,dynamic=True)\n#datamaha[[\"Expected_Cases\",\"Newcases\"]].plot(figsize=(12,8))\nplt.figure(figsize=(10,5))\nplt.grid(axis='both', alpha=.3)\n#plt.plot(datamaha[[\"Expected_Cases\",\"Newcases\"]])\nplt.plot(datamaha[\"Newcases\"],label=\"Newcases\")\nplt.plot(datamaha[\"Expected_NewCases\"],label=\"Predicted Covid Cases\")\nplt.legend(loc=\"best\")\nplt.xlabel(\"Months\")\nplt.ylabel(\"Newcases\")","4c596861":"future_dates=[datamaha.index[-1] + DateOffset(days=x) for x in range(0,60)]\nfuture_dateset=pd.DataFrame(index=(future_dates[1:]),columns=datamaha.columns)","8f6255bd":"futureisreal=pd.concat([datamaha,future_dateset])","649bd894":"plt.figure(figsize=(10,5))\nplt.grid(axis='both', alpha=.3)\n#datamaha[\"Newcases\"].plot()\n#plt.plot(datamaha[\"Newcases\"])\nfutureisreal[\"Expected_NewCases\"]=resultss.predict(start=144,end=207)\nplt.plot(futureisreal[\"Newcases\"],label=\"Present Cases\")\nplt.plot(futureisreal[\"Expected_NewCases\"],label=\"Expected Covid Cases\")\nplt.legend(loc=\"best\")\n#plt.plot(futureisreal[[\"Expected_Cases\",\"Present\"]])\nplt.xlabel(\"Months\")\nplt.ylabel(\"Newcases\")","ef6835e5":"futureisreal=futureisreal.drop([\"Differencing\",\"Newcases\"],axis=1)","f71f6aca":"futureisreal=futureisreal[\"2020-08-03\":]","d7d1242d":"datess=pd.date_range(start=\"2020-08-03\",freq=\"D\",periods=len(futureisreal))","49099fdf":"futureisreal[\"State\/UnionTerritory\"]=\"Maharashtra\"\nfutureisreal[\"Month\"]=datess.month_name()\nfutureisreal[\"Day\"]=datess.day\nfutureisreal['date'] = futureisreal['Day'].map(str)+'-'+futureisreal['Month'].map(str)","f5933db6":"futureisreal[[\"date\",\"Expected_NewCases\"]].head(10)","7dffa4a3":"futureisreal[[\"date\",\"Expected_NewCases\"]].tail()","27caa4b0":"f, axes = plt.subplots(2,1, figsize=(30, 10))\n\n#futureisreal[['Expected_NewCases',\"date\"]].sort_index()[:30].plot.bar()\nsnd.barplot(x='date',y='Expected_NewCases',orient='v',color=\"red\",data=futureisreal[0:29],ax=axes[0])\nplt.tight_layout()\nsnd.barplot(x='date',y='Expected_NewCases',orient='v',color=\"blue\",data=futureisreal[29:60],ax=axes[1])\nplt.tight_layout()","123d76a0":"Monthly_future_data=futureisreal[[\"Month\",\"Expected_NewCases\"]]\nMonthly_future_data=Monthly_future_data.groupby([\"Month\"]).agg(sum).reset_index()\n#Monthly_data=Monthly_data.sort_values(\"Confirmed\",ascending=True)","775baf52":"Monthly_future_data.head()","d03e5bcc":"plt.figure(figsize=(7,5))\nsnd.barplot(x=\"Month\", y=\"Expected_NewCases\",data=Monthly_future_data)\n","6b27c1c7":"# Total Number of Newases In the Month of August and September","d283d055":"### Lets create a function ","44ebf81c":"# as we will work on Newcases ,we can remove the other unwanted columns","f31bf26a":"#p=1 or 2\n\n#q= 2 or 3\n\n#d=2 (how many times we shifted)","42fc6dc0":"# Importing 60 Future days and concatenating our main data set with it","7357b2eb":"# Converting non stationary series to stationary through differencing.","100e6deb":"# Dropping columns that we dont want","1e26525f":"# Now we have a stationary time series","a8dd2a2b":"# Expected Covid Cases for Next 2 Months","afdbe5ba":"# To obtain AR(p) , MA(q) values, we perform acf and pcf","afa07cce":"# Parsing dates and extracting Month name","048b48b4":"## plotting the rise in covid cases in Maharastra","e3f41a61":"# Lets check whether our time series is stationary or not with Dicky fuller Test","b7fdfee8":"# Creating a new column with 1 shift so that we can subtract the confirmed cases with the earlier date to get the new cases every day","ab0add02":"# First 10 states where the Total number of Confirmed Cases till date are the highest","23c450ba":"# Checking stationarity with Auto.Arima","81ae097d":"## calculating rolling mean and rolling standard deviation","c7ed9673":"# Bar Graph for  Expected Daily Covid New Cases In Maharashtra for months August and September ","f19b0d6f":"#  Total Number of Confirmed Cases  in Maharashtra for Every Month","afede214":"# Decompostion of timeseries","f92c534e":"# adfuller gives us below values \n1.ADF test stat\n\n2.p-value\n\n3.Lags used\n\n4.Number of obs\n","22c5a238":"# Expected Daily Covid New Cases In Maharashtra for Months August and September ","7c9f5280":"# Auto correlation and Partial auto correlation","2e12e40a":"# We want to do our forecasting for state Maharashtra.. so removing all other states","851534d7":"# Fitting the model with seasonal ARIMAX","a8a6c76c":"# States Affected","6a76599c":"## Again testing for stationarity with the above created function","afe9e833":"## changing confirmed value in third row ","3611b56a":"# Actual vs Predicted Graph","8a71a9bf":"## Replace NAN value with 2 as cases on first day were 2 and replacing negative values with 1","7909ac6e":"# Setting dates as Index to get datetimeindex and Removing Date column\n"}}