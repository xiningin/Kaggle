{"cell_type":{"57f57aa1":"code","8e6cdafe":"code","eab8f48a":"code","db251e98":"code","bb65722e":"code","72b1d4ee":"code","d89ba1ce":"code","e5cd77ba":"code","25215eb5":"code","5d483c6e":"code","54fd3497":"code","e608acb2":"code","8a4a9e86":"code","9880ceff":"code","af7c3f34":"code","ab9937c2":"code","27f6ad26":"code","8b5e3655":"code","c660011b":"markdown","17d66c20":"markdown","f13e4eaf":"markdown","305660f5":"markdown","9f69c9bc":"markdown","2efb11f1":"markdown","80ffbb8f":"markdown","db1e10ed":"markdown","45c677dd":"markdown"},"source":{"57f57aa1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8e6cdafe":"#Loading required liabraries\nimport pandas as pd\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nimport numpy as np\n","eab8f48a":"# Loading the ipl matches dataset\n\nipl=pd.read_csv('\/kaggle\/input\/ipl-dataset-season-2017\/matches.csv')","db251e98":"ipl.shape","bb65722e":"#first five records of the element\nipl.head()\n","72b1d4ee":"ipl['player_of_match'].value_counts()[0:10]","d89ba1ce":"\nnames=list(ipl['player_of_match'].value_counts()[0:10].keys())\nAwards=list(ipl['player_of_match'].value_counts()[0:10])\nplt.figure(figsize=(8,5))\nplt.bar(names,Awards,color=\"olive\")\nplt.xticks(rotation=45, ha = 'right')\nplt.title(\"Highest Man of the match\")\nplt.xlabel(\"Players\")","e5cd77ba":"x=ipl['toss_winner'].value_counts()\ndicto=x.to_dict()\ndf=pd.DataFrame({'Name':dicto.keys(),'Toss_won':dicto.values()})\nsns.barplot(x=\"Name\",y=\"Toss_won\",data=df,palette=\"rocket\")\nplt.xticks(rotation=90,ha=\"right\")\nplt.show()","25215eb5":"batting_first=ipl[ipl['win_by_runs']!=0]\nbatting_first.head()","5d483c6e":"plt.figure(figsize=(6,5))\nplt.hist(batting_first['win_by_runs'],color=\"orange\")\nplt.title(\"Distribution of runs\")\nplt.xlabel(\"Runs\")\nplt.ylabel(\"Matches\")\nplt.show()","54fd3497":"y=batting_first['winner'].value_counts()\nwinners=y.to_dict()\ndf1=pd.DataFrame({'Teams':winners.keys(),'Wins':winners.values()})\nsns.barplot(x=\"Teams\",y=\"Wins\",data=df1,palette=\"Set1\")\nplt.xticks(rotation=90,ha=\"right\")\nplt.show()","e608acb2":"#By perchantage\nplt.pie(df1[\"Wins\"],labels=df1[\"Teams\"],autopct='%0.1f%%',radius=3.5)\n\nplt.show()","8a4a9e86":"bowling_first=ipl[ipl['win_by_wickets']!=0]\nbowling_first.head()","9880ceff":"#histogram\nplt.hist(bowling_first['win_by_wickets'],color=\"green\",bins=30)\nplt.title(\"Distribution of wickets\")\nplt.xlabel(\"Wickets\")\nplt.ylabel(\"Matches\")\nplt.show()","af7c3f34":"z=bowling_first['winner'].value_counts()\nwinner=z.to_dict()\ndf2=pd.DataFrame({'Teams':winner.keys(),'Matches':winner.values()})\nsns.barplot(x=\"Teams\",y=\"Matches\",data=df2,palette=\"dark\")\nplt.xticks(rotation=90,ha=\"right\")\nplt.show()","ab9937c2":"#pie chart\nplt.pie(df2[\"Matches\"],labels=df1[\"Teams\"],autopct='%0.1f%%',radius=3.5)\nplt.show()","27f6ad26":"n=np.sum(ipl['toss_winner']==ipl['winner'])\npercentage=(n\/696)*100\npercentage","8b5e3655":"Teams=ipl[ipl['toss_winner']==ipl['winner']]\nipl['winner'].value_counts()","c660011b":"TOP 10 PLAYERS WITH MOST MAN OF THE MATCH AWARDS","17d66c20":"Teams who no. of times win toss and match as well ","f13e4eaf":"Higest No. of toss winner w.r.t. each team","305660f5":"Extracting the record where teams win after taking bowling first","9f69c9bc":"Getting top 10 with most man of the match","2efb11f1":"Teams with highest no. of winning match by taking batting first","80ffbb8f":"Teams with highest no. of winning match by taking bowling first","db1e10ed":"Extracting and plotting the records where a team won who took batting first","45c677dd":"No. of teams win toss as well match"}}