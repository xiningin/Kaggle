{"cell_type":{"d520aa50":"code","8f6d30e2":"code","947771b6":"code","1f8df443":"code","86319a82":"code","412f96e5":"code","5af77a9e":"code","c109338f":"code","1f575f17":"code","e2de94a4":"code","1af5bbe8":"code","7606ed19":"code","a69be9ab":"code","94ec7a0b":"code","b88d26de":"code","4ed187aa":"code","46c8992a":"code","1cfae7eb":"code","f567c846":"code","79c3a6c7":"code","f6a2e0c6":"code","c58eed11":"markdown","9bb79d77":"markdown","48669a16":"markdown","fd6c09c9":"markdown","4d558bbe":"markdown"},"source":{"d520aa50":"import numpy as np\nimport pandas as pd\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom pathlib import Path\ninput_path = Path('\/kaggle\/input\/tabular-playground-series-jan-2021\/')","8f6d30e2":"#Dataset con los datos de entrenamiento\n\ntrain = pd.read_csv(input_path \/ 'train.csv', index_col='id')\ntrain.head()","947771b6":"#Dataset con los datos de testing\n\ntest = pd.read_csv(input_path \/ 'test.csv', index_col='id')\ntrain.head()","1f8df443":"train.info()","86319a82":"test.info()","412f96e5":"#Tama\u00f1o del dataset (cantidad de filas y columnas)\n\ntrain.shape","5af77a9e":"test.shape","c109338f":"#Cantidad de datos del dataset\n\ntrain.size","1f575f17":"test.size","e2de94a4":"#Verfico la presencia de Nulos en los datos de cada columnas.\n#Esto tambien se observo en train.info() \/ test.info()\n\ntrain.isnull().sum()","1af5bbe8":"test.isnull().sum()","7606ed19":"#Verifico la existencia de filas duplicadas\n\ntrain.duplicated().sum()","a69be9ab":"test.duplicated().sum()","94ec7a0b":"#Observo para cada columna la cantidad de datos unicos\n\ntrain.nunique()","b88d26de":"test.nunique()","4ed187aa":"#Genero una variable con el nombre de las columnas\n\ncolumnas_train = train.columns\ncolumnas_test = test.columns","46c8992a":"def grafico_distribucion(columna1,columna2):\n    \n    import random\n    \n    paleta = sns.color_palette()\n    color = random.choice(paleta)\n\n    fig, ax = plt.subplots(1,2,sharex=True, figsize=(10,5))\n    sns.distplot(columna1.values, color=color,ax=ax[0])\n    sns.distplot(columna2.values, color=color,ax=ax[1])\n    \n    fig.suptitle('Distribucion valores numericos columna: '+ i,fontsize=14)\n    \n    ax[0].set_title(\"Train\", fontsize=12)\n    ax[0].set_xlabel(\"Cantidad\",fontsize=10)\n    ax[0].set_ylabel(\"Valor\",fontsize=10)\n    \n    ax[1].set_title(\"Test\", fontsize=12)\n    ax[1].set_xlabel(\"Cantidad\",fontsize=10)\n    ax[1].set_ylabel(\"Valor\",fontsize=10) \n    \n    plt.show()","1cfae7eb":"#Grafico las distribuciones para las columnas de test\n\nfor i in columnas_test:\n    columna1 = train[i]\n    columna2 = test[i]\n    \n    grafico_distribucion(columna1,columna2)","f567c846":"correlacion_train = train.corr()\ncorrelacion_train","79c3a6c7":"correlacion_test = test.corr()\ncorrelacion_test","f6a2e0c6":"fig, ax = plt.subplots(1,2, figsize=(20,8))\nsns.heatmap(correlacion_train.corr(),ax=ax[0])\nsns.heatmap(correlacion_test.corr(),ax=ax[1])\n    \nfig.suptitle('Mapa de correlacion para train y test',fontsize=18)\n    \nax[0].set_title(\"Train\", fontsize=14)\n    \nax[1].set_title(\"Test\", fontsize=14)\n\n    \nplt.show()","c58eed11":"## 3.1 Correlacion","9bb79d77":"Segun se observa el dataset de entrenamiento tiene 300000 filas\nA su vez esta compuesto por 15 columnas, 14 correspondientes a los features y una correspondiente al target","48669a16":"# 2. Estructura general: Dataset de entrenamiento \/ Dataset de testing","fd6c09c9":"# 3. Distribucion de valores numericos en columnas","4d558bbe":"# 1. Librerias a utilizar"}}