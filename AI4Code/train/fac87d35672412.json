{"cell_type":{"2e146f6d":"code","5bc43489":"code","73e17031":"code","adbaead8":"code","dbcb5bbc":"code","0d059357":"code","3dcb8993":"code","ba2b08f2":"code","ba42ade3":"code","600f3eee":"code","ee9ae3b7":"code","53319b94":"code","70a33bfe":"code","6cee6cf7":"markdown","99d03ac3":"markdown","665f6aea":"markdown","df7d5acf":"markdown","0964075d":"markdown","e99b12d9":"markdown","8982b498":"markdown","5596ceea":"markdown","d85e6079":"markdown","94ca599d":"markdown"},"source":{"2e146f6d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport warnings\n# filter warnings\nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\/Sign-language-digits-dataset\"))\n\n# Any results you write to the current directory are saved as output.","5bc43489":"x_l = np.load('..\/input\/Sign-language-digits-dataset\/X.npy')\nY_l = np.load('..\/input\/Sign-language-digits-dataset\/Y.npy')","73e17031":"import matplotlib.pyplot as plt\nimg_size = 64\n\n\nplt.subplot(1,2,1)\nplt.imshow(x_l[300].reshape(img_size, img_size))\nplt.axis('off')\nplt.subplot(1,2,2)\nplt.imshow(x_l[990].reshape(img_size, img_size))\nplt.axis('off')","adbaead8":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x_l,Y_l,test_size=0.15,random_state=78)\nx_train = x_train.reshape(-1,64,64,1) #(64,64,1)\nx_test = x_test.reshape(-1,64,64,1)    #(64,64,1)\nprint(\"x_train shape : \", x_train.shape)\nprint(\"y_train shape : \", y_train.shape)","dbcb5bbc":"from sklearn.metrics import confusion_matrix\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPool2D\nfrom keras.optimizers import Adam","0d059357":"model = Sequential() #model olu\u015fturmak i\u00e7in kullan\u0131lan yap\u0131\n#24 adet filter olacak filter'in boyutu (5,5) veri kayb\u0131n\u0131 \u00f6nlemek i\u00e7in Same aktivasyon relu \nmodel.add(Conv2D(filters=24, kernel_size= (5,5),padding= 'Same',\n                 activation='relu', input_shape = (64,64,1))) \n# (2,2) matrislerdeki en y\u00fcksek de\u011feri se\u00e7\nmodel.add(MaxPool2D(pool_size=(2,2)))\n# n\u00f6ronlar\u0131n %25 ini kapat rastgelelik arts\u0131n diye\nmodel.add(Dropout(0.25))","3dcb8993":"model.add(Conv2D(filters=32, kernel_size= (4,4),padding= 'Same',\n                 activation='relu')) \n# (2,2) matrislerdeki en y\u00fcksek de\u011feri se\u00e7 (2,2) lik atlamalar yaparak\nmodel.add(MaxPool2D(pool_size=(2,2), strides=(2,2)))\n# n\u00f6ronlar\u0131n %25 ini kapat rastgelelik arts\u0131n diye\nmodel.add(Dropout(0.25))","ba2b08f2":"model.add(Flatten())\nmodel.add(Dense(256, activation='relu'))\n#model.add(Dense(256, activation='relu'))\nmodel.add(Dropout(0.5))\n#model.add(Dense(128, activation='relu'))\n#softmax geli\u015ftirilmi\u015f sigmoid fonk sadece binary deil \u00e7oklu s\u0131n\u0131fland\u0131rmada yapabiliyorr\nmodel.add(Dense(10,activation='softmax'))","ba42ade3":"optimizer = Adam(lr = 0.001, beta_1 = 0.9, beta_2 = 0.999)\n","600f3eee":"model.compile(optimizer=optimizer, loss= 'categorical_crossentropy', metrics=['accuracy'])\n","ee9ae3b7":"history = model.fit(x_train, y_train, epochs=10, batch_size=300, validation_data=(x_test,y_test))\n","53319b94":"plt.plot(history.history['val_loss'], color='b', label=\"validation loss\")\nplt.title(\"Test Loss\")\nplt.xlabel(\"Number of Epochs\")\nplt.ylabel(\"Loss\")\nplt.legend()\nplt.show(1)","70a33bfe":"import seaborn as sns\n# test verisi modele i\u015flenerek \u00e7\u0131kt\u0131lar elde edilir\nY_pred = model.predict(x_test)\n# \u00fcretilen \u00e7\u0131kt\u0131lar tek boyuta indirgenir \nY_pred_classes = np.argmax(Y_pred,axis = 1) \n# olmas\u0131 gereken \u00e7\u0131kt\u0131lar tek boyuta indirgenir\nY_true = np.argmax(y_test,axis = 1) \n# confusion matrix i\u00e7eri\u011fi tan\u0131mlan\u0131r\nconfusion_mtx = confusion_matrix(Y_true, Y_pred_classes) \n# confusion matrix \u00e7izilir\nf,ax = plt.subplots(figsize=(8, 8))\nsns.heatmap(confusion_mtx, annot=True, linewidths=0.01,cmap=\"Greens\",linecolor=\"gray\", fmt= '.1f',ax=ax)\nplt.xlabel(\"Predicted Label\")\nplt.ylabel(\"True Label\")\nplt.title(\"Confusion Matrix\")\nplt.show()\n","6cee6cf7":"**Full Connection**\n\n\n\n<a href=\"https:\/\/ibb.co\/hsS14p\"><img src=\"https:\/\/preview.ibb.co\/evzsAU\/fullyc.jpg\" alt=\"fullyc\" border=\"0\"><\/a>","99d03ac3":"**Adam Optimizer**\n\n* \u00d6\u011frenme oran\u0131n\u0131 sabit b\u0131rakmak yerine cost'a g\u00f6re ayarlamay\u0131 olanak sa\u011flayan bir optimizerdir.\n\n* Bu \u00f6rnekde kullan\u0131lan de\u011ferler genel olarak g\u00f6r\u00fcnt\u00fc i\u015flemede kullan\u0131lan de\u011ferler ile yap\u0131lm\u0131\u015ft\u0131r.\nhttps:\/\/machinelearningmastery.com\/adam-optimization-algorithm-for-deep-learning\/ \n","665f6aea":"**Convolition Layer**\n* Feature(\u00f6zellik) bulmaya yarayan yap\u0131d\u0131r.\n* 3x3 2x2 5x5 4x4 gibi istenilen matris boyutlar\u0131nda ayarlanarak \u00f6zellik \u00e7\u0131kar\u0131m\u0131na yard\u0131mc\u0131 olur.\n* Karma\u015f\u0131k veya basit \u015fekilleri saptayarak onlardan \u00f6zellik \u00e7\u0131kar\u0131m\u0131 yapar.\n* Stride matris'in ne kadar atlayarak tarama yapaca\u011f\u0131n\u0131n se\u00e7imini sa\u011flar.\n* Same Padding resmin boyutu her filtere girdi\u011finde k\u00fc\u00e7\u00fclece\u011finden bunu \u00f6nlemek i\u00e7im padding i\u015flemi yap\u0131l\u0131r. Bu sayede boyut sabit kal\u0131r eksilen yerler 0(s\u0131f\u0131r) ile doldurulur.    \n    \n\n<a href=\"https:\/\/imgbb.com\/\"><img src=\"https:\/\/image.ibb.co\/m4FQC9\/gec.jpg\" alt=\"gec\" border=\"0\"><\/a>\n\n<a href=\"https:\/\/ibb.co\/jUPkUp\"><img src=\"https:\/\/preview.ibb.co\/noH5Up\/padding.jpg\" alt=\"padding\" border=\"0\"><\/a>\n\n*ReLU*\n* Bir Aktivasyon fonksiyodur. E\u011fitimin h\u0131z\u0131n\u0131 artt\u0131rmak i\u00e7in kullan\u0131l\u0131r.\n<a href=\"https:\/\/ibb.co\/mVZih9\"><img src=\"https:\/\/preview.ibb.co\/gbcQvU\/RELU.jpg\" alt=\"RELU\" border=\"0\"><\/a>\n\n*Softmax*\n* Sigmoid fonksiyona \u00e7ok benzeyen bir fonksiyondur.\n* En \u00f6nemli fark\u0131 sigmoid fonksiyonu gibi ikiden fazla s\u0131n\u0131flamak gereken durumlarda \u00f6zellikle derin \u00f6\u011frenme modellerinin \u00e7\u0131k\u0131\u015f katman\u0131nda tercih edilmektedir.\n* Girdi de\u011ferinin hangi s\u0131n\u0131fa dahil oldu\u011funu 0-1 aras\u0131nda bir oranla g\u00f6sterir.\n<a href=\"https:\/\/www.youtube.com\/watch?v=lvNdl7yg4Pg\"><img src=\"https:\/\/i.ytimg.com\/vi\/lvNdl7yg4Pg\/maxresdefault.jpg\" alt=\"RELU\" border=\"0\"><\/a>\n\n*https:\/\/medium.com\/deep-learning-turkiye\/derin-%C3%B6%C4%9Frenme-i%C3%A7in-aktivasyon-fonksiyonlar%C4%B1n%C4%B1n-kar%C5%9F%C4%B1la%C5%9Ft%C4%B1r%C4%B1lmas%C4%B1-cee17fd1d9cd*\n","df7d5acf":"**Veri Setinin Y\u00fcklenmesi**\nKullan\u0131lacak veri seti ve sonu\u00e7 de\u011ferleri x_l ve Y_l atamalar\u0131 yap\u0131lm\u0131\u015ft\u0131r.\nNormalizasyon i\u015flemi uygulanm\u0131\u015f veri setidir. Bu sebeble normalizasyon i\u015flemi uygulanmam\u0131\u015ft\u0131r.","0964075d":"**Concolutional Neural Network(CNN)**\n\n\n* Resim tan\u0131ma ve obje tan\u0131mada kullan\u0131lan bir y\u00f6ntemdir.\n<a href=\"https:\/\/ibb.co\/kV1j9p\"><img src=\"https:\/\/preview.ibb.co\/nRkBpp\/gec2.jpg\" alt=\"gec2\" border=\"0\"><\/a>\n","e99b12d9":"**Test ve Train olarak veri setinin b\u00f6l\u00fcnmesi**\nToplam veri setinin %15 i test\n                    %85 i train olarak ayarlanm\u0131\u015ft\u0131r.\n                    \nKeras kullan\u0131ld\u0131\u011f\u0131 i\u00e7in x_train ve t_test 3 boyutlu olmas\u0131 gerekti\u011fi i\u00e7in reshape yap\u0131lm\u0131\u015ft\u0131r.\n\n*Y_train = to_categorical(Y_train, num_classes = 10)*\nkullan\u0131lmam\u0131\u015ft\u0131r. Kullan\u0131lan veri seti buna uygun halde oldu\u011fu i\u00e7in","8982b498":"***Flatten***\n\n<a href=\"https:\/\/imgbb.com\/\"><img src=\"https:\/\/image.ibb.co\/c7eVvU\/flattenigng.jpg\" alt=\"flattenigng\" border=\"0\"><\/a>","5596ceea":"*categorical_crossentropy*\n\n    * S\u0131n\u0131fland\u0131rmada 10 adet farkl\u0131 s\u0131n\u0131f oldu\u011fundan kullan\u0131lm\u0131\u015ft\u0131r. \n<a href=\"https:\/\/ibb.co\/jm1bpp\"><img src=\"https:\/\/preview.ibb.co\/nN3ZaU\/cce.jpg\" alt=\"cce\" border=\"0\"><\/a>","d85e6079":"**Polling Layer**\n\n*Max Polling*\n* Veri i\u015fleme h\u0131z\u0131n\u0131 artt\u0131rmak i\u00e7in  2x2 3x3 4x4 gibi matris de\u011ferleri olu\u015fturarak veri \u00fczerini gezilir ve  bu matris aral\u0131\u011f\u0131ndaki en y\u00fcksek de\u011fer \u00e7\u0131k\u0131\u015f olarak al\u0131n\u0131r.\n* Bu hem veri i\u015fleme h\u0131z\u0131n\u0131 artt\u0131r\u0131yor hem de over-fitting'i engelliyor.\n<a href=\"https:\/\/ibb.co\/ckTjN9\"><img src=\"https:\/\/preview.ibb.co\/gsNYFU\/maxpool.jpg\" alt=\"maxpool\" border=\"0\"><\/a>\n","94ca599d":"**CNN de kullan\u0131lan yap\u0131lar**\n1. Feature Maps\n    * Filter kullan\u0131larak elde edilen ay\u0131rt edici \u00f6zelliklerinin belirlenmesini sa\u011flar.\n2. Pooling Layer\n    * Elde edilen ay\u0131rt edici \u00f6zelliklerin en y\u00fcksek de\u011ferlerinin tutulmas\u0131n\u0131 sa\u011flar. Bu sayede h\u0131z art\u0131\u015f\u0131 olur.\n    * Ayr\u0131ca Over-fitting 'i de \u00f6nlemeye yar\u0131yor.\n3. Flatten\n    * Modelden \u00e7\u0131kan 4 boyutlu veriyi 2 boyutlu olacak \u015fekilde d\u00fczenler.\n    * Sinir A\u011f\u0131na girdi olarak verilebilmesi i\u00e7in veriyi haz\u0131rlar.\n"}}