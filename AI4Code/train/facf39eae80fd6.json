{"cell_type":{"f7162655":"code","7b454b29":"code","20c6cb5d":"code","f72fe82e":"code","50306aae":"code","72726ea9":"code","9b244880":"code","0a321b4d":"code","4fc2a150":"code","b55dd20d":"code","f6d2b36e":"code","2378f981":"code","25cbca98":"code","debb0053":"code","f7eae7fc":"code","3242507f":"code","4df572ac":"code","5c00fff3":"code","6cb71c78":"code","18464563":"code","8efca4a5":"code","300ebdf8":"code","93fb7009":"code","e4e7203e":"code","25096529":"code","32e11a23":"code","3946bff3":"code","867c573c":"code","0705087d":"code","9c055d7d":"code","4dddc82e":"code","04054724":"code","db34d419":"code","feeedd22":"code","a8891aa6":"code","74899ada":"code","5bbebc99":"code","288b530e":"code","59c68576":"code","9d4c7407":"code","f78d6826":"code","59785412":"code","63677b42":"code","497ab946":"code","e1a08378":"code","c14983f9":"code","7664a160":"code","991bc1e2":"code","0758f456":"code","2f4f157d":"code","ece72e04":"code","5baf7eb2":"code","7c32af4c":"code","02bde983":"code","eb099ec0":"code","4e990c4a":"code","74bf6943":"code","02c24f46":"code","2a21fbbd":"code","b1d177e8":"code","c8f8b6a7":"code","aa62d70c":"code","3f8b3d89":"code","08369834":"code","c12056c8":"code","c211aba0":"code","27b38a11":"code","1814b5df":"code","fdb1e6ca":"code","6faf77ac":"code","85052f83":"code","abea3f9c":"code","a2436dab":"code","6c0a197d":"code","bebf96e1":"code","d772fb0b":"code","a33c6be6":"code","ec25c48e":"code","3f17f37f":"code","e2e28844":"markdown","25088319":"markdown","6abd1558":"markdown","6a6bbfb1":"markdown","fd779375":"markdown","13c964ec":"markdown","fc08d592":"markdown","0f1a4d20":"markdown","fdf01779":"markdown","9b31e19b":"markdown","ee38dd5c":"markdown","512e59bc":"markdown","bf66ecf8":"markdown","93f85bcb":"markdown","e4686425":"markdown","7db4f1bc":"markdown","34543b6a":"markdown","6f66a86c":"markdown","18c3f80b":"markdown","808b5342":"markdown","4cea8d60":"markdown","a4788e3c":"markdown","40f93f72":"markdown","2e40677f":"markdown","0877736e":"markdown","5c497e09":"markdown","e0eb94bc":"markdown","12cc58ff":"markdown","e3019bff":"markdown","69aaa55c":"markdown","b9fd84ec":"markdown","020683b5":"markdown","fdecbbb4":"markdown","4b5857d6":"markdown","15170845":"markdown","f2187af1":"markdown","83532edc":"markdown","bb38c6a5":"markdown","5c035aa9":"markdown","99bcc8e1":"markdown","419f5363":"markdown","49c99e05":"markdown","3f231389":"markdown","86c2e602":"markdown","5a4969de":"markdown","20c36e61":"markdown","2b2f32af":"markdown","4a19b3ee":"markdown","656a5140":"markdown","f694b1a8":"markdown","3ed6a791":"markdown","b45d5efc":"markdown","59fa1d6b":"markdown","acbd0dd3":"markdown","31fdf306":"markdown","d2b35f13":"markdown","de2c5758":"markdown","7ddac27e":"markdown","efb7bb78":"markdown","26983327":"markdown","13587f08":"markdown","f8b50d48":"markdown","8e9ae1f6":"markdown","2582dd36":"markdown","39798ee4":"markdown","8a1f5862":"markdown","ae25da84":"markdown","1f965d7a":"markdown","ef005168":"markdown","a051af15":"markdown","5e3104de":"markdown","610a9b72":"markdown","99f31d99":"markdown","54bc5ee2":"markdown","40637d9e":"markdown","82e794f8":"markdown","e17a6a41":"markdown","d4ac38e0":"markdown","fdfe5b4f":"markdown","21fe4efd":"markdown","3cd0ac34":"markdown","75a07182":"markdown","3eda2ac1":"markdown","2b4c54c4":"markdown","a936bf20":"markdown","b722bc57":"markdown","49fabe3f":"markdown","e2c414a3":"markdown","f6672c75":"markdown","d23e23bb":"markdown","da0a0348":"markdown","11b1721b":"markdown","fa983169":"markdown","f09a4f8f":"markdown","dc26cfbb":"markdown","1cc88a60":"markdown","2f9d6c37":"markdown","4a0b5b16":"markdown","f40058b0":"markdown","bd06b78f":"markdown","8948e18a":"markdown","4947b8a0":"markdown","f65ba507":"markdown","0cbbb808":"markdown","5298b585":"markdown","40e01cfc":"markdown","dc081ceb":"markdown","16b911e5":"markdown","b0837089":"markdown","56249e62":"markdown"},"source":{"f7162655":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nfrom scipy.stats import norm\nfrom sklearn.preprocessing import StandardScaler , LabelEncoder\nfrom scipy import stats\nimport warnings\nimport keras\nimport random\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nfrom sklearn.metrics import (roc_auc_score, roc_curve)\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn import preprocessing\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.tree import DecisionTreeClassifier # Import Decision Tree Classifier\nfrom sklearn import metrics #Import scikit-learn metrics module for accuracy calculation\nfrom sklearn.metrics import confusion_matrix \nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import classification_report \nfrom sklearn.model_selection import GridSearchCV\nfrom scipy.stats import chi2_contingency\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import precision_score, \\\n    recall_score, confusion_matrix, classification_report, \\\n    accuracy_score, f1_score\nfrom sklearn.neighbors import KNeighborsClassifier\n","7b454b29":"'''#read train and test dataset\ndf = pd.read_csv(\"\/content\/drive\/Shared drives\/Data Science\/train.csv\")\n\n#drop id column\ndf = df.drop(['ID'],axis=1)\n\nX  = df.iloc[:,:-1] #drop the last column\ny = df.iloc[:,-1] #choose the last column\n\nXtrain , Xtest , ytrain , ytest  = train_test_split(X,y,test_size=0.2, random_state=2)\n\nprint('There are {} samples in the training set and {} samples in the test set.'.format(\nXtrain.shape[0] , Xtest.shape[0]))\nprint()'''","20c6cb5d":"#read train and test dataset\ndf1 = pd.read_csv(\"..\/input\/datasetfolders\/train.csv\")\n\n#drop id column in order to prevent data leakage\ndf1 = df1.drop(['ID'],axis=1)\n\ndf2 = pd.read_csv(\"..\/input\/datasetfolders\/bank.csv\" , sep=';' , engine='python')\ndf2.rename(columns={'y': 'subscribed'} , inplace = True)\n\n#concat 2 datsets\nX = pd.concat([df1,df2], ignore_index=False)\nX = X.drop_duplicates()\nX.head()\n\nno_sub = X[X['subscribed'] == 'no'].index\n\ncount = 0;\nsampling = []\nfor x in no_sub:\n  if(count % 2 == 0):\n    sampling.append(x)\n  count = count + 1\n\nX.drop(sampling,inplace=True)\n\nno_sub = X[X['subscribed'] == 'no'].index\n\ncount = 0;\nsampling = []\nfor x in no_sub:\n  if(count % 2 == 0):\n    sampling.append(x)\n  count = count + 1\n\nX.drop(sampling,inplace=True)\n\nprint(X['subscribed'].value_counts())\n\ntrain , test = train_test_split(X,test_size=0.2, random_state=6)\n\n#train dataset\nXtrain = train.iloc[:,:-1] #drop the last column\nytrain = train.iloc[:,-1] #choose the last column\n\n#test dataset\nXtest = test.iloc[:,:-1] #drop the last column\nytest = test.iloc[:,-1] #choose the last column\n\nprint('There are {} samples in the training set and {} samples in the test set.'.format(\nXtrain.shape[0] , Xtest.shape[0]))\nprint()","f72fe82e":"Xtrain.head()","50306aae":"#to identify numerical and categorical data\nXtrain.info()","72726ea9":"plt.figure(figsize=(20,10))\nsns.heatmap(Xtrain.corr(),annot = True)","9b244880":"# desciptive analysis for numerical columns\nXtrain.describe()","0a321b4d":"#visualize the data distribution of numerical data\n\nXtrain[['age','balance','day','duration','campaign','pdays','previous']].hist(bins=15, figsize=(15, 6), layout=(2, 4));","4fc2a150":"def bivariate_distribution(title):\n  train = pd.concat([Xtrain,ytrain],axis=1)\n\n  sns.FacetGrid(train,hue='subscribed' ,size=5 ).map(sns.distplot,title).add_legend()\n\n","b55dd20d":"bivariate_distribution('age')","f6d2b36e":"bivariate_distribution('balance')","2378f981":"bivariate_distribution('campaign')","25cbca98":"bivariate_distribution('day')","debb0053":"bivariate_distribution('duration')","f7eae7fc":"bivariate_distribution('pdays')","3242507f":"bivariate_distribution('previous')","4df572ac":"def explore_categorical_column(title):\n  train = pd.concat([Xtrain,ytrain],axis=1)\n\n  sns.catplot(x=title,kind='count', hue=\"subscribed\", palette='pastel', data=train)","5c00fff3":"explore_categorical_column(\"job\")\n\njob_train = pd.crosstab(Xtrain.job,ytrain)\nprint(job_train)","6cb71c78":"explore_categorical_column(\"marital\")\n\nmarital_train = pd.crosstab(Xtrain.marital,ytrain)\nprint(marital_train)","18464563":"explore_categorical_column(\"default\")\n\ndefault_train = pd.crosstab(Xtrain.default,ytrain)\nprint(default_train)","8efca4a5":"explore_categorical_column(\"housing\")\n\nhousing_train = pd.crosstab(Xtrain.housing,ytrain)\nprint(housing_train)","300ebdf8":"explore_categorical_column(\"loan\")\n\nloan_train = pd.crosstab(Xtrain.loan,ytrain)\nprint(loan_train)","93fb7009":"explore_categorical_column(\"contact\")\n\ncontact_train = pd.crosstab(Xtrain.contact,ytrain)\nprint(contact_train)","e4e7203e":"explore_categorical_column(\"month\")\n\nmonth_train = pd.crosstab(Xtrain.month,ytrain)\nprint(month_train)","25096529":"explore_categorical_column(\"poutcome\")\n\npoutcome_train = pd.crosstab(Xtrain.poutcome,ytrain)\nprint(poutcome_train)","32e11a23":"job_train = pd.crosstab(Xtrain.job,ytrain)\nmarital_train = pd.crosstab(Xtrain.marital,ytrain)\nedu_train = pd.crosstab(Xtrain.education,ytrain)\ndefault_train = pd.crosstab(Xtrain.default,ytrain)\nhouse_train = pd.crosstab(Xtrain.housing,ytrain)\nloan_train = pd.crosstab(Xtrain.loan,ytrain)\ncontact_train = pd.crosstab(Xtrain.contact,ytrain)\nmonth_train = pd.crosstab(Xtrain.month,ytrain)\npoutcome_train = pd.crosstab(Xtrain.poutcome,ytrain)\n\n#returns four values, \ud835\udf122 value, p-value, degree of freedom and expected values.\n\na = [job_train,marital_train,edu_train,default_train,house_train,loan_train,contact_train,month_train,poutcome_train]\n\nprint(\"P values of every column\")\nn=1\nfor x in a:\n  \n  chi, pval, dof, exp = chi2_contingency(x)\n  significance = 0.05\n  print(n,'. -------------------------------',x.index.name,'---------------------------------')\n\n  print('p-value=%.6f, significance=%.2f\\n' % (pval, significance))\n  if pval < significance:\n    print(\"\"\"At %.2f level of significance, we reject the null hypotheses and accept H1. \n  They are not independent.\"\"\" % (significance))\n  else:\n    print(\"\"\"At %.2f level of significance, we accept the null hypotheses. \n  They are independent.\"\"\" % (significance))\n    \n  #print(x.index.name,\" = \" ,chi2_contingency(x)[1]) # print p values\n\n  print('  --------------------------------------------------------------------------------\\n\\n')\n  n+=1","3946bff3":"def column_encoding(df_x , df_y):\n\n  df = pd.concat([df_x,df_y],axis=1)\n  \n  label_encoder = preprocessing.LabelEncoder()\n\n  nominal_cols = ['job', 'marital','education' , 'contact', 'poutcome']\n  for name in nominal_cols:\n    df[name] = label_encoder.fit_transform(df[name])\n    df[name].value_counts()\n\n  #encoding 'default' , 'housing', 'loan' attributes \n  # 1 is yes , 0 is no\n  mapping_dictionary = {\"default\" :{\"yes\" : 1 , \"no\" : 0},\n                      \"housing\"  :{\"yes\" : 1 , \"no\" : 0},\n                      \"loan\" :{\"yes\" : 1 , \"no\" : 0} ,\n                      \"subscribed\" : {\"yes\" : 1 , \"no\" : 0}}\n\n  df = df.replace(mapping_dictionary)\n\n  #month\n  replace_dictionary = { \"month\" : {\"jan\" : 1 , \n                                  \"feb\" : 2,\n                                  \"mar\" : 3,\n                                  \"apr\" : 4,\n                                  \"may\" : 5,\n                                  \"jun\" : 6,\n                                  \"jul\" : 7,\n                                  \"aug\" : 8,\n                                  \"sep\" : 9,\n                                  \"oct\" : 10,\n                                  \"nov\" : 11,\n                                  \"dec\" : 12}}\n\n  df.replace(replace_dictionary , inplace=True)\n\n  df_y = df.subscribed\n  df_x = df.drop('subscribed', axis=1)\n  return df_x , df_y\n","867c573c":"Xtrain , ytrain = column_encoding(Xtrain , ytrain)\nXtest , ytest = column_encoding(Xtest , ytest)","0705087d":"Xtrain.head()","9c055d7d":"#handle missing value\nnull_counts = Xtrain.isnull().sum()\nprint(\"Number of null values in each column:\\n{}\".format(null_counts))\n\n#conclusion : no missing value","4dddc82e":"# Detect duplicate data\nXtrain_dedupped = Xtrain.drop_duplicates()\n\nprint(Xtrain.shape)\nprint(Xtrain_dedupped.shape)","04054724":"#remove outliers\n\nfrom scipy import stats\n\nX = pd.concat([Xtrain,ytrain],axis=1)\n\nX = X[(np.abs(stats.zscore(X)) < 3).all(axis=1)]\n\nXtrain = X.iloc[:,:-1] #drop the last column\nytrain = X.iloc[:,-1] #choose the last column\nprint(X)\nprint(X.shape)","db34d419":"categorical_var_train = Xtrain[['contact','education','default','housing','loan','job','poutcome','marital',\n                         'month']]\n\nnumerical_var_train = Xtrain.drop(['contact','education','default','housing','loan','job','poutcome','marital',\n                         'month'],axis=1)    \n\ncategorical_var_test = Xtest[['contact','education','default','housing','loan','job','poutcome','marital',\n                         'month']]\n\nnumerical_var_test = Xtest.drop(['contact','education','default','housing','loan','job','poutcome','marital',\n                         'month'],axis=1)    \n        ","feeedd22":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler() \nscaled_Xtrain = scaler.fit_transform(numerical_var_train)\nscaled_Xtest = scaler.transform(numerical_var_test)","a8891aa6":"scaled_Xtrain = pd.DataFrame(scaled_Xtrain)\nscaled_Xtrain = scaled_Xtrain.reset_index() \ncategorical_var_train =  categorical_var_train.reset_index() \n\nscaled_Xtest = pd.DataFrame(scaled_Xtest)\nscaled_Xtest = scaled_Xtest.reset_index() \ncategorical_var_test = categorical_var_test.reset_index() ","74899ada":"Xtrain = pd.concat([scaled_Xtrain,categorical_var_train],axis=1)\nXtrain = Xtrain.drop(['index','index'],axis=1)   \n\nXtest = pd.concat([scaled_Xtest,categorical_var_test],axis=1)\nXtest = Xtest.drop(['index','index'],axis=1)   \n\nXtrain.head(-20)\n","5bbebc99":"from sklearn.naive_bayes import GaussianNB       # 1. choose model class\nnaive_model = GaussianNB()                       # 2. instantiate model\n ","288b530e":"naive_model.fit(Xtrain, ytrain)                  # 3. fit model to data","59c68576":"y_naive_model_model = naive_model.predict(Xtest) ","9d4c7407":"from sklearn.metrics import accuracy_score\n#accuracy_score(ytest, y_naive_model_model)\nprint(f\"Accuracy : {accuracy_score(ytest, y_naive_model_model)*100} %\" )","f78d6826":"#plt.scatter(Xtrain.iloc[:, 0], Xtrain.iloc[:, 1], c=ytrain, s=50, cmap='RdBu')\n#lim = plt.axis()\n#plt.scatter(Xtest.iloc[:, 0], Xtest.iloc[:, 1], c=ytest, s=20, cmap='RdBu', alpha=0.1)\n#plt.axis(lim);","59785412":"from sklearn.neighbors import KNeighborsClassifier\n\ndef grid_search_knn():\n\n  #Grid Search to find the best parameters\n  k_range = list(range(1,31))\n  weight_options = [\"uniform\", \"distance\"]\n  param_grid = dict(n_neighbors = k_range, weights = weight_options)\n\n  knn = KNeighborsClassifier()\n  grid = GridSearchCV(knn, param_grid, cv = 10, scoring = 'accuracy')\n  grid.fit(Xtrain,ytrain)\n\n  #print(grid.grid_scores_)\n  '''\n  print(grid.grid_scores_[0].parameters)\n  print(grid.grid_scores_[0].cv_validation_scores)\n  print(grid.grid_scores_[0].mean_validation_score)\n  '''\n\n  print (grid.best_score_)\n  print (grid.best_params_)\n  print (grid.best_estimator_)\n\ngrid_search_knn()\n","63677b42":"knn = KNeighborsClassifier(n_neighbors = 14)\n\nknn.fit(Xtrain, ytrain)\n","497ab946":"knn_model = knn.predict(Xtest)  ","e1a08378":"#knn.score(scaled_Xtest, ytest)\n#accuracy_score(ytest, knn_model)\nprint(f\"Accuracy : {accuracy_score(ytest, knn_model)*100} %\" )","c14983f9":"from sklearn.model_selection import RandomizedSearchCV\n\ndef randomize_search_decision_tree():\n\n  X_train , X_test , y_train , y_test = Xtrain , Xtest , ytrain , ytest\n\n  max_depth = list(range(1, 50))\n  min_samples_leaf = list(range(1, 60))\n  min_samples_split = list(range(2,50))\n  max_features = list(range(1, X_train.shape[1]))\n  criterion = ['entropy' , 'gini']\n\n\n  decision_tree_model = DecisionTreeClassifier()\n\n  #carry out randomized search\n  parameter_grid = dict(criterion=criterion,\n                      max_features=max_features,\n                      min_samples_leaf=min_samples_leaf,\n                      max_depth=max_depth,\n                      min_samples_split=min_samples_split)\n\n  grid = RandomizedSearchCV(estimator=decision_tree_model, param_distributions=parameter_grid)\n  grid.fit(X_train,y_train)\n\n  print(\"Best criterion \uff1a\" , grid.best_estimator_.criterion)\n  print(\"Best max_features\" , grid.best_estimator_.max_features)\n  print(\"Best min_samples_leaf : \" , grid.best_estimator_.min_samples_leaf)\n  print(\"Best max_depth : \" , grid.best_estimator_.max_depth )\n  print(\"Best min_samples_split : \" , grid.best_estimator_.min_samples_split)","7664a160":"criterion = \"gini\"\nmax_features = 10\nmin_samples_leaf = 41\nmax_depth = 35\nmin_samples_split = 41","991bc1e2":"#result of randomized search\n\nX_train , X_test , y_train , y_test = Xtrain , Xtest , ytrain , ytest\n\ndecision_tree_model = DecisionTreeClassifier(criterion=criterion,\n                      max_features=max_features,\n                      min_samples_leaf=min_samples_leaf,\n                      max_depth=max_depth,\n                      min_samples_split=min_samples_split,\n                      random_state = 50\n                      )\ndecision_tree_model.fit(X_train, y_train)    \n\n# Predicton on test dataset\ny_pred_decision_tree = decision_tree_model.predict(X_test) \n\nprint(f\"Accuracy : {decision_tree_model.score(X_test,y_test)*100} %\" )","0758f456":"from sklearn.model_selection import RandomizedSearchCV\nfrom sklearn.ensemble import RandomForestClassifier\n\ndef randomize_search_random_forest():\n\n  X_train , X_test , y_train , y_test = Xtrain , Xtest , ytrain , ytest\n\n  n_estimators = [100,200,300,400,500,600,700,800,900]\n  max_features = ['auto', 'sqrt']\n  max_depth = [10,20,30,40,50,60,70,80,90,100]\n  min_samples_split = [10,20,30,40,50]\n  min_samples_leaf = [10,20,30,40,50]\n  bootstrap = [True, False]\n  max_leaf_nodes = [2,4,6,8,10,20,30,40,50]\n\n  random_forest_model = RandomForestClassifier()\n\n  #carry out randomized search\n  parameter_grid = dict(n_estimators=n_estimators,\n                      max_features=max_features,\n                      min_samples_leaf=min_samples_leaf,\n                      max_depth=max_depth,\n                      min_samples_split=min_samples_split,\n                      bootstrap=bootstrap,\n                      max_leaf_nodes=max_leaf_nodes)\n\n  grid = RandomizedSearchCV(estimator=random_forest_model, param_distributions=parameter_grid)\n  grid.fit(X_train,y_train)\n\n  #print hyperparatmeter values\n  print(\"Best n_estimators : \" , grid.best_estimator_.n_estimators)\n  print(\"Best max_features : \" , grid.best_estimator_.max_features)\n  print(\"Best min_samples_leaf : \" , grid.best_estimator_.min_samples_leaf)\n  print(\"Best max_depth : \" , grid.best_estimator_.max_depth)\n  print(\"Best min_samples_split : \" , grid.best_estimator_.min_samples_split)\n  print(\"Best bootstrap : \" , grid.best_estimator_.bootstrap)\n  print(\"Best max_leaf_nodes : \" , grid.best_estimator_.max_leaf_nodes)\n\nrandomize_search_random_forest()","2f4f157d":"n_estimators = 500\nmax_features = \"auto\"\nmin_samples_leaf = 30\nmax_depth = 30\nmin_samples_split = 40\nbootstrap = \"True\"\nmax_leaf_nodes = 50","ece72e04":"#result of randomized search\nrandom_forest_model = RandomForestClassifier(n_estimators=n_estimators ,\n                      max_features=max_features ,\n                      min_samples_leaf=min_samples_leaf,\n                      max_depth=max_depth,\n                      min_samples_split=min_samples_split ,\n                      bootstrap=bootstrap,\n                      max_leaf_nodes=max_leaf_nodes,\n                      random_state = 50)\nrandom_forest_model.fit(X_train, y_train)   \n\n# Predicton on test with giniIndex \ny_pred_random_forest = random_forest_model.predict(X_test) \n\nprint(f\"Accuracy : {random_forest_model.score(X_test,y_test)*100} %\" )\n","5baf7eb2":"# Instantiate classifier\nlogistic_regression = LogisticRegression(random_state = 30)\n\n# Set up hyperparameter grid for tuning\nlogistic_regression_param_grid = {'C' : [0.0001, 0.001, 0.01, 0.05, 0.1] }\n\n# Tune hyperparameters\nlogistic_regression_model = GridSearchCV(logistic_regression, param_grid = logistic_regression_param_grid, cv = 5)\n\n# Fit model to training data\nlogistic_regression_model.fit(Xtrain, ytrain)","7c32af4c":"# Predict test data on logistic regression\nprint(f\"Accuracy : {logistic_regression_model.score(Xtest, ytest)*100} %\" )\n\n# Obtain model performance metrics\nlr_pred_prob = logistic_regression_model.predict_proba(Xtest)[:,1]\nlr_auroc = roc_auc_score(ytest, lr_pred_prob) ","02bde983":"# Create an object of sequential model\nann_classifier = Sequential()\n# Add the first hidden layer\nann_classifier.add(Dense(9, activation = 'relu', input_dim = 16))\n# Adding the second hidden layer\nann_classifier.add(Dense(9, activation= 'relu'))\n# Adding the output layer\nann_classifier.add(Dense(1, activation = 'sigmoid'))","eb099ec0":"ann_classifier.compile(optimizer = 'sgd', loss = 'binary_crossentropy', metrics = ['accuracy'])\n\n# Model is trained over 100 epochs\nann_model = ann_classifier.fit(Xtrain, ytrain, validation_split = 0.33, batch_size = 10, epochs= 100)","4e990c4a":"# Predict probabilities for test set\nann_y_predict = ann_classifier.predict(Xtest)\n# Predict crisp classes for test set\nann_y_classes = ann_classifier.predict_classes(Xtest)\n# Reduce to 1d array\nann_y_classes = ann_y_classes[:, 0]\n# Model score calculation\nann_score = accuracy_score(ann_y_predict.astype('int'), ytest.astype('int'))\nprint(f\"Accuracy : {ann_score*100} %\" )","74bf6943":"# Import necessary libraries\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.ensemble import GradientBoostingClassifier\n\n# Scalling the data\nscaler = MinMaxScaler()\nX_train = scaler.fit_transform(Xtrain)\nX_test = scaler.transform(Xtest)\n\n# Set different learning rates to retrieve the best rate on performance\nlr_list = [0.05, 0.075, 0.1, 0.25, 0.5, 0.75, 1]\n\nfor learning_rate in lr_list:\n    gb_clf = GradientBoostingClassifier(n_estimators=20, learning_rate=learning_rate, max_features=2, max_depth=2, random_state=0)\n    gb_clf.fit(Xtrain, ytrain)\n\n    print(\"Learning rate: \", learning_rate)\n    print(\"Accuracy score (training): {0:.3f}\".format(gb_clf.score(Xtrain, ytrain)))\n    print(\"Accuracy score (validation): {0:.3f}\".format(gb_clf.score(Xtest, ytest)))","02c24f46":"# The best learning rate was 0.5 to fit into the classifier\ngradient_boosting_model = GradientBoostingClassifier(n_estimators=20, learning_rate=1, max_features=2, max_depth=2, random_state=0)\ngradient_boosting_model.fit(Xtrain, ytrain)\ny_pred_gradient_boosting = gradient_boosting_model.predict(Xtest)\ngbScore = gradient_boosting_model.score(Xtest, ytest)\ngbMatrix = confusion_matrix(ytest, y_pred_gradient_boosting)\n\n# Output of accuracy\nprint(f\"Accuracy : {gbScore*100} %\")","2a21fbbd":"# Import necessary library\nfrom sklearn.svm import SVC\n\n# Create a linear SVM classifier\nsvm_model = SVC(kernel='linear', probability=True)\n\n# Train classfier\nsvm_model.fit(Xtrain, ytrain)\n\n# Take the model that was trained on the Xtrain data and apply it to the Xtest\ny_pred_svm = svm_model.predict(Xtest)\n\n# Calculation of accuracy\nsvmScore = svm_model.score(Xtest, ytest)\n\n# Calculation of confusion matrix\nsvmMatrix = confusion_matrix(ytest, y_pred_svm)\n\n# Print output\nprint(f\"Accuracy : {svmScore*100} %\")","b1d177e8":"import numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\nfrom sklearn.datasets import load_digits\nfrom sklearn.model_selection import learning_curve\nfrom sklearn.model_selection import ShuffleSplit\n\n\ndef plot_learning_curve(estimator, title, X, y, axes=None, ylim=None, cv=None,\n                        n_jobs=None, train_sizes=np.linspace(.1, 1.0, 5)):\n    \"\"\"\n    Generate 3 plots: the test and training learning curve, the training\n    samples vs fit times curve, the fit times vs score curve.\n\n    Parameters\n    ----------\n    estimator : object type that implements the \"fit\" and \"predict\" methods\n        An object of that type which is cloned for each validation.\n\n    title : string\n        Title for the chart.\n\n    X : array-like, shape (n_samples, n_features)\n        Training vector, where n_samples is the number of samples and\n        n_features is the number of features.\n\n    y : array-like, shape (n_samples) or (n_samples, n_features), optional\n        Target relative to X for classification or regression;\n        None for unsupervised learning.\n\n    axes : array of 3 axes, optional (default=None)\n        Axes to use for plotting the curves.\n\n    ylim : tuple, shape (ymin, ymax), optional\n        Defines minimum and maximum yvalues plotted.\n\n    cv : int, cross-validation generator or an iterable, optional\n        Determines the cross-validation splitting strategy.\n        Possible inputs for cv are:\n\n          - None, to use the default 5-fold cross-validation,\n          - integer, to specify the number of folds.\n          - :term:`CV splitter`,\n          - An iterable yielding (train, test) splits as arrays of indices.\n\n        For integer\/None inputs, if ``y`` is binary or multiclass,\n        :class:`StratifiedKFold` used. If the estimator is not a classifier\n        or if ``y`` is neither binary nor multiclass, :class:`KFold` is used.\n\n        Refer :ref:`User Guide <cross_validation>` for the various\n        cross-validators that can be used here.\n\n    n_jobs : int or None, optional (default=None)\n        Number of jobs to run in parallel.\n        ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context.\n        ``-1`` means using all processors. See :term:`Glossary <n_jobs>`\n        for more details.\n\n    train_sizes : array-like, shape (n_ticks,), dtype float or int\n        Relative or absolute numbers of training examples that will be used to\n        generate the learning curve. If the dtype is float, it is regarded as a\n        fraction of the maximum size of the training set (that is determined\n        by the selected validation method), i.e. it has to be within (0, 1].\n        Otherwise it is interpreted as absolute sizes of the training sets.\n        Note that for classification the number of samples usually have to\n        be big enough to contain at least one sample from each class.\n        (default: np.linspace(0.1, 1.0, 5))\n    \"\"\"\n    if axes is None:\n        _, axes = plt.subplots(1, 3, figsize=(20, 5))\n\n    axes[0].set_title(title)\n    if ylim is not None:\n        axes[0].set_ylim(*ylim)\n    axes[0].set_xlabel(\"Training examples\")\n    axes[0].set_ylabel(\"Score\")\n\n    train_sizes, train_scores, test_scores, fit_times, _ = \\\n        learning_curve(estimator, X, y, cv=cv, n_jobs=n_jobs,\n                       train_sizes=train_sizes,\n                       return_times=True)\n    train_scores_mean = np.mean(train_scores, axis=1)\n    train_scores_std = np.std(train_scores, axis=1)\n    test_scores_mean = np.mean(test_scores, axis=1)\n    test_scores_std = np.std(test_scores, axis=1)\n    fit_times_mean = np.mean(fit_times, axis=1)\n    fit_times_std = np.std(fit_times, axis=1)\n\n    # Plot learning curve\n    axes[0].grid()\n    axes[0].fill_between(train_sizes, train_scores_mean - train_scores_std,\n                         train_scores_mean + train_scores_std, alpha=0.1,\n                         color=\"r\")\n    axes[0].fill_between(train_sizes, test_scores_mean - test_scores_std,\n                         test_scores_mean + test_scores_std, alpha=0.1,\n                         color=\"g\")\n    axes[0].plot(train_sizes, train_scores_mean, 'o-', color=\"r\",\n                 label=\"Training score\")\n    axes[0].plot(train_sizes, test_scores_mean, 'o-', color=\"g\",\n                 label=\"Cross-validation score\")\n    axes[0].legend(loc=\"best\")\n\n    # Plot n_samples vs fit_times\n    axes[1].grid()\n    axes[1].plot(train_sizes, fit_times_mean, 'o-')\n    axes[1].fill_between(train_sizes, fit_times_mean - fit_times_std,\n                         fit_times_mean + fit_times_std, alpha=0.1)\n    axes[1].set_xlabel(\"Training examples\")\n    axes[1].set_ylabel(\"fit_times\")\n    axes[1].set_title(\"Scalability of the model\")\n\n    # Plot fit_time vs score\n    axes[2].grid()\n    axes[2].plot(fit_times_mean, test_scores_mean, 'o-')\n    axes[2].fill_between(fit_times_mean, test_scores_mean - test_scores_std,\n                         test_scores_mean + test_scores_std, alpha=0.1)\n    axes[2].set_xlabel(\"fit_times\")\n    axes[2].set_ylabel(\"Score\")\n    axes[2].set_title(\"Performance of the model\")\n\n    return plt\n","c8f8b6a7":"\ntitle = \"Learning Curves (Naive Bayes)\"\n# Cross validation with 100 iterations to get smoother mean test and train\n# score curves, each time with 20% data randomly selected as a validation set.\ncv = ShuffleSplit(n_splits=10, test_size=0.2, random_state=0)\n\nestimator = GaussianNB()\nplot_learning_curve(naive_model, title, Xtrain, ytrain,ylim=(0.7, 1.01),\n                    cv=cv, n_jobs=4)\n\nplt.show()","aa62d70c":"title = \"Learning Curves (KNN)\"\n# Cross validation with 100 iterations to get smoother mean test and train\n# score curves, each time with 20% data randomly selected as a validation set.\ncv = ShuffleSplit(n_splits=10, test_size=0.2, random_state=0)\n\nestimator = KNeighborsClassifier()\nplot_learning_curve(knn, title, Xtrain, ytrain,ylim=(0.7, 1.01),\n                    cv=cv, n_jobs=4)\n\n\n\nplt.show()","3f8b3d89":"title = \"Learning Curves (Decision Tree)\"\n# Cross validation with 100 iterations to get smoother mean test and train\n# score curves, each time with 20% data randomly selected as a validation set.\ncv = ShuffleSplit(n_splits=10, test_size=0.2, random_state=0)\n\nplot_learning_curve(decision_tree_model, title, Xtrain, ytrain,  ylim=(0.7, 1.01),\n                    cv=cv, n_jobs=4)\n\nplt.show()","08369834":"title = \"Learning Curves (Random Forest)\"\n# Cross validation with 100 iterations to get smoother mean test and train\n# score curves, each time with 20% data randomly selected as a validation set.\ncv = ShuffleSplit(n_splits=10, test_size=0.2, random_state=0)\n\nplot_learning_curve(random_forest_model, title, Xtrain, ytrain,  ylim=(0.7, 1.01),\n                    cv=cv, n_jobs=4)\n\nplt.show()","c12056c8":"title = \"Learning Curves (Logistic Regression)\"\n# Cross validation with 100 iterations to get smoother mean test and train\n# score curves, each time with 20% data randomly selected as a validation set.\ncv = ShuffleSplit(n_splits=10, test_size=0.2, random_state=0)\n\nestimator = LogisticRegression(random_state = 30)\nplot_learning_curve(logistic_regression_model, title, Xtrain, ytrain, ylim=(0.7, 1.01),\n                    cv=cv, n_jobs=4)\n\nplt.show()","c211aba0":"#Accuracy and Loss Curves of ANN Model \n#Accuracy vs Value Accuracy\nann_model.history.keys()\n# summarize history for accuracy\nplt.plot(ann_model.history['accuracy'])\nplt.plot(ann_model.history['val_accuracy'])\nplt.title('ANN Model Accuracy')\nplt.ylabel('Accuracy')\nplt.xlabel('EPOCH')\nplt.legend(['Train', 'Test'], loc = 'lower right')\nplt.show()\n\n#loss vs value loss\nplt.plot(ann_model.history['loss'])\nplt.plot(ann_model.history['val_loss'])\nplt.title('ANN Model Loss')\nplt.ylabel('Loss')\nplt.xlabel('Epoch')\nplt.legend(['Train', 'Test'], loc='upper right')\nplt.show()","27b38a11":"title = \"Learning Curves (Gradient Boosting)\"\n# Cross validation with 100 iterations to get smoother mean test and train\n# score curves, each time with 20% data randomly selected as a validation set.\ncv = ShuffleSplit(n_splits=10, test_size=0.2, random_state=0)\n\nestimator = GradientBoostingClassifier()\nplot_learning_curve(gradient_boosting_model, title, Xtrain, ytrain,  ylim=(0.7, 1.01),\n                    cv=cv, n_jobs=4)\n\nplt.show()","1814b5df":"title = \"Learning Curves (Linear SVM)\"\n# Cross validation with 100 iterations to get smoother mean test and train\n# score curves, each time with 20% data randomly selected as a validation set.\ncv = ShuffleSplit(n_splits=10, test_size=0.2, random_state=0)\n\nestimator = SVC()\nplot_learning_curve(svm_model, title, Xtrain, ytrain, ylim=(0.7, 1.01),\n                    cv=cv, n_jobs=4)\n\nplt.show()","fdb1e6ca":"def model_evaluation(model,name):\n\n  confusion_matrix = pd.crosstab(ytest, model, rownames=['Actual'], colnames=['Predicted'], margins = True)\n  sns.heatmap(confusion_matrix, square=True, annot=True, fmt='d', cbar=False)\n  plt.xlabel('Prediction label')\n  plt.ylabel('True Label');\n  plt.title(name)\n  plt.yticks([0.5,1.5], [ 'NO', 'YES'],va='center')\n  plt.xticks([0.5,1.5], [ 'NO', 'YES'],va='center')\n  plt.show()\n\n  target_names = ['No' , 'Yes']\n  \n  print ('Precision:', precision_score(ytest, model,pos_label=1))\n  print ('Accuracy:', accuracy_score(ytest, model))\n  print ('F1 score:', f1_score(ytest, model,pos_label=1))\n  print ('Recall:', recall_score(ytest, model,pos_label=1))\n  print ('\\n clasification report:\\n', classification_report(ytest,model,target_names=target_names))","6faf77ac":"model_evaluation(knn_model,\"KNN\")","85052f83":"model_evaluation(y_naive_model_model,\"Naive Bayes\")","abea3f9c":"model_evaluation(y_pred_decision_tree,\"Decision Tree\")","a2436dab":"model_evaluation(y_pred_random_forest,\"Random Forest\")","6c0a197d":"lr_y_pred = logistic_regression_model.predict(Xtest)\nmodel_evaluation(lr_y_pred,\"Logistic Regression\")","bebf96e1":"model_evaluation(ann_y_classes,\"ANN\")","d772fb0b":"model_evaluation(y_pred_gradient_boosting,\"Gradient Boosting\")","a33c6be6":"model_evaluation(y_pred_svm,\"Linear SVM\")","ec25c48e":"from sklearn.metrics import average_precision_score\nfrom sklearn.dummy import DummyClassifier\nfrom sklearn.metrics import f1_score\nfrom sklearn.metrics import auc\nfrom matplotlib import pyplot\nfrom sklearn.metrics import precision_recall_curve\n# plot no skill and model precision-recall curves\n\n \n# no skill model, stratified random class predictions\nmodel = DummyClassifier(strategy='stratified')\nmodel.fit(Xtrain, ytrain)\nyhat = model.predict_proba(ytest)\nnaive_probs = yhat[:, 1]\n# calculate the precision-recall auc\nprecision, recall, _ = precision_recall_curve(ytest, naive_probs)\nauc_score = auc(recall, precision)\nprint('No Skill PR AUC: %.3f' % auc_score)\n\n# decision tree model\ndt_yhat = decision_tree_model.predict_proba(Xtest)\ndt_model_probs = dt_yhat[:, 1]\n# calculate the precision-recall auc\ndt_precision, dt_recall, _ = precision_recall_curve(ytest, dt_model_probs)\ndt_auc_score = auc(dt_recall, dt_precision)\nprint('Decision Tree PR AUC: %.3f' % dt_auc_score)\n\n#================================================================================\n\n#random forest model\nrf_yhat = random_forest_model.predict_proba(Xtest)\nrf_model_probs = rf_yhat[:, 1]\n# calculate the precision-recall auc\nrf_precision, rf_recall, _ = precision_recall_curve(ytest, rf_model_probs)\nrf_auc_score = auc(rf_recall, rf_precision)\nprint('Random Forest PR AUC: %.3f' % rf_auc_score)\n\n#================================================================================\n\n#knn\nknn_yhat = knn.predict_proba(Xtest)\nknn_model_probs = knn_yhat[:, 1]\n# calculate the precision-recall auc\nknn_precision, knn_recall, _ = precision_recall_curve(ytest, knn_model_probs)\nknn_auc_score = auc(knn_recall, knn_precision)\nprint('KNN PR AUC: %.3f' % knn_auc_score)\n\n#================================================================================\n\n#Naive Bayess\nn_yhat = naive_model.predict_proba(Xtest)\nn_model_probs = n_yhat[:, 1]\n# calculate the precision-recall auc\nn_precision, n_recall, _ = precision_recall_curve(ytest, n_model_probs)\nn_auc_score = auc(n_recall, n_precision)\nprint('Naive Bayes PR AUC: %.3f' % n_auc_score)\n\n#================================================================================\n\n#Logistic Regression\nlr_yhat = logistic_regression_model.predict_proba(Xtest)\nlr_model_probs = lr_yhat[:,1]\n# calculate the precision-recall auc\nlr_precision, lr_recall, _ = precision_recall_curve(ytest, lr_model_probs)\nlr_auc_score = auc(lr_recall, lr_precision)\nprint('Logistic Regression PR AUC: %.3f' % lr_auc_score)\n\n#================================================================================\n\n#ANN\nann_yhat = ann_classifier.predict_proba(Xtest)\nann_model_probs = ann_yhat[:,0]\n# calculate the precision-recall auc\nann_precision, ann_recall, _ = precision_recall_curve(ytest, ann_model_probs)\nann_auc_score = auc(ann_recall, ann_precision)\nprint('ANN PR AUC: %.3f' % ann_auc_score)\n\n#================================================================================\n\n# Gradient Boosting Classification\ngb_yhat = gradient_boosting_model.predict_proba(Xtest)\ngb_model_probs = n_yhat[:, 1]\n# calculate the precision-recall auc\nn_precision, n_recall, _ = precision_recall_curve(ytest, gb_model_probs)\nn_auc_score = auc(n_recall, n_precision)\nprint('Gradient Boosting PR AUC: %.3f' % n_auc_score)\n\n#================================================================================\n\n# Linear SVM\nsvm_yhat = svm_model.predict_proba(Xtest)\nsvm_model_probs = n_yhat[:, 1]\n# calculate the precision-recall auc\nn_precision, n_recall, _ = precision_recall_curve(ytest, svm_model_probs)\nn_auc_score = auc(n_recall, n_precision)\nprint('Linear SVM PR AUC: %.3f' % n_auc_score)\n\n#================================================================================\n\n\n","3f17f37f":"# calculate the no skill line as the proportion of the positive class\nno_skill = len(ytest[ytest==1]) \/ len(ytest)\n# plot the no skill precision-recall curve\npyplot.plot([0, 1], [no_skill, no_skill], linestyle='--', label='No Skill')\n\t\n# plot decision tree model precision-recall curve\ndt_precision, dt_recall, _ = precision_recall_curve(ytest, dt_model_probs)\npyplot.plot(dt_recall, dt_precision, marker='x', label='Decision tree')\n \n#plot random forest model precision-recall curve\nrf_precision, rf_recall, _ = precision_recall_curve(ytest, rf_model_probs)\npyplot.plot(rf_recall, rf_precision, marker='x', label='Random Forest')\n\n#================================================================================\n\n#plot knn model precision-recall curve\nknn_precision, knn_recall, _ = precision_recall_curve(ytest, knn_model_probs)\npyplot.plot(knn_recall, knn_precision, marker='x', label='KNN')\n\n#plot random forest model precision-recall curve\nn_precision,n_recall, _ = precision_recall_curve(ytest, n_model_probs)\npyplot.plot(n_recall, n_precision, marker='x', label='Naive Bayes')\n\n#================================================================================\n\n#plot logistic regression model precision-recall curve\nlr_precision, lr_recall, _ = precision_recall_curve(ytest, lr_model_probs)\npyplot.plot(lr_recall, lr_precision, marker='x', label='Logistic Regression')\n\n#plot ann model precision-recall curve\nann_precision,ann_recall, _ = precision_recall_curve(ytest, ann_model_probs)\npyplot.plot(ann_recall, ann_precision, marker='x', label='ANN')\n\n#================================================================================\n\n#plot Gradient Boosting model precision-recall curve\ngb_precision, gb_recall, _ = precision_recall_curve(ytest, gb_model_probs)\npyplot.plot(gb_recall, gb_precision, marker='x', label='Gradient Boosting')\n\n#plot Linear SVM model precision-recall curve\nsvm_precision,svm_recall, _ = precision_recall_curve(ytest, svm_model_probs)\npyplot.plot(svm_recall, svm_precision, marker='x', label='Linear SVM')\n\n#================================================================================\n\n# axis labels\npyplot.xlabel('Recall')\npyplot.ylabel('Precision')\n# show the legend\npyplot.legend()\n# show the plot\npyplot.show()","e2e28844":"### Naive Bayes\nWhen the Naive Bayes predicts a number of 894 (607+287, True Positive + False Positive) subscribed , only 607(True Positive) of which were actual subscribed, while failing to return 243 additional actual subscribed (False Negative), its precision is 607\/894 = 0.6789 (TP\/TP+FP) while its recall is 607\/243+607 = 0.7141 (TP\/TP+FN). In other words, when the model predicts the customer term deposit subscription, 287 customers are predicted as they will subscribe the term deposit, but actually they are not subscribing. On the other side, 607 customers are predicted correctly by the model.\n\nWhile evaluating the model from the accuracy perspective, the result is higher than its precision which is 76.22%. It means that out of 2229 customers,  1092 of customers will not subscribe the term deposit which are predicted correctly by the model. Besides, 607 of customers will subscribe the term deposit which are predicted correctly.","25088319":"## 2.1 Exploring Numerical Columns\n","6abd1558":"Fit the training sets to the model.","6a6bbfb1":"### Logistic Regression\n\nWhile Logistic Regression predict a number of 769 subscriber, only 582 which were actual subscribed. Its precision is 0.757 while recall is 0.6847. \n\nWhile for accuracy perspective, the result is higher than precision result which is 0.7568. It means than out of 2229 customers, 1192 of customers will be predicted correctly in not subscribing the term deposit and 582 of customers will be predicted correctly in subscribing the term deposit.","fd779375":"The subscribed and not subscribe customers will be categorized according to their housing loan. \n\nAccording to the graph below, 2127 of customers that do not have housing loan are the person will subscribe the term deposit which are higher than customers that have housing loan (1187)","13c964ec":"Precision-Recall Curve (PRC) is a helpful evaluation method of success of prediction when the classes are not balanced. The precision-recall curve demonstrates the compromise between precision and recall for different threshold values.  Since the dataset of term deposit prediction is not balanced between subscribers and not subscribers, PRC is chosen to evaluate the models.\n\nA high area under curve (AUC) shows both high recall and precision, where high precision indicates a low false positive rate, and high recall determines a low false negative rate. High scores for both proves that the model has achieved accurate results.\n\nBased on the PR AUC, Random Forest (0.842) outperforms other algorithms which is followed by Decision Tree (0.815) and ANN (0.808). On the other hand, Naive Bayes, Gradient Boosting Classification and Linear SVM are the lowest (0.684). Therefore, it is concluded that Random Forest has the highest precision and recall value overall.\n","fc08d592":"# 3.0 Data Preparation ","0f1a4d20":"The customers are then categorized according to their presence of credit in default. According to the graph, most of the customers (8785) do not have credit in default. 5504 of them are not subscribing the term deposit while 3281 of them have subscribed the term deposit.","fdf01779":"The graph indicates a normal distribution of \"yes\" and \"no\" on subscriptions for age column which shows that the highest is 30 years old for both decisions.\n\nBesides that, the \"no\" on subscriptions are linearly decreases after the 60 years old and remain constant after 70 years old.\n\nOverall, the distribution of \"yes\" on subscriptions are lower than the distribution of \"no\" on subscriptions. ","9b31e19b":"Overall, KNN shows the highest precision value (0.7961). However, only 662 of customers are predicted to subscribe the term deposit, and 527 customers from total 662 have subscribed, which shows the lowest true positive value among the models. Therefore, KNN is not a suitable classifier for term deposit prediction.\n\n\nThe second highest precision is Random Forest (0.7928). Based on the overall predicted \u201cYes\u201d result (835), there are 662 customers predicted correctly to subscribe the term deposit. It shows the highest ratio between true positive and total predicted \u201cYes\u201d when compared to other classifiers. Besides, it also achieved the highest accuracy (0.8380) and PR AUC (0.842). Therefore, Random Forest is the best model for the prediction of the term deposit subscription.\n","ee38dd5c":"## 5.3 Precision-Recall Curve","512e59bc":"# 2.0 Data Understanding","bf66ecf8":"When the linear SVM predicts a number of 779 (584+195, True Positive + False Positive) subscribed , only 584(True Positive) of which were actual subscribed, while failing to return 266 additional actual subscribed (False Negative), its precision is 584\/779 = 0.7497 (TP\/TP+FP) while its recall is 584\/584+266 = 0.6870 (TP\/TP+FN). In other words, when the model predicts the customer term deposit subscription, 195 customers are predicted as they will subscribe the term deposit, but actually they are not subscribing. On the other side, 584 customers are predicted correctly by the model.","93f85bcb":"### Data Distribution Visualization\nGraph Age: The majority customers' age are between 20 to 40. \n\nGraph Balance: The average yearly balance housing of customers are between 0 to 10000.\n\nGraph Campaign: The average number of contacts performed by the customers during the campaign is between 1 to 20.\n\nGraph Day: The last contact day of the month performed by the customers was mostly between 10 to 20.\n\nGraph Duration: The last contact duration of the customers are averagely between 0 to 2000 seconds. \n\nGraph Pdays: The number of days passed by after the customers were last contacted from previous campaign are mostly between 0 to 100 days.\n\nGraph Previous: The number of contacts performed by each customers before the campaign are mostly between 0 to 10. ","e4686425":"## 5.4 Discussion","7db4f1bc":"Carried out randomized search to find the optimal hyperparameter value for random forest model","34543b6a":"The result of randomized search is applied to the decision tree model","6f66a86c":"According to the learning curves of linear SVM, the training score and cross-validation score are almost parallel before 3500 training samples. At the end, both scores are gradually enhance. By comparing the training score and cross-validation score, both scores are parallel which means that the model is well fit.","18c3f80b":"Configure the model and train it over 100 epochs.","808b5342":"The method used to remove the outliers is called Z-score. In this particular case, a threshold of 3 is used and if the Z-score value is greater than 3, that data point will be identified as outliers. From the table below, there are a total of 7989 rows that have the Z-score which is lower than the threshold value which is 3. Hence, all the selected rows will be used in the following step.","4cea8d60":"The train and test dataset are encoded separately","a4788e3c":"# 7.0 Conclusion\n\nThe advantage of this trained model is to provide an accurate prediction and high precision result. In other words, during the prediction of the term deposit subscription using the model, there will be least differences between the actual and predicted results. Hence, the marketing team can target those customers that are predicted as potential subscribers by the model, which will save their marketing budget.\n\n\nAlthough the Random Forest shows the best performance among the models, its precision value and accuracy value are lower than 90%. This is because of the insufficient and imbalanced dataset to train the model. Besides, based on the learning curve in the previous section, Random Forest also shows overfitting due to insufficient dataset as well. Therefore, it does not perform well in predicting the term deposit subscription.\n\n\nIn future, several enhancements can be made to improve the model performance such as increasing the number of dataset for training the classifier. This is because preparing enough datasets will prevent the overfitting in the model besides maximizing the precision and accuracy. \n","40f93f72":"## 4.5 Logistic Regression\n\nFor Logistic Regression, a logistic regression classifier is implemented. Hyperparameters are tuned using GridSearchCV and model is then fit to training data. ","2e40677f":"## 1.2 Business Analysis\n### Inventory of Resources\nPersonnel Resource: \n\n\n\n*   Data Warehouse Administrator:\n\n  Manage and retrieve data related to the term deposit in Meybank.\n*   Business Analyst:\n\n  Experienced in the finance field and can give advice about domain knowledge to the project team. Besides, they help the project team to analyze the business process and extract the usable data that is suitable for analytical modeling.\n*   Legal Expert:\n\n  Provide legal advice to the project team about the regulation of confidential data used in the analytical model.\n*   Data Analysts:\n\n  The project team that applies data mining techniques to carry out actual data analysis. Present the finding of analytical modeling in the readable form to the related stakeholders.\n\nData:\n\n*   Historical business data of Meybank from the warehouse.\n\nComputing Resource:\n\n*   Z170 motherboard\n*   Intel Core i7-6770HQ processor\n*   8GB RAM\n*   128GB SSD storage\n*   GTX 1080 Ti GPU (Gokkulnath, 2017)\n\nSoftware: \n*   Python \n*   SQL \n*   Julia\n*   Tableau\n*   Excel\n*   PSPP\n\n\n\n\n\n\n\n\n\n\n","0877736e":"According to the graph shown below, the average yearly balance housing for both subscribed customers and not subscribe customers are in between of 0 to 10000.","5c497e09":"While evaluating the model from the accuracy perspective, the result is higher than its precision which is 79.32%. It means that out of 2229 customers, 1184 of customers will not subscribe the term deposit which are predicted correctly by the model. Besides, 584 of customers will subscribe the term deposit which are predicted correctly.","e0eb94bc":"## 1.1 Business Background\nMeybank, the largest financial institution in Malaysia that started in 1970. It provides different types of financial and banking services to the public which include deposit and investment, loan financing, wealth management, banking and so on. Due to an intense competition among the financial institutions or banks, Meybank has provided a broad range of products and services to attract the customers. During the marketing of those services and products, Meybank has spent a huge amount of money. \n\nTherefore, Meybank is constantly organizing the marketing campaign to promote its term deposit plans to the public. This is because term deposits are important for banks, as the banks will use the fund from the term deposit to make loans and invest money in other financial products that will bring a higher rate of return. With this, the return from the investments will be higher than the interest paid for the term deposit and this is considered one of the main sources of income for the banks. In order to facilitate the sales and marketing on the term deposit plans, Meybank is planning to collaborate with a group of data scientists to integrate the knowledge of business and data mining. With this collaboration, a business intelligence system will be developed to predict the potential customers that will subscribe to the term deposit plans.\n\n### Business Objectives\n\n1. Classify and determine the target customer that has the high possibility of subscribing to the term deposit plans. \n\n2. Increase the successful subscription rate among the target customers to the term deposit plan. \n\n\n\n","12cc58ff":"### Risks and Contingencies\n![risk.PNG](data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAssAAAGFCAYAAAALsr5aAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAG2JSURBVHhe7b1LbuU6s6a9x3fwtwzkEOrrVA3gax4YHsI5naq23S\/sOTjbNYbdyGH4550RwYu0lilL9noegEhL4iUYDAZfyyvtvz4AAAAAAKALYhkAAAAAYABiGQAAAABggBLLf\/31F4VCoVAoFAqF8rDF0ohluB\/8B2dA3AEAAKwBsXww+A\/OgLgDAABYA2L5YPAfnAFxBwAAsAbE8sHgPzgD4g4AAGANiOWDwX9wBsQdAADAGhDLB4P\/4AyIOwAAgDUglg8G\/8EZEHcAAABrQCwfDP6DMyDuAAAA1oBYPhj8B2dA3AEAAKwBsXww+A\/OgLgDAABYA2L5YPAfnAFxBwAAsAbE8sHgPzgD4g4AAGANiOWDwX9wBsQdAADAGq4nln+\/hDFlefmdngX+fLz+ks+fPl7\/SY8uiLfxy\/jn9eOp+KVXXj7eU9WjeX\/24+W1ef94EXY8vf0JdVp0Pb3uOxn64OvmfgX8nAGuSMgNzwfsxrz3j+j7JGIeTeXXqzv9zkafv+NcDvCz6J2p54rlxJ+3p7Ihu4LYJcaXb7BRz\/Bf9V0WiDrB3SVCb6KK3pJMhYidJljxzdJn7JTxc\/x8r4efN8D1yLnh8y853p\/1N8Bt3jsbl3efPytwRe4+RCzfY2MnvwP8cHpn6kXE8svHk3qDbBIgYnlI99CQb1y\/4A2FfrPs2CuWRT3E8v34eQNcDbkvPyW0wjfV7ZlwpTfLYa6fzrXHiuX7bEQsw+PRO1MvI5Zf\/9FvRNWmRiwP6YplkeBOefOCWP5S\/LwBrsUkn99CyREn5LG95J+QXVks320jYhkeDx\/vlguJZf+VFHmu5LcGPbEshFYoq5PLHZzhv65Ylr6RftnwmRSd9rn6PJ0vYW30gViSqRjn6c2tXfq6+XGsqKdErrFzSwAPxbKdrxh\/OFf1OXrv08EcE1f4nKEfG+BS+L3ncoTcH8N9bPdpyvvNHvXF77Fmj1ZsnpJjqv5cP+\/yWr2hNueQKyPbm7zoS+nL9rMl+LVYfhV9t0JV9z0TsnMb2+e6r1Ys6\/qDc8eV4jO7XvL6pJwJMMPHpuViYtlhNlzYoO6eEsulTtqo9vokzvBfPQDy3KW46300YuCzdF0Spb\/OiSwlN5X8crIt\/Zi26V7uv7XTIeqVvvO9NHZuNzqsPPIQrPWSH0oy9tfJH2mM7lwd9TDItrYHhifXi2OmOickf28DwJXweyPsCymMlCBNlBwQ91reU3mfdfOGo92jbVt77ant0v1ODop1dL+z\/FP6VHs\/54ycg+11D\/2NeRizY1\/tK9mYfCznaenbmMdL\/UzHkv3He2q83Db1b\/O2zNExDnr9AlwDH5eW64llj0ywrrz4t5NiQ5WNX5JvTTJnbjw\/\/lejkpAsRrRt+qwkyk4yL+uhD6xIJ+mJpNu7VxJx5162s7TLY\/cO2sRULMu+MrO5OtoDejbHXCePNzsMj8HbBXAd3H4p+afuw17+aPKSEX7tXow093t7upO3GtE4yUGznCNp+nQU+8S97X6Fr3r+S+1K37mfPAcxlqVno+w7+LvjC9dS575QZ7yOJT+avL0rpwJcBB+XlmuKZUfdXHZD1U1Wk06bUM7Aj\/\/VtEmoxz6flYTqyyCp6j48naQnkm5v3Xr1YnIWdtoyOQhkrNQk7yiHpS9axI7n2vNpa7uNT1mUDV+AHxPgKvi9Ufe93ivyvtrvg7zd7sWIvV+ve2K53mtEY08ginvq\/oBWiIp8KXJLW8+yp53JxaqMz4DNsVWulHPu5+ThOtqSxmvXsc2pAFfBx6XlsmLZUza42lC9BNsKvzM4w3+jw0Rzg89U0hwdUK6UpNtJeivE8g3rKO1qDzbRp30+mOuexF7rfP2bZIu3A+AazMScK0qsbe\/3UX6z97v78V6xHNDzqHmspRWioq2Y76Zg3dWuX2eL8dhpDfz9ri907uuvxz3r2OZUgKvg49JyabEsk4fcUGXjl415jY13hv9Gh4nlVp\/l+q34zGuSD6BOPz2xXO6Jw6xJzvcdBNUHPXsT+eDsJHM7112JXQjt4ZhfhLcB4BL4PT3ZY3q\/iP0+yF+j\/Nbc7+SXXttiR84vTQ4y5OeTfNT06Shjl3tirgNBqep02uXcU33Z91mPno3urs5rXV+0ua\/0Veaxnbd35VSAi+Dj0nIJsfz+LARUQ9xUakPZBFY2+f7kcQRn+K8moZkPHVs+89cy0QUxmPr0X4sEH8cU7UI\/Yo3Evdyu2CkPip7gFPfqmrsYGB4w0gf2IJY+EXE0m6ujSezCpu4BIeJu\/I3fcXgbAM7H77FBHpI5Qebp7t6q+13vxfeP15QTeoIx38s5IF\/Ls6Np18lfvo7OI+75JP+UPn1Ocf29hrYx31T78vUsT3dySrGvzrOXX0PbyR8c6dpo597Lx8VuV+T62HsbebuuY55\/r1+Aa+Dj0nKuWJab3hcpYCSuHr86zmDnn8vMDzOfeR8\/v6jnUsD6Z6VdSXgyuYs2fpzQt3mukqJIlqGIQ0QeoKGIg0Iy8kGo7w8PZ3dv\/NlcA9Zu10+3bjt\/eTB\/FX5cgFOxe1bkFvnNrCwyv+hncr\/LPJHuT8aqYjgWua8bO8y+zjnI\/7XAF9nPLKd6ZB5SdW2OG+Sxgs8n0QZta6ddk\/tE\/uzRtXGW53x\/bX7z\/mz8mPsbrWOzXiYvu6LzL8C5+Ji0nCuWfxj4D86AuAMAAFgDYvlg8B+cAXEHAACwBsTyweA\/OAPiDgAAYA2I5YPBf3AGxB0AAMAaEMsHg\/\/gDIg7AACANSCWDwb\/wRkQdwAAAGtALB8M\/oMzIO4AAADWgFg+GPwHZ0DcAQAArAGxfDD4D86AuAMAAFgDYvlg8B+cAXEHAACwBsTyweA\/OAPiDgAAYA27xDKFQqFQKBQKhfKoxdKIZbgf\/AdnQNwBAACsAbF8MPgPzoC4AwAAWANi+WDwH5wBcQcAALAGxPLB4D84A+IOAABgDYjlg8F\/cAbEHQAAwBoQyweD\/+AMiDsAAIA1IJYPBv\/BGRB3AAAAa0AsHwz+gzMg7gAAANaAWD4Y\/AdnQNwBAACsAbF8MPgPzoC4AwAAWANi+WDwH5wBcQcAALAGxPLB4D84A+IOAABgDd9ULP\/5eP3118dfv17dV9dm6r\/fL+F5W54+Xv9JdT7Bn7enZX39SIb+9+Xl4z1V20Xoa+7r92fX7\/NNvSrCeu6MeT8HAAAA+Dy9M\/XiYvn94yULmu8ulgNR+D+95ZmkbwQQuV+E9b\/nxjUoovu4NYvf+OyP+evtWwAAgO9J70y9uFiO3PKW7Uy2\/dcRa\/+8fjx5YfSJt5DLcTa9KEH5U+iJZUdag+b+iB1vlj8Lb5YBAAC+HsTywdwllvPb88vMbyAofwSjuaU12PsNC2L5ctz6sZct\/36XnHMmwed+37iS91Tv3lmENbz1I1Zncus37Q\/CZz\/SdgTkhysQz+0j9kvvTEUsL2TbfzveLGch9pZ+3F\/mHduGe6GYQyC0690b1E+Blp8Hm7ItpRwrCL+evliOB3w713jYJl\/I+CtiWayJik87Tqrn11isycvv9Dig+3q\/IeZ9m4emxO2+eC3rOvDv1nOIPsrxHf318vF3557OOV9HWcMTbYCfCfnhClT9Ys\/zFfh+LYjlhWz7byCiXLsgnKS4Vd9Jj9qlg6C0EweDvyf60D6MgZbFWtz8WWgc993a+QhBqkp7oHqfSB+otxvF38lnSaxFf9YxYnszZuoj9CdiWvXv+nv5tT\/mfb+PTFir55eb3spt5ZSt5z+Nd+c\/uwfGxJjufbOn723g43xlnjH9xbz2qGLZ5XF1hmxxa\/3H5vj8wHr00HnqOK3SO1MRywvZ9l9frKkDJggx84Ys3DNJXwk0h6rTHyf3G\/w53Ig\/XyzbucU3y64Un0QftP5L\/m3WKNav62jHSeshfK5iOqylXl8rpmd4266Fjr9jY8n73vsujbnTZ1s55bvknCX08ssUG++e3r0Z\/b14P21\/YQ1vmtfPQX3zvYNb6z86R+cH1qNDk6dizjnifOmdqYjlhWz7b8cB0QixUdI3gdIRy6ODa74RjwvA8xn7P\/ik+N37wHzDIlkslnvre0vMX2vfRl94m1Q5KvH7tch9d\/ZOJa2Bt8X5tf2Yy9bzDcrYuh\/fPsaWL3YPi7qd5zkuXsO\/7rmaZ7\/NjNhf7OfPm+vX+analkoaw94vsa3GTs\/+T+feTDSnb\/Rr\/bpmxcZUdonvQX91X4mYNHGoxtu93nHd\/P6ufmrzwdPbaxp37\/xsHvHo\/aSfmfgJc2v339yH4\/pj39g2MgbjM++b2j7NX8TO3CZJ9bW8DnO9qz+HiWF1HoRnzt7ZxyDdvWn+MH3mOGz2cZed6yHu70P3W9tu+7OM6+rkvFFtSWtf9qCN9d68R7aM6eepSawVbh\/L4+taEMsL2faf3fgd8maVC56CWC90DIJyL9TJSWs+ztyfNQB\/HmO\/xM2Y\/W58a2nWyNa344iElFBr0FnzW2L+Svu2Ji1bbBJbgfdruw7Sz5mwvvm+S+z2Yy5bz6ek\/anmKQRcjIt+TDQxkvaw9KOKVz\/WKI5meHsG8RbHEoInPK\/XwTdqjN7+2NgzDbG+nJudS\/bBvj4H\/bl7ZS6decv6KgaGpBhLRa5tHEc+Fz51zOdX29X5+nuijxBT2X4TPykGlT2bc8m09We+0X6Sfte+ifeyb2ob64cxtW3Tl+ivjc8JJraz30L\/6WvZd0bNuckP3q42D\/m1yGtcxthFfz0+tzd6cbTDn7fkDRGf43nPYnpOM17oS45h\/Xb\/WL5Py7cQyzdthhPZ9l+7CRpMQEZyUNeFt5tnlATkZvrz5r4j9l+EoDFB7OrLRBuTx+uuwPo+iLkJysZukpFeh3fnv\/C8WaOaHCN2ndt11+uXNr29NjaNuNK+DXs1227KvsR+AzKRJ+L4MqE6Qrzre82BMHu+h1tjwu5XT9qXuU17OKQ+hE9j2XEAmL4l7TgZMZ7yhZ2bp3dvRqxf92Kvfbtvxtj+OvMKPsi+ivVbX\/b8YGnH0v7tPE\/35vPTdaL91r7Ur4+fYXze4jdP34527H68FpsC7dzDXhK2jOOtR7St9tfOLfS3a6\/aviJqrzf72BHmqe1t20Q\/qJJsvG2+nv563Ls3pnHU6Uf585a8ofZX57ljbsuctr95rH1mLF\/PcnGxbDftjkPhRKb+azZUZ\/OoOnauKajzc5scQtt5YKogEYnO9hcCzt\/bsRG\/DaOElktnrsUPqYSE0ayRjtGnt\/+n1+n5b3Ptf5Ql1yWtmVqP9KMru8YDfJurMEpQR+xduz6yyOTeJtl0L\/l36\/kuQlzIOdoDTh9KvTFzm7xP2zqxj97BtQflLxHvPVti3Tif1hd2bp7evRl6rqNDOdixax1Mf45mXuow9\/Xvjcl2rHwv2t95vmt+so9k\/yAHt2si2S+kIrb+lm+inXH82LbOtZ17mONGvI2x\/bdzm\/tC0lkXh7Kn2cd9e9WYvs1k\/Nvm6zFz\/OTeCOMPY2HbnzEXpDJbR7W\/Os8dc1vmtP3NY+0zY\/m5Wi4ulr8Xp\/ovbPJbNiT8FK61b9NBasudSWuMH6cX723yHx6A8rCbPd9D00f0Qz3gjF2hvj0AdZv2cIh92MP+VmK\/1RY7jp176ws7N0\/v3oxYv84lXts4sUJrjO2vnVcrlm+xV9KO1etbr9Oe+WmbWr8Lpvm+swem2Poz39gYtNft3O0aNusypT9e09+uvZramrqqfScXbOaH6Vqkurvn67Fz3BM7Y+b+2e\/POI9at5nXXrE8tGVO29881j4zlp+nBbG8kFP95zfsjo0DP4\/r7duUgJ1dvshktgqfFIf9hsNLHvbpsCmJM12Xe1vPd9AcqLGPaoM9lLKPavK3yb132LRz8\/XSx6tm+IPMHoj5uhz2zqa3\/JOPPG6yU\/khzk37v3dvRuw31E8f94rjirmZw3fOqD\/hv+5hrvsvH7WaYuPF3emIXuuL7fnZmEnjyLzu2ryG5\/1n+VfnFXtK\/Tm2\/tg3KR7yuGEOcq7t3LVvOusyxYzXXKf+btqnrb3F580+9iRflzHSdbmXbDJ75DWNcdt8I\/31uHdv9GMlxsWGP\/049lm+Nr4KNge\/xHv9ec9s2cDkqdzXONbuH8vPw4JYXsiX+y9t\/FD2Jgv4cTzWvk3JPce9TISOfKg0z8Phku93Puay9XyG3IfhoBCHqStPLrH3bTZzEePpeegDx87RirIubn7hPyX1+ixzTwef8sXTx8tzbufaqLlO7sWep5TDVayhntteMRCR\/TX+U3OqoqMe8Pr+nHRIp9\/tHdqWtbNrr9dmPr\/YVtlg7NYxqceSfi\/j7IzhXv2Rb9Qcfr24uEpfP\/\/vZu6qD9d3+C0Spc5WnNi9vvMjbVuYeC3+bvZxuu9R69DLD\/21uMs+R289dF+37Y1+HLW5tLHXtRvmDdP+xX0zlQX8dN7TmJ5Q2vkx2n1mYy30eedYvq4FsbwQ\/AdnQNwBfCXxoN71TcpNdMQyAHw5iOWDwX9wBsQdwFdypFje\/\/YRAI4BsXww+A\/OgLgD+CraH\/9+DtnfjT9aB4BD6J2piOWF4D84A+IOAABgDYjlg8F\/cAbEHQAAwBoQyweD\/+AMiDsAAIA1IJYPZpf\/1K+n8f+Z48\/H6\/POX52SPt+26j+WhF\/vsvfXtniC7fwHlKvBvgUAAFhD70xFLC9k03\/pd\/7VXw2U\/nPHLsFa\/yPICrHc+z2OU4rIRyxfDfYtAADAGnpnKmJ5IVv+67\/J5c0yfA727T2YX6gfvoG19+L17v327fdHzyeV+A02+x8AfjY+\/1kQywvZ9F96O3v\/L51HLEML+\/Z2\/F97yvsw\/OUntw\/+7txbs9O+Bz2f5PmXn0Sx\/wHgh9M7UxHLC9n2n3xzMzl0ykcefJG\/e7OK5Xp42d\/NWT+u4YsW5mJ8dxCGPz0aDkRxP\/3p2dK\/FAw9saxs5SA9A+97uAW\/R3r75pF\/z+32\/HmzDACPQO9MRSwvZK\/\/wlubIC6NGPUoQZpEbKlThXB8u5yeJ4Ebn4vDLHxGuh6AYdxc1z0Lf\/O99G37SofjTCz761l9+BLYtzdi9kWgd++R2DF\/xDIAPAK9MxWxvJDb\/Cfe5hpxPP6YRhTL8mMYUgCXt8GmhPrhMNQHnf5R661iWdovywMLjpPwfn888jeOPt7c1yFu7TeTKcb9veEeefr47\/9q78UYjv3p\/VjH8EXuxd43i2q8Zi\/5ccQ+st9ohjrpWbYp7GNzz2Hn2aLtlmP1fNLbw7Ge3\/+ir8avKT8UO0VfkzkX+02OsrZVf4t8Jfw0zp3V\/tfcZ\/aV8nMnR7r7ftz3Z\/nM5r\/8TNy3vml8vmWLXQe9hnKuYzsB4Fb8XrIglhey6b\/fr+0hlJJjPAR6h7MkPpcHdEiSMinnpGvIyVk+DfdKAheHT0I\/dwRb9aEwO5zga3jEfevjPsaejdv5Hgn03qI296owqTGu92fcU7FN\/NrVN4Koa0dPECVxWcbq7DW7V2Xfvv2LvFbYvJLmJvd2zyeGMsdsV7CxtonPRY6RfU7m7O\/JtSzzMjbV\/pM\/cn9pbYN\/5ZwE1XbjN2\/XKOeJZ3pu1v\/ZHrNeg36nttg+ynz8mk1827UTAO7B700LYnkhm\/5zSU0lx4BMvDYJW+IhJ583YnlwWMREXA8ej64\/T\/CBTjIf2wpfxSPu27Ewmu+RQE8Y9u6lvpQ4lv0Y9H5JgrQpaf80+1GOFfdWFbcd1F70Y78Y2yvdvGDH785fE\/oZCTbH1vP5nD1tDsqENZT+69TtzlPQ2Jf7KGuTS7KxsTdhfB8Ic9XrN7NtZMtozWN9a2eK85GdAHAXfm9ZEMsL2fRfSGpGYJpEF5OiTnz1x2pbQiAd0PKwcUn8NSTg9Kx3mKd7WoC0z5uknOYjE\/yft1fXEr6Szbj7iSRxEuJT7ZetPeKwIs7Tu5f6yvHd9GPQgsi3tf0JGoEjx9Lj9pHzdF9P7NL7OqHEXb6e2OtoBJ5ps\/V8PmfPQGTmOqF97n+dWB77OY3hxvclx1Tbj0eux7ZtbR\/zNQ\/1h2vctxMA7sPvIwtieSGb\/ksfw4iJMie39oDSz8WBaO6FQzDfy4k4HYLNfY96lj4vt\/d5Esax2AMy3ydRn4H3++OS90WOSSlaIqvEcoh1uV8M+vlc\/MyFYxQ\/W3sp7j0nuFxfY8GX623Mtzt\/TRkvXds2W89vFstKHDvU9bYgtTT27fSzJ+faUDfYYde2Xb\/bxPLclq25ZZSdAHAXvTMVsbwQ\/Adn8Ihx9\/5sRVe+NkIlCLYoIOw9JXZ695IAKsIj1VFCRAhVK4DitbTT9fiWBM+GcOy2bf7jVmyzLaLaev1vIOz8NY3AC22EjWZO9Zv5dG9jzs3adfvL428LUktjvyeMoeddfjrmnsm19uPH6zS2XWvr33Kd\/O9LutezJd6T\/vH95DqpD7Nm4aeGQzsB4B56ZypieSH4D87gEePOi+WnIFhisQI23\/fi5NULlyQyoiCp7fzz\/9e590cKHFdK\/0lU6rq23yqCqmCMJYgyaV8QR\/2xrK09AeTr7BNGeoxGZMpnaU6SZn7GD1FsZhGZ7jnRWcT05pzfVdton67z4oRj\/Po\/Pv7n\/1fv+7oj\/2dmz+38iz+9CPW\/XjM\/U37Rc218pvyjf0p3ly2eQezN7Iz9aQEOAHP8PrIglheC\/+AMiLvHZfYf+wAA4HYQyweD\/+AMiLtH5X36H\/sAAOB2EMsHg\/\/gDIi7R0L++L\/9uAEAAHwOxPLB4D84A+IOAABgDYjlg8F\/cAbEHQAAwBoQyweD\/+AMiDsAAIA1IJYPBv\/BGRB3AAAAa0AsHwz+gzMg7gAAANaAWD4Y\/AdnQNwBAACsAbF8MPgPzoC4AwAAWANi+WDwH5wBcQcAALAGxPLB4D84A+IOAABgDYjlg8F\/cAbEHQAAwBoQyweD\/+AMiDsAAIA1IJYPBv\/BGRB3AAAAa0AsHwz+gzMg7gAAANaAWD4Y\/AdnQNwBAACsAbF8MPgPzoC4AwAAWANi+WDwH5wBcQcAALAGxPLB4D84A+IOAABgDYjlg8F\/cAbEHQAAwBoQyweD\/+AMiDsAAIA1IJYPBv\/BGRB3AAAAa0AsHwz+gzN4tLj78\/YU5twrT29\/Uq2T+Of14+mvp4\/Xf9L1t+D94+UKvruZPx+vv9y6P7+n6+sTY\/e7xceD0uzlGG\/fb59oYgy+uF1\/H+\/PR+y5HXt5z3r8fvnU3DL+LLEglheC\/+AMHjPuosB7+Z0uHSGJu3vf\/TD7WqIfv5\/f0uHqbf9GYhm+CUGY+fj6Wd\/Y1BcNnxeU67hnL9c2JW8Fobxmbr4fC2J5IfgPzuAx464Vy0X4\/Xp1qfRRcHP+tFiMfjtCLP95e1kqNnR\/O95G\/WScoHu5Zc1urf\/oNG8yv5IV+zph1v2zb5aP4Z69HNvwZvkbgv\/gDK4Xd+JNgSvHvLFELHvW\/Ej0ILG8Wmw0\/T2yWO4IhSm31oczxfK6jzq0645Y3qZ3piKWF4L\/4AyuFXdJsNqyXNBYsZySrbqXqc98Uck1HIj1mRbaeS7+wHRfiznIj3y8P4vk3EnW9UefsqRDONT3Xwsbd4n91s9x3va+tGU0n3g\/+0Xa29xzbfa8LW7mXOak12LvwdbvL\/Xl51F+BGvXf7L2M4pQEv6U65LXzflCP9uYX+8wF7a3\/tDrGey3MZtjacSkvvKrnN9sX0xiNu+Lves6338O5Rszz9kz4zfdb47311Sn5w9373eOgfgst6vxlftxkSjbSTsa38cyjkNjtytlPDXfHbE8WPdoq18fMZbNz8OYjGtex8578LXEQpt\/Nf3cmftJI8nx1b2ZLY6mTp6jn7v72s5zgB\/XglheCP6DM7hS3DWiphRziHya9lDpHx4+oY4OPJNs0+GSk71P6rKeStrp63rwpPvBFpGsw706fjwobH1fUh1jwxxjlyP0X67jXPP8hvNR9eIzNb63KYsNM58pTV3j72yHOtwmDPoL\/ktzCfMvwsg\/l\/Xl2k9Q65Jsy8LDjyOfC99vzq+0M\/Eh+gjxVOzX9sZYy\/PRa7tNW9\/3J69r7Jh5yJhUvkm2ZN\/kOo0fRkzG8YSxsq+SL1UcDp4Zv+Xr+Dx9HYpYB4\/t89n5x\/i7zlH2k+eQ7CjrGeuU+SXfVbtG2H4cyjZH6mvbx8YGR83Rqb\/Ql9gn\/robk8mu0l+91vtygug72mHWMD3zsajmluar1yy2aevVOuOcN8ePZUEsLwT\/wRlcKe7CgRuSWlu2D4lbiIeASoTlsBSUJGuKTZqiXrZTCy9BqDs4HEyyrgdNwrZt+pLz2mJyAAgBkw+T4XzSmPFNW2deVsTspTtXedg5bum78VU7f+XvUD\/6QJU9B2YzVuo72995vmt+qk6y39qX+g3jDW1tRdAcWz9et2Mb+4UP9Rzk3G3M3iZMAs04sY9+XMyeJb\/ZOFc293zX6XNznm0\/YY\/leYe1b9tvr5n1X7y27cb7WdKOqeLYo+xMY7s2uujntT9r6waNTzO5n\/iGuru2oa2Mz45fTJ19Pmrxc7YglheC\/+AMrhR3MRHnBCtLL0F+BnNwJVHSHEQ+ec6SZWoXk32\/z9Z+faDMkrXtsznIm8PD2DCld1DF9nEMc5gM55PapNL40BEOnVznzoOxOaQDcezemA2Nr9r5K\/9urf2MZixHuJfs7zzfNT\/ZR7J\/tNZKeDXc4LeAre+vzfwks33RzN0876zLkOE4tk\/J7Jl72hNIaRzZt\/Kdep4I92bzbPuxa6aum\/5GWP917HX0483Stm3aKbvmMZmf1\/5uWOtAqu9s0rlG3+\/2p\/aOx9risHXSusZ+9\/g+4utbEMsLwX9wBteKu5icY3ISZXcy3Ys9uFzqDIeASYhNgpXYPto+I3lObbLNIrIk7M540a7sC2PLpvCYYQ8qe3h0DpOAnU+8DvWCPePxy1z2rKedW7fvG+bb+MrOP9knxfJw7Tdoxur1rZ\/vmp+yabQ+ETVeg1izXdj6M7\/bZ705yLnb+u269JmNM\/PNDr\/ZtVGCMI6j23fuLRDLWqzJtjOs\/9K1iYV5fGRaG6N\/xL7oiOWRb9vn1tb96Nwp+kk+a2xQe8fTsbWpk4l+aOJigLfLglheCP6DM7he3KXEF5LTLPF+hs7h5sgJuDm41aHy\/vEa2pk+jNh5f7YHZbp29eS4fkzdh2jnr2cHia2fbNp3qMax8wHz+tscXObQGc7H+KF7mIo5hOezOWXEIfz+5v2f46L2ve\/AT4z6s7aV\/mZrv0GKhbrOZl2adfPsmF9oJ3ybxpHr\/cfNLTw36xdw9WPdOFZ49tutvbKjR1s\/rrOeQ\/SrjofGxmbuNmbbdekzH6drX\/oPYbNnuV\/pdy1izbiJmDtqnzmX1Hu2XdtPO45Y6xvQ+9rdSL6xY8u46TNad2GX2FcBu96OEpPN2u5d64Tr2\/orXpt+mhhzNPc6Y5s645w3x8\/fglheCP6DM3i0uIvJ3iXJXIwYCgdlKDkxynu+1IOiHoiuuMM21\/MJ3CfaJ5+Mxb2AT\/i\/hA15\/JCoc\/00dhI89X4qPsE39bWd8lAZUXyRbFC++eXmk+134\/Xn046p+3D9ujm8yPnuFgC170ZI5b7U2m0h+zP9uPnpuDDCqbm\/QTp0X5zPclu5\/rU\/e\/huzC+01TbYeFbrbuNH9FdiV4qFCb36Kv5dyes03BfP\/673uzHrvhkx6zJjtv88M99M\/WbXvdhh7ZVt9Nq9OIFYRaRt93fTj5pLWCcTC6Vsx2CZm4wfFXdazM6Q697sERNfuc++b+2e+\/umtQ64ObS5s93Leq7OzmbPbbWJ6zbM4Rv4uhbE8kLwH5wBcXdhXALvHmq73gbCaYSD1wrhBYR+dwp2+OY4gd0VkDt\/ugGngVg+GPwHZ0DcXZX4NqoVy6NDFC7DkWKZtX8Iwhvdzlqr38sOlwSxfDD4D86AuLswQXTVHwPGwmF5adSaLRDMsj\/7sQz4weiPbuSy9+MTcB5+nSyI5YXgPzgD4g4AAGANiOWDwX9wBsQdAADAGhDLB4P\/4AyIOwAAgDUglg8G\/8EZEHcAAABrQCwfDP6DMyDuAAAA1oBYPhj8B2dA3AEAAKwBsXww+A\/OgLj7LKPfh\/xNOep3BAMAPACI5YPBf3AGxN1nqL8L9UeI5fI7fRHLAAD30DtTEcsLwX9wBsTdZ\/nMm+Vr\/DU+9VfBeLMMAHA3iOWDwX9wBsTdZ7lfLI\/+pO2XEsQxYhkAYAWI5YPBf3AGjxl39eMTsfTE4p+P11\/puf0zw+XjCl4kb4vlIIpdnae3P+ktrh0\/tc9jv6X+y7i6fh0r2egFt7IpPQ60Y4Xi2mS75L1d8wcAgC4+Z1oQywvBf3AGjxh3+o1uFJNeyErBWd6u\/vP68eSuiwAN1\/XN6\/vbk35u8X2msf64ulWYC6HrkWMX2zzePiHmy\/hCzIo2YW5F3Jox0lzCXBPaJkexYzB\/AAAY4vOnBbG8EPwHZ\/DQcZeEoPdBEZDlzWq8zGI6i0UvRqXY3BSTTX8ZI2Q9nbpRzEYbZYk2tH2E+uaNdLVtUH\/6MQzbBwAAjPD52YJYXgj+gzN4zLiLAjCKyigg94nl+LUSy5tiMglUP55qe4NYlnUUW2LZXre2IpYBANbRO1MRywvBf3AGjxd3Rhzb66lY7AjcG8Sk\/Oxyt6+RWBbiV7MtlrN9ftw6dgWxDACwjt6ZilheCP6DM3i8uDMC036Od0MsRnHZXst7CtefFKjyYxzls9POhlfftiOWi9iVojrX3xTL\/rntzxDG9GLZ1X1z\/SCWAQDupnemIpYXgv\/gDB4x7qTA\/evXy8eLF5z+6\/\/xr3o\/CMb+W9n8hjjee52LSS+WnWDN9ZuPSOR7QaTmfo3AFZ+trn0koZzvOcGs5pXeFktbaxH9l77dvf9rbejNvyPeAQAg4HOlBbG8EPwHZ0Dc\/WScoH6WH8nIpLfIAACwFMTyweA\/OAPi7ueiP5JR+fP2ot9cAwDAEhDLB4P\/4AyIu5+M+ahGKvIz1AAAsI7emYpYXgj+gzMg7gAAANaAWD4Y\/AdnQNwBAACsAbF8MPgPzoC4AwAAWANi+WDwH5wBcQcAALAGxPLB4D84A+IOAABgDYjlg8F\/cAbEHQAAwBoQyweD\/+AMiDsAAIA1IJYPBv\/BGRB3AAAAa0AsHwz+gzMg7gAAANaAWD4Y\/AdnQNwBAACsAbF8MPgPzoC4AwAAWANi+WDwH5wBcQcAALAGxPLB4D84A+IOAABgDbvEMoVCoVAoFAqF8qjF0ohluB\/8B2dA3AEAAKwBsXww+A\/OgLgDAABYA2L5YPAfnAFxBwAAsAbE8sHgPzgD4g4AAGANiOWDwX9wBsQdAADAGhDLB4P\/4AyIOwAAgDUglg8G\/8EZEHcAAABrQCwfDP6DMyDuAAAA1oBYPhj8B2dA3AEAAKwBsXww+A\/OgLgDAABYA2L5YPAfnAFxBwAAsAbE8sHgPzgD4g4AAGAN31Asv3+8OJu8Xb68\/E63L8rUf79fyjxieXGzy\/z5eP0lnv16dXduQPZ9a9tNom1Pb7XXP29PZpy2znls2xLsV\/7fJrbJa2TbfnL9PokfEwAAAD5P70y9sFj2AqSKkixWriyYt\/0Xxf9QyDnRe7Pg\/Of14ymLM\/\/1wT4qovGLBeEqqui9TSxnSvvnTut71m8B23EHAAAAe+idqdcVy79fP17\/SV8H0tu7nki5CNv+23jr6cTWrUI3iLcv9kkY8zuJZfdNxIvweRS894rll49XV\/xaN+t4x\/qtALEMAACwhu8llju8PyOWLWf45HuJ5dbnnxbL7pu44Pe\/nvQ3dIjlLyGun\/e\/Lfet6c24dZ6OFX7CY2LjDLbsbNjITxfnM\/v6K4l2XiA+vjvpJ6lH7f3mbO3spxXn79ed4Rs\/2b4KN+et9fiYsnwjsRwT+RliZC\/b\/rtNLNfkLz67XTaV\/jy3fBaFXC21z7pZquBISTsEqK3viW0au5RYbuuMbYg++Ov5Nf5r2imETWFuveRY7uXDR9ii6tc6c7\/OyWK5zENuarN+nupnV5LP5L0QC3Ke2a\/l3nbS8PUeDxtzeS23\/XUoTTzCV1D31MnrD1+E3+95rePeP1QE3pCPr0k96y4tli\/i596Z+n3Esj+ELv42c9t\/+8WyElk5cEIg6UN467vf8Dz4rW4WX6INWfDVPsK4xc+1jRSBm3WGNojx9oqJID5k3daHf95e01g9e+M9Xd8crB2\/jqhi2ZGFUfa\/WD+PH0eOq9bK+CjbKdu\/u3nV1mP8XB6P1l\/Rpxc4DJqYvQPXh\/zo0M\/Crd3Ob06nGB\/FfS331AOwM05U3jqdBevv9\/pX64EmZ18fve7tWXhJLuDn3pn6bcTy+\/MnD58vYNt\/+8Wyp0n+nUO4EcsFIUyNsB0KOEd74LSiJNRRiaqtE+nZkO7tTpbWZ6m97O9N9mVtaee8x68jmkNHCjS1fnHcMHdV8rh9O6tf3t28qs0zfL\/XQqy7K8N4\/xTWf46wjtKHJ3FDPPWxMf+zGOesW2h99HhieWecfDoe17Ji\/dsz6Av4bmK5Wff2LLwkiOX78RujFWLXY9t\/G8ltkVgO91I9nVTazXKUWB7bkITUDclStQ8+EuM5n7yq2LC2tHNu5njDYdJ7Q1Pm6p7pced9St+Hfn8LO5r\/4DrmWvs2+tvbpMonD8cWu86OkGTrWud1fg3\/ShuMjWZ\/5Pu577i+rpS1kvEciWP5em795Dpmkm2xTA6CEIu5XurP9dOfi\/W17tfamfsYf\/zI+jRee3+q+cl5NfbG0s9x1l4xlvLPqH1iw0ezj1fVebhi1rCh5AXRn2wTbHbP3d7Vz1KOy23seod2vXuD+nI+rgTfDHxgUfP1ZWCj8rfte1cMif6Gfh2vv7VT7WuF9a0rabyyT1OpfYgzR\/g5PBdz1TEX26h7zbq1dew82md2D9s+Wh+F0qxBe19i7Yj1Yt9+rPrcxo32b7XrHh\/WNfH3359b3+V+VDvp5+6+qD6qa6z9JuNnbMMYX99yfbHsnGUX4Krs8V9YuEGA27fneXOVxS3JO107Qn\/iQAht7MYq13WzZLrtVUKIbWTw2TFsnbkNYtPtRcw7fzQh210\/gpGx9rZzbubY8euI\/o8z68a340q\/NZSk4NqHt+Oxn7Cpd34Ew3OlfRt9G32hyz7\/7qe\/zlo4xbF1\/hi0E\/HqY0u3cevxO16XfmX8y+Tu19DtYxVP\/vlkj7ZEm7INo7novTtok8aRfRRbg93Zzuy\/7Jt67Uvs1+5dPWbsbyPmmz4cyn+O1I+ca4sZ21Hn2JtffC7r29ynSDao\/rIo8G3kc9VH3cPyWtskrj3+nugjzKPER5xn9mmco16zuZ8cxg\/RJnktxzD2pzn7Z+MY8tfapnEMtOuv51vHmcWRbRPtqD4NaxueZ\/+nksYNz\/117kO1r22Ub7fqmHMkziPWl75rY0P3IT9WE+2s8\/L9SJu2Y7hd5zqeXQt\/3YuLamcou3zo8NeprvTFeJx0afsJz2V9h\/sG9l21F\/XlOgxtmOPnZbm2WBYTzfTFyjXY5b8QCGYTOnpB3yyu2Yye0K5JNDIo5fMYlLPN1gZU22arztyGdG3mOie2eXLfFZa3yMGPPnHYfqy9qa2\/Tm9r9\/h1xDD+Qh86wcdxzHopERxtffH\/2THVCW1cIrnl86pX2rclgXbK7PC7neg7PYb2dRun2b9yDRwplkpbv5ayjkrMto8YX2puqr8U7xu2avbsOUGKPd9v00bMo+mjifsUj2UurR0qXwzay\/otdv+L\/Smwea1lh4+UfbF+uw4Dn3psXDjUGJ3n8Z7pM61PXwzM4yOMN8yVe\/ztsHaG686YdhxRL9u+N4bGNtn1j\/V1brB1WoId3fgQ\/jR7VPbXtLc+Sm3UPNS6eTp1EjUP1vqN7wLjPmL91rd5TWqxfSaaObVro\/bzNC7u8GEzfmI6Tn6u5+THknb\/+e1fMaWvg5\/a\/kL9kQ0b+PaWy4rlkQPmCfRcvH27SMlTzUsEoUfP3wWOaZM\/ilDrpISj6jnR9Zz7+dfHv8r9GEhK2Di\/vtsxzeb0bRq7OnXGNvz74z\/9hsvPzJxnxHHlBorj6iTbscXfzfN04237NTTpYPzds91tTNte+diV7nMZ08Ge2za37\/cqDPftHQlrTm\/9NW3MdPztSTFQ+4oHQ762b\/lDv7mPpq1DraHuax9xbjl+Pb255HrRlvbQVXbma9lHE2vWp60dwX8i9tX1rti1h247hqc\/X8kOHyl7fP0bY7B30MqDvPN8tk7FVtnHRnxYf2v6vmuwdvpruwckKabjuHGMbN\/eGBrbZNY\/jWXn392ngmCHeR7aJFv0cxtznfbNWrb7Sa+bp60T\/ZPmY+o3vgt0xvGEttYvN8ZwM6d2bVR8+fpDn9\/vw3wGlHGn4zhCP8ZPIU7yPf3\/eYIdwi7NwIYNfF3LZcXydwT\/wRlcK+5iQvY2qTJMZveiD\/EevcMp3jMHTnPgp3o+obtn+jPx4lm46ogD1d\/gMJzS9tnOxfbbjqPt7PTRzNv6tLWjEW+hj7rOs\/WIpMOr9JGuzeFpbW\/Z4SM1Pzu3HTSHv7Gr8zze64kccU+JgXl8zP3Q+qCLtVONb7F+0td7Y2hsk13\/WN\/mh\/k3Ca1f5td2zLZ+u5addWn8ZurY5+a68V2gM07aU60P7dps0MypXZtGLDf2Ze7xYSV+I5PGno7j6D6vfrIfvWzsGKBs2MDXsyCWF4L\/4AyuF3cpsTq7fNmTnG5n61BOSbRJuulwFsm1fzCn\/l09+8T2G5NwPSRyUi73QvLXh1z7WXuJOEBHHx3KPs52dw5Y26bpY1PobByu4bn17zalDzd++EYk+ceOOxcFO3xk5hef68N8+n8DtuwKz3V\/2a7G742oEHbO4qMnnFz9WLf1QRfhhzjfZKMSGPltnVlzY9vtMdRi1z\/2Kebf9Nli7dDXdn7pWuzx\/prIMds2m3XM85gHRjZm7DjWdo+7lz5uGPvQvhnGcLPu7dro\/dwbO8eFtTPZMvOhu7ZjxevZOI7Gz4l0f\/TRS7VWKbbGNszx8WhBLC8E\/8EZPFrcxQPDJcdcVNKN6Dr2gErJNReZZAX6IIn0+03JP91\/cQeTPeytzVsJOx60rrjxR3NR9385AZVt6LT52\/YRDtJ87YWK9snT29\/muv3YVvOfp0qx\/tYU25qDtvYhheOIqY+a+Zk25n6XdDjXj5GJdVP22oPd+MXGZ2irfaTtN\/Fh5iL7kz4YU9e2ztfsAWGP8tGzi6v09X\/8r\/+o93fFkJp1obf+ev4doVRoYy6Mo2yZf\/SviZVmLc0Y3rd76hifvjjf5fr\/\/V9mzN5cXB82PuWzzP4Yluvero3qp6xFLy5aO7d96Lpy955+iXpqH\/TGcfT6KcQ23fmO9sjUhjG+rgWxvBD8B2dA3ME5uMNLHOKV\/b8j\/NKEg3sm3O4k9JsFEwBcDcTyweA\/OAPiDs4gvJnqiOW9v8v08hwplrvfZADAFUAsHwz+gzMg7uAc7I9SY5l+tOG7EIRyntMCwSz72\/mjYAA4B79PLYjlheA\/OAPiDgAAYA2I5YPBf3AGxB0AAMAaEMsHg\/\/gDIg7AACANSCWD2aX\/9Rn4dKvZXm+4zNs6lelXPs\/1Nhfi9SWNf+JJozzgJ8H9D4EAACAz9M7UxHLC9n0XxK4ze+6vFng+XZZIMc+Rr\/T8gr4\/zVv51yv\/e9w\/LxYLoIcsQwAAAB3glg+mC3\/9d983vFm2b+dbvpxIvSiv45I\/4UhK5Yds78+dQO8WYYh4RvV2Tdl6Rfvf2YPhZ8aHfCrxi7A6NfEraeTH2CTR819AEeAWD6YTf+lj2B89iDoJcavO8w+y3GHIWIZ7kP8hap791D5eNXPE8vlL30dnl9ibliRIx+JkPe83xDLAEvw+8mCWF7Itv\/EoTz7nLH6XLP8iIVsn8qv\/\/z4t7x25eX\/iPb+gOt9vrnci4d7SbipyI91xGcvH6+5Tjk06+Hmy74DbiKWh\/PO6PHs4dCI5TJHN2f39ctP+KtiHbwv4Hb+vLmYLsL2njfLLh5lfd4sL2CSH74LO3LN6j\/c8qgvCgCOoHemIpYXstd\/5U2NLzbBhQNXJNIkIBvxqtp1DvogFOXBHevofl7jOKZuFsf+Wfw62qrFqz\/UhJ3NeCMGh+HmvG27eC39oP3i55vtiXVb8f0z8H6CGxnsj1sEYSMgEcsLGOSHb0ObZxtsrlsAYhlgHb0zFbG8kNv8lw5n16Ymzn6iDQfVUBR6ege97SvVkWLyrU3XVcjXZC7Fc0aKaFm2BWnvMNyed\/cwMOJE1+n55Gfi\/f5QpG+kQvHrG4Rvus5xWu6l+BACpYndEDMiXkT\/fdGWvlETJdQr8Zj68s9szJq2Y1G4xx4xjitx\/8h7ce51T9c9Vu4N94ew09UJ9VXd3jx69gh\/271p6kV6+cH4W\/k09uX7qPOU37DEtv55XXcZE7FNsw7imcp9szVWceiLtCMi1yKU4tPZHD3z501+LLY4293XP\/WnagBH4PeYBbG8kE3\/9f4jW0rK8cCoiV0Sk3xN2E1idF+FxG0OPlXPjfPyO\/YfDgaXQF\/FAZEPkvAs2GTGkweGI9wbHrQzhA2F7XmHQ8YeIOlAyH2p+XpGB94PYzPufiJh7aUYqaIpU35yUuJAxEC417YP9VJcd2Ou0NlzZZzUr4nPGOfChmYOGWHL0B5fR7bV+yrUbWyTe+DdfbPcn1kev\/jS5a0nNdf5PHq54d3lnsjc7r3X0Q\/p61Rinew7b59+HucjfJts7OYNYX95XtbXl9kat7lMIvNaZDbHej1+bucgfbxtDwBo\/B63IJYXsuk\/l2zbpCUPppTIZeJ22GTeJPfczhxQ8hDLv5EiH6JFSHjsQWqu2+Tes2EvNvF7tucdbZCHrKN3SPdsSgeancNP4TH3rdw39bquv7uWPznpxriMp3YPzWO8rd\/2qWM9xrCPQ136QmbDnjBW21ep352v2Hez30Dj66p5a1u25+HnLfeak61l3A27ez6zaxD6yH7uiEElYNvn9huJOJ9sb5qrt0mVNJ4a26Pt7dpj0ONtz3HbB7ZOJzYBYDd+z1sQywvZ9F86KFQitcm3qWOTcZtsPeUAcAdFfWMck+bT80u9l8Z7aoREtSH0ZZO5GS\/bpRKyGnvE4DDZnHcaTxwa24eesDkcoHYOP4NH3bdKILj4mf3kJMaXWH8T83mvNPFkRUqhI0iaPnUMh\/5k\/Skb9vixhrZ55Niur2f3zbFor3+doybsK9O33Gt75uHr573cfGO+2+6+LVtiWPfRPt\/OG3X8ho017tuj0eMleyZz3PZB6lPWCXa6dqH8zLwHcBS9MxWxvJBN\/6W3OTFZ5kQmE29CJTqZiNMBKp7VAyn1aZKqTcxtcvfEe7nPFyeu49dPH\/\/9X9JWk3RTwi7PbUI36Hl36g\/nndF2tgdefubt9ALBfVMg6rf9\/Qz83B6SEH9x\/0x\/cuIJsSXitxE9G+K0oa3f9qn32rw\/y4Y9dj4diih0fgrfOBR\/zT6CkcYxfUuBuWsexT4z1qbdHZ8pnzrEuuf6SpxuPJdz8ej5Rr8Pxe7GGnftMVj\/bs1x2wepTm9NQj0336nPAUDSO1MRywvBf3AGjxt3Sdhs\/eTEY0WOEBtRaN8qloXocn2F8XcKKTlGaduwZU96ruzrC9OX8hY5+euX\/JV5HbLAymMXwZXv7ZnHaKwtu63YTGOJ+lrs7nu+Xyw7gt\/0N9f68++zNU7z9uONPuqS1iV8Qx\/i9LNztHPwNoj5hPVDLAPspXemIpYXgv\/gDB457hqhk4SFFDpZ\/MSShU4SIKFuEnC5jhMhsd98ry80Sh0vYpoxav++FLEmhacvQgBV9tqjx2jtjM+lUAz9dMc0yPm4+q9GnO2Zx3iskd0Dn9n60o48R\/cNU7GnjNn2F0SmqBc+mlLqVP9pfydbdq5xGUPZKSi+a0V36b9pO37exoaLn9FP1dIc1P4AAIXfIxbE8kLwH5wBcQePSxLL4hsCAIDPgFg+GPwHZ0DcweOCWAaAtSCWDwb\/wRkQd\/CY9D8GAQDwGXpnKmJ5IfgPzoC4AwAAWANi+WDwH5wBcQcAALAGxPLB4D84A+IOAABgDYjlg8F\/cAbEHQAAwBoQyweD\/+AMiDsAAIA1IJYPBv\/BGRB3AAAAa0AsHwz+gzMg7gAAANaAWD4Y\/AdnQNwBAACsAbF8MPgPzoC4AwAAWANi+WDwH5wBcQcAALAGxPLB4D84A+IOAABgDYjlg8F\/cAbEHQAAwBoQyweD\/+AMiDsAAIA1IJYPBv\/BGRB3AAAAa0AsHwz+gzMg7gAAANaAWD4Y\/AdnQNwBAACsAbF8MPgPzoC4AwAAWANi+WDwH5wBcQcAALAGxPLB4D84A+IOAABgDYjlg8F\/cAbEHQAAwBoQyweD\/+AMHi3u\/rw9hTm35eXjPdU5lN8v87H+ef14+uvp4\/WfdL2I92c3x+cvmeH34yCffxkhpq5g\/\/vHi9tLL7\/T5ZQ\/H6+\/HiEmb\/HJRQnxlfLkr1e3cjDD+8mCWF4I\/oMzeMy4swdYvP4ywTwiiDZvx1rhE4Sy7xex\/PMoQuZssZz30B5hmITyj4\/JW3xyUXxOygI55advLfy\/AL\/eFsTyQvAfnMFjxl3nbU8SHU9vJ7834c3yHbj1vGFuf95evu9b5B68Wb4wt\/jkeoSfxD3IN9nvz2teliCWDwb\/wRlcL+7EWydXjhGvnQMsv9U9+2BALN\/MTXM7yL+ngli+MN9bLD\/Mx7fCHkIsfwvwH5zBteIuHizeJlWWJ+vOAWbeLMfPNr98vObPOBcbjI3lM3z6fu7bfgQi9Gs+91c\/R+0Ez++OmEu2xbI3oQt73NjtoTeaR0Z\/0xLbtj8+L7aL9tl3blRlg2rfjNf3X77v10X5KfjHzMGV2M7ejz6r7VPJNvQOSuVz801beOZtmM2nT7HB+SO\/4a52JRvyN24mDrT9wt5P2FPiMxW5J\/IzP\/d9b92i33t9tP0nW50fZB3ZdkT0g7dHrPNGfO2xQ655fC76C\/3nsd217L+sVypq7LFPdvl1R99x7d3XycY+se7T26toE5+ouCr9C9\/mUvrXz+rcbh3DsSd21V6sfQbUM+3LvX62sTGaZ2PXAF\/XglheCP6DM7hS3GkxIItJkJ8mJkGb5PM40g4lkkbtRBL1iVe3cYn6d7zuHrQh2edE7g6M5yctlv1zcQiGPjaTdjx4ih1egGdBENiah20fD6RYPx1qA5v0GqZ5lQMtz6s3vjjMytvfZFcq0R47fmtPOPzMXPVcjH9D\/2L8cM9epz5KfV9SP0nQ1PkM8PWyj40d0W89H8RLve7JL3mOxaYb7THzDH6T9qX+G9uGmHWd9Z\/XTdSPokWsTYe74mtoR7UhlDTfrp0ivvRaxOclvhrfd2zZ7dd5397O+HVroybFSyh6PG9D6d8R5i76sdexL9FHidM7xijr5ssgdtXapXl2YtSj1uUmP\/fqmHVL13Xdx\/j5WBDLC8F\/cAZXiruQRH1C6pSatFYgE3su+pDuJViVjDMhmYu2PtnLOu4Qebf9lucx+au5qf7S4bBha4PvQ9mpD9PNeTTtJe3BbPtrfFcO1HSd\/J8P0Fhfzi+W+FzX9egDvLWnkA7e2pfDrpcn3NMHshzPE8bMc2z6sAfrACsEBHOf+f6NzZJ77SmIOBvOcQ+jcTv953tq3dq17nFrfFX22aHjeeu5IPgs9l99YHxyl18dnb5VTG7S80m8l\/utpfpW77U0906b2O8dY0xjN\/q+jSePWEtVUl83+tnGVHeNd\/bp7bAglheC\/+AMrhR3o0R81+EyRSbkPjZ5erqHUyOAdIJ\/f9P1VRLuiSd18M8OizE9O+WhtzWP7kFR2BYPje82xEyoL\/rTtAewPsBbe3KbaFN8Xtr3DrxwL9vbjudRc5oe8HOC7d42X6wPRz5r\/Gf4tD2xrV7H5Ndkq\/VHn3bczf7Vupm1GjD1VaBdw1vsuO25I+2dWMf6wF7f6NdZ3\/lZKHL+PVqfxHvzdnqvpbmLa80dY0xjV35tiX7sP\/Pc5mcbU2Heco09yd\/jMSN+PAtieSH4D87gWnEXk6O3SZVhcr6XWRKO2OTpifdM4m8O6lTPJ1r37NWMUZ6Fq2iHSuSqv5jwNw9UQ892eehtzkOJR8u2eGjGb3yk523ba1of6QPc2mN9Zq6bw9mh5pv6M\/YoGz8hTjPRR3ZNRj7b6P9Oe6zfR+sQheaeONTjzvtv4+gmuz8RX1t23Pbc2rx1Xdn2696+4v0mrhWxjh5rbFtG7zU7d8sdY0xj1+xdxeyZZk\/8hnmJmIrXxp9NnPXxY1kQywvBf3AG14u7dDg5u3zZkwxvp5fUNTZ5RmI7eVjYwySS+nf17BPbb0zkNQHnxF7uhcNEHzZ\/3tp+FSGpC7vydbm3NY\/0XM7L9fGS\/BXqGrEQ+k73Gt9tiJnRePEbDVs3jS\/qluvQxoibNPfSXthS3vrbAzv53NpX1uBOcRrGFnYHP+Vr06eNg3gt49HN83lg\/0579Dolv+V1dX1an8vrPnqtpv0312mO4nrErfG1yw67LkO7Yt813vVYOXaq79vn0o9zv877fn+2c5bXFtNXIvpGt5M\/DWvXJPYj\/RX3nf\/ijjE2YrfbNv9nvcbXvn7KjTf52RH68v26eHjzPaR52jiQ8x7gbbIglheC\/+AMHi3uYvJ1SS8XdRBEdB1xKAdSEs1lkDx7ibXfbzqs0\/0Xl+zt2wtr8zTpZ9JBEoqb42tjz9Y8zPNGnNT74TeGJD82c1R1\/cGm+y1zMfVif23d4FdVR4zZs+HXy8dL9m+YY+0zHLLST9Lv6r44kJv6g\/n0cHN8+WX8kx7tiQM1d1+na\/9t9lSfP328OPEVv3Z2uX6fpK3Jt2M64876D230nEd7SXJXfA3t+PfHf5rxm\/79oKq9jnePWhcn5PL4T29\/t7bc6Ndx334vPLm+6vPxWs9johtXpk297zA+j3O4Y4ydsavXRPc9fHZr\/JY5yT1nfLAjPj2+rgWxvBD8B2dA3AEAAKwBsXww+A\/OgLgDAABYA2L5YPAfnAFxBwAAsAbE8sHgPzgD4g4AAGANiOWDwX9wBsQdAADAGhDLB4P\/4AyIOwAAgDUglg8G\/8EZEHcAAABrQCwfDP6DMyDuAAAA1oBYPhj8B2dA3AEAAKwBsXww+A\/OgLjzxL\/UZP\/q1NWIfwVL\/tU3AAC4Eojlg8F\/cAbEXf2TplcXywAAcG0QyweD\/+AMHjXu\/ry9fLz+ky6+yZvllej593A+eeYdNgDALSCWDwb\/wRk8ZNz98\/rx9NfT44rlZv4t4SMfiGUAgJtALB8M\/oMzeLS4+\/P2FOZcyq\/Xjz9CLNfnVkz++Xj9VdtNhfXvF1fn5eM9iNLURgjPOMbLx2seKz8L7cZjhHbB3szcJj3X+Fnn\/vwl9WMpubz8To+Uffqz0\/Hz1J02M9+K\/mp9AIDvi89nFsTyQvAfnMFDxl0Qae2bZe+LKDiTCC0C11+39XsCT4nRLESTKNSC0YjbUEcIUNHGU9oVcTu3KdQvddP8lCi33wxI7Pwdvo0V\/Gp+1fYgnMOz6tc6FyHwU3\/aVgCA74vPbRbE8kLwH5zBQ8ZdIxajqJPiVX0MIQnXpkgxKYjCtvPmNQnC9nkUkEo8O2QbTytQhS3KJj+fiRhu5m+xYlkIXFVsH6JesXvDt46evwAAviM+\/1kQywvBf3AGDxl394jlG9589sSfFLrt83Z8j60n+5jatPWZ5DvF8uyjEsFfqU9l55ZvHa0\/AAC+J4jlg8F\/cAaIZc8OsXyDmOuJP9lf+zyJUyN+teg011Ob4nyG4vZOsWzFfGZqZ7IFsQwAjwBi+WDwH5zBQ8adePP6\/uZF3Zag64nZ94\/XmXh0\/RWxat70dsVhELDShlbwahE6tynYbwX5c6rbzL+lzN\/VffU2JPu0Pa+hfz0faxdiGQAeh96ZilheCP6DM3jMuIsCLoq\/+rUvXtRFoZmKEX3l\/kTcZfH3IvrJIjM+G\/SRBKltk9Fi2TO3Sc3DldqfnH+6ZSh2ivG07UIAB\/Gd7z+5eed6\/\/r4V7nf9+17xx9xnNmbbwCAa+JzmQWxvBD8B2dA3K0nir31b0pbsQwAAFcCsXww+A\/OgLhbz5FiWX6cAQAArgVi+WDwH5wBcbeWKJT1xwo+g+pPfM4XAACuR+9MRSwvBP\/BGRB3AAAAa0AsHwz+gzMg7gAAANaAWD4Y\/AdnQNwBAACsAbF8MPgPzoC4AwAAWANi+WDwH5wBcQcAALAGxPLB4D84A+IOAABgDYjlg8F\/cAbEHQAAwBoQyweD\/+AMiDsAAIA1IJYPBv\/BGRB3AAAAa9gllikUCoVCoVAolEctlkYsw\/3gPzgD4g4AAGANiOWDwX9wBsQdAADAGhDLB4P\/4AyIOwAAgDUglg8G\/8EZEHcAAABrQCwfDP6DMyDuAAAA1oBYPhj8B2dA3AEAAKwBsXww+A\/OgLgDAABYA2L5YPAfnAFxBwAAsAbE8sHgPzgD4g4AAGANiOWDwX9wBsQdAADAGhDLB4P\/4AyIOwAAgDUglg8G\/8EZEHcAAABr+IZi+f3jxdnk7fLl5Xe6fVGm\/vv9UubRK09vf1JFyZ+P11+9Z\/F+bhv90rsHLTqm\/vr16jzn7j6\/uCd38s\/rx9NfTx+v\/6Tr4bodg5\/HI\/Hn7amunyqfWEPB+\/O6vn4KwSfPwiMhn+GjvYSYTbkG7iTEnMyz16JZ4+Zc+Fk0OeHTxLP5bu2y0N\/+PLFcWCx7x9VkHA\/Iayfnbf\/1RVQ9\/PfNzwdpDqgQsG6D\/t25R2LWZD8r\/4cNtt\/3DaX9eUnxWvv2q7CJNX8ThIBbTcgn3rdLD8bHoeR3cvL9lJdN1xSfj7bG63NCfYl1hRd93g7LdcXyP39M0HlnXvu7tG3\/Td445mSwGXw9P1zBN86GKx+mSdT23\/Z6\/31CZJ38BuFS+\/bL8GtmEmvaQ1\/1Rn8Pf95edsXFp36y8QWEwxGxfDdBTCGWb8ScKd\/tzfIFODKvrM8JnZx+Er0z9bpi2eIFycWT9bb\/5j+ej9+tbSSDnjA7Wax5rn6YRt+OE8deUdMFsWzQHwk6Rrx2EmtYhwvF4d64CCIAsfyTQSzfThNziOXbODivrM8JiOXP4w+db5Botv03F8v5Rzk1WHTw5Oe1PH3893+193IyUfWF\/+J9Jw7z8xLwcbzcxtrh7a595nF0G93uKiQbd8eQFnu9hKP88NuKIr1uc\/8lstAzZY\/Q9PWuQxsPoSwXWtbHDvNmeW+c27gI7Xr3BvXzuLHEdVX1e20S8Zs4UTb3YtumPktx6\/sQNoXnIr72xJQa3\/VnD8bGR6V\/t1fc1y9yjI5\/ZP\/ZnjIvMU6+5+vIt2TFv66u\/UZ3vFZ5TG+D+1qM08OuYfXbxM8FkUOcDe\/WXz1sDjD1m5gKJfkz2OG+dr7QbXUu02s\/eTZbzy46Xnt+9\/3XOeQ46GH6ciX4Ns\/xH+1bZZmKtT1CUY8180\/b38YaB1tEmz322xhIRdul6e0RmyPinrJ+lfPZs0aiveuvmxPyc1eqzWm+z69l3mWviPV6+R37r\/soj+ftcF9v7Ne7\/D3A17VcXizrBbDBei22\/RcXbRj4KXDi8xqYKgmHzWSCuHPP+02OkwNb+lPb4ccT\/i19Vjtqmxz8uba9vhppDrs2il2jvNHsJszX7vmz83Xxv123Pf6LdcqYKQ7Uuk\/wda+CTZi1mJj9NNFn\/cSq7WjjvNMuxUZpJ2JltJcCNhb8uua2JVmHh0PimDK3eZt6e9F9rcZLtoTxcpymkuwrh6aySY7VI\/ZV49GNL+K19ZGvr+Nfx\/LAP7auo\/GtGjP14\/0x8PFsrfzXcd2THXmcHian1vEnfi7zMvNwfb04\/8jnLcbnYXwRp2aeof\/sj\/BM2xOR6+KRsb\/3WbtGLbKtJ17H+aavU4n9JB\/O\/N+rU+aZbOv5SNQPazb1ubY7rnGedxy\/zjvZI\/bOdI2LrZ01Gtmf7Cljpjb1eQcxZ7VHOtfKXjXWnjUy\/jA5Ic6lxlN\/v9TnAdPGf7Mh\/eHtjV9bWzrc5e8xvp3l8mI5E50vg\/d6bPvPBJwhz9FuHrW4JsACzT0d\/LXEQLKbyJPHtkVuJmm33ng7gvlUkj+miTMRNpn2jd5kca5qTUKb1v92HYf+G6zf3lj363QVwrycPb2ifPZp0pqqovfFMM5tHJj103V64\/ji++3EgqSJiz7WzvlezKQ9558VW9t92Mx3j02+jvLRVr\/t88iGf5Jvh\/tiZOvw0JutVepbzWsfNabzGm34I9in4+6mscO845h5jpvr2POV6EcVb\/fsWWd+MxrbPMqejXXu0rGhmWPsN\/oo1ZdzCaUTP4lg98iGMJZeQxV3e9bY9jG133HPOdD0WQnzs3PwpHl4\/9S+N9bIj6PWeBwje\/aLx9dTc5P+dTT+3OJWf0\/w9lu+jVjODp8Gzsls+28+hxhkG4vbbChHd5P1N5Cnt4mmiSPZMdxIk41zDZJ9vcRh6CcYMX+zoQNd\/8s6W\/4z1701nnClfRv9531ty\/757MP6uKW3lt0EbNY0tCt1\/Dgj2zdsmBxkEmtnuJ7sJZkntK3tPtTPHTts6vnIxmu\/X2+XL3kuW2u0tS\/yvo2lqZfu1\/qztXKkdY7t9q5Lsl8dxHM\/x3Y67hp\/9cj2hX6t7\/R13\/9mTv7eaMzZM093Pfv04kXvqa117tE5U5o5Sp\/E+tVf28xs6K2hnMeuNQ72ijpT+yPKpl3nwHiPtDbG8aKNsV2tP1+j3hpb\/8Xx0nzU3Dtr2Rkv3yv+uHG\/3uPvEX5MyzcSy3FxbtkMX822\/2yACsLC9gNKzbm3gZp786DYtdEVbWDrjdLbDBcj+bfre4eff\/BXqqd9J\/3Z+mLb\/1v+c6jEMF67Hr7+dYhzzfMoZXlsWB+3DON8Y\/\/ovTAbZ7KfPU2y7mPt1ONr7DN93e7Dpq8dNll7PN2DsWdjiWPffsM\/ybfTfZEI901dT7Q1t9mOiUiO0Ykfgp+ED9T1hp87Ph76q2Btb+dS5hqKXp\/uuto5SGbPJGo9+0S7zNhqT+1f50rnTGnmKH20FWst0zUJY9lYEuN1\/N30Z308tT\/xiXPA7pG4Lnl86x97PV8j3VdErWF3rnpsvd69ex1\/BOL9JsYs9\/h7gPej5fuIZR9E02RzPtv+62\/oGIguGJr5tQGcN1Nvg8l7sU8dXO9vsf9e4JeAlMHr+n0NfbZ22GRXrkub62GTScb7o95Lm1j4J\/hLrE3sp\/o291vvWX9t+c8\/t+uxn+vt2+zDWKy\/19D61DKNc7ueIpbtesd+ZnvJPMv\/ES3sy\/gs1+9Skrzz25tvmWzs7EU9p+TnYmu6nsylPUA6pHxS+snX4l5rh\/BzqB+vp\/6x9tpxnK12z4RrX8\/OUdnVX6v3Z3nf+3jiB+OnuMcHdju0n22MpWt1zxLrlPmG8UVO99divIbuutr48Ly7GPNXW8\/669nHztfdafLbLP\/1KXXc+OFMaeYY+1U+kteOP27th6OkeFM5xPUR2yf\/iHnfvMbW3i37w\/XMzx1cn9094gnj+f7cXN7+1jHbzD3aMlyjVL+5zvfM3ELbyX7xxL1a55+v872b9qvnZn+P8TZYriuWw0TTYviiNvU1mfrPzseUdgHjwubnPohlMIXifPL\/OvdK+IeArcWPofswG1NuAF9CX60dqt80Xun36uvUWQeZICI5UabSzEk\/f3EJ2b5Fyc+eXJLa9p8Zr5R9idPXfSR6+6BZwVmcmzXqJnHTZ28vZaw9NZ7qONMEXfadSOzdvWjvP328uAMlfv3vj\/+UMeTm1PhAxf6egyfVdWO\/+vknP7W+dfEb\/pNrvrfXP47JOP7Zk\/9PU+J59kH4z1T5vlnf0Vr5wzf8p6R0v933Eh0jL07gx6\/\/4+N\/\/n\/1ftfPvrlap\/QbWUxMWZTdbrw8frDTxkMu3lfTdTWxrnw1ejZfzz6jPaXv9\/Nfn+JXX6eZY9uvamPuDxnts8DGOTBbY2vv\/91j\/x3nwGiPeIp9MSaUb9w3Qy95rOf\/vW+N5JzcPbVXzTrP9otEjvPkzlHfx1379S5\/j\/F1LNcVy98Q\/Af34TaySSKR\/KZnDnG3lnCo2IMR4EycGOgK1t9OtMy+6YFvxOfOAVgHYvlg8B\/cQ\/juupMk9\/71JeJuLV4sb76RAvgy4luxViyPxBV8Rz57DsA6EMsHg\/\/gPvSPiHLZ\/tFnhLj7POpHlAgQuBrqx8y5IKJ+Fp87B2Ad3u8WxPJC8B+cAXEHAACwBsTyweA\/OAPiDgAAYA2I5YPBf3AGxB0AAMAaEMsHg\/\/gDIg7AACANSCWDwb\/wRkQdwAAAGtALB8M\/oMzIO4AAADWgFg+mF3+U78CyP\/qH\/\/Xkr7wDyCEv+oT\/6LPKka\/HxK+BvatJ\/7apVW\/Hzn+KrnjfjXX8j1zwL6+D\/1XyLZ\/7dXadbN83R+YifPm93MDfH96ZypieSGb\/kt\/frIeIOn3Kn7VXwszf\/5yBeXPVSKWT4N9W38\/6QqxUn\/nMr\/H9lZ8Psj5LeSGaW5bu26Wso6H59f6DQJiGeD74\/eyBbG8kC3\/9d9ytG+W\/7y9HPeGiDfLP45H3bd6n3yvN8s\/E78G27lF\/0Wytetm4c3yDbiz4QWxD4BYPppN\/6WPYEx\/NHn0j1MRyz+Oh9y3TRwjlk9nT24JORCxfD34GAlABrF8MNv+qz+u6x3E8YDOz11JSd7elwmtHurx0Al1jHCt7d1B9tscaOGAq32rgyUcbK7uW\/qcdXmmx7JiuYzn7h36lvwT3OdTsX7NASzqNs+rIFBrofxi2udi1rKHr\/dI2LWLvt7jY7n\/5sKgxID8PwZmLZQdJh7CnsjPSsl73gqTZJfvX4xXv6neeu6wIjTv3X\/GMdv4MRTrM8k4xtu+2n4anwR\/3r43pi8bsq98XWffu+9TzVs8dyWvQXctS26s9ozXPParY0qPpdbHkfOm7HPXmouc3cSwqKvHm\/jZngGjGMgxJuuHNUzkmJudF+p+Rj+f+VA9K3ZEm+pb8dyfn4f7WtoIsAMfaxbE8kL2+k8dGjZxlEMuXYeEUK9jootJUCXunBht+5zgwoVLPM9Poj+T4FPyCQk5tEt9q2Rj2njxnZO6x\/eR52RtuQp3+dRf5zYxGdeDrX8d1zYn7lii38RBGDDXaR30oTHG9\/twNLFV\/Tz2cVu\/rpmmxEFun2Igr4l\/LtdHfsMo46nYUfZ5urZ2+rHEeKG\/0GbruaPEp41XX9Kc5d72GP\/FnJRt7jGL8YTZVz20bzxb6+afi\/obY8h18HVf3Jpr309iIPRtfPDbf8scma15trs+71\/HueevY8l14hp4+\/Rzteb+Wq27sNdfF3uivbFu9XEdL42h\/Czt1cR1642f2siYEzY0Ps62lDXRz+M4eY28jaP1ks+07d5PtY61B2AbH8cWxPJCbvOfTIgm4Q0Og5IsRf3m8FGHSRyjJirHqH+R7Er9Xl1\/ryQ6j0lIYXwz5oW53acenZzroSRQvtP1PWFcc1BVn92W5L39D0cTmxs+FvGtysDHTQw4Qn8d8VFLrK\/XttdXXN9qa7veOqa2njvC\/MQYA\/\/kGOu3N3td0NT32DbNPmlpfTFft1jf+1YXWb\/QEbt1zRw7YsDXl7nr3Ynl9NV0zZ2lek3tenhUbuztcemLvWue\/Z3qK9t8yc\/nfu49t7Rrl\/pQ\/tXrvxU34bnygWC6Xj3\/RZRNAHfg48yCWF7Ipv9+v7YHSUoIOsl2Eo6rE5JseF4TVpPA5IGlknPCHmipTkw6MWGW+h1beolIJ9107fss\/V6Pu30a0AdLNzkr328dVGnM0odZhw38PB6OJjY3fOzr33CANjHgqGvkx9L7QmHixa6160kLq3Q9joe9wknYO\/BPjSl93fRn2I7xfD3xi6P163zdQn3luzFt32Zee2JA1nHzeVX+ms1Nr2nPFj3XntiTfexd82xTrD\/OGXM\/955bdvnX+Ggrbtq9IdharzCeax+KsCv1H+\/P4xGgR+9MRSwvZNN\/bnO3yUgn2SbhhGuRCMx1k8DUgdVJgJ3nowO0scXRS5ijhBfr9p+dyqd86tF+jfW1n7bWofVZrBMT\/PzQsjzkvm1ic8PHds03mMe52ScdQt20lu2Bb\/Z8upbxEMYv7fYKJxvTrX+kzXGO2c65b7ZjvHPdofXrfN2aec5o5mza74qB6qf3Nznu1pr38ritL\/to13TreeMLNV8zfsPcz73nlnbtTB8j\/9uYEHEyXd9d6+UI\/Tk7mrpxTs34ABv4vWtBLC9k038pgaqEZBOMSCQhWZvn8RCuSaFJYObAivXtdb5nEmSyryR4a5snJ6acIEuiSvf8tU3w4voSfNKnroU5WFJSFklfHSJNffvcH3TGzzewGXc\/EbEmUdTs8bFeI78ur3IvCppD3sRM89yRxZV\/pvZ4gxVCW8Jo67nD7tVm70b\/qL0t+ttmK8YdKRdogWgIdvm95eb05tturVsa14xT3\/hKrI3putzbFwPRt0\/Nr1GbrXm7Runa5pUy9s7nYt771lz7\/4+zL\/aw5ec4Xnje+wmoI85f9G\/zYhNzHrsmZtwUM2q\/uH7iGMkH3fXyz2yOjtfvzzburU0Ac3pnKmJ5IZv+S0koJ51YBsnFlZgwRML3955jQvTt\/vu\/ZD8uUaTEU+rKhJPvueTZiulUXN95rKfnf9f71saUlENxiezVJL\/wn2pKW5HQLsNnfKrb1iSv79dDqK2vfJ4OAnWvlH1J3td9PKpfe2vS83GzRhuxqfdpW9euWRERcn+IEmNF78e\/nv821\/q3I\/z1178\/\/nP63NmlxnMx83\/NdfqmON8Ldpi4LqXEbQ\/jP1FX2+SKEjiCMm7fru66WVtHfXtU3RcnrJxdqv6OGAh99Pdef83tmuYezX1lR3omcm61pe1vc82TrXYdYszt83O5N4iB2LezV7Ttx7z13ThuAtP1Ha2X81H4z+r1WbbFi+Xwn87T\/eiD8CT2NZgfQMbHjQWxvBD8B\/fhE39PALj74e3bHOLuWox+XWJ9y3cBnLgpQkcyeKsIq8li+fsItyyWkZrw00EsHwz+g3sIh1Dnbdne31FN3F2I0VtJd\/86fx0tvmFrxbK7z1u3LwKxDHBVEMsHg\/\/gPtLB6eJHlvrjwznE3bWwPwoPpfPN0Kl0PyqCEPoazH7\/BoJZxzRxAj8bH+cWxPJC8B+cAXEHAACwBsTyweA\/OAPiDgAAYA2I5YPBf3AGxB0AAMAaEMsHg\/\/gDIg7AACANSCWDwb\/wRkQdwAAAGtALB8M\/oMzIO4AAADWgFg+mKn\/ur+qyZf+X4oC2IuPIwAAAPg8vTMVsbyQbf\/F369Zf39u\/n2bCGa4H\/YtAADAGhDLB3O7WHbkv4vPX86CO2HfAgAArAGxfDB3ieX0p2cv9xe+4NvAvgUAAFgDYvlg7hLL9s1y+Gzz08frW\/qMcxHR+SMbudg\/OZpEty2h39T2+bX08fK710b0me34R4ybbHl\/7tR3xD+J6u+JfuX4oo+KtiHa5Yn3n95e0\/P0UZXsLz+O+\/pl55+E\/sl4vwEAAMDn6Z2piOWFbPvPiuUqIoNIlP8JUH0sY9Qui9V0ndskQRnr1zHsZ6OD6C3jZHHq2qj\/jGhFaha02qYolHObZFfpJ48bx9CCWAjuMIavKwW0eB7G1H1Vnzwu3k8AAADweXpnKmJ5Idv+k8K1lioeHeWNbrr2hHtSNDqSeI1trQg14rm5NgghXMRnY8fWGO5OebOcKOI3XRuBqwV2LfF5TwxvzONB8T4DAACAz9M7UxHLC9n2XxR707ehHbHciNBAR3iWjzhsC9tIrBfbGdu+SiwPha+uWwh2RVHd+uQxYd8CAACsoXemIpYXsu2\/+8RyFohVqHqseE3CNxU9Rk8sW1tOEsvNZ5gzA7GcKW\/DEczsWwAAgDX0zlTE8kK2\/dcTrYaeWM7thDDUQtM\/t20kvXHNvSQ+v1Is52tll2vzGsboiWU\/pu0fscy+BQAAWANi+WCm\/ktvh2vpiDxVZySYUzFvZOtvqJDF92HaNeI23Xci9CXX+x\/\/qvdDH0nUpvL09t70qfrycytvfmN5+W37SNabenFeg7reB89Ppt\/06IHxfgAAAIDP0ztTEcsLOc9\/XkT2Ps7g7jthCz8b9i0AAMAaEMsHc5b\/Rp\/9\/fP2Yt5Ow0+EfQsAALAGxPLBnOc\/81GLVPTnfeGncl7cAQAA\/Cx6ZypieSH4D86AuAMAAFgDYvlg8B+cAXEHAACwBsTyweA\/OAPiDgAAYA2I5YPBf3AGxB0AAMAaEMsHg\/\/gDIg7AACANSCWDwb\/wRkQdwAAAGtALB8M\/oMzeLS4038tUpY1f\/o8\/jVM\/oz6iNHvdf9e9P6c\/hpifF4zfk5bu\/DXaX\/qnkq\/ulX8ddxjWB2zsb8r\/BXckHMP999+\/HliQSwvBP\/BGTxm3NlEn\/9EOiL3SMo3Kt9aLOdYWS+W6zdy14vDn7F2V0P8jYNDxd4RMev7fDr9D5fFlxNH++82vD0WxPJC8B+cwWPGnRXLjvD26lp\/jGfvX9F8f\/4+Iv+0t5NLifHDm2X4PMe9WdZ5YXXMeruvEacr3iyvzKGI5YPBf3AG14s7\/RcljxGvHbH8z+vHkx\/zKm8ogj073tx8sx9RI5bnIJYfjYPEcpMXDhDLz9eIhU+L5cU5tHemIpYXgv\/gDK4VdzGhe5tUWS5gO2LZvFnOouU1\/CttMDYa8dATFLGvfv08bixRHKv6vTaJ8iPIXAY2ynnaNvWZOLSFTeF5\/kbClT2H7XgM7R85z9Cv9EWec7kXDzPrm2yPGjP7odidvuko164v9\/XL5ly0H+vc431\/Xe2x39iM16D4Oj8X8R37ywe37CPdu3EO47XYMwdhp1uPd19vEIuRHEOvpV0ZT8V5b361brE5+SXYZ8ZVcbAintxYu36S052HR89FP\/Po5zWWJvtuiokhMZ5d8+jHPevdX49qY2ddM7fuLeXHuR1tzInnbm5hvilWIqN5tPR9FZ5s2DDG17cglheC\/+AMrhR36gBUxSbTzxITYU2iOTHGcZpDtzBoZw9rkVj9PdmHSuzhwMiHXDqQ1KG+Pe84pj20xXU4xFI\/arxkSxjPHLzJvnKQKJvkWB2GY0SCveK67dP62N15S\/XlXBzN3Dv21R+v+jnmtnEMvbYWbUccS7ev8ZHFRJn1eA1S3TJ2sNmOk9r6Z9JXt85huBbV\/vEcUv187QWQG1vbI0ntQ591jQLeDtGvjQE\/jp6Hs\/B3vI7+cH2K+v6erK\/sbGJAr6NHxVPuN7Qzdlsm81A2NGujbYhz0vEQ5pja13UaYWKo9FHnHcdo\/TBeb\/9c1C8xO1nXgq+Tn9m5d1BrlPov89W+KnaX57F+6f+3X8M980jXHUa+Gtswx\/vKglheCP6DM7hS3IVDwielTpGH3edJyU8VnVDbBJru2YRpDlldpzeOL77fmPSH89pzeDusnfG6HVMfXuIANIfQSAwEdtoU6Y3R6TP5qDmYxOH32jl4a6zINTIHqe+r9NPOb0awc1g32ih9KsXSdA28D9X8NbFt+olGM\/5tc6j01mI+hygydPzvFXHaPjG2KiKOpGj1\/PP+8W73orG77S\/bGp\/viqcwx725Zcc8PKlP\/yz7dh5Lrc\/0fDsosZkwc8lxVOt8ImY7Nmq2nkti3ZHPu3OXeafZP3rs+Tz6WF9t2rCBH8+CWF4I\/oMzuFLcjRLdfoG2F3ugttgE6umKhd4hVer4cUa2b9iwMzl3E\/3k0ApzSP1qW3cc2jttGo\/R6dOhD20nFP3bojyO+1qOF9pnvwV79BrF5\/Fe82P1UN\/b5otuZ5E2tewQHoO2vflL8vyGNt4wB894LfaIp45vJ7a7Gh3RNBdHEV2nvPlNtHbPY\/CWeIr+SWWwZpGteUR\/Rjtj3exbaU9L67MtP\/fWJo+fx2zr3B+zPRsbdsdltGPkx2CTnbvIsb3n++fRx\/pqy4YtvA8siOWF4D84g2vFXTpwbLkx+W0zT9ie3oEU75mDOiTRei\/UKYl2No4+UBt2ClNrpx5fY5\/p6x2H9g6b5mN0+vSEfv0cnA1vfvzqGyWcSr2EvQ5kUfA+\/g9I6eBr21a6dhbyGPVpc2CP2nZtroS22Rd+PUb93DEHfT2fQ2+t5z7xtDGU7w3jPFH6dvN6NfulZ\/dUtOyNJ0EYw\/tzmGtm87DP9PXcb7HudN9ZwvysD7Rf4nxkbHwiZjs2DtmMy5kfs93jHNvO65Z59LF9btmwhV8bC2J5IfgPzuB6cZcSc0i446T6OdqDw9JLyrmdTMZKYDhssu4l3nxgd5\/lz9iK5Dw64AONMEg2yoMtCRA9p+TnYmt7INq59ASUZT6GfZ5JB73\/D0Sp7zj2k\/6PQmb84PumrzyGFRPeFlE3+LdtWwjPTYy48WOfc+ExW4PRszxP7R87zm1zmK\/FzjmY+mFfyphQtDEU6Ii7Py6mda1kj+vbzsfGTLzu76lI7Gsznrz\/hK2hjrVdMpyHmbeNHXvtKbHU+izaOvKxJ7WxPpFtgq3+uasr8sJ9MTtY14J\/LuJwV1wO8l62Q8xF2Zl82VyXe7N5DBj4amjDBt4WC2J5IfgPzuDR4i4m6pRcfekcSrqOTfopkeZiEmjvoAuJVrTRh622px5mdRxZv6EcFuLwkQeIL9kedd8Jh+c89r8\/\/jMcvqm4OTU+SEIhlolgHo7x8vH3xK\/BR9JvoR87jvb9iztg49e9enbd3EHobJF+mfrV0\/WjtsGvl1rfrq\/F\/YCJoWRrG3dmvr9vnMNwLf718a9yf+8c0ueo1TwkSVDl+r19UfoywjHREyStTyKzPeXZFU\/uXvhPi53+R4zmoe474fiSfZHn042H1mej+baYtnZdynh+zp+J2fm6Rm6MS8c8Hsz+sGPKXORsfLVx053HBOWrdG\/Lhgm+vgWxvBD8B2dA3K0lHAJbyRkOxh10NxxuAACrQCwfDP6DMyDu1uLFcu+tGXwde\/\/yIQDAahDLB4P\/4AyIu8+jfqTIG81zED+a5ZsVADiL3pmKWF4I\/oMzIO4AAADWgFg+GPwHZ0DcAQAArAGxfDD4D86AuAMAAFgDYvlg8B+cAXEHAACwBsTyweA\/OAPiDgAAYA2I5YPBf3AGxB0AAMAaEMsHg\/\/gDIi770z661qn\/Lq6+Beuyl\/qCr+6zf4lvUckrsns19fFXzW4\/dfijqL5S3nlz\/3+NEyMLoA\/OgRbIJYPBv\/BGRB33xXxZ2i\/XCzXPwUbhEj5HceI5S3q7+Q+R5yWP3P8438fuInRBZS1QyzDBB8jFsTyQvAfnAFx973Qf52ON8vfgn9eP17Em+bLvVk+E+ObtfBmGb4exPLB4D84A+LuG+GExZMSpIjl69N+LAOxnNn+yMrnQCzD14NYPhj8B2fwsHFXPjrgixAuRfSJjzmowzH\/eNfXcV8H0SHqJhHS\/sg2C9vXUjcf4qWuqq9RdUq93KcbU8xHiwNhmytTYRLEeK3b2KLGGInlkd8cI58nnz69vQrf+vtj26vgzOvhihGA2mdGnA5tkYi+Qx1tT5x7vRftE36x\/kzz2mN7g7I3+yehnvXWWI9jxXKwR6zVHvvKxzlU2fKj2DMD38xicJffhC+aGJXtQhH2hnbOhrfUvoyr4\/m96yv3zNmhf+oDj4qPBwtieSH4D87gIePOH4w9sdATJOnwzgeuFwlKJJV+7LXoVx64Ruj4OlLcTN\/65QO9tBf9pjahvTroZX0rHiSxr2KLmXe8rn150aCeF9\/1\/Tb0uRIwUmyNbS8CRbYxvqn9e9IYefyhLT2MXxxNfTfX1zDPOpfq43ivaT+xvSE8z75Ja57HV88c4VqOZ+z\/7dbFt0\/zL7ak\/qptY\/tinYE9HcZ7xvrG2CpiaI9dWzGq95YYO\/ksFBEXHtXG9f\/iYrLM1Y+n1mGyhvAw+DiyIJYXgv\/gDB4v7tKB7Q9GVdJB1xx68VBVB25XGFghkA74Urd9nvtubRHiR9LYtjGmFAGyGEHQINrJeVdR4xBCJjD124bPpXDJbNiuBZtDCSXfn7RFsmVLi17HPHat\/+ftVayXjpfe3Oa2W6K9tT9JfKb85lAx6v2o4nUjZvL1xD4tOjv1DeM901n3TCcG99g1jdFMuu\/7LvWb+HWEenpeai6j\/uGh8XFlQSwvBP\/BGTxe3M3Eh2Mq+hzioNX1tkRI+zz2bQ7oGY1tG2M2QmmDPLfQn5x3T9QYv0z9tuHzXv8btk+Fk\/y6YcuWDqo\/Z6vzTxWMrr83u6ay\/3ZuW6JPY\/uTdPzmkP33hGq1PaLjdId95tr21xDquzqhyHl27M91mxjcsqvnC+u7eB3nGuOg1G\/itzOew\/oqzN336cvMB\/Aw9M5UxPJC8B+cwePFnTkkLVPRJ0kHb6kb+x2LkPb5uO8BjW0bY4b6+rAf0xcW8XqH7VO\/bfg81VXPN2zfI5z6ft2ypYdo8\/s1jpHtc+PGj2Bk7Njt3Oa2W2b2pnUR4s0jY6AZy\/FpsexQItGMPyb6osaJ9U3fd\/l6blfyxTBGrR\/NdRO\/js4966tMtM2OD49I70xFLC8E\/8EZPGTchUNQi6nyo\/TmgNQH9vuzfVavg4AoB2ls58eJ93qHeT5k9YH87myxh3FAiINYp+1TH+bpuTrc3z9eu8Ir2qvFgxUq7XW5t+G3qc\/t2IG57XH8saCLYk6KRNffc+prakuf6NeXj5fyFjnZ7OzT7exc4jzCdRLaW7ZbYn0TI8+pfZpLHc\/4PfQtYiRfi3vWni37\/HO9VnPGe8b6xviuG4Nzu9r6ca4vv1M8GT\/osbSPsy+He9r3YfeeuIbHxMeHBbG8EPwHZ\/CocScPUl\/igR0P51j8wSkOx1THH\/zhP0iJewUpRNyh\/urHCAdtOqjzM3Ogqrd0rkgRp6n2lMM\/t3N96jllUaHnoMSGQdnhxFhul+con+ffXBFs3eE3T9fnxj7lz4HtzTyV36v\/Zn7t2zIhjSH7CP2rtezPpdjRW6OB7Zapvcr\/nT7kcxePr8Jua8\/fe+wz4+Uy8uFsz0jfqOtwr8bgf\/yv\/6j3d665ilGHmqv\/xifb9D\/+Ve9bwazGkXs6Pgv\/4U88z9EQx7LiGx4BHwsWxPJC8B+cAXEHALcw+hVpW2\/nAR4BxPLB4D84A+IOAHYT3rR23pj6t6xbb+cBHgDE8sHgPzgD4g4AbsF+JCSU8rlegMemd6YilheC\/+AMiDsAAIA1IJYPBv\/BGRB3AAAAa0AsHwz+gzMg7gAAANaAWD4Y\/AdnQNwBAACsAbF8MPgPzoC4AwAAWANi+WDwH5wBcQcAALAGxPLB4D84A+IOAABgDYjlg8F\/cAbEHQAAwBoQyweD\/+AMiDsAAIA17BLLFAqFQqFQKBTKoxYLr6QAAAAAAAYglgEAAAAABiCWAQAAAAAGIJYBAAAAALp8fPz\/\/SD68BENBaYAAAAASUVORK5CYII=)\n\n","e3019bff":"## 1.4 Project Plan\n![DS_1.PNG](data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAABDYAAAIuCAYAAABEhoiAAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAMrZSURBVHhe7f1Pqy1H9veJnTfzGxtP90so03Q1Hv1mNkbbWCNxoZuaXFtlo1G73fvqosFtTNGFJ7IeZChXc65vGSGEKVdhGoGkp0enm6K6m4eamcKTO3ggnRGRkRmxIiL\/xM69V+bOzwcWujszIjLyGytiRayzz9HT\/\/Q\/\/p80GIZhGIZhGIZhGIZhe7Snf\/fv\/l2jbf\/23\/7b7PUt2x77fAtDB2wvhq\/qGLrrGLrrGLofwxhnDMMwPSutwSQ2Ko2g5gwdsL0Yvqpj6K5j6K5j6H4MY5wxDMP0rLQGk9ioNIKaM3TA9mL4qo6hu46hu46h+zGMccYwDNOz0hpMYqPSCGrO0AHbi+GrOobuOobuOobuxzDGGcMwTM9KazCJjUojqDlDB2wvhq\/qGLrrGLrrGLofwxhnDMMwPSutwSQ2Ko2g5gwdsL0Yvqpj6K5j6K5j6H4MY5wxDMP0rLQGk9ioNIKaM3TA9mL4qo6hu46hu46h+zGMccYwDNOz0hpMYqPSCGrO0AHbi+GrOobuOobuOobuxzDGGcMwTM9KazCJjUor9fm7rz5rPvk0tdff\/JItn7cfmi8\/\/aL5+ufcvW0ZwR3bi+GrOobuOobuOobuxzDGGcMwTM9KazCJjUqb7vM1yQkSGxi2tuGrOobuOobuOobuxzDGGcMwTM9KazCJjUqb7jOJDQzbkuGrOobuOobuOobuxzDGGcMwTM9KazCJjUqb7nOanIh+TeWrH7rrvzRffz5c\/\/J7Wdf8Oyy\/LSO4Y3sxfFXH0F3H0F3H0P0YxjhjGIbpWWkNJrFRadN9HvvWRXDv+3eZpIW\/75IeLtmxTSO4Y3sxfFXH0F3H0F3H0P0YxjhjGIbpWWkNfrjExo\/\/zX\/X\/Of\/5q\/N\/+bL\/2fzP\/vf\/sGa+be5Zu7l6tTYdJ8ziQ2TxPDf2PD3fv62ed1+jv+4qKv7+vOlf3T0\/kZwx\/Zi+KqOobuOobuOofsxjHHGMAzTs9Ia\/FCJjf\/y\/Y\/Nf\/j5\/7351es\/ZM3cM2VydZfadJ9FYsMmMN4139l75psYcdLjp2++EL+K8lnzui2z1V9B8UZwx\/Zi+KqOobuOobuOofsxjHHGMAzTs9Ia\/BCJjf\/+f\/gfm\/\/kv\/g+SWT8R\/\/7\/8qavG7Kmjq5tubadJ9FYsN8W+Pzb5ufzL9tkkN8m6M1k9xw39AY6pq\/y7Hlb20Q3LG9GL6qY+iuY+iuY+h+DGOcMQzD9Ky0Bj9EYuM\/++avSfLi8n\/7r5t\/\/+\/\/vTXzb3nf\/GpKrq25Nt1nkdgI\/0jo5++aL\/03NqJfT\/Hf6AjrdvV8UmRjRnDH9mL4qo6hu46hu46h+zGMccYwDNOz0hq8+8TG\/+eX\/9b+HQ2ZuPj5v\/1H4zH\/lvdNnf\/639b\/zQ2CmjN0wPZi+KqOobuOobuOofsxjHHGMAzTs9IavPvERu7bGsZ++3\/5f\/ff2DD\/zpW55lsbBDVn6IDtxfBVHUN3HUN3HUP3YxjjjGEYpmelNXj3iY3\/5X\/2IZu0mGP\/q\/\/Th2ybc4yg5gwdsL0Yvqpj6K5j6K5j6H4MY5wxDMP0rLQG7z6x8R\/87\/L\/F5T\/+P\/8\/+p+EaWx\/86V+Z\/\/H\/6rbJtzjKDmrKSD+aOnw98OGWzZH0KVf6ckZ6ZM23byf4+ZUxc7kpXnbOdD1X5aYYU\/IPyINrpWZv\/GELaGLfb3uT45We7Ya+983dfQiDinZUvml\/u\/3e3Rundhf4Vh2MastAYfOrHxH\/32j9k259g1fX4km9bhmgA4p64r8\/pzuXkg8GKxjW9EQ18xn3ObuWvsuP5Y1D36X2C7z1\/3\/7vrGq2Y86HN9\/e17djjMFd3+794v\/qPguPzWjZ7ftnk7V6Ttu5d2F9hGLY1K63Bu09s\/C\/+0\/9HNmkxJ7HBr6Jcb9M6XBMA59TtynzfHpKiTSKBF4tt9kbUmDx0X23H9cei7uH\/AjuyWq2Y86Et8vdV7djjMF\/3NXTC57XsvuOsZV3f2V9hGLYxK63Bu09s\/B\/\/r3\/JJi3mJDbMHx7NtTnHxoNa+ae99qc0VQFhm4FkeuzSfke\/ptLrFPzvcFtzPx0I65Z0HcqYdodfIYifm39mV8YE7eC5bozc5+hXEuxh17fD1+b3ZvM3osacP6Z+KD+7f3\/5lfEZ5xOpr5kyuWtBm5FvhT8d68p9M\/zKxs1\/TWZlm1or4\/fJaTU+f532wf2ozHFtmb\/L692\/s34XlhtZt4N1dW8+e43N1z3VO1xHivEmuP76m2\/jNosxKjdOpfK5snPqp+vW8D6F+ju22eMsE7izNZdlU31n+9Ki8Q9taFdnf\/V4foNh2DpWWoN3n9go\/e9epxIbpo6pm2tzjk0Ftdefh0EnvGcW6Ny9KYsDyVZseuzG+h3cM8E\/OYz4+y645YNa2H7p36HJMu14+E1H9\/v+fbCNvkIq2mvvHWmz\/gg2eyNqLfQ5eT\/1obwvyHLjbcSbzfhePzcin9yHja8Rw8Z1mN9Sq9BS3Uqb7aPbuL87zeMDQ6pt3u+CcuZ6dt1u60br6r589hqbu87Ev4riNCv6ch9vXDk\/V+IflJTquDmWrlGF8rkxzV0TfcmtW\/0zs\/X3bbPnV\/TeCzSf1DdoJ\/rs6g3jvXD8i2VK\/w5NlpHrgPCJqf1VVhcMw7DyGrz7xIax3Lc2phIb13xbw9jU5sVky5MgYRfpd4WAMGWlQLKe9YE4Y7nyxqbHLtPvLsA56+512fpYM1fX\/H5nGnDjMmFAdIEwc10+M+nbyOfopwmdEXDVLBoHYbnyxqbm7DDuxsxmcI6fZOou9TXrW\/HBz\/wELD1s5j7f10KdpeXKG5u1vnfzK\/\/OrVXN38exUGdpufLGlvm7vD6mbfDvkXU7X3dfltPbW668sXHdwzbCOS80KsUbcz386X9mLLJ1coml0fJiTIvXZq5bufobskgDYbnyxmbNL6lRp0P0jFHNa+JCTvsF4x+VE23de3+V0wXDsIezaO4Ly5U3VlqDHyKx8d\/\/D\/9j85\/8F99HiYuxxIYpa+rk2ppr00HN\/DcMJv6gJBZ3saD32Xlxb\/5XTq8z34\/QcuW8TY9d7n19f8PDozP\/NcUheLfv3pZJA6430X7304kvvw+uF58p6458jtrAtmDST43lynmbtRH116LxHvMTca\/G1zK+tdXEhrH1dI\/Nzv3cprl6\/j6Wrad7Safw+pi2af103S7V3Z9JzY3lynlbrnvmXinemOujiY1CnSXXO4vHNHMtU7+8bjnLtbkV82MbWq6ct7njbN65P5gv0XyRvuFnca9y\/J3J5+jsr7bsNxiGrWPh2ustV85baQ1+iMSGt\/\/y\/Y\/Nf\/h5\/v+SYszcM2VydZfanKA2BKHWzMJtNyTh4m7+LcoU7rmFPbzn\/93a97mvENbbXKcyNj12aV\/7ryZG7zvYsBEY6hot8+8o2jdm2zX9764Xnynrjn02\/+YnB1uzdXw1N+7hJspv5rrP9qdTBR+q8jXxPFvPb\/LG6unZKrp\/\/23wHk5jOe9dudr5+3i2iu5FncLrY9rm6+fW7bTuPu22uufumc+5eOOul\/cFuTrh3Aqvl8oPNoxp7lrcl\/F1a7Bcm1ux24xz+HmJ5mP6LohJV4x\/2lZrth9Go+76nfZXW\/YbDMPWsTXW4IdKbBj78b\/575r\/\/N\/8tflfX\/7UJzTMv801cy9Xp8ZmBTWzyHcLfjbTHgUqZ325oG623WDwrRW\/0VBnc5zK2PTYhcHLmAuyts+fv2u+9Nl9G5j9++Q2R129SBNZZjATBIdAX3hmUnfis9R9Zc2xOjNjkbsubXzOBuOa8afIP6NfJ5M+U\/I1N7dd\/dK3Err7UXsTPqlopq+569Jm6x7Mp1irufNX1huuP5KZ98tdlzYrRhWvyzKFe5Prdu7zPu12uhfuleJNoPn4NzmDOrb94Xp8WBblc2OaHWdZf2TMS\/U3aKaPuevSloyz3Y9Eh3+vRWslzZOywj\/COqMxyV\/z7UyMf1\/H15Nt3XF\/tSO\/wTBsHTPzPXddWmkNfrjExr1sXlAzC3777+h\/lRXctwt5vFjPT2xsY5Hf49hhxzR8VcfQXcfQXcfQ\/RjGOGMYhulZaQ0msVFp5T6LLHSXcR6+QhfeN\/+W2XOfsIjvxRlyd28LX8sjuGN7MXxVx9Bdx9Bdx9D9GMY4YxiG6VlpDSaxUWnlPovEhv3WRvjtCnE\/+vpdWK+14Gt4879yel8juGN7MXxVx9Bdx9Bdx9D9GMY4YxiG6VlpDSaxUWkENWfogO3F8FUdQ3cdQ3cdQ\/djGOOMYRimZ6U1mMRGpRHUnKEDthfDV3UM3XUM3XUM3Y9hjDOGYZieldZgEhuVRlBzhg7YXgxf1TF01zF01zF0P4YxzhiGYXpWWoNJbFQaQc0ZOmB7MXxVx9Bdx9Bdx9D9GMY4YxiG6VlpDX4yN7Tt3\/ybf4NhGIZhGIZhGIZhGLbYNvGNDdORvWESMoAOsB\/wVR3QXQd01wHdjwHjDACgR2kNJrFRCUHNgQ6wF\/BVHdBdB3TXAd2PAeMMAKBHaQ0msVEJQc2BDrAX8FUd0F0HdNcB3Y8B4wwAoEdpDSaxUQlBzYEOsBfwVR3QXQd01wHdjwHjDACgR2kNXp7Y+P5d88mn75rvcvcqjcTGfkEH2Av4qg771P25OT89NU+nS\/PSXZmmps7t2Lbu+9e3BOvMMWCcAQD0KK3BCxIbvzRff\/5Z88lX75ovSWwkgv7md39ufvX6D4vM1Nk7u9g8P53bfz0qL83lZN7x1Fy2vNvPIvt+2\/Fax1f3rLcOuzwAPJ\/bMX5qTksGuabODdm07g+gb4ld+jsshnEGANCjtAZX\/CrKDyQ2WqSgucTFHNs76wR3f6ANbY3D7ZYSG\/5ALPtybR9vedAu9XktFBMb3SFJ2vShicTGUuI1Ip7rZznQL5fm1N+\/3bx9Pg99yI2lux9ff7mcXPnCNwaSOsLHIt+K3vM2h\/VQ9\/BZsd3GjxfrK7RK\/KJla\/qWWCcmwtZhnAEA9CitwSQ2KpGC5pIWc2zvzAnuf\/3rX5s3b950n3J0hx1\/YPCb0o1\/5XgZJDZS7pskGPNVfxDLHahiSGwsJdbd+\/upORkdxRx3yYPu3o38zo31WNtiPerHvLPsuiTqmEN370xDfXvJr2\/d\/fm+t4ycv\/vkzC0P+ov17fRwfSrNr+3pW2JOTIT9wzgDAOhRWoNJbFQiBc0lLebY3pkK7iap8S\/\/8i\/WysiDRPfZb47FRjW3+fWbV2tJOb\/Jdu2eLs\/9Rjjd8A6bZGfxBjv\/nPL1AdkXj3jXOX0Mf1J5OjdnWy7s58g79IeIS\/TctP+yjdbCQ0VwfTgkXdv3ivESfbHW+1FM0Ve9fxXqTeqd1cO\/Szgu3Vh3z5n2mccg1n3w90uXxEj0OV+EHxh8PW9pvfF53REdogt049mXsXXa5z2P+ImsIwgTCv7fff+8\/6zsAzl\/zyY2ZqyvwzVv4b2ACn2lHtk+blDfElMxER4DxhkAQI\/SGkxioxIpaC5pIe1PP\/69K\/04jAV3n9T413\/912WJDbnRntp4Jxvl9tDkGhIHpOFw5Jryn\/19Wd40HXwuPaf4\/JC0bYfsw1Qfu89eK79p7w8aE+\/gtezbb5mtX4up3x\/sluq7tO8T7UWHqJK+AyVfzR6keib6PKJH0m6oc1HzxyPWPRjDaPzMLafJ+bnkB\/6zv+\/9ZsJPQrzuJzc21vrxc7j54tsO8HNHlDcU63T4JJbpX\/hvi2+3v7AOOX\/P+nryfKlvOreiNSWkQt9EDzE3DLKOJGwjae9G+pYYi4nwODDOAAB6lNZgEhuVSEFziQxpv\/7tH5u\/\/eOfzfv375tXr141b9++bT5+\/Ni1sE9KjhUmNWYnNoSVN6Zi491thNMDR+GAFJSLNsy5DXB\/2Br+nTyn+PyQ9HDgkIewiT4mm36hxdQ7+PthX4v9L\/V5ID5wXNn35Hlz2vN1zauZw1S5r3lf9foP7URM9jlmTI+cFqnmj0esu9fbjFOnZaRPcN2PZTIGfqz9tQk\/CZAH+\/Sgn7bVk5s7lpE6BjHWrm+3P3jn\/L0qsTG1pgTU6HvVmBiU9C1RionwWDDOAAB6lNZgEhuVSEFf\/\/4v2WSGN8mjJDdyjiWTGou\/sdFvrMVhfNipJodLv5l15g+34oCU2SBHByC\/Qc6Yf3T+OeXrA7Ivnq5PM\/uYbvqFFlPvUNjkz9PPEZc15sfhyr4nz5sYr+5dXHtd3aCsJLsIer2EHp7pPvs+hSbvmc9p\/+J60i8eh1j32N+dvq0+\/tc8nJNGfpCOQUs3bu7ahJ8EJG3J+RC1K\/BlpY\/NqROMrx\/33uUKc\/Jacv6e1TJ5vvDxqTUloE5f\/7zY+jIb1bdEdp2Bh4NxBgDQo7QGk9iopCaomURGzkxyY6\/kdDB\/KNQkMkJb9MdDW6IN8tTGOyDeWMcHpNxzogPQ2AZakD0gtJSul\/ss+7S0j\/lDSPEdJjb54\/oN94dzSvDsa\/uePG+ivf5Q4823kyf1Vf+89IDWM9HncT3sBXv\/6XSyfc2NS9lnHoNY925M\/RhHY1jwg4xPx7pP+EmIbEvMh2I9gy8bPMdQriPetUP6TO791iC3Nmd9LVkTxLxc0r9r9O2YnFM9uvqWqNkbwP5gnAEA9CitwRWJjfXt6ImN8UP\/tlknuE8dTMQGttuo+vtmI9tvWqNN7MKDsnyOoPSc8vNj\/IY7TCr4a0P5iT7Kw5XQoq9feIe+vuhDqf\/yUOH6K58lPlf3fdl4xX2ZJvFV35+SVoaJPo\/rYfDvFF8f0\/zRiHWX\/hno04\/zlB8sndcBYjzd+JUTJBHSFyylOvI9A3w73Rws9vVKcmuzf9\/Y10Rfl64pIdfoa5FlSnVG+nQnfUusExNh6zDOAAB6lNZgEhuVXBvUPnz40Cc1Hu1XUZbjN6mxBWdvszsd7rWb3OfoQBkeHlvrK9YcgHJ98fWnniOvZwjfo7O4+Iw+jmphGHkHsel3jPTflzdm+xS3fT6bvvhnX9v3peM18p4ZpK\/mD3kZRvs8pofDPyd8j1HNH4xYd6\/XME7pOEg\/aAn9UNTv2xzzuxAxB3vpu+uJPyTP7sxULNTpx1ya72OpDyuSW5uLPj\/q44YFc+1afcN5smF9S6wTE2HrMM4AAHqU1mASG5VcE9QeJalhILiDFsnhNZu0GVDz1dKB7iDsZY0YTYYUqKlzL7am+6PpW4KYeAwYZwAAPUprMImNSghqDnQAHTI\/1fc\/pd1YYsMdzu77U+MtsY81Iv3WxzQ1de7HtnR\/PH1LEBOPAeMMAKBHaQ0msVEJQc2BDqBH5uvxI9kDFV\/tv2Zf+Nr+AWCN0AHddUD3Y8A4AwDoUVqDSWxUQlBzoAPsBXxVB3TXAd11QPdjwDgDAOhRWoNJbFRCUHOgA+wFfFUHdNcB3XVA92PAOAMA6FFag0lsVEJQc6AD7AV8VQd01wHddUD3Y8A4AwDoUVqDSWxUQlBzoAPsBXxVB3TXAd11QPdjwDgDAOhRWoNJbFRCUHOgA+wFfFUHdNcB3XVA92PAOAMA6FFag0lsVEJQc6AD7AV8VQd01wHddUD3Y8A4AwDoUVqDSWxUQlBzrKZD\/7\/FdHa6vPgbzeV07P9dJqwDc1YHdNcB3XVA92PAOAMA6FFag0lsVEJQc6yig09qnC6NS2eYZIZPZJDYgHVgzuqA7jqguw7ofgwYZwAAPUprMImNSghqjlV0eD67b2qcZerCJzUC88kPX6ez4RseLeKetShpEt47NWFVeFyYszqguw7orgO6HwPGGQBAj9IaTGKjEoKaYxUdwl9D6RMQnsw3Nkz5JFHR3e\/acokOWTdt6\/ks2oaHhTmrA7rrgO46oPsxYJwBAPQorcEkNiohqDlW00H8jY30Gxbl5INLTnTfvLDf1hi+hfFyOQ11\/TPCb4Z03+5IviwCDwdzVgd01wHddUD3Y8A4AwDoUVqDSWxUQlBzrK5DkODIf+vC4ZIZoXXJjNw3Ngq\/vhIaiY3HhzmrA7rrgO46oPsxYJwBAPQorcEkNiohqDluooNPQNhsQ5rYcN\/CGJIR0Tc25Dc\/wr+h0bUb\/T0OOAzMWR3QXQd01wHdjwHjDACgR2kNJrFRCUHNsYYOJlERJhv8tzGyiYsWl9jwn5+bc5DAiO9JfFn+psYRYc7qgO46oLsO6H4MGGcAAD1KazCJjUoIao51dPDfyhgs+tWQ8FsY9tdKfIKiK3sO\/65GfM9ZmMiYug+PCnNWB3TXAd11QPdjwDgDAOhRWoNJbFRCUHNsTQf57Y4+KcIf0Tg8zFkd0F0HdNcB3Y8B4wwAoEdpDSaxUQlBzbEtHTJ\/aDT6ex1wZJizOqC7DuiuA7ofA8YZAECP0hpMYqMSgppjezpkftWEpAa0MGd1QHcd0F0HdD8GjDMAgB6lNZjERiUENQc6wF7AV3VAdx3QXQd0PwaMMwCAHqU1mMRGJQQ1BzrAXsBXdUB3HdBdB3Q\/BowzAIAepTWYxEYlBDUHOsBewFd1QHcd0F0HdD8GjDMAgB6lNfjJ3NA2k9jIXccwDMMwDMMwDMMwDBszvrFRiREP0AH2A76qA7rrgO46oPsxYJwBAPQorcEkNiohqDnQAfYCvqoDuuuA7jqg+zFgnAEA9CitwSQ2KiGoOdAB9gK+qgO664DuOqD7MWCcAQD0KK3BJDYqIag50AH2Ar6qA7rrgO46oPsxYJwBAPQorcGLEhvfffVZ88mnzl5\/80u2TI2R2Ngv6AB7AV\/VYY+6P5+fmqfzc\/dpHjV1bgm668A6cwwYZwAAPUpr8PzExs\/fNl9\/7z\/\/0Hz56RfN1z8H96+wR0hs\/OZ3f25+9foPi8zU2TsE9y3z0lxOT82G9vyqrOarz+fm6XRp1YU57G+NeG7OT0vnTU2d24LuOhATj8G2xnlprGdvAAD7prQGV\/4qyi\/N15+T2AjJJS7m2N7ZRnB3Qfqp3eCGtjRov1xOKj\/5sz9xvMlB+Xabl9v1+XbkfNWOeesrp8uCNyGxsYhY92GuZv3SaGvm7w319WPu7NQkQ58Z30k\/EXXiZ4h3fbk0p9K9FUH3LegOj0puft3Kp3qEDw++P\/38OGYv66+pG81Bu15k5nCBPe4XAGDblGJtZWLDfGPjXfNd9t5yI7GxX7axiXNBOg28yw6sdlN8853JPbnTZmsnxL7qftJ7ujynvjNF5gAGZXIHgNOpnWsZDc0G+Hy+nb52jk+0HW\/i5\/lJVMccPoJnuMP2uW3J4Nvr7i48ICwB3begOzwqufl101ib8Vnj486nlz5\/WflknrVziX0FAGhSirVViQ3ztzb4GxuxoLmkxRzbO9vYxHWbdrlLtRsBv7E1uHL9Tzv6e\/J62FapjsFsltuNxsU8x98z5c3mw22k4+v+c7w5MZuGIaHiyp2fw\/pyAz7Wp5Cptvz97qNBHNrd4SCtu3afS88pXa8h76uuX4nvhEQ\/JWv7YMY7PKSJn6J5WWKNDDOe9YDkDwDd3AmlsDq2fiF80NcZ\/CD0nbA9f7\/kJ5lnJpTKjI3dRLv2vbr7hTUpcpOVQPct6A6PSn5+dR9DCvEhWyeZgx43z8r+Oj0fl8fsgSGxUeqHa8+\/o4zvaSwEALiOUqxdmNgwv4KyblLD2FESG3\/68e9d6cdhG5s4F1TTzW8chGVwtYdmeYgXwXe8jt8UpBvm4doQ8H0z8rm5DUe4yZB9mHqPgbQtW1b0LWjKND605Q889kbMqn0uPWfk+TXkfdX1vZxskPe7MQ99INA+ei95mAoPWgeidAAwPhHqbrVzNwJ9O9+SviN8eMz3ejr9T7Z8Z7Jc8WAx4ifFOh2BH0T+YRlp90rQfQu6w6NSml8xI\/EhV6fk05OxcHo+xp+ny4e4NaP87SlZV863sbYBAGooxdoFiY11\/65GaEdJbPz6t39s\/vaPfzbv379vXr161bx9+7b5+PFj18I+2cYmrrRJDRIb2UOluT9c6zf4nsk6Qfs96WYlaTfYcLuP6YYjajPc7Mx4j4FMW1HZOc+S9R2r9rn0nJHn15D3Vdf34gHH9kFsKEubT0NUPvaPxA8OQvEAEM2DwB8S35Eb+gU+HGKfF\/hh4l9jvlC6N+E\/4r7c8BvcoaFUvx5034Lu8KgU59cY0bzK1BmdQ3I+hky3tShmC2zdds5G89hj30leD9cK+WwAgOspxdr5iY3v3zWffPVD\/t6V9giJjde\/\/0s2meFN8ijJjW1s4uJN7IAJrl3w7jbT\/U8MexuCbz6xMVYnaL8n3TCsn9iQ\/TGW2XDk2or6PGNzEzwv1Hf1PheeU7xeQd5XXd+LbYuxsgiN7Ph2fXQ2lB\/GPjcWx6B8AAh8MdRU\/jvZ0IdtTPheSNKWGHvra7l5ZBBlPaN1zCNbf5C+EvWt0O4KoPsWdIdHpTy\/Ysrx4Zo5JJlua1HMFpi6Zq64dxH9CGJ0bMP8jJ8NAHA9pVg7O7Hx0zdfNJ98+llka\/1KyiMkNuZgEhk5M8mNvbKNTVxhkxpuBmzwHdsYmCL+ENoxWUcrsTH+HgOZtmyf\/YZjyeYmftfb9TmnqaF0fT55X3V9Lx5wcn0P302MZVLef16kwWMxdgDwc8NvnC2TvlPpw7at8DAcj30yTyPyfjJWx84R2Q\/pL7n+rwS6B6jpDo\/K2PzqkX4XzasFc8jOvTF\/nW5rUcwWDOuEqxfNvexaERM\/GwDgekqxtuqPh65tR09svHnzpiuxP7axiXPBNtr82mAbXsuUEdjNchTYp+rkNhvphiHZhIvNzrINx\/R7DLiyybdSSpudTrP85ibu1637HLVlKV2fT95Xp\/rmxri\/LzXKjWW0yXPt259gXdP5HTN6APB6hpplfCfULvbhjF9E9UPEWNuxGzmoR4i6llIddz3fB7FmCP9ZE3QP0dIdHpXR+eURfibjw\/z4a2638y9KELprbm5kni\/m47KYHWPqDnNQxMSurXiOxsTPBgC4nlKsJbFRybWblw8fPvRJDX4V5Vq6Da3dqHuLNwCOTLkwkPeb\/TRo5+toJDYME+\/RY8q1OjwP75Vu5t079PfCZ9l++nutBZ1atc+l54w8v4bYV8P3Hiy7OQv8wmpkPgfvZrXo61\/admON3YZU+slxGD8AdH4RipP4jhirjF9F2ib1A6KxDOrZ63JuGEb8pFRH+q03\/7CoD7l1ah3QvTNV3eFRyc2v2Pecj43Hh9DP2+tjc6jFx5Le+rLT83F5zB4wdaPY2M2loX7m\/YvPBgC4nlKsJbFRyTWbl0dJahjYxMFeUPNVe+DKHd6OwR7WiCT5OIOaOvcE3XUgJh4DxhkAQI\/SGkxioxKCmgMdYC9o+erRf1q1\/TUi89PLSWrq3Bd014GYeAwYZwAAPUprMImNSghqDnSAvaDjq+6rxgfOa7BGKIHuOqD7MWCcAQD0KK3BJDYqIag50AH2Ar6qA7rrgO46oPsxYJwBAPQorcEkNiohqDnQAfYCvqoDuuuA7jqg+zFgnAEA9CitwSQ2KiGoOdAB9gK+qgO664DuOqD7MWCcAQD0KK3BJDYqIag50AH2Ar6qA7rrgO46oPsxYJwBAPQorcEkNiohqDnQAfYCvqoDuuuA7jqg+zFgnAEA9CitwSQ2KiGoOfahw\/b\/F4Fwe5izOqC7DuiuA7ofA8YZAECP0hpMYqMSgppjHzpMJzaez0\/N0+nSlryOl8upeRIPWqttuA7mrA7orgO664Dux4BxBgDQo7QGk9iohKDm2IcO9\/vGRi6xAduAOasDuuuA7jqg+zFgnAEA9CitwSQ2KiGoObajg0tePD15OzdDesEnNp6bc3\/\/1FyCr1CkCYmx9lpeLs2pv2faluWfmlP3APuNja7t8N8OV8+XnXwuVMOc1QHddUB3HdD9GDDOAAB6lNZgEhuVENQc29ChSwYECQObqOiTAj5ZMCQz4vvd56C+TEDY+\/2vk7gEyZCMaD9399IEiWjr+RwnK2yCZOjX+HPhGpizOqC7DuiuA7ofA8YZAECP0hpMYqMSgppjEzrY5ID8ZoNJPviEgUtsxPmG8L5ISIhkgyMoL5MTAZOJDdvO0JcocTH1XLgK5qwO6K4DuuuA7seAcQYA0KO0BpPYqISg5tiEDtlEQ5jMKCU2RIJh+BD9mslgQWKj8C2K6cRG+Fn0a+q5cBXMWR3QXQd01wHdjwHjDACgR2kNJrFRCUHNsQkdbvKNjfw3MixXfWOjxbcvnzP1XLgK5qwO6K4DuuuA7seAcQYA0KO0BpPYqISg5tiGDi5xESYPol\/x8PdlIiP41kWckHDlh7+hIXHf9ij+jQ3xbY4kseHbP8kkyNRz4RqYszqguw7orgO6HwPGGQBAj9IaTGKjEoKaYzs6uGRD\/+sbUXLBJAxOzeXZfCPCl4m\/GZF+08InQwIL27TfrvD3gl8VCa77BEWa2Oie15YRl1smngvVMGd1QHcd0F0HdD8GjDMAgB6lNZjERiUENcej6JAmNuDRYM7qgO46oLsO6H4MGGcAAD1KazCJjUoIao5H0cF8q4JfAXlsmLM6oLsO6K4Duh8DxhkAQI\/SGkxioxKCmmP3OvS\/OsIf7Xx0mLM6oLsO6K4Duh8DxhkAQI\/SGkxioxKCmgMdYC\/gqzqguw7orgO6HwPGGQBAj9IaTGKjEoKaAx1gL+CrOqC7DuiuA7ofA8YZAECP0hpMYqMSgpoDHWAv4Ks6oLsO6K4Duh8DxhkAQI\/SGvxkbmibSWzkrmMYhmEYhmEYhmEYho0Z39ioxIgH6AD7AV\/VAd11QHcd0P0YMM4AAHqU1mASG5UQ1BzoAHsBX9UB3XVAdx3Q\/RgwzgAAepTWYBIblRDUHOgAewFf1QHddUB3HdD9GDDOAAB6lNZgEhuVENQc6AB7AV\/VAd11QHcd0P0YMM4AAHqU1uAFiY1fmq8\/\/6z55FNnX36fK1NnJDb2CzrAXsBXddi67s\/np+bp\/Nx9mkdNnXuzBd0fVdsxWGeOAeMMAKBHaQ1ekNj4ofnOJzN+\/rZ5\/em75rukTJ09QmLjN7\/7c\/Or139YZKbO3iG475+9HyTmspqvPp+bp9Oleek+wjjbXiOem\/PTU7PM\/Wvq3B993R9X2zGIiceAcQYA0KO0Blf+KsoPzZckNrp\/OXKJizm2d7YR3F+ay6k9nLcb4sHO7Rb5euyh\/8EPsWskNvagU8lXbd9bnzldZvaexMYiQt3NoTWep97Wma+Sl8speMapSYZYjGVcvnDAXlLn5dKcSvdujPR37+ehjfVnak4v0zazRucevhNtx5C6z\/Ip2B33X9e6OSQc6Jr4bX0ThwSAHVLa09clNr5\/13zy1Q\/5exVGYmO\/lBzrvriAPxxM8xsAyHPNxmhPZH3VHqTOzTnynwnE4QvGyepuD6WZw\/CK2E37xDgZ3+\/H3fQpOVSnB5P5ddy3D\/qyxm9u\/M4hUveo31eyWNu2pFmTp5aZvWg7RqT7TJ+C\/aGyrkk\/v\/J51h\/ZJwHADsmuwS2LEhs\/ffOF+xsbKyY1jJHY2C8lx7ovMrHRBex+Q5nZVIvDqdtwmp+wGBs2CmajPQR+347bVMuyji6p0t+PN7Gl55SuR9hNjC8Tvs+MfhXrxu8Yv68h1naeTuVymqS+6nWL3zEh0q59l4tIbBS0rdXy0Zh\/APDj0X00JEkkV2bQrXRINHNhStOJMtk+LqhjDyFh\/zLvd0Ok7sYf8z7evZPx60DT1H89NdrOeff9aDvGaEzM+hTskfnrmmFq3Zq7rsXzMp6jmTmQrJ8xNgbNru\/vm3nq+ynfdf57AABcQynW1n9j49Mvmq9\/ztyrsKMkNv7049+70o\/D6CbubrhgOmza85+LAdtuRvIBOLdxGDvQy8924zD1nJHnD7SbiWCDErU72a+xuqKsPDCEG7W5Os16n\/sjfXXY1El\/CZH3uk1dr9+ItpVaPhrzDwAT89R+DP1a6B3StX+y86KzqOEW0XaCHD\/Dgjpp38b8bH2k7ka7\/LP9QSV+V6l1T5W2fo3yJse+ZUfajjEaE4N3gH0zf11L55L039nrmsHHjuRZ0+unxD6nrzBV38\/h4Zmy34veAwDgCkqxtvJvbPy75ruv1vs\/oxwlsfHr3\/6x+ds\/\/tm8f\/++efXqVfP27dvm48ePXQv7ZHQTdzfkptnYgoBvNwjifkccqOe0Izc15tDQXSs9Z+T5RWwdv0Ge2pAIorryHd0hx3+MNj4j\/YzaqHmfOxD5aka\/7KFIaGWZrW2dlo\/G\/APAlfMrxNQLryd6j4y5JXd\/WZ3cpt7Mk3L9dZG62znaajBY3k898boQcLW2nTbRvNqXtmOUY+K0LrAfZq9rU+vWknWto5\/L0fx0\/hVdGotVLVFMmqw\/cb\/iPQAAainF2vmJje9\/CP5YqPnjoXxjI+T17\/+STWZ4kzxKcqO8ibsnmQ1jtPmeEfC7zbnZLITtxJv7OYG923BEFgT2wnOK1wPcYSBsNz6Yj71fua58x66s\/Zxpd5ZOLTPe596Evhq\/V8Z\/PNaPwgNYywJta7R8NGYfAHIaLZ1fnmTcxBhnnz9g\/TlcHwwL69ixj9oY8bMbIHU3\/cs\/uyaxUa+tQzxzZ9qOUYqJWZ+C3TJ7XbPX2rFPrCs3dT+HrSPiUjcHiutnhiE+2U8T9Sfu17wHAEAlpVg7P7Fh\/xevn7m\/sdHaWt\/WMPYIiY05mERGzkxyY6\/U6LA+uU1tuHFeEvDjDXe8uZ8T2OVmo0T+MFG8bp4Tth09a6Jfo3XN7fAdW\/z90fcZ0ymk9J73J\/RV06d0A9aa9ImcBgu0rdHy0Zh9AJjy41ENBUn78RoRb+hjSgfQxXWkb+Te74ZI3U0fV0lsXKFtj2hjb9qOkfP3kk\/Bfpm9rk2tW1P3c2TrTKyfGdZPbCx8DwCASrJrcEv1r6KsaUdPbLx586YrsT9qdFifeGNtsRvfYYMRbdJtAC5tNOPgHW\/u5wX+\/OFBkmnLUrhu32fYNNh+9Z8n+jVat\/scVXbt2YN+2sGO+JlpG57Se96fsq+6Po4d+vp70ncmtK3R8tGYfQBoifwomadj4yQRZe04+eeV9O7Gasa6MDBWRyQMhK\/cGqm70XbMx+W7Tc3pJdo+n+Oxtm2Lcd2TtmPEuo+9A+yZ+euamC8JU\/cz2Oek\/j6+fqbIOT5ePzNPzbwT9xe9BwBAJaU9PYmNSkqCzuXDhw99UoNfRbmWbvNognBgUQDuNsLuXrshCAOy3RQHdUuBfjKwGzJ9mXrOyPNDbF+6MqfLpX0fv7GZ7le5bndPPNP+JKctm7TZtWEtuBm1MfN97k3ZVyc2ZH6DZ63VzXyeqa1hqZaPxvwDgGFknlpG5pckGrdAf3s9HiOLHBNvpmJNHUPUh9z73g6pu\/HTvI8vTWy0XKttOGY71HaMSPepd4Ddsmxdm1q3FqxrhtKc6eaya6O9b\/wvaUeU6a46xupP7zMWvwcAQCWlPT2JjUpKgs7hUZIahmt0gA1jN+S5jdN+UfPVB9RyCVtbI2b9qoSgpo42GrofRdsxiInHgHEGANCjtAaT2KiEoOZAh8dk9Ke1O0XLVx9RyyVsa43I\/NRxkpo6+txf9+NoOwYx8RgwzgAAepTWYBIblRDUHOjwiOS\/mr53dHz1MbVcAmuEDuiuA7ofA8YZAECP0hpMYqMSgpoDHWAv4Ks6oLsO6K4Duh8DxhkAQI\/SGkxioxKCmgMdYC\/gqzqguw7orgO6HwPGGQBAj9IaTGKjEoKaAx1gL+CrOqC7DuiuA7ofA8YZAECP0hr8ZG5om0ls5K5jGIZhGIZhGIZhGIaNGd\/YqMSIB+gA+wFf1QHddUB3HdD9GDDOAAB6lNZgEhuVENQc6AB7AV\/VAd11QHcd0P0YMM4AAHqU1mASG5UQ1BzoAHsBX9UB3XVAdx3Q\/RgwzgAAepTWYBIblRDUHOgAewFf1QHddUB3HdD9GDDOAAB6lNbgqsTGT9980Xzy+bfNT5l7NUZiY7+gA+wFfFWHPer+fH5qns7P3ad51NS5JeiuA+vMMWCcAQD0KK3BFYmNH5ovP\/2MxIYQ9De\/+3Pzq9d\/WGSmzt4huO+M53PzdLo0L93HI7Garx5Ywxr2t0Y8N+enp2bZWbmmzm1Bdx2IicfgGOP80lxO25pfAACG0hq8OLFhvq3x5TffNq9JbHT\/cuQSF3Ns72wjuLvg+9RucENbGoxfLieVn\/zZnzje66C84FCupcetyPmqfcfWV06XBeqT2FhErPswV7OuZbQ18\/eG+voxd3ZqkqGX4+v71FnWV0Sd+BniXV8uzal0b0XQfQu6yz6dmxs9Fu5MOM52jOXc6fxN+lm27I0xe4xo\/ti5lZmDCfMTG7fQ4K57IwDYFbk9vWFZYuPnb5vXX\/3g\/ktio\/uXI5e0mGN7p+RY98UF3zRwLzuw2mB7q93uVpCHhxEeTY\/YV91Pek+X59R3pligIUjdu7l6ym9szUb2fL6dvnM21PEhwPhJcACwG\/X0QBDVMWWCZ9hn9gda73fd3dkHjOWg+xZ0b58b9Mn09+FjzEGIxjnnn90eRI537Of3IZknbb\/mueH8xMbWNQCAxyKOtQMLEhu\/NF9\/\/kXz9c\/tv0lsJILmkhZzbO+UHOu+ZBIbBhtUw5+QuXLpT8\/k9bCtUh1Dt\/m+dMHb3jPlTXB3G+n4uv8cB\/94s+vKnZ\/D+mKzMNonQbeJ6dsxfQ0PGNF9v4GR7aeborj8Psj7qnvX0U1WlYZyXA0znvWAxLqH\/i382urY+rKZt9EheMzfw\/b8fTlfPJlnJogyvk\/dx3wbE+3aNrr7hTXpFvMI3bege8ycBA\/sg9z8Ctd2e3g\/nyf8+Mo5Zv06rN9axqmHRIJrKyli58rQxnB\/yTyv1KD4bFc\/9z4AAKVYOzuxYX4F5fU3v7jPJDYSQXNJC2l\/+vHvXenHYWwTdz\/SgOqIg7gMknKTaT+LIDpexwf7dDMyXPOfh37I58bP8OWHwC\/7MPUeA1KXrr9h\/+X7y8\/Bc6bKb528r5Z8x3OFhvIwFR60DkTuAGDcyvhxqHvvb9EBu5sP0t+T+VWeLz2d\/idbvjNZLjncd+3Z5xV8JVMnIvCDdM4U2lwBdN+C7iFu7bjFM+H+yHHu55HFjLWZG27Mh8uDT\/ZzqHqO+We4T\/HzY9ycL307cSSGTfYhZrkGY88efxYAHJtSrJ2Z2Oj+YKi0lZIbR0ls\/Pq3f2z+9o9\/Nu\/fv29evXrVvH37tvn48WPXwj4pb+LuSWmTGgTU7KHSB173KdkYTNYRAdvi+hI3I9qNArv5GAbvtL4t74P9jPfosWWH51jCtiSifNJvSa79DZP31ZLvdFylYewfk3o+KLHugX\/LDa734cTfpY+F\/j4xX0Ls84J5YtsO65Z9wc7Rtmza7oT\/iPty425wh45S\/XrQfQu6t9j3794jEgz2TH6cuzljfLzzt9DPohhw7RyT9Uvzr6WfR+E8LBG1u2CeG5ZqIBHvZPvNnAGADPk9fcUfD7XGNzYSQV\/\/\/i\/ZZIY3yaMkN0qOdV9Km1yzSeiCsg2YPriHNgT6JOBO1gna70k3Akm7YfC3H9s2+\/tzNjOyP8YyGxbxHIvYlNi+Re0M5XMbkLHyWyfvqyXf6VhNw8y4HoRY91CHYP6Emsp\/Jz4WtjExX0KStsTY27kl51E8x91YB2WydQbs3Ja+EvVN9GFF0H0Luse495C6wh5Jx3nwWTvO3nn7eSHmzNVzzDxvmANjSQBzz\/h6yf\/cdR+\/jPkyU32QLNSgpfzs8XcCgGNTirUkNioZ27yUMImMnJnkxl6p0WF9XLBMNqnhxsFuhNOAHhIFYsNknXjz7SgE7vCC2NDEwXtiIzHjPXpyZcO2RD9k+al+L+rLBsj7asF3PFdq2H\/emVZrEuse+7f3Mb\/xtoT6ZnULN\/QT8yXEthUehuOxT\/y9xV6L2pqu47HzWvZD+kvXXqGJq0D3ADXdBYkWsFdy4+znk\/nv4FvdvHkWc+raOWbrm0SAN9nWwDDPXZvR3JFzI+rXRB8yLNJg9NmurdI8B4BjU4q1dYmNle3oiY03b950JfZHjQ7rE296LV3QH65lygimNtMpJljLzXG6EUg24SKYx8F7aiMx\/R4Drn99Wb8R8m3l+hF8TvSYKL918r46b4xrNfTt241n7CiHIdZd+LfXM9Qs4++hdrFfivYMUf0QMdZ27EYOEQYxvr6\/rlyhTnc93wexZsj2VwTdQ5R0N\/0OOmo1vNFz4b5k44mdA6fWV8Mx7vzf\/B+JIqft\/FX6x9w5Zv4d3Sxj4tIQ40RME3MhjmETfcixRIPRZ3efZ74jAByL\/J6exEY1JUHn8uHDhz6pwa+iXEu3QbAbdW9+4xySKRcG6H6zH24CxuqIzbIl3QjYzcpUMO\/vp\/Vt+WgjMfEeIcE72Weaz0FZt5Fwdrpc2vcJNiMZPUbLb5zYV93Y+XcZ3imj4jUatrjDjPST4xDrLv2782U5PyJ\/FmOVmQvj8yUgGsugnr2e9+VwfI31PlKqY+d3XMeaf1jUh9w6tQ7o3tkGdB\/6c7vnwn3J7326OSPmQTkGXDfH5BwpzT9TLopt3VzwbZdj2MJ5blmmQfnZ3b1UNACAwhpMYqOakqBzeJSkhuEaHQDuiZqv2gNX\/vB2BPawRiTJxxnU1Lkn6K4DMfEYaI+znQcieZAkMAAAHpTSGkxioxI2Lw50gL2g5atH\/6nT9teIzE8lJ6mpc1\/QXQdi4jHQHuc0rri5QWIDAI5AaQ0msVEJmxcHOsBe0PFV97XcLR\/Ebg1rhA7orgO6HwP9cXaJDP9rHO5XOUhqAMAxKK3BJDYqYfPiQAfYC\/iqDuiuA7rrgO7HgHEGANCjtAaT2KiEoOZAB9gL+KoO6K4DuuuA7seAcQYA0KO0BpPYqISg5kAH2Av4qg7orgO664Dux4BxBgDQo7QGk9iohKDmQAfYC\/iqDuiuA7rrgO7HgHEGANCjtAaT2KiEoOZAB9gL+KoO6K4DuuuA7seAcQYA0KO0BpPYqISg5kCHbXL0\/8VoDnxVB3TXAd11QPdjwDgDAOhRWoNJbFRCUHPsVQd78D9dmrn\/c7Sl5bUhsZHCnNUB3XVAdx3Q\/RgwzgAAepTWYBIblRDUHOiwTUhspOCrOqC7DuiuA7ofA8YZAECP0hpMYqMSgppjGzq8NJfTqbm8PDfnp\/ZAb+3cPNvr\/rO53xVviQ\/+rtz5Oax\/Xfm2Qnc9sFyiYbRc2H9j5p0CXi7NKagXNk9iI4U5qwO664DuOqD7MWCcAQD0KK3BJDYqIag5tqGDTwD4g\/+QEPBn+5fLKfpVklyiIkxOyMTAsvIm4THcs88O2hoYK9c9I6hn7\/fv2NYN3mf8\/cDAnNUB3XVAdx3Q\/RgwzgAAepTWYBIblRDUHNvQwSUBwnN8kkyw34wYvvGQS1REeQBTfiIRUixvv0kRfLtCtNUzVk7es8SJkAhRnsRGCnNWB3TXAd11QPdjwDgDAOhRWoNJbFRCUHNsQ4eNJTZEAqKcZBgpJ\/rriJ\/rvsHR1umNxMYYzFkd0F0HdNcB3Y8B4wwAoEdpDSaxUQlBzbENHTaW2BB\/+yJNUHSMlZv6xoZMfPCNjUmYszqguw7orgO6HwPGGQBAj9IaTGKjEoKaYxs6bCyxYf4d3SwwWs49I7xv3yl8hnwfEhujMGd1QHcd0F0HdD8GjDMAgB6lNZjERiUENcc2dNhYYsN+NImGwIJ7IePlzDc0SvfiuqfLpS1LYmMM5qwO6K4DuuuA7seAcQYA0KO0BpPYqISg5kCHlOibFR0m0XASf\/VzbjlYB3xVB3TXAd11QPdjwDgDAOhRWoNJbFRCUHOgQ0r6bQn3DQ+ZsJhbDtYBX9UB3XVAdx3Q\/RgwzgAAepTWYBIblRDUHOiQwyUo+l8hsb8qkktWzC0Ha4Cv6oDuOqC7Duh+DBhnAAA9SmswiY1KCGoOdIC9gK\/qgO46oLsO6H4MGGcAAD1KazCJjUoIag50gL2Ar+qA7jqguw7ofgwYZwAAPUprMImNSghqDnSAvYCv6oDuOqC7Duh+DBhnAAA9Smvwk7mhbSaxkbuOYRiGYRiGYRiGYRg2ZnxjoxIjHqAD7Ad8VQd01wHddUD3Y8A4AwDoUVqDSWxUQlBzoAPsBXxVB3TXAd11QPdjwDgDAOhRWoNJbFRCUHOgA+wFfFUHdNcB3XVA92PAOAMA6FFag0lsVEJQc6AD7AV8VQd01wHddUD3Y8A4AwDoUVqDFyU2fvrmi+aTTz\/r7F3zXaZMjZHY2C\/oAHsBX9Vh67o\/n5+ap\/Nz92keNXXuDbrrwDpzDBhnAAA9SmvwosTGd1991nz5ff7eNfYIiY3f\/O7Pza9e\/2GRmTp7h+C+MZ7PzdPp0rx0H2FgNV9F40Vse414bs5PT82ys3JNnfuD7joQE48B4wwAoEdpDV6Y2Pii+frn\/L1r7BESG7nExRzbO1sJ7vYnee2md7Bzuw2+DtvmCgfYl8vpfj9l5NBdJOerdmxafzldFiiGxosIdTcH03ieert+vubw4+vs1CTDLMfSfB4rbxB14meIg\/fLpTmV7t0YdC\/cuzGlmOhj1KK1BjbLVvY+AABHpLQGL0hs\/NJ8\/fln\/a+ivP7ml0yZOiOxsV+2EtzNpjHcMLpN72027UuxfSGxoU7sq+6nv6fLc3M5kdi4Jdk1wh48CwfYlbDzbmKconXDHq6DPtnP6RoS1THvkRy2fR3vY4X2bwy6F9q\/MVndTR9O5+a8dK2BzbKVvQ8AwBEprcGVfzz0h+bLT9f79gaJjf2yleAuExt+c+vyCebf7cb2Yja45qdmfgP8Yg+1\/qd6cjOdJiTGy7tDw3D\/\/CzLFza1Sb3ueve887N7F3dfbNCjut07cujOkvdVp\/HoYWNK48L4GZ\/M+c\/RDjZZ3a1m8rDp\/b37aLAHwtCf5ZxKD8CObs6PSh2XSQ\/kuTYm2g3fKzmgZ97vhqC7R1t3\/3z3XxIbj8FW9j4AAEektAZXJjbc39tY61sbR0ls\/OnHv3elH4etBPcksRFt4M2mWG7Gu416sNuNf+rXfQ7uy4NqvCF3zxj60H7u7sl2YoZyhrhNf5gYNvRxH+RGuXvP6JAAnryvTh02pjQeGT95wMoeKh+frO6VB+zxORjQtX+y86czOQfl4T05ELuxHutPQtBG2rcpX1sXdPfo6m77Y1\/mvv2A27KVvQ8AwBEprcFXJTbW+kOiR0ls\/Pq3f2z+9o9\/Nu\/fv29evXrVvH37tvn48WPXwj7ZSnCXiQ27Ee83t5mNst2Ah5tpgyk3bPqHDan9kDkQBOWTzflA1M4UUb8mDhy5d5g6AByYvK9OHDaWahyVj\/1ukR88EFnds\/Npjr+PzMEQOx+D67Zu2HZ+3O26YQ7j1twBfarOQHw\/PWC79sv11wXdB9R0t+8fr+f36gfclq3sfQAAjkhpDa5LbPz8bfOaX0Xp\/uV4\/fu\/ZJMZ3iSPktzYSnCPN8atRRvb+IBpsRtwcWDtNp6+XJrYEM+w1m3iw4OAYOpAa+9HbcYb4aTf\/jm5dxjpx9HJ++rEYWOGxuXxC8c+M5YHIat79QE71Nlb6YAdjpsY5+zzJWLdmKhj1yDpF9FcnPC1lUF3j57usa737Qfclq3sfQAAjkhpDV6Q2DB\/V+Oz\/o+Hrvm\/fX2ExMYcTCIjZya5sVe2EtzHfyKXSWzYzbI4sNpywwZ6OJTaD5nyAcmGfiBqRyLrRc+Zc+AQzwzvQ0TeVycOG1Maj45fi\/+ca+cgZHW3etQcsGdqmLQfj\/PonPSIsR2rIw\/XFukbufe7Ieju0dPdxJ00IdSa7DPsjq3sfQAAjkhpDa7+VZQ17eiJjTdv3nQl9sdWgvvixEa32Q03zHYDHWw44w11vEFPcc8Y7refu7ZkuxFiE2436v3niQOHfKY9VLBpLpH31YXjKjUeHT9D52emzr1OVhsjq3v2gN3p53VK\/HlqrEJEWTtO\/nmZeZUg53OpTje+2Tnn2ujrJAfu24Lu\/uMGdLcs0RG2zlb2PgAAR6S0BpPYqOTaoPbhw4c+qcGvolzP8sSGwV0v\/RQt\/Ulht5ku1fEHAmvB4SG4nuujOwz7+5e2T3MTGy3RM9t65nN2sw+xr4qx7yzrQxMal8fPYf2ovZf63zHIrhFW0\/SAHY9Lq6P0925OeL2tlfw9GrdAf3s9HiOLKB\/5QqmOPTQPdXrzD4vazL3v7UB3f30DultIbDwSW9n7AAAckdIaTGKjkmuC2qMkNQyPHNzTxAbsGTVftYewzOHsIGxtjaiZ13tcC9Bdh0eOiTDAOAMA6FFag0lsVEJQczyyDuPfAoG9oeWr0df8D8i21ojMt6AmqamjD7rrwN7gGDDOAAB6lNZgEhuVENQcD6lD\/zXm4\/6U\/RHR8dXSr0EdB9ZKHdBdB3Q\/BowzAIAepTWYxEYlBDUHOsBewFd1QHcd0F0HdD8GjDMAgB6lNZjERiUENQc6wF7AV3VAdx3QXQd0PwaMMwCAHqU1mMRGJQQ1BzrAXsBXdUB3HdBdB3Q\/BowzAIAepTWYxEYlBDUHOsBewFd1QHcd0F0HdD8GjDMAgB6lNZjERiUENQc6wF7AV3VAdx3QXQd0PwaMMwCAHqU1mMRGJQQ1x\/512Of\/UhCWw5zVAd11QHcd0P0YMM4AAHqU1mASG5UQ1Bxb0+H5bP43rUsSFdOJDdvm6dKWfDxeLqfmqfjyThuj52Dr\/S9w760rc1YHdNcB3XVA92PAOAMA6FFag0lsVEJQc2xLh+fm\/HRqzuexw7rk2N\/YmJPYOF2G1INNRuxULOasDuiuA7rrgO7HgHEGANCjtAaT2KiEoObYlA7PZ\/cNgJdLc8p9s8BeH7594M7nPrFhkiL+3qkJzvKZw7z8JsPwrFLZITlQruvumWeHfTH3wzpx36bbK72brBcnMByuTHTda9x9HHv+lBZLdE0SMKYf0bu6d4yaEzBndUB3HdBdB3Q\/BowzAIAepTWYxEYlBDXHlnQwB2V3aM4cyLuD73Ct\/WwP6P4wPSQM5IF76rM9dPvDvjxw22RKue2obt8XX3846Psqcfm57U08P\/gcI3Xs2gvKr6nFaFsiWfVyOTenti998VIyK4A5qwO664DuOqD7MWCcAQD0KK3BJDYqIag5NqODODTLBEByyO5xh\/XgPO3KlpIH4jkOkzTx1+JvDqSH87G6aV+SxEP4HhXtyXdL2o\/oEhn22xPOomTRNVq01Otq+tVq0L6L78\/4eziYszqguw7orgO6HwPGGQBAj9IaTGKjEoKaYys6yENzclAWB\/qBmsRGfNh3NjxrKC\/anqyb9mU6sbGsPflucxIbfTIjfLbhGi1aanR1fXluzqaeqWPfJfOeGZizOqC7DuiuA7ofA8YZAECP0hpMYqMSgppjGzq4g216KB45lPdMH\/7TA3iunQBfRpadrJv2ZTqxsaw9+W6LEhvy8zVatCzW1fe9\/a\/rg+mPSXyYb3NM1G1hzuqA7jqguw7ofgwYZwAAPUprMImNSghqjk3oYA\/7w0\/2PfbQ3h943a8yDIf09nPpp\/3i8B8dwOXhPktXpj10x0mDqbppX0YTGxXtyXez7QefYzLtL3q+oSuTaFGjqxlD93+98dVMG+dz2yfRdg7mrA7orgO664Dux4BxBgDQo7QGk9iohKDm2IIO8QE5xCUzhrOz+VZAW9ba\/F\/XSNt3daJvh4jkgEuqiHYtY3XTvownNgzL2pPvFmqSJhVc\/fi60HT0+Y6SFjW62jrh+1s9cjqnMGd1QHcd0F0HdD8GjDMAgB6lNZjERiUENQc6wF7AV3VAdx3QXQd0PwaMMwCAHqU1mMRGJQQ1BzrAXsBXdUB3HdBdB3Q\/BowzAIAepTWYxEYlBDUHOsBewFd1QHcd0F0HdD8GjDMAgB6lNZjERiUENQc6wF7AV3VAdx3QXQd0PwaMMwCAHqU1mMRGJQQ1BzrAXsBXdUB3HdBdB3Q\/BowzAIAepTWYxEYlBDUHOsBewFd1QHcd0F0HdD8GjDMAgB6lNfjJ3NA2k9jIXccwDMMwDMMwDMMwDBszvrFRiREP0AH2A76qA7rrgO46oPsxYJwBAPQorcEkNiohqDnQAfYCvqoDuuuA7jqg+zFgnAEA9CitwSQ2KiGoOdAB9gK+qgO664DuOqD7MWCcAQD0KK3BJDYqIag50AH2Ar6qA7rrgO46oPsxYJwBAPQorcGLExvfffVZ88mnxr5ovv45X2apkdjYL+gAewFf1WG\/uj8356en5ul0aV66K9exdnvjoLsH3WF9GGcAAD1Ka\/CixIZJarz+5pfsvWvsERIbv\/ndn5tfvf7DIjN19g7BvcRLczm1m+mnU3O5x256VWTfu4PB07n91365va\/uecxvh84ascJYPJ\/b+k\/Naa3BXLu9CdC94xC6w71hnAEA9CitwQsSGz80X37+bfNT9t519giJjVziYo7tnXWCuz84xzZ\/I+o30zUH71Ldaw\/ztzzkXvO+c5B9f9zExsvl1L5X+26Zn+aO3ctzyzHfL6Huz2ejj5jb3cEz8a+rDqTTY+H74iwt5+7H14s+8XJpTn1b+T4n7fXvnakzo70pHkb3MZ0s\/pkrtLey7vC4MM4AAHqU1uD5iY3v3zWffPWu+dL+GkprKyY5SGzslznB\/a9\/\/Wvz5s2b7lOO9KvC\/QHiPOco7Te2NQfvUl0SG7fpux6xr\/p37Cw6qI7dG+MxdbuWSHd\/qAzmdT\/XWwunu78+awlIGB8Ld9gdmz9yTRrxCX8Y7jrqD+5xv0V7Roe+wNC2vTSrvWkeQvcxnTz23U7NKftcZd3hYWGcAQD0KK3ByxIbwd\/VWPPXUkhs7Jep4G6SGv\/yL\/9irYw8RDiSjaXfnHfmfpomDhzGwk1scD3\/0zdffyqx4T6fLs\/R86JNb\/i807k5Jxtt2dfgXrepPl0u0XO9Btbc7rvifa\/tu9RoYXvexPjem8hXrd7t+z13h5mwb2P3JFNjnh0Tr2dQrtPUPysd9\/0SrxHxe0p\/HnxW+pxB+n6oX8vUWHj6uSZvBHRt9WVGfCJJBPh+hOMm2xP4Nsz9We3N4CF0F4Q6OeRalO\/bnPZuozs8KowzAIAepTV44Tc2fih\/vsKOktj4049\/70o\/DmPB3Sc1\/vVf\/7UqsRFtYs2mONmU+813ZjM+Wj6kdK\/rU3\/df\/Yb38J9\/8x+s+832ulzop9edpv+3Mbab8pfLudiW+Pvu3bfJ9qLDjAlfe9P1le97r12AWP3LBO6jYxJckALx7o47vsk1t3r4H3Ladgn9LxeXvt+MqR+FM2fqbEI8fqe3BhYE2Ps2s7UzfiET0INXZV9H2mvI2xjTntzeCjdO6Q2bh6Zvsj3cyxpT7a9ju7wqDDOAAB6lNZgEhuVSEFziQxpv\/7tH5u\/\/eOfzfv375tXr141b9++bT5+\/Ni1sE9KjhUmNWoTG+1O0240+8NfQLxhTTffkvIGt1S361NpA2+uhG0mfRUb7dwmuatjL\/n7oQb+kCB1KfZ5IH7fK\/uePG9Oe76ueTV\/+NAl66s53T1j9wyTusWMjUluPIrP3RlS9+gn4927np+Fdv11W2UYi9L8WTAWMqmUJJky\/t2T8Qk3dmN9HWnPIMZ7ur15PJTuBqGTL+\/q5567Dd3hMWGcAQD0KK3By\/54aP+rKL80X3\/+WfPl97JMnT1CYuP17\/+STWZ4kzxKciPnWDKpsco3Nlr8xnMwv4n1m9r48FwuH5Kv2\/dp5mE+3aTnDww5s\/vmwiY6fgffl6Xve2Xfk+eNt+ffJTpwiLHVILsIet1z\/Ru71zKt29iYhJqlGsX1pG\/ui0T3wNedhu79vJ5mCkT+ZJiYP3PGwpOUlXMvOawHZHzCj1U\/dWvaC8Z4sr2ZPKTuiU7+c+a5W9EdHhLGGQBAj9IavCCx0drP3zav\/R8PXenbGsYeIbExB5PIyJlJbuyVnA7mD4WaREZoS\/94qCHcZIebb3lv2NQOm9Tx8iGljbjs08RhPtlEi3bHNtmGiU10fChY+r5X9j153rzEhmnTmW9Hl+yc9X0VvmcZu2eY0G3SB7v6T6eTfU7ON+Jx3yep7t5\/ur\/H4PXt50B73d4PdJ+aP5M+HCDLirmXjFNIxifkOMv2y+11OgTz2DDV3lweR\/ecTv45OXNtbEd3eEQYZwAAPUpr8LLExo3s6ImN8UP\/tlknuPsNd3pY8Jte99lvUv3GdNi0yk3sVPkQ+SyDvzZsatM+Rs+UB55uU5z2Id5M94hNvsH0oX++2GQve99r+74ssRH3ZTtkfVW+e8jYPcOEbuNjYggPZ8P1sXHfIzndnb84S+ZYct3g703Mn6IPB4iybpz8gTb17YicT\/hr3dyN52apvZH3GW1vPo+h+8Tze2RCpaK9G+oOjwfjDACgR2kNJrFRybVB7cOHD31S49F+FWU5frMZW36D7ex8NhvoYNPpN6XG7GZ2oryk35AHdaKdb7pRTja+YRttuefkgJ97z26DLTbVDvFTyfDeove9tu\/LEhv9\/cimDia3J\/LVUL\/QjMZj9ySjuo2NicMf7kItB707yz13R2TXiEC38PWGg3esk2PCrybnX0BYtrW+D931eO1pmfKJhe314y7N+0GpvQU8gu6TOvWIxEZte6X+LWCdmAhbh3EGANCjtAaT2KjkmqD2KEkNA8EdJEnSJJu0uT+b9NXCAeyR2NMakfjulazd3hLQHd3hdjDOAAB6lNZgEhuVENQc6AAx8tsdLf6noCQ2EtwBrO4nw3thP2tE+k2k61i7vWWgO7rD7WCcAQD0KK3BJDYqIag50AFSMl9d38DJfXO+2v96g\/6v6dwS1ggd0F0HdD8GjDMAgB6lNZjERiUENQc6wF7AV3VAdx3QXQd0PwaMMwCAHqU1mMRGJQQ1BzrAXsBXdUB3HdBdB3Q\/BowzAIAepTWYxEYlBDUHOsBewFd1QHcd0F0HdD8GjDMAgB6lNZjERiUENQc6wF7AV3VAdx3QXQd0PwaMMwCAHqU1mMRGJQQ1BzrAXsBXdUB3HdBdB3Q\/BowzAIAepTWYxEYlBDUHOsBewFd1QHcd0F0HdD8GjDMAgB6lNZjERiUENcdqOvT\/60tnp8uLv9FcTo\/\/v8SE28Oc1QHddUB3HdD9GDDOAAB6lNZgEhuVENQcq+jgkxqnS+PSGSaZ4RMZJDZgHZizOqC7DuiuA7ofA8YZAECP0hpMYqMSgppjFR2ez+6bGmeZuvBJjcB88sPX6Wz4hkeLuGctSpqE905NWBUeF+asDuiuA7rrgO7HgHEGANCjtAaT2KiEoOZYRYfw11D6BIQn840NUz5JVHT3u7ZcokPWTdt6Pou24WFhzuqA7jqguw7ofgwYZwAAPUprMImNSghqjtV0EH9jI\/2GRTn54JIT3Tcv7Lc1hm9hvFxOQ13\/jPCbId23O5Ivi8DDwZzVAd11QHcd0P0YMM4AAHqU1mASG5UQ1Byr6xAkOPLfunC4ZEZoXTIj942Nwq+vhEZi4\/FhzuqA7jqguw7ofgwYZwAAPUprMImNSghqjpvo4BMQNtuQJjbctzCGZET0jQ35zY\/wb2h07UZ\/jwMOA3NWB3TXAd11QPdjwDgDAOhRWoNJbFRCUHOsoYNJVITJBv9tjGziosUlNvzn5+YcJDDiexJflr+pcUSYszqguw7orgO6HwPGGQBAj9IaTGKjEoKaYx0d\/LcyBot+NST8Fob9tRKfoOjKnsO\/qxHfcxYmMqbuw6PCnNUB3XVAdx3Q\/RgwzgAAepTWYBIblRDUHFvTQX67o0+K8Ec0Dg9zVgd01wHddUD3Y8A4AwDoUVqDSWxUQlBzbEuHzB8ajf5eBxwZ5qwO6K4DuuuA7seAcQYA0KO0BpPYqISg5tieDplfNSGpAS3MWR3QXQd01wHdjwHjDACgR2kNJrFRCUHNgQ6wF\/BVHdBdB3TXAd2PAeMMAKBHaQ0msVEJQc2BDrAX8FUd0F0HdNcB3Y8B4wwAoEdpDSaxUQlBzYEOsBfwVR3QXQd01wHdjwHjDACgR2kNfjI3tM0kNnLXMQzDMAzDMAzDMAzDxoxvbFRixAN0gP2Ar+qA7jqguw7ofgwYZwAAPUprMImNSghqDnSAvYCv6oDuOqC7Duh+DBhnAAA9SmswiY1KCGoOdIC9gK\/qgO46oLsO6H4MGGcAAD1KazCJjUoIag50gL2Ar+qA7jqguw7ofgwYZwAAPUpr8OzExk\/ffNF88ulnwt4132XKLjUSG\/sFHWAv4Ks67FX35\/NT83R+7j5dz9rtTbEF3feuYQ2sM8eAcQYA0KO0Bld\/Y8MkOl5\/80v23lJ7hMTGb3735+ZXr\/+wyEydvUNwz\/B8bp5Ol+al+wjbYDVfZXwXobJGXD1Gz8356alZ7wy9dnvT6K\/N+9ewBmLiMWCcAQD0KK3BlYmNH5ovV\/q2hrFHSGzkEhdzbO9sI7i\/NJfTU\/PUbnpDW7IBfrmc1vtJoMLB1\/4kc8Ezc++7tI29IX3VatD7y7k9Ns2ExMYiQt2t5lK7l0tzyszXbNm5TIxRPPan5iILZur7OidZuOu\/by+7jIj24ueLOnPam4H0dzu\/g3an2p5aD9bUcFQPj4KGNcS6Z2LTPTsDNyMcZzvGYlzX\/3aR86Xs3BmZp5LSvM62c4u1GQBgBeQex1OX2Pj+3Wrf1jBGYmO\/lBzrvmQCvtkEtwE5OYQUsIF6rU1IZkO\/NVZ9350Q++pzcw7GaNEmdAfjuyUi3e1GWRyCu7maOxjMnb8JI2M0Z1MeP9t9U+B0ec4cLPy97pp9l\/SQH7VnNAieb\/vTJ9bmtTcHuTZfpadgVQ1H9RjQ0LCGWHcXmw621B6CaJylj+XWuatZJ7FR5F5rMwDACsg9jqcisfFL8\/XnXzRf\/5y7V2ckNvZLybHuSz7gu6AcbJBt4G6DdGcuVru6\/pqxaPMcXC9uTqNy7cbg0j432mjIZ8SbdrcpD+r7itnnm0179wx73bVlNhrD5sM8z7TjNvhxu+X3jdswjPXb3Ts\/556xTcZ8dXRzODW+BT8p6en1Lo77gxHrHmtgsJvk87nVMPSvzs8HkUd8sWVyDnpkuzlKZdK+J2tMVyYa9qln2r5392e1Nw\/p7+XDSNe\/0TUlZGUNJaEePToa1pDz93s9G+5Hbn75+ZLMnUKMcP5h\/Nb4t79f8vP83IljV8bfzHwI1sLyvE7bt2vGVWuz78+c9wMAmE9pT788sfHzt83rr37I36u0oyQ2\/vTj37vSj0PJse5LPuC7AOyDfPvvILjLg6z9HO8GRssPyGd3AXxkIxG1ZTc84UbA49qJ2rV1uvZFnfgZfqMxbCDsM4M66fsW2pD97ttIn1HeMG2Dsq9KrUOmxtePiyMa22xirdOrOO6Ph9Q99j2jp9HE6TpcjrUbnUOTYxTQjcHJ+m5n0mfFQWBAPkf2w5CWKbfXEbzrrPZmInU3Gubb6fQS\/liczytrmCDG3qKkYQ2x7u7ZvU7Begn7Joknfk0P13nLSIzo\/WMob+9L\/7fk\/TjXXjQdxdwZi9O2rf7eemvznvYJALAPSnv6xYkN80dDv\/w+f6\/WjpLY+PVv\/9j87R\/\/bN6\/f9+8evWqefv2bfPx48euhX1Scqz7kg\/4LjCLIO8RB8s4oGcQ5Xty18ONRLLJMfgNQ\/tPez\/TR7F5GMi\/U7xZyGxuwme25N43aiP7vmEb0xuorZH4qtXYbLpGNlpT4yuJysdjFWleGvcHJK97p5HRodPS+J+fw6lWU3No5hjZZwdtJeNQWksM6b14E+8I32O8PUN8f7q9+Ujd7fz2\/m4t76eeaD0IWVnDmNx9PQ1rGIuJtm\/SV2GX5Ma5n2O5eeOJ1ivnu3HxOFYPuLLxHO6s9\/dMe2ItLM5rw9pr84z+AADUUIq1CxMb6\/8airFHSGy8\/v1fsskMb5JHSW6MbeLuR7yxHcgcLKMNwbDBjIJ1x1j5nnAj4AkDd7fpj9sxlh4MzPX+HYrBf84hpLRZElqIRqI2cu8Vtbu\/DUvVgWNqfFvm+VVGr9y4PyCp7oMvRn7Y6yq0mppDM8aoJynrntXrn92oe0TZFtv\/6DlL2jPdad9D+tJYewuQuoeHk5g5a0rAyhqGSD0sihrWMB4T81rD\/siOs\/VVsRa1WJ+M1i5fxvlm7A8lH8n7cezvmfbEWlic15aV1+YZ\/QEAqKEUaxcmNtb9v6F4e4TExhxMIiNnJrmxV2p0WJ98wLcB1G8g5GZcbECiIG6YKN+Tux4G7lK9LMGGRj6\/Z84hJLOZsPWGw0Hyvi1RG9l+h23sb8My6qv2fTOHp6nxnfIT\/zmrpyc\/po9CTnfja2a+mv8O793513NBw+5jwtQYhdiy4TjHa0duXgxk1plknsbzYqw9O99kHyfaW4LU3WueMmdNCVhbw46sHi2aGtZQtc7A7siOc2ktCq9FZXK+GcfqgfzcsfOjnwOZ9sRaWJzXHX6dMP8dilWuzTP6AwBQQynWVvzx0PXt6ImNN2\/edCX2R40O65MJ+DbgBtfE5sIG9+BzvDlomSg\/4A4F\/XO658qNhtyM5Ak3AaJd89m26a7LfUm8WXHthN8Kke+XvG9Lto3gQUs3UFsj8lUzTvLdasZ30k\/8WMRaxmS0fCCya4T1lZPYFDsdTu31WKvuenEOTc3BENGWHT8\/T6bGIdcPMR8jfyi1567n+zfW3jKk7sY38xrOWVNC1tZwTI9Se2N11tOwhlD353N8QLWaZvsMeyO7rtm1R\/ia8L84RnR+PBKrB3JzJy0fzdvMWlie1x2mv6utze5+VMW2zxwAgOvIrsEtJDYqKQk6lw8fPvRJDX4V5Vr85iC0eENpcBsKZ6fLpd38BoHbbwDsPVdxtHxIUNduWMznKHBn+ufv201PcD3cAUTt+veZcwjxmwlX1tUXfS+9b7wDCeq3lnmnPW1YYl+VY5L6S8\/E+E75iUuaZLTq22xNDugDkV8jOt8S\/pLVyjIyhwwTYxQRlQ2eZa+LeWIR86CzfjMftRf4Uak9OfbefEdK7S1E6m78NH8AmbOmCNbUcEwPZQ1riHSX\/dzw+gjLyK5rBX8tx4gZsbrHlZVzOE2EiLaMDwb3R+e1pasvfLVubfbvZz84RH8AAGrI7y1JbFRTEnQOj5LUMFyjA9yKzGYC9HzVHm5Km9XHZy9rhN24rzhp1m5vKRq6P5qGNRATj8E640ysBgCoobQGk9iohM2LAx22CJulHFq+Ov0TssdmH2vE2nNGfw7eX\/fH07AGYuIxWGecidUAADWU1mASG5WweXGgwxZhs5RDx1fzX\/M\/EqwROqC7Duh+DNYZZ2I1AEANpTWYxEYlbF4c6AB7AV\/VAd11QHcd0P0YMM4AAHqU1mASG5UQ1BzoAHsBX9UB3XVAdx3Q\/RgwzgAAepTWYBIblRDUHOgAewFf1QHddUB3HdD9GDDOAAB6lNbgJ3ND20xiI3cdwzAMwzAMwzAMwzBszPjGRiVGPEAH2A\/4qg7orgO664Dux4BxBgDQo7QGk9iohKDmQAfYC\/iqDuiuA7rrgO7HgHEGANCjtAaT2KiEoOZAB9gL+KoO6K4DuuuA7seAcQYA0KO0BpPYqISg5kAH2Av4qg7orgO664Dux4BxBgDQo7QGL0tsfP+u+eTTz6y9\/uaXfJkKI7GxX9AB9gK+qsMedX8+PzVP5+fu0\/Ws3d4c9urve9eedeYYMM4AAHqU1uAFiY0fmi8\/\/aL5+mf57+vtERIbv\/ndn5tfvf7DIjN19g7B\/bZoHIgeldV89fncPJ0uzUv3EcbZ3xrx3Jyfnpr1pt3a7c1DRfer58b+tScmHoNtjfNLczkt8fOl5QEAtkVpDZ6f2Pj52+b15982P3Wfv\/vqs+bL70WZSnuExEYucTHH9s42grsL0k\/tBja0JUH75XLaZALh1omNrb73LZC+at+995dzewSaCYmNRcS6D3M163ZGWzMeN9Q3HvdTc5EPyoyvr3OKCmfWndxLifbi5wsdXi7NqXRvIaHu9plS0+5Z8hnZsnOZmBurae\/9JDExjxW0j\/x9bj9hd+TWtWvm6yyEjw6+Pf18u5dYUD7E1E3nX2b+FoifDQBwPXJP71nwjY1fmq8\/D7+x8a75LltuuZHY2C8lx7ovLkjnNr7xQaSM3fDefFeyHBIb6xH76nNzDjZai3QWhyUYJ3cAOJ1av8toaMbhfL6dvtbfJ9qON\/HuJ\/6ny3O6xnTvMuU2UXvmYBI83x20\/SHXP6u7u\/DwIIl0twci0ZY\/dIsXiN9\/ISNzY13tU0zd0Xe5k\/ZTMTHXT9gfuXXtpsOa8Unjw85nlz5\/WflkHrVzBRcGAE1KsXbZ39gw39ro\/sbGWt\/WMEZiY79MbeLuQ3dYkrtQuxEIfjImftrhArOr668ZkwE8Lp9DtiGfGWxGos+mnvm321S7uvHGJd0EjzzLbs7b+pfuwOLvLX3vhc84F\/qYjIcyY746euiK9OvePSxb8JPS2Hld3MEqaHdbcq1G\/gDQ+VH4zlbH1teSw\/GYP4btTWmZeWZCqUzOp\/2zu49ZJp4ZrgdyvZrVfpmc7mH\/7WHlfHaad9fS\/rp6ee1bpuZGz9raC0Ide3S0H42J2X7CHsmva93HkGiOhGUydZK1z2N8ecwffVuuXD8fg4bieDRdPmRIbJT64drz7yjXiTQWAgBcRynW8qsolUhBc0kLaX\/68e9d6cdhdBN3N1xQTTe+YRBu\/x1sGORB1n6OAu94+RAZtLNt28+yn34zMGwobNlgU5DbjCTP6sv7TUq4qVj63hXPyCaQtrd5L\/uqe6f8wUmOWff+vYYj+o7pYv8djtPjUjoADJtlR++L0eZ+yh+7+4G\/FTfRnf4nW74zWa54sJB+YPDP9pbx+WJ7HYGPRL5jyT1zPtLfe30txo9Nf50\/D5djnx1f22T\/5NwIWF37mOyYK2k\/FhOLvgm7o7SuxYzEh1ydks9OxgvX1tg6GH+eLh9i7o19c0rWlfNprG0AgBpKsXZ2YuOnb76I\/08o5v+Q8tUPUZlaO0pi49e\/\/WPzt3\/8s3n\/\/n3z6tWr5u3bt83Hjx+7FvbJ2CbufpQ2oWLTHiI2CvGmP0NpY9Ft2ONH+0ND97HrR\/r1+9xmKK4bbQiyfQjLj7yvZ+q9q54RX5vUUonEV+3BxmzuRjZdOT3GDkxR+RFdbLmJsXoQigeA4GDptOp8LNR30h8zc6g0PvZ5w9xKx6C0jhjG7jns+EZ9naoT37f1Rb\/dgaL8zDHy\/t71z7x796zwGamPBnpZAu1zY6OifTzPHHral2Nirp+wV4rr2hjRnMnUGZ0\/ch0MmW4rTi4seHaLrdv6bjZ5O7VOmE\/RswEArqcUa+d\/Y8MkMsQ3Ntb6X74+QmLj9e\/\/kk1meJM8SnKjvIm7J\/EmdSDeSLqDhw\/QxoaNQrSh7xgr39Nt0ONyxkSgtxsTufHJbYbiPkcbguzmJmwjv3Fe9N7XPMNezL3TNhjzVadRZnxzeogN4Dx9M7oEvlNzgNoL5QNA4EuhpvLfo\/6Y0VWMT0\/Slqvba5\/doHtE2Sxiboy2Z7rTjr30o6jfc55ZJvX3oX+DX5rLXi+h5dTalhsbBe1T3VoUtS+tM9l+wm4pr2sxdtyj+ePnQabO7PkjmW4rTi4seHaLqWvmgnsX0Y+pdaIlfjYAwPWUYu2iv7FhvrVh\/r6GtZW+rWHsERIbczCJjJyZ5MZeqdFhfQqb0HAzIDcGNhgPn23ADgPvRPme0vUIc6Bog7z9uxRh2dxmqCub2xBknxWWFwcrw9L3rnmGwdebpYcOo75q+z3o3pN7n3ADOOUns3QpaPogjB0AvP\/5jbMl1DerW+iPCzbotq1wjON1I5kLEYU1JkS0P9aendeyj9KXcu+2gJy\/e53Nf4d2Oz2fhdajPtuSu3937fNzR1P7\/Drz2HP8iIytaz3Sr6I5k6lTmj+T\/jPdlvX7vsCSZ7u6bv65etHcmlonWuJnAwBcT2lPv+yPh97Ijp7YePPmTVdif9TosD4u2EYbXxtsg2tig2EDbfDZboTDoD5RfiDzbMEQ1OWmoPssD0MTm5FwgxCXz2x+lr53zTMs\/l3iulsi8lXjH\/Ids+Pr3rcf386vej0m\/WSOLq7MRmW7mtEDgNcz1CzaYE\/5Y0a7qH6IKxuvCX7uTY2BqNvyfA4P6t3Yj\/XL4q7n+yfmlvCtpWTXZqvNSRxEunczvyoXdTh955iJuREh2rpSe09+3pbac9dvrX1O9\/L6AntldF3zCD+S8SGK76Pzx\/tQvOaYa25eZJ5v5\/rQVvSsGeVDTN1h\/ol537WVm5+e+NkAANeT3eO0kNiopCToXD58+NAnNfhVlGvpNqxmU9BbvAEwuE2Fs9Pl0gbnYKPZH7CGAD1aPiLzfL9BkBtk+xy5oXcbBVc3fka6IQjLthZtRMTmvGPpe9c8w+A2Xvl7WyC3Ee3fMeMvPYFGdnzMZ7lh7O7n\/CSri\/WLod4jb\/rGDwDdOITvn2ywx\/xRttcyskGPxzKoZ6\/H4+YQz+7MzhU5huEzS+3JOt58R6L+jfjkDPJrc\/c+Qp\/y3JXzRNSN+pvOjYio7JXaB\/eTA1WpvTtpn+pe6CfsmvF4MvjQeHwIfby9PrZ2tfh52ltfdnodjPcSy9ZNUzfy326uDPXH14n42QAA15Pf45DYqKYk6BweJalhuEYHyGwu9ow9OOQOKNtAzVc3rsut2cMaYQ8MK07EtdurYS9r86NpT0w8BowzAIAepTWYxEYlBDUHOlzDYyU2tv5TGS1fPfpPq7a\/Rqw9D7cxr\/exNj+e9sTEY8A4AwDoUVqDSWxUQlBzoMM1PFJiw32ldsvvouOr29fl1rBG6IDuOqD7MWCcAQD0KK3BJDYqIag50AH2Ar6qA7rrgO46oPsxYJwBAPQorcEkNiohqDnQAfYCvqoDuuuA7jqg+zFgnAEA9CitwSQ2KiGoOdAB9gK+qgO664DuOqD7MWCcAQD0KK3BT+aGtpnERu46hmEYhmEYhmEYhmHYmPGNjUqMeIAOsB\/wVR3QXQd01wHdjwHjDACgR2kNJrFRCUHNgQ6wF\/BVHdBdB3TXAd2PAeMMAKBHaQ0msVEJQc2BDrAX8FUd0F0HdNcB3Y8B4wwAoEdpDSaxUQlBzYEOsBfwVR3QXQd01wHdjwHjDACgR2kNXpbY+P5d88mnn1l7\/c0v+TIVRmJjv6AD7AV8VYet6\/58fmqezs\/dp+tZu71a9ujvjzAWrDPHgHEGANCjtAbPT2z8\/G3z+tN3zXf28w\/Nl59+0Xz9syhTaY+Q2PjN7\/7c\/Or1HxaZqbN3CO63ZSuHpDpemsup7f9Ta6dL+0mX1Xz1+byJ99kL83V3\/nJfd39uzq1\/rvfMtdurZ39r82OMBTHxGDDOAAB6lNbg2YmNn775IvqWhvx8jT1CYiOXuJhje2cbwT04QAe2ZEP7cjltMoEgExv2c3Co3lK\/Zd9sAuDp3B4vBpIyFeTeeU670ldtO72\/xP0chcTGIkLdzUEznKOx\/usnNuIxPjUXOWiZsfR1TrKw9eehz8l9g2gvfr54t5dLcyrdW4HY34c1Mvsc\/2439OulYzGm3aiuHqWxSGLiHL+B3TF\/XVuLbg4L55R7hCXYOXGNswMAKJHE2g4SG5VIQXNJizm2d0qOdV9cwI82jN1mcu4mcqsBfmrTsumNiThYrEXtO8e++tycg74t2hze6L0elewaYQ+S8nC7bmLD+snEOJlxH9YI9xP+0+U5XU\/svaC\/2f6L9kyZ5GDtDzr+Wd1du15lDvtXEOverZGnvCam3+fz7fx68ViMaTeq64DWWCTrzAy\/gf0xf11bEembVz7PzoOt7h8AAEbIrsEt838Vxf59Df+rKL80X3++3t\/ZILGxX0qOdV8yiQ2D3QQEG167CTA\/RXHm4nn3U5DgerQZDq6X47\/bGLty7fNMvX4TnTmsyYPxyHPM5jzceAyf8\/2W5X05qc10Odl+eHDoNusXo+9wL2zTHRyC+t315Lmld184VqX3MWU8Y75q+xuOSUjUl+69Z4zflMaxRjfcDCsz\/wDg9Dk\/h\/MpLOPvdx8Nci71iANlllKZeJwstr+ZORDVnXhm+M5ybcq925XEuofaij76d0u0dHUGH83117SXG6uQCV0sC7STZO\/pjUWku9e2+zhPC9gD89c1w9hcMkzdHwjjShxjMn5bXB8dcWJjqr6\/Pzbn578HAMA1lPb0i\/54qPmWhvvjoV80X37FNzZCckkLaX\/68e9d6ceh5Fj3xQVTeXh3m0gfqNt\/BwFeHmTjAG8YLz8gn90F\/WQzYD84os3C+HPk4Vh+TvotN+mljdZEuexzwj5nNi2yjn1G8C6GuIxrJ9LOlh\/XJHnnlrjdbnMlypR9VfYjZGp8R\/o6pnFy4Hlc5h8AunEr+uHUXAro2j\/Z9joT\/lCs2z1H+oPtix2z\/P1yex2BP0ifLj3zGmLdB+3Me4TP6edT1H9XPtTMlut9trs\/smb0XDUWHYF2Cbl7C9pbeyykv0\/6DeyS+eta5wNyLgU+N3U\/wseO5FnDHO+ZmAf93HefJupPz\/lF7wEAcAWlPf2ixEZo3331WfPl9\/l7S+0oiY1f\/\/aPzd\/+8c\/m\/fv3zatXr5q3b982Hz9+7FrYJyXHui+lDaM7hEaB2uM3B\/3HMMBnEOV7ctczm4HyZkEg2pu1cYgbj965\/F6Zcr5PyYbJYMr7a3ldZd9y7xmVMfdzmkpmjFXUbmGsEl+1z2\/rGZMv45kcX0FUfmQsbLlUw0dk\/gFg3sa6fD\/Ajm3QfqJ3ac0wlO9ZPzP+kjxzrD1DfD+abx2m7XL95cS6B9pZbUIf7XQKtcz5fVg2bM9zk7EwjN3P3VvW3tpjkfP3st\/AXpm9rmXXumAuTd3P0PtTNAGdX8+akx1xLJ2qP3G\/4j0AAGrJrsEtdYkN82spn3\/b\/JS7V2GPkNh4\/fu\/ZJMZ3iSPktwoOdZ9KW1kTVAdArEN4mYz0NuwcY8DvGOsfI\/dtIvrSzYDLWPPsRuYoLL8XOy3vZZ5dsDQlijXHTziPhnzG5RYV4\/sm3xPQ1Qmc98zpknunZN2M2M15qvueTXjO7evmbEIdK49RO2B2QeAnEaR1tNzqScZN1e31zn7fI8oa8mtJUH90fZMd9pxlj4T9Tv3zOuIdQ+1C94l1E\/+O5kPYRvhvztuMhameqxdSPae8ljEuk\/4DeyW2euavebW+di6clP3c9g6Y\/OzozQnO4b4ZD9N1J+4X\/MeAACVlPb0CxIb5n\/x+ln3qyj+b22sY4+Q2JiDSWTkzCQ39kqNDutT2IiGG2q5uRYbgzjAt0yU78ldX7IZmHhOdGBvkZ+Tfht8G6U+e0rlpuq1d1ZLbOSeM6FJ7p2jdgv9H\/VVWyezAcu1tWD8+s+FPjnyej4Ksw8AU3Nl8n5A0n68RmTnTU+6ntjy0XPmt2d9U\/ZR+k3X3po+EOset+\/7a\/rWv2eoZdZfjZ96TTP9vcFYZLXrKN3THotQ9ym\/gf0ye13LzqWAqfs5snUWzMmOeK5M1Z+4X\/MeAACVlPb01b+KsqYdPbHx5s2brsT+qNFhfTKbRRtkxaY9CLp2gxt8TjagE+UH3KG0f0733LAtW9fvBuT9iedEdVvk53TjbHB62J+WRLsQSaeb+T8lROUyekaslNiQ2pnPpvzSsWqJ2+3eX3Qw8lUzDsF922bN+E76yZyxcGWKt3fO7ANATgfhQ9E4Z+bagPBhO04jh\/IIUdcgxtk\/27VRas9dz\/dPzCHZ\/grEuos+eu3CZ0Zad30PXiqed5l3FmM14MouG4vu+SPtjd1b1t66YxHpLtuK\/Ab2zNJ1LVpPIqbuZ7DPSX10\/vroiOPmVP3M3MqsGYveAwCgkuwa3EJio5KSoHP58OFDn9TgV1Gupdu02o26N7m56IJ2d\/90ubSb2XTD6e65iqPlQ4K6dhObbPDdxrl0f+w5oxsPQ6bfBndQn95Al8tlNO37LA4CHUnfEh3G+x+O2ZgmuXdO2g0098S+Kt8v9ZceOb7m88zxM2Q1tgeeoV7c98di6QEg0WnBXIqIxi1o116Px8gRtj1Ybj0Irxfbk2PszXck6t+I\/1WS8\/dB287\/Q7FHtW4tujdnrAKWjsWYdmP3NjAW0t+LfgO7Zv66ZpDxprXMfCrfF5T8PJqz7f3snBRluquOsfpz5vzC9wAAqCS7BreQ2KikJOgcHiWpYbhGh4clu5m4M3Yjn9v4HBc1Xz34WGxtjbCJpmh3fh1rt7cWe1ibH3EsiInHgHEGANCjtAaT2KiEoOZAhwwbSGyk32AALV89+lhsa43I\/NTxKtZubz22vzY\/5lgQE48B4wwAoEdpDSaxUQlBzYEOGdQTG+7rpAc+S2fR8VXGgjVCB3TXAd2PAeMMAKBHaQ0msVEJQc2BDrAX8FUd0F0HdNcB3Y8B4wwAoEdpDSaxUQlBzYEOsBfwVR3QXQd01wHdjwHjDACgR2kNJrFRCUHNgQ6wF\/BVHdBdB3TXAd2PAeMMAKBHaQ1+Mje0zSQ2ctcxDMMwDMMwDMMwDMPGjG9sVGLEA3SA\/YCv6oDuOqC7Duh+DBhnAAA9SmswiY1KCGoOdIC9gK\/qgO46oLsO6H4MGGcAAD1KazCJjUoIag50gL2Ar+qA7jqguw7ofgwYZwAAPUprMImNSghqDnSAvYCv6oDuOqC7Duh+DBhnAAA9SmvwvMTG9++aTz5913yXXPvM2utvfonLLzQSG\/sFHWAv4Ks6bF335\/NT83R+7j5dz9rt1YLuOrDOHAPGGQBAj9IaPJHY+KX5+vPPmk++etd8GSU2fgg+m39\/0Xz9s7+33B4hsfGb3\/25+dXrPywyU2fvHCq4P5+bp9Oleek+qrCFPlyJ1gFkNV99gDG4J9teI56b89NTs547rt1ePeiuw6Fi4oFhnAEA9CitwTN\/FSVMZLRmvq3x1Q\/9\/Z+++eKqb208QmIjl7iYY3tnK8HdHpbbje1g53aruzI7S2y8XE6b+AmmRCY27OfgnW7V75yv2me1\/nK6LBhVEhuLCHU3h894nnq7wXxt8ePr7NQkwyzGMi4fH5Tje4X+LmivvdmcSvdWAN3z7d1Td4vpW\/+8jBawS8JxvpzasRWOtH4C\/8U+R8Yq6+sL4pGMt55sO91cka+x9JkAAGuT29MbqhIbSSJDJDqWGomN\/VJyrHtjgnUY8N3GduVNu9g8q7CgD1aDtXftKzC14btVv2NfdT\/hPV2es5vFUbbgBzsiu0bYDfNtD3lzNt\/RumH6FJSP15DWX4J7JR9e1J71v+6uPfyuqwe6+4+Kusv27eeV4xKoMDrON5ln6yQ2iuT6bN8rnXPRfAMAUCC7x2khsVGJFDSXtJhje6fkWPcmDbRuA+visfl3G7AvXZDuN5ZuozD8NE1sOG2g9\/e6+v0GwtWN4r3ZBIQbjKh+WHbiuSGjfWjJPkO2Lzb9wXWxXwlw+rlybf9MvVXe3RRtrwUXhs\/5fsvyvtzSjVXeV2e0VTUG6XvW9nvvZHW3molNdKdPJJn0q66M17o8d7o5Pyr1RJlsHx35w8SC9uyBIex75t2vBN07FHVP+ztHH9gDcn6F632y9lsfHObPcMv4n\/EH4xf+fsk\/nK\/K+BH72PRcTuOSJ23flD2dz23fwzkjfdjVy68Nvj9z3g8AYD75PT2JjWqkoLmkhbQ\/\/fj3rvTjUHKse2MDcBgto82xD6ppwA0DvN0g9GVkkO\/amL2BcOWj+t09ubHIb9YNU30Y2jTIduznuIOj5QdWePeR58j3z+oRNi4PIyMHnzHyvirfVXLFGKzU772T1T2rxZRfmY8ZXwnu93Ttn9r2+g131HCLaDtBjl+P84HEZxa0l\/Z7yg+Xg+4dmron7+LeQUoC+yOZX9b327FO5thIjOj8Lzzs2\/tZ\/8\/7aq69JXM5xLbV3zO+avolfFb49PjakL7f2PMBAOaS39PzNzaqkYLmEhnSfv3bPzZ\/+8c\/m\/fv3zevXr1q3r5923z8+LFrYZ+UHOvemGAZBnwbPPvgmtlM+k1I99HhA3n7z9z9aIMwsYFINrQdyabHEDw3ZLIPAlE+3qRkyGrQcu27S0R7cmOT3RjFjUfjN\/leBfK+mt8s9lw1Buv0e+9kdbc6SZ+f8KtsncLcMfXC67Zu2PbEuOfu2zbNJj23MV\/WXrz5d8g17FrQ3aCvu13ffP9bbUzSJ3kN2B25+dWP9dgA2znhY0Rm7pXmVld28KXAep\/OtBfOZfuxLV\/qn51rXd9MP7t64RyJ4tjk2jDdHwCAGvJ7+trExs\/fNq\/7z+Ye\/1eU17\/\/SzaZ4U3yKMmNkmPdm3jzGAZ6Q3zAtIQBvCcIwrn7UUCeCNil4N1t9KO+WisdEsb6YJprNxlRO0P53EF6rHzP5HOnNytjz5EbK\/m52G97LfPsmeR91bVXPNisNgb1\/d47Wd2zG+IJv7pq7ohxzj5\/wPpkMMYSN+ZB+wvbs\/Wj9if8sAJ035DuPZlYBLukPL9C\/3c4vw3nji+TmXtFH8n7auzTE3PZfmyfX3TA4dm2XV+ub0O0P7k2TPcHAKCGUqytS2wYM9\/a+PQza19+H1yvsEdIbMzBJDJyZpIbe6VGh1tggnV5c5rZKGQ3IKZcF5Bz96OAPBGwzb8zG5z8cwtM9UE+Q5SPNiaGifI9a7+7aE9urOTnpN8G30apzzPI+6p7l6LvTGkxpekK\/d475QOAPJBO+NUSDZP243HO+liHPAxnEe0vbk\/6Te7drwTdN6S7J3k+7JXy\/BLjK8c8KpPzv2AfEhHPJY+dA72fT8xl+zGOtxJz3zzD\/Hco1vXpWbzf5Now3R8AgBpKsXZmYuO2dvTExps3b7oS+6NGh1vgg3GeTGKjC7hhgI83CK5O36YN4PFGOdogJPdFffPZ3stvTvJM9EFsmGx\/gs\/x+7RMlB+48t0nnhPVbZGfk35buvEyzwnKLiHvq1Pjcd0YrNHvvVM+AKSb91G\/mhyrEFHWjpN\/nruXDkc3VonvtZi+SB\/tx7mivc6v+jrCj9YA3Teku0WsJbBryvNL+NNojOh8NZiT+fhncGWl\/8jy43NZ3M9h+ns6iffont1ej+vm+zTg7kdVbPu59wMAmE8p1pLYqKS8eZnHhw8f+qQGv4pyPSZYl4Or2Mz2uOv91ydlsPWbAmttkDefozJh\/fa+DNhR\/fAw4TczgZUC\/UQf3CbJ2elyafsTbEaCul6b0fIh8rnJZmT83ceeIzdW8nOu3wZ3qMmN4zxiXxVj31nWh64Zg5Zr+713ygeA9IAdj0vO72rnTqC\/vR6PkcU8Kyjfm60onxv0vaq9lqh\/OS2uA92FaegutCjHKNgb5fmV+mQ5Rjj\/jv+vIRmftriy0ofSRMiM2NxPyhxdfTG\/y3FsbG3w72c\/OJK1BQBgOdk1uIXERiUlQefwKEkNwzU6wI7YwmbEHlhKm75p1Hz1yn7vna2tEXaDPrqxX8ba7a0FuutATDwG64xz5uAPAACTlNZgEhuVsHlxoMNB2EBiY\/onTeNo+eq1\/d4721oj1j5IbPdggu46EBOPwTrjTGIDAKCG0hpMYqMSNi8OdDgI6okN9\/XYazaAOr56fb\/3DmuEDuiuA7ofg3XGmcQGAEANpTWYxEYlbF4c6AB7AV\/VAd11QHcd0P0YMM4AAHqU1mASG5UQ1BzoAHsBX9UB3XVAdx3Q\/RgwzgAAepTWYBIblRDUHOgAewFf1QHddUB3HdD9GDDOAAB6lNZgEhuVENQc6AB7AV\/VAd11QHcd0P0YMM4AAHqU1mASG5UQ1BzoAHsBX9UB3XVAdx3Q\/RgwzgAAepTWYBIblRDUHOgAewFf1QHddUB3HdD9GDDOAAB6lNZgEhuVENQc6BDzcjk1T\/y\/2zYJvqoDuuuA7jqg+zFgnAEA9CitwSQ2KiGoOdAhhsTGdsFXdUB3HdBdB3Q\/BowzAIAepTWYxEYlBDXHNnR4bs5Pp+ZyOTdPT0+tndsrhpfmcjKfvfnrBnOvrfNi6vr75nN32zJWXz7z1Jyisk\/NKW4MlGHO6oDuOqC7Duh+DBhnAAA9SmswiY1KCGqObejgkxNh4qG9em6vBd+esN+mOF0al27wSYshmWHvy6SIrN\/fzz+Tb2xsF+asDuiuA7rrgO7HgHEGANCjtAaT2KiEoObYhg4uyRDlE14uzSn5Bkb3LQt7zSUu4hxEcN\/Wj5MWcf3MM1tIbGwX5qwO6K4DuuuA7seAcQYA0KO0BpPYqISg5tiGDqXEhvlGhbSpxEZ37dn8iolMbIR1SGzsDeasDuiuA7rrgO7HgHEGANCjtAaT2KiEoObYhg6lxIZMTITwjY2jwZzVAd11QHcd0P0YMM4AAHqU1mASG5UQ1Bzb0CGXZHCJi\/If8HT3k7+xIf8GR9BofH8ksdGXgS3BnNUB3XVAdx3Q\/RgwzgAAepTWYBIblRDUHNvQIZ9kGJIXgYnExfnZ1XX3c9\/QyNU1FJ4Z\/AoM\/1eUbcGc1QHddUB3HdD9GDDOAAB6lNZgEhuVENQc+9XBJza6j\/DwMGd1QHcd0F0HdD8GjDMAgB6lNZjERiUENcd+dSCxcTSYszqguw7orgO6HwPGGQBAj9IaTGKjEoKaY786kNg4GsxZHdBdB3TXAd2PAeMMAKBHaQ0msVEJQc2BDrAX8FUd0F0HdNcB3Y8B4wwAoEdpDSaxUQlBzYEOsBfwVR3QXQd01wHdjwHjDACgR2kNJrFRCUHNgQ6wF\/BVHdBdB3TXAd2PAeMMAKBHaQ1+Mje0zSQ2ctcxDMMwDMMwDMMwDMPGjG9sVGLEA3SA\/YCv6oDuOqC7Duh+DBhnAAA9SmswiY1KCGoOdIC9gK\/qgO46oLsO6H4MGGcAAD1KazCJjUoIag50gL2Ar+qA7jqguw7ofgwYZwAAPUprMImNSghqDnSAvYCv6oDuOqC7Duh+DBhnAAA9SmvwvMTG9++aTz5913w39\/pCI7GxX9AB9gK+qsNedX8+PzVP5+fu0\/Ws3d4U6O5Ad7gFjDMAgB6lNXgisfFL8\/XnnzWffPWu+TJKYJSu19kjJDZ+87s\/N796\/YdFZursHYL7xng+N0+nS\/PSfYSB1XwVjRehskZcPUbPzfnpqVnvPLx2e9Ogu+EgusPdYZwBAPQorcEzfxXlh0ICo3R9mT1CYiOXuJhje2crwd3+VK7dwA52bre012HbXOEA+3I53e8nhhy6i+R81Y5N6y+nywLF0HgRoe5Wb6ndy6U5ZQ6f2bJzmRgjP+7OTk0y\/KJ+XD5\/UPZrUNaXlrTX6ZG9twB0b1HW3eOfm\/RxpWfC\/dnK3gcA4IiU1mASG5VIQXNJizm2d7YS3M3mNtw0uo3k9cmNNbB9udeOdeJgcWRiX3U\/yT1dnpvLqXAoKoHGi4h0twc5caA1epqDnZgjck4vYmSM7HycGL\/o2abPyeFYrC32eefmXPCl+e15v+zuWm0yCYAZoPuS9m6ke99ubp1Z75lwf7ay9wEAOCKlNZjERiVS0FzSYo7tna0E93Qz7jaNbs9u\/t1uGC\/dRr7fzL7Yzab\/aZncNNuNb7TpHy9vN879PfNsWV72sSOp113vnnd+du\/i7ouNb1S3e8eJw8NRyfuq0zg7Lp4pjQvjZ3wy5z+jz3pAYt1TDezcPZ9bDcP51M3ZQWQxl8bm3tg8kO3mmChjn5X2zc\/3dHwXtGcPt+G7+ba7jwtA9y3o7sn0ccVnwv3Zyt4HAOCIlNZgEhuVSEFzSQtpf\/rx713px2ErwT1JbESbYLPBlZtyt4kMD57yJ4IysSEPqvZ+v4l3zxj60H7u7qUJkpChnCFus+tjsDmP+yA3y917Zg8WMPvAETGl8cj4yYNLcjA7BlL3eD4YPY0mTtfhcqzd+NxbMA+6MTjZedWZnJvm2bm6HtG34X0KvrSgvfi9DFP+WQbdt6G7I21vzWfC\/dnK3gcA4IiU1mASG5VIQXOJDGm\/\/u0fm7\/945\/N+\/fvm1evXjVv375tPn782LWwT7YS3GViw27I+02j2Lwb7EZ72CQ7\/GbffYoOAtlDaVBebLpDonamiPrlNrpR1XCznnuHqc38gZl74IhYqnFUPva7RX7wQCS6h3PF6NVpGc7hRXNvyRjZZwdt2brhHJs6XIr70bNzdZe1lx52Y12WgO7z27up7pa0P2s+E+7PVvY+AABHpLQGk9ioRAr6+vd\/ySYzvEkeJbmxleBuNoT9TwKNRRvG+IBpCTf5PW7zOezr5SZfPMNat1kvbehbonYy2PtRm\/GGPem3f07uHUb6cXTmHjgiZmhcHr9w7DNjeRBS3Yf5GM2NXleh1Zy5N3ceJGXF+NtnycP8gF1n+nblmGZ8aVF7pnirR9TvTJszQfet6G5I21vzmXB\/trL3AQA4IqU1mMRGJTVBzSQycmaSG3tlK8HdbFTLG8JMYsNufMWm3JYbNsPR5j9bPiC3ye+I2pHIetFz5Aa+JTw45PpUOljA7ANHxJTGo+PX4j\/n2jkIOd39fDX\/Hfy7m3\/PBQ27jwlTYxRiy4YH3nj8x+aqPAy7\/vrDvrCu3LL2WqQ\/df0rLR9joPvc9lpurLt8X8uKz4T7s5W9DwDAESmtwTMTG7e1oyc23rx505XYH1sJ7n7DnsdthOMNo9tEhptfuxkONrzx5jizMY1wzxjut5\/DTbbcSHvE5tZuuvvPmY1udHAQz7SHh8ymHSyzDxwRExqPjp+h8zNT56Anlqzu1o9P4mDcjUV7PdbqyjGKEG3Z8fMHbncvHaZuDCfnlexnTXvuXfo6wr+WgO7dx56x9m6se9JHw3rPhPuzlb0PAMARKa3BJDYquTaoffjwoU9q8Kso17M8sWFw1+VP+zzpT\/26jXGpjt\/YWwt+Ohlcz\/XRHYb9\/UvbJ7+5zWzQ7cGk9My2nvk8eRA4JrGvirHvLOtDExqXx89h\/ai9l\/rfMcivEZ3+uTmX1WrJ3JuYB1HZ4Fn2ejx2FnvgHMr3lnRSHF5r24v6F37LYRnoLlDRfWKdWemZcH+2svcBADgipTWYxEYl1wS1R0lqGB45uKeJDdgzar5qD1SZg9ZB2MsasfZ8114\/0F2HR46JMMA4AwDoUVqDSWxUQlBzPLIO498Cgb2h5av2Gx0HTpDtY43IfDvqKtZubznorgN7g2PAOAMA6FFag0lsVEJQczykDv3Xg4\/7U\/ZHRMdX3VfRD5zXYK1UAt11QPdjwDgDAOhRWoNJbFRCUHOgA+wFfFUHdNcB3XVA92PAOAMA6FFag0lsVEJQc6AD7AV8VQd01wHddUD3Y8A4AwDoUVqDSWxUQlBzoAPsBXxVB3TXAd11QPdjwDgDAOhRWoNJbFRCUHOgA+wFfFUHdNcB3XVA92PAOAMA6FFag0lsVEJQc6AD7AV8VQd01wHddUD3Y8A4AwDoUVqDSWxUQlBz7F8H\/f89INwH5qwO6K4DuuuA7seAcQYA0KO0BpPYqISg5tiaDs9n879pXZKomE5s2DZPl7bk4\/FyOTVPxZd32hg9B1vvf4F7b12Zszqguw7orgO6HwPGGQBAj9IaTGKjEoKaY1s6PDfnp1NzPo8d1iXH\/sbGnMTG6TKkHmwyYqdiMWd1QHcd0F0HdD8GjDMAgB6lNZjERiUENcemdHg+u28AvFyaU+6bBfb68O0Ddz73iQ2TFPH3Tk1wls8c5uU3GYZnlcoOyYFyXXfPPDvsi7kf1on7Nt1e6d1kvTiB4XBloute4+7j2POntFiia5KAMf2I3tW9Y9ScgDmrA7rrgO46oPsxYJwBAPQorcEkNiohqDm2pIM5KLtDc+ZA3h18h2vtZ3tA94fpIWEgD9xTn+2h2x\/25YHbJlPKbUd1+774+sNB31eJy89tb+L5wecYqWPXXlB+TS1G2xLJqpfLuTm1femLl5JZAcxZHdBdB3TXAd2PAeMMAKBHaQ0msVEJQc2xGR3EoVkmAJJDdo87rAfnaVe2lDwQz3GYpIm\/Fn9zID2cj9VN+5IkHsL3qGhPvlvSfkSXyLDfnnAWJYuu0aKlXlfTr1aD9l18f8bfw8Gc1QHddUB3HdD9GDDOAAB6lNZgEhuVENQcW9FBHpqTg7I40A\/UJDbiw76z4VlDedH2ZN20L9OJjWXtyXebk9jokxnhsw3XaNFSo6vry3NzNvVMHfsumffMwJzVAd11QHcd0P0YMM4AAHqU1mASG5UQ1Bzb0MEdbNND8cihvGf68J8ewHPtBPgysuxk3bQv04mNZe3Jd1uU2JCfr9GiZbGuvu\/tf10fTH9M4sN8m2OibgtzVgd01wHddUD3Y8A4AwDoUVqDSWxUQlBzbEIHe9gffrLvsYf2\/sDrfpVhOKS3n0s\/7ReH\/+gALg\/3Wboy7aE7ThpM1U37MprYqGhPvpttP\/gck2l\/0fMNXZlEixpdzRi6\/+uNr2baOJ\/bPom2czBndUB3HdBdB3Q\/BowzAIAepTWYxEYlBDXHFnSID8ghLpkxnJ3NtwLastbm\/7pG2r6rE307RCQHXFJFtGsZq5v2ZTyxYVjWnny3UJM0qeDqx9eFpqPPd5S0qNHV1gnf3+qR0zmFOasDuuuA7jqg+zFgnAEA9CitwSQ2KiGoOdAB9gK+qgO664DuOqD7MWCcAQD0KK3BJDYqIag50AH2Ar6qA7rrgO46oPsxYJwBAPQorcEkNiohqDnQAfYCvqoDuuuA7jqg+zFgnAEA9CitwSQ2KiGoOdAB9gK+qgO664DuOqD7MWCcAQD0KK3BJDYqIag50AH2Ar6qA7rrgO46oPsxYJwBAPQorcEkNiohqDnQAfYCvqoDuuuA7jqg+zFgnAEA9CitwU\/mhraZxEbuOoZhGIZhGIZhGIZh2JjxjY1KjHiADrAf8FUd0F0HdNcB3Y8B4wwAoEdpDSaxUQlBzYEOsBfwVR3QXQd01wHdjwHjDACgR2kNJrFRCUHNgQ6wF\/BVHdBdB3TXAd2PAeMMAKBHaQ0msVEJQc2BDrAX8FUd0F0HdNcB3Y8B4wwAoEdpDZ6X2Pj+XfPJp++a74Jr3331WXvN2etvfonLLzQSG\/sFHWAv4Ks6bFv35+b89NQ8nS7NS3flOtZur559+vv+x4N15hgwzgAAepTW4InExi\/N159\/1nzy1bvmyzCx8fO3zdff+zI\/tPe+aL7+2X9ebo+Q2PjN7\/7c\/Or1HxaZqbN3CO5bpNvMP53bf4Hn9r760lxORvdTc9E+1W6I+borJAWez+14PTWntQZs7fauYJdr8wOMBzHxGDDOAAB6lNbgmb+KYpIX8Tc2BjPJDxIbucTFHNs76wR3fxCPbf5m1B8oaw7y+Wefd5MRyL37jRMbL5fmFGg1jNM143B7El\/tDj25MX+5nKJ7T7McgsRGjlD30G9iM5qtn9h4PstndDc63P3guvCJwbdz60Tq5\/PbaynOo3WI\/T3uf+LOUV9uM3\/nzKlEv5a+XugXQldvUkON8VgnJsLWYZwBAPQorcErJDbG7s0zEhv7ZU5w\/+tf\/9q8efOm+5QjPdD0m9lFB8qaDblMAvi29pLcuHMywW\/++7Eyz5fa3akvC4l81byHH+D+QNP1uzv8+IONPxxP+4N\/\/\/QAfWRya4Sf3\/Hhcd3Ehhu3MV8UzzPj3g+yXAe6sqNOsKA973Pd\/fk+Np9Yd7\/OnZqT6YfQ2I1Hd+8W83fWnJLjP2hmbcQvZrV3p\/GYExNh\/zDOAAB6lNbgqxMb5m9t8Dc2SGyUMEmNf\/mXf7FWRm5oHcnmstsce3ObZLH5NRZuZIPr+Z\/A+Q3\/sJmPDl3dhvd0uYhy8rnhYda1ebo8R2WiTXKpb6XnLXp3fz08oPj39Lawvx7fj+Rm5TiIe9Z6PxjTeDllX419QB66\/edRPYydzs3Z9nfqJ8T+vdIx8O\/ufd9a9sH7Iaf7VGLjErx\/\/\/ri8JnXsaOfR\/JGQDc2pTJxH7u+jY3FgvYSn\/J+suJYx7oPPn6xz8743rnV3eq5\/rohxzt5f4PUz45h+7znbtz7dUHg\/ULeVxqPqZgIjwHjDACgR2kNviKx4f7+xrVJDWNHSWz86ce\/d6Ufh7Hg7pMa\/\/qv\/1qV2Ig2w2bz2t+XB3f5uWW0fMiw4ff3kufa++EmPG3PHUT95+Ew4DbV4gA21rfc85a+e3JNvqPoT3\/fPzPVpCfoX3rQyPRlxrvGGsk+Dm3FGi+n6KvJISbQ49K9b\/Kuhq6cv+fbmTHOkY8ZwkOYOJC9XNrDaFdsj+R0T97fMuGH3veGidFpGh62O7yGJ\/cca2IMnT9l6nbEidWuL\/2zU5a0F7fdkrzb9cS6B1pG887cclqdn+WcE\/onek+MV0RQtjCnivp5bbJz0NzO+dJIex23Go+xmAiPA+MMAKBHaQ2uTGxc\/3c1QjtKYuPXv\/1j87d\/\/LN5\/\/598+rVq+bt27fNx48fuxb2ScmxwqRGbWLDb7jlhtUQb1rTQ7CkvMmVm3H\/uSub21TnNr394cB+SN7Hb75z++SobxObeMP0u4trGR3jw0Da37JeLb6P3vp6C8fB9mt4hutTV3dS4+VIX\/UaOJN99n7gLPvMRFd58IuJNY01T3UZ7u2d3BqRP4xO+GHiE2W9Zfvp89JnRSRjEPuDtcgplrXn3mudg3SJWHfff+PnnW5RX4Lrfi4k\/i11nBivhFjD+FVH9BtdE32b8pkj7RluOB6lmAiPBeMMAKBHaQ2uS2yY\/\/3rVz+IMvX2CImN17\/\/SzaZ4U3yKMmNnGPJpMYq39ho8ZvPwfxmNn+gLpcPiTfbSbmRA3bOXLH0fWa\/S2FDvezd42vpoa4lOrSk\/XXPy+kV4Pvat7NwHLr6UV3fh0mNl1PeiA4+YNuODj3iXkCqq3\/\/QbcxHxw0Fu\/e3\/MW67k3crpnfXLKD5O5kertSdqXdSP\/F\/R+XdLdPzfwiYXt+fEdXkW+2\/XEuns\/DteEVjf\/ax72uf69wjLinWrXjak5NUe\/4Dk9vl2pm+J4lNcZeCQYZwAAPUprcFVi46dvvmg++fSzyK75lZRHSGzMwSQycmaSG3slp4P5Q6EmkRHa0j8eagg3yX6T7feZ8QY63pDbK6PlQ+INf0Jugzu2abak7xP2Z7RvmectfffkWqa\/cZsLDiiS6GCxcBz6A4a34HmTGi9nbM66frnnJe8evWNA0kf\/\/q7u+LjZC67d08nqkHtX38aaOtybnO7595rww2RuxHpHyLERdZOx6JlYDzpCfxk+z29P+kbS3xWIdRf9iOae7\/ft1o3kuvf9yfFo8X0V8WHob6Bjh+Z41OwNYH8wzgAAepTW4JmJjdva0RMb44f+bbNOcE83yH6j6Te+7rPfqPrN6bBxlRvZqfID+Y1uT3KYMkzU6e\/7jXFcfrRvmectffe2hkgwdHV6fafu59p0mL6Em31Xrnx4H+t7fE\/iy5Y0Xk7kq+3BZXiP+IDs+jW8k\/+cHHLkgcsf1rLvl47b8Nz4uqnXP+uKA9ZWyK0ReU2n\/FD4hNA7QoxNPKbpcxwjPhf5ixzLivbEPC\/Nt2uIdZd9CXyv7\/dt141B\/+Gz07SkX4ecZx5\/PdG31J7UIGDF8VgnJsLWYZwBAPQorcEkNiq5Nqh9+PChT2o82q+iLMdvOGPLHno6O5\/NoSbYePab3NbshnaifM\/IZtcgNrwDuT7LDb\/\/v2Q4G5oY6Vv2eRPvkry7PIC0hGWshe\/r+zscBMob+\/Aw7izq6qJxiO85y\/SreH8Z0lf94cpZ+K7pOxYTC\/3hurX2fZ9tm\/n3y\/lg34dA++T5ie\/ti9waER9sPTP8cFRvQVi2tV7G7roc09gfAuv6U\/SXyvaK\/VuJWHfvi8P8ScfgvutG\/9yCfumzO+uEyvtQi\/J4rBMTYeswzgAAepTWYBIblVwT1B4lqWEguOdIN\/yQkhyC\/EHmRgf5Tfpq6VD3QGxN92t+Gp9j7fbWYi9r86ONBzHxGDDOAAB6lNZgEhuVENQc6JCDxMY0mZ8O+5+YHiix4Q5h6\/+0fktsS\/e15+Z25\/o+1ubHGw9i4jFgnAEA9CitwSQ2KiGoOdAhB4mNeXQ6hXbDE\/7mfLX\/qn39r9fsAdYIHdBdB3Q\/BowzAIAepTWYxEYlBDUHOsBewFd1QHcd0F0HdD8GjDMAgB6lNZjERiUENQc6wF7AV3VAdx3QXQd0PwaMMwCAHqU1mMRGJQQ1BzrAXsBXdUB3HdBdB3Q\/BowzAIAepTX4ydzQNpPYyF3HMAzDMAzDMAzDMAwbM76xUYkRD9AB9gO+qgO664DuOqD7MWCcAQD0KK3BJDYqIag50AH2Ar6qA7rrgO46oPsxYJwBAPQorcEkNiohqDnQAfYCvqoDuuuA7jqg+zFgnAEA9CitwSQ2KiGoOdAB9gK+qgO664DuOqD7MWCcAQD0KK3B8xIb379rPvn0XfNdf+2X5uvPP2uvOfvy+6BshZHY2C\/oAHsBX9Vh67o\/n5+ap\/Nz9+l61m6vlkfUfSvajsE6cwwYZwAAPUpr8ERio0tgfPWu+TJKbPzQfOeTGT9\/27yO7i23R0hs\/OZ3f25+9foPi8zU2TsE93r2sEl\/JFbz1edz83S6NC\/dRxhnvu4vzeX01Nx3Sjw356c1n7l2e\/Vse22u0Wk72o5BTDwG2xrnpWunxloLALAepTV45q+i\/CASG3PvzbNHSGzkEhdzbO9sI7i7IP3UbnpDWxK0Xy6nuycZ1kps5Ppu2+bwHZH4qklQ9P5yai5zxSKxsYhQd3MwDefoYOf22Lr+ZtvOjf4ZmTEWYxmXD\/uSWWNyHZ3dXsvLpTmV7q3AfN1XJJpTI88Jdaqp06Kp7Ri5mOj7esosMmP3YLvE43ynRIHw62E+TD8\/3hMs66+pG\/mnnbPzY2Z5P+KSlf37RLbm2tSt3+KFr9mD2Xl78wEHgBK5WGu4PrFhfk3lqx\/S6wuMxMZ+KTnWfXFBKw288zeLGkHqmqAaQoCdR+SrcmNmP8\/cSIkDFoyTXSPsBl1ujNc9HNh5MTFO0Ybd9Cko7w6c3ifm9W1+e25D35ddeFCYw3zdb0tunYt0yjBZR1nbMWLdfV+e0xg1eg+2TjzO665dWTJ+bPze+c3S5y8rn8y91m9Xf9dbr01SvyufZ9ecmw44AIyR3eO0VCc2fvrmC\/c3Nq5MahgjsbFfSo51X1yQTjaGNpAFh9UuIPufCLiY5OoOPyVIA3hcPsVtqn25MFDKtuODc7p5Hy+f9qfc92Vtu3vn5\/CnJzfcYCgR+qods+jQa9698M6R7m2ZS+tXYd2Cn5TGwI9R2W8ei+waYTWT7zzlh\/5+99Fg5ng0jp6R8eyZKBP1MfPshAXtybVpVvvLWK5799GQ6OrKDP4q1qYS2ect0d2zLW3HyMdE14ckRlnG7sFWicd5xMesbw5zZyiTqTO6no35sG\/LlUvXTtN0e61vYLp8yJDYKPXDteffUa4PaSzMkJ33hvG2p+8PhP3I69F9NBTHwhEnNqbq+\/tjes9\/DwAoxdq1vrHx6RfN1z9n7s20oyQ2\/vTj37vSj0PJse6LCwjpxjAMwu2\/gyAlD7ZxkDKMl++xwTgfgGQwl23I++Pl3bsM7zj0L+27bKsLmLLtvt8+oA6BVvblEYh8NTn8hL4SIn3LlYvGJRjTaMzkM8KN24jfPBrZNSK7iZ3yQ3c\/GqPS5rNr\/2Tb60wO7sTGNR4\/3zdvsu8tC9qTa4Fvf83D7VLdx3QdX5vKZNeRCZ1q6tj7d9R2jHxMHOvDffsH6xCPc2YOWUbiQ65Oyc8n44VrayyG59bSuTHf3Bv7ZpGsK+fgWNs92bVpeduja5PXMXnWgrHosM\/pK0zVXzo+Xfsjzwc4OvlYu8rf2Ph3zXdfXfd\/RjlKYuPXv\/1j87d\/\/LN5\/\/598+rVq+bt27fNx48fuxb2Scmx7osLGmnALR1WW8RGIQ5SGUobC3s984wkcBpMfwqBbap8sHGX5Pqeti3rhn1ZHtT3iPRVq1FwUDWH4Pw4Cu3GtInKx\/4XjZMtV\/DNByO7RmT9fd7msHw\/wM6XoP1E79Ka4Rm\/b8cy8otl7eU2rcYfy\/WXs5ru2TrxWpYn9n\/HlE41de6v7Rj5mDj2DlPvB1skHmc3hrHfZrBzya8bmTqj65mM4SHTbUV7giXPbhliZWbOz1gf4mcXyLUz1XbF2tS\/S9SfZXoY4n3XVP2J+xXvAXB08rG2NrHx\/Q9BksPc4xsbr3\/\/l2wyw5vkUZIbJce6Ly5opBvDeJPsDiM+QBsbNgpxkHKMlY+wQcmV6fsQXIttCFRRsJ8qPxJkc32P2jZ1k76HgXZ5UN8j474a+0pPTjuhzTy\/ymic85sHJKt7diM35YcL\/DQZN1c3np\/lTaOdP6P+L\/xlYXvWL6L2Rf9WYDXdAz+Nrfy+hvQdWyZ0qqmjoe0Y+XVmrA\/37R+sQzzOmTnUYf0xmjd+XZqYdyHJeiaZbivaEyx5doupa\/zTvYvox4z1IX52gdw8n2p7xrMTbB2p5TI9DFaL2XpO3K95D4CDU9rT1yU27P\/i9TP3NzZau+bbGsYeIbExB5PIyJlJbuyVGh3WxwWNZGNoAocPYOG\/DSK4xUGqZaJ8nuCwM6N8FOynysv+BCR9b5luO\/xpwPKgvkdGfbWkb067UJspP\/GfR8e3kFR5ELK6Wz3kpu3KzWFI0n68RuTmjMfOnSnfF+0vbi\/xt8y7Xclquo\/6bom8T4\/pVFNHS9sx8utM7H8xY\/dgq8TjXPAx6YvRXJqYdxFTMWK6rWhPsOjZrq7zT1cvmo8z1of42QVya9NU2zVrU7bOMj0M8bo0VX\/ifs17AByc0p5+ZmLjtnb0xMabN2+6EvujRof1cUEj2hjaQBFcM0EkCBw20AafbZAKg9hE+Txh8Mr0SZDbaJTLu43NcL\/93PU36XtLru1wYxHXCfvdMRHU90jZV6W2IeJe51e9NpN+0mlv6kQCh2T0fyCyulsdlyY2On19ATkWEa6tftzsOPnnlfTuxirT3vM57qvtR19ueXttC\/FBRfjRGszXvXufoq5CyxnY9SV5n5JOjmV1dLUdI7\/OjGm4XF\/QJx7ngp9OxIf565m5beZHPHfNNec3meePrZ0zyoeYuoN\/yng57b\/xs9PPlpGYUG57+tkJ9jnperBkLAyj71RYQ6NXjvSueA+Ag1Pa05PYqKQk6Fw+fPjQJzX4VZRrcUFh6it8NvB090+XSxucg+DmA5G95yqOlvfYjctQLg7WmX4VNxqG8fJhH6P3K\/U9jqJ2M5Jtt3tuOeg+BpGvRlpObCiisq0PmM9yHPt2Uj9xG9KMvn2brUU3H4vsGmE1zW9ix\/0w9ONW5zE\/FWPct2uvz5jL3kxFeS98Zk17hqh\/6Xp1LfN1N0zpOrE2RciDT0dJJ8vCOsrajhHrLtbdztx7jt2DrROPc2Z+dH43Hh+m5l2MjyW99WWn1854T7As5pu6kV9282uoP74+yP2I\/Gwprk1Ta8\/UfUFxHZozFqJMd9UxVn+O3gvfA+DgZPc4LSQ2KikJOodHSWoYrtEB4J6o+arZwGQ3Usdga2uEPRzITfUVrN3eWjyC7lvVdgxi4jFgnCspJhYAAOZTWoNJbFRCUHOgA+wFLV\/N\/nTqQGxrjcj85Owq1m5vPfav+3a1HYOYeAwY5zpMspJvJQHAtZTWYBIblRDUHOgAe0HHV93XUw+c12CNUALddUD3Y8A4AwDoUVqDSWxUQlBzoAPsBXxVB3TXAd11QPdjwDgDAOhRWoNJbFRCUHOgA+wFfFUHdNcB3XVA92PAOAMA6FFag0lsVEJQc6AD7AV8VQd01wHddUD3Y8A4AwDoUVqDn8wNbTOJjdx1DMMwDMMwDMMwDMOwMeMbG5UY8QAdYD\/gqzqguw7orgO6HwPGGQBAj9IaTGKjEoKaAx1gL+CrOqC7DuiuA7ofA8YZAECP0hpMYqMSgpoDHWAv4Ks6oLsO6K4Duh8DxhkAQI\/SGkxioxKCmgMdYC\/gqzqguw7orgO6HwPGGQBAj9IaPC+x8f275pNP3zXfZe799M0XzSeff9v8lLk310hs7Bd0gL2Ar+qwV92fz0\/N0\/m5+zSPmjq3Yo+6r62fxniwzhwDxhkAQI\/SGjyR2Pil+frzz5pPvnrXfJlNbPzQXm\/vk9hofvO7Pze\/ev2HRWbq7B2Ce5ktHXJgRV99PjdPp0vz0n2EcVTWiKvH6Lk5Pz01y6ZvTZ3bsb+1eW39dMaDmHgMjjHOL83ltJ01DQDAU1qDZ\/4qiklgpIkN822NL7\/5tnlNYiObuJhje2cbwd0F36d2ExvakmD8cjmtnoS4Z2LDPovD9iiJr5rDb+8vp+YyVzwSG4sIdbfzTGr3cmlOmfmaLTuX0hhFYx7auT0GB8j6ot4p5yyiju1\/UCd6v+6ds\/dWIvb3YY3MPsu\/X63eY1RqfrV+SuORi4n+2dJv4j4JPWDTqKxrlZj9QeR7dk7OiXnzExu30KC8r+nWM9Hw+nsu95zsvF0whqX32LrfAGyZXKw11Cc2fv62ef3VD+6\/JDaySYs5tndKjnVfMsGn20xnDyAZbNBYNSDeIsjCNUS+Kjd29vPMg4U4MME4ke520yY21N1czW1S587fhAVjlJun8bPNT\/6DPufeoSWqY8oEz7frS+9f7psEfVnpiysRr83dGnnKb45N38\/n+\/n1pOYr6Kc1HrHuvu3nzAGpvRf0KacJbBeVda2SZC60\/ZrnavMTG3fXQM7T3POvZp3ERpGN+w3Alolj7UBlYsP8isoXzdc\/t\/8msWHJJS3m2N4pOdZ9yQcfFyCCw2oX0G3Q6AO7q+uvGZMbgLh8hkK5dKMqnyUO0sXn+c2F2yS7+3EwjJ81Xb4PnqEVX\/AxCH013ZgYrQqbomhc2jKXVruw7sLx9\/7lDldBu7lnPwDxGhFrYLAbtvZQfYrmgxyPJXMnM0YlbD2pvXi2LTPWN8OI\/xjC58h1qXu3tadfTne3Joh++vcz\/Yo0G9M8bC\/QvfT+IXM0lyzWT2888jHRtTl2MFntsAR34fbrmvfDkTk2M47bvjhnt20lRex8GNoY7s\/oQ0+lBsVnu\/pj+5LwflJ29J3M8+veyRDPVa+R\/eAQa2n5PSo16+r5d1ttbQbYEflYW5nYML+C8vqbX9w9EhuWXNJC2p9+\/HtX+nEoOdZ9yQcfFwx8wGn\/HQQauYm0n+PINFp+wD1jePZQTwYz+Tluc+x5PogNwWm87anyps\/DvfTdH5PIV5PDjBvHVAbpW67crHGTzwgPU\/bf4fMfF7lGxP7mfVHoL7QbnztTY1RGtmsRm1KDLWf7U1hrMnUigveJ+24otHklse7uGeZVzbuEz+rHI3oHVz7RvB+T7v7ImlRiruYRS\/VTHI98TJxq0\/ns2j4At+P6de3aOeaf4T7Fz49xcz73rSFD207g\/\/F8mOpDzHINxp49\/iyLj6NhbLUseyd7v+9TSH7e5tqLuinWn3U1S9uber9JHQF2SD7WViU2zL8\/az6RdkVy4yiJjV\/\/9o\/N3\/7xz+b9+\/fNq1evmrdv3zYfP37sWtgnJce6L\/ng44KECDgecbCMg0uG0kFUBJyQKJgkgdfgg1j3MSR63tLAOVFevoto61GRvmo1a\/3D\/0TjJDUz5MZ9TK+ofOx\/kY\/ZcgXffDCSNSKcM0aHTkszHn4Op1qNzJ2lY9STWx9Ka4nrn\/WVpN1yHUd8P96EOsJ3X4tY92BNCPUPdQw1y2kalg3b89xAc8dS\/dZubxn5mFjokx2Lzq9iUWDjrLOuXTHHZP2R+devXck6miFqd6IPkqUaSMQ72X5PzIv+3cbKTb1Teye\/F3Nl+zkaWq\/BtEaj77FUM\/susq9rrM0A+yIfa6\/846HW+MaG5fXv\/5JNZniTPEpyo+RY98Ut5OlGNN5E2+AQBachgOaC7Vj5npGAEQUzG4zCtrwNAar8vKWBc6p8HMRHg+4DMe6rsa\/0hJsOj9B+nl9lxiTwidR3H4dU90HraN71ugqtpubOjDHKYZ8tyxQ3jUN\/3HgHZbJ1Buz8kv4SPbe0fl1HrHuoafA+oU7y38l6F7aR8edVNR9YrJ\/yeOTXmek2nV9JzWGrXL2uXT3HzPMGPx+L4+ae8b2Sj7nrZk315stM9UGyUIOW8rPH36nHzvcr3ynod4wrK+etbbvXYFqj8fdYqJl93\/C9vHlfmO4PwCNQ2tOT2KikJOgYJpGRM5Pc2Cs1OqxPPvjYxdwHs\/DfBhEMo4BimCjfI8sFRMGsVN8z+rylgXOifBIYR\/r1QIz6amkcc+MWajk6bi3+c66dntKm6jHI6e432ua\/w3t3G\/Xngobdx4SpMcqS1zxZB1riTawhXm9ydTx2Xsp+JL6Wma8rEOseP8P32Y+DJdQsq3k3Pq7A5JqUMl9zT41+2uORX2dcm0mMCrGalxMysC1us64tmGO2vo\/hxmRbA8M8d21G80P6f9SviT5kWKTB6LNdW6W53JPTcek7tXcG3UPy8zaOCdMaTb3HIs1y7xuxfMwA9khpTz8zsXFbO3pi482bN12J\/VGjw\/pkgo9d\/INrItDZQBN8jgNVy0T5ARN8wme3n7t24mCWD5A9o89bGjgnypt\/RzePQdlX5RiGiHudX0VajvqJGwu78SxqnhmvByKru\/XHk9igdXPE\/J87IjG666W5MzVGGex8j55tKIyDGGPfvitXGjt3Pd8H19++jmx\/JWLdRT+9RuFz7Zj4\/nb9D15s6WZeskhz\/\/zF+q3d3nLy64x7fuTDZgyCjub1ga2y1rpWPcfMv6ObZUxcGnxPrJfC35fuPRKWaDD67O5zUF5+tti1LHxWy4x3Sr4tm32nrt\/hvG2R5aN+ZeJPtt8hSzQr9GnA3Y+qTI0ZwA4p7elJbFRSEnQuHz586JMa\/CrKtfhAFVqafXfBzdnpcmmDexBE+o3+EDBGy4cEdcPnpsEs008Z\/Lrr8fOmA1X8rJnlC\/14VCJfjcZsbJPQEpVtx8R8njVuDndgyYxH32Zr0c3HIr9GuM219LusVpbxuTM1RjFiY++xbeTnuJwvfd1SHTm+3vyLRf3N\/aTwemLd5ZrQ6RkKnWx+uzHyFt2bXmNiFmpeq98GxiPWXWjYmdNB+vRt\/ABuwzrr2nVzbG4cN+Wiudf5u2+7HMOWznPDMg3G4qe9F1SQny2FOT\/9TqH2mTXD4srKdUsmNvp39m3lxkn2O2Kp38i1I6xbM2YA+yO\/BpPYqKYk6BweJalhuEYH0CENyi7wJoeOB0PNV+2hqrRxenz2skbYeTG6+UypqXMv9qD72vptYTyIicdAe5wPF8dLScvFZA7+ALA7SmswiY1K2Lw40GF\/pD89yP9U4tHQ8tXpn9Y8NvtYI2o2u9veIG9f97X128Z4EBOPgfY4Hy2Om0TOOu+27XUbAOZRWoNJbFTC5sWBDnvEBfbwa4yPntQw6Piq+4rpkTdRrBE6oLsO6H4M9Mf5mHH8ekhsADwCpTWYxEYlbF4c6AB7AV\/VAd11QHcd0P0YMM4AAHqU1mASG5UQ1BzoAHsBX9UB3XVAdx3Q\/RgwzgAAepTWYBIblRDUHOgAewFf1QHddUB3HdD9GDDOAAB6lNbgJ3ND20xiI3cdwzAMwzAMwzAMwzBszPjGRiVGPEAH2A\/4qg7orgO664Dux4BxBgDQo7QGk9iohKDmQAfYC\/iqDuiuA7rrgO7HgHEGANCjtAaT2KiEoOZAB9gL+KoO6K4DuuuA7seAcQYA0KO0BpPYqISg5kAH2Av4qg7orgO664Dux4BxBgDQo7QGz0tsfP+u+eTTd813wbWfvvmivfZZZ\/G9pUZiY7+gA+wFfFWHrev+fH5qns7P3afrWbu9Wrag+6NqOwbrzDFgnAEA9CitwROJjV+arz\/\/rPnkq3fNlyJ58d1XnzVffh+WrbdHSGz85nd\/bn71+g+LzNTZOwR32Aur+erzuXk6XZqX7iOMs+014rk5Pz01652V126vHn3dH1fbMYiJx4BxhjwvzeW0\/XUKYO+U1uCZv4ryQyax8UXz9c9hmXp7hMRGLnExx\/bONoK7CyRP7aY3tCWB5eVy2vxPAj237muuffuT0p0f5hNfNQmK3l9OzWXuy5HYWESouzmYhnN0sHN7bF2RaGxHniPG0vp+UF5OM3\/\/VHKWJe29XJpT6d4KSH+3czh43tQzi3N+FW3T8d6TtmPkYuLUu\/mxKb47bI77r2vdPkc48zXfYrJ+ec\/JEWCfLdeXbt7KLmXL3hijazQf7bo3Z58wP7FxCw2K6zbAg5GLtYbKxEb3TY7uV1Fef\/NLUHa5kdjYLyXHui8ukKRBaP5GUTPAL+XWfd2TFkuIfFVuUuznmZtQccCCcbJrhN28LUgmrUDuABBtXk2fgnG186D3CfdtgdPlOV1rApa3192dvWmej9Q92aivyKS25n0DLeLy+9N2jFj3Ge9m15Nzq0\/53WF7qKxr0pevfJ5qrM\/13b7f1FpyH5L1pu3XPKkWfGNj4xoAbJnsGtxS\/Y2N+N51394gsbFfSo51XzKJDYMNEMFhtQtO\/qcpLm50PwUJrstgFpfPUCwn2w4Pzj74uY2vux8HOLdZD++V+mraaO9fuoBon+Pbd21Z7AY6OJAn\/S5rER9EDNe9mwahr1ptQy28hrk+Rjp1Oo\/q6C6XNPOapuNrLz8c8w8AM3y2KzPoFvrdCNnnjYy5YaSPyVpjWdCeXJty734lUvfyxji3frjysw49Fdqm88+wH23HyMfE0rv5vo29O2yR+euawY1ved2auj8Qzst4jnpf6j4akvUzJk5sTNX3981c9P2U7zr\/PXzZ0OftGnU+txqG9eTcH3vGjD7a9SGs31r00o5hvXRtJUXsWA9tDPfn6OSp1KD4bFd\/1roNsHPysXaVxIb7exvXfGvjKImNP\/34967041ByrPuSBgdHGJDafwcBXm6s4wBvGC8\/4J4xPNvX64Jv0KZtow9W3f0gWEUByQau\/KYg21cb4HIBvvtoiDYppX7n2hd9u\/bdlIh8NTn8OD3SLrp3iXQyWoc6Bn4R+Yl8RrjpHRnfR2P+AWDKZ83HjN8F90tk\/U+0nZD4iEH6Q8CC9tJ+j7RbidTdaJBvv\/Np8a5z5+xybd3z0r7sR9sx8jEx3wfbV6vdffsI1zN\/XUvniPTRqfsRPnYkz3I+FE3FiXkz+J\/9NFHf3R+L64veoyV+vlkXTNtufRguD3O774N8hrxf7KN\/hvsUPz\/G1Ct\/06ptJ3iv+D2ndQpZrsHYs8efBfBI5GPtiomNa\/6Q6FESG7\/+7R+bv\/3jn8379++bV69eNW\/fvm0+fvzYtbBPSo51X1wgyQafMDiEiIPlWICziPI9UcAJyJb3Qcv82\/U5emS4ibD1831P+5p7z4n2S\/1uyWkRBctr300J6av2nVrd\/E9UTrLPhty7jr1LVD4el0jXkfF9NOYfAObMCVkn9LsS5flRPkiW7i+97onvy82owW2kS\/WXM+7vxvJ+6pm3QV6grV1zumdn292PtmPkY2LmHaK1YuodYWvMXtem1q2Kda2fy9E8cj4UXZqIu3Gsn6o\/cb9mfbZrQjcHTP2urXC+pnFTxOPoGXP6GNQf0WdYL0f674naXTgOSzWQiHey\/S6VBXgg8rF2jcTGz982r\/lVlOb17\/+STWZ4kzxKcqPkWPfFBZJ0Uxhvum1w8Btra0MwyAWOsfI9pYAVBqueMODNCH42YLlnh++W9jV+T8dE+6V+t+S0iILlGu+mwLiv5jRsyb2reJd5fpXRpDC+j8bsA8CU3wR6xTa+8bRjIH0v+\/wB6+9Zf3V9TMZrYXtpnwrtXoHUPdwox+R9f84GuUZbg5sz+TVkD9qOkV9nZB\/c50He+\/YRrmf2umavmXVKWldu6n4OW2csBndMxF07V\/oKU\/Un7te8R7D2RH3p2xXPNNev2nuY5w39GVvj\/HqZX6u6\/kbv6ctM9UGyUIOW8rPH3wngkSjt6SsTG+bzZ\/0fD732f\/v6CImNOZhERs5McmOv1OiwPm7hTzaFYRCUAVFsDKKAYpgo3yPLebLlw6C6JPjFB4+kr+K+Y6L9Ur9b0vZN8SBYrvpu92PUV5eM45iOsrz\/nNXMkxu\/x2H2AWDKb0Y1LJHXNufjHnlQjsmvNYvbS\/wt8+5XInX3G\/WUvEbTG+Tl2vaMjP8etB0jv87Id3PaxYeTzoq+B1ti9ro2tW7VrGvZOhk\/D9fPDPHcmqo\/cb\/mPVr8umT+O7Rt5ker47NoM\/uMrqzrxIw+hvOt3N9hvXRtRmuQXGOifi0fh0UajD7btTW5\/gI8AKU9\/czExm3t6ImNN2\/edCX2R40O6+MCSbQh7gJYf00EA7v4B59tgA8Dz0T5AbdBHZ7dfrbtpMEwfsaS4BeXTfra9UHGsijA+YDe1yv1O9e+aKvrzzrvdj\/Kviq1CBH3pI6TftJpZerIAerJ6PVAzD4AtIz7rNMpP055rF8m87akdzdWo36a60NNe2LOCj9aA6m70XbMx2X\/4zmfskhbM5bBxbG6e9B2jPw6k3u3kKn7sDXmr2s3GHv7nNSnx9fPFDnH56y\/0VyM4vr0e2TXFNvGSbxP11Z7PS7vrofXFu09zL\/l8wuYvg7vIvYBYk2x79V\/ntIpwxINRp\/dfZ75jgB7prSnJ7FRSUnQuXz48KFPavCrKNfSBTsThHsrHJq6+6fLpQ1UQRDxQdzecxVHy4cEdePnumDo24gD24wAHNYNCyZ9zR9M4ue3fZfBtdTvkhZxZ+vfTYnIV6N3H94zS1S21dF8Dt5lyk\/cIS6jR99ma+ngPQzzDwCGCZ\/tfCvSruhXrq1kbO2zM3NZjok3OzbC3zuzbVe11xL5VU6L65C6Gz\/N+7l7N+mC6ZwPWahtMm4j62RnW9Z2jFj3kXeLcPrkxwe2yLJ1bWrdWrKutRTnWehv7f1k\/TSIMt1Vx1h918doSUjaH3+P\/JrSPVP0Mxs3LWJOZZ4\/1scwXqf1B5L1sltTfNthO3Hcn6OTZJkG5Wd391LRAB6O7BrcQmKjkpKgc3iUpIbhGh0A7omar5pNTbKBPA5bWyPsZnHFjd\/a7a2Fhu5H0XYMYuIxYJwXUkzG3A+7nojkQZLAAIBdUFqDSWxUQlBzoAPsBS1fPfpPULa1RmR+mnYVa7e3HvfX\/TjajkFMPAaM8zJMUkE7gZDGYrfGkNgA2B+lNZjERiUENQc6wF7Q8VX3FdO9Hc7WhDVCB3TXAd2PAeO8R1wiw\/8ah\/tVDpIaAHuktAaT2KiEoOZAB9gL+KoO6K4DuuuA7seAcQYA0KO0BpPYqISg5kAH2Av4qg7orgO664Dux4BxBgDQo7QGk9iohKDmQAfYC\/iqDuiuA7rrgO7HgHEGANCjtAY\/mRvaZhIbuesYhmEYhmEYhmEYhmFjxjc2KjHiATrAfsBXdUB3HdBdB3Q\/BowzAIAepTWYxEYlBDUHOsBewFd1QHcd0F0HdD8GjDMAgB6lNZjERiUENQc6wF7AV3VAdx3QXQd0PwaMMwCAHqU1mMRGJQQ1BzrAXsBXdUB3HdBdB3Q\/BowzAIAepTV4XmLj+3fNJ5++a74T17\/76rP2urEvmq9\/ju8tMRIb+wUdYC\/gqzrsUffn81PzdH7uPs2jps4t2YLua2uyNY1zsM4cA8YZAECP0ho8kdj4pfn688+aT75613wpEhsmqfH6m1+CsvX2CImN3\/zuz82vXv9hkZk6e4fgDnvhLr76fG6eTpfmpfsIe1wjnpvz01Oz7PxcU+e26Ou+tibb0zgHMfEYbGucX5rLacncWFoeAGBblNbgmb+K8oNIbLSfP\/+2+SkqU2+PkNjIJS7m2N7Z3ibOBeyndgMc2pIA\/nI5Vf9U0P5EccHB9ppnrUHu+UvfYS\/kfNW+f+sfp4t425dLc6rxHxIbCbHuw\/zMamr0M5rfSkPffmfJuBvEGHofcXZuj9cZRuuId631rYVIf7fzOnju1LNH14EKHQ3F+dbh+7h8XHQ0zjF\/ncnEqnt2FK4it67dfPiEXw\/zYfr58Xxe1l9TN\/JdO\/9PTWEaJ5TXkm4OiI7Y8quK6Z4j1xU7L7P9ylN6j2w73VjJ11j6TADIk4u1hrrEhvnVFPstjs\/cr6JcmeQgsbFfSo6lRyaAdZvw7GY5gw08qwbVMvd8Vg7t59+T2FfdT39Pl+fMhsff664t2cRlDnNHJ3cAOJ3ymzuzcTyfb6WhGddgHO3GMx3XeBPf1gn6UtpwR3VMu0EdO8f6hMgVvrUQuTbH73UNlToW51uHnTvnVu\/8\/S1qnGP+OrPscAnbIreu3XQsM35s\/N751NLnLyufzL3Wp1d7V\/lehfXkOrq4Ixq168YasSbXZ\/te+aSN7AcALEfucTz1iY3g72pc+2spJDb2S8mx9MgHMBdkgp+2dsHZ\/+TDxR5X118zJoN5XD7FBK0hkPnNg9vcuro++I08K7knfkrsA2Zo9pndgePi73f1Fr5r\/A6Gsf6MveO2yPuq63\/kL9JX+nfsPoZE2nbahxulgt+UNPb9cAe1oN0N6jmX\/AGg89XwvaxWre5G\/2iz6eoMelT6n2+\/+9jPl6hs7tpAfiM8Xsc9t7u\/xLeuRPp7eUPd9V+sG6mPdlylY+znA16H0v1tapxj9jpz537BuuTXte5jiPVNvzaFZTJ1krXPY\/x\/zFd8W65cbh2cvzdJGdaOUj9ce\/4d4\/knn50S3k\/Kjupn+jznHVz\/5LoSr+deE\/vBIcaj\/B5p+1az83lirRzTzfdn3hgBHI18rL3qGxs\/DPfl54V2lMTGn378e1f6cSg5lh75AOYCig9a7b+DYCUPK\/ZzHN1Gy4fEgc8HrSEYycCYPqtQpn9eHBjj+j4AikC66F3l87t3kP3pnzH9jlth7oFDapQr45DXO\/3DsSppLw9f4cEsOTjum9IBwPhJoru7EWjY+ddK\/mfv2bqFMS0eLAxufJfVaQnGer5vXY\/0d6n3QG7dcOXX1zFfvh\/7xe11KGmcY+46468Nh5rBh2H7lNa1mLH4m6lT8vPJmOB9qbwOxp+ny4eYe2PftpJ15Rwca9vi3y+Mg5Zp\/cJ3sPezOrmy2XVnwXiMvYdtq79n1lTTL7e2DpeHdcp9HNNt2RgBHI18rCWxUY0UNJfIkPbr3\/6x+ds\/\/tm8f\/++efXqVfP27dvm48ePXQv7pORYeuQDmAs0uY1Hi9g0xAEqw8gmIw4804EyeVYS2A0+SLb\/lM+O2ht5R8+Md43eIfuuQX9mvONWmHvgiDcXDqNJ4lM5bcbePSofj1U0DrbcxDjuiOIBINrkBT4VangD\/7P+3eqblkl9wWL72dVJBqVQpye+P9u3VkD6e\/\/eveV90ROtAxkW62jJ3IvGOFd3uxrnmLvOSGy\/E1+HrVJc18bI+PqstStaK3NMtxXP5wXPbhnWDrk3abHvJK+Ha7R8dp7+GWPlpvQTzx1wZYe1L7D+nZdqKAjHyPSzq2fqRGuTrz+p27IxAjga+Vh7zR8P7X8Vxf2fU7783t9bbo+Q2Hj9+79kkxneJI+S3Cg5lh4uGKQbyHjz7jaRYYAbNg1R8OkYKx8SB77pwJQ8ywa78DnefLAb2zDE7+hZ+q5Rm2Gw7gnfaz\/Bd+6Bw2oS9b\/gUzltcuM7qX1Gw8APxg5De6B8AAj8NdRN\/ns1\/8utAcHGMrvRjHF1gv5M1LFzSfpD1LeCb62A9Pdwgx2TXzfitSXkGh3l+8rxy+ixYY1zzF1nUvLjANukvK7FuPnh1vI4BmTqlNau7DoYMt1WPJ8XPLvFrx3J+mcIYlVsw5wtryUBtp30HRfp197JzyFXVs6\/eK1YqqFkeLZt15fr2xDtT+q2bIwAjkY+1lYnNlr7+dvmtf\/joVd8W8PYIyQ25mASGTkzyY29UqPDbckHMBsQfEAM\/20QATUKSoaJ8iFLNw\/Js0batiTBMCybCepL37Uleodsf8xz9hd8Zx84pGa5dzTktAnffUL7\/nNWY8\/+DztjBwDvf37jbAk1XNH\/7LOi6\/HY5+ZCgu3PsGEfq2PnkezHXN9aAenvkcYReR+L17KB63SMy\/pnxxv7zrpnbFnjHLPXGYnwLdg2Y+taz2gMyNQprF1+npR9eLqteD4vebar63zX1Yvm42j8cpTWkohcO0v1szrl5pArK+dfvJYt1TDF62T+OxTr+vQs3m9St2VjBHA08rF2dmLjtnb0xMabN2+6EvujRofbkglgNoAE10SwtMEq+Jxs3CfKh8SBbzowTR0SEkz9YmDNbH6WvmtL7h3CZy7dDGyF+QcOoaPQcMCV6+t2fta\/+4T2vbamTiRgSEbfnTF6APCahbpE\/tNpFAhQ7X9yHLtnu7oFnU0Z+ey+jdLYdH3OzoG5vnU90t+N\/+XXlcy60RKvAwE1Ova4+8X1Lbm\/bY1zzF1nns\/xAczqnX0f2CKj65pH+J6MAdEck\/FD4Nae2GfMNedTmeebZwdtxfN5unyIqTv4roh7XVuhb0viZ6efLfb9xTwd1c89N9Qkjg0h+T7K8lG\/MuOR7XeI1bAdk+g9umeb\/xNYVHdKN3c\/qjIyRgBHIx9rSWxUUxJ0Lh8+fOiTGvwqypr4YBdamsF3AdLZ6XJpA3UQiHxAs\/dcxdHyAXHgmxGYMs\/KvoMMrtl7IweUruzsd407bdtNn2fYT\/CNfVW8U2f9GAS65PynJyrX6mo+F8Yq5zdus5rRr2+zNTmgO2P8AND5eviOif+s539y7sTjnZvTci4GvlCqI8fPm+\/kXN+6Erk2m3cf1piQkXVDXuxYruPEfOtxek+2txGNc8xeZ+Q7bHDNhDK5dS0az87vxmNA6B\/t9ZG1y+DjRW992el1MJ7Py9fNaK5282uon3n\/4rPTz5bCXC\/r599BaGjvSVxZud6kiZDx8cj2O6KrL3TMxnnLmG7LxgjgaMg9jofERiUlQefwKEkNwzU6wHLSQOyCbXpAAMkmfdVsVIqbscdgD2uEnVejG9aUmjr3REP3tTXZusY5iInHgHGupJj8XErm4A8Ah6G0BpPYqISg5kCH+5L+xCD\/kwhI2aKvTv8EaP9sf42o2SBvf1N9f93X1mSfBxdi4jFgnOswycp19iv7XB8AYB1KazCJjUoIag50uDcumIdfXSSpMY\/t+ar72uqjb8xYI3RAdx3Q\/RgwztqQ2AA4MqU1mMRGJQQ1BzrAXsBXdUB3HdBdB3Q\/BowzAIAepTWYxEYlBDUHOsBewFd1QHcd0F0HdD8GjDMAgB6lNZjERiUENQc6wF7AV3VAdx3QXQd0PwaMMwCAHqU1+Mnc0DaT2MhdxzAMwzAMwzAMwzAMGzO+sVGJEQ\/QAfYDvqoDuuuA7jqg+zFgnAEA9CitwSQ2KiGoOdAB9gK+qgO664DuOqD7MWCcAQD0KK3BJDYqIag50AH2Ar6qA7rrgO46oPsxYJwBAPQorcEkNiohqDnQAfYCvqoDuuuA7jqg+zFgnAEA9CitwfMSG9+\/az759F3zXff5p2++aD9\/Jmy4v9RIbOwXdIC9gK\/qsEfdn89PzdP5uft0PWu3Nwd0R3e4HYwzAIAepTV4IrHxS\/P15581n3z1rvlyJHFhEh2vv\/kle2+OPUJi4ze\/+3Pzq9d\/WGSmzt4huG+M53PzdLo0L91HGFjNV9F4EftbI56b89NTs955eO325oHu6A63g3EGANCjtAbP\/FWUH0YSG2P35tkjJDZyiYs5tne2EtztT+baTexg53Zbex22zRUOsC+X0\/1+asihu0jOV+3YtP5yuixQDI0XEev+0lxObo5mp4TR1szfW+nr2+8sO+6Z8c36iWhrMLH2iPZ8W94iHV4uzal0byHovgXdHWPrTNyvU5OTBrbHVvY+AABHpLQGX5\/Y+P7dVd\/WMEZiY79sJbibJES4aXSbxeuTG2tg+3LNTnkJmcMBOGJfdT\/NPV2e7YEve9AqgcaLiHV3B+zTqZ0TGQ3NPD6fb6WvGfPg4GgPs+lBMl5LlvmJTYaKuR61Z56ZHLb9OuWf1d21B\/j6gy66B\/XUdB9\/D9uPm2gOt2Yrex8AgCNSWoOvTGyYX1X5ovn6Z3l9mZHY2C9bCe7xptjgNpRur9ttrC9mw2p+KuY3tMNPMePrjjQhMV7ebdiH++dnWT7d2FqSet317nnnZ\/cu7r7YcEd1u3dko5wl76vdgW\/sFDOlcWH80sPWjGc9ILHuoU\/nfLmdU0niSM6jcN7NmCMe3373sV8XorK5a4a5fjK3vY6wjj1Q596t+7gQdC\/0x3A33T2595joI2yarex9AACOSGkNvi6x8fO3zeuvfoivVdhREht\/+vHvXenHYSvBPUlsRJtdv\/lON6\/hwTP+KV73ObgvD6rxT9vcM4Y+tJ+7e2mCJGQoZ4jb7PoYbH7jPsjNcvee0eEEPPMPHCFTGo+MnzwwZQ9gj0+su9PTuLCcs\/08iQ7Y3RyQ867XtbtfnCMx9p6tWxj35HDvKZQPyD632F5H4CPx3DdMP3MMdN+C7p5Mm916cLI6dlbQD7bHVvY+AABHpLQGX5XYMH809Mvv42s1dpTExq9\/+8fmb\/\/4Z\/P+\/fvm1atXzdu3b5uPHz92LeyTrQR3uVm3m91+s+oOo9Ge0W4q\/SbdY8oNG\/V+w+8+ZA6lQflgoyyJ2pki6pfbDEdVww177h2mNvQHZvaBI2SpxlH52O8W+cEDEese+HQ0Z8RcGvPxsGzYnmdiDrhDdrg+eMZ8YcJPxFg7purE99MDtutruf446F6qE9+\/re6eTJ\/sOHg9W6zm8l1gq2xl7wMAcERKa\/AViY11fg3F2CMkNl7\/\/i\/ZZIY3yaMkN7YS3PtNs7doo5rZ\/Eabe4\/bfPpyaWJDPMNa5lAgmDrQ2vtRm75fcX8s4XNy7zDSj6Mz+8ARMkPj8viFY58Zy4MQ6x7qEMxL6ddjPh61MTFHIuJ1wI2bPFgGnyPG\/cS2JZ852p7pZusr0o+iNsafOQW6d58F99Xdk2kz0fi658J92creBwDgiJTW4CsSG6W\/u7HcHiGxMQeTyMiZSW7sla0E9\/GfsGUSG3bzKzfuptywIbYb3mE3nikfkD0IOKJ2JLJe9JyJw0OuT8XDBcw+cIRMaTw6fi3+c66dgxDrHvu0nxvR\/J3y8fZTzTcHpg6wo\/NUlI3JrC8tY+3Jw7VF+lL3zGKXJkD3lPvr7sm8h9U4TMCMvStsja3sfQAAjkhpDZ6Z2LitHT2x8ebNm67E\/thKcF+c2Og2keEGWG7A4w3y1KbTPWO4337u2ko39gFiU2033v3nzAY7OjyIZ9qNcmbjDpbZB46ICY1Hx8\/Q+ZmpU3tS2jmx7sKnvZ6hZpGPd\/oV5+nUHAkQY+Wf7epm2olw93N+YvsTjbmh1F73Ptk5KtYp2d+FoHtI9z53192Tew9xzT63\/E0T2BZb2fsAAByR0hpMYqOSa4Pahw8f+qQGv4pyPcsTGwZ3vf8VArHptRvnqFK3OS7V6Q8LxoINanA910d3GPb3L22f\/KY6s0mXh4fomW098zm7eYfYV8XYd5b1oQmNy+PncAewscPbYxPrLn26m1OhOMkBeWyezpgjAeFYGevH245x7jA75SfufuI3pfbs4TVtr3\/\/yNeuO+Sie4Ca7hPvET33uGvEHtnK3gcA4IiU1mASG5VcE9QeJalheOTgniY2YM+o+ao9VOUOb8dgD2vE2nN9C2sHuuvwyDERBhhnAAA9SmswiY1KCGqOR9Zh\/FsgsDe0fNX+tPrACbLtrxGZbx9cxdrt1YHuOrA3OAaMMwCAHqU1mMRGJQQ1x0Pq0H89+Lg\/ZX9EdHzVfRX9wHkN1kol0F0HdD8GjDMAgB6lNZjERiUENQc6wF7AV3VAdx3QXQd0PwaMMwCAHqU1mMRGJQQ1BzrAXsBXdUB3HdBdB3Q\/BowzAIAepTWYxEYlBDUHOsBewFd1QHcd0F0HdD8GjDMAgB6lNZjERiUENQc6wF7AV3VAdx3QXQd0PwaMMwCAHqU1mMRGJQQ1BzrAXsBXdUB3HdBdB3Q\/BowzAIAepTWYxEYlBDXH\/nXYxv8iEG4Pc1YHdNcB3XVA92PAOAMA6FFag0lsVEJQc2xNh+ez+d+0LklUTCc2bJunS1vy8Xi5nJqn4ss7bYyeg633v8C9t67MWR3QXQd01wHdjwHjDACgR2kNJrFRCUHNsS0dnpvz06k5n8cO65Jjf2NjTmLjdBlSDzYZsVOxmLM6oLsO6K4Duh8DxhkAQI\/SGkxioxKCmmNTOjyf3TcAXi7NKffNAnt9+PaBO5\/7xIZJivh7pyY4y2cO8\/KbDMOzSmWH5EC5rrtnnh32xdwP68R9m26v9G6yXpzAcLgy0XWvcfdx7PlTWizRNUnAmH5E7+reMWpOwJzVAd11QHcd0P0YMM4AAHqU1mASG5UQ1Bxb0sEclN2hOXMg7w6+w7X2sz2g+8P0kDCQB+6pz\/bQ7Q\/78sBtkynltqO6fV98\/eGg76vE5ee2N\/H84HOM1LFrLyi\/phajbYlk1cvl3JzavvTFS8msAOasDuiuA7rrgO7HgHEGANCjtAaT2KiEoObYjA7i0CwTAMkhu8cd1oPztCtbSh6I5zhM0sRfi785kB7Ox+qmfUkSD+F7VLQn3y1pP6JLZNhvTziLkkXXaNFSr6vpV6tB+y6+P+Pv4WDO6oDuOqC7Duh+DBhnAAA9SmswiY1KCGqOreggD83JQVkc6AdqEhvxYd\/Z8KyhvGh7sm7al+nExrL25LvNSWz0yYzw2YZrtGip0dX15bk5m3qmjn2XzHtmYM7qgO46oLsO6H4MGGcAAD1KazCJjUoIao5t6OAOtumheORQ3jN9+E8P4Ll2AnwZWXaybtqX6cTGsvbkuy1KbMjP12jRslhX3\/f2v64Ppj8m8WG+zTFRt4U5qwO664DuOqD7MWCcAQD0KK3BJDYqIag5NqGDPewPP9n32EN7f+B1v8owHNLbz6Wf9ovDf3QAl4f7LF2Z9tAdJw2m6qZ9GU1sVLQn3822H3yOybS\/6PmGrkyiRY2uZgzd\/\/XGVzNtnM9tn0TbOZizOqC7DuiuA7ofA8YZAECP0hpMYqMSgppjCzrEB+QQl8wYzs7mWwFtWWvzf10jbd\/Vib4dIpIDLqki2rWM1U37Mp7YMCxrT75bqEmaVHD14+tC09HnO0pa1Ohq64Tvb\/XI6ZzCnNUB3XVAdx3Q\/RgwzgAAepTWYBIblRDUHOgAewFf1QHddUB3HdD9GDDOAAB6lNZgEhuVENQc6AB7AV\/VAd11QHcd0P0YMM4AAHqU1mASG5UQ1BzoAHsBX9UB3XVAdx3Q\/RgwzgAAepTWYBIblRDUHOgAewFf1QHddUB3HdD9GDDOAAB6lNZgEhuVENQc6AB7AV\/VAd11QHcd0P0YMM4AAHqU1mASG5UQ1BzoAHsBX9UB3XVAdx3Q\/RgwzgAAepTW4CdzQ9tMYiN3HcMwDMMwDMMwDMMwbMz4xkYlRjxAB9gPxlf\/v\/+\/BruzsUbogL\/rGP5+DBhnAAA9SmswiY1KCGoOdIC9YHw1dxDBbmusETrg7zqGvx8DxhkAQI\/8Gtw0\/3\/oN7b8zorJQwAAAABJRU5ErkJggg==)\n","69aaa55c":"### Requirements, Assumptions, Constraints\nRequirements\n\n*   The project shall be able to complete within 4 months.\n*   The confidential data of customers such as address, NRIC, phone number shall not be disclosed to third parties.\n*   A thorough descriptive data analysis shall be carried out to study the relationship between the data.\n*   The data pre-processing shall be performed to improve the quality of data used.\n*   The outlier, missing value and inconsistent data shall be removed during the data analysis stage.\n*   The result of prediction shall be more than 90% of accuracy.\n*   The built model shall be able to integrate with the banking deposit system.\n*   The built model shall be applicable in the real world environment.\n\n\nAssumptions\n\n*   The budget given by Meybank to complete the project is RM100,000.\n*   The sample chosen in the data sampling represents the true population of the term depositors.\n*   The data used for the analytical modeling is the unbiased data. \n*   The collected data is related to the term deposit analytic project.\n*   The historical data are always practical and applicable to the latest business environment.\n*   The attributes found in the extracted data are highly dependent on each other.\n\n\nConstraints\n\n*   The confidential data of customers should not be included in the analytical modeling project. \n*   There are software constraints in this analytical modeling project as only open source softwares will be used.\n*   The time constraints for this project is only 4 months, the project team needs to complete the data analytical modeling within the given duration. \n*   There are only 4 data analysts allocated for this project, with only 2 data analysts possessing 10 years of data mining experience, while the rest are junior staff.\n\n \n\n\n","b9fd84ec":"## 3.2 Data Cleaning (for train dataset)","020683b5":"The subscribed and not subscribe customers will be categorized according to their outcome of the previous marketing campaign which are failure, success, unknown and other. \n\nAccording to the graph below, from the 3314 customers who subscribed the term deposit, 2041 of customers are from the \"unknown\" category which is the highest number followed by \"success\" category (663) ","fdecbbb4":"The graph indicates a distribution of \"yes\" and \"no\" on subscriptions for day column which shows that the highest is 18th for both decisions.\n\nBesides that, the \"no\" on subscriptions are instantly decreases after 20th and 28th.\n\nOverall, the distribution of \"yes\" on subscriptions are lower than the distribution of \"no\" on subscriptions.","4b5857d6":"While evaluating the model from the accuracy perspective, the result is higher than its precision which is 80.75%. It means that out of 2229 customers, 1153 of customers will not subscribe the term deposit which are predicted correctly by the model. Besides, 647 of customers will subscribe the term deposit which are predicted correctly.\n","15170845":"After the continuous data was scaled, it is then concate back with the categorical dataframe for later model prediction.","f2187af1":"According to the graph below, most of the customers (3398) who has married will not subscribe the term deposit plan. On the other hand, the number of the customers who is married status that subscribed the term depost also is the highest (1730) compared to single customers (1204) and divorced customers (380).","83532edc":"From the graph below, it seems like nothing highly correlated as most of the values is below 0.5. 1 means is correlated while 0 means no correlation. ","bb38c6a5":"The subscribed and not subscribe customers will be categorized according to their last contact month of the year. \n\nAccording to the graph below, the highest number of subscribed customers is from May of the year followed by August.","5c035aa9":"According to the learning curve of decision tree, the training score and cross-validation score are not very good at beginning. However, the both scores show a slightly enhancement at the end. When comparing the training score with cross-validation score, the cross-validation score is lower than the training score, which means that there is overfitting in the model.\n\nWhile the scalability graph illustrates the times required by the decision tree model to train with various sizes training dataset.\n\nBased on the third graph, the model acheives a good score (81%\uff09when fit times increase.","99bcc8e1":"Graphs below are used to visualise the accuracy and loss of ANN model. According to the Model Accuracy graph, the overall accuracy of training set and test set are improved at the end. \n\nWhile for Model Loss graph, the overall loss generated from training and test data are reduced to be less than 0.40 at last. ","419f5363":"The table below shows the first 5 rows of the train dataset. Based on the table, we can briefly understand the datatype of the columns such as categorical and numerical values.","49c99e05":"According to the learning curve of logistic regression, the training score and cross-validation score are slighty different at the beginning. However, the both scores are then come to 0.80 at the end of model training. \n\nWhile the next two graphs illustrate the time required for logistic regression to train on the different size of training dataset and its performance during model training.","3f231389":"The scalability and performace graphs determined the times required by the gradient boosting model to train on the various size of training dataset and the model achieves a moderate score (79.6%) when fit times increase.","86c2e602":"Randomized search is carried out to find the optimal hyperparameter value for decision tree model","5a4969de":"According to the graph below, the average number of contacts performed by subscribed and not subscribe customers are mostly in between of 0 to 10.  ","20c36e61":"## 4.8 Support Vector Machine (SVM)","2b2f32af":"According to the graph shown below, the number of contacts performed by subscribed and not subscribe customers are mostly in between of 0 to 10. ","4a19b3ee":"According to the learning curve of random forest, the training score and cross-validation score are not very good at beginning. However, the both scores show a gradual enhancement at the end. When comparing the training score with cross-validation score, the cross-validation score is lower than the training score, which means that the model is overfitting\n\nWhile the scalability graph illustrates the times required by the decision tree model to train with various sizes training dataset.\n\nBased on the third graph, the model acheives a good score (83%\uff09when fit times increase.","656a5140":"The graph indicates a normal distribution of \"yes\" on subscriptions which shows that the highest is 0 day.\n\nBesides that, there is a flat distribution of \"no\" on subscriptions because people who do not subscribe will not contact the clients.\n\nOverall, the distribution of \"yes\" on subscriptions determined that the highest passed day after the last contacted to clients is 0.","f694b1a8":"According to the learning curves of gradient boosting, the training score and cross-validation score are totally different before 2000 training samples. However, both scores are gradually enhance at the end. By comparing the training score and cross-validation score, both scores are parallel which means that the model is well fit.\n","3ed6a791":"# 4.0 Modeling\n","b45d5efc":"When the Random Forest predicts a number of 835 (662+173, True Positive + False Positive) subscribed , only 662(True Positive) of which were actual subscribed,its precision is 662\/835 = 0.7928 (TP\/TP+FP) while its recall is 662\/662+188 = 0.7788 (TP\/TP+FN). In other words, when the model predicts the customer term deposit subscription, 173 customers are predicted as they will subscribe the term deposit, but actually they are not subscribing. On the other side, 662 customers are predicted correctly by the model.\n\nWhile evaluating the model from the accuracy perspective, the result is higher than its precision which is 83.80%. It means that out of 2229 customers,  1206 of customers will not subscribe the term deposit which are predicted correctly by the model. Besides, 662 of customers will subscribe the term deposit which are predicted correctly.","59fa1d6b":"## 4.6 Artificial Neural Network (ANN)\n\nThe ANN architecture is set up with 2 hidden layers (9 neurons, ReLU activation) and output layer (1 neuron, Sigmoid activation).","acbd0dd3":"Predict the testing sets.","31fdf306":"![DS_2.PNG](data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAABDAAAAGmCAYAAACKk3TvAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAK8ISURBVHhe7f1LryVJtt8Hni9TY7Wm+yNUo6kSelSzbjRyNzqpQSIACjUJdZaEkAbdau3IQAxCaBRuoSEgOi+SZLIuTzCyGQwGyWIVicskM5IaHQmFkoSLmtYsBgS83R7L3dayZWZuvn0f88f\/B6yq2P6wx9+WLTNbZ5+Td\/\/x3\/mPOhgMBoPBYDAYDAaDwWCwNRsSGDAYDAaDwWAwGAwGg8FWb0hgwGAwGAwGg8FgMBgMBlu9IYEBg8FgMBgMBoPBYDAYbPV29zd\/8zddK\/v3\/\/7fq9fXbFts8y0MOsC2YsZXP378CHtkQ4xoY9C9jUH3YxjGGQaDwdoZxWAkMCoNi5cz6ADbimmHa9jjmDYesNsaYnMbg+7HMIwzDAaDtTOKwUhgVBoWL2fQAbYV++GHH9TDNey2ZnTXxgN2W0NsbmPQ\/RiGcYbBYLB2RjEYCYxKw+LlDDrAtmL\/7t\/9O\/WADbutGd218YDd1hCb2xh0P4ZhnGEwGKydUQxGAqPSsHg5gw6wrdi\/\/bf\/Vj1gw25rRndtPGC3NcTmNgbdj2EYZxgMBmtnFIORwKg0LF7OoANsK\/b999+rB2zYbc3oro0H7LaG2NzGoPsxDOMMg8Fg7YxiMBIYlYbFyxl0gG3F\/s2\/+TfqARt2WzO6a+MBu60hNrcx6H4MwzjDYDBYO6MYjARGpWHxcgYdYFuxv\/7rv1YP2LDbmtFdGw\/YbQ2xuY1B92MYxhkGg8HaGcVgJDAqLdXmdy+\/6D77PLanX\/+oPq\/bh+6rz591rz9q99ZlWMRhW7F\/\/a\/\/tXrAht3WjO7aeMBua4jNbQy6H8MwzjAYDNbOKAYjgVFp5TZfk4RAAgMGW9r+1b\/6V+oBG3ZbM7pr4wG7rSE2tzHofgzDOMNgMFg7oxiMBEallduMBAYMtib7\/e9\/rx6wYbc1o7s2HrDbGmJzG4PuxzCMMwwGg7UzisFIYFRauc1xEoL9esnLD\/76j93rL8frX72X75p\/h8+vy7CIw7Ziv\/vd79QDNuy2ZnTXxgN2W0NsbmPQ\/RiGcYbBYLB2RjEYCYxKK7c59y2K4N77V0pygu675IZLaqzTsIjDtmL\/8l\/+S\/WADbutGd218YDd1hCb2xh0P4ZhnGEwGKydUQzeTQLj+\/\/xf+7+u7\/8ffd\/++r\/1\/3v\/4tvrZl\/m2vmnvbOHCu3WUlgmGQFfQOD7n38pnvaf+Z\/5NO9+\/TL2j\/++fiGRRy2Ffvtb3+rHrBhtzWjuzYesNsaYnMbg+7HMIwzDAaDtTOKwbtIYPzFm++7\/+TLf9D99Om3qpl75hnt3Vort1kkMGyi4lX3zt4z36zgyY0fvn4mfoXki+5p\/8xaf3WEDIs4bCv2L\/7Fv1AP2LDbmtFdGw\/YbQ2xuY1B92MYxhkGg8HaGcXgTScw\/pf\/9X\/r\/vP\/\/n2UsPhP\/8u\/siavm2fNO1pZU63cZpHAMN+++PKb7gfzb5vMEN\/O6M0kMdw3LsZ3zd\/NWPO3MLCIw7Zi\/+yf\/TP1gA27rRndtfGA3dYQm9sYdD+GYZxhMBisnVEM3nQC47\/9+vdRkuLyd\/+6+w\/\/4T9YM\/+W982vlGhlTbVym0UCI\/xjnV++6r6ib2CwXyuhb2iE7\/r3KPmxMsMiDtuKffjwQT1gw25rRndtPGC3NcTmNgbdj2EYZxgMBmtnFIM3m8D41z\/+T\/bvXMgExcf\/6U8dYf4t75t3\/vrfz\/+bGFi8nEEH2Fbsn\/7Tf6oesGG3NaO7Nh6w2xpicxuD7scwjDMMBoO1M4rBm01gaN++MPbL\/8+\/HL6BYf6tPXPNtzCweDmDDrCt2Pv379UDNuy2ZnTXxgN2W0NsbmPQ\/RiGcYbBYLB2RjF4swmM\/\/N\/+1ZNTkyx\/8v\/661a5hTD4uUMOsC2Yv\/kn\/wT9YANu60Z3bXxgN3WEJvbGHQ\/hmGcYTAYrJ1RDN5sAuP\/8H\/X\/6sjf+f\/\/c\/9L5B09t\/aM\/\/H\/+qv1DKnGBYvZykdzB8fHf+2x2h1f5BU\/h0RzcwzfdnRf61lyruwI9m7d+\/UA\/bHj3\/R\/Wd\/53\/X\/cd\/5z9i9rP\/4a3y7A3sr\/7249b3yGZ018bDmvo3gGBLWHqN8jEzMBuXE39cOrLic8eOvdN1X0IjrHOtrGZ+uf+63BbN9wX7KxgMtjKjGHzIBMZ\/+svfqGVOsWvavCcr63DNQjflXffM0y\/lJgELLIzbP\/7H\/1g9YA8JjGf\/dffWX3v7P\/wtl8h4+Rfi2QXMJyz+s7\/in\/eawDC6a+PB\/9PS7vPr4T8jPWfuYs6Hlj9g3VKnY4\/DVN3tfzr96j\/ODZ9vZZPnl03SbjU56\/qC\/RUMBlubUQzebALj\/\/T\/+EdqcmJKAgO\/QnK9lXW4ZqGb8q5\/5n1\/GGKbQSywMG7fffedesDWEhgfP77t\/ptn5lsZf6v7b\/55+Oz19hcv3bc9hgTGzs3oro0H+09LM5s7dzHnQ5t8wFrcjj0O03VfQif4fCt73HFuZb7t2F\/BYLCVGcXgzSYw\/p\/\/39+pyYkpCQzzB0C1MqdYfvHSvnLnzP7UZVbgX+eCUR67uN3s10sGnYL\/zGxvLtsfvpvSdXzGlDv+igqvV6\/TP2MW56BeN0buM\/uVF\/sTYyoHX3ffmr19m\/qGg5bAGL+FYRMN4lsS7N4\/\/6+7n7FfQfnb3V\/Ia75sSl4MZr7hIb+B4T+TRdef\/a2xbNHmNZrRXRsPmtP818r8PCfzczU3f796Oc7X+Jnj2vQDlnbd\/\/vr8Vd89NiaidtBXOVjvG+brnust\/Nlv7ak1pvg+tOvv+FlJtcobZxSz2vPTnk\/uB71J\/H+hm3yOMtE7WTN5bOxvpN9qWr8QxvLbbO\/2p\/fwGCwZYxi8GYTGKn\/jGopgWHeMe9qZU6x0uL19MtwcQnvmUCs3SsZXzDWYuWxy7U7uGcW+ejQQffdIqYvXmH5qX+HJp\/px4M2F\/738YdFlX31U5TX3zvSpnwP9o\/+0T9SD9ilBIZNIExKYCS+rSHejb6BEd6nJIX\/1RUtiULtZPdMOSs1o7s2Hs7GDWp6cx5aPH9Tm+qjW36NGg8Fo\/axtkNMTsXCZNzu32VxVTsc7dNKewPyT\/4rJE6zpC8P6417juYK\/4FI6h03x+L1KvG8NqbaNdEWdwAN2yLW0uj9bdvk+cX6XaF5Ud+gHPbZvTeOd+X4J59J\/Ts0+YyMA8InSvsrVRcYDAYbY\/BmExjGtG9hlBIY13z7wlhpk2Ky39FiYIPxq0TgL1lqwVjOhgVXMe15Y+WxU9rtFzJn\/p7PvnPN3Lvm9y\/jhZU\/Ey58bsFTrss6o7ZlPrOfDnjDwtrM2DgI05439ubNG\/WAvdg3MOS3IcS3MKYkMKJ7VEbwTQ2Z3KByH8Ns\/QnTnjdmdNfGg5mfX\/FB2tus+bsfC\/1bmva8sdIaFesUXs9pG\/w7E7f1d7dlmt5k2vPG8rqHZYRJHaFRar0x18Of5itjob6jJZCyz4sxTV7j5ZqfxKtzWHt\/RcY0EKY9b2zS\/JIaeR1YHVnNJ+rLPmvaV4w\/e06U9dj7K00XGAy2O2NzX5j2vDGKwZtOYPwv\/+v\/1v3n\/\/17lqDIJTDMs+YdraypVl68zP+Hi4bJgtP1IIiLwD1k28W96V8Vvc6oHaFpz5GVx07rL7WXNKFnx68Xjot03\/f+mXhhJRPl+582fPU+uJ6sU76b+czKgK3BpJ8a054ju7+\/Vw\/Y+b+B8be7vzCfKxMYlIiwz4t3t5zAMGbbIEx7jszoro2HNDv3tc3x7Pm7L6v190kHrOT1nLbx+3HcTr27PZOaG9OeI6vXXbmXWm\/M9WwCI\/FOzXVvfEyVa8r76QO2M63MtRiNbWjac2RTx9n0eTiA12hepW\/4WdybOf7OZD1t9ldr9hsYDLaMhbGXTHuOjGLwphMYZH\/x5vvuP\/lS\/6+SGDP3zDPau7U2ZfEaF5veTIC2G48wiJt\/i2cS91wAD+\/Rv3t7r331b75NdR5j5bGL2zp8pZD1d7RxwR\/fNVrqfRTlG7Plmvb768k65bu5z+bf+EnA2qzGV\/\/hP\/yH6gFbS2CwBIS5JpIHLNEQJTD4HwCViQaW\/AjKtvdFsoM9u5IEhjHbDm\/a\/dCM7tp4\/M37b4K55jbGct675+bO3\/1Zjb9PPWDp13Pa6u9rcTt+d5t2W921e+aztt646+l9gfZOOLfC66nnRxvHVLvG2+LmJh1CzT29r1qZa7HbjHP4uUbznL6USPD37DcgwjrC+uePf1xWb432V2v2GxgMtozNicG7SGAY+\/5\/\/J+7\/+4vf9\/9Xy\/fDYkL829zzdzT3pljkxYvE8x9YFcz52xBcjY8F7yrlhsMsrXkNxTm2RTnMVYeu3CRMuYWU9vmL191X1G23i7A1B9tE+TfY5rIZ0Yzi924oCfqjN4tfJa6L6w5bJ6ZsdCuS\/urv\/or9YA9JDCCQ3n89ywoKeHu\/+xZkFhQvoExJBuCZ8dEQ1Bf8M2K4X7wrnp9BQkMY6Zu7bo0o7s2Hm5+6fPJxMHx2tT5K98br+\/JTP+069KmH7C06\/KZxL1i3NY+b9Nup3viXmq9CTTPfzMzeMeWP17nh2LxvDam6jjL9zNjnnp\/hWbaqF2XVjPOdj\/CDvmkRW8pzaNnhX+E77BfTdb8rGL8h3foPVnWI+6vNuQ3MBhsGTPzXbsujWLwbhIYj2XTFi8T2Pt\/s\/8EVXDfBmwelKcnMNYRzLc4drBj2j\/4B\/9APWDDbmtGd208YLc1xOY2Bt2PYRhnGAwGa2cUg5HAqLR0m0VW2WeQx6++hffNv2U2nBIT\/B7PeLt7a\/g6HRZx2Fbs22+\/VQ\/YsNua0V0bD9htDbG5jUH3YxjGGQaDwdoZxWAkMCot3WaRwLDfwgi\/LSHus6\/Nhe\/1Fnx9bvpXRR\/XsIjDtmJ\/\/+\/\/ffWADbutGd218YDd1hCb2xh0P4ZhnGEwGKydUQxGAqPSsHg5gw6wrdjf+3t\/Tz1gw25rRndtPGC3NcTmNgbdj2EYZxgMBmtnFIORwKg0LF7OoANsK\/Z3\/+7fVQ\/YsNua0V0bD9htDbG5jUH3YxjGGQaDwdoZxWAkMCoNi5cz6ADbin3zzTfqARt2WzO6a+MBu60hNrcx6H4MwzjDYDBYO6MYjARGpWHxcgYdYFsx+s+Swh7ftPGA3dYQm9sYdD+GYZxhMBisnVEMvjP\/aGV\/+Zd\/CYPBYDc17WANexzTxgMGg8FgMBgMBptrTb+BYRqwNUziBUAHsB3gq22A7m2A7m2A7scA4wwAAO2gGIwERiVYvBzQAWwF+GoboHsboHsboPsxwDgDAEA7KAYjgVEJFi8HdABbAb7aBujeBujeBuh+DDDOAADQDorBSGBUgsXLAR3AVoCvtgG6twG6twG6HwOMMwAAtINicD6B8f5V99nnr7p30bUvrD39+kf+fKUhgbFdoAPYCvDVNqxb9\/vufHfX3Z0u3YO\/ch1Llzefbfr79scDceYYYJwBAKAdFIMTCYwfu9dfftF99vJV9xVLYHzoPz\/rXn+U\/55ne0hg\/OJXv+1++vTbKjPvbJ3tLOIP3eXUb2TvTt1l0k6Wnj\/3W2CD3wgPn8HWuL2v1vrYMVh1jLg\/9+N1152WGrCly7uC7cTmgB2MxyZ1B9VgnAEAoB0Ugwu\/QmKSFEEC4+M33dMvv+l+8J\/fvfyi++o9PVtve0hgaAmKKbZ1llnEKTng7CwzBA+X7jTcn5tAWHECg\/Uv3GzLNoBriHzVH25i3XuSY5IDCQyNUPdQU27La\/ZwOfE6osBiXCCue3hP\/NR+VnmL+9h0uL8\/RowtILRQ5KsaDwfNufg9Q4vxWGZNBGsH4wwAAO2gGFyXwLDfzAi\/gSF+vaTSkMDYLlMW8d\/\/\/vfd8+fP\/ScN2lyfupPZjKoHB3+vWQLjRtCmeeizqZfqfKQ2HATmq+YgM5ygxkOQvURj4u+7Q5B+4OLU+tgx0GIEHUqXPrQP+IMqla+PoY87bO6556yFcWhOeTfxselw3R8jxmbw\/XX6peZJxXgQdlyo3YXyHmk8pqyJYPtgnAEAoB0UgysTGL2Zb2H4v4FxzbcvjCGBsV1Ki7hJXvzkJz+xloY21+fu4jfS40bU3ztf\/IYz3FzTe2RiA+sPHdZO5+4cbXLFBlm9l0omuLpPl3tWBtvwhvWTyU04PRPtlGXbgndFuewQmK0z19\/9k\/PV8EBN\/x6GJDlGPaHemo+pY0XjEOrPD1t0gLI25xS1IjTd1QSGOETqOk3zYVl+NKYGPzZDG2z9fXn3vh3BXJ1VniAsI3o\/52Mz4brfIsZOiIEe2V+pp6ViPByyfuELjcajtCaCfYBxBgCAdlAMxq+QVCIXLy05Ie277\/\/on94PuUWckhc\/\/\/nPJycw7tlP6swtt5E839PBhScQxs\/ysOPvR4d+ui\/LM49o5aU+U\/206RXtYf2I6xqgQ5uxaIOuvGeeH54T97N1xmXx\/u6fnK+GP3GNfvpKYxQdZgo+lhmr6AAXHrbCf\/c8XPpDp39si2i6qwfYSGfSbOqcDQnm58WXK+aXe1cceg3UDvb8FeV55vnYfLjuQXzydUnfmx1j7bvh53g8ov4KHzfUjYe5bHzI1CXb5Wg1Hrk4A\/YDxhkAANpBMbgqgfHD18\/4f3nE\/BdJXn4YP1faURIYP\/vlb7o\/\/OnP3Zs3b7onT550L1686D59+uRL2CapRTxMXlQlMGgz6jerbmMZblL95ljZALNDUXRfbHK1DeqwkTcfRH3RZ9\/mYFPNNsy2rHHzPG62FagtZEOZss6YyXUW+7t\/khtOrwP3uQmHGf9e0scEbKyE\/8TjON7bOprusxIY1T48HrDjZ+L5O0D1RPdmlmeY62NXwHWntpt44HVlbQmuU8yI\/Ns0Mxy3uM\/cx0fkeMfjXzse7nn3vjbv2o1HMs6AXYFxBgCAdlAMrvsGhklYiG9gXPOfUt1DAuPpr3+nJi3IJHtJYmiLuExe1CUwaHPbb0bpq8N2E8k31+oBKNhwx\/fFJpc2sIq5PavYzEefC5t3vwFmG+zUZpqgTbN8b6jTQZvt0SbUWezv\/lE3nIPmo8ZTDzNFH+tJjtVwz3yO\/YO\/x8d\/a2i6q\/M30lnoWePD7IBK8SV4LogVEdSOcL4uUd4MH7sGrvvyMXYoM\/Lb0cdHqGxuQ9mV4+HqIT3jeTepvBuNhxpnwO7AOAMAQDsoBlf\/DQzzLQzz9y+sXfHtC2N7SGBMwSQsNDNJjK2i6WD+YKdJWIQ27Y94+g3lsME0RptSvrnWNqi04bZ7zui+fhhSN7gWUV\/0ubB5Z30Irpfw7dIOFAbWx57JdRb7u39iXxV+55EaJ7Ur+Fh2rNwFe\/\/udLLjpo2NeojcGFqMUPsVHRpr5+xIUmtfdnQ\/hNqRO5hPLu9KH7sCrvsNYiyVOSmBwSnOjZBoPKidmrkyWo7HnL0B2B4YZwAAaAfF4EIC47Z29ARG\/nC\/bpZZxOWmMtigRptWekZunsV9uemlA8ewqdU3siOyvlL9poqxfLchTmzIA8xz4SbZlZHe2PNyqQ9T6iz1d\/9wX83oIQ7SycNQwcdyY+UI\/Dy4znziBgfbx0aLEU4b2S8xJtVzdoTKp3nE6\/PlBHOXER2Y55aXae9UH7uCvL8Hvje0uxTj6mJgGvleXA5DGQ8OtUv4SfS8v37j8VhmTQRrB+MMAADtoBiMBEYl1y5eb9++HZIXe\/sVknrijWV8wJGb5x7adA4mNqbDAai3fjN7b8sMN6VUb2hUhqyvdvOeKzuEyh2NDkmWsI+2Ll7u+Wz6OLXOqW3aJ6Gvkn9FRuMZ+k5vbExCsj6WGyvH0I7AjyKfSFa+DbQYEc9vz1VzNiSeV0Ndvo6o7iieeLP615e3mI\/NhOtOuo1aXR9jfZmB7xaTfWShv88ajxBqt6+38XgssyaCtYNxBgCAdlAMRgKjkmsWr70kLwxYxHWijTxtxm94GG1R55ZYpa+mDm87Ym26X\/PTdY2ly1uKrcTmvY0H1sRjgHEGAIB2UAxGAqMSLF4O6KCh\/CSTfrp3s2RCizq3xRp91R22lv\/p+5pYl+7xtwauY+nylmMbsXl\/44E18RhgnAEAoB0Ug5HAqASLlwM6pPAb6dBufkptUed2WJ2vDl+RD7+Wvz8QI9oA3dsA3Y8BxhkAANpBMRgJjEqweDmgA9gK8NU2QPc2QPc2QPdjgHEGAIB2UAxGAqMSLF4O6AC2Any1DdC9DdC9DdD9GGCcAQCgHRSDkcCoBIuXAzqArQBfbQN0bwN0bwN0PwYYZwAAaAfF4Dvzj1ZmEhjadRgMBoPBYDAYDAaDwWCw0PANjEqMaAA6gO0AX20DdG8DdG8DdD8GGGcAAGgHxWAkMCrB4uWADmArwFfbAN3bAN3bAN2PAcYZAADaQTEYCYxKsHg5oAPYCvDVNkD3NkD3NkD3Y4BxBgCAdlAMRgKjEixeDugAtgJ8tQ3QvQ3QvQ3Q\/RhgnAEAoB0Ug\/MJjPevus8+f9W9i659Ye3p1z\/y5ysNCYztAh3AVoCvtmHtut+f77q7873\/dD1LlzeXrfr71scDceYYYJwBAKAdFIMTCYwfu9dfftF99vJV91WYwPj4Tfd0+Pyhv\/ese\/2R3qm3PSQwfvGr33Y\/ffptlZl3ts5hFvH7c3d3unQP\/mOJtRxipvPQXU533aaaXMlivlrpC0dn3THivjvfLen3S5c3nya6Xz03tj8eh1kTD866xrl2\/d7\/eg8A2DcUgwu\/QmKSFGMC44evn7FvXcjPtbaHBIaWoJhiW2cdi7hbjO9SG1Wzqe7vXbWxvjKBYT\/f4ND7cDktlCi5fkNzqz4uhfRVq53xC2+T+44ERhWh7uYwGWo+2rk\/ai4MzXtvp4syYspYkl9Ez88oL+tjD5fulLq3AKHuth3SZ339sl712ank5sZNx+PUacW1GA9tTVT7IPQY7QZzASwOH+dHSggIHx19u1w\/X5\/r2mvejX03MecU1r43AABsD4rBSGBUIjcpWnJiim0dbbP2+LjF+HTSN95m8Tyf441xFcrGOoddsG++mzH7mb7Pi9TzSBuwhjBfNRvBYDzdAWPiwaHSF46OGiPsRnz6Brge85P3oPxEfXxj7n5af7rcu3jCHp5RXtbHqC5\/t\/JAMIXI32X5dIAWk55rUklybiw8HlIv+zmevy3Gg\/t7pg8Kpr2PsW6A6+Hj\/Ajrp+KTxoedT9XWf0UCw87dfe8VAADrh2JwVQKD\/00M92smSGDoCYqSbR2pQxtoMRabZINdbPtNarSxdu8kf+rlF2l3ry\/zUve+3Ijyz2F76X3RbrtZoXve2I5B1h9ujmv6RhuRUpvKbY433+GzfRvYAYLKsx8ctWNUSdZXrSZiDIiSL6h6anq4\/tA4uQNUUK5W9w5QdVf1XtAnbPnhPSU2qNcMfJwsV5XnCfts53dYntL3K+G6x32yh5LzudCvgt7M9\/v3ojjpWXg87Nxh9axnPPQ4E\/chImwPWD3a\/FL9hc2R8BnlnSjeEcaXc\/5IZbnnhvkYFFS9BwmwscJNlEQ7XHnURxkn4rUQAACug2JwXQKjN\/OtC\/dHPJ91X73ENzC05IS0777\/o396P+ibtcdm3AiMC63DbnTdjWBj4BfbYEHlP41z98dy\/CIfbCzkgiw31PI+\/0yL\/bhh4PdNfeO9oQ8K2r1821xfWN\/svVKbSvf159Mauvus6WLzlu9HPVlfjQ4wRKkfpJ+DtVGWGR5QogPdflF1Vw9ry\/qEfdZqLMfQI8oe0Z+fX54n8Ie43Ykyr0DqbusctDN+bPR3\/jxe5j6b11u2Wc4NzqLjIdpJded8J+JG46HHmXJ5Umuwbvg4u\/GNhy+zPmjvpHy2uF64smrX59zzIeZe7ltE8l05n3JlAwDAHCgGVycwQnv38ovuq\/f6vSl2lATGz375m+4Pf\/pz9+bNm+7Jkyfdixcvuk+fPvkStom+WXtsgo0A29jSJt1fpwVV3QwEz2r3o\/fHhd8RvG8+iQWbfy5sXGT9qU1NDz+U9JTaxvQJKW2mSvfNx6CPJQ1L5U3QuJa0r7q2qIeLYj8E7HnT3rGPbKzsc6L\/O0XVXR3f5X3C+qR6qM6MeebevPIM\/H58YHZlp9+vJ9LdaEm+abT09Yf1xj6a0dver5gbPUuOx1CWtVPfn9B32o2HHmdK7eGxAqwfPs5ufIvjx+aM8k5q\/oRzV6Vclp0vwwMVdfeMc02JtRPiMq8bAACuh2Lw\/ASG+XWSL7\/pftDuTbQ9JDCe\/vp3atKCTLKXJIa+WXtswsU42AiGC7L8d7QZCMrQ7ofv2wWbFvTQ0gt23eZh+uKvJzCoPaH58lg9IaU2lTc8rJ3mXvZwUyhvgsa1pHzVtlvVpKfYD9PUfgxYG8fnx\/FR+hv0cc5BaSuouqub3iV9gh8I3RgFz6n1E64dfEyuKc90o2+n9Bnmc1qd1xHrPvZh9EtzmTQW+pf0njA3RpYeDwkvP1+eaWbfjxuNhx5n8uXF9YO1w8dZzJ0A5+vh\/KE5o7yTmj\/aXGOUy+L7iIq6e8y7xnddX0Q7SnGih9cNAADXQzG4MoFhPn\/hf4Uk\/c2MqbaHBMYUTMJCM5PE2CpzdFgevhjbRbb\/QIuuJVyc7YIrNwNmA+wXXO1+8X2OXLCrNg\/RhiBdF\/V1oNQ2U496v7ShqdwglTQslTdB41o0X7VtDvoQUeqH+Xd4Xz5Pn7P9EYevnaHGCKuHPGAu5xPxgdCVTfEgmjcM\/qzhmvJUH5N+48tb0gdS\/m7abP5\/rMvHvvuE7\/qPEdr9cLwClh6PCKFny\/HQ18RcH\/Y9\/\/cKH+eEv0i\/YnNGeScxf8o+Ui7L+v3wQE3d7l3nu+49NrcmxGVeNwAAXA\/F4EIC47Z29ATG8+fP\/RPbY44OyyMWY7ug9gtmuKiyxTlehPkG220Whs0mlSfez22o5YJdtXkw\/2Y305QOBjGib+azfb\/QpuJ98zHsY0lD8fwMjWvRNpxcO41CP4wGgZ\/ZPrHNnK\/HvJMcU0XbHaHGCKtj\/BPyxXxCjAuV5You6a3UM6s8d133MedXwzuy\/AVQdbdz9tS3PfZR+19xYp1QdGCU5\/jA0uPBEO1Ilueu33o89DUx3Qcbwxcee3B7tPUk8jnhR3J9yMc7jvMTHjPNNedTSv12ro9lsbomPB9i3h19V59vmm8TvG4AALgeisFIYFSib1Km8\/bt2yF5gV8huRa5GLvPbMGMFme3CA\/fcpALN20mrPUbDvOZPePrSJQhF+zazYN9PlE2I2in3FAk32d9ow1RqU0T2xw+IDXMjoF2v9CPSpivmrrCcslYBz0FXwjH6nS59H0aN6gGt\/FUtBvK7E2rdyeoMcJqGicwlvQJOYeG+WHr5mPkEDFBvFddXsnHmF9pWlyHHpt9H4Vmqo9aamJJPDdCFh0PVm9QliFV3iONB9c971N0n7UfbAI+zso88T6UXx9C\/+ivR\/GOQ\/N0sOHZ2vW5\/HyIeTeeY+H7+TjB6wYAgOuhGIwERiX65nAae0leGK7RAejYTYrYSEQbiC1S2Jzdmma+ag9O2gHtGKwtRtj5teBmeunylmIrsXlv44E18RhgnAEAoB0Ug5HAqASLlwM6LE\/80wr30w0kMK6jla8e\/adP64oRyk8er2Lp8pZjG7F5f+OBNfEYYJwBAKAdFIORwKgEi5cDOtwCtwkPv465i68YHzKB4b4ifOD8BWJEI6B7G6D7McA4AwBAOygGI4FRCRYvB3QAWwG+2gbo3gbo3gbofgwwzgAA0A6KwUhgVILFywEdwFaAr7YBurcBurcBuh8DjDMAALSDYjASGJVg8XJAB7AV4KttgO5tgO5tgO7HAOMMAADtoBiMBEYlWLwc0AFsBfhqG6B7G6B7G6D7McA4AwBAOygGI4FRCRYvB3QAWwG+2gbo3gbo3gbofgwwzgAA0A6KwUhgVILFy7F1HY7+n7g8EpizbYDubYDubYDuxwDjDAAA7aAYjARGJVi8HFvXYakExsPlFJVjy274nw0FHMzZNkD3NkD3NkD3Y4BxBgCAdlAMRgKjEixejq3rcMsEBlgXmLNtgO5tgO5tgO7HAOMMAADtoBiMBEYlWLwca9HBJhDu7rydusvwtYeH7nKi68bOXZhmiBMY+ef7irrTcO+uO9\/L5++6k6+8rmx373x\/352H+2E\/wLVgzrYBurcBurcBuh8DjDMAALSDYjASGJVg8XKsQgebVBCJBo9MIthER\/BrHfJ+\/nmXXKAEhf3s7yV\/hWS45pMXsuyh3ZTcGJMWcQIEXAPmbBugexugexug+zHAOAMAQDsoBiOBUQkWL8cqdPDfiojO+va6\/BaDSUIkkgSl5+\/P4lsTI8UEhppkCdtC38CwNxymPvwNjcXAnG0DdG8DdG8DdD8GGGcAAGgHxWAkMCrB4uVYjQ4+iRH+Ckd4jVsugSGfNRYkMBIJhWICQ01+hEkLJDBuDeZsG6B7G6B7G6D7McA4AwBAOygGI4FRCRYvx\/p0cL\/mYRMB6rceOOVvSQTgGxibBnO2DdC9DdC9DdD9GGCcAQCgHRSDkcCoBIuXY306xN9qGP9mRQxLMhSfd8mR5N\/AEMkGrewwycHfQQLj1mDOtgG6twG6twG6HwOMMwAAtINiMBIYlWDxcqxCB\/vNiLvRWBbAJw7C+0FSgCcZDPnn3Tcp6N74qyjhdUpwxGW7BIharq8XCYzbgTnbBujeBujeBuh+DDDOAADQDorBSGBUgsXLAR3AVoCvtgG6twG6twG6HwOMMwAAtINiMBIYlWDxckAHsBXgq22A7m2A7m2A7scA4wwAAO2gGIwERiVYvBzQAWwF+GoboHsboHsboPsxwDgDAEA7KAYjgVEJFi8HdABbAb7aBujeBujeBuh+DDDOAADQDorBSGBUgsXLAR3AVoCvtgG6twG6twG6HwOMMwAAtINiMBIYlWDxckAHsBXgq22A7m2A7m2A7scA4wwAAO2gGHxn\/tHKTAJDuw6DwWAwGAwGg8FgMBgMFhq+gVGJEQ1AB7Ad4KttgO5tgO5tgO7HAOMMAADtoBiMBEYlWLwc0AFsBfhqG6B7G6B7G6D7McA4AwBAOygGI4FRCRYvB3QAWwG+2gbo3gbo3gbofgwwzgAA0A6KwUhgVILFywEdwFaAr7YBurcBurcBuh8DjDMAALSDYnAygfHu5RfdZ587e\/r1j+O996\/06zMMCYztAh3AVoCvtmHtut+f77q7873\/dD1LlzcX6N4GxJljgHEGAIB2UAzWExgfv+lev6fPH7qvPn\/Wvf5I\/37VvYuuz7M9JDB+8avfdj99+m2VmXe2DhbxgPtzd3e6dA\/+I1gXi\/kqxrmK6bo\/dJfTXfe4Z9D77ny3ZJ1Llzcf6N4GrInHAOMMAADtoBg84VdIfuxef+kTFebbFy8\/DPd++PrZVd\/C2EMCQ0tQTLGt034RdxvXO9XO\/d35PFxOdT\/RW+hga3+SePADsqb9tbpovmrr6X3ldKkoFQmMKkLd83N14YO0GaegDnWMxViSP5CxtjxculPqHrF0eVcA3a8o7wqq4gzT6tTVhCHQlnCczfxR16tFncvNU+lD1rcq1qPUOqqW4+eK7EZtnQAAsDQUgyckMMZvXUQJC5HQqDUkMLaLtllrhl1sl9sE2kW6ZgMiNtFgPtXaT4D7qkt8nS736qYwC8a5CjVGqHN1yYO0Gd+g\/ERsMJv5YezNM8G4Wh8ckqDkL\/6uPXjevrxrgO70saXuVJ8SZ2Td9jO1E6wdNs5yLBN+fx3LJDCSaG22\/dKTM7IdAADwmFAMLiYwzN\/CoKQFEhjx5lBLTkyxraNukluR3DS4hX\/8SRffJLoNLt0z78vnE4u1rS9479Iv9mwjUVuvu242B2zDQJuI0Ox9Oni4TbIsJyJZjiHX1in15N4373l9wntMPzpAyXJG7SNdJraZ0H3VPZfdjJXGWe1Hur1H2\/ipuqtzdRwz3c\/ovv9oMD6tbd5t+YoPsge1awFhG+3c0fzLf7QsXd51QHfPGnT39YRzPz54FvoBVoUc5zDeR7Hf+iDNrdDfjF+YMU\/NvZDYhwzcjxR\/FnM1XpeIuHzz7Ol8Lsxp9x71LbUOT9qjAADARCgGZxIY5ldH+B\/qRAIjXry05IS0777\/o396P+ibtUaom\/N4wWYLfrThHrHPqQu9QS72foHObBSm1svf45sF3ibaOIz305uTXDmFtk6oJ\/8+bV7EJijQij8ft8\/A6\/BtknUOdYxtJqYeLDjyvhznTD\/kYSnhn3tH1V3VouRn7j5zi9RBuse+a\/VPjHHmXUswftI\/qS2szKXLuxLo7lmD7ql2+3Y5XGxhOoPVEo0zrenRHMutdc4vwrln7zO\/IHRf1crLzVU+tzm2rOGe8UfTLuGXwm9leaX+5eoHAICpUAxOJDCCv3sRXsffwIgWLy1hIe1nv\/xN94c\/\/bl78+ZN9+TJk+7Fixfdp0+ffAnbRN+sNULbnKsbdlqY+3\/a+\/qmkS\/mAtqs+I+WcKNwRb1sgZf1sM1IebMykCun1NZSPcX3xQZIQ7RP0z6riyXf5skHixCtnpTGBvY873fWn3aMqrvqMyV\/rvB3j\/WZfgziZwrjLu7zTbnDlD2+v3R51wPdDbXlXU9NnBl0snbqTv0zBwwRm0Qb52E8c4PI1gjnF\/zxcB0Lcc+O\/hJYxVy1bUy1zzxLbTPt9O+Fc4StY2o8ya\/Dsj0AADAHisF6AiP1zYqP33RP8V8h8f9yPP3179SkBZlkL0kMfbPWCG0xtdfEYm8teC54JtxgsoVaEi70RLgwX1Ev32DwzQy\/V7M5yJRTbGuhnuL7\/CBPWH3Z86OemvaszZr+rJ1xm2sOFgOlce6Z1g9Fw4Og6m59JpgLloKfFe+HcJ9zYxTUp9Y\/Yn1NjjGrR\/jN0uUtAHRfke6T6tHjJFgn6fkl1yXvd8P6YIyeUeZW0g90H+I+rZQn5ipbRyPGum259NxQhijf9jfsFxnNyXJ7AABgDhSD1QSG+WbFZ59\/wWz4poVJbvhrXw3\/qdV5tocExhRMwkIzk8TYKnN0uBnaZjaxodBRNt9s5Q3Qyg0X5ivqZRuMaIMQllmxOciVU2xroZ7i+8qGzLyfaYOmfayLrNPUk944zTpYaPWEfS\/0Y\/istvcYpDf68uBZ8ufp\/s439QY+zrm5LQ+9FjnOoi1Ll7cE0H1FugsdVKK2gTWTnl9iDOW4smc0\/wvXsRDdh\/icU8oTc5WtowrmvqnD\/P\/4mG\/TvehfcV0rtwcAAOZAMbj4RzxvaUdPYDx\/\/tw\/sT3m6HAzMpvz7MZxgC+28WY8xB3Kh3Jt3eGGeX69bINhFnu2+odUbA4mlJNua6me0vvlBIbtc\/BZ055vvFydYZ9KG7l5B4vCOBf6MbTTvMMEOA7pjX7tQVr4QDTnAsS40LPuVaUeix8rrTzvB8M7rPyly1sG6L4i3X2bJscZsHrS80v4k\/AxvkZ4Xw3mZHrfofuQfL40V9l9DTv3T6Ifvu7+On+35NfuPnvFlq\/1DwAApkMxGAmMSvRNynTevn07JC\/wKyQLoW7ODbRJCIwWULu5CK6HKy0t\/r2pC3Rw325IzGe2MM+rV24w3IYnsKGOus1BuhxDpq2T6sm9Lw4NnrA9p8ulfybYMCnaxxsvV25cnyFuM\/dV8a63OeOc7UeP3WD292T\/j0J6o19\/kObj1utc4e\/D2Nq6+RhZ5JwkowYxPwjavnR5CwHdhTXRPRNnWDsSsQeslvT8in0yvUbQ3BPzy96TuGeln8QJj\/xcjddRiX9fzO\/0OubaRf2zNrw7JbYAAEA9FIORwKhEXbwmspfkheEaHUAZ7acxZgNSu9ldqpwt08xX7YEqtSndP2uLEXYuZDfwdSxd3lJA9zZgTTwGy4yzcsAHAABQhGIwEhiVYJPigA63Jf5pif5TmBJLlbNlWvlq+Sde+2ZdMWLpA8N6DyDQvQ1YE4\/BMuO8Xj8GAIA1QzEYCYxKsElxQIdb4zY44dcz5yUdlipnu7TxVfd13CNvUBEj2gDd2wDdj8Ey44wEBgAAzIFiMBIYlWCT4oAOYCvAV9sA3dsA3dsA3Y8BxhkAANpBMRgJjEqweDmgA9gK8NU2QPc2QPc2QPdjgHEGAIB2UAxGAqMSLF4O6AC2Any1DdC9DdC9DdD9GGCcAQCgHRSD78w\/WplJYGjXYTAYDAaDwWAwGAwGg8FCwzcwKjGiAegAtgN8tQ3QvQ3QvQ3Q\/RhgnAEAoB0Ug5HAqASLlwM6gK0AX20DdG8DdG8DdD8GGGcAAGgHxWAkMCrB4uWADmArwFfbAN3bAN3bAN2PAcYZAADaQTEYCYxKsHg5oAPYCvDVNkD3NkD3NkD3Y4BxBgCAdlAMTiYw3r38ovvsc2dPv\/6R33\/\/qr\/+qnsXXpthSGBsF+gAtgJ8tQ1r0P3+fNfdne\/9p+tZurxbsEV\/n6Pr2sYCceYYYJwBAKAdFIP1BMbHb7rX7+nzh+6rz591rz+af\/\/Yvf7yi+6zl6\/6a0hgGH7xq992P336bZWZd7bOXhfx4qb4\/tzdnS7dg\/\/4qFTWvYXD1mPwKL7a0i9WSvsYcd+d7+665abA0uXdhu3F5jm6rm8s9romAs66xvmhu5xq5kHt8wA8BvBLMB2KwRN+hcQkLSiBQWaSGkhgGLQExRTbOutYxF3Qu+s3sqOd+63tdOwhPzh4IoGxPzRffbicrL+cLlxNuk42WT4kMCKk7tYfA21L+sq5yTB6B+XIcbSIMSmNbconBmrKe7h0p9S9G8N1H2Ok2gbS8Va+y8bp1KnShrqy50MTcX2FYyH9fa3+Aa5Dm183Hz\/hL6Pvl+vncbSuveZdFg\/t\/EzMY4V0DHcJyKE\/zOr2cHl8\/BMdtu2aOWh2Xt98wHVs3VJP7xuySeqzN2a+v0z3y1tokPbT5f1Hx9Wj7kcrxjDVj7X7TS0UgyckMLRkBRIYhJacmGJbR+rQBjnp9WBTQzEwiY3zo1JZ9\/JBdptwX3Ubp9PlPl4wTEAP9LWBfOpmqqVfrBQZI4w\/ygV6HmYMg02RXYjjTRKrLzu2GZ8IqC\/P363c9F8L193HyJO+KTF9Op9v5Luy3\/ZzPJ9KfmHuaxvItY0F033F\/gGuQ5tfN11mFf8w\/uT8p7b+uuejedb77eJ9teXe0P+lflfWZ+fyTQc8g9Z2279CjHwk5vtLhV8+tgYL+4+OX6dFodbXllibV+43tVAMLiYwzN\/CiP4GBhIYA1pyYoptHalDG+JJzye8EhTNpA0Cgpms4QSWn93E769Z6wPAhb8\/YuoyAcJtTsefJLg2DO+zF8N79HxAse78+1FfDoruq067bKDOLVSlsWH3Rx+Mx4S3wx10gnIzzVs7Uvf0wmjmjNfQ9tv5cdJ\/rbahr\/v3WdHatQB1bHM+UVGe3RiE7XPlPtZU5LpT3Ur7SUcRE+md0Q+1vpjy6L6uS7z5Wmqc1jkW2TVxRf4BrkOfX\/5jiB3zcR6NzyjvRHOQcPMs7Rvl+cjjaPn5kDFmp9rhyqM+cr+WdSdQ57ghX3b5\/kjYDl0P\/9GQHAsHT2CU3qf7Ob2n94OeDdcoO0bnc69h+J6pL6wnV8eENtqYFb7fG+u0o+gvxTmR04mYqUGybvd+zk\/D+9Gz2T6Z+uf1yXDteWZkpmb+Pepbtd\/cCIrBmQSG+3sXcfLCGBIYhJackPbd93\/0T++H7Gbt0ZCTUv9cM+H5Z1men6jq4uaeHSc4fR7r14JRWLc7vPL3c3XLtssDQzqYHQvdV6W+CnbRDgM2URqb\/nMwDmxcZJnh5s3+W6tvm0jd7YKp6k0LIO97zn\/tPft8YhzFPI9QxzbjExXlyXmYLfcGcN1d3UZGqb9tp7sRtNc9X4pL4UYlOU6Rxm6c2aMFXdWyVzoW2TWxUZvA8qTmFyezBmjvpHy6uCaU5yP\/XH4+xNzLfTNNvit9O1f2QLgGBtSWHc+rANIxqqtiLDy2nuGF0vu14+PLn1y\/iammbBFbg3gztEHWIe8n20h1uE+8fo55L+0v5Tkx1S\/rNcjVna\/LkvSfuj7Z+0ObQtyzUjOtPNZM4avLahaXV+pfUceFoBicSGBof\/ciNCQwCC1hIe1nv\/xN94c\/\/bl78+ZN9+TJk+7Fixfdp0+ffAnbJLtZezRoAoUWBpf6Cc8+U9Bynxzi\/ZG4Lh4wesLgoJU9BJX+n6W6o0BqCN43nx4pmKwd3VfdeKUPDZn7VX7Rw57nCwbzEfuc8NcNI3W3\/sjmqq4JUfLfobxI97ljW3ud4Pf5Iu8wbU2\/vyxcd9c2K2MYf6zmPlZEcUX4dvhsWB6R8X0+5qfuxN4t6ar5xXrHIr0mtmsTWJ7k\/MrB5pXyTmoOsTmrUS7LzsHhgYq6e8b5K\/caPbZPC+xBtHJKZU+oWzL0hbWnTg8D39eV3i\/cn9EP+z75hHnflxXGkHhfcUVMl+9n9Mn6i4SVWzkOtRpIRJ+m+KnuP4JSn\/o7+ti6Z512wgYNyhpl+1Grme1Lzjcrx2xBKAbrCQzzn0l9+SG+PhgSGMTTX\/9OTVqQSfaSxEhv1h4TN4HYxs9O0ukTTE549jmc8ERygsZ1RQE0LE8rOyyjVLcNLj7AMRsDTjaYHQjdVxXfCbDapQJxaWx67NizcRmfH\/1C8c9gXFNt2wpS93Ch5JhFUejQk\/Zf\/rzTOlho1YV3JD22CZ+oLM+2h5Wf97Wl4bqHPhboFvqr\/HcuLrF\/e4TvpxHjXNA11rFnxWORWhPX5h\/gOtLzi+PiUj\/2g9G8qphD6nwMKZfF42hF3T3mXeOXri+iHcFaxW2cn7zuBNqcLpU9oe4I+04utnkK8cxqMVnPwv05\/QjiKGvLUK6o01y\/Kqab+qaNadZfehaZE5ZKDXrSdef7NKD6T2WfgnZz3LNyDbBlDxqUNcr3o1Kzom+W23MrKAarCYwfvn7Wffb5F8z4r5IggVGDSVhoZpIYW2WODsujTfowQNRPePZZC1jJCRrXxYKEwbxL5anBMFgoSnUngmnIpKB8AHRf1XzHYXXLBeHS2ITjbJDP0+fsGKYWuu0gdTe6anqn+pryX76oG\/hYRvMuID+2uk9UlyfH35f7WGPJded1U1\/YWBTjShCXtL6E7+cQuuR0dXXGmq15LLQ4s0b\/ANeRm18DcozZvKqZQ6V1oFyW9cHhgZq63bsuTrj32NzLrl8OXncCW444sJfKnlB3hPpOnR4GHoNK7xfuz+lHD42L+f+xbB+n70WZah0VMd2+34\/jYOn2Zv3FlJlsV\/04VGmQrduVNc1PgzIMtX3q74y6h7hnhzXZY31tqi\/Zj\/l+VGmm9ZdRP2ZLQTG4+Ec8b2lHT2A8f\/7cP7E95uiwPMqktwFlDBBsQtsJ2X\/OTHj+2UzsoHzl\/ZF4MkebbRbs3PPhfR6sSnUrfRfIvh0V3Vc1\/fyYFANwYWzEombHgS0Evh7zTnJ83DNbHj6pu9FB91enp+xr0n+FvqS\/ezSl25Sxdc9oPlFXnuiPbO+N4bqL9pOvhu0x7RNxJR2XFD3Y+ynEnNHKCbB1Rpql3vFtbjwWmu5r9A9wHdn5RYgxlWsAi23ZfYW5beYCP\/SYa24uKfWL+cjjaPn5EB6z9TnM4yVHxnD52WL7Lw91pbLLdUfYeuJ5VjMWhmyfovdLetdraLFl9D7A+uPLMv\/FKfa8ux5eq4rp5t+y\/gSmrWNfhL+YcpJzoqSTQo0G2br95+B5VXPNfyb0KZy7XPcQ327hB\/J51i7FV9V2h9RolmjTiLvPXimN2UJQDEYCoxK5Ka\/l7du3Q\/ICv0JyLRQguPH564Kou9dPWjHBioGLggS9bz5nAhB\/NR9Eedt6k+UW61b6n+nbUeG+KjT3ZoO0HZ\/4nqphYWys9v7+6XLp6wzH3ftGf48VLevf+NjJGGE00RdDNyayuzn\/DfU1NpRrx4VrbcmObcYnZpXXw\/xDbs5vC9ddxiUfM0JdTV9YXMnFpTjOxe97mAZi7FO6Wlz9ka+sfCyY7iv2D3Ad2vzi4+zGM78GhHOsv56aQx5aLwYbni3PRx5HK+ZvTxSzvd+O7yv9T9Ydf7bYMrU5kC+7fF+Qih+TxkI84686cu9P0btOQ4evU7RT3VdYwjbK98pttG1Ivj9S8pewHD4npugkqdMgXbe\/F7wgP1sS\/lPuU853CPesXPNsX1j\/cr6WaDej1m9yvjlnzJaBYjASGJXITXkNe0leGK7RAYDHZJW+agJ9cjHbBy10twtxdgGvY+nyHoMtxOY5uq59LLAmHgOM80ySCQSQZAWa2bgrDqXmoBwlmPfCYporB3ywCBSDkcCoBIuXAzqArbBGXy1nyrfP4+u+9IZhmxuQ9cfmObqufyywJh4DjPM8zEF4t4feG7EGzeK9iovFex3L5TTf5v5hC1AMRgKjEixeDugAtsL6fNV9jW\/vCxtiRBugexug+zHAOINj4Q7i4a8RIBE1BSQwbgXFYCQwKsHi5YAOYCvAV9sA3dsA3dsA3Y8BxhkAANpBMRgJjEqweDmgA9gK8NU2QPc2QPc2QPdjgHEGAIB2UAxGAqMSLF4O6AC2Any1DdC9DdC9DdD9GGCcAQCgHRSD78w\/WplJYGjXYTAYDAaDwWAwGAwGg8FCwzcwKjGiAegAtgN8tQ3QvQ3QvQ3Q\/RhgnAEAoB0Ug5HAqASLlwM6gK0AX20DdG8DdG8DdD8GGGcAAGgHxWAkMCrB4uWADmArwFfbAN3bAN3bAN2PAcYZAADaQTEYCYxKsHg5oAPYCvDVNkD3NkD3NkD3Y4BxBgCAdlAMTiYw3r38ovvsc2dPv\/6xeH2OIYGxXaAD2Arw1TasXff78113d773n6Yx553HZg26L60TdAdrAeMMAADtoBisJzA+ftO9fk+fP3Rfff6se\/0xcz18t8L2kMD4xa9+2\/306bdVZt7ZOodZxO\/P3d3p0j34jyW2sNE+Gov5aqUvHJ11x4j77nx319VN1TnvPD7tdV9aJ+gO1sO6xvmhu5xq5kbt8wA8BvBLMB2KwRN+heTH7vWXWqIidX267SGBoSUoptjWWcci7oLeXWpzaw6c\/b2rDp1IYNyEh8vp0XRK+aodq94\/TpeJo4sERhWh7uYAaudiZOf+eLowNO+tnTp1eOVYsncSPiHesT4cvMPc+eHSnVL3boz0d\/Lz0HLtsc+n\/HyOtj2klaZr7p5lo7pn29lT7DdYJXycH+ngJfx6nA\/l+vl8rmuveZf5p53\/iXmvkI4lLik59IfZkmuC3yOKDtt2zRw0O29vPuA6tm6pp\/cN2ST12Rsz31+m++UtNEj76fL+o+PqkWtB7Rim+rF2v6mFYvCEBIb5psWr7t3k69MNCYztInVog5\/0J33Cmcl8Pseb6SqUzXiO5QPbPrFB8pF0Un3Vjuu5OyuLRpJKXzg6qu520Zy+Aa5Gbpjs53hDbObpOO5mMx28k2gje8c8E\/iC9eehHrc5H56VbboxUnfe1yuYra35fK9s0HL3Rjap+6R25vsN1gmfX9MPXrNR\/Nj4k\/Ob2vrrno\/mXu+3i\/c1EW8XQ+p3ZX2PuXeJ0Npu+6cfsh87tsz3lwq\/fGwNFvYfHX+WEYVaX1tiz7lyv6mFYnAxgWH+5oX2ty5S12sMCYztInVoAwU9syEUk9NO2H7DaCYpCwDunWS23wddd68v81L3vpn8ycWNlc2Dtdvg0r2xL6nrpXbUlWfKMv92G+uxvLCOsG5Drn53z42LfF++d\/tgGfsqtc\/9f7L+ki8kxjP2AV5Pekz3hRojrGa6LzHJauetx2rL3lNig7xm2xSWN+EdSdgvuzHQ5oP\/eGOk7ukNie+T8etA01QMm6XtQG6u5e5tV3dGxu+T8QesEj7OGR+zYz7GrPEZ5Z0o3hHG\/3M+TGW551xd3M\/4fC4\/HzLGjlQ7XHnURxmXU7GEoc4NQ77s8v2RsB26Hv6jITkWDhsHJ79P93N6T+8HPRvGDDtG53OvYfieqS+sJ1fHhDba2Bq+3xvrtKPoL8U5kdOJmKlBsm73fs5Pw\/vRs9k+mfrn9cnA11zSyH5wCF9N92OmZv496lu139wIisGZBIb5FREtSZG6Xm9HSWB89\/0f\/dP7IbtZezTGCW0nYzBzhkVGWUzCCW6fGyalnOR+YmYChNzUpwNIX1bwHHvPBsAwMHhS13uy7aguj4IU1yEMxqV+8vv0\/hjM1OdVnZZH+upYtxzvkJIvZMbTLvaBzlZ3r0VmTPeGGiNCLQac1swdCguz9McBqb0ft1zZBlu+fS\/hE8o7jKDeuG05P1seqbvpm16392nhj1LrgZnaOmrmWsCGdWdE2hket31gGfg4uzGMp0tmfdDeSfl5cb1wZeXWWv65\/HyIix3pbwrJd+UczJU9oK4J9WXH8z+AdIzqqhgLj61neKH0fu34+PIn129isClbxGIWb3wbZB3yfrKNVIf7xOvnmPfS\/lKeE1P9sl6DXN35uixJ\/6nrk70\/tCnEPSs108pjzRS+uqxmcXml\/hV1XAiKwYkExu3+7kVoR0lg\/OyXv+n+8Kc\/d2\/evOmePHnSvXjxovv06ZMvYZtkN2uPRjChZbCiSRVOcApC5t8DwbPa\/ej9cbI6gvfNp6kTOKzL\/lsEJkP2eqYdteWFOnp4sOsJ9S3Vr5THdOyJyr8hzFdt22mMXTvVAwR7ziP6wGDPGy3G\/rO+Jsdgf6gxQvWdgr+o7\/B5F2LnYK8x\/UTgxMpOj\/nwXjTGGT+x8Pt8kXeYstPvL4vUnethTPdTIhfD5mo77962dR+Z2z+wRvg4uzFMTJcRtj4o76TWlnDdVSmXxedzRd0943xXYu2EuJyLJQNaOaWyK9cEw9AX1p46PQx871J6v3B\/Rj\/s++QT5n1fVhjr4j2H9KGwjiltDN7P6JP1Fwkrt3IcajWQiD5N8VPdfwSlPvV39LF1zzrthA0alDXK9qNWM9uXnG9WjtmCUAzWExjvX3Wfvfww\/fpM20MC4+mvf6cmLcgke0lipDdrj0k4gczE8v8OJ5H8dxC0HEEZ2v3wfTuhRXCxNk7yXACxwYG9F9QVlM02tNr1Ce2oKo\/p6IiCf6hNsf5yYMsuLgsT+ipvl2sn04co+UJPbjzH\/ilapMZmZ6gxwvZdLooFfyn6W44gLhjU+vkzblzlXErXZee89Ivgc38l7Wc3QOoeblA4QhtPdhPEmKItkdMgcW\/juhOynSOP2z6wDHyc3Rhq0yW9PijviLVlQFuHGOWy+HyuqLuHYofri2jHhLg8KZZo87xU9oS6I+w7Uss6PQxWi8l6Fu7P6UcQd1lbhnJFneZ6tt+lPpj6po1p1l96FpkTlkoNetJ15\/s0oPpPZZ+CdnPcs3ItsGUPGpQ1yvejUrOib5bbcysoBqsJjB++ftZ99vkXzMyvjKSua2VMsT0kMKZgEhaamSTGVpmjw\/LwCUSTkoKoJZxQagAKgrN2v\/g+JxlATDnhu8myUgEuuD6hHSMTyhM6GliAM4TtL9ZfDmxR+Tck9FXT5zgg9yaDbskXSuNJn7NapcZmH6gxwuohN2cFf8lqWECMk+Z39hobf9ceiiE5X7XzXfqO9A2tfzdE6s7iIUP3v\/wmKGCCtiNcU45+b+u6G9R2DuQ0AWuFj3PCx6QvshimvGOeV\/2ktEaUy+LzuaZu967zT\/cem48T4vKkWKKtCaWy56wJ6jt1ehh4XCq9X7g\/px89NC7m\/8eyja\/0Ot6LMtU6\/LOuERPa2I\/jYOn2Zv3FlJlsV\/04VGmQrduVNc1PgzIMtX3q74TJoBH3rFwL+N6krFGpH1Waaf1l1I\/ZUlAMLv4Rz1va0RMYz58\/909sjzk6LI+YQHbCiQDLJpR7PpzgPECYiRwEESpPvC+DTEgygIhAZ59Tg4MSFCzh9XI7RqaXFz4THR5Y+0v1K3WKwMZ1vy1pX831o+ALxfF0ZdsFPxbfo+i0I1TdrY7xAs7mzYx5pyPGMKW3GEuq3z2XGiM\/vqoPu3qHd2T5N0bqbrTN+bjsWzKGMSZqO5AbQ+3e1nXPtZPIaQLWijbOkZ8W1od8vOPYtVLETHPN+Y1Sv6k7KIvP5\/LzITx26HM+578ylsjPFnVNKJVdrjvC1hPHg5qxMGT7FL1f0rteQ4sto\/cB1h9flvmv8rHn3fXwGt9\/Fdpo\/i3rT2DaOvZF+IspJzknSjop1GiQrdt\/Dp5XNdf8Z0Kfwrmb3vf6dgs\/kM+zdim+qrY7pEazRJtG3H32SmnMFoJiMBIYlaib8grevn07JC\/wKyTXIieQ+8wmYTShXFDN\/+Sd7veT3Hxmz\/g6EmXkAogLbs5Ol0vfDh9EbBAc7w3vp65bMu2oLi8ORDZwhhfsu3HQY+UNOsTl2fdDHQOdc4v3EqR91bUzWX\/BF5Lj6bEa9vciHYYye2M394Wqu9U0TmD0wgTzstdR+osfK6Ydu+9hYybG1t7jY0SEY8neS70jx5GMxpO1Q+vv7ZC6m77pPi4O\/J5kDJulrYi37N3Mva3rnm1nThOwdvj8UuKS97v8+lCKdxxaSwYbni2vtXw+T1ibA6LY4efX+H4+LstYosYWW6Y2V0sxv3RfMClGpcZCPOOvOnLvT9G7TkOHr1O0U91zWMI2yvfKbbRtSL4\/UvKXsBw+J6boJKnTIF23vxe8ID9bEv5T7lPOdwj3rFwDbF9Y\/3K+lmg3o9Zvcr45Z8yWgWIwEhiVqJvyiewleWG4RgcAHpNmvmqCeXLB2j9rixF2kc4u7jFz3mlNC92X1gm6g7WCcZ5JMoEAkqxAMxuLxaHUHJR3m3BdTHPlgA8WgWIwEhiVYPFyQAewFVr5ajkbvm\/WFSPmbCa2uQF5fN2X1gm6g\/WCcZ6HOQjjW0Z1rEGzeB\/j4vNex3I5zbe5jm0BisFIYFSCxcsBHcBWaOOr7qt6R168ECPaAN3bAN2PAcYZHAt3EA9\/jQCJqCkggXErKAYjgVEJFi8HdABbAb7aBujeBujeBuh+DDDOAADQDorBSGBUgsXLAR3AVoCvtgG6twG6twG6HwOMMwAAtINiMBIYlWDxckAHsBXgq22A7m2A7m2A7scA4wwAAO2gGHxn\/tHKTAJDuw6DwWAwGAwGg8FgMBgMFhq+gVGJEQ1AB7Ad4KttgO5tgO5tgO7HAOMMAADtoBiMBEYlWLwc0AFsBfhqG6B7G6B7G6D7McA4AwBAOygGI4FRCRYvB3QAWwG+2gbo3gbo3gbofgwwzgAA0A6KwUhgVILFywEdwFaAr7YBurcBurcBuh8DjDMAALSDYnAygfHu5RfdZ587e\/r1j\/76j93rL8frX72P36sxJDC2C3QAWwG+2oYt6n5\/vuvuzvf+0\/UsXd4UoDt0B7cD4wwAAO2gGKwnMD5+070ekhMfuq8+f9a9\/uj+\/Y6u9888\/fxV9y58r9L2kMD4xa9+2\/306bdVZt7ZOljEV8b9ubs7XboH\/xGMLOar0LiK7cWI++58d9ctd+5durxpQHfoDm4HxhkAANpBMXjCr5CYb11QAiM0k9hAAkNLUEyxrbOWRdz+pK3frI527rev12HLXOCg+nA5Pd5PAXG4TqL5qh2b3l9OlwrFoHEVXPeH7nJyc1SdEkZbM39vpS+Vb+3UqcOujG\/JTyj+qPdFeVQWGdPh4dKdUvcqge5r0D1fb7ZNYNWsZe8DAABHhGLwhARGIlHx\/lX32csP\/FqlIYGxXdayiJuNbLiJdRvD65MYS2Db8lg7U+UQABzcV91PZ0+Xe3uwSx2QVKBxFVx3d5A+nfo5oWho5vH5fCN97SE6ODzbz3GM4LFkgp9Yfzh358R9Vp45KEeHamoD1eXvyvZWAt2D6610z9WbbRNYO2vZ+wAAwBGhGFxMYJi\/hTH+DYy\/6X74+pn7GxhXJi+MIYGxXdayiPPNr8FtSl3ewPy735BezMbU\/KSLNonjTyX5dUeceMg\/bzekwz1Tt3w+sRGP3vPXfX3ne9cXd19srNm7vo+3OITsAN1X\/cEud1opaZwYP+OTmv9k69ohXPfQpzVf7ueUPZiGPiznUTjvJswRj53PrFylDeo1Q2rsqP7U\/VR5Httnfz862FPZ\/mMl0F1vj+XRdBeE9Upy98DqWMveBwAAjgjF4EwCw\/3BzjB5wcx8A2P42xjz7CgJjO++\/6N\/ej+sZRGPEhhsM0ib7HiTGh4w5U\/AZAJDHkj5xtzVMbah\/+zvyXI443MGXqZvY7Cp5W2Qm3ffT3ZYAITuq6kDEFHSODN+8mB00AMK193paVxYztlhnrCDtJ8Dct4Nuvr7yTkSEB1U3ViyR6NDPKH7yTi39fvp8jxBm\/jcNyTKnAh0X4PugkiLgNw9sDrWsvcBAIAjQjE4kcBI\/d0LbubbGdf8l0iOksD42S9\/0\/3hT3\/u3rx50z158qR78eJF9+nTJ1\/CNlnLIi435XYzPWxKlQ2zPUzKzaJ5btyQj5tk+0E5fAbPZzafrJwSrF1uI53c6Gt9CO8Dhu6rhcNKrcbsee53VX6wI7jugU+zOSPmUs7Hw2fD8ojM+Ni4YBJQ1k7dib2b8wXlnjJX+bu58gz8fnyQdu1Nv58HumvlGfj92+oeUtlPsGrWsvcBAIAjQjFYT2Ck\/r7F+w\/B38II\/+sk82wPCYynv\/6dmrQgk+wlibGWRZxvkHtjG1J+kLSwTTzhNpH0XJzAEHVYUzb\/gtLB1d5nZfLNedRuqkfrQ6YdR0f31cLBYYLG6fELx14Zy4PAdQ91COal9Oucj7MyCnMki4gLdo7TAV0i\/UTWK+\/3ZMszzex9RfoRa7dSZgXQ3X8WPK7uI7LekNw9sE7WsvcBAIAjQjFYTWAMf+ciMPurJPY\/nTpeu+bbF8b2kMCYgklYaGaSGFtlLYu42QCmN5xKAsNucuUG3Tw3bnzHw6f9oDwfoG74HawciXyP1VM4JGhtmnyIOB66rxYOKyWNs+PXQ5+1cg4C1537NM0NNn9LPt5\/mvtNAIYYu+w89fWMfuJiCk9cefN158pTD6zSl7S+VQDdYx5fd4daryd3D6yXtex9AADgiFAMLv4Rz1va0RMYz58\/909sj7Us4mwjHuE2vXxD6jap4UbXbnyDjSTfCMuNtMTVwTba4YY6tUEVm2e7mR0+lw4Jok576MBmOIXuq5XjKjXOjp\/B+5l5Z+6JaONw3YVPk56hZszHvX7JeVqaIynkfFXKYbj7aT+R91Pluet6+1ybhneEb9UC3UPc9Va66\/Xm7oG1s5a9DwAAHBGKwUhgVHLt4vX27dsheYFfIbme+gSGwV2XP8EjeALD4DecqXeGQ4Gx4CvMwXWtje7QS\/cvfZto86xsxuUhgdXZv2c+Y0Oswn1VjL031YcKGqfHz2H9qL8X+98x4LpLn\/ZzKhQnOgjn5umEOUKwcRRjbe9ph9apfuLaMVxPlWcPx3F5Q\/9ZG9O\/BjEF6B7QSvdcvaU2gVWzlr0PAAAcEYrBSGBUcs3itZfkhWHPi3icwABbppmv2oOKdkg7BluIEUvP9TXEDujehj2viWAE4wwAAO2gGIwERiVYvBx71iH\/rQ6wNVr5qv2GxoETYeuPEcq3Ca5i6fLmAd3bgL3BMcA4AwBAOygGI4FRCRYvxy51GL5OfNyfmu+RNr7qvgp\/4PwFYmUjoHsboPsxwDgDAEA7KAYjgVEJFi8HdABbAb7aBujeBujeBuh+DDDOAADQDorBSGBUgsXLAR3AVoCvtgG6twG6twG6HwOMMwAAtINiMBIYlWDxckAHsBXgq22A7m2A7m2A7scA4wwAAO2gGIwERiVYvBzQAWwF+GoboHsboHsboPsxwDgDAEA7KAYjgVEJFi8HdABbAb7aBujeBujeBuh+DDDOAADQDorBSGBUgsXLsX0d1vGf3gO3B3O2DdC9DdC9DdD9GGCcAQCgHRSDkcCoBIuXY2063J\/Nf\/60JiFRTmDYMk+X\/sn98XA5dXfJzjttjJ6jLfefln1sXTFn2wDd2wDd2wDdjwHGGQAA2kExGAmMSrB4Odalw313vjt153PuUC459jcwpiQwTpcxxWCTDhsVC3O2DdC9DdC9DdD9GGCcAQCgHRSDkcCoBIuXY1U63J\/dT\/QfLt1J+6aAvT5+m8CdwymBYZIfdO\/UBWd25dAuv5kw1pV6dkwCpN9190zdYVvM\/fAd3rZyeam+yfd4osLhnmHXSWP\/MVd\/SYsaXaNEi2kH66vrIytOgDnbBujeBujeBuh+DDDOAADQDorBSGBUgsXLsSYdzIHYHY6Vg7c\/4I7X+s\/2IE6H5jExIA\/Wpc\/2cE2HenmwtkmTdNns3aEt9P54oKdX+PNTyyvUH3zmSB19ecHzS2qRLUskpR4u5+7Ut2V4PJW0CsCcbQN0bwN0bwN0PwYYZwAAaAfFYCQwKsHi5ViNDuJwLA\/60WF6wB3Kg3OzezaVJBD1OExyhK7xbwLEh\/Dcu3FbogRD2I8Z5cm+ReUzfMLCfhvCGUsKXaNFz3xdTbt6Dfq+UHvy\/XBgzrYBurcBurcBuh8DjDMAALSDYjASGJVg8XKsRQd5OI4OxOLgPjIngcEP9c7GusbnRdnFd+O2lBMYdeXJvk1JYAxJi7BuwzVa9MzR1bXlvjub98w7ti9KPxUwZ9sA3dsA3dsA3Y8BxhkAANpBMRgJjEqweDnWoYM7wMaH38zhe6B8yI8P2lo5AfSMfLb4btyWcgKjrjzZt6oEhvx8jRY91bpS2\/v\/d20w7TEJDvPtjMK7PZizbYDubYDubYDuxwDjDAAA7aAYjARGJVi8HKvQwR7qx5\/UE\/ZwPhxs3a8gjIfx\/nPqp\/fikM8O2vIQr+Kf6Q\/XPDlQejduSzaBMaM82TdbfvCZo5RfVb\/BPxNpMUdXM4buvzJDr5kyzue+TaJsDczZNkD3NkD3NkD3Y4BxBgCAdlAMRgKjEixejjXowA\/CIS5pMZ6RzU\/5+2etTf81i7h89w77todIArjkiSjXkns3bks+gWGoK0\/2LdQkTh649\/l1oWm2fkdKizm62nfC\/ls9NJ1jMGfbAN3bAN3bAN2PAcYZAADaQTEYCYxKsHg5oAPYCvDVNkD3NkD3NkD3Y4BxBgCAdlAMRgKjEixeDugAtgJ8tQ3QvQ3QvQ3Q\/RhgnAEAoB0Ug5HAqASLlwM6gK0AX20DdG8DdG8DdD8GGGcAAGgHxWAkMCrB4uWADmArwFfbAN3bAN3bAN2PAcYZAADaQTEYCYxKsHg5oAPYCvDVNkD3NkD3NkD3Y4BxBgCAdlAMRgKjEixeDugAtgJ8tQ3QvQ3QvQ3Q\/RhgnAEAoB0Ug+\/MP1qZSWBo12EwGAwGg8FgMBgMBoPBQsM3MCoxogHoALYDfLUN0L0N0L0N0P0YYJwBAKAdFIORwKgEi5cDOoCtAF9tA3RvA3RvA3Q\/BhhnAABoB8VgJDAqweLlgA5gK8BX2wDd2wDd2wDdjwHGGQAA2kExGAmMSrB4OaAD2Arw1TZA9zZA9zZA92OAcQYAgHZQDE4mMN69\/KL77HNnT7\/+Mbr\/w9fPus++\/Kb7QVyvMSQwtgt0AFsBvtqGdet+353v7rq706V78FeuY+ny5tNe9\/1qmwNx5hhgnAEAoB0Ug\/UExsdvutfv6fOH7qvPn3WvPwb37bUvkMDo+cWvftv99Om3VWbe2TrrXcQfusup3+zenftt7y3wm+mblQ+WZhlfJb86dZc1n6JWxKo3+vfnfizvutNSg7l0eVdwne4LxLcda5tj1f4OFgPjDAAA7aAYPOFXSH7sXn\/JExjm2xdfff1N9xQJDDVBMcW2zjKLOG2WhZ2vSQ0smcDQyrpxAuPh0p0CLcZN+60TM\/tF91XS09iUpAQSGLWEuoc+ze0GevoDL5kWTu7Pcd0Pl5N7h\/2kX4tR8RyMyhNtYIfv5BxfBu7voZ+Plg6xhfi2qLbBdTKlwDVpm2OZNRGsHYwzAAC0g2LwhASG+bbFq+4dff74Tff05Qf3\/0hgqMmJKbZ1piziv\/\/977vnz5\/7Txp+s7zoV4OXPOg\/ctKANt+DHqZ+qvuR27IjVF+1h6BTd5qclCD9pzwLDJrudGC92cHSzyFXfmrMZNyh57xpCYxsUlWUZ3xreH4s216iOe7vu8N5LqFQD9d9wbixtLY+EUG+oGuxLm1zTFkTwfbBOAMAQDsoBhcTGOZvYYx\/AyP4NgYSGBYtOTHFtk5pETfJi5\/85CfW0sjNLqFsjuXhPvlTOLFhF5tatWy1LLHxNmbrFuVbfD8GCzf17t7pcs\/KUzfV1I7oZqotPUkdesQ9a4PWskx5ENkPsa\/KMUn0PdTvdO7O8tms38Q+QNrTwcraY52uGqDFCDWBMWWOTvRXKp+KUuvz4zZcs\/X35d2LGGPxY5cbJ1meIGyDbN\/gQwv6AdeddFMSGF730+Xi45d5Jv380trK9yNtDCvTNkdpTQT7AOMMAADtoBicSWCYZAX\/A57mV0eGz0hgWLTkhLTvvv+jf3o\/5BZxSl78\/Oc\/n5nAUDbH4UbWbIqjgzhtuMXn0uGopiyLvOb7EL1DByy6Txtr+XwAtdVYpInSllzbfVlOP\/luXJY7VCtt2gHSV51vmb7KsQoRvkmHoQl+k\/VdcSB7uJzVg\/ge0GJEpI2B\/D41R4W+hpS\/Rj91F3ob3DPKmFM72NzzfpA5BCfL84RtitoX9f16uO6xdgNUd9iezPM309aUedHuZ8rzPLa2OXJrItgPGGcAAGgHxeBEAiP+uxfDH+6UdkUS4ygJjJ\/98jfdH\/705+7NmzfdkydPuhcvXnSfPn3yJWyT1CIeJi8mJzCY+c2q2PDmNrL8ntiAR5tYeTjiZMuyiGvKJp4f0sRB2FzJ9GVoL9nwXvpgQbBybbvGOsZDu\/0Qb+x9Px5pr\/+ocF914+HGJuML0bjW+A0f83hcxnt7RosRsxIYFf4qy4\/ri+fjANXD7ikxilWaKc8gxtv5wm0P2Vx30jI0oStrezrOLK+tgevLZViftjlSayLYFxhnAABoB8VgPYHx\/lX3mfk7F9o9MnwDw\/L0179TkxZkkr0kMbRFXCYvrvkGBt9Ix8\/RZnU0OjyKDXi0iRWHo57JZVn4NfVAxg6\/qbaP9atQu4dytLZk2u7fZ+9SG2jjr9gj7fUfldBXnV6kYewLRDyu8bNpvwnHWGg\/3CPj47kntBihzpfSHK3yV3qX21Afm5sCaocajwxj2UO9U8oLxpjGfuyq7Pv1cN2pzYqfqXVnnl9aWxpXe21MZKxZ2xyav4P9gXEGAIB2UAxWExjmV0XkNy3CXyWxhgTGZEzCQjOTxNgqmg7mD3aahEVo1\/wRTzrs0NeLaSM7XPf70vGwaD6JDXi0iaX77vmqsizimrLJ5mXOTGAYaINvC4rbkm37sMEnC+rLHQx2SOirTkPNxHhEGtX4jb1g79+dTsx3Q6iMvY6DFiPUPhfm6DX+WhynEGpHMoFB749tSZdHB\/IwdsTtuaZvKbjuWgzzqAf8zPOCa7VNzhlf4Bq1zTFnbwC2B8YZAADaQTG4+Ec8b2lHT2DkD\/frZplFPJ\/AGDa91saNrNuo0mfazNJnuQEXm13aJPvn82WZx\/nnZPlDH0r3tTIdpi3hZts9lz4g5NrO70mEJjsn7as0VopO8sBV6Tdj2fw6G+NHPmA9NpruTjfZZ+GPQuvo\/mT8e8Pck58FWgKjb8vYVjnOqfIy7RVJg\/QhfT5cdxmPAkRbHJnnGddrS75A1XPfWKe2OZZZE8HawTgDAEA7KAYjgVHJtYvX27dvh+TF3n6FpB7ajAobNtTBIZBtZPl757M58NBGVdmADwciV869evjUyuqhTbF\/V\/2vkITPWAs31\/FGPL2xDvrrjZ8tZFtybde0VdqVvL8f0r5Kemtj0XON3\/TQgSwc+2iM2QDvC013PYHRk9XaMNFf5VwMtfd1RHVH89ebH5thHK0FbUqUx58PjNoS9rW3pV2A667EK4L6zYNM+Xmyq7WN493w\/kq1zbHMmgjWDsYZAADaQTEYCYxKrlm89pK8MGARXzdRkkQ9rByDZr6aOtQdhLXFiKV\/Iv\/YP+GfSgvdj6JtDqyJxwDjDAAA7aAYjARGJVi8HNBhzSg\/RaWfTCKB8Wi4Q9jj\/hR4TawrRvhvcITfGriKpctbjsfX\/Tja5sCaeAwwzgAA0A6KwUhgVILFywEd1o7ylfuDnqSb+Orw1fl9\/lrOFBAj2gDd2wDdjwHGGQAA2kExGAmMSrB4OaAD2Arw1TZA9zZA9zZA92OAcQYAgHZQDEYCoxIsXg7oALYCfLUN0L0N0L0N0P0YYJwBAKAdFIORwKgEi5cDOoCtAF9tA3RvA3RvA3Q\/BhhnAABoB8XgO\/OPVmYSGNp1GAwGg8FgMBgMBoPBYLDQ8A2MSoxoADqA7QBfbQN0bwN0bwN0PwYYZwAAaAfFYCQwKsHi5YAOYCvAV9sA3dsA3dsA3Y8BxhkAANpBMRgJjEqweDmgA9gK8NU2QPc2QPc2QPdjgHEGAIB2UAxGAqMSLF4O6AC2Any1DdC9DdC9DdD9GGCcAQCgHRSDkwmMdy+\/6D773NnTr38crv\/w9bPh+mefv+reBe\/UGhIY2wU6gK0AX23D2nW\/P991d+d7\/+l6li5vLlv1962PB+LMMcA4AwBAOygG6wmMj990r9\/T5w\/dV58\/615\/dJ9NYuOr4d51tocExi9+9dvup0+\/rTLzztY5+iK+lsPKWtqxZhbz1ftzd3e6dA\/+I8iz7hhx353v7rrlps7S5c2nie5Xz43tj8fR18SjsK5xfugupxo\/r30eAADWBcXgCb9C8mP3+sswgTH++1rbQwJDS1BMsa2zjkXcLcZ3\/UZ1tHO\/db09MnHwcDk1SSQsmcDQ+mDL3\/ihXfqq7WfgM5PlQwKjilB3c5gMNR\/tBvPVjNNQ\/qm7aAOmjCX5xYm9oMQYzWFEeVkfe7h0p9S9BQh1t+2QPuvrl\/Wqz04lNzcWHQ8H11cps8F41MQZfu9x1iywDHycHykhIHx09O1y\/XwNr2uveZfNPzuXE3NYIb1\/cAnGcQ6EtuR88PFbdPiafZOduzcfcABACorBExIY5hsY9KsiJpnxhfqrJXMMCYztInVog1ucwgX2moWpBllPq0Vtyf7udWFmvmo2gtHBZuKGKXdIAxFqjLAb8ekb4GrkBtt+jsfXzJsxbrjN9OlyH8WTvsGTNvysvKyPUV3+buWBYAqRv8vybZ36pp73vYLU3Fh8PLyehXnYYjymx5m+zuCeaese4+5e4XGtLiEwC8UnjT85n62tv+75aB71c2XxvmoxakmkflfWZ+cy5isAzaAYXExgmF8Z0RMV\/FdL5hgSGNtF6tCGOIFhFyu2uXXPpLL7bmNJ92hRUxZ5Ue646ZTlxxtuR7od8QZW9MtvHOjd8FH+brndelnpPqTaNj4b6kn1u0OBu3\/DjclEsr6a28wwrfpnLlO0LI+n7nP7Q9Vd1XuC3\/pnRt34PCastuw944uyPu2agY+TQ2lbRKo8T9hnu5nW5oz\/uABc97hPxj9P53PfprAdsg8FvUtzw7P8eBS0trQZj7lxJtYIrBltfqn+wuZI+IzyThTvCOPLOX+kstxzw3wMCtL3COnnQ2yscBMl0Q5XHvVRxol4LVRIzo182eX7I2E7dD38R0NyLBx2vk5+n+7n9J7eDwDAGIMzCQz3bYvctyzSyY1pdpQExnff\/9E\/vR+ym7VHwwX+cYPrF4JgNZELKNss2oVTWyxKi1KiXPYCJ9sOuYlmC3q\/8AX1ys1u3WKcL0vrg1Z+1I+h7f5+sEDLfrcg66tS+wHXl9G3\/AZkipa58Uz63P5QdVc3qzPnW3B\/IBpPN265skfkmBvIp8lk23uS5XmCNsXt1uq8Dqk7n9dGD9MHoYvQLa93aW4ELD0e3n9O4Ziwwnoajce8OOP0WHL8wW3h4+z8RbqgHdfAr7T5M2kOFNcLV1ZuzVXX8MzzIeZe6ptQhnycyJc9oK4J9WXHczmAdIzqqhgLj61neKH0fu34+PIz9QNwdCgGJxIY\/O9epOzaP+h5lATGz375m+4Pf\/pz9+bNm+7Jkyfdixcvuk+fPvkStkl2s\/Zo0OIwmrbZ5Quj2TD6a\/a+tvkoL2rqohMX5Ci1w29i6fVJC7H\/yNtRuRiLsrQ+sPLF846wH5X1PxJpX3XtVQ8PWl8na6mMJ9NQaLRTVN1t\/+VcKPiN+k7odxzrs73Gztxhdyw7M+bZew47lswvSu\/w+9rcNu3N1VlLpLvRktpstPT1h\/XGPprR296fPjcWHQ\/bl6Btti1TyzPcbjyq4ozth9eEOT5YO3yc3dgWh5DNGeWd1PwJ565KuSw7\/4YHKuruGeeuEmtLccJ8YnUn0MoplT2hbsnQF9aeOj0MLFYW3y\/cn9EPAI4OxWA9gfH+VffZyw\/x9dA+ftM9xa+QdE9\/\/Ts1aUEm2UsSI71Ze0zc4jBsDM3CEC72dnGgBTi0YHEInhk3mOVFTS7MfFETTGjHWF5cty2bvTf2kbej3O5cWVofWPlSX0tYZ7n+FqR81fYt1Tatr7O0VDRRfW5\/qLqrG7aC30yZx0nMZjAoW62fcO3Ij0lNeaYbfTulzzCfm1JnHbHuY5vZHB80FvqX9J4wN9JcOR5R3eKZhuMxK870uDgi4ypYK3ycxdwJcOMazh8aY+Wd1PzR5hqjXBZbw2vq7jHvmrmg+mgpTvTwuhNoc7ZU9oS6I+w7Uss6PQwshhbfL9yf0w8ADg7FYDWB8cPXz4Y\/1Mn\/YKf5uxfjtWv\/c6p7SGBMwSQsNDNJjK0yR4flcYvDuNkUn9UFK0W4sS4vanJh5ouaYEo76Bn5rKk3\/CzuV21OCmVpfWDlq\/0wutFiW9atBZqv2n7l2qX1tULL4bOqGSEOcztDjRFWD7k5K\/hNVsMCYpyy89S3I3t4Fe3Plaf6mPQbre9XkvJ30y\/z\/2Ndfu7eC31Lemv3w\/HKce14RP7Dn2k5HrPijCHqE1gzfJwT\/iL9is0Z5Z3k\/CmtEeWyrA8OD9TU7d51c8u9x+ZWKU708LoTaP5fKntC3RHqO3V6GHiMKb1fuD+nHwAcHIrBxT\/ieUs7egLj+fPn\/ontMUeH5XGLA9vgmsVhWBCU+0n4QsMWXrvI8I2oXJjtopZc9Ka0wz9zEhtw1h9fr\/wcPJ9td6EsrQ+8fNfGdL+5hha2mLdB23CW2+Q2jsOYVWo51GPeYYKEKHrtCDVGWB3jw1rWb71O0+ZxiBjDot5xPfdn3lbbzpy\/W9x13cfEgUT40RKoutt5eOp1jX00ijl0Pal3YW4kuX48omtWPxqjVHnu+q3HY3KcMXoFjbQxdGEfALdDG+fI5wrrQz7ecZx\/8Dhkrrk5oNRv5\/pYFqtrwvMh5t1x\/unzl89PDq87\/mxR14RS2eW6I2w98TyrGQtDtk\/R+yW9Z\/QDgINDMRgJjErUzWEFb9++HZIX+BWSa9GCv9iQ+mfY1\/No8bCbjOA6X2VsOe5ev+hlNwU9tHD1pi9GmXZ43EYl3gzZuvw7p8ulb1diI2SZ0O5EWVof8uX3xvpQWqzbwHxVjjmZFN0Q6GG1NJ+natmjjmfW5\/aFGiOspnECg\/tV7LfkW0w7za\/YmIm5aO\/xMXIInw7fleMV1pkqr+RjrI2aFtehx2bfR6FZKub0d\/J6sz7Ec2OAPbfAeBhEmUPbU+U90nhMjzNS2+V9ANwOPr+UeeLHM78+lOIdh+bpYMOz5TWXr+Hl50PMu\/GcDd\/Pxwm5f5CfLbZMbQ7kyy7fF6Tiw6SxEM\/4q47c+1P0ruwHAAeHYjASGJXom8Np7CV5YbhGBwAek2a+ajYq6obpGKwtRthDgNw8X8HS5S3FVmLz3sYDa+IxwDjPJJlAAACA6VAMRgKjEixeDugAtkIrX1V\/2nQg1hUjlJ+EXcXS5S3HNmLz\/sYDa+IxwDjPwyQY2bc5AABgBhSDkcCoBIuXAzqArdDGV93XSg+cv0CMaAR0bwN0PwYYZwAAaAfFYCQwKsHi5YAOYCvAV9sA3dsA3dsA3Y8BxhkAANpBMRgJjEqweDmgA9gK8NU2QPc2QPc2QPdjgHEGAIB2UAxGAqMSLF4O6AC2Any1DdC9DdC9DdD9GGCcAQCgHRSD78w\/WplJYGjXYTAYDAaDwWAwGAwGg8FCwzcwKjGiAegAtgN8tQ3QvQ3QvQ3Q\/RhgnAEAoB0Ug5HAqASLlwM6gK0AX20DdG8DdG8DdD8GGGcAAGgHxWAkMCrB4uWADmArwFfbAN3bAN3bAN2PAcYZAADaQTEYCYxKsHg5oAPYCvDVNkD3NkD3NkD3Y4BxBgCAdlAMTiYw3r38ovvsc2dPv\/4xce9Z9\/ojf6\/GkMDYLtABbAX4ahvWrvv9+a67O9\/7T9ezdHlzWYPue9U2B+LMMcA4AwBAOygG6wmMj990r9\/T5w\/dV0GiwiQvZEJjru0hgfGLX\/22++nTb6vMvLN1sIiDrbCYr96fu7vTpXvwH0Ge6bo\/dJfTXfe459P77ny3ZJ1Llzef9rF5v9rmwJp4DI4xzi1iMgAAlKEYPOFXSH7sXn9JCYwP3VdfftP9oD5Xb3tIYGgJiim2ddayiNufzPWb29HO\/XYXWF1w2LZIX324nJjPTN6kIYFRRai7OYCGmo9m5uvCm2UzTkP5p+6iDZgyluQXp\/AFVlZoIs6I8rI+9nDpTql7CyD9PY6R+TqzsWNJbQ1C3+i+YUXa5pgeZ5y\/h\/fW\/u0SMBKOsx1jOVe8D8ohVZ+9MWYux\/EsMW8Z02PyLTRIxyA\/d0TB9vlF55CrR8aj2jFM9WPtfgPAmqEYPCGBYb6B8ap7Z\/79\/lX32ctX\/ecv3K+QXJnMQAJju0gdWiEXaBvskcQAAcxXzSYh2AxU+YtyMANp1BhhN2lyA71gAkNu0O3neHx53HA\/4T9d7tVNq0TbLLPysj5Gdfm7kw8U05G6yxg5m8W1NfeC8lTfEOU11jbH9DizoL+DRycaZ+lj1u8KMeKRiOZO365pflfho4+tgZzXWv1Xs0wCI8nK\/QaANUMxuJjAYL8yYhIYC\/46CRIY20Xq0Io4uLtNrFsD\/Ab54hcGsYF018LrHr\/Q0\/1xPcm\/5zapdG9cnFLXR+rbafrNFzq+4Kbua2XZ9oXP2oU07Fuo6fbI+mpu88P8wI9PuHlJ+ElpbMr+sA9U3VW9nT7ne+dnsS503380GB9VNpLxBtPPLfagds3Ax0lFbX+qPE\/4TjS3lL5didQ9vQH27RZxJ\/Zfx+LaWl1knJlanueRtc0xPc48brvAsvBxjv3azrfzueDb7r1xHdD81rxD98UcoMNuaIpDjXPflRU9Yv1yLGO8P6ENAzM1SNbt3tf6Q4T3o2ezfTL1z+uTgcdA0sh+cIh1Kd2PmZr596hv1X4DwA6gGJxJYJhfHREJCvsNjA\/pz5V2lATGd9\/\/0T+9H7KbtUfEBv0wQrONIgXyOMiHi4o7UNIz7p2xzP6zX5DkYsQWM1tvWI8ndZ2htbNQn9yss37H79a0\/aE\/0JzChXlSH9ZL1lejQw8hNxh+jIbNyegXhsljs3Eta1B1F37qoE1Zyn9pY+Y\/GsRGcSAaTzduk9719chNa4icR5ZkeZ6gTcxPLOU6a5G6mzbr5U+LOwM30NbWZctM6LAybXNMjzOuXeMhRM4HsGbkOFu\/GyaBmRNmPMXc0MY\/mDi2jMg\/UvGQ6nCfeP0cN\/dT3yzrywnmC58\/pTZw6jXI1Z2vy0LraLSe1PXJ3h\/aFOKelZpp5bFmini1rGZxeaX+FXUEYINQDE4kMMK\/exEYEhjR4qUlLKT97Je\/6f7wpz93b9686Z48edK9ePGi+\/Tpky9hm2Q3a4+ICdDhImMD9hDQxWJgUA+QtHiYf\/IFY0A9eAXv2fuiLkPqOiPVzkx94h2+kJluBAtXVVlmEez73+tAuvKFdnukfVXfpFisZsIPxOaEwZ5XxoaNRckf9oGqu+qLpY1geaMYYn2\/15gOhywZ58tSxzx7z8DH1VF6h9+X89QgY9i1SN25HsZ0PyVY7BDcQtuhzGg816dtjllxpse2W1tzwCqJxjncM5j45n0w9L14DZDjHa7Hzl\/YFAzjnXx\/UiyUMVeBlVtog6RWA4nok2136lnP0Lfcc6U+9XdG3UPcs2OsC2zQoKxRth+1mtm+yLZW+A0AO4FisJ7ASCYmwv8iifuGxlfDf62k3vaQwHj669+pSQsyyV6SGOnN2uMyLGLR4mJQNujhojEQBP5UwLeLh6jLWrCgBM+wzWrq+oDSzgn1jYtjvHCxhXNiWa5tfVvMe+Ydq4OyKG6MlK9ajVKLu+YnwjfcwSPUc3x+3Hgo+hX9YR+outu+y01YaeNVup9DzC21fsLVkxoTO6ayzmx5ppncx+Iy8nXOQeo+zm2JEnd6WOzIcq22\/H03n4L3V6htjllxxqKPA1gn8TiP4zfGfXOZYpSIX9rawp4RzxtYvDP1jfMiN19p7ru5Jev07e3bHq9hpTZIKjXoSded79OAjQ9X9iloN8c9K2OHLXvQoKxRvh+Vmtn+hv0iI18otweAPUAxWE1g\/PD1M\/dHOgMbfpXk4zfdU7p+xbcvjO0hgTEFk7DQzCQxtsocHW4BLdA6yuKkLnrBhsAEfGVR1N9LkVoUK65PqY+eUZ5lC+eUsmih6\/\/f6WkWQ6OJadvUfq8TzVetPrmFXdMs3AxIP5HPZ8ZmJOUP+0CNEVYPeSgtbbyu2JiJcWIbxQhXjx5P9LHKlaf6mPQbrW9XInVPx0i9Tyx25LhSW34YMPBn1qhtjllxxqDOCbBWUuNs\/Nb8\/+hvZn7143qfWBv8R4d\/1vqA4rdhvLPv9341mCxrhNpFZbL5JOcLa1ehDQpVGmTrdmUVY5CmY22f+jthMmjEPRvGKwOPWWWNSv2o0kzrL6N+zADYIhSDi3\/E85Z29ATG8+fP\/RPbY44Ot4AWAB2zEMgFywX5cFHhi5J7Zyyz\/2zv6QuajrKQWFLX0+3M1+efOcUbfb5wTinLLZrnc2\/+NbuonvsFMG7wpuC+6rQoL+rCD+zmIXhPbJSs3mxz4esx7yT1c89sXN4kaoywOsoNo6JDbiMoxyKJnMslvd19bZ7YGBFtHlPluet6+8RclxvuBZC6p2OkFnfc8+U5v4C2su9+XF0Z69Q2x9Q4c9\/HWC7DFF8Ga0GNazZencQB0\/t8tD573wiuVR2Mzb\/jiaHC576Ys2J+WD8cPhfaoFGjQbZu\/zl4Xn62aAf6CX0Kv+XFdQ\/x7Q4nao98nrVLWZfUdofUaJZo04i7z14pjRkAG4RiMBIYlaiLVwVv374dkhf4FZLrMQtEOqDrG3S6PvwEQwZ4WoishZtNWgADo3ftwhlcp0pT1xmpdmbq87iDVfxuvHCWy+KLfY9vu9rkDcF8VY4HmdZJ5ge9LuZzoJnTy9npcunHMNyEJMZmkj\/sAzVGWE3rExj9hWDO9jpH9z1szERssPf4GDlEPIjedfejOJMqr+RjrI1Si+uRuqdjpB534tjhuYG24RwKr69V2xyT44y8p\/kxWC363sf7uRjL1Po8PK\/6QDkeynmT8qFo7vv5QWWH5fA1bEpMltRpkK7b3wtekJ8tiRhR7lOovRJjLO5ZGTdlAmPoM5WljZNsN6PWb1y7qH\/WhnfnjBkA24NiMBIYleiL1zT2krwwXKMDAI9JM1+1B5XUBmn\/rC1G2E1hdjNZx9LlLUUL3Y+ibQ6siceg9TjbuSEOpeagLA\/buyGZHK1FOeADADYHxWAkMCrBJsUBHcBWaOWr5Z++7Jt1xYilN6\/r3Qw\/vu7H0TYH1sRj0Hqc43XFzZe9JjBMwmaZvm0zrgAAOBSDkcCoBJsUB3QAW6GNr7qvhh55s4QY0Qbo3gbofgzaj7M7iIe\/RrDbb18sChIYAOwBisFIYFSCTYoDOoCtAF9tA3RvA3RvA3Q\/BhhnAABoB8VgJDAqweLlgA5gK8BX2wDd2wDd2wDdjwHGGQAA2kExGAmMSrB4OaAD2Arw1TZA9zZA9zZA92OAcQYAgHZQDL4z\/2hlJoGhXYfBYDAYDAaDwWAwGAwGCw3fwKjEiAagA9gO8NU2QPc2QPc2QPdjgHEGAIB2UAxGAqMSLF4O6AC2Any1DdC9DdC9DdD9GGCcAQCgHRSDkcCoBIuXAzqArQBfbQN0bwN0bwN0PwYYZwAAaAfFYCQwKsHi5YAOYCvAV9sA3dsA3dsA3Y8BxhkAANpBMTiZwHj38ovus8+dPf36R3vth6+fDddGe9W9E+9ONSQwtgt0AFsBvtqGbep+353v7rq706V78FeuY+nyymzX37etPeLMMcA4AwBAOygG6wmMj990r9\/T5w\/dV58\/615\/DO57MwkNSm7MsT0kMH7xq992P336bZWZd7bOdhbxh+5y6jexd+d+OwuOyDK+Sn506i6PdRLdOJvc6N+f+zG+605LDfLS5U2gje4LzI+Na79JfwfVYJwBAKAdFIMn\/ArJj93rL7UEhklszP\/2hbE9JDC0BMUU2zrLLOL+J2TClt1wbjmBMaHtD5fupGqHxA0hffXhchr0snaeohASGLVw3flcjyRnfnwjn\/UH2mQbeu7P5l4wxuIdGZsGX0r8lL+qvORcriPU3dUvyhraIHS+6sBfmB8LaM\/emaDVY2u\/zJoI1g7GGQAA2kExeEICI5GoeP\/qqm9fGEMCY7tMWcR\/\/\/vfd8+fP\/efNOKv+A4HgkmHyinsOIFBm+5BP\/M8Pbvlfi8L81VxSKMDXtndCgc0EMFjBCUwTt3J6CgO\/G7e+3u38Fk\/V9y4p8ZSxCPjK4Nj0DvkK+Nna2oCo6I8msv+\/nS\/jNH8PYynYQIvLJ+uz6lz7I8yP+Zob96hhpA25BeTtHp87aesiWD7YJwBAKAdFIOLCQzztzDiREXqWxl1hgTGdikt4iZ58ZOf\/MRaGrHJ9MQbSHFYYJtfV8bpcs+eid8ND0W+3sGoPG1zHbRx2IjHdVGb6fPI3LbL93oTOtlNubnOK+zJvEvveGM\/aRT3rA115vqxbkJfpUMa9Tt7aAv1OJ27s+1\/0G9Vy4IPmU+Br8Rjtx94jKA5d+4uPlkR6XO+eO2mzFVDbv5w5DhLP7D48WTXAtg7Nhb0bbn3h185Nw0V5UV+SL41wz9U3RPzeGwbXQ+1L8z50vzwXK\/96DumiElaNdC+tCaCfYBxBgCAdlAMziQwTJJCS1709vGb7unLD\/H1SjtKAuO77\/\/on94PuUWckhc\/\/\/nPZyUw+AY33li7AyB9Hg84\/HnaSMv3+WZYPh9trsON8PCTQF\/28JmeT5VdbrvbK5ffZwT1xwco5V3zfHSQ8fd9WbrmpX6sG+6rgeYXr592+KTn6B4dasKxT2iZ9SFxsHq49Ad6\/9je0HXvNWK+Zm45Tc730s9S84HmdjCW9gH5\/AgljeQhdWhDj3uGyo6JyjDQHFR8qKa8qGwql1U2Da67rtmp932rFbU7qq80573WqfkREPWtVnsq2xcwRatseT1hGVPKm0JuTQT7AeMMAADtoBicSGDkv2Fh\/njnV8Mf+ZxvR0lg\/OyXv+n+8Kc\/d2\/evOmePHnSvXjxovv06ZMvYZukFvEweTE3gUEbVrvB1TaT\/r67FJfBf6ImNuLK5pkfOHl5bCNMbRnqSm3yxfMVbecb77j8CKqDLNM2CavLtmvc8DtN\/LvFfqyb2Fe97t7UPkR+QnqOGoXwccv4kC83HPO9wnUnzY1PeS2ZPsF18rtoDMgv9blq4OMwIpNK8rNWFiM1blFMIOrKc+0OfFGbcxOR\/k59tUX5esdkEffLbP3hM\/7fU+bHXO3pOWdjHCtr1Ub71JoI9gXGGQAA2kExWE9gvH\/VfZb8hsUyvz5ibA8JjKe\/\/p2atCCT7CWJoS3iMnmxyDcwaLOpmNtfxmXwDTI\/FMWb5x6xGR8PQfygNWxsh7rEgauHHaBmtJ29r5SfhNrWm9Zvgjbro\/m6\/PvsXWpXsR\/rhvkqO7x4\/ZV+xH5Ceo4HtKSWwz3zWWg53CObMLYbhccI0jqch70+9CsYdgC4z5bnamn+hFDZ3IayRQxgDHNLGasoJngqyyOfGPyQnpkxwaLYHJTlNOX6mioi3Qpzfsr8GLlCewufp0WtGmmvrYlgf2CcAQCgHRSD1QSG+YbFZ59\/wWz8VZLr\/+sjZHtIYEzBJCw0M0mMraLpYP5gp0lYhFb7RzwNbDM9dXMblBFuzMfNs9+wKuXx53to83462Y3s8CxtbIe6RNk917adHyTi8rNQu21H4ndlP1ldw8aeLDiIFPuxbkJf5fraC66\/8rAS9Zn0dO9mtXQXXLnShwLiQ+C+4DGCDqHeH5m\/kW61c7U0f9IUx29AtFsSxQRHbXmyPVrfpxLHZtLJ\/50KautwUO+v2\/tBH0r1F+ZHjunaj7hnXH0lrVppP2dvALYHxhkAANpBMbj4RzxvaUdPYOQP9+tmmUU8PoDQZnI8UBYOEMN92nDK5+VBXtYZH\/THa8aCjXBtAoPqKrU96L\/cfOc290arcJNNm\/zUwcBpK9vmPvN7klI\/1k3oq\/KwQp+jw4oca3+o0fXiWjp0HzLvDXXNPChtBR4jpA8F+iTnk5wfpftGUnM\/5ceEfC8uxyHbrKAmMGaUNyQTfM8m9UNHi80UG7i\/UXvkdUOh74X5kUZqk9CqL29sD427LzurVaK8XH8W0n6ZNRGsHYwzAAC0g2IwEhiVXLt4vX37dkhe7O1XSOqhTSW3+ECnPScPMfRX8J3RAXXc\/AYbV9qwDhZvaulgyzbCctOulB1vfqe0fawjej9sa7Qpp\/pHG\/vdE73L23I+m0OH2PgzC3Up3V8v3FdjzZIJhOFQ1luv372atHDGtXSoPiTrZwO2L7jupNfoM3HyqHau+jJz84eQ5YRjkkgkDeMnzbwbtcubGc855ZkHQn\/rba5rqLE5KDss1+llTNFsGLPQAv2z8yNghvYGrpcoN6VVorzH0H6ZNRGsHYwzAAC0g2IwEhiVXLN47SV5YVjPIh4fYhYhs7HeI8nEydxT1Ipo5qsH8yHJVjb6yaTHTJYur5at6G7Yk\/Zb0h3MB+MMAADtoBiMBEYlWLwc69HhNgkMtxGe\/1PQbaH85Jt+IokExmyO5UMx24iVS8ePGyVUK9jOGrUv7bE3OAYYZwAAaAfFYCQwKsHi5ViPDjfYtA5feQ6\/rr53vI6h7eTk3cRXD+lDHMTKNkD3NkD3Y4BxBgCAdlAMRgKjEixeDugAtgJ8tQ3QvQ3QvQ3Q\/RhgnAEAoB0Ug5HAqASLlwM6gK0AX20DdG8DdG8DdD8GGGcAAGgHxWAkMCrB4uWADmArwFfbAN3bAN3bAN2PAcYZAADaQTH4zvyjlZkEhnYdBoPBYDAYDAaDwWAwGCw0fAOjEiMagA5gO8BX2wDd2wDd2wDdjwHGGQAA2kExGAmMSrB4OaAD2Arw1TZA9zZA9zZA92OAcQYAgHZQDEYCoxIsXg7oALYCfLUN0L0N0L0N0P0YYJwBAKAdFIORwKgEi5cDOoCtAF9tA3RvA3RvA3Q\/BhhnAABoB8XgZALj3csvus8+d\/b06x\/He+9f6ddnGBIY2wU6gK0AX23DFnW\/P991d+d7\/+l6li5vCmvXfQ8aayDOHAOMMwAAtINisJ7A+PhN9\/o9ff7QffX5s+71x9y\/59keEhi\/+NVvu58+\/bbKzDtb50iL+Fo2yC3YQ98X89X7c3d3unQP\/iPIs70Ycd+d7+665dx96fKmsW7d96GxxpHWxCOzrnF+6C6nGv+vfR4AANYFxeAJv0LyY\/f6S5+o+PhN9\/TLb7of\/D3zLY2vhkRHve0hgaElKKbY1lnHIu4W47t+Axva0ovzlg\/xD5fTVW1\/zL7bum6QIJC+ajWZ4y9IYFTBdR\/nqqq30daMx630pfKtnbqLVokY35Kf0P2TWlhPTXkPl+6UuldJqLs53Id1jnbuj\/4Ls7DGk+ZpI401auMMv5\/QC6wOLa4t7UsRwndHny\/Xz9fVuvaad1l8s3N8uq\/eak0HABwXisETEhjmmxavunf230Eyg12fZ0hgbBepQxvcYhwvsJlDxQwe8xC\/NHaTfEXbt9x3gvmq2QhGB56JhzlxWAJ5tI3+6dTrrWho\/Ox8vpG+ctNtP8djzjbrWT9xP\/U\/Xe7j+BNQX56\/W3lIkKix2R6AbnhIXlrjifO0lcYaNXHGfg7ug+2gxbWbLpGKrxr\/cb5cW\/8VCQwbQ27cVwAAKEAxuJjAMN+yYH\/rwnwLw\/8NjGu+fWEMCYztom6SHx0lgWGINs\/uufGnXfKe2Ry4Da67zzcLZhHnh\/h0ealnx82GrMu8G5YnN9Xpuuje+V5ru3xP0UltT6HvfhNDZY63cm0xlO7LusrPu3Gme96Y9o6sr9r+iHIJ1tf+mUtfX3joSGiR9wHzmjnMBOVqde8AfaNvxlP02erY+7UZT3aoc++MWk31fU58WFTaoF4LUP2EjyunorxEvFJceRKqv2faz+qpGoOR22nsUe+101hjepwptBusGj2u+Y8hdszHuTM+M2XeEcZXcn5KZbnntDhYva4GmHddfEu1w5VHfZTxIV4LAQDgOigGZxIY5tsWSvICv0Li\/+XQkhPSvvv+j\/7p\/ZDdrD0abvGMDxB8sZWLKN9s0wI8LuLugDkuxNoGICqPnpcbZbZxpbro\/rj4U3HyIFDbdvX54DOntu+9rkHb6tpSbmvd82aMRbuDskKyvhodbAhX\/+hbfsM39DejRc4H7L+1+vZHaqNvxjGcs8PYsU28H\/9gTLlvlv1pIBpjHh8srG4F1U+kjwRUlMfnkSFT7gRUf2dxiBjHZEC0W2oat9UT6bOUxh7tXkV5S2usMTnO+LE4Wf\/1pvktWCWpuMbJrA\/aOylfLq4Xrqzl1lWOuZf7plkpPuTKBgCAOVAMTiQwwl8VGe2Hr5\/F\/0WSlx\/YMzV2lATGz375m+4Pf\/pz9+bNm+7Jkyfdixcvuk+fPvkStkl2s\/ZopDahweZZ3bib+3RN24CE98UirG4owueDunvsgj4UHtfF7\/coG92qtouNUFQ+o7LvEqZFqS3ltvK6Cs\/LcRBlhaR91dWhHmK0cc7UwZ\/P+IB9Tmq+T5IbfaMj08r7W258LXW+H2J9yxwUrbnD4\/huxg8sqfu11wl+X276Daa96ffzqP5u9ZSxxLUjqaH6Do8PIbfR2KDdqytvaY01JscZ6\/+BhgeKCXsgGddysHimvJOKXdZXZBwMKZdVta4KxjmtzPkJ8YHXDQAA10MxWE9gpBIT5rr4BsY1\/ynVPSQwnv76d2rSgkyylyRGerP2mIiN4UBwgPSbw3FjTUaLrLYBCd43n8JFWN1Q8DLGA6ssO64rSjCE5c9pu9iMROUzKvveY8tjbZm6KSu3tW6jNX2jlPJV+05i42brkuOsaatq4e\/Z9ij9CMZ1yQPU2khv9AMfCzWV\/87Os7I\/peE+7sZDbsRH0n7i2hCNYWV51ldY+YlyJ6L6u9qmgobF+JNjKY0T9xprrDE5zkS+vXxbwO1IxzXO\/LUyQI2DIeWyrP+NE3F63T3mXeOXri+iHRPiA68bAACuh2KwmsAw37Qwf+MiNEpUsHtXfPvC2B4SGFMwCQvNTBJjq8zRYXkSG79w0beLbOUGoH86eThWy+PPD89Ez8Z1jQddz7VtF5uRqHxGZd\/DthlY+0ptKbe1aqNl6zabJbK0Tpqv2roSmzaLpn1Yf1aLHvqslTMgDnk7I7fRJ7804zDM32h8pW6hb5b9KYkYu9wcyfuJa4OMP9XlSV\/S+laBGputnkGMskyZYynfLbCQxql7rTXWmBxnorHQ\/Qisk1xcG5D+xuZSYd4xSmtEuSzrg8MDNXW7d51fuvfYnJsQH3jdAABwPRSDi3\/E85Z29ATG8+fP\/RPbY44Oy+MWVbbxs4tqeE15huEX5mBDaTfHhQ1AuCjL58cy5eLtrvM9gNiIs43PtLazKsRmJG5bCLVzYt9Z2\/y9yZuycls1nZPPm3+zm2m0DWdaE8JtHAftvV+x+pNaGEjbsE8SpY87IrvRJz1DzRR\/CbXjvqloJ\/xJR4yrVo7F158tzz3D5+ec8sQhRfhWLWpstnrLBIapKtBY+rjavyksoXH5XkuNNabHGXdv0Me2JR4bsE6ycY0Q\/iXXh\/y849i4J\/zDXHP+o9Qv4mDVuiow747zWJ\/X4+cYXjcAAFwPxWAkMCpRN4cVvH37dkhe4FdIrsUtoONP4Y1pG0HluWHBpgXdLc7uPt\/Yxotw+GxvyuLvNh1yYxNvHuxz4YVoYz2l7faDQ25GhoOittGo77v9PJR36d+j50ttKbeV1zXx+aHdvYX9DmC+avUV7xljFXkC7awu5nOifq6FQ\/UBWb9W707Ib\/Td58j32Rjm5lnZPwbYOIp5YO\/xcbNk\/US0y5std1Z5PayN1x1m1dhsy9fKFXM\/0tCP0\/BMb4+hce7eCjTWqIozQi+6DNaPFtfYGHvfyq8PpXnHobVksOHZchysXVdDzLvxXFbiuNo2WTcAAFwPxWAkMCpRN4cT2UvywnCNDutCWdCXwG5glU32qrhR3x8Bu6ETm65os+Vp5qub8IHbsYUYESUQr2Tp8uawNt33qLHGftZEkAPjDAAA7aAYjARGJVi8HPvR4TaH+G385GG7CYxYX9eXNSUwjv7Tp\/XHiKX9fx3zaV2671NjDewNjgHGGQAA2kExGAmMSrB4Ofajwy02xO7roWvcZHPWexgo49oefnVVS14Y2vjqVnzgdiBWtgG6twG6HwOMMwAAtINiMBIYlWDxckAHsBXgq22A7m2A7m2A7scA4wwAAO2gGIwERiVYvBzQAWwF+GoboHsboHsboPsxwDgDAEA7KAYjgVEJFi8HdABbAb7aBujeBujeBuh+DDDOAADQDorBd+YfrcwkMLTrMBgMBoPBYDAYDAaDwWCh4RsYlRjRAHQA2wG+2gbo3gbo3gbofgwwzgAA0A6KwUhgVILFywEdwFaAr7YBurcBurcBuh8DjDMAALSDYjASGJVg8XJAB7AV4KttgO5tgO5tgO7HAOMMAADtoBiMBEYlWLwc0AFsBfhqG6B7G6B7G6D7McA4AwBAOygGJxMY715+0X32ubOnX\/843nv\/Sr8+w5DA2C7QAWwF+Gobtqr7\/fmuuzvf+0\/Xs3R5Jdau+9b1TYE4cwwwzgAA0A6KwXoC4+M33ev39PlD99Xnz7rXH931p5+\/6t7J6+G7FbaHBMYvfvXb7qdPv60y887W2coivpbNLbiC+3N3d7p0D\/5jLYv56pXtOBpNYsTVY3Tfne\/uuuVCxtLllZmu+0N3OT1u2\/agb4qtrIngOjDOAADQDorBE36F5Mfu9ZcuUfHD18\/Yty7k51rbQwJDS1BMsa2zlkXcJij6Dexo535LO7KXBIbtR3Awe7icFumXLHeVLJzAsNoFPjNZRiQwqgh1t5pL7R4u3UnRX312KrkxMveGcT91F+0h8X7OV\/g9HncGKsojPdR7FYS6m8N9WN9opr0LJzAW1pegGH\/SCmygb4qqOMO0SvQNrJLp82sp3DyV6\/01exvrm0tPAAAAeAQoBk9IYJhvWrhvXSCBEW9StOTEFNs6UodWmEU83Py5TeO4ebhmkV8zh9qAiENKLcxXzSEmOvBM3Gxe2Y6jEekuD7V0iFM25rMPdKkxsnUF9dvP8bizurO+ct+dg3upOFNVXq\/F8KxsbwVqbNb071uyWAJjcX09ppzTudda94kW+qaYHmdMW4K61bEBa2X6\/FoQ6a9X1mf98Sj7BwDArqAYXExgmL+FMSQp7N+\/oF8hMd\/MuO7vYCCBsV3URbwBbANr4V8pjg4WduHvr3kbb9Fm3r3v7qc2COZZcy981mxO\/U9K1HfDe\/Q8Ua577IcsJ+x\/rg6\/ab6YjdB4j+tTbofbSNE9b6G+xDU6s3d9m4PDQC1ZX81tBEvtSPQx8jnfZxond5gJyp3bsZXDdecaGOzcPZ97DRU\/HUXO+HTPRF+xmrPrsh6Ddi0g4ytx+YaK8qIDP80T\/7EC1d\/VtpfmotIGm1B4LH2pfvf\/PM4b2uibYnKcsf\/O+TxYM9Pnl8H5WTJ+Fe+PhOuKvm77j4bEPCV4AqP0Pt1PxQnD9H4AAMA1UAzOJDD0BIX51oX7I57Puq9e4hsYWnJC2nff\/9E\/vR+ym7VHxB6CwpVUbCT4Qt8vwMGizjfdtACn3g2hZ2mRHhdvelwtOyjL3o\/eT9ctP\/MNiKFUB20++MaCl1tqB99ox20grtHZ3R\/H1Lc7KK+WrK9GBxui1I5MH2WZ2cPLfpG6c38hX3K6jpe5dqrfC1+a5CvROIt6DWzTrpD0FVdWdMCuKI\/3yyD7Nh3V39UD1rS5OEmjSJvr9R39JaFFRXlL6puiJs5Yne3n5dsBbsv0+eXHOZgE0g9L9xm0dkR1VcxTzzi37KfC++5+9f4kUz8AAMyFYnAigTH+3Qv9vjPz7Yyvhj\/2WW9HSWD87Je\/6f7wpz93b9686Z48edK9ePGi+\/Tpky9hm2Q3a4+IWTjDzZ9dSDMbBAY7TNZsAuJn+YagJ9ywsnoIs8GnDUG5bnWDwBtQqEM5UPTwcgvtkHUk9RHU6Kz1Y2o9CdK+6tqiHh5q28Ge51qzsbLPxeOwRyLdjX6kkdHBaxnO4VgreSgIfLpyjKyv99rTTxBPzA8zvmBR7tv++PKiAa0rT9vwh7rUoPq7qqVrA2s60690n7OovmxstXfryltS3xS1cWbQK6EnWCeT59ek+JW5rzD4DJuUzr+mzlMD3z+U3i\/cn9EPAACYC8VgPYFhflXk5Yf4emjmmS+\/6X7Q7k20PSQwnv76d2rSgkyylyRGerP2uPBNc2\/KJjVc7O3CHT4vNsnTNgHxs3xD0GPepbLDfw+EZZTrVvuRqm8gLJcfqglebqkdfFMi2xQyW2etH0KLWlK+atufKndCO9J99PdsJ5X+2g2fe2fJA9TaiHUffZD576Cr0CrQiZv3wat8RcwHdRM+kvWVHucLQVsqy7Pvs\/KdFnP8Q\/V3tT2l+V66n+MafWW9ihYN9U0xPc5wbZzvpPsC1sXk+WWv9WMfmX+udF\/DviNinvflmnnK4m\/x\/cL9Of0AAICZUAxWExjjr4mM5n5VxPxBT7pGfwtjvu0hgTEFk7DQzCQxtsocHW6B2RzmNqF280grr1l0o0MGfa7ZBMTP8g1BT1iXuukIkwHlulk\/eqL6inWIA4WHl1u7UZH1ea7RWeuH0KIWzVfjQ4Wg1I5sH3vos1bOgD4meyGlu5mv5v\/Hfns\/vU9o6D9GlMYohxi\/aD4FFH3FYNsybtiry5P+1N+N5slE1Ngs2ucoxZ1yXEpylb5uXvDDkDf\/XEt9U0yNM7bt7Jpry5LJFHA7Js+vOfGrhPpO\/Tzl8+fKODCnHwAAMBOKwcU\/4nlLO3oC4\/nz5\/6J7TFHh1tgNohzExj23vC5ZhMQPxttqFld7vnwPt\/Elutm\/ehJbYLTzyyQwDD\/lgVosL77Oibr7No5jKndHPXvs77WwX3V61Qsr9CObB8Nvh7zTlIzRYsdocYIO9YnseF1Opz661wrfz05v+f6ingvOQ5+DLXyTF3BC3au5XzckinPt2l4R\/hXDaruVpvaBIb5GPjvY+rLcM9dV95y+qaYHGdk3V7XuD9gjdTOr3T8Kt1XsPXEfls7T\/m6X3pfmW8sTszoBwAAzIRiMBIYlaiLVwVv374dkhf4FZLrMQtvbuFUF2qzOPd2ulz6TW3m0CE28yPxs\/kEhsFtoOVPEh3lumU\/hk2G7cfwVKYOsYH38HIntiNZx8hVOgd9sxqaz4l6psB81Y7L2LbBpDCGQjvSfXS4Q63S16HM3rR6d4IeI7yPivFUtbI4f2GazfEV9pyIGfYeHztL1ldku4LDy6zyelgb5WFoOqrutuz6BMYwXtb6PkX3PYvrG+LaOZTZWN8UNXFGxtHcGgbWxfT5ZSjEr+J9Qcr3J81T8Yy\/6si9PyVOVPYDAABmQjEYCYxK9E35NPaSvDBcowPYJvwbHQ6zEV\/75ruZr9pDjLbZPAZbiRFR8vFKli6vlrXpvjd9U2BNPAYYZwAAaAfFYCQwKsHi5YAOx8P+1JAdHMRPRldKK1+N9ToW24gRyk8Xr2Lp8upZl+770zcF1sRjgHEGAIB2UAxGAqMSLF4O6HBE3OEh\/JroFr763MZX3VdyD5y\/QIxoBHRvA3Q\/BhhnAABoB8VgJDAqweLlgA5gK8BX2wDd2wDd2wDdjwHGGQAA2kExGAmMSrB4OaAD2Arw1TZA9zZA9zZA92OAcQYAgHZQDEYCoxIsXg7oALYCfLUN0L0N0L0N0P0YYJwBAKAdFIORwKgEi5cDOoCtAF9tA3RvA3RvA3Q\/BhhnAABoB8VgJDAqweLlgA5gK8BX2wDd2wDd2wDdjwHGGQAA2kExGAmMSrB4OaAD2Arw1TZA9zZA9zZA92OAcQYAgHZQDEYCoxIsXo496nB\/vuvuTpdu6n8Y9OFy6u6O\/N\/J3AiYs22A7m2A7m2A7scA4wwAAO2gGIwERiVYvBzQAQmMrQBfbQN0bwN0bwN0PwYYZwAAaAfFYCQwKsHi5ViHDg\/d5XTqLg\/33fnurruzdu7u7XX6bO77xw0Pl+40PHvXhfkH+w2M4YIr43wflk1lheU7Ow2VyHumPUSuTE+yfde\/S9d5m\/YP5mwboHsboHsboPsxwDgDAEA7KAYjgVEJFi\/HOnSggzkdyMeDOh3e7bckhl8L6Q\/\/wa+I8Ht6AiNMEvD7\/v3gs0F9ZqijVGaufRPe7fs9JlLGsvJt2j+Ys22A7m2A7m2A7scA4wwAAO2gGIwERiVYvBzr0MEd6sMcQpRUuD8HCQ6B\/cbCeI8f9OOybVkywcAr78sT34qwiQW6Vi6TwdpXeDfVz2Kb9g\/mbBugexugexug+zHAOAMAQDsoBiOBUQkWL8c6dKhPYNj7w69SGFs6gRGWTTY9gZFu34QEhpYIKbZp\/2DOtgG6twG6twG6HwOMMwAAtINiMBIYlWDxcqxDh8oERvhvA\/uGg7ndH+yHd+cmMILyIyYkIZLtq3yXKLZp\/2DOtgG6twG6twG6HwOMMwAAtINiMBIYlWDxcqxDh+sSGDZhIT8P705MYLBvPbh3xr9DIalLQvD2ldqT+hsYpTbtH8zZNkD3NkD3NkD3Y4BxBgCAdlAMRgKjEixejnXoEB\/qswkM+9EkBZydLpf+0D8\/geG+3UBl0VX33virGr0N75TLTLevrj38V0Rybdo\/mLNtgO5tgO5tgO7HAOMMAADtoBiMBEYlWLwc0AFsBfhqG6B7G6B7G6D7McA4AwBAOygGI4FRCRYvB3QAWwG+2gbo3gbo3gbofgwwzgAA0A6KwUhgVILFywEdwFaAr7YBurcBurcBuh8DjDMAALSDYjASGJVg8XJAB7AV4KttgO5tgO5tgO7HAOMMAADtoBiMBEYlWLwc0AFsBfhqG6B7G6B7G6D7McA4AwBAOygGI4FRCRYvB3QAWwG+2gbo3gbo3gbofgwwzgAA0A6KwXfmH63MJDC06zAYDAaDwWAwGAwGg8FgoeEbGJUY0QB0ANsBvtoG6N4G6N4G6H4MMM4AANAOisFIYFSCxcsBHcBWgK+2Abq3Abq3AbofA4wzAAC0g2IwEhiVYPFyQAewFeCrbYDubYDubYDuxwDjDAAA7aAYjARGJVi8HNABbAX4ahugexugexug+zHAOAMAQDsoBicSGD92r7\/8ovvsc2dfvQ\/uvX81XH\/69Y\/BO\/WGBMZ2gQ5gK8BX27AG3e\/Pd93d+d5\/up6ly7sFW\/T3PYwT4swxwDgDAEA7KAYnEhgfuneUtPj4Tff081fdO3\/9K\/bvZ93rj\/65GbaHBMYvfvXb7qdPv60y887WOdQifn\/u7k6X7sF\/fBweusup34Tf9XaDurdwEFuKxXy1iR9sl\/Yx4r479\/NnOTdfurzbsL3YvI9xOtSaeGCOMc5u\/3GQLQIAYENQDJ7wKyRB0sJ8++Llh+HeD18\/u+pbGHtIYGgJiim2ddayiNuDuDnkD3but68L0+LgauoUfbF9XagdW0hgPFxOi7RR+qotN\/CZyVUggVGF1D2eq3nts\/5u5weVc+ou2kNivNLjHiQLybSGTS6v5+HSnVL3bgzXfeyb2gbS8VZ+veg49bDy7rqTVmCjcaqKM1N0AaskHGc7xnLueJ+SvqQ+e2NMDGVzxPrdFH+bnsC4hQZL7nUAAPuCYnA5gREkLaKEhUho1BoSGNtF6tAKuUC7TePCSQyxIX4Ublyn3SBcs1t\/BOxYLtBG5qtmYxXoWuUvLfxgw8gYEW2m5yI34fZzPIasvuy4T9usTy\/PfQNgeFa298Zw3V3fTqe+fYrvmj6dzzfy68XHyegalGcPSbGurcZpcpyZqAtYJ9E4S5+x4xmvr8wvH4loLihJBZ3pCYy1awAA2BcUg5MJDJOssH\/rIveNCyQw1OTEFNs6UodWxAti+PVhv+G9+MV02CSOP5Xk1z1+oXf3\/PvDZlRZ2M1iHR4A2Pvhs4V6PW6zGzznCzB9HTcE1A7XX\/es2EQk2yHLCpmjmbln6s60Jfu+rPPUb\/7DZ6\/b9GR9Vdt8EVk\/6EnoG2vr+k594OObqHsHSN3Tm1fd51I+avULx4HeZ0Vr1wLYuNNcsncSVJQXHUinlL8cXHeqW2m\/bXPfThm\/\/Dujj2p9MeXRfV2XxceJ2uvu9FxZ3sLjNDXOTNMFrBVtfoVxzca587ngq1fOMUoQhKY47hhzXVnRI9YvxzLG+9Pn+WwNknW79\/X9CQDg6FAMnvYNDP+3LpDAiDcpWnJC2nff\/9E\/vR+ym7VHZFygPeEG1S\/a2uYgXBzdgZKekYuxL2PYcNLCbj842AHAPc\/e9\/fkohxvZAOiQ4V83\/cj2BDw+2O9BllXeoOgaRY\/z8uL26JpGr0\/3NfrtM+obawj66vRIYYo+UFGX1lm6JP231p9+0PqbnyIzdWBaT43EI2Ze589qswfBiuD\/Jcs2GQTFeXxuWGQvnRbuO6ubqON1H+YX6xvpblKWqXiTgDT2HDtOPm67OeEphXlLT1Ok+OM6FN\/IdYFrBY5zsM8spixNHNDjCkb82vnGNXhPvH6OW7O3yf8ui8n8H8+HyrmeU+9Brm683UBAI4NxeAJfwPjb7p3L\/1\/iUQkLPA3MKYlMH72y990f\/jTn7s3b950T5486V68eNF9+vTJl7BNspu1R8Qt0LTs+YVvWAjFAmpQD5C04Pb\/1O6bhVcs7KzM8H60OfWwxAoR1CthdTr4ol5oh0T0K71BSGmWa7vSlvB+SXOtzp7cxqyGtK+6dqsHlqIfCNjzvD+sH\/a5uK97ROpufa7v+2i6XkTaR2VZ7hs746OZcbXk79vxYmNfV57cjBtMe9PvLwvX3bXNasNiUzD\/Qr8uztWgPCIzL24xTkOZUZ115S09TjVxJq8LWDPROIfzyswf71OhL8VrwBVzTL4\/af5R2RlYuYU2SGo1kIg+2XZjQgAAFCgG6wmM9x\/8f2nEWPBfG4n+iyT4r5A8\/fXv1KQFmWQvSYz0Zu1x4RvB3tgCqxyMwoV2IFistfts4S4s7OzZALtAi7ZaS2wslHL4ol7eYLiDWFjXlA2Colmx7UpbwnJMu3Kaa3X2ZDc8FaR81WqgjZVBa3OFvmPbFW0CPecelraA1N3orfdXH\/+0j0rE+1bf9IY9O+6W68qzY8\/Kdz7wWGPNdU\/Ms9CX5b+zc1XxZzEv0lw7Tvx9N\/+C9xuP06w4YxG6gFUTj\/M4fmPcN5dpXog5c\/UcM\/WNfm79iz08Yu4Zf3ZzRdbp29u3PV7Daud5pQY96brzfQIAHBuKwXoCwyYqvnB\/A6M3++0Lumd\/pUS5PsP2kMCYgklYaGaSGFtljg63gBZoHWVjaDe5ciEPNgTafbZwFxZ2829lo6DXm0HZLPBFvbIdov70BmGqZiFKW2w5GU3D+1qdPWwjdAWar9r+C30ZJT8o6Dt8zmqn93svSN3Tc1XXIe2jAjEWOb8pjrvBjtl4QKguT\/qGOj9uB9ed1019YWMR+rXqr+FcLcSdHFeOk32eXXNtoX60HqdZccYQtQOsmdQ4Gz80\/z\/6j58394m1wX90VMwx+37vV4OlfYfaRWWy+SH9jrWrfp5XaZCt25WVmssAgGNDMXjSr5Dcyo6ewHj+\/Ll\/YnvM0eEWjAu0hnYwihdyvjF27wxl0mYhWLjZ4hrdF++bz\/aeqzfdVoGyWeCLemGDITYI9t1JG4S0Zum2e03loW9o\/zTNZXPiA8s8uK\/6thTLLfhBQd+hHvOOqrPBPZO8vXFkjDAa6T6kj3\/aR0PEOCU1TY\/7\/Xn0W4Otd3iuvryoP3KzfmM0fx\/aQn4ctofFGt+voMPaXGZ6sPdTXD9OkY6+L66MGeUtPE6LxBmwetS9j50Dp94f4zXA\/heAmGN63wiuVc0x8+\/Y0VV4zBW+Jvydr2GFNmjUaJCt23+e2EcAwLGgGIwERiXq4lXB27dvh+QFfoXkevgCLREb1AF3ffgJhlyUh02+sX5RNZ\/ZM+H7\/X25sLP3w8OR37gM93pLbQiUzQJf1MsbDLcpcHa6XPo2T9kgpDTLtZ3aInSx94ic5ok6Ax2v2eAzX7Ubp6AdZJoWBT\/I6Wuwm9L+XjRGQ5m9qWOwD2SMSM9VffyTPsrGRZRp70nf68mNu7wX+uac8gysjTxBcmu47jJO+Hkc6mr6oszHoU\/sXjnuDCw9TvY2vz6UuYJxmhxncrqA1aPvffycEfNAXQMs180xOQ\/U+dcTxVzve1R2WA5fwyrm+UCdBum6\/b1YNAAAGGIwEhiV6IvXNPaSvDBcowPYG8pmZ0U081V7iFEOVQehhe52s7ygIy5d3mOwhdi8x3HCmngMWo+z9XWRJIgSFQAAsFMoBiOBUQk2KQ7oAEaQwNA4+k+RHl\/3pf1w3X6dYv2xeZ\/jhDXxGLQe53hdcf6PBAYA4AhQDEYCoxJsUhzQAYys+6DXxlf1X4s4EogRbYDubYDux6D9OLv1ln79wv0KBpIXAIBjQDEYCYxKsElxQAewFeCrbYDubYDubYDuxwDjDAAA7aAYjARGJVi8HNABbAX4ahugexugexug+zHAOAMAQDsoBiOBUQkWLwd0AFsBvtoG6N4G6N4G6H4MMM4AANAOisF35h+tzCQwtOswGAwGg8FgMBgMBoPBYKHhGxiVGNEAdADbAb7aBujeBujeBuh+DDDOAADQDorBSGBUgsXLAR3AVoCvtgG6twG6twG6HwOMMwAAtINiMBIYlWDxckAHsBXgq22A7m2A7m2A7scA4wwAAO2gGIwERiVYvBzQAWwF+GoboHsboHsboPsxwDgDAEA7KAYnEhg\/dq+\/\/KL77HNnX70X99+\/6q+\/6t6F12YYEhjbBTqArQBfbcPadb8\/33V353v\/6XqWLm8uW\/X3rY8H4swxwDgDAEA7KAYnEhgfuneUtPj4Tfd0SFb4xMbLV91XSGBYfvGr33Y\/ffptlZl3tg4W8ZVxf+7uTpfuwX8EI4v5KjSuYt0x4r473911y51vly5vPk10v3pubH88sCYeA4wzAAC0g2LwhF8h+aAkK7Rr9baHBIaWoJhiW2cti7j9KVu\/UR3t3G9dr8OWucBB9eFyeryfAOJwnUT6qh2XwGcmDxE0riLU3RwmQ81Hu36+RphxGso\/dRdtwMRYZn1i6fIeLt0pdW8BQt1tO6TP+vplveqzU8nNjav1Ez4yRb8G45GPMzP6AFZJOM6XUz9+YvCW\/+bPg63nJCZO7XxN7WvUcm4RIwAAYAEoBpcTGObXRV5+ENeRwCC05MQU2zpSh1aYRTlc2N2m8QaHohnYtjzWzjR3gDg4zFfNxizQqcpfoHEVaoywG+PEIXYJ7GE5KN9+jseXxY2cTyxdXv+\/JpkzPCvLX4DI32X5tk794CUPSZMxZWpzY45+RqOgLHNvbOs0\/VqMB\/f36\/sA1gkbZzl2N4lvyyQwkjxWjAAAgAWgGJxMYPzw9TP3NzCi5IUxJDAILTkxxbaO1KEV8YLqNodu3TX\/7hfmi1+Mh02r2xDQT7\/khtpuDNjCnX\/ebQDG++d7+Xxi0Y\/e89d9fed71xd3X2ww2Lu+j0tsZnZI1ldzG86Sxonx44cVA9+AugNUUO5OB03VXdWb\/N1\/NJgNNPPnwhz0xJt6HwNYfdq1gKCNS5fnDgZh25W+XwnXnfuewcbM87lvU9gO2YeC3qW54VlCP1bGJP3ajEcuztT3AawVOc5hvI9iP5sn4RibMTc+aHyV7qd81vmH3EPwuaX4kIih8bpExOVfHyOoPVP6BwAA06EYPO0bGJ8\/615\/DK8jgUFoyQlp333\/R\/\/0fsht1h4Tu9CGq2K4ObULrr6whgu53QgEz9jPwX258PONg6tjbEP\/2d+T5XDG5wzaZiRc8Hkb5IbD9zMoD4xkfTU6TBAljTPjJ8sMfdL+W6tvf6i6s\/lJ0GbXfzQUNt98vgRE4+nGLVd2RFjGwuXF7ZZ+dj1Sdx6HTPuN\/qIfop95vSviz9X6ueeprkn6NRqPdJyZ0QewWqJxppgexbZ+3INx1uZQuMbb+2yuELp\/aOXl5pWc0yG2rDEY9P66TIxI72EAAGAeFIMn\/A2Mv+nevZT\/JRIkMAgtYSHtZ7\/8TfeHP\/25e\/PmTffkyZPuxYsX3adPn3wJ2yS9WXtczKIYLux2kRwWUbEAG9QDJC3Y7hNbzNUDV\/C8WNRD+KagAGtXYTOi9UFsVsBI2lf1jaGlVmP2PPe72J\/E2O4UVXfbfzmfpvh7Zg4KbAzoNaaf+p1Y2Zkxt8T3lyyPb\/IdMoZdS6R7GKOMlr7+sN6qmGfvT58bs\/SzbfbvBI5R1q\/deOi6z+kDWDNaXBt8PBjnCDZvnB\/yx1MxzT07+FJogx8p5Yk5aduYat\/SMWJCewAAYA4Ug\/UExvsPQXLCJCvwDQxCLl5Pf\/07NWlBJtlLEkNbxFswbByiBd3AD5KWcKEe4IttvFCLOqz5hTqzKLNyFOx9VmZmcxPWo\/UBm4MkKV+1vpPSbILG6fELx14Zy8Cn9nxoUXVXN74Ffy\/NwSwiBqj1j2R9wnJdedYvWPmu70v6Qaz72GYWkwaNhf4lvSfMjTR1+hncPHP1FfVrOB65NbGqD2DVpOOamBM9btzDOUTPiDlnUfYrFt0\/uB8p5Yk5aX0\/LtyzcIyY0B4AAJgDxWA9gWH\/06lfuL+B0Rv\/9oUxJDBqMAkLzUwSY6vM0eEWmEU5vfFTNgTqRsM8N2562QKe2JgMaJt5DytHIt9j9RQWf61N2Bwk0Xy1eFAtaZwdvx76rJUzkNqw7oP0Rl8eMGf4+1TEOOXmZNEnDNeWJ\/1G6\/uVpPzdxEnz\/2NdPu7dJ3zXf4zQ7ofjlaNCv4HQZwr6tRyP7JpY0QewbtJxTZkT4TX2jDbmfB8y4p69bQLD3V8sRkxoDwAAzIFi8KRfIbmVHT2B8fz5c\/\/E9pijwy2gRVdHOyC6hTVcyPlGwH8e7uubhxFXx3i\/\/+zLkuUyxObGbi5ymxu2+Is67WZC2ZwDC\/dVP\/5FrQoaZ8fP4Osx73AHDFDGeUekN\/rxJt3qR0JE\/lyagynk3EzpPdMnZpXnyhjeEX60BKruNn6cxKHD69pf5z7qryf1nht\/Jupnygsu2jg6tDunX9vxYLrP7gNYO+m4JsZQjKu2xoffIkvvF\/T5KJ\/Px1BxX2PRGOHus1ds+aUYAQAAeSgGI4FRibp4VfD27dsheYFfIbkesyiXNtrxmu2uD197FIuq3Rgoi\/X4NUnxDm0WrAWHs+C61ka3oaH7l75NfHOTXfxZnf175jM2ByrMV+2mctR9sNhJihqnx8\/hDi3KOA5l9qbVuxPSG33tp4zhnOx1jDa7hTlIsDET887e42NkyfnE0uUZWJmaFtehx2avr9BM9VFLTcyL58bAHP2iuoVGKf1S5T3SeHDdZ\/YBrJ50XIt9r7zGi7hn70ncs3IPESc88jG0mMCg9xeJEdQ\/+8ERxXQAAKiHYjASGJXom8Np7CV5YbhGh7UTJzDAlmnmq\/bglNqU7p+1xYil5\/Va48RWYvPexmPPayIYWWaclQM+AACAIhSDkcCoBJsUx551yH+rA2yNVr5a\/onXvllXjFj6wLDeA8g2YvP+xgN7g2OwzDgjgQEAAHOgGIwERiXYpDh2qcPwtd7j\/tR8j7TxVfd13CNvUBEr2wDd2wDdj8Ey44wEBgAAzIFiMBIYlWCT4oAOYCvAV9sA3dsA3dsA3Y8BxhkAANpBMRgJjEqweDmgA9gK8NU2QPc2QPc2QPdjgHEGAIB2UAxGAqMSLF4O6AC2Any1DdC9DdC9DdD9GGCcAQCgHRSDkcCoBIuXAzqArQBfbQN0bwN0bwN0PwYYZwAAaAfFYCQwKsHi5YAOYCvAV9sA3dsA3dsA3Y8BxhkAANpBMRgJjEqweDm2rwP+CvhRwJxtA3RvA3RvA3Q\/BhhnAABoB8VgJDAqweLlWJsO92fznz+tSUiUExi2zNOlf3J\/PFxO3V2y804bo+doy\/2nZR9bV8zZNkD3NkD3NkD3Y4BxBgCAdlAMRgKjEixejnXpcN+d707d+Zw7lEuO\/Q2MKQmM02VMMdikw0bFwpxtA3RvA3RvA3Q\/BhhnAABoB8VgJDAqweLlWJUO92f3E\/2HS3fSvilgr4\/fJnDncEpgmOQH3Tt1wZldObTLbyaMdaWeHZMA6XfdPVN32BZzP3yHt61cXqpv8j2eqHC4Z9h10th\/zNVf0qJG1yjRYtrB+ur6yIoTYM62Abq3Abq3AbofA4wzAAC0g2IwEhiVYPFyrEkHcyB2h2Pl4O0PuOO1\/rM9iNOheUwMyIN16bM9XNOhXh6sbdIkXTZ7d2gLvT8e6OkV\/vzU8gr1B585UkdfXvD8klpkyxJJqYfLuTv1bRkeTyWtAjBn2wDd2wDd2wDdjwHGGQAA2kExGAmMSrB4OVajgzgcy4N+dJgecIfy4Nzsnk0lCUQ9DpMcoWv8mwDxITz3btyWKMEQ9mNGebJvUfkMn7Cw34ZwxpJC12jRM19X065eg74v1J58PxyYs22A7m2A7m2A7scA4wwAAO2gGIwERiVYvBxr0UEejqMDsTi4j8xJYPBDvbOxrvF5UXbx3bgt5QRGXXmyb1MSGEPSIqzbcI0WPXN0dW25787mPfOO7YvSTwXM2TZA9zZA9zZA92OAcQYAgHZQDEYCoxIsXo516OAOsPHhN3P4Higf8uODtlZOAD0jny2+G7elnMCoK0\/2rSqBIT9fo0VPta7U9v7\/XRtMe0yCw3w7o\/BuD+ZsG6B7G6B7G6D7McA4AwBAOygGI4FRCRYvxyp0sIf68Sf1hD2cDwdb9ysI42G8\/5z66b045LODtjzEq\/hn+sM1Tw6U3o3bkk1gzChP9s2WH3zmKOVX1W\/wz0RazNHVjKH7r8zQa6aM87lvkyhbA3O2DdC9DdC9DdD9GGCcAQCgHRSDkcCoBIuXYw068INwiEtajGdk81P+\/llr03\/NIi7fvcO+7SGSAC55Isq15N6N25JPYBjqypN9CzWJkwfufX5daJqt35HSYo6u9p2w\/1YPTecYzNk2QPc2QPc2QPdjgHEGAIB2UAxGAqMSLF4O6AC2Any1DdC9DdC9DdD9GGCcAQCgHRSDkcCoBIuXAzqArQBfbQN0bwN0bwN0PwYYZwAAaAfFYCQwKsHi5YAOYCvAV9sA3dsA3dsA3Y8BxhkAANpBMRgJjEqweDmgA9gK8NU2QPc2QPc2QPdjgHEGAIB2UAxGAqMSLF4O6AC2Any1DdC9DdC9DdD9GGCcAQCgHRSDkcCoBIuXAzqArQBfbQN0bwN0bwN0PwYYZwAAaAfF4Dvzj1ZmEhjadRgMBoPBYDAYDAaDwWCw0PANjEqMaAA6gO0AX20DdG8DdG8DdD8GGGcAAGiHi8Fd9\/8Hpvr0ca\/W0wMAAAAASUVORK5CYII=)","d2b35f13":"The customers are then categorized according to their contact communication type. According to the graph, the communication type will be classified into 3 types, which are telephone, cellular contact and unknown. From the total number of customers who subcribed the term deposit (3314), 2783 of customers who use cellular have subscribed the term deposit. While 236 and 295 customers use telephone and unknown communication gadget.","de2c5758":"### ANN\n\nWhen ANN model predicts a number of 873 (647+226, True Positive + False Positive) subscribed , only 647(True Positive) of which were actual subscribed, while failing to return 226 additional actual subscribed (False Negative), its precision is 647\/873 = 0.7411 (TP\/TP+FP) while its recall is 647\/647+203 = 0.7612 (TP\/TP+FN). In other words, when the model predicts the customer term deposit subscription, 226 customers are predicted as they will subscribe the term deposit, but actually they are not subscribing. On the other side, 647 customers are predicted correctly by the model.","7ddac27e":"Predict the test set and calculate the ANN model score. ","efb7bb78":"## 3.1 Encode Variables","26983327":"### Terminologies\n\n\n1. age \n2. job : type of jobs\n3. marital : marital status\n4. education : educational level\n5. default : has credit in default?\n6. balance : average yearly balance\n7. housing : has housing loan?\n8. loan : has personal loan?\n9. contact : contact communication type\n10. day : last contact day of the month\n11. month : last contact month of the year\n12. duration : last contact duration in seconds\n13. campaign : number of contacts performed during this campaign and for this client\n14. pdays : number of days that passed by after the client was last contacted from a previous campaign\n15. previous : number of contacts performed before this campaign and for this client\n16. poutcome : outcome of the previous marketing campaign\n17. subscribed : has the client subscribed a term deposit?\n\n","13587f08":"![1.PNG](data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAxYAAAEtCAYAAACVnPbgAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAIDYSURBVHhe7b0J0CRFep8vaw9pVzta7ayMhBQrrI3ABDHGmCAICDAGdhywApaZkccghMEGA17MfRrwYvBgTmGWQ5w2mBsWDAKCZcV9LIe4lxtDcN\/mZjGHOPL\/f3L6HfLLyeqvuurt6p6vf09ExsxXXV1dnZXH+2RmVf9GEEIIIYQQQoiWSCyEEEIIIYQQrZFYCCGEEEIIIVojsRBCCCGEEEK0RmIhhBBCCCGEaI3EQgghhBBCCNEaiYUQQgghhBCiNRILIYQQQgghRGskFkIIIYQQQojWSCyEEEIIIYQQrZFYCCGEEEIIIVozsFhsttlm4Td+4zeUlJSUlJSUlJSUlGZo+tM\/\/dNe9F+fgcXioIMOCn\/2Z38Wnn\/+eaUxSRtvvHHYYYcdiq8pDZbWWGONcOCBBxZfU5o+3XjjjbEx+tWvflV8Xak6\/eAHPwi77rpr8TWlZmnrrbcOf\/7nf158TWnw9O\/+3b8L8+fPL76mNHjabrvtwo9+9KPia0qDJ+KgTTbZpPia0uBp3333DQsWLOhF\/\/UZWCz++3\/\/7+Ff\/at\/1ftLjAP\/9t\/+2\/Bf\/+t\/7f0l2vAv\/+W\/DP\/zf\/7P3l9iUP7v\/\/2\/USz+3\/\/7f70toi7\/+l\/\/6\/BXf\/VXvb+EB\/\/pP\/2n8B\/\/43\/s\/SXa8p\/\/838O\/+E\/\/IfeX6It\/+W\/\/Jfw7\/\/9v+\/9JdpCHIT8Ch\/+23\/7b+Hf\/Jt\/0\/urPhKLGYDEwg+JRTskFs2RWPgjsfBFYuGLxMIXiYUvEosJRmLhh8SiHRKL5kgs\/JFY+CKx8EVi4YvEwheJxQQjsfBDYtEOiUVzJBb+SCx8kVj4IrHwRWLhi8RigpFY+CGxaIfEojkSC38kFr5ILHyRWPgisfBFYjHBSCz8kFi0Q2LRHImFPxILXyQWvkgsfJFY+CKxmGAkFn5ILNohsWiOxMIfiYUvEgtfJBa+SCx8kVhMMBILPyQW7ZBYNEdi4Y\/EwheJhS8SC18kFr5ILCYYiYUfEot2SCyaI7HwR2Lhi8TCF4mFLxILXyQWE4zEwg+JRTskFs2RWPgjsfBFYuGLxMIXiYUvEosJRmLhh8SiHRKL5kgs\/JFY+CKx8EVi4YvEwheJxQQjsfBDYtEOiUVzJBb+SCx8kVj4IrHwRWLhi8RigpFY+CGxaIfEojkSC38kFr5ILHyRWPgisfBFYjHBeIvFokWLYnCYpo022ii8+eabMfH\/9DU6mpdeemnK9nnz5oXXXnutd8QveeKJJ8Kqq6465f0\/+MEPlvx\/zTXXDI899lhv7y8pfS7n6U0XYnHbbbdN+R5HHnlk+PTTT3uvfsl55503ZT\/y7YILLpiyLU2zZs0Kc+fODcccc0wM8EdBF2JRKkNpWmuttWLncu2114aPP\/64967FXHTRRcX3lBL7dskoxOLDDz+M9bf0\/WfPnh3r3Mknnxw++OCD3jsWU2oj8sQ14lqNklGJRVX+UPdLVO1PnV533XXDEUccMbI6ndKlWLz33nsx3sjLHuTldpB+Y+HChUv+T\/6ef\/754Ysvvui940vya8JxOJ4noxaLzz\/\/PNx8880xhlhhhRXi91xppZXCT37yk5ifd99995I63K\/O897NN988XHbZZUu1uV0yTLGgHB533HFhtdVWi9+ZvpY+hnp5yy23xH3yPptUKjf5fsQcN9xwQ9hyyy3j37vtttu0+fjMM8\/Ecm\/HoD5QLzyRWEwww5ixePHFF8Mmm2wSll9++XDddddNaXipYNtuu23YdNNNwz333BMbJ+Bf\/t5www1jQadDL3UK7HfWWWeF7bffPrz\/\/vvx2E8\/\/fSSSlUlJezHuSxYsCCe3zDoasaCBuDcc8+NDXK\/zo38IZ\/IL8tnGhxr5GmgDPL60ksvjR1DVUc7bLqasbAyxGeRFwaC9tBDD4Vddtkl5itl9Mknn+y9GqKYnX322UtEzgKPtFHm39NPPz3u2yWjnLEgzxCBtBN8++23Y96Sj6W6bG1ESSBeeeWVsOeee4bHH3+8t2U0jHLGgnzceuutYxn9X\/\/rfxUHD1JK+Umen3HGGVHyqtrFLulSLK6\/\/vqw3HLLxX9LtOk3kBbqGmWbNpjgugT78768D\/RilGLx1ltvxbqxxhprhKuuuiq8++67cbu1odtss01YccUVw4MPPhi3Q6mMki+vvvpq\/C5VbUVXDEss+D58rx122CG2bUD7eOaZZ8b+1vph8uL\/\/J\/\/s0RmTzzxxGK9p\/+65pprwpw5c8KVV165ZB8EhfcRd911111xWwk+B8lh35VXXjncd999vVd8kVhMMMMQCxsRyoMGCvTVV18dGxGC3hJUDioGhb5qNJ7G6qijjur9tRiCkNVXX71v4\/Tyyy+Hgw46yN3MjS6XQpGXXDc6z36d26mnnrrUSKeNeKRiYdBgkYcEdp988klvazd0JRZgMz+pWBg03Igb+ZAGHHfeeeeUclsSC6CTvfXWW3t\/dcMoxcLyIRULoA7SUZOPeYBX1UYYjzzySLj33nt7f42GUS+FomxW5U9OVX5+9tlnsc2jrI96mWZXYmF5wXeebvS2ab9BG7XjjjvG9rdqIIa8P+yww2pdvyaMSiwsUO43AGUDWGnf06\/O088feOCB8ZpdccUVva3dMiyxoN9gpqI0UEJ\/mw9CXX755bE8Ei\/Tz5dAHGjvKWMGec11QRb23nvvynKP3Oy8885h\/vz5S7XZnkgsJpiuxIJgjQrE0oiSLBhUjlNOOSVWECpXaTSeYx577LG9vxbDNmQDGaFxKkkJFYjGLu0gPOn6HgvygOljGviqRh55GEQsGFVi+cQwG5wqxkUsgEaZxpl9qq6pBdSU9WGVqbqMo1gA+Vsqa\/2CjHFhJogFWH2vKutd0ZVYEHTtv\/\/+Yaeddpp29LZpv8H\/2XbxxRfHgZ2qGQ\/a6GGV71GIhY120zcTAPeD5TYE1cZ0dZ5Bx1GW02GJBX1NVTlk5sKWQhlsY6Zrgw02iMvEc5CJww8\/PA6+pPA59FX0W8hFOluUwj7nnHNOvBYSCzEUuhAL\/qbxvuSSS5YsyamCykFHSCNNY10ajeeYJbFgm42mlKSk1EF4Mgqx4HuTP1WdG3k5iFjQ+NEIcv2GlU9VjJNYAPtQjlhXbVP9KRZQjyKvcsZRLKyDLHWqeRthcO2R5XFgJogFgsyoPWWdpY6jpAux4PsecMABMahiloz6y2xDOrKb0rTf4P9se+ONN+L+vI\/35zMeM00sGO2mn1t\/\/fXjTM4gVJVRIL+JD6v6pS4Yllg8++yzYZ111onfm\/sqpouBgLpKXrCstjSwesghhyw1I2Gxk\/XhpXJPm0z9QFi4FhILMRSGLRY33XRT2G677WqvM7XKAYzAl0bjrTNISbdVSUmpg\/BkVGJBvlZ1buRllVhwv4DBsicaJO5xYd1n\/p4uGDexeOqpp+IyCRL\/z7GAmrI+rDJVl3ESC0Z8WWfN+nXK5NFHH73UKHApyKAc\/+pXv1qqbo+KZVksCF64h4AljZTz3Xfffamgt2u6EAvu09t3331j0MX3JVBk9DYf3TWa9hv8n21W3qtmPKyNHgajEAtrN5u0eVZGV1lllSnLghi0sXsGt9hii9gPjIJhiQVwHwNyQd7RLtLO9YuHXn\/99bDZZpvFmMLuywDec\/zxxxdnPyx2snwulXuEJd1HYiGGwjDFgoaCp+xQmVg\/Wadjs8phlEbj087AyLeVpKTUQXgyKrGAqs6tn1iUEt+hqhMeNuMmFpQXGt6q4M5eb9LJejMOYpGWI9I+++wTHn744eIInbUR+XtI\/a5JlyyLYpHnJYESZT0Xu1EwbLFgdJY8S5eW2MgvsUcpkGvab\/B\/tvEa0LeVZjxmmlhY31HV5vFdKbNpGbTgtV+dJyGEpZnhrhimWABlhPLAwxT4vtzgzmxGFcQS7JfGFOxPPpViqTR2stm6tNzz0AFmKxAVuxYSCzEUhj1jwQ2YdlMWT0XgaRL9yMUCTC5sND7vDKC0zToJk5JSB+HJKMUCTC7Szq2fWKT5TJ7QIfMkpKpR5mGjGYvmjNOMBXmb1tcSaRuRlmGWlnT9RK0qluUZC55mlrZ948CwxYIBEW5KTcucLd0hL1jzn9O03+D\/qVgAn0t5oezbjEfeRnsyCrFgKQ\/tJk8sq3oAC\/0GTzRiPwJZW7JTqvP0UeShPSGJlN9z0BXDFguDfu7QQw+NgkG68MILi9JrZZeZC2YwgHzihu8SaexEWeS7pOUe2SA+4bPsWkgsxFDo4h4La2gIWHnc3HPPPdfbc2lKYkFFsKU+BM50IHXEAlIpef7552e0WEDeudUVC4NH\/3GNyOuqRzUOi3ETC\/YhH6o6URpkicXSYpHX15KgloKMcWNZv8ciH5AZNcMUC7uhlTpdlarWqzfpN\/h\/LhZgy6kI6BCUmSYW9L0ssakSNcPa17SPma7O81sM3BtAP5ou\/+mKrsTCYDaXfKzKS8oqZdbyEblgtoL7JErksZM9XYqb7an\/1D+bIbFrIbEQQ6ELsQCWQ9gTNFhrWLXcJq8cRjoaT+WiLKVUdRBpkMNNjFSutIPwZBzEAtLOba+99op5mkL+5o1+Ch1mv9eHxTiJBaNs9lSoqnyQWCwmFwswwaXepUtDjOmCjHFg3MWCNpF72MjbUn5am0kZrhK8LhmmWBCY\/cVf\/EXxKTrcyE0wXApYm\/Yb\/L8kFpDOePDeYZXvUYhF2i4SsOb12mgiFtaOjKpNGJZYcN9P1ROabKle3kcbduM3D8Hg0fH9+uQ8dkqfLsWDc7g3w66XXQuJhRgKXYkFUKgp\/Gwn8f+8YcorR4oFK1TEPCCs6iAg7WA5r7SD8GRcxAKscys1WuRv3ugbrMNk7ScdKj981CXjIhZIsP2ORb\/RXusI+RHCLs65H+MmFmCCy2ACo5FpXZ8uyBgHxl0sCFgQC6jKz1TwKNN1nkgzLIYlFpQrYouqfiOdzcj3adpv8P8qsQCb8Rhm+R6FWID1LaV6bVj7mub3dHXeBHC99daLs0RdMyyxIC9Y+lQSe8SCWZqq3+yxsk1eTjeTw+ekD2QBExfudU3znP6KfktiIYbCMMTCfmGTCpM\/DYqOjZ\/8p7DT2dF5M8rEPryGlTMikjbiKRaspAEh7+UZ2FtttVVco13COti8g\/CkS7F455134hIdfkyoKliwzi0VC0acyLu80ecYPEWGH33itX4B9bDoSiz4rnV+eZunmXFOVfCkDzpCfveDvBsloxQL++VtEv9PsTJI4legbRrf2gh+nZc11aXgZNSMUizo7KnftKG33357b+tiKKf8PgDX3JaV9mtzLRCkTBMos9xxFPk9DLGgLvN9uQ+KJ+WUvhfbGCShvpMPd999d9xGatpvEPiy9r3fZzLjwXnNNLEA7uHhfjzuEeB+PCtTXA8eQ\/vTn\/50qT6m9MvbwBMJb7zxxjgyTxktzXB2wTDFgu\/FwyzoJ8gjEnWY8jjdbCKzcexH\/FyVLxyPPi2Pnew+jfzRs+Q\/x6T\/0i9vC3e8xcKC1jSlVlx6ncSUMQ1Oui0NiFPoKJnWA47L8dP3VY1cISVU4mVdLPh+6fetGnWwzu2OO+6If5Of6fvyRPBHZ\/m\/\/\/f\/XnLDXZd0IRY0qHk5SxMjO5RF8ozGugTlh0Ajf+8wpXU6RiEWdfKBMshIefo6I2Xp36Rhjpw1ZVRiUdVG5sl+HX+6Nhds\/bq9XtVGDpNhiEXeFqYDBUYpfxjAatpv5MerqvcEi9xbOBPFAugjuJmbYJybri0\/+JVp6g03GVflWZ54D+3CdI9hHSbDEosHHngglgGWNZEP9LN857lz59bqaxGCk046qfKellKflpZlYgBbilWnzfZCYjHBDGPGYlLpeinUTKPLpVAzjVHOWMxURr0UaqYxzHssJpFRi8VMY1hiMalILCYYiYUfEot2SCyaI7HwR2Lhi8TCF4mFLxILXyQWE4zEwg+JRTskFs2RWPgjsfBFYuGLxMIXiYUvEosJRmLhh8SiHRKL5kgs\/JFY+CKx8EVi4YvEwheJxQQjsfBDYtEOiUVzJBb+SCx8kVj4IrHwRWLhi8RigpFY+CGxaIfEojkSC38kFr5ILHyRWPgisfBFYjHBSCz8kFi0Q2LRHImFPxILXyQWvkgsfJFY+CKxmGAkFn5ILNohsWiOxMIfiYUvEgtfJBa+SCx8kVhMMBILPyQW7ZBYNEdi4Y\/EwheJhS8SC18kFr5ILCYYiYUfEot2SCyaI7HwR2Lhi8TCF4mFLxILXyQWE4zEwg+JRTskFs2RWPgjsfBFYuGLxMIXiYUvEosJRmLhh8SiHRKL5kgs\/JFY+CKx8EVi4YvEwheJxQQjsfBDYtEOiUVzJBb+SCx8kVj4IrHwRWLhS2diMWfOnPCd73wn7LXXXkpjkr7xjW+Eb3\/728XXlAZLX\/\/618Mf\/dEfFV9Tmj79xV\/8RRSLHXbYofi6UnX67d\/+7fDd7363+JpSs\/Q7v\/M74Zvf\/GbxNaXB07e+9a3Y35ReUxo8\/e7v\/q7y0zERByk\/\/dIKK6wQZs+e3Yv+69NILH7v934v7L777kpjkghIaKBKrykNlkwsSq8pTZ8YdUcstttuu+LrStXpt37rt2IjXnpNqVlCLAg0Sq8pDZ5MLEqvKQ2eZs2aFfvv0mtKgyfEQvnpl\/7kT\/4kTiQMipZCzQC0FMoPLYVqh5ZCNUdLofzRUihftBTKFy2F8kVLoXzRPRYTjMTCD4lFOyQWzZFY+COx8EVi4YvEwheJhS8SiwlGYuGHxKIdEovmSCz8kVj4IrHwRWLhi8TCF4nFBCOx8ENi0Q6JRXMkFv5ILHyRWPgisfBFYuGLxGKCkVj4IbFoh8SiORILfyQWvkgsfJFY+CKx8EViMcFILPyQWLRDYtEciYU\/EgtfJBa+SCx8kVj4IrGYYCQWfkgs2iGxaI7Ewh+JhS8SC18kFr5ILHyRWEwwEgs\/JBbtkFg0R2Lhj8TCF4mFLxILXyQWvkgsJhiJhR8Si3ZILJojsfBHYuGLxMIXiYUvEgtfJBYTjMTCD4lFOyQWzZFY+COx8EVi4YvEwheJhS8SiwlGYuGHxKIdEovmSCz8kVj4IrHwRWLhi8TCF4nFBCOx8ENi0Q6JRXMkFv5ILHyRWPgisfBFYuGLxKIPb7\/9dthqq63CgQceGD755JPe1v588cUX4cQTT4yB5gsvvNDbOp5ILPyQWLRDYtEciYU\/EgtfJBa+SCx8kVj4MlZisWjRohhc5GmFFVYIm2++ebjxxhvD559\/3tt7+Egs+vPmm2+GjTbaaMl14vpNR\/6ePNH5fPjhh729ly4Tt912W++Vas4777wl+1edE9vzz2pDG7F44IEHYnA4a9assGDBgvj3oLzyyivhmGOOCeutt96UfHrkkUfCyiuvvCQ\/0rT++uuHl19+Oe4Hzz77bNhhhx3C7NmzY5077LDDwltvvdV79UvYRqDAPqusskq48MILw6efftp7tRlNxaLpuVx\/\/fUxv\/M8IW299dbh\/fffj\/tRPk455ZSw5pprxtf4l7\/zckO9v+GGG8LcuXPjcbfddtul6v8HH3wQO6\/88yxde+21vT0Hw0Ms+D7UBzuXunWjqs0mrbrqquGJJ57o7RlimUxfL9XN\/DxoK2gzckrtiGd99hALzuX4448PK620Uiyfxx13XK3zG6TOQtrekZZffvlw11139V6dynvvvRfbqR\/+8IexnPJeg3OrU9ab4CEWdepYiUHz06A9XGeddSr7nNdffz22uUceeWRvy9LU2acJHmIx7Pzk+Pfdd9+Svo32uao8NWnHL7\/88liOS+3DoHiIxbiUzzr5\/tlnn4WDDjqo+JmkU089tbdnM8ZuxuLFF18Mm2yyScyMxx9\/PG4jaKKR5wtTQdsGMWIxbcSCgIHAwTpz+7sqkDdsv7wgW7KOjmNagEHFSf9OO8OUtIMtBRl5MFLapylNxeLee+8Na6yxRrjqqqtiZadhIn9uvvnm3h79QbQvueSSGLxss8024cEHH1zynWhgjj322LDlllvGepMmKj0NC58Jjz32WGzEOA+OST0kwEasEWzDZPvggw+OgfJLL70U5s2b17peNhGLpufy8ccfhz333DNe\/zRPSBtvvPGS60jeHH300VG2aIOAf\/mb7ZZ3cOWVV8ZG\/u67747bzz333LDWWmvFfDUI9ign1JH0M\/fbb7\/Y5tlnDEpbsbB6YUG8\/T1d\/UjrZCml77e6ae2D\/Z3uk9dPS7mgpG2IdaomLfYd2tJWLChj+++\/fywrlG1EdaeddorHpKxWMUidBco8x0z3o+zx+Skc9\/bbb49tzaabbhpuueWW8Otf\/7r36mBlvQkeYlGnjuUMmp8G18hijjxwY3\/a7bPOOisGwqU+r84+bfAQi2HnJ30YfQrHp0959NFHw4YbbhjrRVo+m7TjnCPi61XfPcRiXMpnnXx\/5plnYl9HvUw\/k2vAd0B22jB2YmGdVd6ZUNg22GCDOBpDhRXtaSMWNJQU6ioRqILXSo0s29Nrzt8ca7pthp1PVUOTBiOW0qCmLU3EgtFDZIDA0hpQGhEaE4LFNKAvwXuYHVtxxRXDxRdfvNRsHgHNnXfeGRuvFGbf9t577zhqDzQ2u+22WzjggAOmNGJICiMp9r04zumnnx7WXXfdKB4Gx+Ec7rnnnt6WwRlULNqcC43qQw891PvrS959991YJ6xRfe6558Laa6+9VHkmKEvLmbVNJ5988pK8puGnoyKfyV\/ylXMrlbcrrriisgOpQ1uxyIN+yOt3Cb4\/dSivb\/xN\/th77e\/0eKVtfKblddqeVJ1b2g7UbX\/q0lYsrrnmmlh37r\/\/\/t6WxSOTDJgx0lpF3ToL7EPd7Be4APtdeumlsV6ccMIJS0kH1C3rTWkrFnXqWIlB8tOgHjK79Nd\/\/dexjFWVJ2SRwZe0bObU2acJbcVi2PlJ38Xsez7yTb1YbrnlluzHcQZtxzkH+kwCYY+yCW3FYlzKZ918v\/XWW4urEYitGUzg3NuwzIhF2nEwqira01Qs0qCgFAj0a0TpVNk3h\/fwfnvNgoe04UjlIA14+D\/b8jJTIj339PPa0kQsyDumKgksU+jM2V5qVFLISxqL888\/f6mGqR8EEVR6G5l86qmnwuqrrz4lT4Egf\/vttw8LFy6MQfcbb7wRp54Z7afhM2gc+f5tgmOOwTWpKxbDOJe8UbVgi44vzV+WLNFh2H7kW2nA4+yzz47BZb\/Rn34dSF3aiEVab9Prb\/WvXx1hyV6pvlGu07rI3xyLVGov+JdOLg+40\/qenoedG8nOOT2efUYb2oiFnYvVG8PqU1p26pLXWbD8WW211cKhhx4ann\/++d4rUyE4Y9ScQKxqBLhuWW9KW7FoU8dKlPLTYMSXmQbL36ryZNe5X39XZ58mtBWLYecnwTJ9WJ531j5buz1oO075ZXkhg158h3ERi3Epn3XzvQpmTwaNY0osM2JhJmYXj7WL55xzTjRdMhpT\/N73vhfX5tEwchzWlTFCREbT+eZr12ksMT+WkeT7UIC5ODvvvHPMJIPtfAbHZS0672EtOp\/H57Lu7aijjgpbbLHFlALPa7\/61a\/iCDWfRUPPRbY1eByXqavdd989fh4jHVQqPoM1e2leeNFULMgX69jTAlwnGClhwb4FCWDHSstBKgXWUFvlYlv6\/irGSSyoxJQFGoMUlgBSvni9Csr\/ZpttFsvfdDMbOYxeEohYAGF5WPo88hnpQD6od9S\/ww8\/vPfqYnIBacKgYuF9LuQFbVRahujQWAZCXUXeqKOvvfZa2HHHHZeUSRpp6rHlUQqCyHfKxTGF2RPaBDrYprQRi6r6w\/\/Z1qTjpsykdSttL0p1vOozSvUd7NzSY9r3SPdrQxuxsCCd93\/00Ue9rYvLGEsNeI19BiGvs\/CLX\/wifgZiQT7QVxBwUE4NrgHXguUN9E1V1CnrbWgjFm3rWIlSfsKTTz4Z76kkNrAylQdphuVtvzJXZ58mtBGLLvLT6nx+HMsPln7Sbw3ajl900UXhggsuiJ9DvW\/SPpVoIxbjVD7r5nsJtnNfiEd9H1uxILB6+OGH4zaWjNAgk2G77LJLXBtKYTrppJPitn322SecdtppcR0ZwTj7c6FZ80YDSdDCSCRr8rgwQKNJ8M8IDZ\/5zjvvxClLa4C5cHw+4pI2CowsbrfddvGYLD1BavgsjsFnvfrqq3EEMi\/w+bo3zoOLzDkxlU3h5F8+j3MlSKWQsj6OY3mMGuU0FYu0Y08LNfnEtkErO8eggqQF2o6VfkYp0LBz4f1cf3tP1Tmkx6Cccd08GFQsaDAo0\/n3Bmsw8qVJKTQclg9HHHFElGMCC8oeZbAKpmTZJ725k5vDKJsEuNQdg6CIwMXO0RpJ8jzF6izHqLrRbDoGFQvvc6FRpd4R6KdQ55B9PouBDQYNOFfDOsBSebNGvt+NcHQgtI15BzIIbcTCzjHPy7ReDdLRWP1Kj5V+RtqWTtdeWD1gH2sDwK6xHdNSXhba0EYsbGAg\/a4G21jiwYhrXUp1NoWyw82a3DvBQEU6g2mB26677hqXQdHfsA913fpCY7qy3oY2YtG2juVU5SffH7kiNgArf2nZS7FyWLrORp19mtBGLLrIT8o35ZwgOBVd2lniHvvsQdpx4iMGkO14vKeq7RiUNmIxTuWzbr6X4PP4XD6\/LWMrFjR+3PhCsMSFoUGkUKXBtV20q6++urdlMQT\/ZGwalNkUkY3KsjY9D9Y5PtZJMA+YMsacNgoU5nRNPA0469c4b4PPSC+gjS7ngaetYed4iIV99\/T4gM17VaCUYYnFoMEI7+N7p3mYBhX2WrqN91h+pZ9JHpFXbCvlWfp6\/pltGFQs7NxLeWXfs9\/58f0JGJgWptFAVq+77ro44khQUBUQEDgTQPMegzLMzB31w55cQ3m86aab4rpRy0e77lWdQOm71GVQsfA+l36NKnlFW0H+MPBAEGdYeSqVNWuf0vYjpaoDGZRhigUprePTwb553ts14Vj2WrqtlHdg51BVD9JzTI\/tQRux6Hfd2cZrg+Rpqc6WIODgplfaIltCYXlEIMo6cNoJ+h3603SgzehX1tvQRiza1LESpfykv6XfTtf0U5YoU1XXyspwv8+us08T2ohFF\/lpbRv90c9+9rOYv8RaDIgR81idtvLJvymWb1anKdsMtKWfwXuq2o5BaSMW41Q+6+Z7DjEAMToDXR4sM0uhSthFyys+gTjbS4nOgiCmzg1VpUaBWQRmFZglqVrTmhd4zo+GOj9PM12z8tLngWcFShmHGQurlHnDAlZx7LPSxOfae\/k7rTBV5wdV72nLoGKB9NJQlsq5fe+qGQsrJ\/nUK40Dcsx3q5p6rRohp0E644wzlizxY0qUZRWMfjAjh2iw3ppj59fKzqfLGQvPc+nXqFqHxo2F9lQdZocYaQO7ObNU5il7nGPVaFXdgHE6xmnGgjagVK\/suthnpanUDls9LeUrcH6cG+dv9Zk06PlW0UYsbNSw9L3YNuiMxSCzWkgq5ZOZCuDz6Hvy5ZYMxpFf6fLH6cp6G9qIRZs6VqKUn3xHHoCRbrN2OO9DDCvTpets1NmnCW3Eoov8BD6HWS+CXBL9CMvTKY9W7uq048RZ9Gv5Qwp4T1X7MChtxGLcymedfM+hD6Ivok\/yYEaKBZW4X0Xm4lMIpqvsVY0C7+fZ1N\/\/\/vdjAJavXc0LvHXS+XkCx7bvWvV5nhUoxfMeCzt3tvEvf9eB99cNBsgXjm95Ydcx\/8z0\/PIGq+o9bWl6j0UpyLDApKoRsCVKpTJhSx\/y7w18V5YSWtDRDxowZi84lgUWduy8kbSGdRT3WHicC\/c30Knk694tv9IZUUZ901FhW19bEhnrNKskj2tUdY0HYRj3WOR1rQ5Wt0plL6fUhqSk7WIOx+d91k6mdZpU5\/Onw+Mei3xgwAYTBrnHYpA6C+QFN8OaSDDIVspHO0fLwzplvQ0e91g0qWM5pfxkm\/VdVamUh\/Y+y8MSdfZpgsc9FsPKzypsND3NyzrtOKP01kZVpbZ9eRuxGNfyaZTyPYc2mH34Lh7MWLHguch5YEHDTsPJE0gotCwZyUcL+duOZ+dS1SiwHp3X5syZM6Ug0LGlHbIVrpK18n67oabq8\/LjedFULNKOPM8rtlXlVwn25X28vx+UBWtcSp+Z5o+VC1IeZKTnXudz69JELDhPRhEoHyn8XZrhSiEgZXbBfuvFsHziJrccXqMzqhNwMzrEcWhsaJjAnuCRB0w0pjSqpZvN6jKoWHieC\/lcalQRPH5wMG+H2M60sl0fylhJEKnvVe0Y5W6QgLEfbcQirUNpXaFeDlpHyI867Xb6maW2gvPgtVL5T+tver7sy7Z8e1PaiIV9P\/oYAiTDgqVB8nSQOgvUI\/Y3ESCgIU\/yWQfLR7tptm5Zb0obsYAmdaxEKT9pP3hoC0s\/02SfyWj5L3\/5yynXEuw69+vv6uzThDZiAcPMzyr4jSYkggEra5vrtOPEWeR\/fn24R5HlfNxLy\/VL3z8obcQCxrF8GqV8T2Eb+VxXfuowI8WCDCIwy5\/ZzXrRn\/\/85zEjOR\/2Offcc5c8\/5\/1aARkNh1kS5XSRoEncTCSY1hnwUU2eMRYGujSyBN4EgCkImPvtWmvqkaIY6fH86KpWADnmHbidu7p9agKAgx7vfRaCuWA8lA6Dn+zPS0vVi5KZSg9J86X8\/agiVhQFigT6SP1+Je\/87LCLAXl0+DxdXT4+eMhub+IkcjSlCbnV5LbHGSFG+EpmwQqBp9D45SPYPKZNHClZ47XZVCxGORcqN9Vx7X8zuUOLKjimCl0epQhkwL7BdT0+rOulY4qFbMUrh\/lr6ozGIQ2YgFWh9J2J6\/f09Vl4D3T1am0nSjta3U9b9PZTueankd6vmkbkb+3CW3EAnh0LuKfPmaS\/7Mtfawu5ZiymdbhlLp11iCI4Pn2djzre\/KbOTkXllLa\/T11y3pT2opF3TrmmZ9VZdGwspyWw5w6+zShrVh0mZ+8lzwkL+2JRgavNe1TaIcom7QJbWkrFuNYPvvlewr5znlS170YO7FgfScj+BgWN6NWXQCCBdaA05Hwr8kBkIF0CrxmT3Xaa6+94pMxLHOZCsaIkQt+9ZBHxjLty4W1z2Qf3k+AxVOjgMLMsZEL9uPJUdxkbg0yBYj7L2ik0xvfeEQtn4VlY+A08ggIsyZ2lz\/H5GZZzseCSo6HzefH86CNWFihtuDA\/k4bUAo114BUCiJ4vV\/DkAYRpFIFsoab1+2z+Tf9OyUNQLwaJWgiFsDTwjgfAgKCXH6jhb\/ZbrDGlNFEu8kfKHs8\/YVHTfJjN5T\/p59+Oj4ZpvS7FpR7fvk3H1Ex2J+nSfEdWFfNr3SWgl67QZSRTsomn0l97feM\/DoMKhZQ91x4UANrTe1R0in9GlWOSafAMbnJlTyi7lKHmW2w8mzXgnaA9oD3kY\/9fnV1kA5kOtqKhdUzqw\/2d1pnp6vL9p5SHTWsXpJKddOOYfukiTpB3QUTITtfsGOXzq0JbcXC+iDqHPWI8s0aZralHTz1nd+iKf02U786S5vAY8iZubT+hIeI0I+lxwdrY+xmTjuXtJ7ULetNaSsWdetY0\/wsMV3gxjXI++ucOvs0oa1YdJGf9EnEUDy1kHiu6scZm\/Yp4yQW41Q+6+a7QeyaP+yoLWMlFmnHY6lUcGjkLJi0lHcoXCRMmCCJm1HJuPyXBvkNCRpYXmckieDfCnLakZLsPLiBhgadQIXtiAcCxMUsdYx20Sl4NPAEfmznvLjwNiKcBrwkKzBVx\/OgjVhA\/n3zkcz09fw14HqXAoz0+pIPFlD0Iy87eT7l+Zsmj2CkqVhQLlgPbY+K5DGQ+a9CU04pc5ThdLkOZZUyy3Qw34N9rCzmMELJb7LkQQfYdaJM01khsKVjGPZIZeoN5Z+bzfp1AHVoIhZQ51yYKma5YkksaFTppKsaVcoFN75ZHvMvf+flhfxiSp5z4Fx4bKf9Rk0O14BrkY5mt6GtWEBa50h5vZyuLltbxX45JgJV74W8LclTXkf5vHyfqmM3oa1YAEJhN1HSv5TKDTPo\/P4S\/+b0q7NsI+inrNFuzJ8\/P9x4443Feksbw8AF7QP5RBnmtwDyYKNuWW9CW7GAOnWsaX6W6CcWpVgl36\/OPk1pKxYwzPy0vCPOYVAXWaAcVtGkT6G+V7U5g9JWLGAcyueg+U6\/R1nKZyrbMnYzFqI72oqF+JKmYiEW01QshI9YiKl4iIX4Eg+xEF\/iIRbiSzzEQnyJxGKCkVj4IbFoh8SiORILfyQWvkgsfJFY+CKx8EViMcFILPyQWLRDYtEciYU\/EgtfJBa+SCx8kVj4IrGYYCQWfkgs2iGxaI7Ewh+JhS8SC18kFr5ILHyRWEwwEgs\/JBbtkFg0R2Lhj8TCF4mFLxILXyQWvkgsJhiJhR8Si3ZILJojsfBHYuGLxMIXiYUvEgtfJBYTjMTCD4lFOyQWzZFY+COx8EVi4YvEwheJhS8SiwlGYuGHxKIdEovmSCz8kVj4IrHwRWLhi8TCF4nFBCOx8ENi0Q6JRXMkFv5ILHyRWPgisfBFYuGLxGKCkVj4IbFoh8SiORILfyQWvkgsfJFY+CKx8EViMcFILPyQWLRDYtEciYU\/EgtfJBa+SCx8kVj4IrGYYCQWfkgs2iGxaI7Ewh+JhS8SC18kFr5ILHyRWEwwEgs\/JBbtkFg0R2Lhj8TCF4mFLxILXyQWvnQmFnvssUfYYIMNwosvvqg0Jmnu3Llhq622Kr6mNFj6Z\/\/sn4Xddtut+JrS9Olv\/uZvoljcddddxdeVqtM\/\/+f\/PGy33XbF15SapYULF4ZNNtmk+JrS4GnzzTcPP\/zhD4uvKQ2ettxyy7DhhhsWX1MaPBEHMThYek1p8LTTTjuFP\/uzP+tF\/\/UZWCzmzJkTAwclJSUlJSUlJSUlpZmZvvWtb\/Wi\/\/oMLBZHHXVUWLBgQfjss8+UxiQxVXXQQQcVX1MaLDEbd\/LJJxdfU5o+Pf\/887ExevPNN4uvK1WnP\/\/zPw+HHXZY8TWlZmmfffaJS3dKrykNnvbff\/+w\/fbbF19TGjyxtIylO6XXlAZPxEFbb7118TWlwdMhhxwS\/vIv\/7IX\/ddH91jMAHSPhR+6x6IduseiObrHwh\/dY+GL7rHwRfdY+KJ7LHzRzdsTjMTCD4lFOyQWzZFY+COx8EVi4YvEwheJhS8SiwlGYuGHxKIdEovmSCz8kVj4IrHwRWLhi8TCF4nFBCOx8ENi0Q6JRXMkFv5ILHyRWPgisfBFYuGLxGKCkVj4IbFoh8SiORILfyQWvkgsfJFY+CKx8EViMcFILPyQWLRDYtEciYU\/EgtfJBa+SCx8kVj4IrGYYCQWfkgs2iGxaI7Ewh+JhS8SC18kFr5ILHyRWEwwEgs\/JBbtkFg0R2Lhj8TCF4mFLxILXyQWvkgsJhiJhR8Si3ZILJojsfBHYuGLxMIXiYUvEgtfJBYTjMTCD4lFOyQWzZFY+COx8EVi4YvEwheJhS8SiwlGYuGHxKIdEovmSCz8kVj4IrHwRWLhi8TCF4nFBCOx8ENi0Q6JRXMkFv5ILHyRWPgisfBFYuGLxGKCkVj4IbFoh8SiORILfyQWvkgsfJFY+CKx8GWZEIsHH3wwnH\/++b2\/hBdtxeKtt96KHcYKK6wQVllllXDhhReGTz\/9tPdqmc8++ywcdNBBMYgspVNPPbW3Zwgff\/xxuOCCC8Kaa64ZX9t0003DzTffHL744oveHkvDa8cdd1zsxD788MPe1i95\/fXXw2abbTblM3fbbbf4WW1oIxYPPPBADA5nzZoVFixYEP+ejg8++CA2hOn3SNO1117b2\/NLPv\/883DffffF77vSSiuFjTbaKLz55pvxNfLtzjvvjHnM+8nzM844Y6l84RhXXnllWHfddeN+c+fOjX+zvQ1NxaJJGQS+L2Vp\/vz5Md95\/5577hleeOGF3h6LoQxRnnh99uzZ4cc\/\/nF49dVXe69+Cdv23nvvuA\/77rPPPq32GwQPseB7Umes\/FTVnxLnnXfekvdZuu2223qvfskTTzwRVl111SX7lD4jPw9SWk5T0s\/luBzfCw+x4Lscf\/zxsa5xrSlHdfL0kUceCSuvvPKUPLC0\/vrrh5dffjnuRxmmPlvbQfk\/5ZRTip9Rylfamrfffru3R7P2ti4eYsF53HDDDbHN4ftuu+22S9XXKh566KG4P\/WOxP\/ZllOnPbn++uvj56d5aWnrrbcO77\/\/fm\/PevneBA+x6CI\/gT73mGOOCUceeWRvy1QGaYsp31Y++beqvA+Kh1g0zU\/v+m7nkfbRt99+e9yeQjk96qijYn7bNXzyySd7r7Zj7MXCAlECt1deeaW3VXjQRixoGLfaaqtw8MEHxyD3pZdeCvPmzYuNR7\/A7plnngkbb7xxbLzZ1xLHWWeddWIlA47B9h122CEGnfz9s5\/9LHbSBLJV0EBRUUpBCxXrrLPOCgcccMCUz3788cd7ezSnqVjce++9YY011ghXXXVVLOs0CARJfI9+3HXXXfEzFy1aNOW77LfffmGTTTZZqq7QiBx44IFh+eWXD0cffXR48cUXp1wnAkGu3yWXXBLPZcstt4yNEsdM96OjpcFgH\/Yl6KORQ\/zzhmsQmohF0zIIfF8abWQKKaKsnH766WHhwoXxXIBjEAwee+yxMZigHeK75mWL\/QkobD\/qFA015\/Laa6\/19qq\/36C0FQuCdq6jBfD2d6kO5VD+uG62L8kCKQJ\/oyQfpPQz7HPZbu81GcnFwT7XBIa\/PeWirVgQpO+\/\/\/5L2i\/q30477RSPSVmtgjpE+aD+pfWaRL2jDNJOAG0EZfjuu++OZfjRRx8NG264YfzcfECAgYY99thjyvFS+aOss23Q9rYuHmLBedBH8H3Jg3PPPTestdZa4bHHHuvtUYZgiXzi\/XwvEv9nWxpI1WlPyFeCXr5Lmpck+rW8D5gu35viIRbDzk+OSf9Gn0ufTB0tUact5lj0W5RP69v4l7\/ZbnWiKR5i0SQ\/h1Hfb7nlljh4Rdk788wzi+0nebz77rvH701fxDlQ15G16a5\/HcZeLKxjoRO59NJLe1uFB03FgspAxceICVANCuiKK64Y7rnnnt6Wpbn11lvjqFAODRCNhHW6BM5cd2arDBowguMqyaRR4\/W99tprSsBiPPvss+Gkk05a0kl40kQs3nvvvbDNNttEGbBzohGhMSFYrBrVYh\/yOv9+cMUVV0xpjMACWhqhkkRxHEZW33nnnd6WxTMiBEFcT7sGb7zxRjjxxBOnNGIExHS+NHg2stIEzpE6Xlcs2pTBTz75JAYHeUfHOXAdreN\/+OGHpzSyfCbtWN5I0y4xkmSwH6KFhKQzcHX3G5S2YmFBf5ofFrincpCTts3pe8k\/tlkdZD86LiMViDQvU\/lIg6\/8XOxzTYQg\/8y2tBWLa665Jo5C3n\/\/\/b0ti0cmGWW8\/PLLe1uWhjJIgEXZSKHMEixQvoG2gZHvvNzwucstt9yS\/YB9KR\/9hKZJezsIbcWCIH+DDTYIJ5988pK84fsQDJIvuUilUPbyckE7s\/322y8pUxyzTnvCwFhpZP7dd9+N\/akNjEGdfG9KW7EYdn6mINX0P3l7C3Xb4ueeey6svfbaU9oFIIhO24GmtBWLpvnpXd\/Zj\/+nKwio2wwopteGfPzFL34x5XNtUJaB1zR+aMJYiwVfmkJMMIhJeUwhii9pKhYEmD\/84Q9jg0AFMKwxyAPbOnCd08D88MMPLzYYNCQEEATQKVRiGicqOP\/mDR\/nwzEZISYQo1L1azwHpYlYULkJKvPvwndkexoc1CFvjIDvyLZ+IxHPP\/98HAXJYcQjDfIItNOA2qCxy4PtQaHs8Fl1xaJNGbTODKlD7gzEiGVyaXCQQ+OcBlocy2abUjgWsmUdZt39mtBGLKgj1JU0cAfOZ7pA3QJ89usX5LM9P0bp+Hw+20hpfti+dn62X\/pe+8y25dBoIxacE+fGiCsBp2HBF8HGoMEmgRUdtZU7ghHaCKubhpX\/tF6QX+xLfUFkS589aHs7KG3Fgu9AcMQAVMrZZ58dBa5fnaVvIeijbzAIdqn\/1la27dPygTGok+9NaSsWw87PFKsPpTaubltsYoH8pcEwfVST+pTTViza5GeJNvU9h\/Zw9dVXn3Jtrr766qXyzAQwbVebMtZiwegA04jIBBV7umCLjGLpAlM67EuHm69XZ9SaBoAAEzujwWMEvaqTtE6NxEWlULNujs\/hglKQfvKTn4Q5c+bERphRHpaL2DpAPuOQQw5Z6iJWnQefy+fbZ6YdZXqOpUo6KE3Fgu9MJaIzSrGOM+9Qp4Pry\/q+NCDg+9GQUMFSLA\/Sz6bB53rY8iHem1cO1nkSfLFumDwnDxHV\/PhNoSwMKhY00JRTGo0UZhUY2eT1QaC+0EDTSRqUSa4V+ZOPikwH5b1OoEajSueZfu6gDCoWbcsg3416xz0O1DvqLVPq1N2qfGIf6mmdZV9Wj8mbftTdrx9txCJtU9Jz4P9sKwWbRt5W2b7Uv37lxo6d11GuiR2LxHHsM2xfC1Ly96ffI+98m9BGLCwI4v0fffRRb+vigTKW2ZTatelgtuvQQw9dUu4sr\/KA3\/KH5ZC0q\/Q7rMPefPPNY3nnPSzXSGfOYJD2tgltxMKCT4Kjp556qrd1MXXEh5ls+mOWm9B3k4fcS8K6f5spbtOecDzim7T+1M33prQRiy7yM8XKJGWsRJ22mD6ebexH+8s+zJbvuOOO0\/ZPdWgjFm3zs0TT+l6CWY2dd955qRg0x46Vfm5TxlYs+GIEQ7b8CePD\/KrslEK2xRZbRKMlg1jWgX1RmQnigYtMAEggx1QRlZxj2lQVicKddqacx8UXXxwvKheXAs3NlqxrI\/ijA7IRWwJLprkpYEyX8l7WzFMZ0kZnuvN4+umnY0GhoWc0OYX30mFNV0jq0FQsrLKk3wmsYA66LIapOvvuBnlK0E2lSDFzTxspzodrZJWB1zgPzqcEeUfQ7rG+3RhULDhXgoxSAGad+aBTktQV6pnlgzV4TOWzztVutqPclm7MzuEa5Nclh\/PjPJuIS8qgYtG2DHKudFzkB\/e4sByNelj6DmyjDSEvCTz+\/u\/\/vvdKNSwpQbas7ami7n79aCMW1mHlecn\/2VYqnynp+y1VyYiV63Tf\/PpRd9PXSWldT2UmrePpsfNjNqGNWNjAQCmQYlu6vLAO1D\/qIe2kwfs5DkuV0mCO4IK+o3QNOA5BWWkt9SDtbRPaiIUF96XvZOWP8+8H7QXfm7TLLruE6667bspykTbtCXnOICEDOyX65XtT2ohFF\/mZYnlYVYbqtsX029wXwPkxKMiNx\/QbHrQRC4\/8TPGq78wA0c8jt3XiMfahL+q3jLguYysWTAHRsDPSDGQ2T7NhVCHNcIO137l0sN6NIJ+bXMhkxCMN\/tiGfKRTmBT+\/CJZ4eBfgwaIC52uoQUCOEzepvU4DsezSlX3PEprZalorIUvff8mNBULCzqqGuHpgpEUvhNlwwTSINBCCrkvgOtHo4XQHXbYYVM+m0aavKV8GPydBh0l+FwaezrNQWcaSgwqFv3yyoKk6b5DSqkxsrJHPjJljGhwPMvDfje9WWc5XSdIZ0oH11bOBhULjzLId6fBp57RqVF300bbsM8iUV6YoUzbmRzKFuI63cxG3f2mY5hiQUrbvRJWzmx\/UlUQAbyW7ptfw\/ScLNk5pJ+V1o9ULPp9dl3aiIWdf+k87LtPl6cp1DHqYjoiafWdQStusqbcUiYZ0WSQql\/bYWup0+U9ddvbprQRC7vmJP6f0i+vU6hfLEX8\/ve\/H+swo7Jp\/lh5z79nnfaENne6ARgo5XtT2ohFF\/mZYnnY75h122LqAHEen+k5A9RGLDzyM8WjvqftIYmVGumN9SWIwbhpvJTvgzK2YkGQlgdqBNkUqPzxoP1uDjLM+KZr0DlGXkCscKTvpQHq19hwkVnHZo\/vtHOrex5WGdO1hzT+++67b9+gZhCaioWtva9qhAeZsbAAtjTaQ0Xg+3PNGek54YQTwq677hrlkqlr8oHgOA9qyeu8opWgDFGWGIkm6G7DoGJBQ8pIf6kMWaMwyIxFqTGy4+RLMpjS5+knVUsy6DT4LtMFvDRAlB9bgtaGQcWibRnk3Jlluemmm+IgxnbbbRfLGeWp1LCyjTJHEM\/n9rvW1PE69bTuftMxyhkL61Spc\/YeS\/3a4\/Rz07pq27m+bLd9SLxmn5e\/z8o62\/My0YQ2YmFtfOn7s43X2Kcu+UykQb9nj4sk0Y6x\/IZy3G8ZJcfhePnynuna2za0EQvr3\/sFbv1GhPm+BGO0Z3xfRn35jox+W91r2p5YXuYDYyWq8r0JbcSii\/xMsTysag\/qtsX08\/SJ3FzP41OZ3WDGhNmTtrQRi7b5meNV33k\/98Hw3dgnH3hPYT\/aO4\/VGzCWYlH6rYE0YWhpw5x2blXYBebffnCMvICU3ksDVOp0GemhYKy33nqxYWbENz23uucBVBgKkD1FhEeH5VPVbWh7j0VeWayCDdJwkg+YeJ3A3kbVLKCwvOyX+pUJ4DrmgXcTBhULoDEoBRkWmPQLDnL4Hvn+rPdkxq6UB+xbFTRS7s4555xigG3QaLH8LH+yRFOa3mPRtAwy9c5yRvuOSCbLnGiA+93HxSguU89pUJtCw8xxSk8+S6m7Xx2GcY8FZYZtpc7SsHY3LUccw+pev\/eCfUZen+1vC0jseOyfbkuvQdoW1Glbp8PjHot8YMAGEwa5x4Lvx1KTOoG9jWpW1esU8qjfumzI29s2eNxjUQruTQj6rWHnuxKsWntAH33uuefGum5tdtP2hPvKCNjqXs86+V4Hj3sshpmfKVZnq\/riOm2x1QMGaw2CYZYy0\/faTc5NaSMWbfMzZRj1nXxlRqlqP2TjiCOOqF2G6zCWYkFgnq8lAwIY7qHgQqXTiVb5S0+N4m8qggVrJRPk\/g0aUaDwNxULjsuSLKTIHllnna9VqrrnAVZwOB43oTO63rZBSmkqFvYEjbzjpFJRuere\/MM+7Fun0lnlQLRsDSDnwShHnhi558d2kLDplvLw1IZBhaBEE7GgPNF40vik8Dfb0\/LWj6rGiIafDpH1n3nATvkt3WzG1DJ5kte9FK4ba2p5bned61yHQcWiTRm09iINpIGZQUZsqzpAg9dLMookMPI23brfuvvVpY1YWKdP3pfEol9QaRKRtpfp8aYTC2tX+az0fWn+077Szqbb7XPTc7Nj1Qmq69BGLOy7UMYoa4aVu355msN3IYDsJ8kG9\/MRHNe534nBg35LckrtbRvaiAVwzUuDMIhAv2tuMpeWKeD7EWPYtWjanlDu6g6MwXT5Xpc2YgHDzs8Uqw\/5e6BuW8x5MlibnxfbGWiu21dW0UYsoGl+5gyrvpM\/pf6ea8M5TrdMalDGTiwInPMnBKXYbEZ6schUjk8whjlj0EBhv+iii+IyEY6LeDDFy2MzDTp5ZIUgHjBlgsS006cxoNNKCy8FKS8wFshxU65d6Fws6p6HQaNO484ol0cAnNJULPhuFOZ8pIDRBSpX2hFxLaqCRd5LZc4tP4c8YfaHYyOd01Ui8rpO542p0ximMteUJmJBWSAoTDsa\/uVvtqcSSRBbFewjpHzfNIgxOKd8hs8+I19SiFTQyFR9DpD3f\/u3f1vrOgzCoGLRpgxaZ5Z38NZp9pspIm8YXct\/i4D6W1qWl1N3v0FoIxZAW5YG7sD\/2WYdvrVj6TZ7X94O2nutDtrfeefP3\/ZeCz7S90Hpc9mf96XiwrHy97ahjVgA5YMbuNPHTPJ\/tqVlh3JM2ayqS9Rf6mQ\/eK\/lJe1Z1XIHgzLMkooqYRi0va1DW7Gw2ZO0jeV70n8Q2Fs7luen1Wn2y\/OFfGWkGSlg\/7rtiWHtaD4wVMV0+T4IbcVi2PmZYnU7bV+Mum2xCUQ+m0zsQDtQZ4S\/H23Foml+5gyjvgMzPel5ANeFep623V6MlVjwRblZjJufGUEoQcbw5CY6EUamTQCYxmFkAbng\/RyHaTIulF1ERli5MYhAnWPQ2NGQpEEXo+ccgyCfQouo2A1s3GHP49UI8qgk2CIjt3Z8q0BIA2sAsUMymIaJi8oTNggo6pyHQWNE4eGYpfsQ2tBULIDvQf4iYlwTe5JVfvMPMzh8z\/yxv0AjwXdLG5QUGihujGPkgkpEZaqqkClcmzzA4Dy434VGnUCTzoPHAN9xxx29PdrRRCyA+xP4bow+kA\/cEMff6X0LPBmM0RqellEaGevXGNHoECDReDOLxnfnM6gr6WwO+UB9ojynsz\/sSyeG5JD3BBqU2XQfEr\/CzbVPG65BGFQsoE0ZJLijXlIX2ZfE\/8kXG73h4Q8cn3LK65Qn2oW8Mefcf\/zjH8dBjDRPeB9thwUSdfcblLZiYcG7Ber2d1qHLHBPg\/d+QT\/beI+1ifbeXFTYx7DP4P3W2Zm82LkZuazwd\/q+trQVC6t3\/No2wRPXnvrFtrTsUL+4YZV\/c9iP95f6BaAu0++xjIG+iCAhr38cl76D4JcyzEgwAfRll122VFvatL2tQ1ux4DxY088vGTMgx\/ek3ct\/2biUn9Qr6jp1l\/JIvtEXU9fT8le3PTH6DYwNku9NaCsWXeSnQf\/F714Ql6WDZUadtpjzI4bierCN8ydPGcRltt7aqaa0FYs2+Wl41Hf6OGIF+i7yx64N91SmsxJ8FjJH3JD2RSRkrnR+gzA2YpF3QGmnYaQdmaW0MyHop\/EmaGdkiLV7aYPAxSeAmzt3bnwvMwd5wEuGU1g5hr3OeRCUYn2s68vPITVxzoXj834ylxFKRji50YgLDHXOI4UZk9LSqba0EQtgvTmVne\/KL5YSdOYNMAWc3\/jIvx9BNI1jPgJhWECRVpK6lMSCvOccOeZKK60UK6dJqQdNxYJryrlRvhBaOvX8l10p15QVAtpcLCivPKM6HRnNoQzSsRNcc62oI+ksDeWb16w854nrCtQnzrG0Dw1dm6eVNRELaFoGyXfkjSVzfCe+P6Nt5LWRlhmOTwB\/4403xsba4Lypv2lepMlmheru14S2YgF5+5u2aVCSCCi127kEpLJRtY9R2jc\/F8PaiH7Ha0pbsQCEwm62pD\/iRss8APr5z38evve978V\/c6jTVc+ft3yiLdtrr71iEFzqHwgmrNxZGS\/N0LZpb+vQViyAekfASZ2kPnKzcFpfoSo\/aVPtcdsk\/l\/6Be067YlB30UfVhoYq5vvTWkrFtBFflJ3rY5ayuO6Om0xUHeoQwgbx+HfUp1qQluxgDb5CR713QYwrJ+2+pwek\/xCxtJrkibKbUkAB2HslkKJqdBoMYLSL3BsSluxEF\/SVCzEYpqKhfARCzEVD7EQX+IhFuJLPMRCfImHWIgvkViMOSx\/Ygal6WhmPyQWfkgs2iGxaI7Ewh+JhS8SC18kFr5ILHyRWIwhTKcx5bXHHnvEizPdk42aIrHwQ2LRDolFcyQW\/kgsfJFY+CKx8EVi4YvEYgxhDSJiwVq3fvdetEVi4YfEoh0Si+ZILPyRWPgisfBFYuGLxMIXicUEI7HwQ2LRDolFcyQW\/kgsfJFY+CKx8EVi4YvEYoKRWPghsWiHxKI5Egt\/JBa+SCx8kVj4IrHwRWIxwUgs\/JBYtENi0RyJhT8SC18kFr5ILHyRWPgisZhgJBZ+SCzaIbFojsTCH4mFLxILXyQWvkgsfJFYTDASCz8kFu2QWDRHYuGPxMIXiYUvEgtfJBa+SCwmGImFHxKLdkgsmiOx8Edi4YvEwheJhS8SC18kFhOMxMIPiUU7JBbNkVj4I7HwRWLhi8TCF4mFLxKLCUZi4YfEoh0Si+ZILPyRWPgisfBFYuGLxMIXicUEI7HwQ2LRDolFcyQW\/kgsfJFY+CKx8EVi4UtnYjFnzpzwzW9+M2yxxRZKY5K++tWvht\/5nd8pvqY0WPrKV74Sfv\/3f7\/4mtL0ae7cuVEsfvSjHxVfV6pOlL3f\/d3fLb6m1Cx94xvfCF\/\/+teLrykNnuj7lZ9+ifz82te+VnxNafBEHEQ8VHpNafD0B3\/wB+Fb3\/pWL\/qvTyOx+MM\/\/MNw1FFHKY1J+va3vx2D4dJrSoMlGqZ\/9I\/+UfE1pekTo8OIxYEHHlh8Xak6zZo1Kyy33HLF15Sape9+97vhO9\/5TvE1pcET+fl7v\/d7xdeUBk\/028pPv0R+Eg+VXlMaPP3jf\/yPwx\/\/8R\/3ov\/6aCnUDEBLofzQUqh2aClUc7QUyh8thfJFS6F80VIoX7QUyhfdYzHBSCz8kFi0Q2LRHImFPxILXyQWvkgsfJFY+CKxmGAkFn5ILNohsWiOxMIfiYUvEgtfJBa+SCx8kVhMMBILPyQW7ZBYNEdi4Y\/EwheJhS8SC18kFr5ILCYYiYUfEot2SCyaI7HwR2Lhi8TCF4mFLxILXyQWE4zEwg+JRTskFs2RWPgjsfBFYuGLxMIXiYUvEosJRmLhh8SiHRKL5kgs\/JFY+CKx8EVi4YvEwheJxQQjsfBDYtEOiUVzJBb+SCx8kVj4IrHwRWLhi8RigpFY+CGxaIfEojkSC38kFr5ILHyRWPgisfBFYjHBSCz8kFi0Q2LRHImFPxILXyQWvkgsfJFY+CKxmGAkFn5ILNohsWiOxMIfiYUvEgtfJBa+SCx8kVhMMBILPyQW7ZBYNEdi4Y\/EwheJhS8SC18kFr5ILCYYiYUfEot2SCyaI7HwR2Lhi8TCF4mFLxILX8ZKLO68884wa9asGGBMlw4\/\/PDeu0RTuhaLN998M2y00UZLXctVV101PPHEE729QrjtttumvH7eeef1XvmSRYsWTdknTfnxumAUYvHpp5+Gm266KV7HFVZYIXbcH374Ye\/VEN56663YofPaKqusEi688ML4HuOzzz4LBx10UDEPSaeeempvz+EzCrF45ZVXwjHHHBPWW2+9+NmUu5zPP\/883HfffWG33XYLK620Uiy\/lGP44osvYpu16aabxvevueaa4Ywzzggff\/xxfL0rxkEsqKNWbqibVVTtV6fOd8moxIL6Sz1O82LBggXh7bff7u2xuF4fccQRsTzy+ty5c8Oll146pW7Dq6++Gvbee+8we\/bs2Abss88+cdsoGLVYvPfee7F9\/uEPfxhjjKryRZ0+7rjjlmpLP\/jggxh4ptclTddee21vz24YtVj0y0\/y8IYbbojlkte23Xbb8MILL\/ReXcy45eeoxMKzvqdUleOuGCuxoHM57LDDlmSEZXramZOZV155ZTjyyCPj36I5XYtFGlSkKW2UqvZJg5BSZUzTKCpT12JBgLDddtvFxubMM8+MgTlBsEHDtNVWW4WDDz44NuIvvfRSmDdvXqw31iA988wzYeONN46dPtst8Z511lknPPLII3G\/LuhSLMinSy65JObdNttsEx588MFieXn\/\/ffDgQceGJZffvlw9NFHhxdffHFKY057RZ5yrKuuuipsueWW8TukedwFoxSLtL72q3f99qtT57tmVGJBQLXHHntMqY+p8JJvu+yyS6yjBHcEEE8++WSUWwYODOrT1ltvHY499thw\/fXXx3YewaC8vvbaa729umNUYkH+3H777WGNNdaIeXTLLbeEX\/\/6171Xl+bmm28uDtLcddddsY2nTKbXZr\/99gubbLJJHKToklGJRZ38JD6j\/7j77rvj4NW5554b1lprrfDYY4\/19hi\/\/ByVWHjV95yqctwVYyUWFLyXX36591dZLOCTTz4Jv\/jFL3p\/iaZ0KRZcy3333bfvTAKvsY9VhHQUM52FoCxQLtIyAfxNWUlFpSu6FAsalg033DAGDqURSBqf008\/Pay77roxGDYIMFZcccVwzz33xL9vvfXWOBqSc++994YddtghCklXdCUWBPwnnnhizIeLL754ioylWGBGPj\/++OO9rV9CGT3++OPDO++809uyeBSOYJRjIytdMSqxICjgmuXtc06\/\/erW+a4ZhVgwGMB17FfvqJsEaXm+nH322VOCCEY0mWkzaBPOP\/\/8OILc5UykMQqx4DuTD9THE044YdqZRNpVBhL22muvKXlJcEzbaX+nXHHFFXHWl326ZBRiUSc\/GcDaYIMNwsknnxz3B5udYPaM94xjfo5CLDzre0pVOe6Ssb7HggwhY6bruEQzuhSLNGAglUYjH3jggaUqkAUlJDP50n7A66MKRroSCxojAsl+I49vvPFGnKLec889o4QbBMuc53QNN6OcXc6+QFdicfnll4flllsuBlnW8eXQ+dEJsrQpHWVLef755+OIXA4jUGlZ7YJRiIXNMkxX36bbr26d75pRiAV5ReBP3aV8lgIOAg1GIq+55prelsUgC1avqfPMoOV1nEG79ddfv9j2DptRiAUDKOQVo8DTzSCS1+QLgTH\/1gnIyGfaCYLkrhmFWNTJT8owM7yU0xQC4ZVXXrnvLPgo83MUYuFV31OalONhsMyKBQWbjn333XePHQAjhEwPEXBhzHlnZh0cif8bBBdMG\/FeXiOYyNeiz1S6FAsKueV\/mtJrUcKuWx1hGGVF6kosrDEiQK6CxojGPb8PiaB9++23DwsXLgzvvvtub+tUEBfWxE6X1950IRavv\/562GyzzWIgzvesgul98o81qlXyUcUo5LZrseC78R2nq79198sZpM4Pi67FgoDglFNOCZtvvnkMJPj+LCdJZx2Ato2lEeQNARjlE\/n98Y9\/PO0Sp1HO6HYtFhY7kIfPPvtsb2sZgjPqOnEA1O1HWErKUkoGcrqma7Gok5+IAYNZq6++enjqqad6WxdDm0qZZkaiilHmZ9diMYz63rQcD4NlViy4MI8++miUCNbkHXXUUbFwcJPqQw89FJc75B0TawMJGKxh5SJhioccckhcv8ZIJcEhI5r91q\/NFLoSizTAKKV+HZ0JyXQVZJSdJnQhFsgAUsCoIyNA8+fPj5LBkifWtdqyHmvE87yw+sT70yWHKax9tSnrLulCLOjU+AzKlN0Mx7pzvq8tKbPOken+s846K0oW+9Cu1Lkxm5GkrvOva7GgXJGP1GmWivF\/Ut5O190vp26dHyajuscCKDv0S5TP0qwZAQXXnLrPcj2WnZRGO3MYfGN0dLpAexh0LRY2uLLrrrvGZTvkI\/lF4MpSkRTaS5ZF2iBC3YCMZUHENYMOPnjQtVjUyU8buCrVbwZcqNP9luGNMj9HMWNheNX3puV4GCzTS6HsdW5SzUdg6dRysbAA1wIubhCiMKVBFiOZiEq\/Ud2ZQtc3bxsWcEwXaLCN19hnuiURoxgpTulCLKz8MitHQ8+sGuV1p512io2OybDlr5Vzw+pLVT7RIFFPaeC7pguxoKGlc+TeCPINEbvuuuviiBFP4uAcrMwxesSyJkSDfOOhEpwfN3Hn088Gx+TelKrlU8OiS7GwMkReWDlK66nV5br75aT7jGoZFIxSLAy7AbO05AE5oJ8inyi7zz33XO+VMtRtljgSwIwicOtaLKwNJABnWQh1HbEicCNZMExdpV1IBwLqBGTszwACAzGjoGuxqJOfVndLddvEgrwtMer8HKVYGG3qe9NyPCxmhFiUMo+KkAdQFphZwNXv8bal6byZxqjEwqDgk9dVga41Zna9+jHKSgRdiIU1zvkSJ27QZtbCZNjW+ef5ZvWlasbCAmOmpLtm2GJh3z2v1wRZjADx2cxoWBtBUPnRRx\/19lo8W8QAxtprr10M4jgO138UgVuXYpEG\/ml9s7pKopzW3S9nkDo\/TMZBLChH9Jv5IBdl9Cc\/+UncZk83Q4RLbahBEMhN8nVmNoZB12JBf0DfTh+fcvXVV8fyhWSRFwwU5EtK6vQltJG0lbSZo6BrsaiTnzxFjxH1fmJRNWMx6vwcB7FoWt\/blONhMdFiQWGvOvYkMGqxsOtXEgu7VlSO6bAgZpTBSBdiYSKcf09bvmNl2aat80bcGv6q2TjqA6NGHK9rhi0WSAKBYqm+W36Rr0gH8lEqd3SepbIKTEOfc845I7k3axzEwgIHEvlYd7+UQer8sBkHsQDyi5FKC7ioJ3TY999\/f\/wbHn744ThqTGBUEgcCDgYjSk+A64quxYLvW6qrDAowOEAZS8tiVaoqi5Rd2oNR0bVY1MlP64dKA1c22FV1j8Wo83McxAKa1Pc25XhYTLxYsJY6vWgGT0BIH9U5Exm1WADXIr++FpSUrmsJrmOp0euSLsTCGnGeaZ2PitNwWINkT4U64IADpkyp2lNhDj300KXez99s73dz3TAZtlgAHRf3SuSPj7V24aKLLorChXixVjg\/F8pqaSaTG+6452VUD3wY1VKotN6mnRv5VHc\/Y9A6P2zGRSwQ1nRpBAFa3l4CT42hbOZtIDLBDZ3Ur1HStVjY\/VTkX4qVMwJl2kl+YDRPjJxz\/xp5WlrWSPnkhloGJEZF12JRJz+BOl163DaDXFV99Djk57iIRZP63rQcD5NlQiwI2koNo71e6owIEvIggv+zzTo0C9QYxU1\/D4Bn03PHfrpebSbSlVhY41OqIFyLNMAAguTSNeVJSPk2qNq\/S7oQCxobGh0eWMA6V4NRCxpF6hiCQCKY4JzSHxriqRI0+vY7Fiml+426pAux4FGHPPKQ3\/hIxYp8oR2wJWBcR\/ZLO0fLe36BO20XkAo6zVE+Ra5LsQDqK9cqDRRMGNJtdfeDQev8sBkHsaBM8VCStL4SaJQe20lZpX1Nl+khFaUlEqOga7GgPaP943n+ad0k3wjI+q3ln64\/4Ri8zgzwqOhaLOrmJ\/cCsEwn7Qutf6p6qMU45Oc4iEXb+p4zyrhorMWCZ8UTRBEMUXDzUVZmFBilJeWzC7a8gdFdgiWe682ILGJBIeKC\/P3f\/31cE83yEm6a2WeffeLF4JGUXRveKOhKLAggCCQIKEgEF7Y9\/XEssGCklLg2OSYtdsxR0YVYAEECN2\/vv\/\/+cXaChprP5YauNICw\/RhJYp+nn3461pOqZ5ATXNNppDMcXdKFWNB+UN9XW221+OOA3IBIvvCo6fTeCDpCgkoGHGhX2I\/2g9metF2444474qgQN4CnI0XsS8ff1XrhrsWC+kqHldZJ\/s3raN39Bq3zXdC1WFBmWN5AIEH95CmFDA5cdtllU\/o9yhTXm3Jngwb8y9\/pgwWoTzySkgG2tGxSz3kQQWlwYZh0LRbAzbD0Oz\/72c9inpIn5NN0v2tBmesXkNHe9nu6URd0LRZQJz+tjeVH3ViyY\/1T\/svbKeOQn12LhXd9LzFdOR4mYysW1gGlKR3xTqfULaXBJReLwoowcGPrDTfcEANZpoYo+FxIsCfDzJ07Nx6DAI0fbZoEulwKVbpeeaHvF2CQSvLAttJMSNd0JRbwwgsvxIaFx6BSvum0aeRzmIVjlIj9qAM87anUodI40VERdIyKLsQC+P48PYtGnc+j3lP\/aQdSGO0lX8lf8o\/8Th\/TSbnjtbR8pqnLJ2t1LRZG3kaX6if0269Jne+CrsWCp+rQ9\/CdKVesVa96LCxl0x6XzP6U4bRuU5fsWKWUz7p1wSjEggCNft\/6dur8BRdcMO137xeQMeiw8847LzWC3DWjEIu6+UlbyuPP6XNoO\/mtMfqsEuOSn12LhWd9r0JiIUbCONxjMVPoUixmIl2JxUxkVGIxkxmXeyxmCqMQi5nMKMRiJtO1WMx0JBYTjMTCD4lFOyQWzZFY+COx8EVi4YvEwheJhS8SiwlGYuGHxKIdEovmSCz8kVj4IrHwRWLhi8TCF4nFBCOx8ENi0Q6JRXMkFv5ILHyRWPgisfBFYuGLxGKCkVj4IbFoh8SiORILfyQWvkgsfJFY+CKx8EViMcFILPyQWLRDYtEciYU\/EgtfJBa+SCx8kVj4IrGYYCQWfkgs2iGxaI7Ewh+JhS8SC18kFr5ILHyRWEwwEgs\/JBbtkFg0R2Lhj8TCF4mFLxILXyQWvkgsJhiJhR8Si3ZILJojsfBHYuGLxMIXiYUvEgtfJBYTjMTCD4lFOyQWzZFY+COx8EVi4YvEwheJhS8Si\/8ffn5+lVVWCQ888EBvSzWD7DvuSCz8kFi0Q2LRHImFPxILXyQWvkgsfJFY+DJWYrFo0aIYXORphRVWCJtvvnm48cYbw+eff97b2w+JhWiLxKIdEovmSCz8kVj4IrHwRWLhi8TCl7GbsXjxxRfDJptsEoP3xx9\/PG575ZVXYiNP4HHkkUeGTz\/9NG4fNg8\/\/HB4+umne3\/NPCQWfkgs2iGxaI7Ewh+JhS8SC18kFr5ILHwZO7H48MMPYwO06qqrhieeeKK3NYSXXnopbLDBBmH55ZcP9957b2\/r8EBejjjiiCnnMNOQWPghsWiHxKI5Egt\/JBa+SCx8kVj4IrHwZZkRC9tO8HHVVVf1tg6HL774Ipx\/\/vlh9dVXl1iIWkgs2iGxaI7Ewh+JhS8SC18kFr5ILHxZZsTi7bffDgsWLFhqxuLZZ58Nu+++e5g9e3ZM2267bXjooYd6ry6G+yF4L4HLeuutF\/d\/8skn42uvv\/56OO2008L8+fPj53322Wfh5JNPDrNmzYr7W7rtttuW2jeVnXQ\/4HW+A9vYh30Rlptvvjlsuummcfuaa64ZLrzwws6WduVILPyQWLRDYtEciYU\/EgtfJBa+SCx8kVj4MrZiwT0W3OMA7733Xjj44INj4LHLLrvEfeCxxx4L66+\/fpzB4KZu7sXYYYcd4s3eBPDANm78\/ru\/+7sY2HMPB8c3iXjzzTfD8ccfv5TIIAjptqp9P\/jggyXnxs3lKdyfccABB4T3339\/ySzIIYccEr\/Pxx9\/HAPR5ZZbLsrFKJBY+CGxaIfEojkSC38kFr5ILHyRWPgisfBlbMWCGYO11lorzkLY6D4zCQTy6X4HHXRQDPoNuxdjiy22iAE8AsAMA0Jh5DdlX3HFFdOKhVHa95lnnonnx3dEIAz2veuuu+L\/ERwK7ssvvxz\/BmZhuFF94cKF4d133+1t7Q6JhR8Si3ZILJojsfBHYuGLxMIXiYUvEgtflpmlUDm8xj7nnXdeb8tiCOyZQVhxxRXDgw8+GI+3xx57xOVHv\/zlL4uPqy1JRJVYlLbzmXy\/ddZZJy7NAqTh8MMPXyJCd95551LLqyxxL8dTTz0V9+sSiYUfEot2SCyaI7HwR2Lhi8TCF4mFLxILX5ZZsSDAJxDJxQLYxmvsAyw7YrnUuuuuG9N11103RTDaigU88sgjYeWVVw6nn356FI0bbrghJoP3bbTRRnE51bggsfBDYtEOiUVzJBb+SCx8kVj4IrHwRWLhyzIrFsxGMCvBPQzpUihALEqzANwkjWDMmTMnnHjiiUuWLXmIBefAsiyWYfEasxXMWhi8j\/O9\/\/77e1u+5J577pmyVKsrJBZ+SCzaIbFojsTCH4mFLxILXyQWvkgsfFlmxYIlRhSEdPkREOAjG7vttlucqeDpTyyBSjn11FPjZ\/BZcMstt9QWi9K+BrLDrAX3d3B\/Rcpzzz0X1l577bD11luHV199tbc1hHfeeSeccsop8Vy7RmLhh8SiHRKL5kgs\/JFY+CKx8EVi4YvEwpexEwv75W0eK8uSpfRm6ByCf54AxZOguDma5U28hydF8cQoQADmzZsX73FgxoInNO20005LbvrmPcxecP\/D1VdfPWUWg0DnjDPOCHfccUe8CbtqXwM5QGgIMjmfFPblqVC8l3PeZ599wqJFi8Jmm2225Fy7RmLhh8SiHRKL5kgs\/JFY+CKx8EVi4YvEwpexEgsCbYKLNE13XwK\/WbHNNtssCdj33HPPKTMYzFjwGxarrbZaPB77HHvssXHGw2ZH0s+zezZ4nd+7YH9mOBCSqn1TEJCzzjqr99dUTHzmzp0b38958Rsbo0Ji4YfEoh0Si+ZILPyRWPgisfBFYuGLxMKXsZuxEN0hsfBDYtEOiUVzJBb+SCx8kVj4IrHwRWLhi8RigpFY+CGxaIfEojkSC38kFr5ILHyRWPgisfBFYjHBSCz8kFi0Q2LRHImFPxILXyQWvkgsfJFY+CKxmGAkFn5ILNohsWiOxMIfiYUvEgtfJBa+SCx8kVhMMBILPyQW7ZBYNEdi4Y\/EwheJhS8SC18kFr5ILCYYiYUfEot2SCyaI7HwR2Lhi8TCF4mFLxILXyQWE4zEwg+JRTskFs2RWPgjsfBFYuGLxMIXiYUvEosJRmLhh8SiHRKL5kgs\/JFY+CKx8EVi4YvEwheJxQQjsfBDYtEOiUVzJBb+SCx8kVj4IrHwRWLhi8RigpFY+CGxaIfEojkSC38kFr5ILHyRWPgisfBFYjHBSCz8kFi0Q2LRHImFPxILXyQWvkgsfJFY+CKxmGAkFn5ILNohsWiOxMIfiYUvEgtfJBa+SCx8kVhMMBILPyQW7ZBYNEdi4Y\/EwheJhS8SC18kFr50JhZz5swJv\/3bvx3mzZunNCbpq1\/9avjmN79ZfE1psPSbv\/mbYfbs2cXXlKZP6667bhSLDTfcsPi6UnX6yle+EmbNmlV8TalZoq\/6+te\/XnxNafD0jW98I3zta18rvqY0eFJ++ibiIOKh0mtKg6d\/+A\/\/YfjWt77Vi\/7rM7BY\/NN\/+k\/DH\/\/xH4fjjz9eaUwSgfAf\/uEfFl9TGiwR2H3\/+98vvqY0fdpzzz2jWCxatKj4ulJ1+va3vx3+6I\/+qPiaUrO03HLLhe9+97vF15QGT3\/wB3+g\/HRM5Cf9d+k1pcETcZDy0y8xkfAnf\/Invei\/PloKNQPQUig\/tBSqHVoK1RwthfJHS6F80VIoX7QUyhcthfJF91hMMBILPyQW7ZBYNEdi4Y\/EwheJhS8SC18kFr5ILCYYiYUfEot2SCyaI7HwR2Lhi8TCF4mFLxILXyQWE4zEwg+JRTskFs2RWPgjsfBFYuGLxMIXiYUvEosJRmLhh8SiHRKL5kgs\/JFY+CKx8EVi4YvEwheJxQQjsfBDYtEOiUVzJBb+SCx8kVj4IrHwRWLhi8RigpFY+CGxaIfEojkSC38kFr5ILHyRWPgisfBFYjHBSCz8kFi0Q2LRHImFPxILXyQWvkgsfJFY+CKxmGAkFn5ILNohsWiOxMIfiYUvEgtfJBa+SCx8kVhMMBILPyQW7ZBYNEdi4Y\/EwheJhS8SC18kFr5ILCYYiYUfEot2SCyaI7HwR2Lhi8TCF4mFLxILXyQWE4zEwg+JRTskFs2RWPgjsfBFYuGLxMIXiYUvEgtnXn\/99XDiiSeGLbbYIrz55ptx26effhpuu+22sM0224QLLrggbhsHJBZ+SCzaIbFojsTCH4mFLxILXyQWvkgsfBlbsfj444\/DL37xi9hpzp49OwYdq622WjjiiCPCK6+80ttrvOCcn3766bD99tuHjTbaaIlYEDRdddVVYfnllw\/nnXde3DYOjFIsPvzww9jRcF1JiFeJfvuRl7a93zG6oCux+OKLL8LNN98c5s+fH2bNmhVWWGGFsOeee4YXXniht8di2O++++6L9Yf9VllllXDKKafE\/OzH5ZdfHn74wx8uKbtd0ZVYvPXWW7ENWWmlleLnzZ07N1x66aVR\/qt4++23Yz6W6u5DDz0Utt1229hGkfg\/27pkFGJB+aCNS+sf9bRUvhYtWjRlv1I9LR2PtOqqq4Ynnniit1d3dC0Wn332WTjooIOW+v6WTj311N6eU6EvPOaYY8J6660X90vz9oMPPgjHHXdcLOu0AQxsdV02jVGIBWWRNm\/NNdeMecO\/eRtIHhFQpnmdpmuvvba35+K248ADD4z1nHb34IMPDu+\/\/37v1W7pWiyGUT6btMXDomuxqJufg5TPcarvYykWr776ath6663DpptuGu6+++5Y0AiU2E6FmjNnTpQOto0jdKSpWACdI53kpItFLgpV+THdfnmwUrVfV3QlFjTM66+\/frjzzjvD559\/HvPp9NNPDwsXLozBuYF8sB\/1h\/0effTRsOGGG4b9998\/CnCJxx57LHa+edntgi7EgrzaZZddYkDw3nvvxfbjySefjO3MhRde2NtrKrQ9Rx55ZLFs8V7y+Morr4z7kfg\/23itK7oWC2vLyBMLFPiXv9OyUyULpDTAAPK2tN+o6nPXYvHMM8+EjTfeOAbglDdLlNV11lknPPLII709F0OdvuSSS2IQQQDx4IMPLhUwc\/68n\/\/zGkEHfee9997b26s7uhYLArejjz467LDDDksGIvmXv9nO63DXXXfFtpv+JM33\/fbbL2yyySZL3kseIhVnnXVWDOZ22mmnWD4PP\/zwJcfqkq7Fwrt8NmmLh0nXYlE3Pwcpn+NU38dOLF577bUwb968mPh\/jnX0jBgQPI0jEosyaaBBHlUx3X4EJen2NCjJ870ruhCLTz75JM5O5HlCUM7nW7DGCPuCBQuWGkW65pprwnLLLReuv\/763pYv4Rg0VtStUeRhF2JBA7vWWmstNQJ+9tlnV462X3TRReGnP\/1pzN+87h577LFLvY\/zZ8ayy3retVhQ\/rhW6WwCeWADAVYOyZ80r9N6mpZh3rvvvvsudV1GSddiceutt8YR3BzKLMEwwYJBH8hy2xVXXDFcfPHFMYjLYeQXwX355Zd7W0IM4AjyCKDS43VB12Lx3HPPhbXXXnspgb3llluWtG8IAW1hqd5fccUVcUTZpIHjvPjii\/H\/wODMbrvtNrL+pmux8C6fTdriYdK1WNTJz0HK57jV97ESC6wVy6LjIaOqwPYYWd1ss83iPQ3jBp1m3uBQgSZZLNLAo1\/DUWc\/RozSvE3fkwY7XdKlWNBY0GgYNCbUBRvlYDaDqdC8UzUB4Rgcy6AjOP744+OoEuVzJosFAxIIVgoCljbSBjM4Rx11VBzgIE9KYrHBBhuEl156qbclxKURXJ+SvA2LUYkFyfIkrYOUO\/7Oy5C1gbaPwf\/teKRcnEfBuNxjQRnL2xWWKzJAcP755xdn7T\/66KN47qX2k8CNJbnUhS4ZlVgwm5vmEX3HdIEWbePee+89bR2mnI4iaINxuceiSfmEQdviYdO1WFRRys+cvHyOY30fK7F444034vru1VdfPTz11FO9rUtjARadEA1FOhKWdkxVASemeNhhh8WCzXpJDNHWqCMq55xzTlh33XXjjMjJJ58cvve978XpOcz7hhtuiGsBOSbv\/fGPfxyDohSJxdLYNZou8K+7X44FO6MaQepCLIAgjHK7zz77xHKMFDC1T\/m0RtwCNUY1Uqw+MIXKrIbBqDwPFeD95P9MFQu+P9PvlC0aZb4v8kAdzmdHOR9mcNhOXpTEgql7Bji23HLL2H5wPPKRNcVcl67oWiysjlrib2vfqqTA8pD9U6kAq7t5yvO7S8ZBLKij3LOTtoP0TwwicM3TOpxi9Zzlke+++25v62KsbaDOd8molkLRVhLgUh+pyzvuuOO0\/QoDlwwOEI9UwcAOccOoVk2Mg1g0LZ8wSFvcBeMgFqX8LJGXz3Gs72MlFoyYMn1WJ7Cxzog1jgT83BxNI\/KTn\/xkytQbU5Zse\/jhh+PfFFoqpK1R52ZrAi2WjnAPB5970kknxWMTvJ122mlxbToWzXo31qxdd911sSJwTAKLQw89NP5tSCymYgWfPCUvyQf+T0oDkbr75aTv67ffMOlKLChnSARSu8Yaa8Tgl5u00\/Jn9Yg1wWmAS8NFWU\/LJo058mz7UT7r1D9vuhALoP7T6TGjw31cfPd8xJG8YDt5A+QFeVKquyytYB0xiY6StqE09T9MuhaLtL6lqapts7baUlq+rF1MX0\/TqNrLcRAL+htGJtN7ohgsIF\/IU7vxlbaA\/ei\/gKD6gAMOCCuvvHJsC1IIMEaRr12LBVCvd9999\/h96d+ZfcwHAUuwWoJ4JW1TDeo2\/T5tB\/dblPbpgnEQi6bl06jTFnfFOIhFKT9L5OVzHOv7WImF2VWdwIaMsgIMtuaRBiQ1Zezuf\/yP\/7HkIhD85WvPLfNthNfO4+qrr45\/GzfeeGOcrXj++efj39bBkvi\/wTnl32GSxSINHiyvLI\/Ta1h3vxx7H4n\/j4KuxAJoSCjDTDfTaNPBpQJBXaCBQrR\/9rOfxddosCnfND6WtzTsNEhpfaF8zmSxgGeffTYKFp9He8GyCYN2glmHdLann1iwP4Ma3\/\/+92MHySBD2hZ0QddiYVgbbKlf\/UvrNqmqjOXHHEVZhFGLBeWKPjNfEkwbyNIGli5Sbwl0kVnqOmXZAud77rknbiNg494AG0RDfslX2tUuGYVYAHlEwEjd5KZYBmH6YW0nQV4J8t\/KJm1vOijTJaMWi7bl0+jXFnfJqMWiKj9zqsrnuNX3ZXbGgrVoZBj\/GmQ2mcsaP+BiMeNga89tLZo1DHli9gMsmK26GDQkvMZ0FA2WxKI\/lp8k+\/7kF\/nGNsuruvvlWGNfdb26oCuxoOxxH9JNN90Unwix3XbbxTLItH\/awbHWnxE66gOJpYM8apF9qTPsm47KG+T7KIK5rsSCesgMJlPG9tQSAg4LiPMZHCAvyJO87tK+IG4steB4zBCRv4ySdjnyNgqxIC9oz6hz5I3V235ykdbl6eqr1el+xxsmoxYLgjKW2jAwZlj+5UuFKYeUWfLLhJhtzMrzlB22MyB25plnxrLCvQddB3CjEAsbOCHQuv322+MML\/WdWcYqyG\/yPR1syWEpNsEyN8tS37u8n8oYtVi0LZ8wXVvcJaMWi1J+lqgqn+NW38fyHovpOhOb+skrNZ05hcNubiXw4ukE7A9W8PMAIccC3Lzj4+LRQHHDJgWRIISLzDE5tiGxmIrlJyn9\/nnwUHe\/FHvPqPO1K7FgGRSPjLXAlxEMhHi6Ds5GOiwPrTxafpdSXq6HSRdiwWfQ2N1\/\/\/29LWHJckbaDdoPK2v9krUL\/IvY2bpWRonOPffceC26mr2CrsWCukY+kFdg4mX5068upuXO8rGEtdWlOt8FoxYL8ob6mj5kwQbGSuLPzZnT\/U6SjWqO4hGpXYsF5YfR2nTVAQ9Z4GmTtNX2mM4c8i8drOwH\/T\/l0+pBl4xaLNqWzzptcZeMWixK+VlikPI5yvo+VmJB4M5+dDr9poRoFGgc8mVPQHDFEhGeNsBN2GSuYZ0V69LTEUmgINuPjXCRSx0fz6hn1MN+dMSOlwdgNDQSiy9Jg4m0EbYgzoKHuvsZtn+676joQiyYhWCqMy9D9li5fvnAQwdo2JntoJ5xrF\/+8pdx5iNNPAebxp2y\/sADD3TWIHUhFtTvUqdHW8EoG+WJYCHPE\/KCPCFv+JsBEBvcyPOcdoWZi7xNGCZdikUqEWk5tDYz355jbWZel0twnNL16oJRigX1kyV16eiuQVDBj10+\/vjjvS2Lsbaw6iZN+jcGwRgRZvlJ13QtFqx+4EfZ8jLGdpaD5n07UDaRkbpP0LGybCsdumSUYuFRPuu0xV0ySrHol58pg5TPUdf3sRILYPqSUYX8MY4GHXe\/37GwIItAj06fkdoUCj7vTZ+vzIWloPNjYlASC3sS1fbbb78k+LGGJQ8i+FyJxZdYPpGnaV6RT+m2uvuB7ZsHdmy3pXBd0qVY5I\/jsyC3NJJB2aYcU\/YIeKcbCRpVMNeVWBBU5D\/mRLDBd66aLrZgOq27luel0TXuf8kf6TtMRiUWad2z9o3tlDf7O62zkNdbO16pzJHfo2ovRykWDJxRrtJn0huUXcpw\/hhVBtRY8lBaSkG7wSwn1+OOO+7obe2WUYgF+ZTP4pKnlLVScEbeco7kVx2YqWTGMh287IpRioVH+WzaFg+LUYpFv\/xMqVs+x6G+j51YAIWK2QieDJT+8jaiQYM\/3S9vM9tRtTTExIUOkPVoPHYWWWA9Op+DbHAzLK\/zbyofWCVSglmybvOv\/\/qv4wwGj5tkfRs3yyAyPE2KSpPeKEbjw\/0jBCO57IyKrsQC8sAjDVBSgau7n8lGKY0iGOlCLABpohxN92vPlFvqEU\/mYKbihBNOqFXuZrJYMLtJEM5Iji2F4F\/+Tn+NN8fKYF6urE7TiRIwk+e0A1yLtKwOm1EthUrLSS7\/fH+rj+l+vNf2gbS+kyzf2M6P5qVS0iWjFAv6LQYBSuWRfoh7elZbbbX4I1uUOfod+rL8dwMQXo7Fa\/Sl+Shyl3QtFrb0kxuDaRfJFwYdmXVk1LdUrmi\/8we7AAMEnD8DlvTp5DnHOuSQQ+JSa9rgrhmlWHiUz6Zt8bAYpVj0y8+UqvJpjFN9H0uxABqGyy67LBY+nr5Ap8PUJhV5uqCHQosEVI3OEsTQUCAJJJaH0NCQaPyskyOlnSBSstVWW0Vp2XXXXeMzmzkfRIdzJSjK309HmnaypFEEbiW6FAuwAG26fJhuv35SQZBCUNI1XYkFDTMzdfPnz4\/lkPLL6Lj9DgtYsMbNcHvttVds2NOAox8zWSyA3\/6wxyDyedzkxkBEv+DAymMuFsCySJ49ThtF4v+2VLIruhYLyNs0Up4\/pXpaysPSsdJ2dxSMSiwILggaCRCqoKxyrxXL88grynD+mGPynvaBexaZnR9lXkLXYgF8Zx5YYfnEv\/xdygtihZ133nmpEXSg7fybv\/mbuMSH49DmEtT\/6le\/qt2uejMqsfAqn9CkLR4WoxKLOvkJ\/conjFt9H1uxEMOna7GYyXQlFjOVrsRiJjIKsZjpjHLGYiYyCrGYyYxyxmImMsoZi5mIxGKCkVj4IbFoh8SiORILfyQWvkgsfJFY+CKx8EViMcFILPyQWLRDYtEciYU\/EgtfJBa+SCx8kVj4IrGYYCQWfkgs2iGxaI7Ewh+JhS8SC18kFr5ILHyRWEwwEgs\/JBbtkFg0R2Lhj8TCF4mFLxILXyQWvkgsJhiJhR8Si3ZILJojsfBHYuGLxMIXiYUvEgtfJBYTjMTCD4lFOyQWzZFY+COx8EVi4YvEwheJhS8SiwlGYuGHxKIdEovmSCz8kVj4IrHwRWLhi8TCF4nFBCOx8ENi0Q6JRXMkFv5ILHyRWPgisfBFYuGLxGKCkVj4IbFoh8SiORILfyQWvkgsfJFY+CKx8EVikfD666+HE044Iey5555LfhKdn+w\/8cQTY+D4wgsvxG1dw0\/c33bbbWHLLbeM\/3ohsfBDYtEOiUVzJBb+SCx8kVj4IrHwRWLhy1iJxaJFi2JwkacVVlghbL755uHGG28Mn3\/+eW9vX95+++3wt3\/7t2GjjTaKDeA4icWDDz4YjjnmmJgXEovxRGLRDolFcyQW\/kgsfJFY+CKx8EVi4cvYzVi8+OKLYZNNNgmrrLJKePzxx+O2V155JTbyBB5HHnlkHMEfBp988kmcrUjFog0ff\/xx+PnPf977qx333ntvWH755SUWY4rEoh0Si+ZILPyRWPgisfBFYuGLxMKXsRMLAnoaoFVXXTU88cQTva0hvPTSS2GDDTaIwTVB9rBg1sRLLJhp8OrwyQvyRGIxnkgs2iGxaI7Ewh+JhS8SC18kFr5ILHxZZsTCthN8XHXVVb2t\/niJxWuvvRbmzZsXj+eBxGK8kVi0Q2LRHImFPxILXyQWvkgsfJFY+LLMiAX3QCxYsGDJjAU3Wp9zzjlh3XXXDTfffHM4+eSTw\/e+971w4YUXxvsiOM4pp5wSl1TNmjUrdr4PPPBA72iLyffZYYcdwvbbb79ELDjOs88+G4466qiwxRZbhDfffLP3zsX3Xtx3333xuLx3pZVWCscff3x839NPPx023HDDGChZSmXloYceCttss81S70tJ9+H8KPj8K7EYTyQW7ZBYNEdi4Y\/EwheJhS8SC18kFr6MrVgQRD\/88MNx23vvvRcOPvjgGHjssssu4de\/\/nUM8k866aS4bZ999gmnnXZaDOYPOuiguD\/3Slx55ZXxfgyCFqRhzTXXDE8++WQ8Jp+zxx57xO28zv0QBIYE8iYBvPfVV18Ne++9d7yp28QCqUBgmJHgeNxQfvXVV8f3HnfccUvEhuPkMxZIEN+B+0Z4H7Mv3Jx+9NFHh88++yzugzysscYa8TX2QVS474TvKrEYTyQW7ZBYNEdi4Y\/EwheJhS8SC18kFr6MrVgQpK+11lph9uzZMeBACpiV+OCDD3p7Lg7AeY2gPuX6668PBx544JJAHe688854zGOPPTb+ffnll4e11147PPPMM\/FvsM82sTB4TyoWzz\/\/fLzfg88xeGLU3LlzYwHlc0tiwbnvtNNO8d4L46OPPoodGOfy3HPPxZkZAgXyC0Ex+K6cv8RiPJFYtENi0RyJhT8SC18kFr5ILHyRWPiyzCyFKmFikQfbhx9+eNxeSnQW77zzTvyXZU95IFO6x+K8886bIhbXXnvttOdXEounnnoqrL766sXzQhqQHxOgW265pfeuxegei\/FGYtEOiUVzJBb+SCx8kVj4IrHwRWLhy4wUC4L5fAlSCoKQ\/16FUUcs+LuJWLA\/y7X6vY9jl76TxGK8kVi0Q2LRHImFPxILXyQWvkgsfJFY+DJjxWKrrbYK7777bm\/LYliixLIpbvzmnoWtt946vP\/++71XF1NHLJix4HMvvfTS+HcK58Jypiqx4HvlS7eA1x577LFw0UUXxWPzGSkSi\/FGYtEOiUVzJBb+SCx8kVj4IrHwRWLhy4wUiyuuuCIuJzrhhBPiTdkGT3HiB+sQDG7yXnnllafc7wCIQC4cZ5999hSx4L4M7vng5m1+X8PgCVLnnntu5c3biM7ChQvjrIX9+B9wjqeeemoUkkceeSSeF\/eIpD8EaGKRC0cbJBZ+SCzaIbFojsTCH4mFLxILXyQWvkgsfBk7sbBf3uaxstddd92UG5hTeFrSWWedFYMR\/uVvg5uk6RR4jcfREtzvtddeYdddd11y8zezA8gBQT7Cwfu5BwJZIIC\/9dZbw1tvvRWDfp46RbDPfsA5nXjiiVFeeHoVjSb7bLbZZuHll1+O+5hY8F0effTR+BQpPpunQvEUKG5K5\/XDDjssfibbAZng18U5NsEC7+FYZ5xxRnwPFYDzTG9Mb4rEwg+JRTskFs2RWPgjsfBFYuGLxMIXiYUvYyUWCADBRZrSmQLDgvZ0P\/5mu0FAzqNf+Z0IAnJmABCFFB4Va78VgYDccMMN4dBDDw277757FI833ngjfn76OTY7ggAgC8gJ7992223jk6FSuAGbz+f3N+wxt0hJ+vsX9rmpQCEziATSYud+++23h\/nz54fzzz9\/iRy1RWLhh8SiHRKL5kgs\/JFY+CKx8EVi4YvEwpexm7EQ3SGx8ENi0Q6JRXMkFv5ILHyRWPgisfBFYuGLxGKCkVj4IbFoh8SiORILfyQWvkgsfJFY+CKx8EViMcFILPyQWLRDYtEciYU\/EgtfJBa+SCx8kVj4IrGYYCQWfkgs2iGxaI7Ewh+JhS8SC18kFr5ILHyRWEwwEgs\/JBbtkFg0R2Lhj8TCF4mFLxILXyQWvkgsJhiJhR8Si3ZILJojsfBHYuGLxMIXiYUvEgtfJBYTjMTCD4lFOyQWzZFY+COx8EVi4YvEwheJhS8SiwlGYuGHxKIdEovmSCz8kVj4IrHwRWLhi8TCF4nFBCOx8ENi0Q6JRXMkFv5ILHyRWPgisfBFYuGLxGKCkVj4IbFoh8SiORILfyQWvkgsfJFY+CKx8GXsxOKtt94K5513Xnj77bd7W0J48MEHw89\/\/vPw+uuvh4022igGIGlatGhRb8\/F8Hf6Ou958803e68OxhdffBEDxuWXXz5ceOGF8e\/33nsvbLfddmGdddYJTzzxRG\/PZQ+JhR8Si3ZILJojsfBHYuGLxMIXiYUvEgtfxkosPvjgg3DqqafGf43HHnssXHbZZTGgB16jE501a1ZYccUVw1133bXkNYO\/r7rqqrDCCiuEc889N3z88ce9Vwbnk08+Cfvtt18MetZee+3w3HPPheeffz6st956cduee+4Z91kWkVj4IbFoh8SiORILfyQWvkgsfJFY+CKx8GWsxOLee+8Np512WgwuPv\/887jtpJNOCvfcc88U2fj000\/DoYceGgMRxKEkFgR5559\/\/lKvNYHPY8aDzgaxgI8++ig89NBD4aCDDpJYCIlFSyQWzZFY+COx8EVi4YvEwheJhS9jJRZ33nlnnIkgwLAg7fDDD49\/M\/vwwAMPxG3w2muvhXnz5oVVV101zmqk8PcRRxwRhcCLV199Nfz0pz+dMvtx0003xZmRZRWJhR8Si3ZILJojsfBHYuGLxMIXiYUvEgtfxkosPvzwwzgDMGfOnHDLLbfEbU8++WTYdNNNw8YbbxxeeOGFuM1AIBCLBQsWxMAEuDfjgAMOiOKRwuzCNttsE8VlpZVWCscff3z8PANp4TgENyxz2n333eNnw8svvxyOPvroJZ8BnN\/FF1\/sKi9dI7HwQ2LRDolFcyQW\/kgsfJFY+CKx8EVi4cvY3bw9CCxzYrkTsnDkkUdGUTj22GPDbbfd1ttjMTfffHPYZZddwiuvvBKXWNn9F8jCZ599Frdvvvnm4e\/+7u\/iMV988cXYCNqN2bwnX1LF+5Z1JBZ+SCzaIbFojsTCH4mFLxILXyQWvkgsfFmmxQLsfgvkYscddwxnnnnmFAng3oyddtopPlnK4P4IOg27GRuBmD9\/fhQK4+GHHw5PP\/1076+ZicTCD4lFOyQWzZFY+COx8EVi4YvEwheJhS\/LvFgAQrDuuuvG4C5drgRPPfVUWH311WPQkidkhPs6mOnYY4894pKrX\/7yl0tuHJ\/pSCz8kFi0Q2LRHImFPxILXyQWvkgsfJFY+DIjxIInNvFbFaXfq2A2YsMNN5z29ya4KZslUggK6brrrpvxgiGx8ENi0Q6JRXMkFv5ILHyRWPgisfBFYuHLRIgFN3hfffXVvS1fwmv5E6VYWoVgcAP5iSee6PK42nFFYuGHxKIdEovmSCz8kVj4IrHwRWLhi8TClxkvFu+++25YuHBhnLV4\/PHHe1sXz1DwY3w8RYqnP7EEKoXXaAjTJ0fNNCQWfkgs2iGxaI7Ewh+JhS8SC18kFr5ILHyZEWLBo2SZlSDx\/xyeCsVToGbPnh0bt8MOOyz+BgbbgZkL\/uZ+C2Ys3n\/\/\/XjDN4++nQlPf6pCYuGHxKIdEovmSCz8kVj4IrHwRWLhi8TCl2VaLJhNoLEiIElTPtPAcqb77rsvdsDcsM09FDfccMOSZU7MWPAbFquttlp8PxLCY2vTX\/ueiUgs\/JBYtENi0RyJhT8SC18kFr5ILHyRWPgyI2YsRDMkFn5ILNohsWiOxMIfiYUvEgtfJBa+SCx8kVhMMBILPyQW7ZBYNEdi4Y\/EwheJhS8SC18kFr5ILCYYiYUfEot2SCyaI7HwR2Lhi8TCF4mFLxILXyQWE4zEwg+JRTskFs2RWPgjsfBFYuGLxMIXiYUvEosJRmLhh8SiHRKL5kgs\/JFY+CKx8EVi4YvEwheJxQQjsfBDYtEOiUVzJBb+SCx8kVj4IrHwRWLhi8RigpFY+CGxaIfEojkSC38kFr5ILHyRWPgisfBFYjHBSCz8kFi0Q2LRHImFPxILXyQWvkgsfJFY+CKxmGAkFn5ILNohsWiOxMIfiYUvEgtfJBa+SCx8kVhMMBILPyQW7ZBYNEdi4Y\/EwheJhS8SC18kFr5ILCYYiYUfEot2SCyaI7HwR2Lhi8TCF4mFLxILXyQWE4zEwg+JRTskFs2RWPgjsfBFYuGLxMIXiYUvEosJRmLhh8SiHRKL5kgs\/JFY+CKx8EVi4YvEwpfOxGKvvfYKP\/jBD8J9992nNCZp3XXXDQsXLiy+pjRY+if\/5J+EHXbYofia0vTp0ksvjWJxww03FF9Xqk5rrrlm+Mu\/\/Mvia0rN0o9+9KM4WFB6TWnwNG\/ePPX\/jmnBggVh\/fXXL76mNHgiDvoX\/+JfFF9TGjztvPPOYeONN+5F\/\/UZWCw222yz8PWvfz38\/u\/\/vtKYpK985Svha1\/7WvE1pcHSP\/gH\/yD81m\/9VvE1penTd77znSgWs2fPLr6uVJ1+8zd\/U22rc\/rqV78a28fSa0qDJ\/oZ5adfUn76JuWnb\/rmN78Z\/vRP\/7QX\/ddnYLEQQgghhBBCiByJhRBCCCGEEKI1EgshhBBCCCFEayQWQgghhBBCiNZILIQQQgghhBCtkVgIIYQQQgghWiOxEEIIIYQQQrRGYiGEEEIIIYRojcRCCCGEEEII0RqJhRBCCCGEEKI1EgshhBBCCCFES0L4\/wCT4HRP7CGXcQAAAABJRU5ErkJggg==)","f8b50d48":"## 1.3 Data Mining Goals \n### Business Success Criteria\nBased on the system prediction, the total number of actual customers that \n\n*   Subscribe to the term deposit plans should be more than 90%.\n*   The increase of the successful subscription rate among the target customers to the term deposit plan should be more than 50%. \n\n### Data Mining Success Criteria\n\n*   The accuracy of the prediction result should be more than 90%.\n\n","8e9ae1f6":"The optimal hyperparameter values are shown below. The will be applied to the random forest model.","2582dd36":"The gradient boosting classifier is implemented to carry out gradient boosting classification. The best learning rate was selected by setting different rate to achieve the best performance.","39798ee4":"### Duplicated Values","8a1f5862":"The code below is is used to split the Xtrain into 2 different categories which one consists of categorical data while the other consists of numerical data. ","ae25da84":"The learning rate, 1 was selected as a parameter of the gradient boosting model created. After that, the Xtrain and ytrain dataset were fit into the model created and make prediction on Xtest dataset. ","1f965d7a":"### Data Aggregation\nThe table belows shows the data aggregation of each numerical column which can brings insight about the data. As we observe through the table, there is no any missing values among the columns as the number of count for each column is the same which is 8915. Besides, in the 'previous' column, noted there are 0 values in minimumn, 25%, 50% row while there is a value of 58 in the max row. However, in the 'previous' column, 0 is meaningful which indicates no contact before the campagin. Hence, 0 in the 'previous' column is the valid value but not the missing values or invalid values. ","ef005168":"From the result shown below, there is no duplicated data as the data size is the same.\n\n\n\n\n\n\n\n","a051af15":"The accuracy score of the Gaussian Naive Bayes is 76.22% which is consider acceptable.","5e3104de":"### Gradient Boosting Classification","610a9b72":"The sklearn LabelEncoder function is utilized to encode the categorical variables such as job, marital, education, contact, poutcome, default, housing, loan, subscribed and month.","99f31d99":"Performing training for the random forest model","54bc5ee2":"Fit the training sets to the model.","40637d9e":"## 4.7 Gradient Boosting Classification\n","82e794f8":"Chi-Square Test is carried out to investigate the dependency between the both categorical x and  y.\n\nBased on the results below, the attribute job, marital, eudcation, defualt, housing, loan, contact, month and poutcome are dependent to subscribed","e17a6a41":"As we observed from the learning curve of Naive Bayes, the training score decreased in the beginning and then flat after 2000th training examples while the validation score increase until 2000th training examples and flat after that. Hence, it is a well fit model.\n\nBesides, as we can see from the second graph (Scalability of the model), Naive Bayes requires more time to train when the training datasets increase. \n\nFrom the third graph (Performance of the model), Naive Bayes model have a greater score when fit times increased.","d4ac38e0":"## 5.2 Model Evaluation\n","fdfe5b4f":"## 4.2 K-Nearest Neighbours (KNN)\nKNN is an algorithm which it is non-parametric and lazy (instance based) because it doesn't have a specialized training phase.\nIn this section, the grid search algorithm was used to find the best parameters for the k values in order to have the best accuracy. In this case, k value of 14 provides the highest accuracy score.","21fe4efd":"## 2.2 Explore Categorical Columns","3cd0ac34":"According to graph below, the last contact duration of not subscribe customers are mostly between 0 to 1000 seconds while for subscribed customers, the last contact duration is between 0 to 2000 seconds. ","75a07182":"The customers are categorized according to the presence of personal loan. According to the graph, based on the customer that have subscribed the term deposit, most of the customers (3045) do not have housing loan. Only 269 customers have housing loan.","3eda2ac1":"The accuracy score for KNN model is 79.45% which is consider acceptable.","2b4c54c4":"Predict the testing sets.","a936bf20":"Predict the test set results and calculate the accuracy. ","b722bc57":"# 5.0 Evaluation\nThe evaluation mathod used involving confusion metrix, precision-recall curve and also learning curve.","49fabe3f":"### Decision Tree","e2c414a3":"## 4.4 Random Forest","f6672c75":"### KNN\nWhen the KNN predicts a number of 662 (527+135, True Positive + False Positive) subscribed , only 527(True Positive) of which were actual subscribed, while failing to return 323 additional actual subscribed (False Negative), its precision is 527\/662 = 0.7961 (TP\/TP+FP) while its recall is 527\/323+527 = 0.62 (TP\/TP+FN). In other words, when the model predicts the customer term deposit subscription, 135 customers are predicted as they will subscribe the term deposit, but actually they are not subscribing. On the other side, 527 customers are predicted correctly by the model.\n\nWhile evaluating the model from the accuracy perspective, the result is sligtly lower than its precision which is 79.45%. It means that out of 2229 customers,  1244 of customers will not subscribe the term deposit which are predicted correctly by the model. Besides, 527 of customers will subscribe the term deposit which are predicted correctly.","d23e23bb":"When the Decision tree predicts a number of 848 (662+186, True Positive + False Positive) subscribed , only 662(True Positive) of which were actual subscribed, while failing to return 188 additional actual subscribed (False Negative), its precision is 662\/848 = 0.7807 (TP\/TP+FP) while its recall is 662\/662+188 = 0.7788 (TP\/TP+FN). In other words, when the model predicts the customer term deposit subscription, 186 customers are predicted as they will subscribe the term deposit, but actually they are not subscribing. On the other side, 662 customers are predicted correctly by the model.\n\nWhile evaluating the model from the accuracy perspective, the result is higher than its precision which is 83.22%. It means that out of 2229 customers,  1193 of customers will not subscribe the term deposit which are predicted correctly by the model. Besides, 662 of customers will subscribe the term deposit which are predicted correctly.\n","da0a0348":"The subscribed and not subscribe customers will be categorized according to their job. According to the graph below, the highest number of customers who do not subscribe the term deposit are from 'blue-collar' job (1274) followed by management job (1122).\n\nWhile for subscribed customers, the highest number of job is management followed by technician (505). ","11b1721b":"While evaluating the model from the accuracy perspective, the result is higher than its precision which is 81.88%. It means that out of 2229 customers, 1218 of customers will not subscribe the term deposit which are predicted correctly by the model. Besides, 607 of customers will subscribe the term deposit which are predicted correctly.","fa983169":"### Random Forest","f09a4f8f":"## 5.1 Learning Curve\nLearning curves are plots that show changes in learning performance over time  and it can be used to diagnose an underfit, overfit, or well-fit model based on the train and validation datasets.\n\nThe section below shows the learning curve, scalability and performance of different models.","dc26cfbb":"## 4.1 Naive Bayes\nNaive Bayes is a simple \"probabilistic classifiers\" which based on applying Bayes' theorem with strong (na\u00efve) independence assumptions between the features (X) and it is useful for very large dataset. In this section, GaussionNB was imported from sklearn and Xtrain, ytrain were bring fitted into the model in order to do prediction.","1cc88a60":"Since there are numerical data (continuous) in the table, StandardScaler was used to scales each input variable separately by subtracting the mean and dividing by the standard deviation in order to have a distribution of mean of zero and a standard deviation of one.","2f9d6c37":"### Missing Values","4a0b5b16":"The scalability and performace graphs determined the times required by the gradient boosting model to train on the various size of training dataset and the model achieves a good score (81.3%) when fit times increase.","f40058b0":"When the Gradient Boosting predicts a number of 768 (607+161, True Positive + False Positive) subscribed , only 607(True Positive) of which were actual subscribed, while failing to return 243 additional actual subscribed (False Negative), its precision is 607\/768 = 0.7904 (TP\/TP+FP) while its recall is 607\/607+243 = 0.7141 (TP\/TP+FN). In other words, when the model predicts the customer term deposit subscription, 161 customers are predicted as they will subscribe the term deposit, but actually they are not subscribing. On the other side, 607 customers are predicted correctly by the model.\n","bd06b78f":"From the result shown in below, there is no any missing values as the number of null values in each column is 0.","8948e18a":"As we observed from the learning curve of KNN, the training score gradually increase to the end while the validation score also the same but it has a score lower then training score. Hence, it is a well fit model.\n\nBesides, as we can see from the second graph (Scalability of the model), KNN requires more time to train when the training datasets increase. \n\nFrom the third graph (Performance of the model), KNN model have a greater score when fit times increased.","4947b8a0":"A linear SVM was chosen by using the SVC classifier to make prediction on Xtest dataset by fitting the Xtrain and ytrain datasets into the SVM model. Accuracy was calculated and displyed by using score syntax.","f65ba507":"## 4.3 Decision Tree","0cbbb808":"### Remove Outliers","5298b585":"### Linear SVM","40e01cfc":"Chi-Square Test","dc081ceb":"# 6.0 Deployment\n The project is deployed in the Google Colab, Kaggle and Github platforms.\n\n [Github Link](https:\/\/github.com\/yujune\/Data-Science)","16b911e5":"After performing label encoding operation for both train and test datasets, the categorical values are converted to numerical values. ","b0837089":"The datatype of the columns can be further studied by using info() function. \n\nBased on the displayed result, the datatype of job, marital, education, default, housing, loan, contact, month, poutcome are object, they can be considered as categorical variables.\n\nBesides, the datatype of age, balance, day, duration, campaign, pdays, previous are int64, it means that they are numerical variables.","56249e62":"# 1.0 Business Understanding"}}