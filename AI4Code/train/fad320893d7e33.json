{"cell_type":{"97a0b8a6":"code","5fd7a19c":"code","d7996d62":"code","ae9c86e9":"code","f4fb8c9d":"code","b7db1be9":"code","7e43bbf9":"code","845b114e":"code","edc41b5e":"code","04b6725f":"code","9e34af8e":"code","f547a822":"code","70fd205e":"code","b36fd0fa":"code","3af0b98c":"code","70320692":"code","17ac1b3b":"code","34fa71ed":"code","b6799870":"code","23c4a8d0":"code","10026265":"code","ba982337":"code","120f9d5c":"code","f02d27c5":"code","fe8d185a":"code","49f9c971":"code","9a98d550":"code","493c5623":"code","f3af318a":"code","95b8b9f8":"code","71952087":"markdown","6c44f418":"markdown","7666932b":"markdown","5c36bb6e":"markdown","a8c41973":"markdown","aca88113":"markdown","3e9c02a1":"markdown","a367c9fc":"markdown","6734a9d3":"markdown","74aac2dd":"markdown","95b8c1ca":"markdown","e1adb40c":"markdown"},"source":{"97a0b8a6":"#importing the required libraries\nimport pandas as pd\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","5fd7a19c":"employee_df = pd.read_csv('..\/input\/hrdepartment20_may_2020.csv')\nemployee_df.head()","d7996d62":"employee_df.info()","ae9c86e9":"employee_df.describe()","f4fb8c9d":"#replacing Yes\/no in attrition column with 1\/0\nemployee_df['Attrition'] = employee_df['Attrition'].apply(lambda x: 1 if x == 'Yes' else 0)\n","b7db1be9":"employee_df.head()","7e43bbf9":"employee_df.hist(figsize=(20,20))\nplt.show()","845b114e":"#Removing EmployeeCount, EmployeeNumber, Over18, StandardHours as they dont add much value to the code\n\nemployee_df.drop(['EmployeeCount', 'StandardHours', 'Over18', 'EmployeeNumber'], axis=1, inplace=True)","edc41b5e":"employee_df.shape","04b6725f":"#dataframes for people who stayed or left\nleft_df = employee_df[employee_df['Attrition'] == 1]\nstayed_df = employee_df[employee_df['Attrition'] == 0]","9e34af8e":"#based on Age\nplt.figure(figsize=[15, 8])\nsns.countplot(x = 'Age', hue = 'Attrition', data = employee_df)\nplt.show()","f547a822":"plt.figure(figsize=[20,12])\nplt.subplot(411)\nsns.countplot(x = 'JobRole', hue = 'Attrition', data = employee_df)\nplt.subplot(412)\nsns.countplot(x = 'MaritalStatus', hue = 'Attrition', data = employee_df)\nplt.subplot(413)\nsns.countplot(x = 'JobInvolvement', hue = 'Attrition', data = employee_df)\nplt.subplot(414)\nsns.countplot(x = 'JobLevel', hue = 'Attrition', data = employee_df)\nplt.show()","70fd205e":"\nplt.figure(figsize=(10,6))\n\nsns.kdeplot(left_df['DistanceFromHome'], label = 'Employees who left', shade = True, color = 'r')\nsns.kdeplot(stayed_df['DistanceFromHome'], label = 'Employees who Stayed', shade = True, color = 'b')\n\nplt.xlabel('Distance From Home')","b36fd0fa":"plt.figure(figsize=(12,7))\n\nsns.kdeplot(left_df['TotalWorkingYears'], shade = True, label = 'Employees who left', color = 'r')\nsns.kdeplot(stayed_df['TotalWorkingYears'], shade = True, label = 'Employees who Stayed', color = 'b')\n\nplt.xlabel('Total Working Years')","3af0b98c":"#checking monthly income based on job role\nplt.figure(figsize=(10, 6))\nsns.boxplot(x = 'MonthlyIncome', y = 'JobRole', data = employee_df)","70320692":"employee_df['OverTime'] = employee_df['OverTime'].apply(lambda x: 1 if x == 'Yes' else 0)\n","17ac1b3b":"employee_df.OverTime","34fa71ed":"X_numerical = employee_df[['Age', 'DailyRate', 'DistanceFromHome',\t'Education', 'EnvironmentSatisfaction', 'HourlyRate', 'JobInvolvement',\t'JobLevel',\t'JobSatisfaction',\t'MonthlyIncome',\t'MonthlyRate',\t'NumCompaniesWorked',\t'OverTime',\t'PercentSalaryHike', 'PerformanceRating',\t'RelationshipSatisfaction',\t'StockOptionLevel',\t'TotalWorkingYears'\t,'TrainingTimesLastYear'\t, 'WorkLifeBalance',\t'YearsAtCompany'\t,'YearsInCurrentRole', 'YearsSinceLastPromotion',\t'YearsWithCurrManager']]\n\nX= X_numerical\nX","b6799870":"y= employee_df['Attrition']\ny","23c4a8d0":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()\nX = scaler.fit_transform(X_numerical)","10026265":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.15)","ba982337":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score\n\nmodel = LogisticRegression()\nmodel.fit(X_train, y_train)\n\ny_pred = model.predict(X_test)","120f9d5c":"from sklearn.metrics import confusion_matrix, classification_report\n\nprint(\"Accuracy of the Model is\",100*accuracy_score(y_pred,y_test), '%')\n","f02d27c5":"# Testing Set Performance\nConfusionMatrix = confusion_matrix(y_pred, y_test)\nsns.heatmap(ConfusionMatrix, annot=True,linewidths=1 )\nplt.show()","fe8d185a":"ConfusionMatrix","49f9c971":"print(classification_report(y_test, y_pred))","9a98d550":"from sklearn.ensemble import RandomForestClassifier\n\nmodel = RandomForestClassifier()\nmodel.fit(X_train, y_train)\n","493c5623":"y_pred = model.predict(X_test)","f3af318a":"RFConfusionMatrix = confusion_matrix(y_pred, y_test)\nsns.heatmap(RFConfusionMatrix, annot=True)","95b8b9f8":"print(\"Clasiification Report from Random Forest \\n\",classification_report(y_test, y_pred))","71952087":"Employees with less total working years have higher attrition","6c44f418":"There are some job groups having higher salary range. These job groups might have lower attrition compared to other groups \n","7666932b":"Shape has reduced from 35 to 31 columns as we dropped 4 columns","5c36bb6e":"From the curve, it seems employees staying far from home have higher chances of attrition","a8c41973":"Although the accuracy of the model is good , but here f1 score needs to be checked , which is on the lower side. The model needs to be further worked on to improve this number","aca88113":"From the graph above, it could be observed that there were higher percentage of people leaving the firm at lower age .\nThis is quite evident from general intuition as well","3e9c02a1":"# Lets analyse the data now","a367c9fc":"Random Forest gives even lower f1 score,\nFrom the f1-scores, we can say that the Logistic Regression Model has worked better. Although, that also needs further improvement","6734a9d3":"# Will further try further data analysis to improve the accuracy of the Model","74aac2dd":"importing the data set ","95b8c1ca":"# Project on Predicting the attrition of Employee in a Company","e1adb40c":"# Trying Random Forest to check the accuracy"}}