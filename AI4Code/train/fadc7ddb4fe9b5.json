{"cell_type":{"0fab5cdb":"code","d26f8187":"code","88eb979e":"code","8952d50d":"code","9ef1df7e":"code","9ffdb09b":"code","91c79821":"code","fc7306c8":"code","3b4e9233":"markdown"},"source":{"0fab5cdb":"import pandas as pd\nimport numpy as np \nimport matplotlib.pyplot as plt\nimport sklearn\n\n# Import necessary modules\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nfrom math import sqrt\n\n# Keras specific\nimport keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.utils import to_categorical ","d26f8187":"df = pd.read_csv('..\/input\/diabetes-data-set\/diabetes.csv') \nprint(df.shape)\ndf.describe()","88eb979e":"target_column = ['Outcome'] \npredictors = list(set(list(df.columns))-set(target_column))\ndf[predictors] = df[predictors]\/df[predictors].max()\ndf.describe()","8952d50d":"\nX = df[predictors].values\ny = df[target_column].values\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=40)\nprint(X_train.shape); print(X_test.shape)","9ef1df7e":"y_train = to_categorical(y_train)\ny_test = to_categorical(y_test)\n\ncount_classes = y_test.shape[1]\nprint(count_classes)","9ffdb09b":"model = Sequential()\nmodel.add(Dense(16, activation='relu', input_dim=8))\nmodel.add(Dense(16, activation='relu'))\nmodel.add(Dense(16, activation='relu'))\nmodel.add(Dense(2, activation='softmax'))\n\n# Compile the model\nmodel.compile(optimizer='adam', \n              loss='categorical_crossentropy', \n              metrics=['accuracy'])","91c79821":"model.fit(X_train, y_train, epochs=150, batch_size=10)","fc7306c8":"pred_train= model.predict(X_train)\nscores = model.evaluate(X_train, y_train, verbose=0)\nprint('Accuracy on training data: {}% \\n Error on training data: {}'.format(scores[1], 1 - scores[1]))   \n \npred_test= model.predict(X_test)\nscores2 = model.evaluate(X_test, y_test, verbose=0)\nprint('Accuracy on test data: {}% \\n Error on test data: {}'.format(scores2[1], 1 - scores2[1]))    ","3b4e9233":"The output above shows the performance of the model on both training and test data. The accuracy was around 87% on the training data and 78% on the test data. Ideally, the higher the accuracy value, the better the model performance."}}