{"cell_type":{"3e29f0b3":"code","70c0aa79":"code","c0dd9f1c":"code","eec3c310":"code","74c4560b":"code","48a41cb4":"code","2ba6cabe":"code","0fe92057":"code","8d89f8bc":"code","dd5b9ff3":"code","b1bc2003":"code","ce895d99":"markdown","db4c8cea":"markdown","1a65fa1d":"markdown","5c5c052b":"markdown","b1328b86":"markdown","6d1f1038":"markdown"},"source":{"3e29f0b3":"#Let's load in some basics and make sure our files are all here\nimport numpy as np\nimport pandas as pd\nimport os\nprint(os.listdir(\"..\/input\"))","70c0aa79":"train = pd.read_json('..\/input\/train.json')\ntest = pd.read_json('..\/input\/test.json')\nsample_submission = pd.read_csv('..\/input\/sample_submission.csv')","c0dd9f1c":"print(test.columns)\nprint(train.columns)\nprint(sample_submission.head(4))","eec3c310":"print(train.shape)\nprint(test.shape)","74c4560b":"print(train[train['is_turkey']==1].index)","48a41cb4":"from IPython.display import YouTubeVideo\nYouTubeVideo(train['vid_id'][1],start=train['start_time_seconds_youtube_clip'][1],end=train['end_time_seconds_youtube_clip'][1])","2ba6cabe":"print(train['audio_embedding'].head())\n\n#see the possible list lengths of the first dimension\nprint(\"train's audio_embedding can have this many frames: \"+ str(train['audio_embedding'].apply(lambda x: len(x)).unique())) \nprint(\"test's audio_embedding can have this many frames: \"+ str(test['audio_embedding'].apply(lambda x: len(x)).unique())) \n\n#see the possible list lengths of the first element\nprint(\"each frame can have this many features: \"+str(train['audio_embedding'].apply(lambda x: len(x[0])).unique()))","0fe92057":"from tensorflow.python.keras.models import Sequential\nfrom tensorflow.python.keras.layers import Dense, Bidirectional, LSTM, BatchNormalization, Dropout\nfrom tensorflow.python.keras.preprocessing.sequence import pad_sequences\nfrom sklearn.model_selection import train_test_split\n\n#split the training data to have a validation set\ntrain_train, train_val = train_test_split(train)\nxtrain = [k for k in train_train['audio_embedding']]\nytrain = train_train['is_turkey'].values\n\nxval = [k for k in train_val['audio_embedding']]\nyval = train_val['is_turkey'].values\n\n# Pad the audio features so that all are \"10 seconds\" long\nx_train = pad_sequences(xtrain, maxlen=10)\nx_val = pad_sequences(xval, maxlen=10)\n\ny_train = np.asarray(ytrain)\ny_val = np.asarray(yval)\n\n#Define a basic LSTM model\nmodel = Sequential()\nmodel.add(BatchNormalization(input_shape=(10, 128)))\nmodel.add(Dropout(.5))\nmodel.add(Bidirectional(LSTM(128, activation='relu')))\nmodel.add(Dense(1, activation='sigmoid'))\n\n#maybe there is something better to use, but let's use binary_crossentropy\nmodel.compile(loss='binary_crossentropy',\n              optimizer='adam',\n              metrics=['accuracy'])\n\n#fit on a portion of the training data, and validate on the rest\nmodel.fit(x_train, y_train,\n          batch_size=300,\n          nb_epoch=4,validation_data=(x_val, y_val))\n\n# Get accuracy of model on validation data. It's not AUC but it's something at least!\nscore, acc = model.evaluate(x_val, y_val, batch_size=300)\nprint('Test accuracy:', acc)","8d89f8bc":"test_data = [k for k in test['audio_embedding']]\nsubmission = model.predict_classes(pad_sequences(test_data))\nsubmission = pd.DataFrame({'vid_id':test['vid_id'].values,'is_turkey':[x for y in submission for x in y]})","dd5b9ff3":"print(submission.head()) #check to see that it looks like the sample submission","b1bc2003":"submission.to_csv('lstm_starter.csv', index=False) #drop the index so it matches the submission format.","ce895d99":"For more information on what these features are and where they come from, see [this page.](https:\/\/github.com\/tensorflow\/models\/tree\/master\/research\/audioset#input-audio-features)\n\nNow that we've seen what the given data looks like, let's make a prediction using a basic LSTM model. ","db4c8cea":"Our files are here and load without error. Let's check to make sure the columns match and see the submission format.","1a65fa1d":"How much data is there?","5c5c052b":"Let's find a row that is labeled with \"is_turkey\" and play the clip it comes from.","b1328b86":"Finally, let's get a prediction to submit. ","6d1f1038":"Yep, that sounds like a turkey!\n\nWe also have some VGGish audio embeddings to take a look at. Let's see what the shape of those are."}}