{"cell_type":{"f536058f":"code","36633978":"code","66f63593":"code","dbdd11d5":"code","6e6d4654":"code","1dcf8e27":"code","e6ddcff5":"code","6c9fd406":"code","9588b94f":"code","dcf736d8":"code","fd29729b":"code","2fb43637":"code","3ffce648":"code","3dfb25c5":"code","60514543":"code","95c40b6a":"code","a837ec1a":"code","cf3c5e8b":"code","c47079f0":"code","9f801d10":"code","4cfdbe1c":"code","48aa253d":"code","fd99db17":"code","8111406b":"code","bb0fa9e9":"code","18eef250":"code","10906c04":"markdown","ad7d9926":"markdown","c0cc85fe":"markdown"},"source":{"f536058f":" # Load Basic Libraries\nimport sys\nif not sys.warnoptions:\n    import warnings\n    warnings.simplefilter(\"ignore\")\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom bokeh.plotting import figure, save\nimport plotly.graph_objects as go\nimport sklearn\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nplt.style.use('ggplot')\npd.plotting.register_matplotlib_converters()","36633978":"import os\nos.environ['KAGGLE_USERNAME'] = \"sushilakumari\" # username from the json file\nos.environ['KAGGLE_KEY'] = \"7917b5aaaaee4968aed8788fb4acb514\" # key from the json file\n!kaggle competitions download -c covid19-global-forecasting-week-3","66f63593":"from zipfile import ZipFile\n\nwith ZipFile('covid19-global-forecasting-week-3.zip', 'r') as zipObj:\n   # Extract all the contents of zip file in current directory\n   zipObj.extractall()","dbdd11d5":"train_df=pd.read_csv('train.csv')\ntest_df=pd.read_csv('test.csv')\nall_data=pd.concat([train_df,test_df],axis=0) # combined train and test data\nall_data.reset_index(drop=True) # reset index with drop true","6e6d4654":"train_df.head()","1dcf8e27":"train_df.info()","e6ddcff5":"# Get the unique countries count\ntrain_df['Country_Region'].nunique() ","6c9fd406":"print(\"fill blanks and add region for counting\")\ntrain_df.drop('Province_State',axis=1,inplace=True)","9588b94f":"# Resetting Date column into Datetime object and making it an index of dataframe\ntrain_df['Date']=pd.to_datetime(train_df['Date'])\ntrain_df.set_index('Date',inplace=True)","dcf736d8":"print(train_df)","fd29729b":"pivot=pd.pivot_table(train_df,columns='Country_Region',\n                     index='Date',\n                     values='ConfirmedCases',\n                     aggfunc=np.sum)\n\npivot_fatality=pd.pivot_table(train_df,\n                              columns='Country_Region',\n                              index='Date',\n                              values='Fatalities',\n                              aggfunc=np.sum)\ncountry_list=[]\nvalue_list=[]\nfatality_list=[]\n\nfor country in list(pivot.columns):\n    country_list.append(country)\n    value_list.append(pivot[country].max())\n    fatality_list.append(pivot_fatality[country].max())\n    new_dict={'Country':country_list,'Confirmed':value_list,'Fatality':fatality_list}\n\ndf=pd.DataFrame.from_dict(new_dict)\ndf.set_index('Country',inplace=True)\ndf","2fb43637":"sortdf_conf = df.sort_values(by=['Confirmed'],ascending=False)\nsortdf_fat = df.sort_values(by=['Fatality'],ascending=False)\ntop10_conf = sortdf_conf.head(10)\ntop10_fat = sortdf_fat.head(10)\nprint(top10_conf)\nprint(top10_fat)","3ffce648":"# Confirmed COVID-19 Cases by country\nimport plotly.express as px\nfig = px.bar(top10_conf, x=top10_conf.index, y='Confirmed', \n             labels={'x':'Country'}, color=\"Confirmed\", \n             color_continuous_scale=px.colors.sequential.Rainbow_r)\nfig.update_layout(title_text='Top 10 Confirmed COVID-19 cases by country')\nfig.show()\n\nfig = px.bar(top10_fat, x=top10_fat.index, y='Fatality', \n             labels={'x':'Country'}, color=\"Fatality\", \n             color_continuous_scale=px.colors.sequential.Rainbow_r)\nfig.update_layout(title_text='Top 10 Fatality COVID-19 cases by country')\nfig.show()\n\n","3dfb25c5":"# We can also sort values using this code\ntop_confirmed=df.sort_values(by='Confirmed',ascending=False)[:10]\ntop_confirmed","60514543":"# Make List of Top 10 Countries and India and Pakistan- The Countries of interest.\nlist_countries=list(top_confirmed.index)\nlist_countries.append('India')\nlist_countries.append('Pakistan')","95c40b6a":"times_series_cntr = train_df.groupby(['Date','Country_Region'])['ConfirmedCases'].sum()\\\n                    .reset_index().set_index('Date')\ndf_countries_tm = times_series_cntr[times_series_cntr['Country_Region'].isin(list_countries)]\n\n\nplt.figure(figsize=(16,12))\nax = sns.lineplot(x=df_countries_tm.index, \n                  y=\"ConfirmedCases\", \n                  hue=\"Country_Region\", \n                  data=df_countries_tm,palette='muted').set_title('Cumulative line')\n\nplt.legend(loc=2, prop={'size': 16})\nplt.title('Cumulative trend plot for Confirmed Cases')\nplt.xticks(rotation=90);","a837ec1a":"Confirm_pivot=pd.pivot_table(train_df,index='Date',columns='Country_Region',\n                             values='ConfirmedCases',aggfunc=np.sum)\nConfirm_pivot","cf3c5e8b":"plt.figure(figsize=(10,6))\ncolors=['r','b','g','y','orange','purple','m','hotpink','violet','darkgreen','navy','brown']\nfor i,country in enumerate(list_countries):\n    Confirm=Confirm_pivot[Confirm_pivot[country]>0][country].diff().fillna(0)\n    Confirm=Confirm[Confirm>0]\n    Confirm.plot(color=colors[i],label=country,markersize=8,lw=3)   \n    plt.title('Number of Daily Cases',fontsize=15)\n    plt.legend(title='country')\nplt.tight_layout()","c47079f0":"plt.figure(figsize=(20,16))\ncolors=['r','b','g','y','orange','purple','m','hotpink','violet','darkgreen','navy','brown']\nfor i,country in enumerate(list_countries):\n    Confirm=Confirm_pivot[Confirm_pivot[country]>0][country].diff().fillna(0)\n    Confirm=Confirm[Confirm>0]\n    \n    plt.subplot(4,3,i+1)\n    Confirm.plot(color=colors[i],label=country,markersize=12,lw=5)    \n    plt.xticks()\n    plt.legend(title='Country')\n    plt.title('Number of Daily Cases in {}'.format(country.upper()))\nplt.tight_layout()","9f801d10":"coun = []\nmaxi= []\nid_m= []\n\nfor country in list_countries:\n    id_max=Confirm_pivot[country].diff().fillna(0).idxmax()\n    maxim=Confirm_pivot[country].diff().fillna(0).max()\n    print('Maximum New Cases registered for {0} was {1} on {2}'.format(country,maxim,id_max))\n    coun.append(country)\n    maxi.append(maxim)\n    id_m.append(id_max)\n\ndf_max_case = pd.DataFrame(list(zip(coun, maxi, id_m)), columns =['country', 'max_case', 'date']) \ndf_max_case\n\ndf_max_case['date']=df_max_case['date'].astype(str)","4cfdbe1c":"fig = px.bar(df_max_case, x=df_max_case.country, y='max_case', text = 'date',\n             labels={'x':'country'}, color=\"country\", \n             color_continuous_scale=px.colors.sequential.Rainbow_r)\nfig.update_layout(title_text='Date on which a top 12 countries had Maximum cases')\nfig.show()","48aa253d":"Fatal_pivot=pd.pivot_table(train_df,index='Date',\n                           columns='Country_Region',\n                           values='Fatalities',\n                           aggfunc=np.sum)\n\nplt.figure(figsize=(10,6))\ncolors=['r','b','g','y','orange','purple','m','hotpink','violet','darkgreen','navy','brown']\nfor i,country in enumerate(list_countries):\n    Fatal_diff=Fatal_pivot[Fatal_pivot[country]>0][country].diff().fillna(0)\n    Fatal_diff=Fatal_diff[Fatal_diff>0]\n    Fatal_diff.plot(color=colors[i],label=country,markersize=8,lw=3)   \n    plt.title('Number of daily new Fatalities',fontsize=15)\n    plt.legend(title='country')\nplt.tight_layout()","fd99db17":"plt.figure(figsize=(20,16))\nfor i,country in enumerate(list_countries):\n    Fatal_diff=Fatal_pivot[(Fatal_pivot[country]>0)][country].diff().fillna(0)\n    Fatal_diff=Fatal_diff[Fatal_diff>0]\n    plt.subplot(3,4,i+1)\n    Fatal_diff.plot(color=colors[i],label=country.upper(),lw=5)\n    plt.xticks(rotation=60)\n    plt.title('Number of daily new Fatalities  in {}'.format(country.upper()))\n    plt.legend(title='Country')\nplt.tight_layout()","8111406b":"coun = []\nmaxi= []\nid_m= []\n\nfor country in list_countries:\n    id_max=Fatal_pivot[country].diff().fillna(0).idxmax()\n    maxim=Fatal_pivot[country].diff().fillna(0).max()\n    print('Maximum Fatalities for {0} was {1} on {2}'.format(country,maxim,id_max))\n    coun.append(country)\n    maxi.append(maxim)\n    id_m.append(id_max)\n\ndf_max_fat = pd.DataFrame(list(zip(coun, maxi, id_m)), columns =['country', 'max_fat', 'date']) \ndf_max_fat\n\ndf_max_fat['date']=df_max_fat['date'].astype(str)","bb0fa9e9":"fig = px.bar(df_max_fat, x=df_max_fat.country, y='max_fat', text = 'date',\n             labels={'x':'country'}, color=\"country\", \n             color_continuous_scale=px.colors.sequential.Rainbow_r)\nfig.update_layout(title_text='Date on which a top 12 countries had Maximum Fatalities')\nfig.show()","18eef250":"# Understanding New cases confirmation variations on daily basis\nplt.figure(figsize=(20,16))\nfor i,country in enumerate(list_countries):\n    plt.subplot(4,3,i+1)\n    train_df[(train_df['Country_Region']==country)&(train_df['ConfirmedCases']!=0)].groupby('Date')['ConfirmedCases'].sum().diff().diff().plot(color=colors[i])\n    plt.ylabel('Difference in Daily reporting cases ')\n    plt.title('Variation of {}'.format(country),va='bottom')\nplt.suptitle('Variation in number of confirmed cases on daily basis',fontsize=24,va='baseline')","10906c04":"#### Note:\nOut of 180 countries data, we have only 8 countries who has given Province wise data for Corona confirmed and fatalities. Hence, alot of this missing data would not be good for our dataset, and hence we will drop this column.","ad7d9926":"### Exploratory Data Analysis\n\nWe will try to answer following questions:\n\nQ1. Which countries has high number of cases?\n\nQ2. How is confirmed cases increases by day?\n\nQ3. What is fatality rate of confirmed cases?\n\nQ4. How is cases increasing by day of 1st reported case?\n\nQ5. Understanding data of India and UK and comparing it with the world?\n\nQ6. What is new rate of increase per case per day?\n\nNote: My Analysis is limited to 12 Countries of interest for better understanding the spread while I will try to extend this to other countries and make Predictions of Confirmed Cases and Fatalities.","c0cc85fe":"In the above plot, we can see that China has stabilized its new case reporting while all other countries are showing increase in trend. There is huge variance in dates from when there has been sudden increase in cases.\nUK has shown sudden increase in number of confirmed cases since 15 March 2020."}}