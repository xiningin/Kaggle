{"cell_type":{"b1e42ceb":"code","135a32c2":"code","54e0bd81":"code","db84fa7b":"code","98e5577a":"code","f2749b88":"code","8c3d18cf":"code","4c19f328":"code","436c0f65":"code","07aeabf7":"code","8b5aa6f6":"code","86abd05d":"code","27810265":"code","2d32776f":"code","71ace488":"code","145a20fc":"code","57f432f0":"code","a8e4ed68":"code","f430f208":"code","e82ed40a":"code","314bd413":"code","5515af34":"code","b5905db3":"code","9da8bf58":"code","f51f3715":"code","45d5c845":"code","41b914ce":"code","5ccc59a1":"code","0163f4db":"code","b5e9786f":"code","29cb9c88":"code","14bdc348":"code","0bd2a15b":"code","80a1a4cd":"code","3790028b":"code","29a0f813":"code","a5a4f12d":"code","19f99f32":"code","133a839d":"code","576d3607":"code","30a20be5":"code","82a35904":"code","6397b969":"code","2736266e":"code","a6fe1b9e":"code","e2416282":"code","261c071b":"code","64ed6685":"code","e4ebc527":"code","8be99712":"markdown","7fa1814f":"markdown","7bcb5e81":"markdown","f8cc369f":"markdown","9c5fe59a":"markdown","3536e8f3":"markdown","dbb9bd3b":"markdown","d95bfcb3":"markdown","8e9b2ce7":"markdown","e852de9e":"markdown","664ac86e":"markdown","5eac790e":"markdown","d10a7aca":"markdown","d57ee5a8":"markdown","e6243e32":"markdown","2d89e80a":"markdown","71934f97":"markdown","92b3878e":"markdown","f9feab1b":"markdown","4123c52a":"markdown","8f71728a":"markdown","30f08faf":"markdown","7ec0eb5f":"markdown","7649257f":"markdown","68ebfa54":"markdown","61a1e211":"markdown","7e325405":"markdown","81d4ab2c":"markdown","230fe56f":"markdown","22cf747f":"markdown"},"source":{"b1e42ceb":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","135a32c2":"apps = pd.read_csv('..\/input\/google-play-store-apps\/googleplaystore.csv')\nreviews = pd.read_csv('..\/input\/google-play-store-apps\/googleplaystore_user_reviews.csv')","54e0bd81":"apps.head()","db84fa7b":"apps.info()","98e5577a":"# Looking for apps, where 'Reviews' are represented with non-numerical value\napps[~apps['Reviews'].str.isnumeric()]","f2749b88":"# Moving all the columns\nfor i in range(11, 0, -1):\n    apps.iloc[10472,i+1] = apps.iloc[10472,i]","8c3d18cf":"# Now let's find appropriate category for this app and genre, as this field is also not defined. To do that let's check list of possible options\nprint(apps['Category'].unique())\nprint('\\n\\n')\nprint(apps['Genres'].unique())","4c19f328":"# As application name is 'Life Made WI-Fi Touchscreen Photo Frame' I assume, that correct Category is 'PHOTOGRAPHY' and 'Genres' should also be 'Photography'\napps.loc[10472,'Category'] = 'PHOTOGRAPHY'\napps.loc[10472,'Genres'] = 'Photography'","436c0f65":"# Checking new values for the mentioned row\napps.iloc[10472]","07aeabf7":"# Looking for apps, where 'Price' is represented with non-decimal value\napps[~apps['Price'].str.replace('$','').str.replace('.','').str.isnumeric()]","8b5aa6f6":"# Checking values in Installs column\napps['Installs'].unique()","86abd05d":"# Checking values in Installs column\napps['Size'].unique()","27810265":"# Changing types of columns as described above.\napps['Reviews'] = apps['Reviews'].astype('int')\napps['Rating'] = apps['Rating'].astype('float')\napps['Price'] = apps['Price'].str.replace('$', '').astype('float')\napps['Installs'] = apps['Installs'].str.replace(',', '').str.replace('+', '').astype('int')\napps['Size'] = apps['Size'].str.replace('M', 'e+6').str.replace('k', 'e+3').str.replace('Varies with device', '0').astype('float')","2d32776f":"plt.figure(figsize = (12,6))\nbar = sns.barplot(apps[apps['Size'] != 0]['Category'], apps[apps['Size'] != 0]['Size'])\nbar.set_xticklabels(bar.get_xticklabels(), rotation=90)","71ace488":"for i, row in apps[apps['Size'] == 0].iterrows():\n    apps.loc[i, 'Size'] = apps.groupby(['Category'])['Size'].mean()[row['Category']]","145a20fc":"apps['Last Updated'] = pd.to_datetime(apps['Last Updated'])","57f432f0":"apps['Last Updated'].describe()","a8e4ed68":"apps['App'].nunique()","f430f208":"sum(apps.duplicated())","e82ed40a":"# Checking duplicates in details\napps[apps.duplicated(keep = False)].sort_values('App').head(20)","314bd413":"apps.drop_duplicates(inplace = True)","5515af34":"# Checking categories\napps['Category'].unique()","b5905db3":"apps['Category'] = apps['Category'].astype('category')","9da8bf58":"#Let's check the missing values in Type column\napps[apps['Type'].isnull()]","f51f3715":"# As this app has price 0.0, let's put Type = Free\napps['Type'].fillna('Free', inplace = True)","45d5c845":"# This column is good for encoding and updating to 'category' type. Let's replace Free Type with '0' and Paid - with '1'.\napps['Type'] = apps['Type'].str.replace('Free', '0').str.replace('Paid', '1').astype('category')","41b914ce":"# Checking Content Rating for suspicious values\napps['Content Rating'].unique()","5ccc59a1":"# Checking values again\napps['Genres'].unique()","0163f4db":"# There are maximum 2 genres for one app, so I'm going to create 2 extra variables\nGenre_1 = apps['Genres'].apply(lambda genre: genre.split(';')[0])\nGenre_2 = apps['Genres'].apply(lambda genre: genre.split(';')[1] if len(genre.split(';')) > 1 else np.nan)","b5e9786f":"# Adding genres in dataset in 2 seprate column within specific positions\napps.insert(10, 'Genre 1', Genre_1)\napps.insert(11, 'Genre 2', Genre_2)\napps['Genre 2'].fillna('Not specified', inplace = True)\n# Removing original Genres column and saving it in a separate variable\nGenres = apps.pop('Genres')","29cb9c88":"# Checking missing values in Current Version\napps[apps['Current Ver'].isnull()]","14bdc348":"# Which values are the most common for Current Version?\napps['Current Ver'].value_counts().head(20)","0bd2a15b":"# Using 'Varies with device' for gaps in Current Version\napps['Current Ver'].fillna('Varies with device', inplace = True)","80a1a4cd":"apps['Android Ver'].value_counts()","3790028b":"# Checking missing values in Android Version\napps[apps['Android Ver'].isnull()]","29a0f813":"# Using 'Varies with device' for gaps in Android Version\napps['Android Ver'].fillna('Varies with device', inplace = True)","a5a4f12d":"# Checking common versions in different years\napps.groupby(apps['Last Updated'].dt.year)['Android Ver'].value_counts().head(50)","19f99f32":"# Implementing a replacement\nfor i, row in apps[apps['Android Ver'] == 'Varies with device'].iterrows():\n    apps.loc[i, 'Android Ver'] = apps.groupby(apps['Last Updated'].dt.year)['Android Ver'].value_counts()[row['Last Updated'].year].idxmax()","133a839d":"apps[apps['Android Ver'] == '4.4W and up']","576d3607":"# Implementing replacement for '4.4W and up'\napps['Android Ver'] = apps['Android Ver'].str.replace('4.4W and up', '4.4 and up')","30a20be5":"# Creating new column\napps['Min Android Ver'] = apps['Android Ver'].apply(lambda ver: ver.split(' ')[0])\n# Removing original column and saving it in a separate variable\nAndroid_Ver = apps.pop('Android Ver')","82a35904":"# Checking distribution of new column\napps['Min Android Ver'].value_counts()","6397b969":"apps.info()","2736266e":"apps.describe()","a6fe1b9e":"sns.set_style('whitegrid')\nsns.distplot(apps['Rating'], bins = 20)","e2416282":"apps['Reviews'].value_counts()","261c071b":"sns.distplot(apps['Size'], bins = 30)","64ed6685":"apps['Installs'].value_counts()","e4ebc527":"apps['Price'].value_counts()","8be99712":"This column looks good. For further investigation it may be needed to code categories, but for now let's just change type to 'category' to reduce memory usage a bit and then leave it as it is.","7fa1814f":"First of all let's check what are we going to work with.","7bcb5e81":"'Last Updated' seems to be perfect to be used as a DateTime variable. Let's make this update to have possiblity for some extra analysis further. ","f8cc369f":"So far we can notice that:\n- mean Rating is 4.19 and median is 4.3, which means that this distribution is left skewed. Most probably people rate those apps, that they like. It this case we will find, that there are more positive feedbacks in reviews dataset.\n- the opposite picture is about number of reviews - here distribution has positive skew, which is logical, as most apps have not so many feedbacks. Only very popular ones are highly commented. \n- mostly apps are over 1M size.\n- installations are very widely distributed.\n- percentile values for Price variable show that biggest part of apps are free.\n\nMore analysis I'll provide in next notebooks. \n\nThank you for your reading.","9c5fe59a":"There are next categorical variables in the dataset: \n- App\n- Category\n- Type\n- Content Rating \n- Genres \n- Current Ver \n- Android Ver\n\nAs a starting point: I know that missing values are present in Type, Current Ver and Android Ver and I wanted to split Genres into separate columns.\n\nLet's check every column one by one. ","3536e8f3":"We can see a lot of duplicated rows. Let's drop them and leave only first ones (default parameter).","dbb9bd3b":"Plus and comma signs can be removed, but from here I should remember that number in Installs column has meaning \"more than\". New type for Installs will be integer. ","d95bfcb3":"# Handling categorical variables","8e9b2ce7":"Previously I noticed, that Genres column is represented with several genres separated with ';'. For further analysis it will be helpful to have each genre separately and not several binded into one string. So let's divide Genres column into several. ","e852de9e":"# Handling DateTime variable","664ac86e":"Note: Here we can see, that there are doubled Genres and I think it will be good idea to separate them. I'll deal with that after handling numerical variables.","5eac790e":"So far we dealed with all numerical values, so let's move further. ","d10a7aca":"So our dataset has applications, that were probably updated between May 2010 and Aug 2018. ","d57ee5a8":"# Handling variables, that should be numerical","e6243e32":"I'm going to fill missing values with 'Varies with device' and then I'll replace 'Varies with device' values with the most common application version in the year, when last update was made. ","2d89e80a":"There are no more missing values in dataset except of Rating column, but with that column we will deal later. Now I'm going back to analysis of data that we have.","71934f97":"There are no specific values in Price column, so we can update type of this column to float.","92b3878e":"I'd also like to change the view of data in Android Ver column. \n\nIn several sources (e.g. [statista.con](https:\/\/www.statista.com\/statistics\/271774\/share-of-android-platforms-on-mobile-devices-with-android-os\/) and [acticle on fossbytes](https:\/\/fossbytes.com\/most-popular-android-versions-always-updated\/)) it is mentioned, that in first half of 2018 year near 30% of devices were using Android version 7.0 or 7.1, 25% - Android 6.0, 35% - versions below 6.0 and only 5% - version 8+. This means that all the application, that have upper limitation by version in our dataset, were actually totally up to date in that period of time, when data were retrieved (Aug 2018). Based on this fact, I assume that upper limitation is not a limitation and thus is not informative, so I'm going to create new column \"Min Android Ver\", where I'll leave only lower limitation.","f9feab1b":"Some intermediate notes:\n\n1. Because of fixing biased data, a 'string' value was added in Rating column, so its type was changed to 'object'. I'm going to change it back to float, as it was. \n2. Then I'm going to update type of Reviews column to integer, as the only non-numerical value was just fixed. The rest are numbers, as it was confirmed above. \n3. After I check values in Price column, I'd like to remove Dollar sign and convert the data to float type. \n4. In Installs column I'll remove '+' sign and leave only absolute number of uploads.\n5. I also want to have Sizes of the apps in numerical format, so that I can compare different apps characteristics.","4123c52a":"As we can see in info method result, there is only 1 numerical variable - Rating - and the rest are objects. Let's check if Reviews, Size, Installs and Price variable types can be changes to numerical values. ","8f71728a":"As we have 10841 rows in dataset, number of unique Apps shows, that there are few identical names. Let's check if there are only similar names, or all the data is duplicated.","30f08faf":"If we look at this row, then we can notice that information makes no sense in that view, as it is now. For example 'Genres' is 'February 11, 2018', however that value seems to be 'Last update'. Size is '1,000+' which is not clear - it is MB, GB? how user can understand precise size? - so most probably '1,000+' should be under 'Installs'. Then Category = 1.9 looks strange, as '1.9' is more likely Rating value.\n\nMost probably 'Category' for this application was lost and all the rest of information was displaced. Let's fix that.","7ec0eb5f":"Looks good.","7649257f":"Now let's check 'Android Ver' column.","68ebfa54":"In Sizes we have:\n- values marked with 'M', that I'll convert into numerical millions\n- values marked with 'k', that I'll replace with thousands\n- values marked with 'Varies with device', that should be further investigated. I assume, that apps in different categories may have different sizes. Let's check after previous pre-formating.","61a1e211":"As we can see, values in column 'Current Ver' have big variety (2831 unique values), because versioning systems are not standardised and every app separately decides with one to use. Therefore there are not a lot of information, that we can retrieve from this column. For example, we won't be able to say which app had more updates or which app was updated oftener. However, we still can find apps with minimal versions (starting with 1), which I'll try to do in next notebooks. For now let's use 'Varies with device' for missing values.","7e325405":"There is strong dependency between Category and Size, so I'm going to find most common app size in every category and use this values for replacements.","81d4ab2c":"# Checking data","230fe56f":"# Analysis of Google Play Store Apps Data\n\nI'm going to create several notebooks for this dataset. This one will be the first one and my main goal here is to prepare the dataset for further analysis. \n\nThank you for reviewing it. Please leave me a feedback with your opinion about my work.","22cf747f":"Android version 4.4W was based on vesion 4.4, but as Wearables Only (e.g. smartwatches) - [documentation](https:\/\/developer.android.com\/guide\/topics\/manifest\/uses-sdk-element.html). In current dataset I assume, that '4.4W and up' values can be replaced with '4.4 and up', because 11 apps, that used 4.4W version earlier, don't have any significant difference from the rest (apps presented below)."}}