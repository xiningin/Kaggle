{"cell_type":{"f60652e0":"code","433502ca":"code","21dec92a":"code","37236e75":"code","99cfb057":"code","deac92a1":"code","49f16b41":"code","abfa493d":"code","fd8728ef":"code","7cc255e6":"code","3220b954":"code","c41c9aa2":"code","a38f5564":"code","769bf832":"code","3fbfc693":"code","0fb0d40d":"code","694d4653":"code","ceeaf70a":"code","77ef7e2a":"code","d583096e":"code","4a521da9":"code","8d412132":"code","8fbfab80":"code","aa36d50d":"code","0be55715":"code","bd328b85":"code","7ffadb4f":"code","69b8755d":"code","763ab06a":"code","0a0c220c":"code","922860c8":"code","953ed78c":"code","ab1d9932":"code","ac7e2b3f":"code","9d604b25":"code","bcf7bda0":"code","c0b425b1":"code","42be0cd7":"code","249e2ad9":"code","52490ece":"code","ee1addbc":"code","96d15020":"code","05729a2c":"code","612a07bd":"code","1f412723":"code","5304d04b":"code","cc4405a7":"code","e6536f93":"code","810af90f":"code","4d76c3e3":"code","a446b072":"code","26a0ad18":"code","87be7f88":"code","22bfe99c":"code","9df3b4cd":"code","66dce898":"code","93405552":"code","200762f9":"code","b119c9a0":"code","c853a216":"code","fba50082":"code","644c4b26":"code","77353cb9":"code","58909e73":"markdown","54180af8":"markdown","d7324626":"markdown","c3cfae17":"markdown","11caa586":"markdown","333cfa26":"markdown","8955a8cd":"markdown","8ccee3e5":"markdown","c148fa42":"markdown","4755f6ed":"markdown","54f891ab":"markdown","6f58573f":"markdown","e98cba85":"markdown","cf5d0dbb":"markdown","ca9c12ba":"markdown","2e38ea2b":"markdown","71902ff8":"markdown","0b528c32":"markdown"},"source":{"f60652e0":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set_style('darkgrid')","433502ca":"train = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\")\ntest = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/test.csv\")\nsample = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv\")","21dec92a":"train.isnull().sum().sum()","37236e75":"#For Train\ncol = train.columns\nnull_col=[]\nfor i in col:\n  if train[i].isnull().any() == True:\n    print(i,\":\",train[i].isnull().sum())\n    null_col.append(i)","99cfb057":"#For Test\ncol_test = test.columns\nnull_col_test=[]\nfor i in col_test:\n  if test[i].isnull().any() == True:\n    print(i,\":\",test[i].isnull().sum())\n    null_col_test.append(i)","deac92a1":"target = train['SalePrice']\ntarget[:10]","49f16b41":"missing_object=[]\nfor i in train.select_dtypes(include='object').columns:\n  if i in null_col:\n    missing_object.append(i)\nmissing_object","abfa493d":"train.shape","fd8728ef":"#dropping columns with huge no of missing values also the ID\ntrain = train.drop(columns=['PoolQC','Fence','MiscFeature','Alley','Id'])\n\n#test too\ntest  = test.drop(columns= ['PoolQC','Fence','MiscFeature','Alley','Id'] )\ntrain.head()","7cc255e6":"#Saving columns\ncols = train.columns\nprint(cols)\n\ncols_test =test.columns","3220b954":"train = train.drop(columns=['SalePrice'])\ntrain.head()","c41c9aa2":"from sklearn.impute import SimpleImputer","a38f5564":"impute = SimpleImputer(strategy='most_frequent')","769bf832":"temp_train = impute.fit_transform(train)\n\n#test\ntemp_test = impute.fit_transform(test)","3fbfc693":"temp_train = pd.DataFrame(temp_train)","0fb0d40d":"temp_train.insert(75,column='75',value=target)","694d4653":"#train\ntemp_train = pd.DataFrame(temp_train)\ntemp_train.columns = cols\n\n#test\ntemp_test = pd.DataFrame(temp_test)\ntemp_test.columns = cols_test","ceeaf70a":"temp_train.isnull().sum().sum()","77ef7e2a":"temp_test.isnull().sum().sum()","d583096e":"temp_train.head()","4a521da9":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()","8d412132":"#train\nfor i in temp_train.select_dtypes(include='object').columns:\n  temp_train[i] = le.fit_transform(temp_train[i])\n\n#test\nfor i in temp_test.select_dtypes(include='object').columns:\n  temp_test[i] = le.fit_transform(temp_test[i])","8fbfab80":"print(temp_train.shape,temp_test.shape)","aa36d50d":"temp_train.describe()","0be55715":"temp_train.head()","bd328b85":"un_prices = temp_train.SalePrice.sort_values(ascending=False)\nun_prices[:10]","7ffadb4f":"sns.histplot(target,log_scale=True,color='green',kde=True);","69b8755d":"un_prices[:10].plot(kind='barh',color='orange');","763ab06a":"sns.relplot(data=temp_train,y='SaleCondition',x=target,hue='SaleCondition');","0a0c220c":"temp_train.head()","922860c8":"sns.pairplot(temp_train[[\"Street\",'LotShape','LotArea','LotFrontage','PoolArea','SaleType','SalePrice']],diag_kind='hist');","953ed78c":"data = temp_train.drop(columns=['SalePrice'])","ab1d9932":"a1 = data.columns\na2 =temp_test.columns","ac7e2b3f":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()","9d604b25":"#train\ndata = sc.fit_transform(data)\n\n#test\ntest_df = sc.fit_transform(temp_test)","bcf7bda0":"data = pd.DataFrame(data)\ndata.columns =a1\ndata.head()\n","c0b425b1":"test_df =pd.DataFrame(test_df)\ntest_df.columns =a2\ntest_df.head()","42be0cd7":"from sklearn.model_selection import train_test_split\nx_tr,x_te,y_tr,y_te = train_test_split(data,target,random_state = 42,test_size = 0.2)","249e2ad9":"print(x_tr.shape,y_tr.shape)","52490ece":"from sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.model_selection import GridSearchCV","ee1addbc":"grid_params = {\n    'weights': ['uniform','distance'],\n    'n_neighbors':[5,10,15,20]\n}","96d15020":"gs = GridSearchCV(\n    KNeighborsRegressor(),\n    grid_params,\n    verbose =1,\n    cv =3\n)","05729a2c":"result = gs.fit(x_tr,y_tr)","612a07bd":"result.best_params_","1f412723":"knn = KNeighborsRegressor(n_neighbors=12)","5304d04b":"#train\nknn.fit(x_tr,y_tr)","cc4405a7":"#score train\nprint(knn.score(x_tr,y_tr))\nprint(mean_absolute_error(knn.predict(x_tr),y_tr))","e6536f93":"#test\npred = knn.predict(x_te)\n\nprint(knn.score(x_te,y_te))\nprint(mean_absolute_error(pred,y_te))","810af90f":"pd.DataFrame({\"Actual\":y_te,\"Predicted\":pred})[:10]","4d76c3e3":"from xgboost import XGBRegressor","a446b072":"#train\nxgb =XGBRegressor(max_depth=8,learning_rate=0.1,base_score=0.8,n_estimators=1500)\n\nxgb.fit(x_tr,y_tr)","26a0ad18":"print(xgb.score(x_tr,y_tr))\nprint(mean_absolute_error(xgb.predict(x_tr),y_tr))","87be7f88":"#test\nprint(xgb.score(x_te,y_te))\nprint(mean_absolute_error(xgb.predict(x_te),y_te))","22bfe99c":"test_df.head()","9df3b4cd":"pred_final = xgb.predict(test_df)\npred_final","66dce898":"np.max(pred_final)","93405552":"print(test.shape,test_df.shape)","200762f9":"test_save = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/test.csv\")\ntest_save.head()","b119c9a0":"test_save.insert(1,column='SalePrice',value=pred_final)\ntest_save.head()","c853a216":"final_df=test_save[['Id','SalePrice']]","fba50082":"final_df.shape","644c4b26":"final_df.to_csv(\"house_pred_xgb.csv\",index=False)","77353cb9":"final_df.head()","58909e73":"> Seeing all the missing valued columns","54180af8":"> Train test split","d7324626":"> Top 10 prices","c3cfae17":"### EDA","11caa586":"- Grid Search","333cfa26":"> Scaling the Data","8955a8cd":"> Sale price vs Condition","8ccee3e5":"> Street, LotShape,LotArea, LotFrontage,PoolArea,SaleType vs SalePrice","c148fa42":">  columns having missing values which are of object type","4755f6ed":"> Encoding the data","54f891ab":"### On test data","6f58573f":"> Target","e98cba85":"target = train['SalePrice']","cf5d0dbb":"### Data Pre-Processing","ca9c12ba":"## KNN Model","2e38ea2b":"## XGBoost","71902ff8":"> Imputing data","0b528c32":"> Distribution of Sale Prices"}}