{"cell_type":{"c579d9fc":"code","85908e8d":"code","556e27a7":"code","40c8e8c3":"code","5c4be863":"code","a01a62f1":"code","ec50543f":"code","b7c722f3":"code","3d7c02a8":"code","bfc78676":"markdown","ea9f0b1b":"markdown","b0efb129":"markdown","68687646":"markdown","d1b14606":"markdown","33f90051":"markdown","dae551e6":"markdown","35300036":"markdown","21c32a9e":"markdown","127d75ff":"markdown","cb40decb":"markdown"},"source":{"c579d9fc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","85908e8d":"from google.cloud import bigquery","556e27a7":"# Set your own project id here\nPROJECT_ID = 'your-google-cloud-project'\n  \nfrom google.cloud import bigquery\nclient = bigquery.Client(project=PROJECT_ID, location=\"US\")","40c8e8c3":"# Construct a reference to the \"hacker_news\" dataset\ndataset_ref = client.dataset(\"hacker_news\", project=\"bigquery-public-data\")\n\n# API request - fetch the dataset\ndataset = client.get_dataset(dataset_ref)","5c4be863":"# List all the tables in the \"hacker_news\" dataset\ntables = list(client.list_tables(dataset))\n\n# Print names of all tables in the dataset (there are four!)\nfor table in tables:  \n    print(table.table_id)","a01a62f1":"# Construct a reference to the \"full\" table\ntable_ref = dataset_ref.table(\"full\")\n\n# API request - fetch the table\ntable = client.get_table(table_ref)","ec50543f":"# Print information on all the columns in the \"full\" table in the \"hacker_news\" dataset\ntable.schema","b7c722f3":"# Preview the first five lines of the \"full\" table\nclient.list_rows(table, max_results=5).to_dataframe()","3d7c02a8":"# Preview the first five entries in the \"by\" column of the \"full\" table\nclient.list_rows(table, selected_fields=table.schema[:1], max_results=5).to_dataframe()","bfc78676":"# Introduction BQ\nStructured Query Language, or SQL, is the programming language used with databases, and it is an important skill for any data scientist. In this course, you'll build your SQL skills using BigQuery, a web service that lets you apply SQL to huge datasets.\n\nIn this lesson, you'll learn the basics of accessing and examining BigQuery datasets. After you have a handle on these basics, we'll come back to build your SQL skills.\n\nYour first BigQuery commands\nTo use BigQuery, we'll import the Python package below:","ea9f0b1b":"In the next section, you'll explore the contents of this table in more detail. For now, take the time to use the image below to consolidate what you've learned so far.\n\nfirst_commands\n\n# Table schema\nThe structure of a table is called its schema. We need to understand a table's schema to effectively pull out the data we want.\n\nIn this example, we'll investigate the full table that we fetched above.","b0efb129":"The list_rows() method will also let us look at just the information in a specific column. If we want to see the first five entries in the by column, for example, we can do that!","68687646":"Each SchemaField tells us about a specific column (which we also refer to as a field). In order, the information is:\n\nThe name of the column\nThe field type (or datatype) in the column\nThe mode of the column ('NULLABLE' means that a column allows NULL values, and is the default)\nA description of the data in that column\nThe first field has the SchemaField:\n\nSchemaField('by', 'string', 'NULLABLE', \"The username of the item's author.\",())\n\nThis tells us:\n\nthe field (or column) is called by,\nthe data in this field is strings,\nNULL values are allowed, and\nit contains the usernames corresponding to each item's author.\nWe can use the list_rows() method to check just the first five lines of of the full table to make sure this is right. (Sometimes databases have outdated descriptions, so it's good to check.) This returns a BigQuery RowIterator object that can quickly be converted to a pandas DataFrame with the to_dataframe() method.","d1b14606":"Every dataset is just a collection of tables. You can think of a dataset as a spreadsheet file containing multiple tables, all composed of rows and columns.\n\nWe use the list_tables() method to list the tables in the dataset.","33f90051":"Similar to how we fetched a dataset, we can fetch a table. In the code cell below, we fetch the full table in the hacker_news dataset.","dae551e6":"# Disclaimer\nBefore we go into the coding exercise, a quick disclaimer for those who already know some SQL:\n\nEach Kaggle user can scan 5TB every 30 days for free. Once you hit that limit, you'll have to wait for it to reset.\n\nThe commands you've seen so far won't demand a meaningful fraction of that limit. But some BiqQuery datasets are huge. So, if you already know SQL, wait to run SELECT queries until you've seen how to use your allotment effectively. If you are like most people reading this, you don't know how to write these queries yet, so you don't need to worry about this disclaimer.\n\n","35300036":"Your turn\nPractice the commands you've seen to explore the structure of a dataset with crimes in the city of Chicago.","21c32a9e":"SQL Home Page","127d75ff":"The first step in the workflow is to create a Client object. As you'll soon see, this Client object will play a central role in retrieving information from BigQuery datasets.","cb40decb":"We'll work with a dataset of posts on [Hacker News](https:\/\/news.ycombinator.com\/), a website focusing on computer science and cybersecurity news.\n\nIn BigQuery, each dataset is contained in a corresponding project. In this case, our hacker_news dataset is contained in the bigquery-public-data project. To access the dataset,\n\nWe begin by constructing a reference to the dataset with the dataset() method.\nNext, we use the get_dataset() method, along with the reference we just constructed, to fetch the dataset."}}