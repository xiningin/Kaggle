{"cell_type":{"d81e6d61":"code","694b0aaf":"code","e7f98013":"code","96e69cc4":"code","de6a9605":"code","db6591f6":"code","f62a62fa":"code","4d635cc6":"code","0f3661bf":"code","98311e6d":"code","65323a39":"code","dd0da87c":"code","fd7e2aa6":"code","e2cc5fc9":"code","1ec880b8":"code","5c65e692":"code","b7c6954a":"code","7a56b496":"code","ab6704e0":"code","9652271c":"code","6b14feb8":"code","56a9df6c":"code","75b8bd40":"code","6861d677":"code","860ad08b":"code","1ee05e9d":"code","bb2a73d0":"code","0114c924":"code","7da6f843":"code","e23ae5a6":"code","711d7912":"code","6c3c3953":"code","c5c5eb13":"markdown","934ccf33":"markdown","14b63a7d":"markdown","6a11844e":"markdown","f7c5545c":"markdown","95fb75bd":"markdown"},"source":{"d81e6d61":"import numpy as np   #Linear algera Library\nimport pandas as pd\nimport matplotlib.pyplot as plt  #to plot graphs\nimport seaborn as sns  #to plot graphs\nsns.set()  #setting seaborn as default \n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nfrom sklearn.cluster import KMeans","694b0aaf":"data=pd.read_csv('..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')\ndata.head()","e7f98013":"data.isnull().sum() #no missing values","96e69cc4":"plt.scatter(data['Age'],data['Spending Score (1-100)'])\nplt.xlabel('Age')\nplt.ylabel('Spending Score (1-100)')\nplt.show()","de6a9605":"# clustering based on age and spending score\nx=data[['Age','Spending Score (1-100)']]\nx","db6591f6":"#to check the no of clusters to pick\nwcss=[]\nfor i in range(1,10):\n    kmeans = KMeans(n_clusters = i, init = 'k-means++', max_iter = 300, n_init = 10, random_state = 0)\n    kmeans.fit(x)\n    wcss.append(kmeans.inertia_)\n    \n\n","f62a62fa":"no_of_clusters=range(1,10)\nplt.plot(no_of_clusters,wcss)","4d635cc6":"kmeans = KMeans(4)\nkmeans.fit(x)","0f3661bf":"identified_clusters=kmeans.fit_predict(x)\nidentified_clusters  #clusters are 0,1,2,3","98311e6d":"table_with_clusters=data.copy()\ntable_with_clusters['Clusters']=identified_clusters\ntable_with_clusters","65323a39":"plt.scatter(table_with_clusters['Age'],table_with_clusters['Spending Score (1-100)'],c=table_with_clusters['Clusters'],cmap='rainbow')\nplt.xlabel('Age')\nplt.ylabel('Spending Score (1-100)')\nplt.title('Plot with clusters')\nplt.show()","dd0da87c":"data=pd.read_csv('..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')\ndata.head()","fd7e2aa6":"plt.figure(1 , figsize = (10 , 5))\nax=sns.countplot(x = 'Gender' , data = data)\nfor p in ax.patches:\n        ax.annotate('{:}'.format(p.get_height()), (p.get_x()+0.1, p.get_height()+1))  #to calculate the frequencies\n\nplt.show()  ","e2cc5fc9":"Gender=pd.get_dummies(data['Gender'],drop_first=True)\nGender.head()\n","1ec880b8":"data=pd.concat([data,Gender],axis=1)\ndata.head()","5c65e692":"data.drop(['Gender'],axis=1,inplace=True)\ndata.head()","b7c6954a":"x=data[['Male','Spending Score (1-100)']]\nx","7a56b496":"#to check the no of clusters to pick\nwcss=[]\nfor i in range(1,10):\n    kmeans = KMeans(n_clusters = i, init = 'k-means++', max_iter = 300, n_init = 10, random_state = 0)\n    kmeans.fit(x)\n    wcss.append(kmeans.inertia_)","ab6704e0":"no_of_clusters=range(1,10)\nplt.plot(no_of_clusters,wcss)","9652271c":"kmeans = KMeans(4)\nkmeans.fit(x)","6b14feb8":"identified_clusters=kmeans.fit_predict(x)\nidentified_clusters  #clusters are 0,1,2,3","56a9df6c":"table_with_clusters=data.copy()\ntable_with_clusters['Clusters']=identified_clusters\ntable_with_clusters","75b8bd40":"plt.scatter(table_with_clusters['Spending Score (1-100)'],table_with_clusters['Male'],c=table_with_clusters['Clusters'],cmap='rainbow')\nplt.xlabel('Male')\nplt.ylabel('Spending Score (1-100)')\nplt.title('Plot with clusters')\nplt.show()","6861d677":"data=pd.read_csv('..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')\ndata.head()","860ad08b":"plt.scatter(data['Annual Income (k$)'],data['Spending Score (1-100)'])\nplt.xlabel('Annual Income (k$)')\nplt.ylabel('Spending Score (1-100)')\nplt.show()","1ee05e9d":"# clustering based on age and spending score\nx=data[['Annual Income (k$)','Spending Score (1-100)']]\nx","bb2a73d0":"#to check the no of clusters to pick\nwcss=[]\nfor i in range(1,10):\n    kmeans = KMeans(n_clusters = i, init = 'k-means++', max_iter = 300, n_init = 10, random_state = 0)\n    kmeans.fit(x)\n    wcss.append(kmeans.inertia_)","0114c924":"no_of_clusters=range(1,10)\nplt.plot(no_of_clusters,wcss)","7da6f843":"kmeans = KMeans(5)\nkmeans.fit(x)","e23ae5a6":"identified_clusters=kmeans.fit_predict(x)\nidentified_clusters  #clusters are 0,1,2,3","711d7912":"table_with_clusters=data.copy()\ntable_with_clusters['Clusters']=identified_clusters\ntable_with_clusters","6c3c3953":"plt.scatter(table_with_clusters['Annual Income (k$)'],table_with_clusters['Spending Score (1-100)'],c=table_with_clusters['Clusters'],cmap='rainbow')\nplt.xlabel('Annual Income (k$)')\nplt.ylabel('Spending Score (1-100)')\nplt.title('Plot with clusters')\nplt.show()","c5c5eb13":"## Method 3: using anual income and spending score","934ccf33":"### Steps to solve the problem :\n### 1. Importing the required Libraries\n### 2. Input the required data\n### 3. Check for Null values \n### 4. Pick the fields you want to analyse (I have repeated this in three ways)\n### 5. Selection of Clusters using Elbow Method\n### 6. Ploting the Cluster","14b63a7d":"# Customer Segmentation Using KMeans (Clustering) - Unsupervised","6a11844e":"## Method 1: Age and Spending Score (1-100)","f7c5545c":"## Method 2: Gender verses Spending Score (1-100)","95fb75bd":"### This is done to only understand Categorical data"}}