{"cell_type":{"25408c7f":"code","0c8fa620":"code","f8d7d29c":"code","4efd4d55":"code","a7a76f62":"code","a04cf60c":"code","5d9a6d8f":"code","de335999":"code","5a586942":"code","6b26859c":"code","6ad95e24":"code","f43f5124":"code","49217c25":"code","49c7a18a":"code","dbf1fea8":"code","a123ddc0":"code","bfca6ad1":"markdown","875b240c":"markdown","272d4c94":"markdown","71435226":"markdown","fb59083d":"markdown","7f9304c9":"markdown","eae9302f":"markdown","1fec6776":"markdown","e4e3a0b4":"markdown","eba3dd26":"markdown","c353bf5d":"markdown","d02bd527":"markdown"},"source":{"25408c7f":"import json\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport geopy\nfrom geopy.geocoders import Nominatim\ngeolocator = Nominatim(user_agent=\"ebac_geocoder\")\nfrom geopy.extra.rate_limiter import RateLimiter\n\n!pip3 install geopandas;\nimport seaborn as sns\nimport pandas as pd\nimport geopandas","0c8fa620":"!wget -q \"https:\/\/raw.githubusercontent.com\/andre-marcos-perez\/ebac-course-utils\/main\/dataset\/deliveries.json\" -O deliveries.json\n!wget -q \"https:\/\/raw.githubusercontent.com\/andre-marcos-perez\/ebac-course-utils\/main\/dataset\/deliveries-geodata.csv\" -O deliveries-geodata.csv\n!wget -q \"https:\/\/geoftp.ibge.gov.br\/cartas_e_mapas\/bases_cartograficas_continuas\/bc100\/go_df\/versao2016\/shapefile\/bc100_go_df_shp.zip\" -O distrito-federal.zip\n!unzip -q distrito-federal.zip -d .\/maps\n!cp .\/maps\/LIM_Unidade_Federacao_A.shp .\/distrito-federal.shp\n!cp .\/maps\/LIM_Unidade_Federacao_A.shx .\/distrito-federal.shx","f8d7d29c":"# dado bruto em um dict:\nwith open('deliveries.json', mode='r', encoding='utf8') as file:\n  data = json.load(file)  ","4efd4d55":"# dado bruto no pandas:\ndeliveries_df = pd.DataFrame(data)\n\ndeliveries_df","a7a76f62":"# trabalhando na coluna \"origin\":\nhub_origin_df = pd.json_normalize(deliveries_df[\"origin\"])  \n\ndeliveries_df = pd.merge(left=deliveries_df,\n                         right=hub_origin_df,\n                         how='inner', \n                         left_index=True, \n                         right_index=True)\n\ndeliveries_df = deliveries_df.drop(\"origin\", axis=1)\n\ndeliveries_df = deliveries_df[[\"name\", \n                               \"region\",\n                               \"lng\", \n                               \"lat\",\n                               \"vehicle_capacity\",\n                               \"deliveries\"]]\ndeliveries_df.rename(columns={\"lng\": \"hub_lng\",\n                              \"lat\": \"hub_lat\"},\n                      inplace=True)","a04cf60c":"#trabalhando na coluna \"deliveries\":\ndeliveries_exploded_df = deliveries_df[[\"deliveries\"]].explode(\"deliveries\")    \n\ndeliveries_normalized_df = pd.concat([\n  pd.DataFrame(deliveries_exploded_df[\"deliveries\"]\n               .apply(lambda record: record[\"size\"]))\n  .rename(columns={\"deliveries\": \"delivery_size\"}),\n  pd.DataFrame(deliveries_exploded_df[\"deliveries\"]\n               .apply(lambda record: record[\"point\"][\"lng\"]))\n  .rename(columns={\"deliveries\": \"delivery_lng\"}),\n  pd.DataFrame(deliveries_exploded_df[\"deliveries\"]\n               .apply(lambda record: record[\"point\"][\"lat\"]))\n  .rename(columns={\"deliveries\": \"delivery_lat\"}),\n], axis= 1)\n\ndeliveries_df = deliveries_df.drop(\"deliveries\", axis=1)\ndeliveries_df = pd.merge(left=deliveries_df,\n                         right=deliveries_normalized_df,\n                         how='right',\n                         left_index=True,\n                         right_index=True)\ndeliveries_df.reset_index(inplace=True, drop=True)","5d9a6d8f":"# DataFrame\ndeliveries_df","de335999":"# Trasformando as coordenadas em endere\u00e7os: \nhub_df = deliveries_df[[\"region\", \"hub_lng\", \"hub_lat\"]]\nhub_df = hub_df.drop_duplicates().sort_values(by=\"region\").reset_index(drop=True)\ngeocoder = RateLimiter(geolocator.reverse, min_delay_seconds=1)\nhub_df[\"coordinates\"] = hub_df[\"hub_lat\"].astype(str)  + \", \" + hub_df[\"hub_lng\"].astype(str) \nhub_df[\"geodata\"] = hub_df[\"coordinates\"].apply(geocoder)\nhub_geodata_df = pd.json_normalize(hub_df[\"geodata\"]\n                                   .apply(lambda data: data.raw))\nhub_geodata_df = hub_geodata_df[[\"address.town\",\n                                 \"address.suburb\",\n                                 \"address.city\"]]\n\nhub_geodata_df.rename(columns={\"address.town\": \"hub_town\", \n                               \"address.suburb\": \"hub_suburb\",\n                               \"address.city\": \"hub_city\"},\n                       inplace=True)\n\nhub_geodata_df[\"hub_city\"] = np.where(hub_geodata_df[\"hub_city\"].notna(), \n                                      hub_geodata_df[\"hub_city\"], \n                                      hub_geodata_df[\"hub_town\"])\n\nhub_geodata_df[\"hub_suburb\"] = np.where(hub_geodata_df[\"hub_suburb\"].notna(),\n                                        hub_geodata_df[\"hub_suburb\"], \n                                        hub_geodata_df[\"hub_city\"])\nhub_geodata_df = hub_geodata_df.drop(\"hub_town\", axis=1)","5a586942":"# Combinando os DataFrames:\nhub_df = pd.merge(left=hub_df, \n                  right=hub_geodata_df, \n                  left_index=True,\n                  right_index=True)\nhub_df = hub_df[[\"region\", \"hub_suburb\", \"hub_city\"]]\ndeliveries_df = pd.merge(left=deliveries_df, \nright=hub_df, how=\"inner\", on=\"region\")\n\ndeliveries_df = deliveries_df[[\"name\", \n                               \"region\", \"hub_lng\", \"hub_lat\",  \"hub_city\", \n                               \"hub_suburb\", \"vehicle_capacity\",\n                               \"delivery_size\", \"delivery_lng\",\n                               \"delivery_lat\"]]","6b26859c":"# Fazendo a geocodifica\u00e7\u00e3o reversa da entrega:\ndeliveries_geodata_df = pd.read_csv(\"deliveries-geodata.csv\")\ndeliveries_df = pd.merge(left=deliveries_df,\n                         right=deliveries_geodata_df[[\"delivery_city\",\n                         \"delivery_suburb\"]], how=\"inner\", left_index=True, \n                         right_index=True)","6ad95e24":"# DataFrame enriquecido\ndeliveries_df","f43f5124":"# controle de qualidade(coluna com tipo de dados):\ndeliveries_df.info()","49217c25":"# controle de qualidade(dados faltantes):\ndeliveries_df.isna().any()","49c7a18a":"# Mapa da regi\u00e3o de Bras\u00edlia:\nmapa = geopandas.read_file(\"distrito-federal.shp\")\nmapa = mapa.loc[[0]]\n\nhub_df = deliveries_df[[\"region\",\"hub_lng\",\n\"hub_lat\"]].drop_duplicates().reset_index(drop=True)\n\ngeo_hub_df = geopandas.GeoDataFrame(hub_df, \n                                    geometry=geopandas.points_from_xy(hub_df[\"hub_lng\"],\n                                    hub_df[\"hub_lat\"]))\n\ngeo_deliveries_df = geopandas.GeoDataFrame(deliveries_df,\ngeometry=geopandas.points_from_xy(deliveries_df[\"delivery_lng\"],\n                                           deliveries_df[\"delivery_lat\"]))\n\nfig, ax = plt.subplots(figsize = (50\/2.54, 50\/2.54))\n\nmapa.plot(ax=ax, alpha=0.4, color=\"lightgrey\")\n\ngeo_deliveries_df.query(\"region == 'df-0'\").plot(ax=ax,\n                                                 markersize=1,\n                                                 color=\"blue\",\n                                                 label=\"df-0\")\ngeo_deliveries_df.query(\"region == 'df-1'\").plot(ax=ax, markersize=1,\n                                                 color=\"red\", label=\"df-1\")\ngeo_deliveries_df.query(\"region == 'df-2'\").plot(ax=ax,\n                                                 markersize=1, \n                                                 color=\"seagreen\", \n                                                 label=\"df-2\")\n\ngeo_hub_df.plot(ax=ax, markersize=30, marker=\"x\", color=\"black\", label=\"hub\")\n\nplt.title(\"Entregas no Distrito Federal por Regi\u00e3o\", fontdict={\"fontsize\": 16})\nlgnd = plt.legend(prop={\"size\": 15})\n\nfor handle in lgnd.legendHandles:\n    handle.set_sizes([50])\n","dbf1fea8":"# Comportamento das entregas:\n\n# Gr\u00e1fico das propor\u00e7\u00f5es de entrega:\ndata = pd.DataFrame(deliveries_df[['region', \n              'vehicle_capacity']].value_counts(normalize=True)).reset_index()\n\ndata.rename(columns={0: \"region_percent\"}, inplace=True)\n\nwith sns.axes_style('whitegrid'):\n  \n  grafico = sns.barplot(data=data, x=\"region\", y=\"region_percent\",\n                        ci=None, palette=\"pastel\")\n  grafico.set(title='Propor\u00e7\u00e3o de entregas por regi\u00e3o',\n              xlabel='Regi\u00e3o', ylabel='Propor\u00e7\u00e3o');","a123ddc0":"# Gr\u00e1fico das quantidades de entrega separadas pelo tamanho e regi\u00e3o:\ndelivery_region_df = deliveries_df[['region','delivery_size']]\n\ndelivery_sorted = delivery_region_df.sort_values(by=['delivery_size'],\n                              ascending=False).reset_index(drop=True)\n\ndelivery_sorted_amout = pd.concat([delivery_sorted[['region','delivery_size']], \npd.DataFrame({'amout': len(delivery_sorted)*[1]})], axis=1)\n\ndelivery_sorted_amout_df = delivery_sorted_amout.groupby(['region',\n                                  'delivery_size']).agg('count').reset_index()\n\nwith sns.axes_style('whitegrid'):\n\n  grafico = sns.barplot(data=delivery_sorted_amout_df, x='delivery_size',\n                        y='amout', hue='region', ci=None,palette='pastel')\n  grafico.set(title='Tamanho e quantidade de entregas por regi\u00e3o', \n              xlabel='Tamanho de entregas',\n               ylabel='Quantidade de entregas',);\n  grafico.get_legend().set_title('Regi\u00e3o');\n  grafico.figure.set_size_inches(w=40\/2.54, h=15\/2.54)\n","bfca6ad1":"## Visualiza\u00e7\u00e3o","875b240c":"##  Contexto","272d4c94":"## Pacotes e bibliotecas","71435226":"**Insight**:\n \n\n*    A **distribui\u00e7\u00e3o das entregas** est\u00e1 muito concentrada nos hubs das **regi\u00f5es** **df-1** e **df-2**, mas pouco no da **regi\u00e3o df-0**.\n\n","fb59083d":"## Explora\u00e7\u00e3o de dados","7f9304c9":"## Manipula\u00e7\u00e3o","eae9302f":"**Insight**:\n\n*    A **regi\u00e3o df-0** possui **pouco volume de carga** e o **tamanho** de suas entregas **em rela\u00e7\u00e3o aos outros hubs** \u00e9 menor. \n\n","1fec6776":"An\u00e1lise de comportamento do operador log\u00edstico **Loggi** na regi\u00e3o de Bras\u00edlia. \n","e4e3a0b4":"**Insights**:\n\n1.   As entregas est\u00e3o corretamente alocadas aos seus respectivos hubs;\n\n2.   Os hubs das regi\u00f5es 0 e 2 fazem entregas em locais distantes do centro e entre si, o que pode gerar um tempo e pre\u00e7o de entrega maior.","eba3dd26":"## Resumo de insights","c353bf5d":"A distribui\u00e7\u00e3o das entregas est\u00e1 muito **concentrada** nos hubs das **regi\u00f5es df-1** e **df-2**, mas **pouco** no da **regi\u00e3o df-0**. Contudo a **capacidade dos ve\u00edculos \u00e9 mesma** para todos os **hubs**, logo os **ve\u00edculos**  da **regi\u00e3o df-0** poderiam ser **deslocados** para a **regi\u00e3o df-1** pois tem o maior volume de entregas e as maiores entregas.","d02bd527":"# **An\u00e1lise Explorat\u00f3ria de Dados de Log\u00edstica**"}}