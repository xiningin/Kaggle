{"cell_type":{"a1143e66":"code","040804b7":"code","959dd6e8":"code","4b0b8cbb":"code","fd1e8f36":"code","efe3f22b":"code","5f415c1e":"code","6ba81413":"code","84e97b35":"code","00436668":"code","078c1e6c":"code","18b5b803":"code","770eaa58":"code","0d4e941c":"code","151ba879":"code","3cedb8c7":"code","09f5f0b5":"code","4d0156b6":"code","d3c26f47":"code","4b415487":"code","94e6d13f":"code","ced244b6":"code","2277a752":"code","9a2a0dd9":"code","e1d2c736":"code","42edc84d":"code","68fd5a4f":"code","3d3f5f2d":"code","4cb29bba":"code","65bdb6b0":"code","03f28c20":"code","0b6b5733":"code","28eb7c00":"code","953f80e4":"code","868652e9":"code","b24006e6":"code","4e15acfd":"markdown","6848bc50":"markdown","5c85446c":"markdown","15edffee":"markdown"},"source":{"a1143e66":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom matplotlib.cm import rainbow\n#from matplotlib import rcparams\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","040804b7":"path = \"..\/input\/heart-disease-uci\/heart.csv\"","959dd6e8":"data = pd.read_csv(path)","4b0b8cbb":"data.head()","fd1e8f36":"data.tail()","efe3f22b":"data.describe()","5f415c1e":"data.columns","6ba81413":"data.dtypes","84e97b35":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier","00436668":"data.info()","078c1e6c":"import seaborn as sns\n#correlation of each dataset\ncorrmat = data.corr()\ntop_corr_feature = corrmat.index\nplt.figure(figsize=(20,20))\n#plot hit map\ng = sns.heatmap(data[top_corr_feature].corr(),annot=True,cmap=\"jet\")","18b5b803":"import seaborn as sns\n#correlation of each dataset\ncorrmat = data.corr()\ntop_corr_feature = corrmat.index\nplt.figure(figsize=(20,20))\n#plot hit map\ng = sns.heatmap(data[top_corr_feature].corr(),annot=True,cmap=\"Set2\")","770eaa58":"import seaborn as sns\n#correlation of each dataset\ncorrmat = data.corr()\ntop_corr_feature = corrmat.index\nplt.figure(figsize=(20,20))\n#plot hit map\ng = sns.heatmap(data[top_corr_feature].corr(),annot=True,cmap=\"PiYG\")","0d4e941c":"data.hist()","151ba879":"sns.set_style('whitegrid')\nsns.countplot(x='target',data=data,palette='RdBu_r')","3cedb8c7":"data.columns","09f5f0b5":"dataset = pd.get_dummies(data,columns = ['sex','cp','fbs','restecg','exang','slope','ca','thal'])","4d0156b6":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nstandardScaler = StandardScaler()\ncolumns_to_scale = ['age', 'trestbps', 'chol', 'thalach', 'oldpeak']\ndataset[columns_to_scale] = standardScaler.fit_transform(dataset[columns_to_scale])","d3c26f47":"dataset.head()","4b415487":"y = dataset['target']\nX = dataset.drop(['target'], axis = 1)","94e6d13f":"from sklearn.model_selection import cross_val_score\nknn_scores = []\nfor k in range(1,21):\n    knn_classifier = KNeighborsClassifier(n_neighbors = k)\n    score=cross_val_score(knn_classifier,X,y,cv=10)\n    knn_scores.append(score.mean())","ced244b6":"plt.plot([k for k in range(1, 21)], knn_scores, color = 'red')\nfor i in range(1,21):\n    plt.text(i, knn_scores[i-1], (i, knn_scores[i-1]))\nplt.xticks([i for i in range(1, 21)])\nplt.xlabel('Number of Neighbors (K)')\nplt.ylabel('Scores')\nplt.title('K Neighbors Classifier scores for different K values')","2277a752":"knn_classifier = KNeighborsClassifier(n_neighbors = 12)\nscore=cross_val_score(knn_classifier,X,y,cv=10)\n","9a2a0dd9":"score.mean()","e1d2c736":"from sklearn.ensemble import RandomForestClassifier","42edc84d":"randomforest_classifier= RandomForestClassifier(n_estimators=10)\n\nscore=cross_val_score(randomforest_classifier,X,y,cv=10)","68fd5a4f":"score.mean()","3d3f5f2d":"total_cols = len(data.columns)\ntotal_cols\nx = data.values[:,:total_cols-1]\ny = data.values[:,total_cols-1]\n","4cb29bba":"#split the data into training set and testing set\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.25, random_state = 0)\nprint(x_train)","65bdb6b0":"print(y_train)","03f28c20":"print(x_test)","0b6b5733":"print(y_test)","28eb7c00":"# import the regressor \nfrom sklearn.tree import DecisionTreeRegressor\n","953f80e4":"# create a regressor object \nregressor = DecisionTreeRegressor(random_state = 0)\n  ","868652e9":"# fit the regressor with X and Y data\nregressor.fit(x_train, y_train) ","b24006e6":"#Predicting labels on the test set.\ny_pred =  regressor.predict(x_test)\nprint(y_pred)\n","4e15acfd":"Data Processing\n\nAfter exploring the dataset, use dummy varieble to covert data into categorical form.","6848bc50":"Decision Tree","5c85446c":"Feature Selection","15edffee":"Random forest Classifier"}}