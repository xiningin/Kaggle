{"cell_type":{"f523781b":"code","1c29e2fa":"code","6e67fdd1":"code","d1a03baa":"code","bb4f2e84":"code","75e1fcf9":"code","ed5e3e5a":"code","3d02259f":"code","d0833f77":"code","9718586b":"code","3a416d04":"code","550748b3":"code","98785dac":"code","d0dd73cd":"code","0c8be2a4":"code","cb079ec7":"code","ffc86595":"code","81a22b29":"markdown","640246cd":"markdown","170b0ddb":"markdown"},"source":{"f523781b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1c29e2fa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\nimport pandas as pd\nimport numpy as np\nfrom datetime import datetime,timedelta\nfrom sklearn.metrics import mean_squared_error\nfrom scipy.optimize import curve_fit\nfrom scipy.optimize import fsolve\nimport matplotlib.pyplot as plt\n%matplotlib inline","6e67fdd1":"df=pd.read_csv('..\/input\/indonesia-coronavirus-cases\/confirmed_acc.csv')","d1a03baa":"df = df.loc[:,['date','cases']]\nFMT = '%m\/%d\/%Y'\ndate = df['date']\ndf['date'] = date.map(lambda x : (datetime.strptime(x, FMT) - datetime.strptime(\"3\/1\/2020\", FMT)).days  )","bb4f2e84":"df","75e1fcf9":"#Data tambahan sejak 18 Maret 2020\ndf = df.append({'date' : 17 , 'cases' : 227} , ignore_index=True) #18 Maret\ndf= df.append({'date' : 18, 'cases' : 309}, ignore_index=True) #19 Maret\ndf= df.append({'date' : 19, 'cases' : 369}, ignore_index=True) #20 Maret\ndf=df.append({'date' : 20, 'cases' : 450}, ignore_index=True) #21 Maret\ndf=df.append({'date' : 21, 'cases' : 514}, ignore_index=True) #22 Maret\ndf=df.append({'date' : 22, 'cases' : 579}, ignore_index=True) #23 Maret\ndf=df.append({'date' : 23, 'cases' : 686}, ignore_index=True) #24 Maret\ndf=df.append({'date' : 24, 'cases' : 790}, ignore_index=True) #25 Maret\ndf=df.append({'date' : 25, 'cases' : 893}, ignore_index=True) #26 Maret\ndf=df.append({'date' : 26, 'cases' : 1046}, ignore_index=True) #27 Maret\ndf=df.append({'date' : 27, 'cases' : 1155}, ignore_index=True) #28 Maret\ndf=df.append({'date' : 28, 'cases' : 1285}, ignore_index=True) #29 Maret\ndf=df.append({'date' : 29, 'cases' : 1414}, ignore_index=True) #30 Maret\ndf=df.append({'date' : 30, 'cases' : 1528}, ignore_index=True) #31 Maret\ndf=df.append({'date' : 31, 'cases' : 1677}, ignore_index=True) #1 April\ndf=df.append({'date' : 32, 'cases' : 1790}, ignore_index=True) #2 April\ndf=df.append({'date' : 33, 'cases' : 1986}, ignore_index=True) #3 April\ndf=df.append({'date' : 34, 'cases' : 2092}, ignore_index=True) #4 April\ndf=df.append({'date' : 35, 'cases' : 2273}, ignore_index=True) #5 April","ed5e3e5a":"df\n","3d02259f":"def logistic_model(x,a,b,c):\n    return c\/(1+np.exp(-(x-b)\/a))","d0833f77":"x = list(df.iloc[39:,0])\ny = list(df.iloc[39:,1])\nfit = curve_fit(logistic_model,x,y)","9718586b":"A,B=fit\n#nilai a,b,\nA","3a416d04":"errors = [np.sqrt(fit[1][i][i]) for i in [0,1,2]]\nerrors","550748b3":"a=A[0]+errors[0]\nb=A[1]+errors[1]\nc=A[2]+errors[2]","98785dac":"sol = int(fsolve(lambda x : logistic_model(x,a,b,c) - int(c),b))\nsol","d0dd73cd":"pred_x = list(range(max(x),sol))\nplt.rcParams['figure.figsize'] = [7, 7]\nplt.rc('font', size=14)# Real data\nplt.scatter(x,y,label=\"Real data\",color=\"red\")\n\n# Predicted logistic curve\nplt.plot(x+pred_x, [logistic_model(i,a,b,c) for i in x+pred_x], label=\"Logistic model\" )\n\nplt.legend()\nplt.xlabel(\"Days since 1 March 2020\")\nplt.ylabel(\"Total number of infected people\")\nplt.ylim((min(y)*0.9,c*1.1))\nplt.show()","0c8be2a4":"y_pred_logistic = [logistic_model(i,a,b,c) for i in x]\np=mean_squared_error(y,y_pred_logistic)\n\ns1=(np.subtract(y,y_pred_logistic)**2).sum()\ns2=(np.subtract(y,np.mean(y))**2).sum()\nr=1-s1\/s2\nprint(\"R^2 adalah {}\".format(r))\nprint(\"Mean square errornya adalah {}\".format(p))","cb079ec7":"from datetime import timedelta, date\nfrom datetime import datetime  \nfrom datetime import timedelta \n\nstart_date = \"01\/03\/20\"\n\ndate_1 = datetime.strptime(start_date, \"%d\/%m\/%y\")\n\nend_date = date_1 + timedelta(days=sol)\n\nx=end_date.strftime(\"%d %B %Y\")","ffc86595":"print(\"Jumlah kasus maksimal di indonesia menurut prediksi adalah {:f}\".format(A[2]+errors[2])) #Penambahan dengan error\nprint(\"Puncak wabah adalah {:.0f} hari setelah 1 Maret 2020 atau {}\". format(sol,x))","81a22b29":"# 3. Lojistik Model Olu\u015fturma","640246cd":"# Sonu\u00e7","170b0ddb":"# R Square"}}