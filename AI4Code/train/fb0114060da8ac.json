{"cell_type":{"bcc5b5be":"code","831a4bd9":"code","16eed1bf":"code","56197515":"code","2ffe0f42":"code","ba8ffe19":"code","8729dde8":"code","15a09996":"code","99856f15":"code","f5ebd8b4":"code","51343bfd":"code","f989255d":"code","dd377bd0":"markdown"},"source":{"bcc5b5be":"import numpy as np\nimport pandas as pd\nfrom sklearn.linear_model import Ridge, RidgeCV,LogisticRegression,LinearRegression,Lasso\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.compose import make_column_transformer, make_column_selector\nfrom sklearn.preprocessing import StandardScaler, KBinsDiscretizer,QuantileTransformer, PowerTransformer, PolynomialFeatures,MinMaxScaler\nfrom sklearn.model_selection import train_test_split, GridSearchCV, cross_val_score\nimport xgboost as xgb\nfrom catboost import CatBoostRegressor","831a4bd9":"train = pd.read_csv('..\/input\/tabular-playground-series-jan-2021\/train.csv', index_col='id')\ntest = pd.read_csv('..\/input\/tabular-playground-series-jan-2021\/test.csv', index_col='id')","16eed1bf":"x = train.drop(columns=['target'])\ny = train['target'].values\nx_train, x_val, y_train, y_val = train_test_split(x, y, test_size=0.3)","56197515":"model=CatBoostRegressor(iterations=10000,\n                             learning_rate=0.001,\n                             depth=10,\n                             eval_metric='RMSE',\n                             random_seed = 23,\n                             task_type=\"GPU\",\n                             od_type='Iter',\n                             metric_period = 100,\n                             od_wait=100)","2ffe0f42":"model.fit(x_train, y_train,\n             eval_set=(x_val,y_val),\n             use_best_model=True,\n             verbose=True,plot=True)","ba8ffe19":"sub = pd.read_csv('..\/input\/tabular-playground-series-jan-2021\/sample_submission.csv', index_col='id')\nsub['target'] = model.predict(test)\nsub.to_csv('submission.csv')","8729dde8":"# import shap\n# shap.initjs()\n# explainer=shap.TreeExplainer(model)\n# shap_values = explainer.shap_values(x)\n# shap.force_plot(explainer.expected_value, shap_values[0,:], x.iloc[0,:])","15a09996":"from mlxtend.regressor import StackingCVRegressor\nfrom sklearn.neighbors import KNeighborsRegressor\nimport lightgbm as lgb","99856f15":"stack = StackingCVRegressor(regressors=(xgb.XGBRegressor(tree_method='gpu_hist', gpu_id=0), \n                            model),\n                            meta_regressor=lgb.LGBMRegressor(device = 'gpu'), cv=20,\n                            use_features_in_secondary=True,\n                            store_train_meta_features=True,\n                            shuffle=False,\n                            random_state=1)","f5ebd8b4":"stack.fit(x_train, y_train)","51343bfd":"test.columns","f989255d":"sub = pd.read_csv('..\/input\/tabular-playground-series-jan-2021\/sample_submission.csv', index_col='id')\ntest.columns=['f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'f10', 'f11', 'f12', 'f13']\nsub['target'] = stack.predict(test)\nsub.to_csv('submissionboosters.csv')","dd377bd0":"## Underdevelopment******\nTHis is simple Catboost, I will be adding my hyperparameters and refining the data."}}