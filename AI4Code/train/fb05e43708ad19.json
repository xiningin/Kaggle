{"cell_type":{"42965670":"code","eeb46515":"code","2974357c":"code","2aa4f45b":"code","10203d4c":"code","a9ba2802":"code","30cfb7b1":"code","a0f5622c":"code","d6e669cf":"code","7d8291b6":"code","14c1a871":"code","fe6ffafb":"code","b57a4dee":"code","f548e07e":"code","66dd7732":"code","e9e5e973":"code","09d0c852":"code","10562f80":"code","ab812e9c":"code","e377a115":"code","e5be85a7":"code","f3cb0f73":"code","a87a1cf7":"code","8074028d":"code","13919e41":"code","6f0d9072":"markdown","04aa0e78":"markdown","decbd614":"markdown","c2d7590b":"markdown","58dfc0c5":"markdown","b610f647":"markdown","1ef32b30":"markdown","d043ac1e":"markdown","964caf59":"markdown","f70c1811":"markdown","f5792bef":"markdown"},"source":{"42965670":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","eeb46515":"#Reading the dataset\ndata=pd.read_csv('\/kaggle\/input\/netflix-shows\/netflix_titles.csv')","2974357c":"data.shape","2aa4f45b":"data.columns","10203d4c":"data.head()","a9ba2802":"mov=data.query(\"type=='Movie'\")\nmov['min']=mov['duration'].str.split(' ',expand=True)[0]\nmov['min']=mov['min'].astype(int)\nmov['hr']=mov['min']\/60","30cfb7b1":"top20run=mov.sort_values(by='hr',ascending=False).head(20)\nplt.figure(figsize=(10,7))\nsns.barplot(data=top20run,y='title',x='hr',hue='country',dodge=False)\nplt.legend(loc='lower right')\nplt.title('Top 10 movies by Run Time')\nplt.xlabel('Hours')\nplt.ylabel('Movie name')\nplt.show()","a0f5622c":"tv=data.query(\"type=='TV Show'\")\ntv['sea']=tv['duration'].str.split(' ',expand=True)[0]\ntv['sea']=tv['sea'].astype(int)","d6e669cf":"top20tv=tv.sort_values(by='sea',ascending=False).head(20)\nplt.figure(figsize=(10,7))\nsns.barplot(data=top20tv,y='title',x='sea',hue='country',dodge=False)\nplt.legend(loc='lower right')\nplt.title('Top TV show by Run Time')\nplt.xlabel('Seasons')\nplt.ylabel('Movie name')\nplt.show()","7d8291b6":"sns.set(style=\"darkgrid\", palette=\"pastel\", color_codes=True)\nplt.figure(figsize=(5,10))\nsns.countplot(y='director',data=data,order = data['director'].value_counts().head(20).index)\nplt.show()","14c1a871":"import cufflinks as cf\nimport plotly.offline\ncf.go_offline()\ncf.set_config_file(offline=False, world_readable=True)\nindcast=[]\nind=data.query('country==\"India\"')\nfor i in ind['cast']:\n    indcast.append(i)\nnewls=[]\nfor i in indcast:\n    newls.append(str(i).split(',')[0])\ninddf=pd.DataFrame(newls,columns=['name'])\nind_df=inddf.drop(inddf.query('name==\"nan\"').index)\nind_df['name'].value_counts().head(20).plot(kind=\"bar\",width=1,color='red',edgecolor='lightgreen',figsize=(10,8))\nplt.xlabel(\"ACTORS\")\nplt.ylabel(\"No. Of Movies\")\nplt.title(\"Indian stars with max movies on netflix\")\nplt.show()","fe6ffafb":"us=data[data['country'].str.contains('United States',na=False)]\nuscast=[]\nfor i in us['cast']:\n    uscast.append(i)\nnewls1=[]\nfor i in uscast:\n    newls1.append(str(i).split(',')[0])\n    \nusdf=pd.DataFrame(newls1,columns=['name'])\nus_df=usdf.drop(usdf.query('name==\"nan\"').index)\nus_df['name'].value_counts().head(20).plot(kind=\"bar\",width=.8,edgecolor='black',figsize=(10,8))\nplt.xlabel(\"ACTORS\")\nplt.ylabel(\"No. Of Movies\")\nplt.title(\"US stars with max movies on netflix\")\nplt.show()","b57a4dee":"rat=data.groupby('rating')[['show_id']].count().reset_index()\nplt.figure(figsize=(10,7))\nplt.pie(rat['show_id'],autopct='%1.1f%%', startangle=90, pctdistance=1.2,shadow=True)\ncentre_circle = plt.Circle((0,0),0.4,fc='white')\nfig=plt.gcf()\nfig.gca().add_artist(centre_circle)\nplt.axis('equal')\nplt.legend(data['rating'])\nplt.show()","f548e07e":"data['date']=pd.to_datetime(data['date_added'])\ndata['month']=data['date'].dt.strftime('%b')\ndata.groupby('month')[['rating']].count().reset_index().sort_values(by='rating',ascending=False).plot(kind='bar',\\\n                                                                               width=1,color='green',figsize=(10,8))\nplt.xlabel(\"Months\")\nplt.ylabel(\"Count\")\nplt.show()","66dd7732":"!pip install rake_nltk\nfrom sklearn.metrics.pairwise import cosine_similarity\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom rake_nltk import Rake","e9e5e973":"new_df = data[['title','director','cast','listed_in','description']]\nnew_df.head()","09d0c852":"new_df['director']=new_df['director'].fillna(' ')\nnew_df['director']=new_df['director'].astype('str')","10562f80":"new_df['cast']=new_df['cast'].fillna(' ')\nnew_df['cast']=new_df['cast'].astype('str')","ab812e9c":"new_df['bag_of_word']= ''\nfor index,row in new_df.iterrows():\n    plot = row['description']\n    r = Rake()\n    r.extract_keywords_from_text(plot)\n    keyword_score = r.get_word_degrees()\n    g = ''.join(row['listed_in'].split(',')).lower()\n    d = ''.join(row['director'].replace(' ','').split(',')).lower()\n    a = ' '.join(row['cast'].replace(' ','').split(',')).lower()\n    k = ' '.join(list(keyword_score.keys()))\n    row['bag_of_word'] = g + ' ' + ' ' + d + ' ' + a + ' ' + k\n\nmydf = new_df[['title','bag_of_word']]\nmydf.head()","e377a115":"c = CountVectorizer()\ncount_mat = c.fit_transform(mydf['bag_of_word'])\ncosine_sim = cosine_similarity(count_mat,count_mat)\nprint(cosine_sim)","e5be85a7":"indices = pd.Series(mydf['title'])\ndef recommend_movie(name):\n    movie=[]\n    idx = indices[indices == name].index[0]\n    sort_index = pd.Series(cosine_sim[idx]).sort_values(ascending = False)\n    top_10 = sort_index.iloc[1:11]\n    for i in top_10.index:\n        movie.append(indices[i])\n    return movie","f3cb0f73":"recommend_movie('Transformers Prime')","a87a1cf7":"recommend_movie('Oh! Baby (Malayalam)')","8074028d":"recommend_movie('Naruto Shippuden : Blood Prison')","13919e41":"recommend_movie('Main Hoon Na')","6f0d9072":"## Top Movies by RunTime","04aa0e78":"## Checking the month in which most content is added.","decbd614":"## Top TV Shows By No. of Seasons","c2d7590b":"Importing necessary packages","58dfc0c5":" ## US movie stars with most movies.","b610f647":"# Descriptive Analysis","1ef32b30":" ## Indian movie stars with most movies.","d043ac1e":"# Building a recommender system\n- We are here trying to build content based recommender system\n- Here we will make use of cosine similarity algorithm","964caf59":"## Most Common Director","f70c1811":"Mostly content are added in Feb","f5792bef":"## Checking most common TV-rating content available on Netflix"}}