{"cell_type":{"b8f1dfdd":"code","523116d9":"code","dcd002f2":"code","f7c94693":"code","c1770f69":"code","a4ef338e":"code","4ff847ce":"code","16a76d8a":"code","83c28c7e":"code","f64acada":"code","fb7254eb":"code","1976f2e0":"code","cc2a9a18":"code","2d0b2b0f":"code","f8d7039e":"code","e31b499f":"code","762789d8":"code","dd967dfa":"code","2ff474a2":"code","34ff37c0":"code","be61b4c2":"markdown","60b06e46":"markdown","0972f1d9":"markdown","f1ecf162":"markdown","06b8d62d":"markdown","3c7bb9b7":"markdown","a575c155":"markdown","a437715c":"markdown","eb02bb1b":"markdown","6b693c18":"markdown","e99c6150":"markdown","ec6aa292":"markdown","ef7707c7":"markdown","2e81949c":"markdown","b674589e":"markdown","753d8594":"markdown","85f2a3ec":"markdown","88fa722e":"markdown","78aca754":"markdown","5c3c023f":"markdown","41bc39e7":"markdown","36475274":"markdown","d94398de":"markdown","f15809d6":"markdown","6b10fa15":"markdown","b1ab53c7":"markdown","319acde1":"markdown","1c5b78d2":"markdown"},"source":{"b8f1dfdd":"# Import torch and other required modules\nimport torch","523116d9":"a = torch.zeros((3,3))\nprint(a)\nprint(a.shape)","dcd002f2":"# Example 2 - working\nb = torch.zeros((10,20),dtype=int)\nprint(b)\nprint(b.shape)","f7c94693":"# Example 3 - working\nc = torch.zeros(5,dtype=int)\nprint(c)\nprint(c.shape)","c1770f69":"# Example 1 - working\nten1=torch.tensor([[1, 2], [3, 4.]])\nten2=torch.tensor([[5, 6], [7, 8.]])\nprint(ten1,ten2)","a4ef338e":"torch.cat((ten1,ten2))","4ff847ce":"# Example 2 - working\nten3 =torch.tensor((1, 2))\nten4 =torch.tensor((3, 4))\nprint(ten3,ten4)","16a76d8a":"torch.cat((ten3,ten4))","83c28c7e":"# Example 3 - breaking (to illustrate when it breaks)\nten5 =torch.tensor((1,2,3))\nten6 = torch.tensor((1.0,2.0))\ntorch.cat((ten5,ten6))","f64acada":"# Example 1 - working\nt = torch.tensor([\n    [1,1,1,1],\n    [2,2,2,2],\n    [3,3,3,3]\n], dtype=torch.float32)","fb7254eb":"t.reshape([1,12])","1976f2e0":"# Example 2 - working\nt.reshape([2,12])","cc2a9a18":"# Example 3 - breaking (to illustrate when it breaks)\nt.reshape([2,4])\n","2d0b2b0f":"# Example 1 - working\nr = torch.squeeze(t)     # Size 2x2\nprint(\"squeeze\",r)","f8d7039e":"# Example 2 - working\nprint(t.reshape([1,12]).squeeze())","e31b499f":"# Example 3 - breaking (to illustrate when it breaks)\n","762789d8":"# Example 1 - working\nprint(t.reshape([1,12]).squeeze().unsqueeze(dim=0))","dd967dfa":"# Example 2 - working\nprint(t.reshape([1,12]).squeeze().unsqueeze(dim=0).shape)","2ff474a2":"# Example 3 - breaking (to illustrate when it breaks)","34ff37c0":"jovian.commit()","be61b4c2":"Merges elements of two different tensor to one","60b06e46":"Created a tensor with zeros having 10 rows and 20 columns with integer data type.","0972f1d9":"Used when we have to use zero padding in deep convolutional neural network","f1ecf162":"Explanation about example","06b8d62d":"Created a tensor with zeros having 3 rows and 3 columns","3c7bb9b7":"Closing comments about when to use this function","a575c155":"## Function 2 - torch.cat((a,b))\nUse to concatenate two tensors","a437715c":"Explanation about example","eb02bb1b":"We can also concatenate two vectors using torch.cat()  method.","6b693c18":"Explanation about example","e99c6150":"Explanation about example","ec6aa292":"**# Getting Started with PyTorch\n\n### Introduction\n\nPytorch is open source deep learning and machine learning Framework build on the top of torch library and uses C++, Python and CUDA at backend. Pytorch is developed in 2016 by researchers and developers of Facebook's AI research lab which is used in machine learning, deep learning, Natural Language Processing, computer vision and other artificial intelligence application.\nIn this notebook following functions are covered:\n- torch.zeros((n,m))\n- torch.cat((a,b))\n- reshape(m,n)\n- squeeze(t)\n- torch.unsqueeze(x, 0)","ef7707c7":"## Function 3 - reshape(m,n)\n\n\nAdd some explanations","2e81949c":"Closing comments about when to use this function","b674589e":"Explanation about example","753d8594":"After performing operations on two different tensors and we have to merge those tensors torch.cat is used. ","85f2a3ec":"Explanation about example","88fa722e":"> ## Function 4 - squeeze(t)\n\n\nSqueezing a tensor removes the dimensions or axes that have a length of one.","78aca754":"## Conclusion\n\nPyTorch is a great framework to develope AI applications using ML and DL algorithms and concepts.It gives low level APIs to interact direct with data.","5c3c023f":"Created a vector with 5 zeros element.","41bc39e7":"Explanation about example","36475274":"Explanation about example","d94398de":"## Function 1 - torch.zeros((m,n))\n\nUsed to generate tensor with m rows and n columns with zeros scalar value.","f15809d6":"## Reference Links\nProvide links to your references and other interesting articles about tensors\n* Official documentation for `torch.Tensor`: https:\/\/pytorch.org\/docs\/stable\/tensors.html\n* ...","6b10fa15":"Explanation about example","b1ab53c7":"Closing comments about when to use this function","319acde1":"## Function 5 -torch.unsqueeze(x, 0)\n\nUnsqueezing a tensor adds a dimension with a length of one.","1c5b78d2":"Concatenation can be done with the tensor of same datatype."}}