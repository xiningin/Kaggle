{"cell_type":{"70dd59c3":"code","a6776f58":"code","1c035e21":"code","adb6486f":"code","9d635e0d":"code","faeaeb53":"code","ee02e8db":"code","d07b72a0":"code","9a5649a9":"code","fb096cfe":"code","a5cf9900":"code","810f1b5d":"code","4ad9cec5":"code","667b8e28":"code","020da00a":"code","41345ea6":"code","5087a552":"code","e93f856c":"code","6e4974c0":"markdown","9debc3cb":"markdown"},"source":{"70dd59c3":"import numpy as np \nimport pandas as pd \nimport glob\nimport os\nimport matplotlib.pyplot as plt\nimport plotly.figure_factory as ff\nimport plotly.express as px\n\nimport plotly.graph_objects as go\nfrom plotly.offline import iplot","a6776f58":"sub_730 = pd.read_csv('..\/input\/rsna730\/730.csv')\nsub_715 = pd.read_csv('..\/input\/brain-tumor-3d-blender-csv\/RSNA_Public\/715.csv')\nsub_684 = pd.read_csv('..\/input\/brain-tumor-3d-blender-csv\/RSNA_Public\/684.csv')\nsub_683 = pd.read_csv('..\/input\/brain-tumor-3d-blender-csv\/RSNA_Public\/683.csv')\nsub_677 = pd.read_csv('..\/input\/braintumor3dblendercsvrsna-public677csv\/677.csv')","1c035e21":"sub_730=sub_730.sort_values(by=['BraTS21ID'], ascending=True)\nsub_730=sub_730.reset_index(drop=True)\nsub_730.head(3)","adb6486f":"sub_715=sub_715.sort_values(by=['BraTS21ID'], ascending=True)\nsub_715=sub_715.reset_index(drop=True)\nsub_715.head(3)","9d635e0d":"sub_684=sub_684.sort_values(by=['BraTS21ID'], ascending=True)\nsub_684=sub_684.reset_index(drop=True)\nsub_684.head(3)","faeaeb53":"sub_683=sub_683.sort_values(by=['BraTS21ID'], ascending=True)\nsub_683=sub_683.reset_index(drop=True)\nsub_683.head(3)","ee02e8db":"sub_677=sub_677.sort_values(by=['BraTS21ID'], ascending=True)\nsub_677=sub_677.reset_index(drop=True)\nsub_677.head(3)","d07b72a0":"\nhist_data = [sub_730.MGMT_value, sub_715.MGMT_value, sub_684.MGMT_value, sub_683.MGMT_value, sub_677.MGMT_value]\ngroup_labels = ['sub_730', 'sub_715', 'sub_684', 'sub_683', 'sub_677']\n\nfig = ff.create_distplot(hist_data, group_labels, bin_size=.2, show_hist=False, show_rug=False)\n\nfig.update_layout(\n    width = 700,\n    height = 400\n)\nfig.show()","9a5649a9":"# dict for the dataframes and their names\ndfs = {\"sub_730\" : sub_730, \"sub_715\" : sub_715, \"sub_684\": sub_684, \"sub_683\" : sub_683, \"sub_677\" : sub_677}\n\n# plot the data\nfig = go.Figure()\nfor i in dfs:\n    fig = fig.add_trace(go.Scatter(x = dfs[i][\"BraTS21ID\"],\n                                   y = dfs[i][\"MGMT_value\"], \n                                   mode=\"markers\",\n                                   name = i))\n    fig = fig.add_trace(\n        go.Scatter(\n            x=[0, 1010],\n            y=[0.5, 0.5],\n            mode=\"lines\",\n            line=go.scatter.Line(color=\"gray\"),\n            showlegend=False)\n    )\n\nfig.update_layout(\n    width = 700,\n    height = 500\n)\nfig.show()\n","fb096cfe":"data=np.corrcoef(hist_data)\nfig = px.imshow(data,x=group_labels,y=group_labels)\nfig.show()","a5cf9900":"Finalsubmission = sub_715.copy()\nFinalsubmission['MGMT_value'] =\\\nsub_730['MGMT_value'].values*0.5\nsub_715['MGMT_value'].values*0.2 +\\\nsub_684['MGMT_value'].values*0.1+\\\nsub_683['MGMT_value'].values*0.1+\\\nsub_677['MGMT_value'].values*0.1","810f1b5d":"Finalsubmission['BraTS21ID'] = Finalsubmission['BraTS21ID'].apply(lambda x: str(x).zfill(5))","4ad9cec5":"Finalsubmission.head(3)","667b8e28":"Fsubmission = Finalsubmission.set_index('BraTS21ID')\nFsubmissionDict = Fsubmission['MGMT_value'].to_dict()","020da00a":"listOfStudyPaths = glob.glob('..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/test\/*')\nlistOfStudies = [eachPath.split('\/')[-1] for eachPath in listOfStudyPaths]\n\npredList = []\nfor eachStudy in listOfStudies:\n    if eachStudy not in FsubmissionDict:\n        predList.append('0.500')\n    else:\n        score = float(FsubmissionDict[eachStudy])\n        predList.append(score)\n        \nsubmission = pd.DataFrame({'BraTS21ID':listOfStudies,'MGMT_value':predList})\n","41345ea6":"submission=submission.sort_values(by=['BraTS21ID'], ascending=True)\nsubmission=submission.reset_index(drop=True)\nsubmission.head(5)","5087a552":"submission.to_csv('submission.csv', index=False)","e93f856c":"plt.figure(figsize=(5, 5))\nplt.hist(submission[\"MGMT_value\"]);","6e4974c0":"\n# Solutions for blending\n\n1. https:\/\/www.kaggle.com\/ammarnassanalhajali\/brain-tumor-3d-blender (Score=0.73)\n1. https:\/\/www.kaggle.com\/ammarnassanalhajali\/brain-tumor-3d-inference (Score=0.683)\n1. https:\/\/www.kaggle.com\/syerwin\/efficientnet3d-with-one-mri-type (Score=0.674)\n1. https:\/\/www.kaggle.com\/hijest\/1-rsna-miccai-not-smart-ensemble  (Score=0.715)\n1. https:\/\/www.kaggle.com\/yeeseng\/miccai-shamsubmission\/notebook (Score=0.677)\n\n","9debc3cb":"# Solution ensemble from public notebooks"}}