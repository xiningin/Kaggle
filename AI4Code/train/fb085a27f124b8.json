{"cell_type":{"192ef2b0":"code","8d49243f":"code","24ce9aed":"code","2d90e1f4":"code","0f5d5f4f":"code","0ada474d":"code","2c09a873":"code","e1655278":"code","3cc07def":"code","1db0a6dd":"code","e69484b1":"code","6393b28b":"code","b613a1a8":"code","e285f7bb":"code","977ec4a2":"code","94c3f8a5":"code","3611949a":"code","2621fffd":"code","5cd9db2d":"code","a5e9f6df":"code","7b9278d2":"code","d254181e":"code","cec5a775":"code","a9a6a7cd":"code","d8fbf0a3":"code","a0903eb7":"code","eb16989a":"code","f38557dc":"code","8e3c6e5f":"code","7d1b14ad":"code","905b7c5d":"code","a4a964d1":"code","7b79cd37":"code","dc0eb5a1":"code","475b0e16":"code","45c7b664":"code","f731fe8c":"code","94fc6ab4":"code","a572fbee":"code","9f871c52":"code","4ac6a8bf":"code","9986abc2":"code","ddcb2c55":"code","1099b481":"code","27fd16c9":"code","ca18a4d9":"code","47d17939":"code","964900d5":"code","1f7844d5":"code","a530d653":"code","cd1a66fe":"code","cd5f64b4":"code","302f30f9":"code","2bad511b":"code","60661ae7":"code","65bbc52d":"code","c30e8f9f":"code","d1aadba0":"code","9ca6d675":"markdown","44ead7c9":"markdown","dbabc3c8":"markdown","0cfa9b57":"markdown","d8d78a78":"markdown","cb647683":"markdown","d2a3eacf":"markdown","020757db":"markdown","828296d4":"markdown","98937848":"markdown","cdb2d4af":"markdown","136d776c":"markdown","afe3c70d":"markdown","3dc8c16c":"markdown","8a186a81":"markdown","761a3577":"markdown","168ee873":"markdown","b1707fc8":"markdown","2db555d8":"markdown","ae82a415":"markdown","3304f51b":"markdown","5e5311c4":"markdown","cdf18fb6":"markdown","6c356299":"markdown"},"source":{"192ef2b0":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","8d49243f":"train_df = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest_df = pd.read_csv(\"..\/input\/titanic\/test.csv\")","24ce9aed":"train = train_df.copy()\ntest = test_df.copy()","2d90e1f4":"train.head()","0f5d5f4f":"cols_to_be_removed = [\"PassengerId\", \"Name\", \"Ticket\"]","0ada474d":"train.drop(cols_to_be_removed, axis=1, inplace=True)\ntest.drop(cols_to_be_removed, axis=1, inplace=True)","2c09a873":"print(train.shape)","e1655278":"train.head()","3cc07def":"test.head()","1db0a6dd":"print(train.isna().sum())","e69484b1":"print(train[\"Age\"].mean())\nprint(train[\"Embarked\"].mode())","6393b28b":"train[\"Age\"].fillna(train[\"Age\"].mean(), inplace=True)","b613a1a8":"train.drop([\"Cabin\"],axis=1, inplace=True)","e285f7bb":"train.dropna(inplace=True) #Remaining 2 values in Embarked columns","977ec4a2":"print(train.shape)","94c3f8a5":"print(train.isna().sum())","3611949a":"print(test.shape)","2621fffd":"print(test.isna().sum())","5cd9db2d":"print(test[\"Age\"].mean())\nprint(test[\"Fare\"].mean())","a5e9f6df":"test[\"Age\"].fillna(test[\"Age\"].mean(), inplace=True)","7b9278d2":"test.drop([\"Cabin\"],axis=1,inplace=True)","d254181e":"test[\"Fare\"].fillna(test[\"Fare\"].mean(), inplace=True)","cec5a775":"print(test.isna().sum())","a9a6a7cd":"train.head()","d8fbf0a3":"test.head()","a0903eb7":"plt.figure(figsize=(8,5))\nsns.countplot(x='Survived', hue='Pclass', data= train)\nplt.show()","eb16989a":"plt.figure(figsize=(8,5))\nsns.countplot(x='Survived', hue='Sex', data= train)\nplt.show()","f38557dc":"import category_encoders as ce","8e3c6e5f":"encoder= ce.OrdinalEncoder(cols=['Sex'],return_df=True, mapping=[{'col':'Sex','mapping':{'male':0,'female':1}}])","7d1b14ad":"train = encoder.fit_transform(train)\ntest = encoder.fit_transform(test)","905b7c5d":"from sklearn.preprocessing import OneHotEncoder","a4a964d1":"encoder = ce.OneHotEncoder(cols='Embarked',handle_unknown='return_nan',return_df=True,use_cat_names=True)","7b79cd37":"train = encoder.fit_transform(train)\ntest = encoder.fit_transform(test)","dc0eb5a1":"train.head()","475b0e16":"test.head()","45c7b664":"X = train.iloc[:,1:].values\ny = train.iloc[:,0].values","f731fe8c":"from sklearn.model_selection import train_test_split","94fc6ab4":"X_train, X_test, y_train, y_test = train_test_split(X,y, test_size = 0.2)","a572fbee":"from sklearn.preprocessing import StandardScaler","9f871c52":"sc = StandardScaler()","4ac6a8bf":"train.head()","9986abc2":"print(train[\"Fare\"].var())\nprint(train[\"Age\"].var())","ddcb2c55":"X_train[:,5:6] = sc.fit_transform(X_train[:,5:6])\nX_test[:,5:6] = sc.transform(X_test[:,5:6])","1099b481":"X_train[:,2:3] = sc.fit_transform(X_train[:,2:3])\nX_test[:,2:3] = sc.transform(X_test[:,2:3])","27fd16c9":"from sklearn.ensemble import GradientBoostingClassifier","ca18a4d9":"gbc = GradientBoostingClassifier()","47d17939":"gbc.fit(X_train, y_train)","964900d5":"y_pred = gbc.predict(X_test)","1f7844d5":"from sklearn.metrics import accuracy_score, confusion_matrix","a530d653":"print(accuracy_score(y_test,y_pred))","cd1a66fe":"print(confusion_matrix(y_test,y_pred))","cd5f64b4":"sns.heatmap(confusion_matrix(y_test,y_pred),annot=True)\nplt.show()","302f30f9":"test.head()","2bad511b":"test_data = test.values","60661ae7":"test_data[:,5:6] = sc.fit_transform(test_data[:,5:6])\ntest_data[:,2:3] = sc.fit_transform(test_data[:,2:3])","65bbc52d":"prediction = gbc.predict(test_data)","c30e8f9f":"submission= pd.DataFrame({'PassengerId' : test_df['PassengerId'], 'Survived': prediction })\nsubmission.head()","d1aadba0":"filename= 'gender_submission.csv'\nsubmission.to_csv(filename, index=False)","9ca6d675":"<div style = \"font-family:'Segoe UI';\">All categorical values are encoded in the data \u2705 <\/div>","44ead7c9":"<div style = \"font-family:'Segoe UI'; font-size: 25px; text-align: center; color: #172774; font-weight: bold; padding: 10px auto\">\n    \ud83d\udef3 TITANIC DISASTER SURVIVOR PREDICTION \ud83d\udef3\n<\/div>","dbabc3c8":"<div style = \"font-family:'Segoe UI'; border-left: 5px solid red; padding: 5px 0px 10px 10px; border-radius: 5px\">\n    <h2>Splitting the dependent and independent variables<\/h2>\n<\/div>","0cfa9b57":"<div style = \"font-family:'Segoe UI'; border-left: 5px solid red; padding: 5px 0px 10px 10px; border-radius: 5px\">\n    <h2>Checking and cleaning null values in train and test data<\/h2>\n<\/div>","d8d78a78":"<div style = \"font-family:'Segoe UI';\"> \u27a1\ufe0f We can see that there are more female survivors compared to male <\/div>","cb647683":"<div style = \"font-family:'Segoe UI'; border-left: 5px solid red; padding: 5px 0px 10px 10px; border-radius: 5px\">\n    <h2>Predicting the survival status for the given test data<\/h2>\n<\/div>","d2a3eacf":"<div style = \"font-family:'Segoe UI'; border-left: 5px solid red; padding: 5px 0px 10px 10px; border-radius: 5px\">\n    <h2>Importing the data<\/h2>\n<\/div>","020757db":"<div style = \"font-family:'Segoe UI'; border-left: 5px solid red; padding: 5px 0px 10px 10px; border-radius: 5px\">\n    <h2>Validating the model<\/h2>\n<\/div>","828296d4":"<div style = \"font-family:'Segoe UI'; border-left: 5px solid red; padding: 5px 0px 10px 10px; border-radius: 5px\">\n    <h2>Scaling the values in data to reduce spread<\/h2>\n<\/div>","98937848":"<div style = \"font-family:'Segoe UI';\">All null values are handled in train and test data \u2705 <\/div>","cdb2d4af":"<img src = \"https:\/\/thumbor.forbes.com\/thumbor\/960x0\/https%3A%2F%2Fspecials-images.forbesimg.com%2Fdam%2Fimageserve%2F877330410%2F960x0.jpg%3Ffit%3Dscale\" >","136d776c":"<div style = \"font-family:'Segoe UI'; border-left: 5px solid red; padding: 5px 0px 10px 10px; border-radius: 5px\">\n    <h2>Removing the columns with unique values<\/h2>\n<\/div>","afe3c70d":"<div style = \"font-family:'Segoe UI'; border-left: 5px solid red; padding: 5px 0px 10px 10px; border-radius: 5px\">\n    <h2>Importing the required packages<\/h2>\n<\/div>","3dc8c16c":"<div style = \"font-family:'Segoe UI';\"> If you liked the notebook, and found it useful, please <strong>upvote<\/strong> and <strong>share<\/strong> it to your friends! \ud83d\ude00\ud83d\ude00 <\/div>","8a186a81":"<div style = \"font-family:'Segoe UI'; border-left: 5px solid red; padding: 5px 0px 10px 10px; border-radius: 5px\">\n    <h2>Gradient Boosting Classifier<\/h2>\n<\/div>","761a3577":"<div style = \"font-family:'Segoe UI'; border-left: 5px solid red; padding: 5px 0px 10px 10px; border-radius: 5px\">\n    <h2>Vizualizing the data<\/h2>\n<\/div>","168ee873":"<div style = \"font-family:'Segoe UI';\"> \u27a1\ufe0f We can see that there are more people from third class who fail to survive, while the survival ratio is more or less similar in all classes <\/div>","b1707fc8":"<div style = \"font-family:'Segoe UI';\">Data cleaning in Train Data<\/div>","2db555d8":"<img src = \"https:\/\/image.freepik.com\/free-vector\/happy-family-cleaning-apartment_74855-6501.jpg\" >","ae82a415":"<div style = \"font-family:'Segoe UI';\"> Saving the results into a csv file \u2705 <\/div>","3304f51b":"<div style = \"font-family:'Segoe UI';\">The model is 83.15 % accurate \ud83d\ude00\ud83d\ude00 <\/div>","5e5311c4":"<div style = \"font-family:'Segoe UI'; border-left: 5px solid red; padding: 5px 0px 10px 10px; border-radius: 5px\">\n    <h2>Encoding the categorical values in the data<\/h2>\n<\/div>","cdf18fb6":"<div style = \"font-family:'Segoe UI';\">\nGradient Boosting is an Ensemble Learning method. <br>\nIn Gradient Boosting, each predictor tries to improve on its predecessor by reducing the errors. But the fascinating idea behind Gradient Boosting is that instead of fitting a predictor on the data at each iteration, it actually fits a new predictor to the residual errors made by the previous predictor.\n<\/div>","6c356299":"<div style = \"font-family:'Segoe UI';\">Data cleaning in Test Data<\/div>"}}