{"cell_type":{"1481b145":"code","3250e117":"code","95045f4c":"code","f5b471ea":"code","ee9cdb3e":"markdown","898bb706":"markdown","282c7199":"markdown","e3985f59":"markdown","906fe882":"markdown","799128c8":"markdown"},"source":{"1481b145":"import numpy as np\nimport pandas as pd\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nfrom matplotlib import cm\nimport seaborn as sns","3250e117":"period = 15\ncycle = 4\ndepth = 20\ndegree = 2 * 3.141592 \/ (cycle*period)\ntotal_size = period * cycle * depth\n\n# colormap\ncmap = sns.color_palette(\"cubehelix\", period)\ncmap = cmap * (total_size \/\/ 15)\n\n# ETC\ndistance_from_center = 0.2\nrotation_factor = 3\nsize_factor = 2.4","95045f4c":"fig, ax = plt.subplots(1, 1, figsize=(7, 7), dpi=250)\n\npoints = np.arange(total_size)\n\ndist = (points \/\/ (cycle*period) + 1) \/ depth + distance_from_center\nx = np.sin(points * degree + dist * rotation_factor ) * dist \ny = np.cos(points * degree + dist * rotation_factor ) * dist \ns = ((points % period + 1) * dist \/ 3) ** size_factor\n\nax.scatter(x, y, s=s, color=cmap)\n\n# Plot Settings\nfor spine in ['top', 'bottom', 'left', 'right']:\n    ax.spines[spine].set_visible(False)\n\nax.set_xlim(-2, 2)\nax.set_ylim(-2, 2)\n\nax.set_xticks([])\nax.set_yticks([])\n\nplt.show()","f5b471ea":"fig, ax = plt.subplots(1, 1, figsize=(7, 7), dpi=250)\n\npoints = np.arange(total_size)\n\ndist = (points \/\/ (cycle*period) + 1) \/ depth + distance_from_center\nx = np.sin(points * degree + dist * rotation_factor ) * dist \ny = np.cos(points * degree + dist * rotation_factor ) * dist \ns = ((points % period + 1) * dist \/ 3) ** size_factor\n\nax.scatter(x, y, s=s, color='black')\n\n# Plot Settings\nfor spine in ['top', 'bottom', 'left', 'right']:\n    ax.spines[spine].set_visible(False)\n\nax.set_xlim(-2, 2)\nax.set_ylim(-2, 2)\n\nax.set_xticks([])\nax.set_yticks([])\n\nplt.show()","ee9cdb3e":"## Library","898bb706":"## Parameters\n\n- Period \n- Cycle \n- Depth ","282c7199":"## Circular Chart\n\n**Prior knowledge**\n\n1. Cartesian and Polar Coordinate Systems (Of course, polar charts can also be used.)\n    - Sin, Cos function\n    - Radian <-> Degree\n2. Modular Operation for Patterns\n","e3985f59":"## Plot","906fe882":"The purpose of information visualization is not an art. But when I visualize data, I often feel like I want to do art.\n\nI'm going to try some simple data art using data from Kaggle.","799128c8":"## Without Color"}}