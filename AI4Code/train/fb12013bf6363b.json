{"cell_type":{"6c293416":"code","c3f5012d":"code","eb2a1bd7":"code","fc9ae9c8":"code","c6938359":"code","e6a9e35a":"code","c908b619":"code","84d5ee11":"code","43f82daf":"markdown","a1095ddf":"markdown","5d85a138":"markdown","03fde061":"markdown"},"source":{"6c293416":"from sklearn.datasets import fetch_lfw_people","c3f5012d":"faces = fetch_lfw_people(min_faces_per_person=60)\nprint(faces.target_names)\nprint(faces.images.shape)","eb2a1bd7":"faces.data.shape","fc9ae9c8":"from sklearn.decomposition import PCA as RandomPCA\npca = RandomPCA(150)\npca.fit(faces.data)","c6938359":"pca.components_.shape","e6a9e35a":"import matplotlib.pyplot as plt\n\nfig, axes = plt.subplots(3, 8, figsize=(9, 4),subplot_kw={'xticks':[], 'yticks':[]}, gridspec_kw=dict(hspace=0.1, wspace=0.1))\nfor i, ax in enumerate(axes.flat):\n    ax.imshow(pca.components_[i].reshape(62, 47), cmap='bone')","c908b619":"import numpy as np\nplt.plot(np.cumsum(pca.explained_variance_ratio_))\nplt.xlabel('number of components')\nplt.ylabel('cumulative explained variance')","84d5ee11":"pca = RandomPCA(150).fit(faces.data)\ncomponents = pca.transform(faces.data)\nprojected = pca.inverse_transform(components)\n\n# Plot the results\nfig, ax = plt.subplots(2, 10, figsize=(10, 2.5),\n                       subplot_kw={'xticks':[], 'yticks':[]},\n                       gridspec_kw=dict(hspace=0.1, wspace=0.1))\nfor i in range(10):\n    ax[0, i].imshow(faces.data[i].reshape(62, 47), cmap='binary_r')\n    ax[1, i].imshow(projected[i].reshape(62, 47), cmap='binary_r')\n    \nax[0, 0].set_ylabel('full-dim\\ninput')\nax[1, 0].set_ylabel('150-dim\\nreconstruction');","43f82daf":"# **Visualizing first few faces**","a1095ddf":"# Use Labeled faces dataset (having dimensions nearly 3000) available in sklearn. \n- Apply PCA to reduce the dimensions of this dataset","5d85a138":"## The top row here shows the input images, while the bottom row shows the reconstruction of the images #from just 150 of the ~3,000 initial features.","03fde061":"# The cumulative variance"}}