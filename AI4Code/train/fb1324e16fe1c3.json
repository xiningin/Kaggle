{"cell_type":{"2cda7def":"code","2e1dcc3f":"code","1eb18c9c":"code","29267d3f":"code","baee10a5":"code","11f10695":"code","a43c53f5":"code","5757ce17":"code","2abd3da5":"code","f73c9344":"code","9ab45837":"code","a6660627":"code","8f8cc3e2":"code","76769380":"code","4e477180":"code","c236b313":"code","6f2044e6":"code","1e688107":"code","45b27efc":"code","0674d503":"code","668eedc2":"code","75b9e5ad":"code","cb7e32d8":"code","f75d3e4a":"code","083aaf3d":"code","041ad9f6":"code","a20eafef":"code","4a9063c4":"code","9efd80a1":"code","b87d28a2":"code","f4ef60ae":"code","f59bcedf":"code","866ee040":"code","55e0d2cd":"code","8d6971e3":"code","72527bc8":"code","27a4558d":"code","960ef27e":"code","2f5bb569":"code","196001d9":"code","a11ad07f":"code","a6c8b0c2":"code","4e888d37":"code","c9469825":"code","071e46a4":"code","8396fa0f":"code","6d2383a6":"code","5146fe90":"code","39307416":"code","d0958e7c":"code","c28c1336":"code","150dd8a2":"code","9674a5ae":"code","1b8e2741":"code","65073ec8":"code","603da605":"code","097212ce":"code","8d5f5568":"code","f6d87a17":"code","1169487f":"code","57831a06":"code","7a223431":"code","76896739":"code","551415e3":"code","ba27705f":"code","bfb98827":"code","614fcf1a":"code","5d8b7c34":"code","fc402e2f":"code","2cec1b9d":"code","fa18be43":"code","49c00193":"code","7f8d37cf":"code","587c7396":"code","497289ee":"code","e8480387":"code","652964ea":"code","923e87fa":"code","2744a1b1":"code","5daa8065":"code","98ed3cb7":"code","c5a08b5d":"code","14739ddd":"code","e05f34c2":"code","d3b7cc9a":"code","91b47caa":"code","b68b87bd":"code","efbf7c39":"code","91b01cf3":"code","97ac6a43":"code","754dd703":"code","d209b713":"code","72d64bb2":"code","fd374016":"code","24acc4fe":"code","57e67b6b":"code","c8242e66":"code","532add53":"code","0a2cd1f5":"code","a5e387a8":"code","1f52ea72":"code","01f6927c":"code","7c1b42ff":"code","d67fa938":"code","38e47a4c":"code","6fb2d6c1":"code","e159798f":"code","b4ed0b6e":"code","f564822d":"code","5123fd5c":"code","e6ab92d5":"code","2e30f82d":"code","ddfde18f":"code","49b6b754":"code","66ba7ad7":"code","e5609184":"code","fb4131a4":"code","c0eff05b":"code","42def69a":"code","cb9325b9":"code","d48b5b5c":"code","4b28b763":"code","7fee9e4c":"code","39505815":"code","11e4660e":"code","4fff7f7d":"code","e452cb39":"code","37935ed8":"code","9f047e9a":"code","950bf950":"code","1557eced":"code","766b7d0b":"code","428156dd":"code","064e848b":"code","80367c02":"code","dfc6f8f9":"code","289d019f":"code","6c4bc3c3":"code","50f256db":"code","f1156071":"code","d3e03e55":"code","76f9dcd8":"code","546bbbf1":"code","286d01c5":"code","a0794f9f":"code","0d358a31":"code","529a5efd":"code","fddfadca":"code","f451380d":"code","7f39078b":"code","c44d4914":"code","e9ddf9af":"code","4212281f":"code","f37ce035":"code","542ade86":"code","58847a43":"code","6d43071d":"code","9645a95f":"code","3fd2a190":"code","423a1e65":"code","e49fba18":"code","e9ded8f9":"code","cb2c267a":"code","668f593a":"code","9aa26ca2":"code","ea50cdb6":"code","0f68e9f5":"code","09f0de03":"code","e8b116a2":"code","3d668d36":"code","97132531":"code","e83b7c7e":"code","2f8dea79":"code","af777224":"code","5e935efb":"code","d1f28ba5":"code","61ba6a0a":"code","65f40495":"code","fafcc039":"code","c45585ad":"code","048a66f0":"code","8119aa3f":"code","4eb28ac0":"code","71fb6ecf":"code","fea279d5":"code","b3146d29":"code","2fb45ebe":"code","175c116f":"code","c43deff2":"code","3a0ad6b5":"code","f1291b54":"code","c5392cb6":"code","e629a745":"code","fcc681a8":"code","91d1d638":"code","f30ef17c":"code","9995ee88":"code","be282d59":"code","a16364ae":"code","a67c0f6b":"code","2326cdc8":"code","a4465be4":"code","8bd37185":"code","4f144ec3":"code","03d2e522":"code","9250dad3":"code","bfa39045":"code","1dc75cb9":"code","cc84498e":"code","9d54d76c":"code","655a5993":"code","09b4bf61":"code","8af1a1bc":"code","3bb4d74a":"code","a3580cf7":"code","a42b9c35":"code","088eb3de":"code","9519888a":"code","2cdce55e":"code","c4f9cf47":"code","01c181a0":"code","688ee405":"code","0edb1c99":"code","eab0833c":"code","6c443db4":"code","8daab733":"code","e24ec521":"code","8b4f4d16":"code","7960e7d3":"code","ccc5da6c":"code","b4fbf129":"code","21065ac9":"code","208bdac8":"code","74071ea6":"code","a785db43":"code","3ebfb3fb":"code","48cebae8":"code","08b81e77":"code","8aa462b1":"code","7f6ed30d":"code","467b8bb5":"code","2ca39ec1":"code","da80937f":"code","5b369eb7":"code","1eb48702":"code","41fe54b9":"code","0b21e233":"code","b691c549":"code","7783ef94":"code","266c34a9":"code","40b91af4":"code","52c09f1b":"code","17c9a348":"code","65092641":"code","cf172e33":"code","2c57d8c8":"code","3fb675ee":"code","bb06380d":"code","0d67c3fd":"code","0457f509":"code","5cfd01ea":"code","7ebddc42":"code","1a42dfdb":"code","276ca50b":"code","b6640979":"code","bdf61031":"code","f66d0a8b":"code","a234e9c7":"code","de5e4e64":"code","0187965e":"code","6544e575":"code","3e5c5da9":"code","c3412905":"code","6a3f9e7f":"code","001087a0":"code","16ef398e":"code","7c7a79bc":"code","7eaee37f":"code","f0ed732b":"code","76314168":"code","d3598013":"code","54b2e5e6":"code","c11745f2":"code","5a7b11de":"code","550d2e9a":"code","a314fbea":"code","dc9de65a":"code","6d1650d1":"code","1359c8af":"code","d6fb28c2":"code","73a67e42":"code","da234b7e":"code","715d997c":"code","0d3f2350":"code","101de0c1":"code","79615e95":"code","15b89a89":"code","cda6b940":"code","31f0876b":"code","a8b754cf":"code","da98e167":"code","42c5ae9d":"code","291c7f44":"code","77ef8a69":"code","67d6d04b":"code","1f490711":"code","ca8e9376":"code","17f19cea":"code","478734f2":"code","f80a79c6":"code","9b660b76":"code","968f17d4":"code","c1c7ba1a":"code","e27a9b71":"code","82d5c9e0":"code","227999e3":"code","5dcbfc5a":"code","9851728c":"code","032cbc75":"code","3756e155":"code","5cce3576":"code","46783cdf":"code","927f8b6a":"code","feca6d0c":"code","331c8d02":"code","59a93290":"code","669d2489":"code","0b3925a2":"code","ca5c7d4e":"code","98a740b4":"code","5b169632":"code","e78ed626":"code","733b183d":"code","b641ccbd":"code","ba1bd57c":"code","55cae2e8":"code","b45013c3":"code","71b8f85f":"code","ec30c1f0":"code","6c18086c":"code","1989d2ea":"code","272b89d5":"code","5771ceb0":"code","15114667":"code","697acfd1":"code","e55f98ac":"code","fe5c0e0a":"markdown","9d629e7d":"markdown","468c6214":"markdown","7c995b6a":"markdown","fa486024":"markdown","d40929b6":"markdown","1c0194a8":"markdown","780c726d":"markdown","246a1657":"markdown","4e279a9d":"markdown","a61d2980":"markdown","769d7429":"markdown","0a953bd3":"markdown","fe14157a":"markdown","e5992732":"markdown","e3c36db6":"markdown","29f94810":"markdown","06995556":"markdown","0b729b41":"markdown","f29cebd0":"markdown","44472c22":"markdown","7469c4a2":"markdown","349636c8":"markdown","44d1527d":"markdown","0a25f649":"markdown","ebea2318":"markdown","b778dc37":"markdown","fd21f441":"markdown","fb76f540":"markdown","8264359e":"markdown","56098207":"markdown","ab846e35":"markdown","da262d8f":"markdown","cfd259b1":"markdown","57af8157":"markdown","04c45535":"markdown","d08c69ee":"markdown","0f264e65":"markdown","2336d57e":"markdown","9c6e04ce":"markdown","3ca9ac2e":"markdown","1776786e":"markdown","9942bdb3":"markdown","80e51987":"markdown","d2a10492":"markdown","171c0043":"markdown","e11feea6":"markdown","77b54a8a":"markdown","fedae1b1":"markdown","4772331f":"markdown","809ea0b6":"markdown","5901bab9":"markdown","1850e58f":"markdown","8c484c65":"markdown","c12d6d71":"markdown","7bcc4784":"markdown","6cf6cf68":"markdown","aebefd20":"markdown","26f74f1d":"markdown","95de038f":"markdown","04a41a4e":"markdown","ad182a79":"markdown","932dcd99":"markdown","3c5165cf":"markdown","30c60dfd":"markdown","5a4c597f":"markdown","97ce87ed":"markdown","4ba60214":"markdown","702922da":"markdown","84148c62":"markdown","8e1e6b46":"markdown","db371561":"markdown","519b743b":"markdown","977ee86c":"markdown","fe0ed950":"markdown","4215032e":"markdown","b93b3fc7":"markdown","33be8e02":"markdown","348f75a3":"markdown","0e4d6839":"markdown","95c6d0bb":"markdown","3f385232":"markdown","3c0c7e8d":"markdown","9111dcd8":"markdown","b0ba0f2f":"markdown","8a8606ea":"markdown","c48b268e":"markdown","c25e00d4":"markdown","12812808":"markdown","abfb6bd0":"markdown","aff33521":"markdown","fd9498a5":"markdown","b5e8709e":"markdown","a0ad7b17":"markdown","d734f722":"markdown","27235051":"markdown","9f332c31":"markdown","a5119c66":"markdown","332c3c9a":"markdown","f9fcf615":"markdown","faf680c0":"markdown","7bbe7200":"markdown","68cd1e6e":"markdown","78e6cb7b":"markdown","4c1664f0":"markdown","1366de4e":"markdown","600576ef":"markdown","a3d3af19":"markdown","b0c6de78":"markdown","d5483deb":"markdown","aa185298":"markdown","cd789412":"markdown","d99f7c0d":"markdown","b09591f0":"markdown","f10013ce":"markdown","5f631de5":"markdown","f2c327a8":"markdown","ad55f43e":"markdown","f9891e04":"markdown","57038f1c":"markdown","3b29e623":"markdown","7756fd09":"markdown","148ec8e5":"markdown","28f3c658":"markdown","c2e105eb":"markdown","6f50bb65":"markdown","5ebb506f":"markdown","0b28dbbe":"markdown","e4e6b277":"markdown","7fcd20a6":"markdown","ee3e6383":"markdown","f1e36a4a":"markdown","562019bb":"markdown","999e067a":"markdown","c55836c1":"markdown","4f79efa4":"markdown","d125f9f4":"markdown","eb125f22":"markdown","a3c6b28f":"markdown","22fd42d9":"markdown","d86f39a2":"markdown","83e07a54":"markdown","7a8c7d1b":"markdown","f7cda1df":"markdown","f661f14d":"markdown","27c0ff24":"markdown","bfdfbeb6":"markdown","cfe40a33":"markdown","f34f137e":"markdown","72d3b3ba":"markdown","779fb506":"markdown","d7fa488b":"markdown","94a3c3e2":"markdown","b25b7e0a":"markdown","1ef6ca17":"markdown","7754cca1":"markdown","8c8a1869":"markdown","a9141bb4":"markdown","e85e0ab4":"markdown","32053491":"markdown","b6ade9fd":"markdown","276a0cdc":"markdown","a3563056":"markdown","4ecd04b3":"markdown","7d3f4e9a":"markdown","8c9e83a6":"markdown","ff1e70cd":"markdown","aabd151e":"markdown","558309da":"markdown","3e52ba51":"markdown","2f19ab48":"markdown","ab22d14d":"markdown","7a7a07f7":"markdown","b7bdc258":"markdown","d8152338":"markdown","05223d44":"markdown","c43bf5fb":"markdown","7b0c361b":"markdown","7e146f58":"markdown","4eb0e0de":"markdown","13fec7a9":"markdown","0d49c3fe":"markdown","3b71417c":"markdown","e5a73504":"markdown","4e6d86bc":"markdown","e0959920":"markdown","5b515147":"markdown","876abb35":"markdown","042c9598":"markdown","873f8947":"markdown","753818e6":"markdown","90dca174":"markdown","5c9f734d":"markdown","877c3dfd":"markdown","5f1e76d0":"markdown","8070ca96":"markdown","6ecfb222":"markdown","797939cb":"markdown","2303fb3b":"markdown","b5d51fc5":"markdown","68a3a1dd":"markdown","81f77c56":"markdown","b01af4e9":"markdown","d894ff61":"markdown","ca7e70f4":"markdown","73b47c00":"markdown","9a603819":"markdown","12569a1f":"markdown","5f0cd185":"markdown","3888fd13":"markdown","89d5aa2b":"markdown","afdfa9b4":"markdown","67f7db59":"markdown","0b167395":"markdown","32f0cf57":"markdown","e14765db":"markdown","ef15343d":"markdown"},"source":{"2cda7def":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport datetime\nimport sys\nimport re\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import KFold\n\nfrom catboost import CatBoostRegressor\nfrom catboost import CatBoostClassifier\nfrom lightgbm import LGBMClassifier\nimport xgboost as xgb\n\nfrom sklearn.ensemble import RandomForestRegressor, RandomForestClassifier, GradientBoostingRegressor, ExtraTreesRegressor, BaggingRegressor, ExtraTreesClassifier, GradientBoostingClassifier\nfrom sklearn.tree import ExtraTreeRegressor\nfrom sklearn.linear_model import LinearRegression\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans\n\nfrom sklearn.base import clone\n\nfrom tqdm import tqdm # \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u0438\u043d\u0434\u0438\u043a\u0430\u0442\u043e\u0440 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439 pandas\n%matplotlib inline","2e1dcc3f":"# \u0437\u0430\u0444\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u043c \u0432\u0435\u0440\u0441\u0438\u044e \u043f\u0430\u043a\u0435\u0442\u043e\u0432, \u0447\u0442\u043e\u0431\u044b \u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u044b \u0431\u044b\u043b\u0438 \u0432\u043e\u0441\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u043c\u044b:\n!pip freeze > requirements.txt","1eb18c9c":"DIR_TRAIN  = '..\/input\/train-data-autoru\/' # \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u043b \u043a \u043d\u043e\u0443\u0442\u0431\u0443\u043a\u0443 \u0441\u0432\u043e\u0439 \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\nDIR_TEST   = '..\/input\/sf-dst-car-price\/'","29267d3f":"!ls ..\/input\/","baee10a5":"test = pd.read_csv(DIR_TEST+'test.csv')\nsample_submission = pd.read_csv(DIR_TEST+'sample_submission.csv')","11f10695":"test.sample(5)","a43c53f5":"test.info()","5757ce17":"test.columns = ([\n    'body_type',\n    'brand',\n    'color',\n    'fuel_type',\n    'model_date_begin',\n    'name',\n    'number_of_doors',\n    'production_date',\n    'vehicle_configuration',\n    'vehicle_transmission',\n    'engine_displacement',\n    'engine_power',\n    'description',\n    'mileage',\n    'equipment',\n    'gear_type',\n    'steering_wheel',\n    'not_damage',\n    'owners',\n    'technical_passport',\n    'custom_clear',\n    'ownership',\n    'id',\n])","2abd3da5":"test.info()","f73c9344":"def col_info(col):\n    print('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432: {}'.format(col.isnull().sum()))\n    print('{},'.format(col.describe()))\n    print('\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435:\\n{},'.format(col.value_counts()))\n    col.hist()","9ab45837":"def outliers_iqr_short(ys):\n    # \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u043d\u043e\u043c\u0435\u0440\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0441 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435\u043c \u0431\u043e\u043b\u044c\u0448\u0435, \u0447\u0435\u043c iqr\n    quartile_1, quartile_3 = np.percentile(ys, [25, 75])\n    iqr = quartile_3 - quartile_1\n    lower_bound = quartile_1 - 1.5*iqr\n    upper_bound = quartile_3 + 1.5*iqr\n    return np.where((ys > upper_bound) | (ys < lower_bound))[0]\n\ndef outliers_iqr_long(ys): # \u041f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u043d\u0430 \u0432\u0445\u043e\u0434 \u043f\u0440\u0438\u0437\u043d\u0430\u043a-\u0441\u0442\u043e\u043b\u0431\u0435\u0446 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0430\n    # \u041d\u0430\u0445\u043e\u0434\u0438\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b\n    median = ys.median()\n    quartile_1, quartile_3 = np.percentile(ys, [25, 75])\n    iqr = quartile_3 - quartile_1\n    lower_bound = quartile_1 - (iqr * 1.5)\n    upper_bound = quartile_3 + (iqr * 1.5)\n    print('\u041c\u0435\u0434\u0438\u0430\u043d\u0430: {},'.format(median),'25-\u0439 \u043f\u0435\u0440\u0446\u0435\u043d\u0442\u0438\u043b\u044c: {},'.format(quartile_1), '75-\u0439 \u043f\u0435\u0440\u0446\u0435\u043d\u0442\u0438\u043b\u044c: {},'.format(quartile_3)\n      , \"IQR: {}, \".format(iqr),\"\u0413\u0440\u0430\u043d\u0438\u0446\u044b \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432: [{}, {}].\".format(lower_bound,upper_bound))\n    # \u041e\u0442\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u043b\u0435\u0436\u0435\u0449\u0438\u0435 \u0437\u0430 \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u043c\u0438 \u0433\u0440\u0430\u043d\u0438\u0446, \u0440\u0438\u0441\u0443\u0435\u043c \u0433\u0440\u0430\u0444\u0438\u043a\n#     ys.loc[ys.between(lower_bound, upper_bound)].hist(bins = int(upper_bound-lower_bound), range = (lower_bound, upper_bound), label = 'IQR')\n#     plt.legend();\n    # \u041d\u0430 \u0432\u044b\u0445\u043e\u0434 \u043e\u0442\u0434\u0430\u0435\u043c \u043e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n    \n    first_rec = ys.mask((ys > upper_bound) | (ys < lower_bound))\n    second_rec = np.where((ys > upper_bound) | (ys < lower_bound))[0]\n    \n    return first_rec","a6660627":"# \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0447\u0438\u0441\u0442\u043a\u0438 \u043e\u0442 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\ndef delete_outliers_iqr(df, column):\n    # \u0421\u0447\u0438\u0442\u0430\u0435\u043c \u043f\u0435\u0440\u0432\u044b\u0439 \u0438 \u0442\u0440\u0435\u0442\u0438\u0439 \u043a\u0432\u0430\u0440\u0442\u0438\u043b\u0438\n    first_quartile = df[column].describe()['25%']\n    third_quartile = df[column].describe()['75%']\n\n    # IQR (\u041c\u0435\u0436\u043a\u0432\u0430\u0440\u0442\u0438\u043b\u044c\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0430\u0445)\n    iqr = third_quartile - first_quartile\n\n    print(first_quartile, third_quartile, iqr)\n\n    # \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u0442\u043e, \u0447\u0442\u043e \u0432\u044b\u043f\u0430\u0434\u0430\u0435\u0442 \u0437\u0430 \u0433\u0440\u0430\u043d\u0438\u0446\u044b IQR\n    #     df_tmp = df.copy()\n    df = df[(df[column] > (first_quartile - 3 * iqr)) &\n                (df[column] < (third_quartile + 3 * iqr))]\n\n    df[column].hist()\n    df[column].describe()\n\n    df = df.loc[df[column].between(first_quartile - 1.5*iqr, third_quartile + 1.5*iqr)]\n    df.info()","8f8cc3e2":"col_info(test.model_date_begin)","76769380":"test['model_date_begin'] = pd.to_datetime(test['model_date_begin'], format='%Y').dt.year","4e477180":"col_info(test.model_date_begin)","c236b313":"test.model_date_begin.min()","6f2044e6":"test.model_date_begin.max()","1e688107":"test['model_age'] = datetime.datetime.now().year - test['model_date_begin']","45b27efc":"col_info(test.model_age)","0674d503":"test[test['model_age'] > 40]","668eedc2":"test['model_age'] = test['model_age'].apply(lambda x: 20 if x > 19 else x)","75b9e5ad":"test['model_age'] = test['model_age'].astype('str')","cb7e32d8":"col_info(test.production_date)","f75d3e4a":"test['production_date'] = pd.to_datetime(test['production_date'], format='%Y').dt.year","083aaf3d":"test['car_age'] = datetime.datetime.now().year - test['production_date']","041ad9f6":"col_info(test.car_age)","a20eafef":"test.sample(2)","4a9063c4":"test['mileage_per_year'] = test['mileage'] \/ test['car_age']","9efd80a1":"def cat_mileage_per_year(x):\n    if x < 10000: x = 1\n    elif 10000 <= x < 20000: x = 2\n    elif 20000 <= x < 30000: x = 3\n    elif 30000 <= x: x = 4\n    return x\n\n\ntest['mileage_per_year'] = test['mileage_per_year'].apply(lambda x: cat_mileage_per_year(x))\ntest['mileage_per_year'] = test['mileage_per_year'].astype('str')","b87d28a2":"col_info(test.mileage_per_year)","f4ef60ae":"def cat_age(x):\n    if x == 1 : x = 1 # \u0442\u0438\u043f\u0430, \u0435\u0441\u043b\u0438 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044e 1 \u0433\u043e\u0434, \u0442\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0435\u0433\u043e \u0432 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044e 1\n    elif 2 <= x < 4: x = 2 # \u0442\u0438\u043f\u0430, \u0435\u0441\u043b\u0438 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044e \u043e\u0442 2 \u0434\u043e 3 \u043b\u0435\u0442 \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e, \u0442\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0435\u0433\u043e \u0432 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044e 2 \u0438 \u0442\u0434.\n    elif 4 <= x < 6: x = 3\n    elif 6 <= x < 10: x = 4\n    elif 10 <= x < 16: x = 5\n    elif 16 <= x < 20: x = 6\n    elif 20 <= x: x = 7\n    return x \n\n\ntest['car_age'] = test['car_age'].apply(lambda x: cat_age(x))\n\ntest['car_age'] = test['car_age'].astype('str')","f59bcedf":"col_info(test.number_of_doors)","866ee040":"test['number_of_doors'] = test['number_of_doors'].astype(int)","55e0d2cd":"col_info(test.number_of_doors)","8d6971e3":"col_info(test.custom_clear)","72527bc8":"test['custom_clear'] = test['custom_clear'].apply(lambda x: \"1\" if x == \"\u0420\u0430\u0441\u0442\u0430\u043c\u043e\u0436\u0435\u043d\" else \"0\").astype(int)","27a4558d":"test['custom_clear'].value_counts()","960ef27e":"test.sample(2)","2f5bb569":"test = test.drop('custom_clear', axis=1)","196001d9":"test = test.drop('id', axis=1)","a11ad07f":"test.sample(2)","a6c8b0c2":"col_info(test.body_type)","4e888d37":"test[['body_type','number_of_doors']]","c9469825":"test.groupby('body_type').agg({'number_of_doors': 'value_counts'})","071e46a4":"# \u041d\u043e\u0432\u044b\u0439 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c \u0441 \u0440\u0430\u0437\u0431\u0438\u0442\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0438\u0437 \u043d\u0443\u0436\u043d\u043e \u043c\u043d\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 - \u0441\u0434\u0435\u043b\u0430\u044e \u0442\u0430\u043a, \u0447\u0442\u043e\u0431\u044b \u044d\u0442\u043e \u0431\u044b\u043b\u043e \u0440\u0435\u0448\u0435\u043d\u0438\u0435\u043c \u043d\u0435 \u0447\u0430\u0441\u0442\u043d\u044b\u043c, \u0430 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0441\u043b\u0443\u0447\u0430\u0435\u0432\nbody_type_tmp = test['body_type'].str.split(\" \", n = 1, expand = True) \n  \n# \u0412\u043e\u0437\u044c\u043c\u0443 \u0442\u0435\u043f\u0435\u0440\u044c \u043f\u0435\u0440\u0432\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u0438\u0437 \u043d\u043e\u0432\u043e\u0433\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0430, \u0442\u0430\u043c \u0431\u0443\u0434\u0435\u0442 \u043d\u0443\u0436\u043d\u043e\u0435 \u043c\u043d\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0442\u0438\u043f\u0430 \u043a\u0443\u0437\u043e\u0432\u0430, \u0438 \u0441\u043e\u0437\u0434\u0430\u043c \u043a\u043e\u043b\u043e\u043d\u043a\u0443 \u0432 \u043f\u043e\u043b\u043d\u043e\u043c \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0435\ntest['body_type']= body_type_tmp[0]","8396fa0f":"test.sample(2)","6d2383a6":"# \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0434\u043b\u044f \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438\ndic_body_type = {\n    '\u0432\u043d\u0435\u0434\u043e\u0440\u043e\u0436\u043d\u0438\u043a': 'allroad',\n    '\u043a\u0430\u0431\u0440\u0438\u043e\u043b\u0435\u0442': 'cabriolet',\n    '\u043a\u043e\u043c\u043f\u0430\u043a\u0442\u0432\u044d\u043d': 'compact_van',\n    '\u043a\u0443\u043f\u0435': 'coupe',\n    '\u043b\u0438\u0444\u0442\u0431\u0435\u043a': 'liftback',\n    '\u0440\u043e\u0434\u0441\u0442\u0435\u0440': 'roadster',\n    '\u0441\u0435\u0434\u0430\u043d': 'sedan',\n    '\u0443\u043d\u0438\u0432\u0435\u0440\u0441\u0430\u043b': 'station_wagon',\n    '\u0445\u044d\u0442\u0447\u0431\u0435\u043a': 'hatchback'\n}\n\ntest['body_type'] = test['body_type'].map(dic_body_type)","5146fe90":"test.groupby('body_type').agg({'number_of_doors': 'value_counts'})","39307416":"# test = pd.get_dummies(test, columns=[ 'body_type',], dummy_na=True)","d0958e7c":"test.sample(5)","c28c1336":"col_info(test.color)","150dd8a2":"dict_color = {\n    '\u0447\u0451\u0440\u043d\u044b\u0439': 'black',\n    '\u0431\u0435\u043b\u044b\u0439': 'white',\n    '\u0441\u0438\u043d\u0438\u0439': 'blue',\n    '\u043a\u043e\u0440\u0438\u0447\u043d\u0435\u0432\u044b\u0439': 'brown',\n    '\u043a\u0440\u0430\u0441\u043d\u044b\u0439': 'red',\n    '\u0441\u0435\u0440\u044b\u0439': 'grey',\n    '\u0431\u0435\u0436\u0435\u0432\u044b\u0439': 'beige',\n    '\u0441\u0435\u0440\u0435\u0431\u0440\u0438\u0441\u0442\u044b\u0439': 'silver',\n    '\u0437\u043e\u043b\u043e\u0442\u0438\u0441\u0442\u044b\u0439': 'gold',\n    '\u043e\u0440\u0430\u043d\u0436\u0435\u0432\u044b\u0439': 'orange',\n    '\u0433\u043e\u043b\u0443\u0431\u043e\u0439': 'mid_blue',\n    '\u043f\u0443\u0440\u043f\u0443\u0440\u043d\u044b\u0439': 'purple',\n    '\u0436\u0451\u043b\u0442\u044b\u0439': 'yellow',\n    '\u0437\u0435\u043b\u0451\u043d\u044b\u0439': 'green',\n    '\u0444\u0438\u043e\u043b\u0435\u0442\u043e\u0432\u044b\u0439': 'violet'\n}\n\ntest['color'] = test['color'].map(dict_color)","9674a5ae":"test.sample(5)","1b8e2741":"col_info(test.fuel_type)","65073ec8":"dict_fuel_type = {\n    '\u0434\u0438\u0437\u0435\u043b\u044c': 'diesel',\n    '\u0431\u0435\u043d\u0437\u0438\u043d': 'gasoline',\n    '\u0433\u0438\u0431\u0440\u0438\u0434': 'hybrid',\n    '\u044d\u043b\u0435\u043a\u0442\u0440\u043e': 'electro'\n}\n\ntest['fuel_type'] = test['fuel_type'].map(dict_fuel_type)","603da605":"col_info(test.vehicle_transmission)","097212ce":"dict_vehicle_transmission = {\n    '\u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f': 'AT',\n    '\u043c\u0435\u0445\u0430\u043d\u0438\u0447\u0435\u0441\u043a\u0430\u044f': 'MT',\n    '\u0440\u043e\u0431\u043e\u0442\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0430\u044f': 'AMT'\n}\n\ntest['vehicle_transmission'] = test['vehicle_transmission'].map(dict_vehicle_transmission)","8d5f5568":"test.info()","f6d87a17":"test = test.drop('brand', axis=1)","1169487f":"col_info(test.engine_displacement)","57831a06":"test['engine_displacement'] = test.engine_displacement.apply(lambda x: x.replace('LTR', '').replace(' ', ''))","7a223431":"test[test['engine_displacement'] == 'undefined']","76896739":"test[test['engine_displacement'] == 'undefined']['equipment'].values","551415e3":"test[test['engine_displacement'] == 'undefined']['vehicle_configuration'].values","ba27705f":"test.loc[test['engine_displacement'] == 'undefined', 'engine_displacement'] = 0","bfb98827":"test['engine_displacement'] = test['engine_displacement'].astype(float)","614fcf1a":"col_info(test.vehicle_configuration)","5d8b7c34":"# test = test.drop('vehicle_configuration', axis=1)","fc402e2f":"col_info(test.engine_power)","2cec1b9d":"test.groupby('name').agg({'engine_power': 'value_counts'})","fa18be43":"# \u041d\u043e\u0432\u044b\u0439 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c \u0441 \u0440\u0430\u0437\u0431\u0438\u0442\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0438\u0437 \u043d\u0443\u0436\u043d\u043e \u043c\u043d\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 - \u0441\u0434\u0435\u043b\u0430\u044e \u0442\u0430\u043a, \u0447\u0442\u043e\u0431\u044b \u044d\u0442\u043e \u0431\u044b\u043b\u043e \u0440\u0435\u0448\u0435\u043d\u0438\u0435\u043c \u043d\u0435 \u0447\u0430\u0441\u0442\u043d\u044b\u043c, \u0430 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0441\u043b\u0443\u0447\u0430\u0435\u0432\nengine_power_tmp = test['engine_power'].str.split(\" \", expand = True) ","49c00193":"engine_power_tmp[1].value_counts()","7f8d37cf":"# \u0412\u043e\u0437\u044c\u043c\u0443 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u043f\u0435\u0440\u0432\u043e\u0439 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0438 \u043f\u043e\u0434\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u0438\u0440\u0443\u044e \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0441 \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u044c\u044e \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f\ntest['engine_power']= engine_power_tmp[0]\n\n# \u043d\u0443 \u0438 \u043f\u0440\u0438\u0432\u0435\u0434\u0443 \u043a\u043e\u043b\u043e\u043d\u043a\u0443 \u0441\u0440\u0430\u0437\u0443 \u043a \u0447\u0438\u0441\u043b\u043e\u0432\u043e\u043c\u0443 \u0442\u0438\u043f\u0443\ntest['engine_power'] = test['engine_power'].astype(int)","587c7396":"cars_name_for_search_model = test[['name', 'model_date_begin', 'body_type', 'engine_displacement', 'fuel_type', 'vehicle_transmission', 'engine_power']]\ncars_name_for_search_model.to_excel(\"cars_name_for_search_model.xlsx\",\n             sheet_name='cars_name_for_search_model')  \n\ncars_name_for_search_model","497289ee":"cars_name_for_search_model2 = name_tmp\ncars_name_for_search_model2.to_excel(\"cars_name_for_search_model2.xlsx\",\n             sheet_name='cars_name_for_search_model')  \n\ncars_name_for_search_model2","e8480387":"# \u041d\u043e\u0432\u044b\u0439 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c \u0441 \u0440\u0430\u0437\u0431\u0438\u0442\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0438\u0437 \u043d\u0443\u0436\u043d\u043e\u0439 \u043c\u043d\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 - \u0441\u0434\u0435\u043b\u0430\u044e \u0442\u0430\u043a, \u0447\u0442\u043e\u0431\u044b \u044d\u0442\u043e \u0431\u044b\u043b\u043e \u0440\u0435\u0448\u0435\u043d\u0438\u0435\u043c \u043d\u0435 \u0447\u0430\u0441\u0442\u043d\u044b\u043c, \u0430 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0441\u043b\u0443\u0447\u0430\u0435\u0432\nname_tmp = test['name'].str.split(\" \", n = 2, expand = True) ","652964ea":"# name_tmp.sample(10)","923e87fa":"# name_tmp[1].replace(to_replace='[0-9].', value='', inplace=True, regex=True)","2744a1b1":"name_tmp.sample(10)","5daa8065":"name_tmp","98ed3cb7":"# \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0441\u043a\u043b\u0435\u0438\u0442\u044c \u043f\u0435\u0440\u0432\u044b\u0435 \u0434\u0432\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f, \u043d\u043e \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u0431\u0443\u0434\u0435\u043c \u0441\u043e\u0431\u043b\u044e\u0434\u0430\u0442\u044c \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f:\n# \u0432\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u0434\u043e\u043b\u0436\u043d\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c\u0441\u044f xDrive, Competition, sDrive, Package, \u0442\u043e\u0433\u0434\u0430 \u044d\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043e \u043a \u043f\u0435\u0440\u0432\u043e\u0439 \u043a\u043e\u043b\u043e\u043d\u043a\u0435\n# \u0432 \u043f\u0435\u0440\u0432\u043e\u0439 \u043a\u043e\u043b\u043e\u043d\u043a\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0432\u0441\u0435, \u0447\u0442\u043e \u0443\u0433\u043e\u0434\u043d\u043e\n# \u043a\u043e\u043d\u044a\u044e\u043d\u043a\u0446\u0438\u044f \u0434\u0432\u0443\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\ndef make_conj(data, feature1, feature2):\n    data['tmp_1'] = np.where(~data[feature2].str.contains('xDrive|Competition|sDrive|Package'),\n                                 '', data[feature2])\n    \n    data['tmp_0'] = data[feature1]\n    \n    data['tmp'] = data['tmp_0'] + ' ' + data['tmp_1']\n                    \n    return (data)\n\n# \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043c \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u043a\u0443 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f\nmake_conj(name_tmp, 0, 1)","c5a08b5d":"name_tmp.sample(10)","14739ddd":"name_tmp.drop([0, 1, 2], axis=1, inplace=True,)","e05f34c2":"test['name'] = name_tmp['tmp']","d3b7cc9a":"test['name'] = test['name'].apply(lambda x: x.replace('xDrive20d', '20d xDrive'))\ntest['name'] = test['name'].apply(lambda x: x.replace('sDrive18i', '18i sDrive'))\ntest['name'] = test['name'].apply(lambda x: x.replace('sDrive20i', '20i sDrive'))\ntest['name'] = test['name'].apply(lambda x: x.replace('xDrive18d', '18d xDrive'))\ntest['name'] = test['name'].apply(lambda x: x.replace('xDrive20', '20 xDrive'))\ntest['name'] = test['name'].apply(lambda x: x.replace('20 xDrivei', '20i xDrive'))","91b47caa":"test['name'] = test['name'].str.strip()","b68b87bd":"col_info(test.name)","efbf7c39":"print(test['description'][2])\nprint(len(test['description'][2]))","91b01cf3":"test['description_score'] = test['description'].apply(lambda x: len(x) \/ 100).astype(float)","97ac6a43":"test = test.drop('description', axis=1)","754dd703":"test = test.drop('description_score', axis=1)","d209b713":"test.sample(10)","72d64bb2":"col_info(test.mileage)","fd374016":"test[test['mileage'] < 10000]","24acc4fe":"test['mileage'] = test['mileage'].astype(int)","57e67b6b":"test['exp_year'] = test.mileage.apply(lambda x: x\/\/17000 if x<=400000 else 400000\/\/17000+1)","c8242e66":"def cat_mileage(x):\n    if x < 25000: x = 1\n    elif 25000 <= x < 50000: x = 2\n    elif 50000 <= x < 75000: x = 3\n    elif 75000 <= x < 100000: x = 4\n    elif 100000 <= x < 125000: x = 5\n    elif 125000 <= x < 150000: x = 6\n    elif 150000 <= x < 175000: x = 7\n    elif 175000 <= x < 200000: x = 8\n    elif 200000 <= x < 225000: x = 9\n    elif 225000 <= x < 250000: x = 10\n    elif 250000 <= x < 275000: x = 11\n    elif 275000 <= x < 300000: x = 12\n    elif 300000 <= x < 325000: x = 13\n    elif 325000 <= x < 350000: x = 14\n    elif 350000 <= x < 375000: x = 15\n    elif 375000 <= x < 400000: x = 16\n    elif 400000 <= x: x = 17\n    return x    \n\n\ntest['mileage'] = test['mileage'].apply(lambda x: cat_mileage(x))\n\ntest['mileage'] = test['mileage'].astype('str')","532add53":"col_info(test.equipment)","0a2cd1f5":"def get_test_features(equipment):\n    # \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043f\u0443\u0441\u0442\u043e\u0439 \u0441\u043f\u0438\u0441\u043e\u043a, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0443\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c\u0441\u044f \u0432\u0441\u0435 \u0444\u0438\u0447\u0438\n    all_features = []\n    for data in equipment:\n        # \u041d\u0430\u0445\u043e\u0434\u0438\u043c \u0432\u0441\u0435 \u0441\u043b\u043e\u0432\u0430 \u043c\u0435\u0436\u0434\u0443 \u043a\u0430\u0432\u044b\u0447\u043a\u0430\u043c\u0438\n        features=re.findall(r'\\\"(.+?)\\\"',data)\n        # \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0432 \u043e\u0431\u0449\u0438\u0439 \u0441\u043f\u0438\u0441\u043e\u043a\n        all_features.extend(features)\n    # \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u044b\n    all_features = list(dict.fromkeys(all_features))\n    return all_features","a5e387a8":"test_features = get_test_features(test.equipment)","1f52ea72":"# \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u043b\u0438\u0448\u043d\u0438\u0435 \u0437\u0430\u043f\u0438\u0441\u0438\nfor bad_feature in ['name','\u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c','values','\u041a\u043e\u043c\u0444\u043e\u0440\u0442','\u041c\u0443\u043b\u044c\u0442\u0438\u043c\u0435\u0434\u0438\u0430','\u041e\u0431\u0437\u043e\u0440','\u0421\u0430\u043b\u043e\u043d','\u0417\u0430\u0449\u0438\u0442\u0430 \u043e\u0442 \u0443\u0433\u043e\u043d\u0430','\u042d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u044d\u043a\u0441\u0442\u0435\u0440\u044c\u0435\u0440\u0430']:\n    test_features.remove(bad_feature)    \nprint('\u0412\u0441\u0435\u0433\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0444\u0438\u0447:', len(test_features))\nprint(test_features)","01f6927c":"def get_features_test(equipment): \n    features=re.findall(r'\\\"(.+?)\\\"',equipment)  \n    return features","7c1b42ff":"test['equipment'] = test['equipment'].apply(lambda x: get_features_test(x))","d67fa938":"test.sample(5)","38e47a4c":"col_info(test.gear_type)","6fb2d6c1":"dict_gear_type = {\n    '\u0437\u0430\u0434\u043d\u0438\u0439': 'rear',\n    '\u043f\u043e\u043b\u043d\u044b\u0439': '4w',\n    '\u043f\u0435\u0440\u0435\u0434\u043d\u0438\u0439': 'front'\n}\n\ntest['gear_type'] = test['gear_type'].map(dict_gear_type)","e159798f":"col_info(test.steering_wheel)","b4ed0b6e":"dict_steering_wheel = {\n    '\u041b\u0435\u0432\u044b\u0439': 'left',\n    '\u041f\u0440\u0430\u0432\u044b\u0439': 'right'\n}\n\ntest['steering_wheel'] = test['steering_wheel'].map(dict_steering_wheel)","f564822d":"col_info(test.not_damage)","5123fd5c":"dict_not_damage = {\n    '\u041d\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0435\u043c\u043e\u043d\u0442\u0430': '1'\n}\n\ntest['not_damage'] = test['not_damage'].map(dict_not_damage)\n\n# \u043d\u0443 \u0438 \u043f\u0440\u0438\u0432\u0435\u0434\u0443 \u043a\u043e\u043b\u043e\u043d\u043a\u0443 \u0441\u0440\u0430\u0437\u0443 \u043a \u0447\u0438\u0441\u043b\u043e\u0432\u043e\u043c\u0443 \u0442\u0438\u043f\u0443\ntest['not_damage'] = test['not_damage'].astype(int)","e6ab92d5":"col_info(test.owners)","2e30f82d":"# \u0447\u0435\u0440\u0435\u0437 \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u043f\u043e\u0447\u0435\u043c\u0443-\u0442\u043e \u043d\u0435 \u0437\u0430\u0445\u043e\u0442\u0435\u043b\u043e \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u043c\u0435\u043d\u044f\u0442\u044c. \u043f\u0440\u0438\u0448\u043b\u043e\u0447\u044c \u0447\u0435\u0440\u0435\u0437 \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435.\ntest['owners'] = np.where(test['owners'].str.contains('1'),\n                                 '1', test['owners'])\ntest['owners'] = np.where(test['owners'].str.contains('2'),\n                                 '2', test['owners'])\ntest['owners'] = np.where(test['owners'].str.contains('3'),\n                                 '3', test['owners'])\n\n# \u043d\u0443 \u0438 \u043f\u0440\u0438\u0432\u0435\u0434\u0443 \u043a\u043e\u043b\u043e\u043d\u043a\u0443 \u0441\u0440\u0430\u0437\u0443 \u043a \u0447\u0438\u0441\u043b\u043e\u0432\u043e\u043c\u0443 \u0442\u0438\u043f\u0443\ntest['owners'] = test['owners'].astype(int)","ddfde18f":"test['owners']","49b6b754":"test.info()","66ba7ad7":"col_info(test.technical_passport)","e5609184":"dict_technical_passport = {\n    '\u041e\u0440\u0438\u0433\u0438\u043d\u0430\u043b': 'original',\n    '\u0414\u0443\u0431\u043b\u0438\u043a\u0430\u0442': 'duplicate'\n}\n\ntest['technical_passport'] = test['technical_passport'].map(dict_technical_passport)","fb4131a4":"# \u041d\u043e\u0432\u044b\u0439 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c \u0441 \u0440\u0430\u0437\u0431\u0438\u0442\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0438\u0437 \u043d\u0443\u0436\u043d\u043e \u043c\u043d\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 - \u0441\u0434\u0435\u043b\u0430\u044e \u0442\u0430\u043a, \u0447\u0442\u043e\u0431\u044b \u044d\u0442\u043e \u0431\u044b\u043b\u043e \u0440\u0435\u0448\u0435\u043d\u0438\u0435\u043c \u043d\u0435 \u0447\u0430\u0441\u0442\u043d\u044b\u043c, \u0430 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0441\u043b\u0443\u0447\u0430\u0435\u0432\nownership_tmp = test['ownership'].str.split(\" \", n = 4, expand = True) \n  \n# \u0412\u043e\u0437\u044c\u043c\u0443 \u0442\u0435\u043f\u0435\u0440\u044c \u043f\u0435\u0440\u0432\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u0438\u0437 \u043d\u043e\u0432\u043e\u0433\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0430, \u0442\u0430\u043c \u0431\u0443\u0434\u0435\u0442 \u043d\u0443\u0436\u043d\u043e\u0435 \u043c\u043d\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0442\u0438\u043f\u0430 \u043a\u0443\u0437\u043e\u0432\u0430, \u0438 \u0441\u043e\u0437\u0434\u0430\u043c \u043a\u043e\u043b\u043e\u043d\u043a\u0443 \u0432 \u043f\u043e\u043b\u043d\u043e\u043c \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0435\n# test['body_type']= body_type_tmp[0]","c0eff05b":"ownership_tmp","42def69a":"ownership_tmp","cb9325b9":"ownership_tmp = ownership_tmp.fillna(0)                             ","d48b5b5c":"ownership_tmp.drop([1, 2, 4], axis=1, inplace=True,)","4b28b763":"ownership_tmp[0] = ownership_tmp[0].apply(lambda x: int(x) * 12).astype(int)","7fee9e4c":"# \u043d\u0443 \u0438 \u043f\u0440\u0438\u0432\u0435\u0434\u0443 \u043a\u043e\u043b\u043e\u043d\u043a\u0443 3 (\u043c\u0435\u0441\u044f\u0446) \u0441\u0440\u0430\u0437\u0443 \u043a \u0447\u0438\u0441\u043b\u043e\u0432\u043e\u043c\u0443 \u0442\u0438\u043f\u0443\nownership_tmp[3] = ownership_tmp[3].astype(int)","39505815":"test['ownership'] = ownership_tmp[0] + ownership_tmp[3]","11e4660e":"test = test.drop('ownership', axis=1)","4fff7f7d":"test = test.drop('vehicle_configuration', axis=1)","e452cb39":"test.info()","37935ed8":"def test_series(df):\n    conditions = [\n        (df['name'] == '116') # 1ER\n        | (df['name'] == '116i xDrive')\n        | (df['name'] == '116i')\n        | (df['name'] == '118d xDrive')\n        | (df['name'] == '118d')\n        | (df['name'] == '118i xDrive')\n        | (df['name'] == '118i')\n        | (df['name'] == '120d xDrive')\n        | (df['name'] == '120d')\n        | (df['name'] == '120i xDrive')\n        | (df['name'] == '120i')\n        | (df['name'] == '125i xDrive')\n        | (df['name'] == '125i')\n        | (df['name'] == '130i xDrive')\n        | (df['name'] == '130i')\n        | (df['name'] == '135i xDrive')\n        | (df['name'] == '135i')\n        | (df['name'] == 'M135i xDrive')\n        | (df['name'] == 'M135i')\n        | (df['name'] == 'Active'),\n        (df['name'] == '1.5') # 2ER\n        | (df['name'] == '218i')\n        | (df['name'] == '218i xDrive')\n        | (df['name'] == '220i')\n        | (df['name'] == '220i xDrive')\n        | (df['name'] == 'M235i')\n        | (df['name'] == 'M235i xDrive'),\n        (df['name'] == '316')  # 3ER\n        | (df['name'] == '316i')\n        | (df['name'] == '316i xDrive')\n        | (df['name'] == '318d')\n        | (df['name'] == '318d xDrive')\n        | (df['name'] == '318i')\n        | (df['name'] == '318i xDrive')\n        | (df['name'] == '320d')\n        | (df['name'] == '320d xDrive')\n        | (df['name'] == '320i')\n        | (df['name'] == '320i xDrive')\n        | (df['name'] == '323i')\n        | (df['name'] == '323i xDrive')\n        | (df['name'] == '325i')\n        | (df['name'] == '325i xDrive')\n        | (df['name'] == '325xi')\n        | (df['name'] == '325xi xDrive')\n        | (df['name'] == '328i')\n        | (df['name'] == '328i xDrive')\n        | (df['name'] == '330d')\n        | (df['name'] == '330d xDrive')\n        | (df['name'] == '330i')\n        | (df['name'] == '330i xDrive')\n        | (df['name'] == '330xd')\n        | (df['name'] == '330xd xDrive')\n        | (df['name'] == '330xi')\n        | (df['name'] == '330xi xDrive')\n        | (df['name'] == '335i')\n        | (df['name'] == '335i xDrive')\n        | (df['name'] == '335xi')\n        | (df['name'] == '335xi xDrive')\n        | (df['name'] == '340i')\n        | (df['name'] == '340i xDrive')\n        | (df['name'] == 'M340i')\n        | (df['name'] == 'M340i xDrive'),\n        (df['name'] == '316')  # 4\n        | (df['name'] == '420d')\n        | (df['name'] == '420d xDrive')\n        | (df['name'] == '420i')\n        | (df['name'] == '420i xDrive')\n        | (df['name'] == '428i')\n        | (df['name'] == '428i xDrive')\n        | (df['name'] == '430i')\n        | (df['name'] == '430i xDrive')\n        | (df['name'] == '440i'),\n        (df['name'] == '316')  # 5ER\n        | (df['name'] == '518')\n        | (df['name'] == '520Li')\n        | (df['name'] == '520Li xDrive')\n        | (df['name'] == '520d')\n        | (df['name'] == '520d xDrive')\n        | (df['name'] == '520i')\n        | (df['name'] == '520i xDrive')\n        | (df['name'] == '523i')\n        | (df['name'] == '523i xDrive')\n        | (df['name'] == '525d')\n        | (df['name'] == '525d xDrive')\n        | (df['name'] == '525i')\n        | (df['name'] == '525i xDrive')\n        | (df['name'] == '525xd')\n        | (df['name'] == '525xd xDrive')\n        | (df['name'] == '525xi')\n        | (df['name'] == '525xi xDrive')\n        | (df['name'] == '528Li')\n        | (df['name'] == '528Li xDrive')\n        | (df['name'] == '528i')\n        | (df['name'] == '528i xDrive')\n        | (df['name'] == '530Li')\n        | (df['name'] == '530Li xDrive')\n        | (df['name'] == '530d')\n        | (df['name'] == '530d xDrive')\n        | (df['name'] == '530i')\n        | (df['name'] == '530i xDrive')\n        | (df['name'] == '530xd')\n        | (df['name'] == '530xd xDrive')\n        | (df['name'] == '530xi')\n        | (df['name'] == '530xi xDrive')\n        | (df['name'] == '535d')\n        | (df['name'] == '535d xDrive')\n        | (df['name'] == '535i')\n        | (df['name'] == '535i xDrive')\n        | (df['name'] == '540i')\n        | (df['name'] == '540i xDrive')\n        | (df['name'] == '545i')\n        | (df['name'] == '545i xDrive')\n        | (df['name'] == '550i')\n        | (df['name'] == '550i xDrive')\n        | (df['name'] == 'M550d')\n        | (df['name'] == 'M550i')\n        | (df['name'] == 'M550i xDrive')\n        | (df['name'] == 'M550d xDrive'),\n        (df['name'] == '620d')  # 6ER\n        | (df['name'] == '620d xDrive')\n        | (df['name'] == '630d')\n        | (df['name'] == '630d xDrive')\n        | (df['name'] == '630i')\n        | (df['name'] == '630i xDrive')\n        | (df['name'] == '640d')\n        | (df['name'] == '640d xDrive')\n        | (df['name'] == '640i')\n        | (df['name'] == '640i xDrive')\n        | (df['name'] == '645i')\n        | (df['name'] == '645i xDrive')\n        | (df['name'] == '650i')\n        | (df['name'] == '650i xDrive'),\n        (df['name'] == '725Ld')  # 7ER\n        | (df['name'] == '725Ld xDrive')\n        | (df['name'] == '728i')\n        | (df['name'] == '728i xDrive')\n        | (df['name'] == '730Ld')\n        | (df['name'] == '730Ld xDrive')\n        | (df['name'] == '730Li')\n        | (df['name'] == '730Li xDrive')\n        | (df['name'] == '730d')\n        | (df['name'] == '730d xDrive')\n        | (df['name'] == '730i')\n        | (df['name'] == '730i xDrive')\n        | (df['name'] == '735Li')\n        | (df['name'] == '735Li xDrive')\n        | (df['name'] == '735i')\n        | (df['name'] == '735i xDrive')\n        | (df['name'] == '740Ld')\n        | (df['name'] == '740Ld xDrive')\n        | (df['name'] == '740Li')\n        | (df['name'] == '740Li xDrive')\n        | (df['name'] == '740d')\n        | (df['name'] == '740d xDrive')\n        | (df['name'] == '740i')\n        | (df['name'] == '740i xDrive')\n        | (df['name'] == '745Li')\n        | (df['name'] == '745Li xDrive')\n        | (df['name'] == '745i')\n        | (df['name'] == '745i xDrive')\n        | (df['name'] == '750Ld')\n        | (df['name'] == '750Ld xDrive')\n        | (df['name'] == '750Li')\n        | (df['name'] == '750Li xDrive')\n        | (df['name'] == '750d')\n        | (df['name'] == '750d xDrive')\n        | (df['name'] == '750i')\n        | (df['name'] == '750i xDrive')\n        | (df['name'] == '760Li')\n        | (df['name'] == '760Li xDrive')\n        | (df['name'] == '760i')\n        | (df['name'] == 'M760Li')\n        | (df['name'] == 'M760Li xDrive'),\n        (df['name'] == '840d')  # 8ER\n        | (df['name'] == '840d xDrive')\n        | (df['name'] == 'M850i')\n        | (df['name'] == 'M850i xDrive'),\n        (df['name'] == '1.5hyb')  # I8\n        | (df['name'] == 'Electro'),\n        (df['name'] == 'Competition'),  # M5\n        (df['name'] == 'Competition Package'),  # M4\n        ((df['name'] == '18d') & (df['model_age'] == '1'))  # X1\n        | ((df['name'] == '18d') & (df['model_age'] == '5'))\n        | ((df['name'] == '18d') & (df['model_age'] == '11'))\n        | ((df['name'] == '18i') & (df['model_age'] == '5'))\n        | ((df['name'] == '18i') & (df['model_age'] == '8'))\n        | ((df['name'] == '18i') & (df['model_age'] == '11'))\n        | ((df['name'] == '20d') & (df['model_age'] == '2'))\n        | ((df['name'] == '20d') & (df['model_age'] == '5'))\n        | ((df['name'] == '20d') & (df['model_age'] == '8'))\n        | ((df['name'] == '20d') & (df['model_age'] == '11'))\n        | ((df['name'] == '20i') & (df['model_age'] == '1'))\n        | ((df['name'] == '20i') & (df['model_age'] == '5'))\n        | ((df['name'] == '20i') & (df['model_age'] == '8'))\n        | ((df['name'] == '20i') & (df['model_age'] == '11') & (df['number_of_doors'] == '5'))\n        | (df['name'] == '23d')\n        | ((df['name'] == '25i') & (df['model_age'] == '11'))\n        | ((df['name'] == '28i') & (df['model_age'] == '8'))\n        | ((df['name'] == '28i') & (df['model_age'] == '11'))\n        | (df['name'] == '20d xDrive'),\n        ((df['name'] == '18d') & (df['model_age'] == '3'))  # X2\n        | ((df['name'] == '18i') & (df['model_age'] == '3'))\n        | (df['name'] == '18i sDrive')\n        | (df['name'] == '18d xDrive')\n        | (df['name'] == '20i xDrive')\n        | (df['name'] == '20i sDrive'),\n        ((df['name'] == '20d') & (df['model_age'] == '3'))  # X3\n        | ((df['name'] == '20d') & (df['model_age'] == '10'))\n        | ((df['name'] == '20d') & (df['model_age'] == '14'))\n        | ((df['name'] == '20i') & (df['model_age'] == '3'))\n        | ((df['name'] == '20i') & (df['model_age'] == '6'))\n        | (df['name'] == '20i xDrive')\n        | ((df['name'] == '20i') & (df['model_age'] == '10'))\n        | ((df['name'] == '20i') & (df['model_age'] == '14'))\n        | ((df['name'] == '25i') & (df['model_age'] == '14'))\n        | ((df['name'] == '25i') & (df['model_age'] == '17'))\n        | ((df['name'] == '28i') & (df['model_age'] == '10'))\n        | ((df['name'] == '30d') & (df['model_age'] == '3'))\n        | (df['name'] == '30d xDrive')\n        | ((df['name'] == '30d') & (df['model_age'] == '17'))\n        | ((df['name'] == '30i') & (df['model_age'] == '3'))\n        | ((df['name'] == '30i') & (df['model_age'] == '17'))\n        | (df['name'] == '30i xDrive')\n        | ((df['name'] == 'M40d') & (df['model_age'] == '3'))\n        | ((df['name'] == '35d') & (df['model_age'] == '10'))\n        | ((df['name'] == '35d') & (df['model_age'] == '14'))\n        | ((df['name'] == '35i') & (df['model_age'] == '7'))\n        | (df['name'] == '35i xDrive')\n        | (df['name'] == '35d xDrive')\n        | ((df['name'] == '35i') & (df['model_age'] == '10')),\n        ((df['name'] == '20d') & (df['model_age'] == '6'))  # X4\n        | ((df['name'] == '20i') & (df['model_age'] == '2'))\n        | ((df['name'] == '28i') & (df['model_age'] == '6'))\n        | (df['name'] == '28i xDrive')\n        | ((df['name'] == '30i') & (df['model_age'] == '2'))\n        | ((df['name'] == 'M40d') & (df['model_age'] == '2'))\n        | (df['name'] == 'M40i'),\n        (df['name'] == '25d')  # X5\n        | (df['name'] == '3.0')\n        | (df['name'] == '3.0d')\n        | (df['name'] == '3.0i')\n        | (df['name'] == '3.0sd')\n        | (df['name'] == '3.0si')\n        | ((df['name'] == '30d') & (df['model_age'] == '7'))\n        | ((df['name'] == '30d') & (df['model_age'] == '10'))\n        | ((df['name'] == '30d') & (df['model_age'] == '14'))\n        | ((df['name'] == '30i') & (df['model_age'] == '14'))        \n        | (df['name'] == '4.0')\n        | (df['name'] == '4.4')\n        | (df['name'] == '4.4i')\n        | (df['name'] == '4.6is')\n        | (df['name'] == '4.8i')\n        | (df['name'] == '4.8is')\n        | ((df['name'] == '40d') & (df['model_age'] == '7'))\n        | ((df['name'] == '40d') & (df['model_age'] == '10'))\n        | (df['name'] == '40e')\n        | (df['name'] == '48i')\n        | (df['name'] == '5.0')\n        | ((df['name'] == '50i') & (df['model_age'] == '7'))\n        | ((df['name'] == '50i') & (df['model_age'] == '10'))\n        | ((df['name'] == 'M50d') & (df['model_age'] == '7'))\n        | ((df['name'] == 'M50d') & (df['model_age'] == '10')),\n        ((df['name'] == '30d') & (df['model_age'] == '1'))  # X6\n        | ((df['name'] == '30d') & (df['model_age'] == '6'))\n        | ((df['name'] == '30d') & (df['model_age'] == '8'))\n        | ((df['name'] == '30d') & (df['model_age'] == '13'))\n        | ((df['name'] == '35d') & (df['model_age'] == '13'))\n        | (df['name'] == '35d')\n        | ((df['name'] == '35i') & (df['model_age'] == '6'))\n        | ((df['name'] == '35i') & (df['model_age'] == '8'))\n        | ((df['name'] == '35i') & (df['model_age'] == '13'))\n        | ((df['name'] == '40d') & (df['model_age'] == '6'))\n        | ((df['name'] == '40d') & (df['model_age'] == '8'))\n        | ((df['name'] == '40d') & (df['model_age'] == '13'))\n        | ((df['name'] == '40i') & (df['model_age'] == '1'))\n        | ((df['name'] == '50i') & (df['model_age'] == '6'))\n        | ((df['name'] == '50i') & (df['model_age'] == '8'))\n        | ((df['name'] == '50i') & (df['model_age'] == '13'))\n        | (df['name'] == 'ActiveHybrid')\n        | ((df['name'] == 'M50d') & (df['model_age'] == '1'))\n        | ((df['name'] == 'M50d') & (df['model_age'] == '6'))\n        | ((df['name'] == 'M50d') & (df['model_age'] == '8'))\n        | (df['name'] == 'M50i'),\n        ((df['name'] == '30d') & (df['model_age'] == '2'))  # X7\n        | ((df['name'] == '40i') & (df['model_age'] == '2'))\n        | ((df['name'] == 'M50d') & (df['model_age'] == '2')),\n        (df['name'] == '2.0')  # Z4\n        | (df['name'] == '2.2')\n        | ((df['name'] == '20i') & (df['model_age'] == '7'))\n        | (df['name'] == '20i')\n        | ((df['name'] == '20i') & (df['model_age'] == '11') & (df['number_of_doors'] == '2'))\n        | (df['name'] == '23i')\n        | ((df['name'] == '28i') & (df['model_age'] == '7'))\n        | ((df['name'] == '30i') & (df['model_age'] == '11'))\n        | ((df['name'] == '35i') & (df['model_age'] == '11'))\n        | (df['name'] == '35is')\n        | (df['name'] == 'CS'),\n    ]\n    choices = ['1ER','2ER','3ER','4','5ER','6ER','7ER','8ER','I8','M5','M4','X1','X2','X3','X4','X5','X6','X7','Z4']\n    df['series'] = np.select(conditions, choices, default='default')\n    return df['series']","9f047e9a":"test['series'] = test_series(test)","950bf950":"test.series.value_counts()","1557eced":"test[test['series'] == 'default']","766b7d0b":"# \u0421\u0434\u0435\u043b\u0430\u044e \u044d\u0442\u043e \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u043c\ntest['covid'] = '0'","428156dd":"train = pd.read_csv(DIR_TRAIN+'train_data_auto_ru.csv') # \u043c\u043e\u0439 \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0439 \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0438","064e848b":"train.sample(5)","80367c02":"train.info()","dfc6f8f9":"train = train.rename(columns={'pts_origin': 'technical_passport', 'complectation': 'equipment', 'model_name': 'series'})","289d019f":"train = train.drop(columns=['brand'])","6c4bc3c3":"train['production_date'] = pd.to_datetime(train['production_date'], format='%Y').dt.year\n\ntrain['car_age'] = datetime.datetime.now().year - train['production_date']","50f256db":"train['mileage_per_year'] = train['mileage'] \/ train['car_age']\n\ntrain['mileage_per_year'] = train['mileage_per_year'].apply(lambda x: cat_mileage_per_year(x))\ntrain['mileage_per_year'] = train['mileage_per_year'].astype('str')","f1156071":"# \u041e\u0442\u0431\u0435\u0440\u0443 \u043d\u0443\u0436\u043d\u044b\u0435 \u0446\u0435\u043d\u044b \u0438 \u0443\u043c\u043d\u043e\u0436\u0443 \u043d\u0430 \u043d\u0443\u0436\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e, \u0447\u0442\u043e\u0431\u044b \u0441\u0440\u0430\u0432\u043d\u0438\u0442\u044c\ntrain.query('car_age > 2 & car_age < 6')['price'] * 0.98","d3e03e55":"# \u0421\u0434\u0435\u043b\u0430\u044e \u043d\u0443\u0436\u043d\u043e\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0443\u0436\u0435 \u0432 \u0440\u0430\u0431\u043e\u0447\u0435\u043c \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0435\ntrain.loc[(train['car_age'] > 2) & (train['car_age'] < 6), 'price'] *= 0.98","76f9dcd8":"# \u041c\u043e\u0436\u043d\u043e \u0442\u0430\u043a \u0435\u0449\u0435\nmask = train.eval(\"2 < car_age < 6\")\ntrain.loc[mask, 'price'] *= 0.98","546bbbf1":"col_info(train.mileage_per_year)","286d01c5":"train['car_age'] = train['car_age'].apply(lambda x: cat_age(x))\n\ntrain['car_age'] = train['car_age'].astype('str')","a0794f9f":"train['exp_year'] = train.mileage.apply(lambda x: x\/\/17000 if x<=400000 else 400000\/\/17000+1)","0d358a31":"train['mileage'] = train['mileage'].apply(lambda x: cat_mileage(x))\ntrain['mileage'] = train['mileage'].astype('str')","529a5efd":"col_info(train.gear_type)","fddfadca":"dict_gear_type = {\n    'REAR_DRIVE': 'rear',\n    'ALL_WHEEL_DRIVE': '4w',\n    'FORWARD_CONTROL': 'front'\n}\n\ntrain['gear_type'] = train['gear_type'].map(dict_gear_type)","f451380d":"col_info(train.steering_wheel)","7f39078b":"dict_steering_wheel = {\n    'LEFT': 'left',\n    'RIGHT': 'right'\n}\n\ntrain['steering_wheel'] = train['steering_wheel'].map(dict_steering_wheel)","c44d4914":"def get_autoru_features(equipment):\n    # \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043f\u0443\u0441\u0442\u043e\u0439 \u0441\u043f\u0438\u0441\u043e\u043a, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0443\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c\u0441\u044f \u0432\u0441\u0435 \u0444\u0438\u0447\u0438\n    autoru_features = []\n    for data in equipment:\n        # \u041d\u0430\u0445\u043e\u0434\u0438\u043c \u0432\u0441\u0435 \u0441\u043b\u043e\u0432\u0430 \u043c\u0435\u0436\u0434\u0443 \u043a\u0430\u0432\u044b\u0447\u043a\u0430\u043c\u0438\n        features=re.findall(r'\\'(.+?)\\'',data)\n        # \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0432 \u043e\u0431\u0449\u0438\u0439 \u0441\u043f\u0438\u0441\u043e\u043a\n        autoru_features.extend(features)\n    # \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u044b\n    autoru_features = list(dict.fromkeys(autoru_features))\n    return autoru_features","e9ddf9af":"autoru_features = get_autoru_features(train.equipment)  \nprint('\u0412\u0441\u0435\u0433\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0444\u0438\u0447:', len(autoru_features))\nprint(autoru_features)","4212281f":"def get_features_train(equipment):      \n    features=re.findall(r'\\'(.+?)\\'',equipment)\n    return features","f37ce035":"train['equipment'] = train['equipment'].apply(lambda x: get_features_train(x))","542ade86":"train.sample(5)","58847a43":"train_equipment = train.copy()\n\n# \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0444\u0438\u0447 \u0432 \u0437\u0430\u043f\u0438\u0441\u0438\ndef find_item(cell):\n    if item in cell:\n        return 1\n    return 0\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043d\u0430\u0431\u043e\u0440 \u0444\u0438\u0447\nfeatures = set()\nfor featurelist in train_equipment['equipment']:\n    for feature in featurelist:\n        features.add(feature)\n# C\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u0442\u043e\u043b\u0431\u0446\u044b \u0441 \u0444\u0438\u0447\u0430\u043c\u0438 \u0438 \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u043c 0 \u0438\u043b\u0438 1\nfor item in features:\n    train_equipment[item] = train_equipment['equipment'].apply(find_item)","6d43071d":"cor_target = abs(train_equipment.corr()[\"price\"])\nrelevant_features = cor_target[cor_target>0.3] # \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u0444\u0438\u0447\u0438 \u0441 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \u043c\u043e\u0434\u0443\u043b\u044f \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442\u0430 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0438 > 0.3\nrelevant_features","9645a95f":"equipment_list = [\n    'high-beam-assist',\n    'front-seats-heat-vent',\n    'bluetooth',\n    'laser-lights',\n    'light-sensor',\n    'adaptive-light',\n    'apple-carplay',\n    'electro-trunk',\n    'third-row-seats',\n    'keyless-entry',\n    'activ-suspension',\n    'multizone-climate-control',\n    'body-kit',\n    'projection-display',\n    'start-stop-function',\n    'start-button',\n    'paint-metallic',\n    'wheel-heat',\n    'passenger-seat-electric',\n    'rain-sensor',\n    'navigation',\n    'voice-recognition',\n    'multi-wheel',\n    'airbag-curtain',\n    'glonass',\n    'auto-mirrors',\n    'usb',\n    'power-latching-doors',\n    'led-lights',\n    'auto-park',\n    'bas',\n    'isofix',\n    'tyre-pressure',\n    'air-suspension',\n    'decorative-interior-lighting',\n    '360-camera',\n    'wireless-charger',\n    'electronic-gage-panel',\n]","3fd2a190":"equipment_dict = {\n    '\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u0430\u043b\u044c\u043d\u0438\u043c \u0441\u0432\u0435\u0442\u043e\u043c': 'high-beam-assist',\n    '\u0412\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044f \u043f\u0435\u0440\u0435\u0434\u043d\u0438\u0445 \u0441\u0438\u0434\u0435\u043d\u0438\u0439': 'front-seats-heat-vent',\n    'Bluetooth': 'bluetooth',\n    '\u041b\u0430\u0437\u0435\u0440\u043d\u044b\u0435 \u0444\u0430\u0440\u044b': 'laser-lights',\n    '\u0414\u0430\u0442\u0447\u0438\u043a \u0441\u0432\u0435\u0442\u0430': 'light-sensor',\n    '\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u0430\u0434\u0430\u043f\u0442\u0438\u0432\u043d\u043e\u0433\u043e \u043e\u0441\u0432\u0435\u0449\u0435\u043d\u0438\u044f': 'adaptive-light',\n    'CarPlay': 'apple-carplay',\n    '\u042d\u043b\u0435\u043a\u0442\u0440\u043e\u043f\u0440\u0438\u0432\u043e\u0434 \u043a\u0440\u044b\u0448\u043a\u0438 \u0431\u0430\u0433\u0430\u0436\u043d\u0438\u043a\u0430': 'electro-trunk',\n    '\u0422\u0440\u0435\u0442\u0438\u0439 \u0440\u044f\u0434 \u0441\u0438\u0434\u0435\u043d\u0438\u0439': 'third-row-seats',\n    '\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u0431\u0435\u0437 \u043a\u043b\u044e\u0447\u0430': 'keyless-entry',\n    '\u0410\u043a\u0442\u0438\u0432\u043d\u0430\u044f \u043f\u043e\u0434\u0432\u0435\u0441\u043a\u0430': 'activ-suspension',\n    '\u041a\u043b\u0438\u043c\u0430\u0442-\u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044c \u043c\u043d\u043e\u0433\u043e\u0437\u043e\u043d\u043d\u044b\u0439': 'multizone-climate-control',\n    '\u041e\u0431\u0432\u0435\u0441 \u043a\u0443\u0437\u043e\u0432\u0430': 'body-kit',\n    '\u041f\u0440\u043e\u0435\u043a\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0434\u0438\u0441\u043f\u043b\u0435\u0439': 'projection-display',\n    '\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u00ab\u0441\u0442\u0430\u0440\u0442-\u0441\u0442\u043e\u043f\u00bb': 'start-stop-function',\n    '\u0417\u0430\u043f\u0443\u0441\u043a \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f \u0441 \u043a\u043d\u043e\u043f\u043a\u0438': 'start-button',\n    '\u041c\u0435\u0442\u0430\u043b\u043b\u0438\u043a': 'paint-metallic',\n    '\u041e\u0431\u043e\u0433\u0440\u0435\u0432 \u0440\u0443\u043b\u0435\u0432\u043e\u0433\u043e \u043a\u043e\u043b\u0435\u0441\u0430': 'wheel-heat',\n    '\u042d\u043b\u0435\u043a\u0442\u0440\u043e\u0440\u0435\u0433\u0443\u043b\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u0435\u0440\u0435\u0434\u043d\u0438\u0445 \u0441\u0438\u0434\u0435\u043d\u0438\u0439': 'passenger-seat-electric',\n    '\u0414\u0430\u0442\u0447\u0438\u043a \u0434\u043e\u0436\u0434\u044f': 'rain-sensor',\n    '\u041d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u043e\u043d\u043d\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430': 'navigation',\n    '\u0413\u043e\u043b\u043e\u0441\u043e\u0432\u043e\u0435 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435': 'voice-recognition',\n    '\u041c\u0443\u043b\u044c\u0442\u0438\u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0435 \u0440\u0443\u043b\u0435\u0432\u043e\u0435 \u043a\u043e\u043b\u0435\u0441\u043e': 'multi-wheel',\n    '\u041f\u043e\u0434\u0443\u0448\u043a\u0438 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438 \u043e\u043a\u043e\u043d\u043d\u044b\u0435 (\u0448\u0442\u043e\u0440\u043a\u0438)': 'airbag-curtain',\n    '\u042d\u0420\u0410-\u0413\u041b\u041e\u041d\u0410\u0421\u0421': 'glonass',\n    '\u042d\u043b\u0435\u043a\u0442\u0440\u043e\u0441\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u043d\u0438\u0435 \u0437\u0435\u0440\u043a\u0430\u043b': 'auto-mirrors',\n    'USB': 'usb',\n    '\u0414\u043e\u0432\u043e\u0434\u0447\u0438\u043a \u0434\u0432\u0435\u0440\u0435\u0439': 'power-latching-doors',\n    '\u0421\u0432\u0435\u0442\u043e\u0434\u0438\u043e\u0434\u043d\u044b\u0435 \u0444\u0430\u0440\u044b': 'led-lights',\n    '\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043f\u0430\u0440\u043a\u043e\u0432\u043a\u0438': 'auto-park',\n    '\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u043f\u043e\u043c\u043e\u0449\u0438 \u043f\u0440\u0438 \u0442\u043e\u0440\u043c\u043e\u0436\u0435\u043d\u0438\u0438 (BAS, EBD)': 'bas',\n    '\u041a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u0435 \u0434\u0435\u0442\u0441\u043a\u043e\u0433\u043e \u043a\u0440\u0435\u0441\u043b\u0430 (\u043f\u0435\u0440\u0435\u0434\u043d\u0438\u0439 \u0440\u044f\u0434) ISOFIX': 'isofix',\n    '\u0414\u0430\u0442\u0447\u0438\u043a \u0434\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0432 \u0448\u0438\u043d\u0430\u0445': 'tyre-pressure',\n    '\u041f\u043d\u0435\u0432\u043c\u043e\u043f\u043e\u0434\u0432\u0435\u0441\u043a\u0430': 'air-suspension',\n    '\u0414\u0435\u043a\u043e\u0440\u0430\u0442\u0438\u0432\u043d\u0430\u044f \u043f\u043e\u0434\u0441\u0432\u0435\u0442\u043a\u0430 \u0441\u0430\u043b\u043e\u043d\u0430': 'decorative-interior-lighting',\n    '\u041a\u0430\u043c\u0435\u0440\u0430 360\u00b0': '360-camera',\n    '\u0411\u0435\u0441\u043f\u0440\u043e\u0432\u043e\u0434\u043d\u0430\u044f \u0437\u0430\u0440\u044f\u0434\u043a\u0430 \u0434\u043b\u044f \u0441\u043c\u0430\u0440\u0442\u0444\u043e\u043d\u0430': 'wireless-charger',\n    '\u042d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u0430\u044f \u043f\u0440\u0438\u0431\u043e\u0440\u043d\u0430\u044f \u043f\u0430\u043d\u0435\u043b\u044c': 'electronic-gage-panel',\n}","423a1e65":"def test_feature_change(x):\n    x = [equipment_dict.get(a) if equipment_dict.get(a) else a for a in x]\n    return x","e49fba18":"test['equipment'] = test['equipment'].apply(lambda x: test_feature_change(x))","e9ded8f9":"def main_feature(x):\n    super_features = []\n    for equipment in x:\n        if equipment in equipment_list:\n            super_features.append(equipment)\n    x = super_features\n    return x","cb2c267a":"train['equipment'] = train['equipment'].apply(lambda x: main_feature(x))","668f593a":"test['equipment'] = test['equipment'].apply(lambda x: main_feature(x))","9aa26ca2":"for item in equipment_list:\n    train[item] = train['equipment'].apply(find_item)","ea50cdb6":"for item in equipment_list:\n    test[item] = test['equipment'].apply(find_item)","0f68e9f5":"col_info(train.not_damage)","09f0de03":"train['not_damage'] = train['not_damage'].astype(int)","e8b116a2":"col_info(train.technical_passport)","3d668d36":"train['technical_passport']","97132531":"dict_technical_passport = {\n    'ORIGINAL': 'original',\n    'DUPLICATE': 'duplicate'\n}\n\ntrain['technical_passport'] = train['technical_passport'].map(dict_technical_passport)\n\ntrain['technical_passport'] = train['technical_passport'].fillna('Unknown')","e83b7c7e":"col_info(train.custom_clear)","2f8dea79":"train['custom_clear'] = train['custom_clear'].astype(int)","af777224":"train = train.drop(columns=['custom_clear'])","5e935efb":"col_info(train.body_type)","d1f28ba5":"col_info(train.model_date_begin)","61ba6a0a":"train['model_date_begin'] = pd.to_datetime(train['model_date_begin'], format='%Y').dt.year\n\ntrain['model_age'] = datetime.datetime.now().year - train['model_date_begin']","65f40495":"train['model_age'] = train['model_age'].apply(lambda x: 20 if x > 19 else x)\ntrain['model_age'] = train['model_age'].astype('str')","fafcc039":"col_info(train.number_of_doors)","c45585ad":"col_info(train.fuel_type)","048a66f0":"dict_fuel_type = {\n    'DIESEL': 'diesel',\n    'GASOLINE': 'gasoline',\n    'HYBRID': 'hybrid',\n    'ELECTRO': 'electro'\n}\n\ntrain['fuel_type'] = train['fuel_type'].map(dict_fuel_type)","8119aa3f":"col_info(train.vehicle_transmission)","4eb28ac0":"dict_vehicle_transmission = {\n    'AUTOMATIC': 'AT',\n    'MECHANICAL': 'MT',\n    'ROBOT': 'AMT'\n}\n\ntrain['vehicle_transmission'] = train['vehicle_transmission'].map(dict_vehicle_transmission)","71fb6ecf":"col_info(train.engine_displacement)","fea279d5":"train['engine_displacement'] = train['engine_displacement'].astype(float)\ntrain['engine_displacement'] = round((train['engine_displacement'] \/ 1000), 1)","b3146d29":"col_info(train.engine_power)","2fb45ebe":"col_info(train.owners)","175c116f":"train['owners'] = train['owners'].fillna(1)","c43deff2":"# \u043f\u0440\u0438\u0432\u0435\u0434\u0443 \u043a \u0447\u0438\u0441\u043b\u043e\u0432\u043e\u043c\u0443 \u0432\u0438\u0434\u0443\ntrain['owners'] = train['owners'].astype(int)","3a0ad6b5":"col_info(train.engine_power)","f1291b54":"col_info(train.name)","c5392cb6":"# \u041d\u043e\u0432\u044b\u0439 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c \u0441 \u0440\u0430\u0437\u0431\u0438\u0442\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0438\u0437 \u043d\u0443\u0436\u043d\u043e\u0439 \u043c\u043d\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 - \u0441\u0434\u0435\u043b\u0430\u044e \u0442\u0430\u043a, \u0447\u0442\u043e\u0431\u044b \u044d\u0442\u043e \u0431\u044b\u043b\u043e \u0440\u0435\u0448\u0435\u043d\u0438\u0435\u043c \u043d\u0435 \u0447\u0430\u0441\u0442\u043d\u044b\u043c, \u0430 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0441\u043b\u0443\u0447\u0430\u0435\u0432\nname_tmp = train['name'].str.split(\" \", n = 2, expand = True) \n\n\n# \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0441\u043a\u043b\u0435\u0438\u0442\u044c \u043f\u0435\u0440\u0432\u044b\u0435 \u0434\u0432\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f, \u043d\u043e \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u0431\u0443\u0434\u0435\u043c \u0441\u043e\u0431\u043b\u044e\u0434\u0430\u0442\u044c \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f:\n# \u0432\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u0434\u043e\u043b\u0436\u043d\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c\u0441\u044f xDrive, Competition, sDrive, Package, \u0442\u043e\u0433\u0434\u0430 \u044d\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043e \u043a \u043f\u0435\u0440\u0432\u043e\u0439 \u043a\u043e\u043b\u043e\u043d\u043a\u0435\n# \u0432 \u043f\u0435\u0440\u0432\u043e\u0439 \u043a\u043e\u043b\u043e\u043d\u043a\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0432\u0441\u0435, \u0447\u0442\u043e \u0443\u0433\u043e\u0434\u043d\u043e\n# \u043a\u043e\u043d\u044a\u044e\u043d\u043a\u0446\u0438\u044f \u0434\u0432\u0443\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\ndef make_conj(data, feature1, feature2):\n    data['tmp_1'] = np.where(~data[feature2].str.contains('xDrive|Competition|sDrive|Package'),\n                                 '', data[feature2])\n    \n    data['tmp_0'] = data[feature1]\n    \n    data['tmp'] = data['tmp_0'] + ' ' + data['tmp_1']\n                    \n    return (data)\n\n# \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043c \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u043a\u0443 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f\nmake_conj(name_tmp, 0, 1)\n\n# \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043c \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u043a\u0443 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f\nmake_conj(name_tmp, 0, 1)\n\n\ntrain['name'] = name_tmp['tmp']\n\ntrain['name'] = train['name'].apply(lambda x: x.replace('xDrive20d', '20d xDrive'))\ntrain['name'] = train['name'].apply(lambda x: x.replace('sDrive18i', '18i sDrive'))\ntrain['name'] = train['name'].apply(lambda x: x.replace('sDrive20i', '20i sDrive'))\ntrain['name'] = train['name'].apply(lambda x: x.replace('xDrive18d', '18d xDrive'))\ntrain['name'] = train['name'].apply(lambda x: x.replace('xDrive20', '20 xDrive'))\ntrain['name'] = train['name'].apply(lambda x: x.replace('20 xDrivei', '20i xDrive'))","e629a745":"train['name'] = train['name'].str.strip()","fcc681a8":"name_tmp.sample(10)","91d1d638":"train[['name', 'engine_displacement', 'fuel_type', 'vehicle_transmission', 'engine_power']].sample(20)","f30ef17c":"train[train['name'] == ' ']","9995ee88":"train = train.loc[train['name'] != ' ']","be282d59":"col_info(train.series)","a16364ae":"cars_name_for_search_model3 = train[['name', 'series', 'model_date_begin', 'body_type', 'engine_displacement', 'fuel_type', 'vehicle_transmission', 'engine_power', 'price']]\ncars_name_for_search_model3.to_excel(\"cars_name_for_search_model3.xlsx\",\n             sheet_name='cars_name_for_search_model')  \n\ncars_name_for_search_model3","a67c0f6b":"cars_name_for_search_model3_groupby_series = cars_name_for_search_model3.groupby(['series','name','model_date_begin','body_type','engine_displacement','fuel_type','engine_power']).agg({'price': 'sum'}).sort_values(by=['series'], ascending=False).reset_index()\ncars_name_for_search_model3_groupby_series.to_excel(\"cars_name_for_search_model3_groupby_series.xlsx\",\n             sheet_name='model_groupby_series')  \n\ncars_name_for_search_model3_groupby_series","2326cdc8":"dic_model = {\n    '1 \u0441\u0435\u0440\u0438\u044f': '1ER',\n    '1M': '1ER',\n    '2ACTIVETOURER': '2ER',\n    '2 \u0441\u0435\u0440\u0438\u044f': '2ER',\n    '2 \u0441\u0435\u0440\u0438\u044f Grand Tourer': '2ER',\n    '2 \u0441\u0435\u0440\u0438\u044f Active Tourer': '2ER',\n    '2GRANDTOURER': '2ER',\n    '3 \u0441\u0435\u0440\u0438\u044f': '3ER',\n    '4': '4ER',\n    '4 \u0441\u0435\u0440\u0438\u044f': '4ER',\n    '5 \u0441\u0435\u0440\u0438\u044f': '5ER',\n    '6 \u0441\u0435\u0440\u0438\u044f': '6ER',\n    '7 \u0441\u0435\u0440\u0438\u044f': '7ER',\n    '8 \u0441\u0435\u0440\u0438\u044f': '8ER',\n    'i8': 'I8',\n    'i3': 'I3',\n    'M2': '2ER',\n    'M3': '3ER',\n    'M4': '4ER',\n    'M5': '5ER',\n    'M6': '6ER',\n    'M8': '8ER',\n    'X1': 'X1',\n    'X2': 'X2',\n    'X3': 'X3',\n    'X3 M': 'X3',\n    'X4': 'X4',\n    'X4 M': 'X4',\n    'X5': 'X5',\n    'X5 M': 'X5',\n    'X6': 'X6',\n    'X6 M': 'X6',\n    'X7': 'X7',\n    'Z1': 'Z1',\n    'Z3': 'Z3',\n    'Z3 M': 'Z3',\n    'Z4': 'Z4',\n    'Z4 M': 'Z4',\n    'Z8': 'Z8',\n}","a4465be4":"train['series'] = train['series'].map(dic_model)","8bd37185":"col_info(train.series)","4f144ec3":"col_info(train.model_date_end)","03d2e522":"train[['name', 'model_date_end']].groupby('name').agg({'model_date_end': 'value_counts'})","9250dad3":"a = train[['name', 'model_date_end']].groupby('name').agg({'model_date_end': 'value_counts'}).to_dict(orient='split')\nprint(type(a))\nprint(a)","bfa39045":"train = train.drop(columns=['model_date_end'])","1dc75cb9":"from skimage import color\n\n\ndef color_hex_replace(hex):\n\n\n    peaked_color = '#' + f\"{hex}\"\n    \n#     print(peaked_color)\n\n    # Initialize a dictionary where the key is the RGB value as hex string, and the value is the color name\n    # https:\/\/en.wikipedia.org\/wiki\/List_of_colors:_A%E2%80%93F\n\n    colors_dict = {\n        \"000000\":\"black\",\n        \"C0C0C0\":\"silver\",\n        \"808080\":\"grey\",\n        \"FFFFFF\":\"white\",\n        \"800000\":\"maroon\",\n        \"FF0000\":\"red\",\n        \"800080\":\"purple\",\n        \"FF00FF\":\"fuchsia\",\n        \"008000\":\"green\",\n        \"006400\":\"darkgreen\",\n        \"00FF00\":\"lime\",\n        \"808000\":\"olive\",\n        \"FFFF00\":\"yellow\",\n        \"000080\":\"navy\",\n        \"0000FF\":\"blue\",\n        \"008080\":\"teal\",\n        \"00FFFF\":\"aqua\",\n        \"a52a2a\":\"brown\",\n        \"f5f5dc\":\"beige\",\n        \"ffd700\":\"gold\",\n        \"ffa500\":\"orange\",\n        \"0000cd\":\"mid_blue\",\n        \"ee82ee\":\"violet\"\n    }\n    \n    \n    # Get a list of color values in hex string format\n    hex_rgb_colors = list(colors_dict.keys())\n\n    # https:\/\/stackoverflow.com\/questions\/39908314\/slice-all-strings-in-a-list, https:\/\/stackoverflow.com\/questions\/9210525\/how-do-i-convert-hex-to-decimal-in-python\n    r = [int(hex[0:2], 16) for hex in hex_rgb_colors]  # List of red elements.\n    g = [int(hex[2:4], 16) for hex in hex_rgb_colors]  # List of green elements.\n    b = [int(hex[4:6], 16) for hex in hex_rgb_colors]  # List of blue elements.\n\n    r = np.asarray(r, np.uint8)  # Convert r from list to array (of uint8 elements)\n    g = np.asarray(g, np.uint8)  # Convert g from list to array\n    b = np.asarray(b, np.uint8)  # Convert b from list to array\n\n    rgb = np.dstack((r, g, b)) #Stack r,g,b across third dimention - create to 3D array (of R,G,B elements).\n\n    # Convert from sRGB color spave to LAB color space\n    # https:\/\/stackoverflow.com\/questions\/13405956\/convert-an-image-rgb-lab-with-python\n    lab = color.rgb2lab(rgb)\n\n\n\n    # Convert peaked color from sRGB color spave to LAB color space\n    # peaked_color = '#673429ff'\n    peaked_rgb = np.asarray([int(peaked_color[1:3], 16), int(peaked_color[3:5], 16), int(peaked_color[5:7], 16)], np.uint8)\n    peaked_rgb = np.dstack((peaked_rgb[0], peaked_rgb[1], peaked_rgb[2]))\n    peaked_lab = color.rgb2lab(peaked_rgb)\n\n    # Compute Euclidean distance from peaked_lab to each element of lab\n    lab_dist = ((lab[:,:,0] - peaked_lab[:,:,0])**2 + (lab[:,:,1] - peaked_lab[:,:,1])**2 + (lab[:,:,2] - peaked_lab[:,:,2])**2)**0.5\n\n    # Get the index of the minimum distance\n    min_index = lab_dist.argmin()\n\n    # Get hex string of the color with the minimum Euclidean distance (minimum distance in LAB color space)\n    peaked_closest_hex = hex_rgb_colors[min_index]\n\n    # Get color name from the dictionary\n    peaked_color_name = colors_dict[peaked_closest_hex]\n\n    return peaked_color_name\n        \n\n","cc84498e":"color_hex_replace('ffffff')","9d54d76c":"train['color'] = train['color'].apply(color_hex_replace)","655a5993":"col_info(train.color)","09b4bf61":"train['color'] = train['color'].apply(lambda x: x.lower())","8af1a1bc":"train['color']","3bb4d74a":"col_info(train.body_type)","a3580cf7":"# \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0434\u043b\u044f \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438\ndic_body_type = {\n    '\u0412\u043d\u0435\u0434\u043e\u0440\u043e\u0436\u043d\u0438\u043a 5 \u0434\u0432.': 'allroad',\n    '\u041a\u0430\u0431\u0440\u0438\u043e\u043b\u0435\u0442': 'cabriolet',\n    '\u041a\u043e\u043c\u043f\u0430\u043a\u0442\u0432\u044d\u043d': 'compact_van',\n    '\u041a\u043e\u043c\u043f\u0430\u043a\u0442\u0432\u044d\u043d Gran Tourer': 'compact_van_gran_tourer',\n    '\u041a\u0443\u043f\u0435': 'coupe',\n    '\u041a\u0443\u043f\u0435-\u0445\u0430\u0440\u0434\u0442\u043e\u043f': 'coupe_hardtop',\n    '\u041b\u0438\u0444\u0442\u0431\u0435\u043a': 'liftback',\n    '\u041b\u0438\u0444\u0442\u0431\u0435\u043a Gran Turismo': 'liftback_gran_turismo',\n    '\u0420\u043e\u0434\u0441\u0442\u0435\u0440': 'roadster',\n    '\u0421\u0435\u0434\u0430\u043d': 'sedan',\n    '\u0421\u0435\u0434\u0430\u043d 2 \u0434\u0432.': 'sedan',\n    '\u0421\u0435\u0434\u0430\u043d Long': 'sedan_long',\n    '\u0423\u043d\u0438\u0432\u0435\u0440\u0441\u0430\u043b 5 \u0434\u0432.': 'station_wagon',\n    '\u0425\u044d\u0442\u0447\u0431\u0435\u043a 5 \u0434\u0432.': 'hatchback',\n    '\u0425\u044d\u0442\u0447\u0431\u0435\u043a 3 \u0434\u0432.': 'hatchback',\n    '\u0425\u044d\u0442\u0447\u0431\u0435\u043a 3 \u0434\u0432. Compact': 'hatchback_compact'\n}\n\ntrain['body_type'] = train['body_type'].map(dic_body_type)","a42b9c35":"train = train.dropna()","088eb3de":"train['covid'] = '1'","9519888a":"import seaborn as sns\n\nsns.distplot(train.price.values)\nnp.median(train.price.values)","2cdce55e":"col_info(train.price)","c4f9cf47":"train['price'] = train['price'].astype(int)","01c181a0":"train['price'] = train['price'] * 0.91","688ee405":"train.info()","0edb1c99":"print('test:\\n', test['technical_passport'].sample(10))\nprint('train:\\n', train['technical_passport'].sample(10))","eab0833c":"display(train.sample(5))\ndisplay(test.sample(5))","6c443db4":"train.drop(['equipment'], axis=1, inplace=True,)\ntest.drop(['equipment'], axis=1, inplace=True,)","8daab733":"# \u0423\u043a\u0430\u0436\u0443, \u043a\u0430\u043a\u0443\u044e \u043a\u043e\u043b\u043e\u043d\u043a\u0443 \u043d\u0443\u0436\u043d\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430 (\u0432 \u0442\u0435\u0441\u0442\u0435 \u043d\u0435\u0442 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0446\u0435\u043d\u044b)\nexcluded_feats = ['price']\n\n# \u0417\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u0435\u043c \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u043a\u043e\u043b\u043e\u043d\u043e\u043a\ncolumn_list = [f_ for f_ in train.columns if f_ not in excluded_feats]\n\n\n# \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u043a\u043e\u043b\u043e\u043d\u043e\u043a \u043a\u0430\u043a \u0434\u043b\u044f \u0442\u0440\u0435\u0439\u043d\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438, \u0438\u043d\u0430\u0447\u0435 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u043d\u0435\u0432\u0435\u0440\u043d\u044b\u0435.\ntest = test[column_list]","e24ec521":"VAL_SIZE   = 0.33   # 33%\nN_FOLDS    = 5\n\n# RANDOM_SEED\nRANDOM_SEED = 42","8b4f4d16":"X = train.drop(['price'], axis=1,)\ny = train.price.values\nX_sub = test.copy()","7960e7d3":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=VAL_SIZE, shuffle=True, random_state=RANDOM_SEED)","ccc5da6c":"X_train.info()","b4fbf129":"N_FOLDS    = 5\n\n# CATBOOST\nITERATIONS = 2000\nLR         = 0.1\n\n# RANDOM_SEED\nRANDOM_SEED = 42","21065ac9":"cat_features_ids = np.where(X_train.dtypes == object)[0].tolist()","208bdac8":"cat_features_ids","74071ea6":"categorical_features_names = ['body_type', 'color', 'fuel_type', 'name', 'vehicle_transmission', 'mileage', 'gear_type',\n                              'steering_wheel',  'technical_passport', 'model_age', 'car_age']","a785db43":"model = CatBoostRegressor(iterations = ITERATIONS,\n                          learning_rate = LR,\n                          random_seed = RANDOM_SEED,\n                          eval_metric='MAPE',\n                          custom_metric=['R2', 'MAE']\n                         )\nmodel.fit(X_train, y_train,\n         cat_features=categorical_features_names,\n         eval_set=(X_test, y_test),\n         verbose_eval=100,\n         use_best_model=True,\n         plot=True\n         )","3ebfb3fb":"model.save_model('catboost_single_model_baseline.model')","48cebae8":"from matplotlib import pyplot as plt\n\nidx = np.argsort(model.feature_importances_)\n\nplt.figure(figsize=(17,8))\n\nsns.barplot(x=model.feature_importances_[idx], y=np.array(model.feature_names_)[idx])","08b81e77":"predict_submission = model.predict(X_sub)\npredict_submission","8aa462b1":"VERSION = 20","7f6ed30d":"sample_submission['price'] = predict_submission\nsample_submission.to_csv(f'submission_v{VERSION}.csv', index=False)\nsample_submission.head(10)","467b8bb5":"def cat_model(y_train, X_train, X_test, y_test):\n    model = CatBoostRegressor(iterations = ITERATIONS,\n                              learning_rate = LR,\n                              eval_metric='MAPE',\n                              random_seed = RANDOM_SEED,)\n    model.fit(X_train, y_train,\n              cat_features=cat_features_ids,\n              eval_set=(X_test, y_test),\n              verbose=False,\n              use_best_model=True,\n              plot=False)\n    \n    return(model)\n\n\ndef mape(y_true, y_pred):\n    return np.mean(np.abs((y_pred-y_true)\/y_true))","2ca39ec1":"submissions = pd.DataFrame(0,columns=[\"sub_1\"], index=sample_submission.index) # \u043a\u0443\u0434\u0430 \u043f\u0438\u0448\u0435\u043c \u043f\u0440\u0435\u0434\u0438\u043a\u0442\u044b \u043f\u043e \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438\nscore_ls = []\nsplits = list(KFold(n_splits=N_FOLDS, shuffle=True, random_state=RANDOM_SEED).split(X, y))\n\nfor idx, (train_idx, test_idx) in tqdm(enumerate(splits), total=N_FOLDS,):\n    # use the indexes to extract the folds in the train and validation data\n    X_train, y_train, X_test, y_test = X.iloc[train_idx], y[train_idx], X.iloc[test_idx], y[test_idx]\n    # model for this fold\n    model = cat_model(y_train, X_train, X_test, y_test,)\n    # score model on test\n    test_predict = model.predict(X_test)\n    test_score = mape(y_test, test_predict)\n    score_ls.append(test_score)\n    print(f\"{idx+1} Fold Test MAPE: {mape(y_test, test_predict):0.3f}\")\n    # submissions\n    submissions[f'sub_{idx+1}'] = model.predict(X_sub)\n    model.save_model(f'catboost_fold_{idx+1}.model')\n    \nprint(f'Mean Score: {np.mean(score_ls):0.3f}')\nprint(f'Std Score: {np.std(score_ls):0.4f}')\nprint(f'Max Score: {np.max(score_ls):0.3f}')\nprint(f'Min Score: {np.min(score_ls):0.3f}')","da80937f":"submissions.head(10)","5b369eb7":"submissions['blend'] = (submissions.sum(axis=1))\/len(submissions.columns)\nsample_submission['price'] = submissions['blend'].values\nsample_submission.to_csv(f'submission_blend_v{VERSION}.csv', index=False)\nsample_submission.head(10)","1eb48702":"new_train = train.copy()\nnew_test = test.copy()","41fe54b9":"new_test['price'] = 0","0b21e233":"col_info(new_test.name)","b691c549":"len(new_test.name.tolist())","7783ef94":"test_car_name_list = new_test.name.tolist()\ntest_car_name_list = set(test_car_name_list)\nlen(test_car_name_list)","266c34a9":"new_train = new_train.query('name == @test_car_name_list')","40b91af4":"new_test","52c09f1b":"new_train.info()","17c9a348":"delete_outliers_iqr(new_train, 'price')","65092641":"new_test['dataset'] = 'test'\nnew_train['dataset'] = 'train'","cf172e33":"# \u0417\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u0435\u043c \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u043a\u043e\u043b\u043e\u043d\u043e\u043a\ncolumn_list = [f_ for f_ in new_test.columns]\n\n\n# \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u043a\u043e\u043b\u043e\u043d\u043e\u043a \u043a\u0430\u043a \u0434\u043b\u044f \u0442\u0440\u0435\u0439\u043d\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438, \u0438\u043d\u0430\u0447\u0435 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u043d\u0435\u0432\u0435\u0440\u043d\u044b\u0435.\nnew_train = new_train[column_list]","2c57d8c8":"new_big_df = pd.concat([new_train, new_test], ignore_index=True)","3fb675ee":"new_big_df","bb06380d":"cat_features_ids = np.where(new_big_df.dtypes == float)[0].tolist()\n\ncat_features_ids","0d67c3fd":"new_big_df.info()","0457f509":"new_big_df.iloc[:,[9, 60]]\n\n","5cfd01ea":"col_info(new_big_df.mileage_per_year)","7ebddc42":"new_big_df['engine_displacement'] = (new_big_df['engine_displacement'] * 1000).astype('int')","1a42dfdb":"new_big_df['engine_displacement']","276ca50b":"new_big_df['price'] = new_big_df['price'].astype(int)","b6640979":"new_big_df['model_age'] = new_big_df['model_age'].astype(int)","bdf61031":"new_big_df['model_age']","f66d0a8b":"new_big_df['engine_displacement']","a234e9c7":"def luxury_tax(df):\n    conditions = [\n        ((df['name'] == 'M240i xDrive') & (df['model_age'] > 0) & (df['model_age'] <= 2) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 3000))  # 1.1\n        | ((df['name'] == 'M235i xDrive') & (df['model_age'] == 1) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 2000) & (df['body_type'] <= 'coupe'))\n        | ((df['name'] == '330d xDrive') & (df['model_age'] == 2) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 2000))\n        | ((df['name'] == 'M340i xDrive') & (df['model_age'] == 1) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '340i xDrive') & (df['model_age'] <= 2) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 2000))\n        | ((df['name'] == '330i xDrive') & (df['model_age'] == 1) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 2000))\n        | ((df['name'] == '340i xDrive') & (df['model_age'] > 1) & (df['model_age'] <= 3) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 2000) & (df['body_type'] <= 'liftback_gran_turismo'))\n        | ((df['name'] == '430i') & (df['model_age'] == 1) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 2000) & (df['body_type'] <= 'coupe'))\n        | ((df['name'] == '430i xDrive') & (df['model_age'] > 1) & (df['model_age'] <= 3) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 2000) & (df['body_type'] <= 'cabriolet'))\n        | ((df['name'] == '430i') & (df['model_age'] > 1) & (df['model_age'] <= 3) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 2000) & (df['body_type'] <= 'cabriolet'))\n        | ((df['name'] == '420d') & (df['model_age'] <= 2) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 2000) & (df['body_type'] <= 'cabriolet'))\n        | ((df['name'] == '430i xDrive') & (df['model_age'] > 0) & (df['model_age'] <= 2) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 2000) & (df['body_type'] <= 'coupe'))\n        | ((df['name'] == '440i xDrive') & (df['model_age'] > 1) & (df['model_age'] <= 3) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 3000) & (df['body_type'] <= 'coupe'))\n        | ((df['name'] == '440i') & (df['model_age'] > 1) & (df['model_age'] <= 3) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 3000) & (df['body_type'] <= 'cabriolet'))\n        | ((df['name'] == '520i') & (df['model_age'] == 1) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 2000))\n        | ((df['name'] == '520d') & (df['model_age'] == 1) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 2000))\n        | ((df['name'] == '520d xDrive') & (df['model_age'] > 0) & (df['model_age'] <= 2) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 2000))\n        | ((df['name'] == '530d xDrive') & (df['model_age'] > 0) & (df['model_age'] <= 3) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '530i') & (df['model_age'] <= 3) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 2000))\n        | ((df['name'] == '530i xDrive') & (df['model_age'] > 0) & (df['model_age'] <= 3) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 2000))\n        | ((df['name'] == '540i xDrive') & (df['model_age'] > 0) & (df['model_age'] <= 3) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '630d xDrive') & (df['model_age'] > 0) & (df['model_age'] <= 3) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '630i') & (df['model_age'] > 0) & (df['model_age'] <= 3) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 2000))\n        | ((df['name'] == '640d xDrive') & (df['model_age'] > 0) & (df['model_age'] <= 3) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '640i xDrive') & (df['model_age'] > 0) & (df['model_age'] <= 3) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '730i') & (df['model_age'] <= 2) & (df['fuel_type'] == 'gasoline'))\n        | ((df['name'] == 'M2') & (df['model_age'] <= 3) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == 'M2 Competition') & (df['model_age'] > 0) & (df['model_age'] <= 2) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == 'M550d xDrive') & (df['model_age'] > 1) & (df['model_age'] <= 3) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == 'M550i xDrive') & (df['model_age'] <= 3) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 4500))\n        | ((df['name'] == 'M40i') & (df['series'] <= 'X3') & (df['model_age'] > 0) & (df['model_age'] <= 3) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == 'M40d') & (df['series'] <= 'X3') & (df['model_age'] > 0) & (df['model_age'] <= 2) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '20d xDrive') & (df['series'] <= 'X3') & (df['model_age'] > 0) & (df['model_age'] <= 3) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '20i xDrive') & (df['series'] <= 'X3') & (df['model_age'] > 0) & (df['model_age'] <= 3) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 2000))\n        | ((df['name'] == '30i xDrive') & (df['series'] <= 'X3') & (df['model_age'] > 0) & (df['model_age'] <= 3) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 2000))\n        | ((df['name'] == '30d xDrive') & (df['series'] <= 'X3') & (df['model_age'] > 0) & (df['model_age'] <= 3) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == 'M40i') & (df['series'] <= 'X4') & (df['model_age'] <= 3) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == 'M40d') & (df['series'] <= 'X4') & (df['model_age'] <= 2) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '20i xDrive') & (df['series'] <= 'X4') & (df['model_age'] > 0) & (df['model_age'] <= 2) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 2000))\n        | ((df['name'] == '20d xDrive') & (df['series'] <= 'X4') & (df['model_age'] > 0) & (df['model_age'] <= 3) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 2000))\n        | ((df['name'] == '20i xDrive M Sport') & (df['series'] <= 'X4') & (df['model_age'] <= 3) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 2000))\n        | ((df['name'] == '28i xDrive') & (df['series'] <= 'X4') & (df['model_age'] <= 3) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 2000))\n        | ((df['name'] == '30i xDrive') & (df['series'] <= 'X4') & (df['model_age'] > 0) & (df['model_age'] <= 2) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 2000))\n        | ((df['name'] == '30d xDrive') & (df['series'] <= 'X4') & (df['model_age'] > 0) & (df['model_age'] <= 3) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '35d xDrive') & (df['series'] <= 'X4') & (df['model_age'] <= 3) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '35i xDrive') & (df['series'] <= 'X4') & (df['model_age'] <= 3) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '25d xDrive Business') & (df['series'] <= 'X5') & (df['model_age'] <= 3) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '30d xDrive') & (df['series'] <= 'X5') & (df['model_age'] > 0) & (df['model_age'] <= 3) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '35i xDrive') & (df['series'] <= 'X5') & (df['model_age'] <= 3) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '40i xDrive') & (df['series'] <= 'X5') & (df['model_age'] > 0) & (df['model_age'] <= 2) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '40d xDrive') & (df['series'] <= 'X5') & (df['model_age'] <= 3) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '40e xDrive') & (df['series'] <= 'X5') & (df['model_age'] <= 3) & (df['fuel_type'] == 'hybrid'))\n        | ((df['name'] == '50i xDrive') & (df['series'] <= 'X5') & (df['model_age'] <= 3) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 4500))\n        | ((df['name'] == '30d xDrive') & (df['series'] <= 'X6') & (df['model_age'] <= 3) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '20i sDrive') & (df['series'] <= 'Z4') & (df['model_age'] > 0) & (df['model_age'] <= 2) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 2000))\n        | ((df['name'] == '30i sDrive') & (df['series'] <= 'Z4') & (df['model_age'] > 0) & (df['model_age'] <= 2) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 2000))\n        | ((df['name'] == 'M40i') & (df['series'] <= 'Z4') & (df['model_age'] > 0) & (df['model_age'] <= 2) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == 'M4') & (df['model_age'] > 1) & (df['model_age'] <= 3) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 3000) & (df['body_type'] == 'coupe'))\n        | ((df['name'] == '120Ah') & (df['model_age'] > 0) & (df['model_age'] <= 1) & (df['fuel_type'] == 'electro'))\n        | ((df['name'] == '620d xDrive') & (df['model_age'] <= 3) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 2000)),\n        ((df['name'] == '\u041c4') & (df['model_age'] <= 1) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 3000))  # 2\n        | ((df['name'] == '\u041c') & (df['series'] <= 'X3') & (df['model_age'] <= 1) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == 'M40d') & (df['series'] <= 'X4') & (df['model_age'] <= 1) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == 'M40i') & (df['series'] <= 'X4') & (df['model_age'] > 0) & (df['model_age'] <= 2) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == 'M') & (df['series'] <= 'X4') & (df['model_age'] <= 1) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '640i xDrive') & (df['model_age'] <= 3) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 3000) & (df['body_type'] == 'cabriolet'))\n        | ((df['name'] == '640i') & (df['model_age'] <= 3) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 3000) & (df['body_type'] == 'cabriolet'))\n        | ((df['name'] == '650i xDrive') & (df['model_age'] > 2) & (df['model_age'] <= 5) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 4500) & (df['body_type'] == 'coupe'))\n        | ((df['name'] == '650i xDrive') & (df['model_age'] > 2) & (df['model_age'] <= 5) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 4500) & (df['body_type'] == 'cabriolet'))\n        | ((df['name'] == '650i xDrive') & (df['model_age'] > 2) & (df['model_age'] <= 5) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 4500) & (df['body_type'] == 'coupe'))\n        | ((df['name'] == '650i') & (df['model_age'] > 2) & (df['model_age'] <= 5) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 4500) & (df['body_type'] == 'cabriolet'))\n        | ((df['name'] == '730i') & (df['model_age'] <= 1) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 2000))\n        | ((df['name'] == '730d xDrive') & (df['model_age'] > 0) & (df['model_age'] <= 5) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '730Ld xDrive') & (df['model_age'] > 0) & (df['model_age'] <= 5) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '740d xDrive') & (df['model_age'] > 0) & (df['model_age'] <= 5) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '740Ld xDrive') & (df['model_age'] > 0) & (df['model_age'] <= 5) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '740Le xDrive') & (df['model_age'] > 0) & (df['model_age'] <= 4) & (df['fuel_type'] == 'hybrid') & (df['engine_displacement'] <= 2000))\n        | ((df['name'] == '740Li xDrive') & (df['model_age'] > 0) & (df['model_age'] <= 4) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '750d xDrive') & (df['model_age'] > 0) & (df['model_age'] <= 4) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '750i xDrive') & (df['model_age'] > 0) & (df['model_age'] <= 5) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 4500))\n        | ((df['name'] == '750Ld xDrive') & (df['model_age'] > 0) & (df['model_age'] <= 4) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '750Li xDrive') & (df['model_age'] > 0) & (df['model_age'] <= 5) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 4500))\n        | ((df['name'] == 'M550d xDrive') & (df['model_age'] <= 1) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == 'M550i xDrive') & (df['model_age'] > 0) & (df['model_age'] <= 2) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 4500))\n        | ((df['name'] == 'M5') & (df['model_age'] > 2) & (df['model_age'] <= 5) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 4500) & (df['body_type'] == 'sedan'))\n        | ((df['name'] == 'M5 Competition') & (df['model_age'] > 0) & (df['model_age'] <= 2) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 4500))\n        | ((df['name'] == 'M6') & (df['model_age'] > 3) & (df['model_age'] <= 5) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 4500) & (df['body_type'] == 'coupe'))\n        | ((df['name'] == 'M6') & (df['model_age'] <= 4) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 4500) & (df['body_type'] == 'cabriolet'))\n        | ((df['name'] == 'M6') & (df['model_age'] > 2) & (df['model_age'] <= 5) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 4500) & (df['body_type'] == 'coupe'))\n        | ((df['name'] == 'M760Li xDrive') & (df['model_age'] <= 4) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 7000))\n        | ((df['name'] == '50i xDrive') & (df['series'] <= 'X5') & (df['model_age'] == 2) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 4500))\n        | ((df['name'] == 'M') & (df['series'] <= 'X5') & (df['model_age'] > 0) & (df['model_age'] <= 5) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 4500))\n        | ((df['name'] == 'M50i') & (df['series'] <= 'X5') & (df['model_age'] <= 1) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 4500))\n        | ((df['name'] == 'M50d') & (df['series'] <= 'X5') & (df['model_age'] > 0) & (df['model_age'] <= 3) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == 'M50d xDrive') & (df['series'] <= 'X5') & (df['model_age'] <= 4) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '30d xDrive Exclusive') & (df['series'] <= 'X5') & (df['model_age'] <= 4) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '30d xDrive Pure Experience') & (df['series'] <= 'X5') & (df['model_age'] <= 4) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '40d xDrive M Sport') & (df['series'] <= 'X5') & (df['model_age'] > 3) & (df['model_age'] <= 5) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '35i xDrive') & (df['series'] <= 'X6') & (df['model_age'] == 2) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '40i xDrive') & (df['series'] <= 'X6') & (df['model_age'] <= 1) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '30d xDrive') & (df['series'] <= 'X6') & (df['model_age'] > 0) & (df['model_age'] <= 2) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == 'M') & (df['series'] <= 'X6') & (df['model_age'] > 0) & (df['model_age'] <= 5) & (df['engine_displacement'] <= 4500))\n        | ((df['name'] == 'M50i') & (df['series'] <= 'X6') & (df['model_age'] <= 1) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 4500))\n        | ((df['name'] == 'M50d') & (df['series'] <= 'X6') & (df['model_age'] > 0) & (df['model_age'] <= 3) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == 'M50d xDrive') & (df['series'] <= 'X6') & (df['model_age'] <= 4) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '30d xDrive Luxury') & (df['series'] <= 'X6') & (df['model_age'] <= 4) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '30d xDrive M Sport') & (df['series'] <= 'X6') & (df['model_age'] <= 4) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '30d xDrive Pure Extravagance') & (df['series'] <= 'X6') & (df['model_age'] <= 4) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '40d xDrive') & (df['series'] <= 'X6') & (df['model_age'] > 1) & (df['model_age'] <= 3) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '40d xDrive M Sport') & (df['series'] <= 'X6') & (df['model_age'] <= 4) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '50i xDrive') & (df['series'] <= 'X6') & (df['model_age'] > 1) & (df['model_age'] <= 4) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 4500))\n        | ((df['name'] == '30d xDrive') & (df['series'] <= 'X7') & (df['model_age'] > 0) & (df['model_age'] <= 2) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '40i xDrive') & (df['series'] <= 'X7') & (df['model_age'] > 0) & (df['model_age'] <= 2) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == 'M50d') & (df['series'] <= 'X7') & (df['model_age'] > 0) & (df['model_age'] <= 2) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000))\n        | ((df['name'] == '840i xDrive') & (df['model_age'] == 1) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 3000) & (df['body_type'] == 'cabriolet'))\n        | ((df['name'] == '840i xDrive') & (df['model_age'] == 1) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 3000) & (df['body_type'] == 'coupe'))\n        | ((df['name'] == '840d xDrive') & (df['model_age'] == 1) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000) & (df['body_type'] == 'coupe'))\n        | ((df['name'] == '840d xDrive') & (df['model_age'] > 0) & (df['model_age'] <= 2) & (df['fuel_type'] == 'diesel') & (df['engine_displacement'] <= 3000) & (df['body_type'] == 'coupe'))\n        | ((df['name'] == '840i xDrive') & (df['model_age'] == 1) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 3000) & (df['body_type'] == 'coupe'))\n        | ((df['name'] == 'M850i xDrive') & (df['model_age'] == 1) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 4500) & (df['body_type'] == 'coupe'))\n        | ((df['name'] == 'M850i xDrive') & (df['model_age'] > 0) & (df['model_age'] <= 2) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 4500) & (df['body_type'] == 'coupe'))\n        | ((df['name'] == 'M850i xDrive') & (df['model_age'] > 0) & (df['model_age'] <= 2) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 4500) & (df['body_type'] == 'cabriolet'))\n        | ((df['name'] == 'i8') & (df['model_age'] > 0) & (df['model_age'] <= 2) & (df['fuel_type'] == 'hybrid') & (df['engine_displacement'] <= 1500) & (df['body_type'] == 'coupe')),\n        ((df['name'] == 'M8') & (df['model_age'] == 1) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 4500) & (df['body_type'] == 'coupe'))  # 3\n        | ((df['name'] == 'M8') & (df['model_age'] == 1) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 4500) & (df['body_type'] == 'cabriolet'))\n        | ((df['name'] == 'i8') & (df['model_age'] > 2) & (df['model_age'] <= 4) & (df['fuel_type'] == 'hybrid') & (df['engine_displacement'] <= 1500))\n        | ((df['name'] == 'i8') & (df['model_age'] > 0) & (df['model_age'] <= 2) & (df['fuel_type'] == 'hybrid') & (df['engine_displacement'] <= 1500) & (df['body_type'] == 'roadster'))\n        | ((df['name'] == 'M760Li xDrive') & (df['model_age'] > 0) & (df['model_age'] <= 3) & (df['fuel_type'] == 'gasoline') & (df['engine_displacement'] <= 6600) & (df['body_type'] == 'roadster')),\n    ]\n    choices = [1.1,2,3]\n    df['luxury_tax'] = np.select(conditions, choices, default=1)\n    return df['luxury_tax']","de5e4e64":"new_big_df['luxury_tax'] = luxury_tax(new_big_df)","0187965e":"col_info(new_big_df.luxury_tax)","6544e575":"def make_car_tax(row):\n    if row.engine_power <= 100:\n            row.car_tax = row.engine_power * row.luxury_tax * 12\n            return row.car_tax\n        \n    elif 100 < row.engine_power <= 125:\n        row.car_tax = row.engine_power * row.luxury_tax * 20\n        return row.car_tax\n    \n    elif 125 < row.engine_power <= 150:\n        row.car_tax = row.engine_power * row.luxury_tax * 24\n        return row.car_tax\n    \n    elif 150 < row.engine_power <= 175:\n        row.car_tax = row.engine_power * row.luxury_tax * 42\n        return row.car_tax\n    \n    elif 175 < row.engine_power <= 200:\n        row.car_tax = row.engine_power * row.luxury_tax * 43\n        return row.car_tax\n\n    elif 200 < row.engine_power <= 225:\n        row.car_tax = row.engine_power * row.luxury_tax * 58\n        return row.car_tax\n    \n    elif 225 < row.engine_power <= 250:\n        row.car_tax = row.engine_power * row.luxury_tax * 68\n        return row.car_tax\n    \n    elif row.engine_power > 250:\n        row.car_tax = row.engine_power * row.luxury_tax * 132\n        return row.car_tax\n  \n \nnew_big_df['car_tax'] = new_big_df.apply(lambda row: make_car_tax(row), axis=1)","3e5c5da9":"new_big_df['model_age'] = new_big_df['model_age'].astype('str')\nnew_big_df['car_tax'] = new_big_df['car_tax'].astype(int)\nnew_big_df['luxury_tax'] = new_big_df['luxury_tax'].astype('str')","c3412905":"col_info(new_big_df.car_tax)","6a3f9e7f":"equipments_list = [\n    'high-beam-assist',\n    'front-seats-heat-vent',\n    'bluetooth',\n    'laser-lights',\n    'light-sensor',\n    'adaptive-light',\n    'apple-carplay',\n    'electro-trunk',\n    'third-row-seats',\n    'keyless-entry',\n    'activ-suspension',\n    'multizone-climate-control',\n    'body-kit',\n    'projection-display',\n    'start-stop-function',\n    'start-button',\n    'paint-metallic',\n    'wheel-heat',\n    'passenger-seat-electric',\n    'rain-sensor',\n    'navigation',\n    'voice-recognition',\n    'multi-wheel',\n    'airbag-curtain',\n    'glonass',\n    'auto-mirrors',\n    'usb',\n    'power-latching-doors',\n    'led-lights',\n    'auto-park',\n    'bas',\n    'isofix',\n    'tyre-pressure',\n    'air-suspension',\n    'decorative-interior-lighting',\n    '360-camera',\n    'wireless-charger',\n    'electronic-gage-panel']","001087a0":"new_big_df['equipments_count'] = new_big_df[equipments_list].sum(axis=1).astype('int')","16ef398e":"col_info(new_big_df.not_damage)","7c7a79bc":"new_big_df.drop(['not_damage'], axis=1, inplace=True,)","7eaee37f":"# #encoders for categorical data\n# from sklearn.preprocessing import LabelEncoder, OneHotEncoder\n# import category_encoders as ce\n\n# from itertools import combinations\n\n# object_cols = new_big_df.select_dtypes('object').columns\n# low_cardinality_cols = [col for col in object_cols if new_big_df[col].nunique() < 15]\n# # low_cardinality_cols.append('price')\n# interactions = pd.DataFrame(index=new_big_df.index)\n\n# # \u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u044e \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u0438 \u0444\u0438\u0447\u0435\u0439\n# for features in combinations(low_cardinality_cols,2):\n    \n#     new_interaction = new_big_df[features[0]].map(str)+\"_\"+new_big_df[features[1]].map(str)\n    \n#     encoder = LabelEncoder()\n#     interactions[\"_\".join(features)] = encoder.fit_transform(new_interaction)","f0ed732b":"# low_cardinality_cols","76314168":"# interactions","d3598013":"# new_big_df = new_big_df.join(interactions) #\u0434\u043e\u0431\u0430\u0432\u043b\u044e \u0442\u0435\u043f\u0435\u0440\u044c \u043d\u043e\u0432\u044b\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0432 \u0434\u0430\u0442\u0430\u0441\u0435\u0442","54b2e5e6":"new_big_df.info()","c11745f2":"new_big_df.to_csv('new_big_df.csv')  ","5a7b11de":"# def make_car_quality(row):\n#     if row.series == '3ER' and 1997 <= row.model_date_begin < 2006:\n#         row.quality = '1'\n#         return row.quality\n        \n#     elif row.name == '116i' or row.name == '116' or row.name == '116d':\n#         row.quality = '1'\n#         return row.quality\n    \n#     elif row.series == 'X5':\n#         row.quality = '1'\n#         return row.quality\n    \n#     elif row.series == '3ER' and 2005 < row.model_date_begin <= 2013:\n#         row.quality = '1'\n#         return row.quality\n    \n#     elif row.series == '5ER' and 2003 <= row.model_date_begin <= 2009:\n#         row.quality = '1'\n#         return row.quality\n    \n#     else:\n#         row.quality = '0'\n#         return row.quality\n  \n \n# new_big_df['quality'] = new_big_df.apply(lambda row: make_car_quality(row), axis=1)","550d2e9a":"# col_info(new_big_df.quality)","a314fbea":"# def make_car_popular(row):\n#     if row.series == '3ER' and row.series == 'sedan':\n#         row.popularity = '1'\n#         return row.popularity\n    \n#     elif row.series == '5ER' and row.series == 'sedan':\n#         row.popularity = '1'\n#         return row.popularity\n        \n#     elif row.series == 'X5' or row.series == 'X6' or row.series == 'X3':\n#         row.popularity = '1'\n#         return row.popularity\n    \n#     else:\n#         row.popularity = '0'\n#         return row.popularity\n  \n \n# new_big_df['popularity'] = new_big_df.apply(lambda row: make_car_popular(row), axis=1)","dc9de65a":"# def make_car_rating(row):\n#     if row.series == '6ER':\n#         row.rating = 9.3\n#         return row.rating\n    \n#     elif row.series == 'X6':\n#         row.rating = 9.2\n#         return row.rating\n    \n#     elif row.series == 'X5':\n#         row.rating = 9.1\n#         return row.rating\n    \n#     elif row.series == 'X3':\n#         row.rating = 9.0\n#         return row.rating\n    \n#     elif row.series == '7ER':\n#         row.rating = 9.0\n#         return row.rating\n    \n#     elif row.series == 'Z4':\n#         row.rating = 8.9\n#         return row.rating\n    \n#     elif row.series == '5ER':\n#         row.rating = 8.8\n#         return row.rating\n    \n#     elif row.series == '1ER':\n#         row.rating = 8.8\n#         return row.rating\n    \n#     elif row.series == 'X4':\n#         row.rating = 8.7\n#         return row.rating\n    \n#     elif row.series == 'X1':\n#         row.rating = 8.7\n#         return row.rating\n    \n#     elif row.series == '3ER':\n#         row.rating = 8.7\n#         return row.rating\n    \n#     else:\n#         row.rating = '0'\n#         return row.rating\n  \n \n# new_big_df['rating'] = new_big_df.apply(lambda row: make_car_rating(row), axis=1)\n# new_big_df['rating'] = new_big_df['rating'].astype('float')","6d1650d1":"# col_info(new_big_df.rating)","1359c8af":"new_big_df = new_big_df.drop('series', axis=1)","d6fb28c2":"new_big_df = new_big_df.drop('model_date_begin', axis=1)","73a67e42":"new_big_df.drop(['covid'], axis=1, inplace=True,)","da234b7e":"new_big_df.info()","715d997c":"new_big_df['name'] = new_big_df.name.apply(lambda x: x.replace('i', '').replace('d', ''))","0d3f2350":"new_big_df.sample(15)","101de0c1":"cat_features_ids = np.where(new_big_df.dtypes == object)[0].tolist()\n\ncat_features_ids","79615e95":"categorical_features_names = ['body_type', 'color', 'fuel_type', 'name', 'vehicle_transmission', 'mileage', 'gear_type',\n                              'steering_wheel',  'technical_passport', 'car_age', 'mileage_per_year', 'model_age', 'luxury_tax']","15b89a89":"new_big_df.info()","cda6b940":"for column in categorical_features_names:\n    dummies_train = pd.get_dummies(new_big_df[column], prefix = new_big_df[column].name)\n\n    # \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u0441\u0442\u043e\u043b\u0431\u0435\u0446 \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c dummies\n    new_big_df = new_big_df.drop(new_big_df[column].name, axis=1).join(dummies_train)\n","31f0876b":"new_big_df.to_csv('new_big_df.csv', index=False)  ","a8b754cf":"new_big_df['price']","da98e167":"VAL_SIZE   = 0.33   # 33%\nN_FOLDS    = 5\n\n# CATBOOST\nITERATIONS = 2000\nLR         = 0.1\n\n# RANDOM_SEED\nRANDOM_SEED = 42","42c5ae9d":"dataset_train = 'train'\ndataset_test = 'test'\n\ntrain_preproc = new_big_df.query('@dataset_train in dataset').drop(['dataset'], axis=1)\nX_sub = new_big_df.query('@dataset_test in dataset').drop(['dataset', 'price'], axis=1)\n\n\n# # \u0417\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u0435\u043c \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u043a\u043e\u043b\u043e\u043d\u043e\u043a\ncolumn_list = X_sub.columns\n\nX = train_preproc.drop(['price'], axis=1,)\n\n# # \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u043a\u043e\u043b\u043e\u043d\u043e\u043a \u043a\u0430\u043a \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438, \u0438\u043d\u0430\u0447\u0435 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u043d\u0435\u0432\u0435\u0440\u043d\u044b\u0435.\nX = X[column_list]\n\ny = train_preproc.price.values\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=VAL_SIZE, shuffle=True, random_state=RANDOM_SEED)","291c7f44":"def compute_meta_feature(model, X_train, X_test, y_train, cv):\n   \n    X_meta_train = np.zeros_like(y_train, dtype = np.float32)\n    for train_fold_index, predict_fold_index in cv.split(X_train):\n        X_fold_train, X_fold_predict = X_train[train_fold_index], X_train[predict_fold_index]\n        y_fold_train = y_train[train_fold_index]\n        \n        folded_model = clone(model)\n        folded_model.fit(X_fold_train, y_fold_train)\n        X_meta_train[predict_fold_index] = folded_model.predict(X_fold_predict)\n        \n    meta_model = clone(model)\n    meta_model.fit(X_train, y_train)\n    \n    X_meta_test = meta_model.predict_proba(X_test)[:,1]\n    \n    return X_meta_train, X_meta_test","77ef8a69":"cv = KFold(n_splits=N_FOLDS, shuffle=True)","67d6d04b":"# 1 - Catboost\n\ncat_features_ids = np.where(X.dtypes == object)[0].tolist()\n\nX_meta_train_features = []\nX_meta_test_features = []\n\nmodel = CatBoostRegressor(iterations = ITERATIONS,\n                          learning_rate = LR,\n                          random_seed = RANDOM_SEED,\n                          eval_metric='MAPE',\n                          custom_metric=['R2', 'MAE'],\n                          loss_function = 'RMSE'\n                         )\n\nX_meta_train = np.zeros_like(y, dtype = np.float32)\nX_meta_test = np.zeros(len(X_sub), dtype = np.float32)\nfor train_fold_index, predict_fold_index in cv.split(X):\n    X_fold_train, X_fold_predict = X.iloc[train_fold_index], X.iloc[predict_fold_index]\n    y_fold_train = y[train_fold_index]\n\n    folded_model = clone(model)\n    folded_model.fit(X_fold_train, y_fold_train,\n                     cat_features=cat_features_ids,\n                     eval_set=(X_test, y_test),\n                     verbose_eval=1000,\n                     use_best_model=True,\n                     plot=False\n)\n    X_meta_train[predict_fold_index] = folded_model.predict(X_fold_predict)\n    X_meta_test += folded_model.predict(X_sub)\n\nX_meta_test = X_meta_test \/ N_FOLDS\n\nX_meta_train_features.append(X_meta_train)\nX_meta_test_features.append(X_meta_test)\n\nprint(model.get_best_score())","1f490711":"# 2 - RandomForestRegressor\n\nmodel = RandomForestRegressor(n_estimators=400, random_state=42)\n\nX_meta_train = np.zeros_like(y, dtype = np.float32)\nX_train_num = X\nX_sub_num = X_sub\n\nfor train_fold_index, predict_fold_index in cv.split(X_train_num):\n    X_fold_train, X_fold_predict = X_train_num.iloc[train_fold_index], X_train_num.iloc[predict_fold_index]\n    y_fold_train = y[train_fold_index]\n\n    folded_model = clone(model)\n    folded_model.fit(X_fold_train, y_fold_train)\n    X_meta_train[predict_fold_index] = folded_model.predict(X_fold_predict)\n\nmeta_model = clone(model)\nmeta_model.fit(X_train_num, y)\n\nX_meta_test = meta_model.predict(X_sub_num)\n\nX_meta_train_features.append(X_meta_train)\nX_meta_test_features.append(X_meta_test)","ca8e9376":"# 3 LinearRegression\n\nmodel = LinearRegression(normalize = True)\n\nX_meta_train = np.zeros_like(y, dtype = np.float32)\n\nfor train_fold_index, predict_fold_index in cv.split(X_train_num):\n    X_fold_train, X_fold_predict = X_train_num.iloc[train_fold_index], X_train_num.iloc[predict_fold_index]\n    y_fold_train = y[train_fold_index]\n\n    folded_model = clone(model)\n    folded_model.fit(X_fold_train, y_fold_train)\n    X_meta_train[predict_fold_index] = folded_model.predict(X_fold_predict)\n\nmeta_model = clone(model)\nmeta_model.fit(X_train_num, y)\n\nX_meta_test = meta_model.predict(X_sub_num)\n\nX_meta_train_features.append(X_meta_train)\nX_meta_test_features.append(X_meta_test)","17f19cea":"stacked_features_train = np.vstack(X_meta_train_features[:2]).T\nstacked_features_test = np.vstack(X_meta_test_features[:2]).T","478734f2":"final_model = LinearRegression()\nfinal_model.fit(stacked_features_train, y)","f80a79c6":"VERSION = 65","9b660b76":"sample_submission['price'] = np.floor(final_model.predict(stacked_features_test) \/ 10000) * 10000 \nsample_submission.to_csv(f'submission_stack_v{VERSION}.csv', index=False)\nsample_submission.head(10)","968f17d4":"from sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.metrics import r2_score\nfrom collections import defaultdict\nfrom sklearn.model_selection import KFold\n\n\ndef mean_absolute_percentage_error(y_true, y_pred): \n    y_true, y_pred = np.array(y_true), np.array(y_pred)\n    return np.mean(np.abs((y_true - y_pred) \/ y_true))\n\ndef print_regression_metrics(y_true, y_pred):\n    mse = mean_squared_error(y_true, y_pred)\n    rmse = np.sqrt(mse)\n    r2 = r2_score(y_true, y_pred)\n    mae = mean_absolute_error(y_true, y_pred)\n    mape = mean_absolute_percentage_error(y_true, y_pred)\n    print(f'RMSE = {rmse:.2f}, MAE = {mae:.2f}, R-sq = {r2:.2f}, MAPE = {mape:.2f} ')","c1c7ba1a":"def compute_meta_feature(clf, X_train, X_test, y_train, cv):\n    \"\"\"\n    Computes meta-features usinf the classifier cls\n    \n    :arg model: scikit-learn classifier\n    :arg X_train, y_train: training set\n    :arg X_test: testing set\n    :arg cv: cross-validation folding\n    \"\"\"\n    \n    X_meta_train = np.zeros_like(y_train, dtype = np.float32)\n    X_meta_test = np.zeros(len(X_test), dtype=np.float32)\n    for train_fold_index, predict_fold_index in cv.split(X_train):\n        X_fold_train, X_fold_predict = X_train[train_fold_index], X_train[predict_fold_index]\n        y_fold_train = y_train[train_fold_index]\n        \n        folded_clf = clone(clf)\n        folded_clf.fit(X_fold_train, y_fold_train)\n            \n        \n        X_meta_train[predict_fold_index] = folded_clf.predict(X_fold_predict)\n        \n        print_regression_metrics(X_meta_train[predict_fold_index], y_train[predict_fold_index])\n        X_meta_test += folded_clf.predict(X_test)\n    \n    n = cv.n_splits\n    X_meta_test = X_meta_test \/ n\n    \n    return X_meta_train, X_meta_test","e27a9b71":"def generate_meta_features(regressors, X_train, X_test, y_train, cv):\n   \n    features = [\n        compute_meta_feature(clf, X_train, X_test, y_train, cv)\n        for clf in tqdm(regressors)\n    ]\n    \n    stacked_features_train = np.stack([\n        features_train for features_train, features_test in features\n    ], axis=-1)\n\n    stacked_features_test = np.stack([\n        features_test for features_train, features_test in features\n    ], axis=-1)\n    \n    return stacked_features_train, stacked_features_test","82d5c9e0":"cv = KFold(n_splits=N_FOLDS, shuffle=True, random_state=42)\n\ndef compute_metric(clf, X_train=X_train, y_train=y_train, X_test=X_test):\n    clf.fit(X_train, y_train)\n    y_test_pred = clf.predict(X_test)\n    return print_regression_metrics(y_test, y_test_pred)","227999e3":"from sklearn.base import clone\n\nfrom sklearn.preprocessing import StandardScaler\n# \u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435:\nscaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.fit_transform(X_test)\ntest = scaler.fit_transform(X_sub)\n\nstacked_features_train, stacked_features_test = generate_meta_features([\n    RandomForestRegressor(n_estimators=100, random_state=RANDOM_SEED),\n    BaggingRegressor(ExtraTreesRegressor(n_estimators=100, random_state=RANDOM_SEED)),\n    CatBoostRegressor(loss_function = 'MAE',\n                         eval_metric = 'MAPE',\n                         learning_rate=0.005,\n                         iterations=4500,\n                         l2_leaf_reg=2,\n                         depth=6,\n                         bootstrap_type = 'Bayesian',\n                         random_seed=42,\n                         od_type='Iter',\n                         od_wait=100)\n    ], X_train, test, y_train, cv)\n\n\n#\u0421\u0442\u0440\u043e\u0438\u043c \u043c\u0435\u0442\u0430-\u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\n\nfinal_model = LinearRegression()\nfinal_model.fit(stacked_features_train, y_train)","5dcbfc5a":"VERSION = 42","9851728c":"y_pred = np.round((final_model.predict(stacked_features_test)\/1000))*1000\n\nsample_submission['price'] =  y_pred\nsample_submission.to_csv(f'submission_stack_v{VERSION}.csv', index=False)\n\nsample_submission.head(10)","032cbc75":"dataset_train = 'train'\ndataset_test = 'test'\n\ntrain_data = new_big_df.query('@dataset_train in dataset').drop(['dataset'], axis=1)\ntest_data = new_big_df.query('@dataset_test in dataset').drop(['dataset', 'price'], axis=1)\n\n\n# # \u0417\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u0435\u043c \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u043a\u043e\u043b\u043e\u043d\u043e\u043a\ncolumn_list = test_data.columns\n\nX_train = train_data.drop(['price'], axis=1)\n\n# # \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u043a\u043e\u043b\u043e\u043d\u043e\u043a \u043a\u0430\u043a \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438, \u0438\u043d\u0430\u0447\u0435 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u043d\u0435\u0432\u0435\u0440\u043d\u044b\u0435.\nX_train = X_train[column_list]\nX_test = test_data\ny = np.log(train_data.price.values)","3756e155":"import datetime as dt\nfrom vecstack import stacking\n\nfrom sklearn.linear_model import LinearRegression \nfrom sklearn.ensemble import ExtraTreesRegressor    \nfrom catboost import CatBoostRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.neighbors import KNeighborsRegressor\n\n\ndef mape(y_true, y_pred):\n    return np.mean(np.abs((y_pred-y_true)\/y_true))\n\n\n# Configure models\nRANDOM_SEED = 42\n\n\nlr = LinearRegression(normalize=True, n_jobs=-1)\n\netc = ExtraTreesRegressor(n_estimators=500,  n_jobs=-1,\n                          random_state=RANDOM_SEED)  # max_depth=5,\ncatb = CatBoostRegressor(iterations=3500,\n                                 learning_rate=0.05,\n                                 random_seed=RANDOM_SEED,\n                                 eval_metric='MAPE',\n                                 verbose = 500\n                                 )\nrf = RandomForestRegressor(random_state=RANDOM_SEED, n_jobs=-1,\n                           n_estimators=500)  # , max_depth=3\n\nknn = KNeighborsRegressor(n_neighbors=5, weights='uniform', algorithm='auto', leaf_size=30, p=2, metric='minkowski', n_jobs=-1)\n\n\nprint(\"Finished setting up regressors at \", dt.datetime.now())\n\n# Initialize 1-st level models.\nmodels = [catb, rf, etc, knn]\n\n# Compute stacking features\nS_train, S_test = stacking(models, X_train, y, X_test,\n                           regression=True, metric=mape, n_folds=4,\n                           shuffle=True, random_state=RANDOM_SEED, verbose=2)\n\n# Initialize 2-nd level model\nmodel = lr\n\n# Fit 2-nd level model\nmodel = model.fit(S_train, y)\n\n# Predict\ny_test_pred = np.exp(model.predict(S_test))","5cce3576":"VERSION = 80","46783cdf":"sample_submission['price'] = y_test_pred\n# sample_submission['price'] = sample_submission['price'].apply(lambda x: round(x\/1000)*1000)\nsample_submission.to_csv(f'submission_stack_v{VERSION}.csv', index=False)\nsample_submission.head(10)","927f8b6a":"import matplotlib.pyplot as plt\n\nnum=new_train.select_dtypes(exclude='object')\nnumcorr=num.corr()\nf,ax=plt.subplots(figsize=(17,1))\nsns.heatmap(numcorr.sort_values(by=['price'], ascending=False).head(1), cmap='Blues')\nplt.title(\" Numerical features correlation with the price\", weight='bold', fontsize=18)\nplt.xticks(weight='bold')\nplt.yticks(weight='bold', color='dodgerblue', rotation=0)\n\n\nplt.show()","feca6d0c":"num=numcorr['price'].sort_values(ascending=False).head(10).to_frame()\n\ncm = sns.light_palette(\"cyan\", as_cmap=True)\n\ns = num.style.background_gradient(cmap=cm)\ns","331c8d02":"# \u0412\u0441\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0442\u0438\u043f\u044b \u0442\u043e\u043f\u043b\u0438\u0432\u0430\nfuel_type_uniq = new_train['fuel_type'].unique()\nfuel_type_uniq","59a93290":"# \u0424\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 dummy- \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u0434\u043b\u044f \u0442\u043e\u043f\u043b\u0438\u0432\u0430\nnew_train_extend = pd.concat([new_train, \n                              pd.get_dummies(new_train['fuel_type'])], \n                             axis=1)","669d2489":"# \u041a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442\u044b \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0438\nfuel_type_corr = new_train_extend[fuel_type_uniq].corr()\nfuel_type_corr","0b3925a2":"# \u0422\u0435\u043f\u043b\u043e\u0432\u0430\u044f \u043a\u0430\u0440\u0442\u0430\nsns.set(font_scale=1)\nplt.subplots(figsize=(10, 10))\nsns.heatmap(fuel_type_corr, square=True, \n           annot=True, fmt=\".1f\", linewidths=0.1, cmap=\"RdBu\")","ca5c7d4e":"### Drop fuel_type_gasoline\nnew_big_df.drop('fuel_type_gasoline', axis=1, inplace=True)","98a740b4":"fig = plt.figure(figsize=(7, 7))\nplt.grid(True)\nplt.title('Price')\nsns.boxplot(x = new_train['price'])","5b169632":"Q1 =  new_train['price'].quantile(0.25)\nQ3 = new_train['price'].quantile(0.75)\nIQR = Q3 - Q1\n\nnew_train.query(\"@Q1 - 1.5*@IQR < price < @Q3 + 1.5*@IQR\").boxplot(column=\"price\")","e78ed626":"outliers_price = outliers_iqr_long(new_train.price)\n\nprint(len(outliers_price))","733b183d":"col_info(new_train.price)","b641ccbd":"new_train_corr = new_train.corr()\nnew_train_corr","ba1bd57c":"# new_train_corr.style.background_gradient(cmap='coolwarm')\nnew_train_corr.style.background_gradient(cmap='coolwarm').set_precision(2)","55cae2e8":"# Create correlation matrix\ncorr_matrix = new_train.corr().abs()\n\n# Select upper triangle of correlation matrix\nupper = corr_matrix.where(np.triu(np.ones(corr_matrix.shape), k=1).astype(np.bool))\n\n# Find features with correlation greater than 0.95\nto_drop = [column for column in upper.columns if any(upper[column] > 0.95)]\n\nprint(to_drop)\n\n# Drop features \n# new_big_df.drop(to_drop, axis=1, inplace=True)","b45013c3":"for c in new_train.columns[:-1]:\n    plt.figure(figsize=(20,5))\n    plt.title(\"{} vs. \\nprice\".format(c),fontsize=16)\n    plt.scatter(x=new_train[c],y=new_train['price'],color='blue',edgecolor='k')\n    plt.grid(True)\n    plt.xlabel(c,fontsize=14)\n    plt.ylabel('\u0421\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c', fontsize=14)\n\n    plt.show()","71b8f85f":"new_big_df.columns.tolist()","ec30c1f0":"new_big_df[['price', 'name']].groupby('name').sum()","6c18086c":"new_big_df[new_big_df['name'] == '']","1989d2ea":"new_big_df['name'].value_counts()","272b89d5":"new_big_df['name'].unique()","5771ceb0":"col_info(new_big_df.price)","15114667":"# \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0447\u0438\u0441\u0442\u043a\u0438 \u043e\u0442 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\ndef delete_outliers_iqr(df, column):\n    # \u0421\u0447\u0438\u0442\u0430\u0435\u043c \u043f\u0435\u0440\u0432\u044b\u0439 \u0438 \u0442\u0440\u0435\u0442\u0438\u0439 \u043a\u0432\u0430\u0440\u0442\u0438\u043b\u0438\n    first_quartile = df[column].describe()['25%']\n    third_quartile = df[column].describe()['75%']\n\n    # IQR (\u041c\u0435\u0436\u043a\u0432\u0430\u0440\u0442\u0438\u043b\u044c\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0430\u0445)\n    iqr = third_quartile - first_quartile\n\n    print(first_quartile, third_quartile, iqr)\n\n    # \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u0442\u043e, \u0447\u0442\u043e \u0432\u044b\u043f\u0430\u0434\u0430\u0435\u0442 \u0437\u0430 \u0433\u0440\u0430\u043d\u0438\u0446\u044b IQR\n    #     df_tmp = df.copy()\n    df = df[(df[column] > (first_quartile - 3 * iqr)) &\n                (df[column] < (third_quartile + 3 * iqr))]\n\n    df[column].hist()\n    df[column].describe()\n\n    df = df.loc[df[column].between(first_quartile - 1.5*iqr, third_quartile + 1.5*iqr)]\n    df.info()","697acfd1":"var = 'car_age'\ndata = pd.concat([new_train['price'], new_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(20, 10))\nfig = sns.boxplot(x=var, y=\"price\", data=data)\nfig.axis(ymin=0, ymax=165);\nplt.xticks(rotation=90);","e55f98ac":"#plot graph of feature importances for better visualization\n\nplt.figure(figsize = (12,8))\nfeat_importances = pd.Series(etc.feature_importances_, index=X.columns)\nfeat_importances.nlargest(20).plot(kind='barh')\nplt.show()","fe5c0e0a":"\u0420\u0435\u0447\u044c \u0438\u0434\u0435\u0442 \u043e \u0442\u0438\u043f\u0435 \u043f\u0440\u0438\u0432\u043e\u0434\u0430. \u041e\u043a. \u0417\u0430\u043c\u0435\u043d\u0438\u043c \u043d\u0430 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u0438 \u043f\u043e\u0439\u0434\u0435\u043c \u0434\u0430\u043b\u044c\u0448\u0435. P.S. \u0418\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u043e, \u0447\u0442\u043e \u0443 BWM \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043d\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0441 \u043f\u0435\u0440\u0435\u0434\u043d\u0438\u043c \u043f\u0440\u0438\u0432\u043e\u0434\u043e\u043c. \u0414\u043b\u044f \u0441\u0435\u0431\u044f \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u043e. \u041a\u0430\u043a-\u0442\u043e \u043d\u0435 \u0437\u0430\u0434\u0443\u043c\u044b\u0432\u0430\u043b\u0441\u044f \u043e\u0431 \u044d\u0442\u043e\u043c. \u0421\u0430\u043c \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u0435\u0437\u0434\u0438\u043b \u043d\u0430 \u044d\u0442\u043e\u0439 \u043c\u0430\u0440\u043a\u0435 \u0438 \u043d\u0435 \u0431\u044b\u043b \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u043c.","9d629e7d":"\u0414\u043b\u044f \u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0434\u043b\u044f \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u0441 train \u0432 \u0441\u043f\u0438\u0441\u043e\u043a (\u0441\u0435\u0439\u0447\u0430\u0441 \u043e\u043d \u0438\u0434\u0435\u0442 \u0441\u043f\u043b\u043e\u0448\u043d\u044b\u043c \u0442\u0435\u043a\u0441\u0442\u043e\u043c). \u041d\u0430\u043f\u0438\u0448\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e.","468c6214":"\u041f\u0440\u0438 \u044d\u0442\u043e\u043c, \u043e\u0442\u043c\u0435\u0447\u0430\u0435\u0442 \u041a\u0438\u0440\u0438\u043b\u043b \u0412\u043e\u0442\u044f\u043a\u043e\u0432, \u0432 \u043f\u0440\u0435\u043c\u0438\u0443\u043c-\u0441\u0435\u0433\u043c\u0435\u043d\u0442\u0435 \u043f\u043e \u0438\u0442\u043e\u0433\u0430\u043c II \u043a\u0432\u0430\u0440\u0442\u0430\u043b\u0430 2020 \u0433\u043e\u0434\u0430 \u043d\u0430\u0431\u043b\u044e\u0434\u0430\u044e\u0442\u0441\u044f \u0442\u0440\u0435\u043d\u0434\u044b, \u043f\u0440\u043e\u0442\u0438\u0432\u043e\u043f\u043e\u043b\u043e\u0436\u043d\u044b\u0435 \u0442\u0435\u043d\u0434\u0435\u043d\u0446\u0438\u044f\u043c \u0432\u0442\u043e\u0440\u0438\u0447\u043d\u043e\u0433\u043e \u0430\u0432\u0442\u043e\u0440\u044b\u043d\u043a\u0430 \u0432 \u0446\u0435\u043b\u043e\u043c. \u0421\u043f\u0440\u043e\u0441 \u043d\u0430 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438 \u043f\u0440\u0435\u043c\u0438\u0443\u043c-\u0441\u0435\u0433\u043c\u0435\u043d\u0442\u0430 \u0432 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0435 \u043e\u0442 \u0442\u0440\u0435\u0445 \u0434\u043e \u043f\u044f\u0442\u0438 \u043b\u0435\u0442 \u0432 \u0420\u043e\u0441\u0441\u0438\u0438 \u0432\u044b\u0440\u043e\u0441 \u043d\u0430 17 \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u043e\u0432 \u043f\u043e \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044e \u0441 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u043c \u043a\u0432\u0430\u0440\u0442\u0430\u043b\u043e\u043c \u0438 \u043d\u0430 16 \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u043e\u0432 - \u043f\u043e \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044e \u0441\u043e II \u043a\u0432\u0430\u0440\u0442\u0430\u043b\u043e\u043c 2019 \u0433\u043e\u0434\u0430. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c, \u043a\u0430\u043a \u0432\u044b\u044f\u0441\u043d\u0438\u043b\u0438 \u044d\u043a\u0441\u043f\u0435\u0440\u0442\u044b \u0410\u0432\u0438\u0442\u043e \u0410\u0432\u0442\u043e, \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043f\u043e \u044d\u0442\u043e\u043c\u0443 \u0441\u0435\u0433\u043c\u0435\u043d\u0442\u0443 \u0437\u0430 II \u043a\u0432\u0430\u0440\u0442\u0430\u043b, \u043d\u0430\u043f\u0440\u043e\u0442\u0438\u0432, \u0441\u043d\u0438\u0437\u0438\u043b\u043e\u0441\u044c - \u043d\u0430 2 \u0438 12 \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u043e\u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e. \u0421\u0440\u0435\u0434\u043d\u044f\u044f \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u043f\u0440\u0435\u043c\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u043d\u044b\u0445 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439 \u0432 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0435 \u043e\u0442 \u0442\u0440\u0435\u0445 \u0434\u043e \u043f\u044f\u0442\u0438 \u043b\u0435\u0442 \u0432 \u0420\u043e\u0441\u0441\u0438\u0438 \u043f\u043e \u0438\u0442\u043e\u0433\u0430\u043c II \u043a\u0432\u0430\u0440\u0442\u0430\u043b\u0430 \u0441\u043e\u0441\u0442\u0430\u0432\u0438\u043b\u0430 3,473 \u043c\u0438\u043b\u043b\u0438\u043e\u043d\u0430 \u0440\u0443\u0431\u043b\u0435\u0439 - \u043d\u0430 12 \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u043e\u0432 \u0431\u043e\u043b\u044c\u0448\u0435, \u0447\u0435\u043c \u0433\u043e\u0434 \u043d\u0430\u0437\u0430\u0434, \u0438 \u043d\u0430 2 \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u0430 \u0431\u043e\u043b\u044c\u0448\u0435, \u0447\u0435\u043c \u0432 \u044f\u043d\u0432\u0430\u0440\u0435-\u043c\u0430\u0440\u0442\u0435.\n\nBMW - \u044d\u0442\u043e \u043f\u0440\u0435\u043c\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044c, \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0435\u0441\u043b\u0438 \u0435\u043c\u0443 3-5 \u043b\u0435\u0442. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u043d\u0430 \u0432\u0441\u0435 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043b\u0430\u0434\u0448\u0435 6 \u043b\u0435\u0442 (5 \u043b\u0435\u0442 \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e) \u0438 \u0441\u0442\u0430\u0440\u0448\u0435 2 \u043b\u0435\u0442 (3 \u0433\u043e\u0434\u0430 \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e) \u0443\u043c\u0435\u043d\u044c\u0448\u0443 \u0441\u0443\u043c\u043c\u0443 \u043d\u0430 2% (\u0442\u043e \u0435\u0441\u0442\u044c \u0432 \u043d\u0430\u0447\u0430\u043b\u0435 \u0433\u043e\u0434\u0430, \u043a\u043e\u0433\u0434\u0430 \u043f\u0430\u0440\u0441\u0438\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f, \u0446\u0435\u043d\u044b \u0443\u0441\u043b\u043e\u0432\u043d\u043e \u0431\u044b\u043b\u0438 \u043d\u0438\u0436\u0435 \u043d\u0430 2%)","7c995b6a":"### Submissions blend","fa486024":"\u0414\u043b\u044f \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430 \u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u044e \u0441\u0442\u043e\u043b\u0431\u0446\u044b \u043d\u0430 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u043c \u0438 \u0432 \u043e\u0434\u043d\u043e\u043c \u0441\u0442\u0438\u043b\u0435 (\u043c\u043d\u0435 \u043f\u0440\u0438\u0432\u044b\u0447\u043d\u0435\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u0442\u044c \u0441\u043b\u043e\u0432\u0430 \u043d\u0438\u0436\u043d\u0438\u043c \u043f\u043e\u0434\u0447\u0435\u0440\u043a\u0438\u0432\u0430\u043d\u0438\u0435\u043c)","d40929b6":"### name - \u043f\u043e \u0445\u043e\u0434\u0443, \u044d\u0442\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0430\u0432\u0442\u043e\u043c\u043e\u0434\u0438\u043b\u044f (\u043c\u043e\u0434\u0435\u043b\u0438)","1c0194a8":"\u0422\u0430\u043a, \u043d\u0443, \u043a\u043e\u043b\u043e\u043d\u043a\u0443 id \u0442\u043e\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u0443\u0434\u0430\u043b\u0438\u0442\u044c.","780c726d":"\u041f\u0440\u0438\u0432\u0435\u0443 \u043a \u0442\u0438\u043f\u0443 int, \u0447\u0442\u043e\u0431\u044b \u0441\u043e\u0433\u043b\u0430\u0441\u043e\u0432\u0430\u0442\u044c \u0441 \u0442\u0440\u0435\u0439\u043d\u043e\u043c.","246a1657":"### body_type - \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u0447\u0442\u043e \u0442\u0430\u043c \u0441 \u043a\u0443\u0437\u043e\u0432\u043e\u043c","4e279a9d":"\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u044e \u0441\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438 \u043f\u043e \u0438\u0445 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0443 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u0438 \u043a\u0430\u043a\u0438\u0445-\u0442\u043e \u0441\u0432\u043e\u0438\u0445 \u043b\u0438\u0447\u043d\u044b\u0445 \u0441\u0443\u0431\u044a\u0435\u043a\u0442\u0438\u0432\u043d\u044b\u0445 \u043e\u0449\u0443\u0449\u0435\u043d\u0438\u0439","a61d2980":"### description - \u043f\u043e \u0445\u043e\u0434\u0443, \u044d\u0442\u043e \u043a\u0430\u043a\u043e\u0435-\u0442\u043e \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f; \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u044d\u0442\u043e","769d7429":"## color","0a953bd3":"\u0410, \u043f\u043e\u043d\u044f\u043b. \u042d\u0442\u043e \u0436\u0435 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044c. \u0423 \u043d\u0435\u0433\u043e \u043d\u0435\u0442 \u043e\u0431\u044a\u0435\u043c\u0430. \u041c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0434\u043b\u044f \u0442\u0430\u043a\u0438\u0445 \u0442\u0438\u043f\u043e\u0432 \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f \u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043e\u0431\u044a\u0435\u043c 0? \u0422\u0430\u043a \u0438 \u0441\u0434\u0435\u043b\u0430\u044e \u0434\u043e \u043f\u043e\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438.","fe14157a":"\u0410 price \u043f\u0440\u043e\u0441\u0442\u043e \u043f\u0435\u0440\u0435\u0432\u0435\u0434\u0443 \u0432 int","e5992732":"### model_date_begin - \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0433\u043e\u0434 \u043c\u043e\u0434\u0435\u043b\u0438 (\u043c\u0430\u0440\u043a\u0438) \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f","e3c36db6":"\u041f\u043e\u043a\u0430 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f \u0433\u0440\u043e\u043c\u043e\u0437\u0434\u043a\u0430\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0430\u0441\u044c. \u041c\u043d\u0435 \u043e\u043d\u0430 \u043d\u0435 \u043d\u0440\u0430\u0432\u0438\u0442\u0441\u044f. \u041f\u043e\u0434\u0443\u043c\u0430\u044e, \u043a\u0430\u043a \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043f\u0440\u043e\u0449\u0435. \u041d\u0430 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u0442\u0430\u043a \u043f\u0443\u0441\u0442\u044c \u0431\u0443\u0434\u0435\u0442.","29f94810":"\u0412 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f\u0445 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439 (\u043c\u0430\u0440\u043a\u0438) \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u043b \u0441\u0442\u0440\u0430\u043d\u043d\u0443\u044e \u0448\u0442\u0443\u043a\u0443 - \u043a\u0430\u043a\u0430\u044f-\u0442\u043e \u0433\u0440\u0443\u043f\u043f\u0430 \u0441 \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u043c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c. \u0411\u0443\u0434\u0443 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c \u044d\u0442\u043e.","06995556":"### engine_power","0b729b41":"\u0421 \u0444\u0435\u0432\u0440\u0430\u043b\u044f \u043a\u0443\u0440\u0441 \u0434\u043e\u043b\u043b\u0430\u0440\u0430 \u043f\u043e\u0434\u0440\u043e\u0441 \u0441 ~64 \u0434\u043e ~70. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442 0.91 \u0434\u043b\u044f \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0433\u043e \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u044f \u0446\u0435\u043d\u044b. \u042f \u0442\u0430\u043a \u043f\u043e\u043d\u0438\u043c\u0430\u044e, \u0447\u0442\u043e \u043d\u0430 \u0440\u0435\u0430\u043b\u044c\u043d\u043e\u043c \u043f\u0440\u043e\u0434\u0430\u043a\u0448\u043d\u0435 \u043d\u0430\u0434\u043e \u0431\u044b \u043f\u0430\u0440\u0441\u0438\u0442\u044c \u043a\u0430\u0436\u0434\u044b\u0439 \u0434\u0435\u043d\u044c (\u0438\u043b\u0438 \u043f\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438) \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043a\u0443\u0440\u0441\u0430 \u0438 \u0432\u043d\u043e\u0441\u0438\u0442\u044c \u043a\u043e\u0440\u0440\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u043a\u0443 \u0432 \u0446\u0435\u043d\u0443. \u041d\u043e \u0441 \u0434\u0440\u0443\u0433\u043e\u0439 \u0441\u0442\u043e\u0440\u043e\u043d\u044b \u0441\u0435\u0439\u0447\u0430\u0441 \u043c\u044b \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043f\u043e \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0431\u044b\u043b\u0430 \u0441\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0430 \u0435\u0449\u0435 \u0432 \u0444\u0435\u0432\u0440\u0430\u043b\u0435. \u0410 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043f\u043e \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0446\u0435\u043d\u0430\u043c.","f29cebd0":"\u0422\u0443\u0442 \u0442\u043e\u0436\u0435 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u0448\u0438\u0442 \u0438 \u0433\u043e\u0434, \u0438 \u043c\u0435\u0441\u044f\u0446. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u0440\u0430\u0437\u0434\u0435\u043b\u044e \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u0437\u0430\u043f\u0438\u0441\u044c \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 \u043d\u0430 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438, \u043f\u043e\u0442\u043e\u043c \u0433\u043e\u0434 \u0443\u043c\u043d\u043e\u0436\u0443 \u043d\u0430 12 \u0438 \u043f\u0440\u0438\u043f\u043b\u044e\u0441\u0443\u044e \u043a \u043c\u0435\u0441\u044f\u0446\u0430\u043c. \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u0441\u044f \u0432 \u0438\u0442\u043e\u0433\u0435 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043c\u0435\u0441\u044f\u0446\u0435\u0432 \u0431\u044b\u043b\u043e \u0432\u043e \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u0438.","44472c22":"\u0418\u0437 \u044d\u0442\u043e\u0433\u043e \u043c\u044b \u0432\u0438\u0434\u0438\u043c, \u0447\u0442\u043e \u0432 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0438 \u0437\u0430\u0448\u0438\u0442\u044b \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u044c \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f, \u043e\u0431\u044a\u0435\u043c, \u043a\u043e\u0440\u043e\u0431\u043a\u0430, \u0442\u0438\u043f \u043f\u0440\u0438\u0432\u043e\u0434\u0430, \u0442\u0438\u043f \u0442\u043e\u043f\u043b\u0438\u0432\u0430. \u0422\u043e \u0435\u0441\u0442\u044c \u044d\u0442\u043e \u0432\u0441\u0435 \u043c\u043e\u0436\u043d\u043e \u043e\u0442\u0441\u0435\u0447\u044c, \u0447\u0442\u043e\u0431\u044b \u043d\u0430\u0439\u0442\u0438 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u0438 \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0435\u0433\u043e \u0432 \u0434\u0430\u043d\u043e\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0435. \u041d\u043e \u0432\u0441\u0435 \u0440\u0430\u0432\u043d\u043e \u0435\u0441\u0442\u044c \u0442\u0430\u043a\u0438\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f, \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0432\u043d\u0430\u0447\u0430\u043b\u0435 \u041d\u0415 \u0443\u043a\u0430\u0437\u0430\u043d\u0430 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u0430\u044f \u043c\u043e\u0434\u0435\u043b\u044c \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f, \u0430 \u043f\u0440\u043e\u0441\u0442\u043e \u0438\u0434\u0443\u0442 \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u0438 \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f, \u043e\u0431\u044a\u0435\u043c\u0430, \u043a\u043e\u0440\u043e\u0431\u043a\u0438, \u0442\u0438\u043f\u0430 \u043f\u0440\u0438\u0432\u043e\u0434\u0430, \u0442\u0438\u043f\u0430 \u0442\u043e\u043f\u043b\u0438\u0432\u0430. \u041a\u043e\u0435-\u043a\u0430\u043a\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u043a\u0430\u043a \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043e\u0434\u043d\u043e\u0437\u043d\u0430\u0447\u043d\u044b\u043c \u043d\u0430\u0448\u0435\u043b. \u0415\u0441\u0442\u044c \u043f\u0430\u0440\u0430 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 - \u0441\u0434\u0435\u043b\u0430\u044e \u0434\u043b\u044f \u043d\u0438\u0445 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u0430\u043a\u043e\u0435-\u0442\u043e noname. \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043a\u0430\u043a \u044d\u0442\u043e \u043f\u043e\u0432\u043b\u0438\u044f\u0435\u0442 \u043d\u0430 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u0435 \u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0441\u044f \u043b\u0438 \u0442\u0430\u043a \u0436\u0435 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u0443\u0434\u0443\u0442 \u0441\u043f\u0430\u0440\u0441\u0435\u043d\u044b.","7469c4a2":"\u0422\u0430\u043a, \u0445\u043e\u0440\u043e\u0448\u043e. \u0423\u0436\u0435 \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u043f\u043e\u043d\u044f\u0442\u043d\u043e, \u0447\u0442\u043e \u043f\u0435\u0440\u0432\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0432 engine_power - \u044d\u0442\u043e \u043b\u043e\u0448\u0430\u0434\u0438\u043d\u044b\u0435 \u0441\u0438\u043b\u044b. \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u043e\u0435 - \u044d\u0442\u043e \u043a\u0430\u043a\u0430\u044f-\u0442\u043e \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f. \u044d\u0442\u043e \u0432\u0430\u0436\u043d\u043e, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043d\u0443\u0436\u043d\u043e \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e \u0432\u044b\u0447\u043b\u0435\u043d\u0438\u0442\u044c \u044d\u0442\u043e \u0432 \u043f\u0440\u0438\u0437\u043d\u0430\u043a.","349636c8":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u0435\u0441\u0442\u044c \u043b\u0438 \u0443 \u043d\u0435\u0433\u043e \u0433\u0434\u0435-\u0442\u043e \u043e\u0431\u044a\u0435\u043c \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f","44d1527d":"\u0414\u0430\u043d\u043d\u044b\u0435 \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043a\u0440\u0430\u0439\u043d\u0435 \u043d\u0435 \u0443\u0434\u043e\u0431\u043d\u043e \u0447\u0438\u0442\u0430\u044e\u0442\u0441\u044f. \u0427\u0443\u0442\u044c \u043f\u043e\u0437\u0436\u0435 \u0437\u0430\u0439\u043c\u0443\u0441\u044c \u0440\u0435\u0444\u0430\u043a\u0442\u043e\u0440\u0438\u043d\u0433\u043e\u043c.","0a25f649":"\u041f\u0440\u0438\u0432\u0435\u0434\u0435\u043c \u043a \u043e\u0434\u043d\u043e\u043c\u0443 \u0432\u0438\u0434\u0443 \u0441 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u043e\u0439","ebea2318":"\u0421\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c \u043f\u0440\u0438\u0448\u0435\u043b \u043a \u0432\u044b\u0432\u043e\u0434\u0443, \u0447\u0442\u043e description_score \u0442\u043e\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u0443\u0434\u0430\u043b\u0438\u0442\u044c, \u0442\u0430\u043a \u043a\u0430\u043a \u0432 \u0442\u0440\u0435\u0439\u043d\u0435 \u0443 \u043c\u0435\u043d\u044f \u043d\u0435\u0442 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f, \u0442\u043e \u043f\u043e\u043a\u0430 \u043d\u0435 \u0431\u0443\u0434\u0443 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u044d\u0442\u043e \u0438 \u043d\u0430 \u0442\u0435\u0441\u0442\u0435. \u0410 \u0442\u0430\u043c \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c.","b778dc37":"\u041c\u0435\u0434\u0438\u0430\u043d\u043d\u044b\u0439 \u0432\u043e\u0437\u0440\u0430\u0441\u0442 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f - 7 \u043b\u0435\u0442. \u041d\u0443 \u043e\u043a. \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u0447\u0442\u043e \u043d\u0430\u043c \u044d\u0442\u043e \u0434\u0430\u0441\u0442 \u0432 \u0431\u0443\u0434\u0443\u0449\u0435\u043c.","fd21f441":"## Stacking Var.3","fb76f540":"### vehicle_transmission","8264359e":"\u0421\u0440\u0430\u0437\u0443 \u0441\u043e\u0437\u0434\u0430\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a \"\u043f\u0440\u043e\u0431\u0435\u0433 \u0432 \u0433\u043e\u0434\" \u0434\u043b\u044f \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438","56098207":"\u041e\u0442\u0441\u044e\u0434\u0430 \u0432\u044b\u0442\u0435\u043a\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044f - \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u0442\u044c \u0434\u0432\u0430 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430 (\u0442\u0440\u0435\u0439\u043d\u043e\u0432\u044b\u0439 \u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0439), \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0432 \u0432 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u043a\u043e\u043b\u043e\u043d\u043a\u0443 \"\u0426\u0435\u043d\u0430\" \u0441 \u043d\u0443\u043b\u0435\u0432\u044b\u043c\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438 (\u043f\u043e\u0441\u043b\u0435 \u043f\u0435\u0440\u0435\u0434 \u043f\u043e\u0434\u0430\u0447\u0435 \u0432 \u043c\u043e\u0434\u0435\u043b\u044c \u044f \u044d\u0442\u043e \u0443\u0434\u0430\u043b\u044e; \u0430 \u0434\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u043e\u0442\u0434\u0435\u043b\u0438\u0442\u044c \u0442\u0440\u0435\u0439\u043d \u043e\u0442 \u0442\u0435\u0441\u0442\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u044e \u043e\u0431\u0449\u0443\u044e \u043a\u043e\u043b\u043e\u043d\u043a\u0443. \u041d\u0443 \u0438 \u0434\u0430\u043b\u044c\u0448\u0435 \u0441\u043c\u043e\u0433\u0443 \u0441\u0434\u0435\u043b\u0430\u0442\u044c one-hot-encoding \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435.","ab846e35":"## covid","da262d8f":"\u041f\u043e\u043a\u0430 \u043d\u0435 \u0431\u0443\u0434\u0443 \u0434\u0435\u043b\u0430\u0442\u044c dummy \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435, \u0442\u0430\u043a \u043a\u0430\u043a CatBoost \u0438 \u0441\u0430\u043c \u044d\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u0441\u0434\u0435\u043b\u0430\u0442\u044c. \u0414\u043b\u044f \u0434\u0440\u0443\u0433\u0438\u0445 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u043e\u0432 \u0431\u0443\u0434\u0443 \u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0446\u0435\u043b\u0435\u0441\u043e\u043e\u0431\u0440\u0430\u0437\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u0437\u0436\u0435","cfd259b1":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u044e \u0434\u043b\u044f \u043d\u0430\u0447\u0430\u043b\u0430, \u0447\u0442\u043e \u0438\u0437 \u0441\u0435\u0431\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0442\u0435\u0441\u0442\u043e\u0432\u0430\u044f \u0432\u044b\u0431\u043e\u0440\u043a\u0430","57af8157":"\u0422\u0430\u043a \u043a\u0430\u043a \u0432 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u043c \u0432\u0441\u0435 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438 \u0440\u0430\u0441\u0442\u0430\u043c\u043e\u0436\u0435\u043d\u044b, \u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u044d\u0442\u043e\u0442 \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u0442\u0430\u043a \u043a\u0430\u043a \u043e\u043d \u043d\u0435 \u0438\u043c\u0435\u0435\u0442 \u043d\u0438\u043a\u0430\u043a\u043e\u0433\u043e \u0441\u043c\u044b\u0441\u043b\u0430","04c45535":"\u0414\u043b\u044f \u0447\u0430\u0441\u0442\u043d\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u044f \u043d\u0435 \u0441\u043b\u043e\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u0442\u044c \u0446\u0432\u0435\u0442\u0430 \u0447\u0435\u0440\u0435\u0437 \u0441\u043b\u043e\u0432\u0430\u0440\u044c. \u0410 \u0434\u043b\u044f \u043e\u0431\u0449\u0435\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u044f \u043a\u0430\u043a \u0431\u044b\u0442\u044c? \u041f\u043e\u043a\u0430 \u043d\u0435 \u044f\u0441\u043d\u043e. \u041d\u0443 \u043b\u0430\u0434\u043d\u043e. \u0421\u0434\u0435\u043b\u0430\u044e \u043f\u043e\u043a\u0430 \u0447\u0430\u0441\u0442\u043d\u044b\u0439 \u0441\u043b\u0443\u0447\u0430\u0439.","d08c69ee":"\u0421\u0434\u0435\u043b\u0430\u044e \u0442\u0435\u043f\u0435\u0440\u044c dummies-\u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435","0f264e65":"## body_type","2336d57e":"### state - \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u043e, \u0447\u0442\u043e \u044d\u0442\u043e?","9c6e04ce":"### model_age - \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0432\u043e\u0437\u0440\u0430\u0441\u0442 \u043c\u043e\u0434\u0435\u043b\u0438","3ca9ac2e":"\u0418\u0442\u043e\u0433\u043e \u0443 \u043d\u0430\u0441 277 \u0444\u0438\u0447\u0438 \u0441 \u0430\u0432\u0442\u043e.\u0440\u0443 \u0438 170 \u0438\u0437 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438. \u041c\u043e\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0438\u0437 \u044d\u0442\u0438\u0445 \u0437\u0430\u043f\u0438\u0441\u0435\u0439, \u043d\u043e \u044d\u0442\u043e \u0434\u043e\u0432\u043e\u043b\u044c\u043d\u043e \u0440\u0443\u0442\u0438\u043d\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430. \u0421\u0434\u0435\u043b\u0430\u0435\u043c \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u0432 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438 dummy-\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0438 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u043e\u0433\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0430, \u0432\u044b\u0431\u0435\u0440\u0435\u043c \u0441\u0430\u043c\u044b\u0435 \u0437\u043d\u0430\u0447\u0438\u043c\u044b\u0435 \u0444\u0438\u0447\u0438.","1776786e":"\u0418\u0442\u0430\u043a, \u0442\u0435\u043f\u0435\u0440\u044c \u0431\u0443\u0434\u0443 \u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u0438 \u0443\u0436\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0443\u0442\u0435\u043c \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f 2, 3 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432. \u041d\u0430 \u041a\u0430\u0433\u0433\u043b\u0435 \u044d\u0442\u043e \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u043b\u043e \u043a \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043c.","9942bdb3":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u043b \u0432 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u0435 - \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0435\u0441\u0442\u044c \u0442\u0430\u043a\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438. \u0427\u0442\u043e \u0436, \u043f\u0443\u0441\u0442\u044c \u043e\u0441\u0442\u0430\u044e\u0442\u0441\u044f \u0432 \u0431\u0430\u0437\u0435 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0438.","80e51987":"\u041d\u0430\u043f\u0438\u0448\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u0434\u0435\u043b\u0430\u0435\u0442 \u043f\u043e\u043b\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0445 \u0444\u0438\u0447 \u0432 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435.","d2a10492":"### custom_clear - \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0447\u0442\u043e \u0441 \u0440\u0430\u0441\u0442\u0430\u043c\u043e\u0436\u043a\u043e\u0439","171c0043":"\u0421\u0442\u0440\u0430\u043d\u043d\u043e\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0434\u043b\u044f\u043b \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430. \u0422\u0443\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d. \u042d\u0442\u043e \u0437\u043d\u0430\u0447\u0438\u0442, \u0447\u0442\u043e \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u0442\u043e\u0436\u0435 \u043d\u0443\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u0441\u043f\u0430\u0440\u0441\u0438\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438 \u0441 \u0442\u0430\u043a\u0438\u043c \u0441\u0442\u0430\u0442\u0443\u0441\u043e\u043c? \u0414\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0434\u0430\u043d\u043d\u044b\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u043c \u043f\u0435\u0440\u0435\u0432\u0435\u0434\u0443 \u0441\u0440\u0430\u0437\u0443 \u043a \u0447\u0438\u0441\u043b\u043e\u0432\u043e\u0439 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438","e11feea6":"### name","77b54a8a":"\u0421\u0443\u0434\u044f \u043f\u043e \u0432\u0441\u0435\u043c\u0443, \u0435\u0441\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f, \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043f\u0443\u0441\u0442\u043e. \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u043d\u0438\u0445.","fedae1b1":"\u0417\u0430\u043c\u0435\u043d\u0438\u043c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u0438\u043c\u044b\u0445 \u0444\u0438\u0447 \u0432 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435. \u041d\u0435\u0437\u043d\u0430\u0447\u0438\u043c\u044b\u0435 \u0444\u0438\u0447\u0438 \u043e\u0441\u0442\u0430\u0432\u0438\u043c \u0431\u0435\u0437 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439.","4772331f":"\u0422\u0435\u043f\u0435\u0440\u044c \u0447\u0442\u043e \u044f \u0445\u043e\u0447\u0443 \u0441\u0434\u0435\u043b\u0430\u0442\u044c - \u0435\u0441\u0442\u044c \u0422\u041e\u041f-10 \u0411\u041c\u0412 \u043f\u043e \u043d\u0430\u0434\u0435\u0436\u043d\u043e\u0441\u0442\u0438. \u0414\u0435\u043b\u0430\u044e \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435, \u0447\u0442\u043e \u044d\u0442\u043e \u043c\u043e\u0434\u0435\u043b\u0438 \u043b\u0443\u0447\u0448\u0435 \u043f\u0440\u043e\u0434\u0430\u044e\u0442\u0441\u044f \u0438 \u043d\u0430 \u043d\u0438\u0445 \u0446\u0435\u043d\u0430 \u043c\u0435\u043d\u044c\u0448\u0435 \u043a\u043e\u043b\u0435\u0431\u0430\u0435\u0442\u0441\u044f \u0438 \u0434\u0435\u0440\u0436\u0438\u0442\u0441\u044f. \u0425\u043e\u0447\u0443 \u0432\u0432\u0435\u0441\u0442\u0438 \u0442\u0430\u043a\u043e\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 - \u043d\u0430\u0434\u0435\u0436\u043d\u043e\u0441\u0442\u044c.","809ea0b6":"# Stacking","5901bab9":"\u0420\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0431\u0443\u0434\u0443 \u043d\u0430 \u043a\u043e\u043f\u0438\u0438 \u043e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u044c\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445, \u0447\u0442\u043e\u0431\u044b \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0432 \u043b\u044e\u0431\u043e\u0435 \u0432\u0440\u0435\u043c\u044f \u043a \u043d\u0438\u043c \u0432\u0435\u0440\u043d\u0443\u0442\u044c\u0441\u044f.","1850e58f":"\u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0444\u0438\u043d\u0430\u043b\u044c\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043b\u0438\u043d\u0435\u0439\u043d\u0443\u044e \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044e.","8c484c65":"### custom_clear - \u0447\u0442\u043e \u044d\u0442\u043e?","c12d6d71":"CatBoost \u043e\u0431\u043b\u0430\u0434\u0430\u0435\u0442 \u0433\u0438\u0431\u043a\u043e\u0441\u0442\u044c\u044e, \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044f \u0437\u0430\u0434\u0430\u0432\u0430\u0442\u044c \u0438\u043d\u0434\u0435\u043a\u0441\u044b \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432, \u0447\u0442\u043e\u0431\u044b \u0435\u0433\u043e \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u0430\u043a \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0432 \u043e\u0434\u043d\u043e \u043a\u0430\u0441\u0430\u043d\u0438\u0435 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c one_hot_max_size (\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0432 \u043e\u0434\u043d\u043e \u043a\u0430\u0441\u0430\u043d\u0438\u0435 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u0441 \u0447\u0438\u0441\u043b\u043e\u043c \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439, \u043c\u0435\u043d\u044c\u0448\u0438\u043c \u0438\u043b\u0438 \u0440\u0430\u0432\u043d\u044b\u043c \u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430).\n\n\u0415\u0441\u043b\u0438 \u0432\u044b \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442\u0435 \u0432 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0435 cat_features, CatBoost \u0431\u0443\u0434\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u0432\u0441\u0435 \u0441\u0442\u043e\u043b\u0431\u0446\u044b \u043a\u0430\u043a \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435.\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435. \u0415\u0441\u043b\u0438 \u0432 cat_features \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d \u0441\u0442\u043e\u043b\u0431\u0435\u0446 \u0441\u043e \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u043c\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438, CatBoost \u0432\u044b\u0434\u0430\u0435\u0442 \u043e\u0448\u0438\u0431\u043a\u0443. \u041a\u0440\u043e\u043c\u0435 \u0442\u043e\u0433\u043e, \u0441\u0442\u043e\u043b\u0431\u0435\u0446 \u0441 \u0442\u0438\u043f\u043e\u043c int \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0431\u0443\u0434\u0435\u0442 \u0441\u0447\u0438\u0442\u0430\u0442\u044c\u0441\u044f \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u043c \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e, \u0435\u0433\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u0432 cat_features, \u0447\u0442\u043e\u0431\u044b \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0432\u043e\u0441\u043f\u0440\u0438\u043d\u0438\u043c\u0430\u043b \u0435\u0433\u043e \u043a\u0430\u043a \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0439.","7bcc4784":"\u0423 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044c, \u0443 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043c \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0439 \u043a\u043e\u043b\u043e\u043d\u043a\u0435-\u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0435 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d. \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u044d\u0442\u043e\u0442 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044c. \u0422\u0443\u0442 \u043d\u0430\u043c \u043f\u043e\u043c\u043e\u0436\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u0438\u0437 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0422\u0422\u0425.","6cf6cf68":"### engine_power","aebefd20":"\u0410\u0433\u0430, steering_wheel - \u044d\u0442\u043e \u0441 \u043a\u0430\u043a\u043e\u0439 \u0441\u0442\u043e\u0440\u043e\u043d\u044b \u0440\u0443\u043b\u044c. \u041d\u0443, \u0442\u0443\u0442 \u0432\u0441\u0435\u0433\u043e \u0434\u0432\u0430 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430 - \u0438\u043b\u0438 \u0441\u043b\u0435\u0432\u0430, \u0438\u043b\u0438 \u0441\u043f\u0440\u0430\u0432\u0430.","26f74f1d":"\u041d\u0430\u0447\u043d\u0443 \u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u043e\u0431\u0443\u0447\u0430\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c \u0438 \u0443\u0434\u0430\u043b\u044e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435 \u0443\u0441\u043f\u0435\u043b \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c","95de038f":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u044e, \u043c\u043e\u0436\u043d\u043e \u043b\u0438 \u043f\u0440\u0438\u0434\u0443\u043c\u0430\u0442\u044c \u0435\u0449\u0435 \u043a\u0430\u043a\u0438\u0435-\u0442\u043e \u043d\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438.","04a41a4e":"\u0423\u0434\u0430\u043b\u044e \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f, \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f. \u0418\u0445 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u0432 \u043e\u0431\u0449\u0435\u043c \u0447\u0438\u0441\u043b\u0435 - \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u0441\u0438\u043b\u044c\u043d\u043e \u043d\u0435 \u0443\u043c\u0435\u043d\u044c\u0448\u0438\u0442\u0441\u044f.","ad182a79":"## Stacking Var.1. \u0414\u0430\u043b\u043e \u043b\u0443\u0447\u0448\u0438\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432 \u043b\u0438\u0434\u0435\u0440\u0431\u043e\u0440\u0434\u0435, \u0447\u0435\u043c Var.2 \u043d\u0438\u0436\u0435, \u043d\u043e \u0445\u0443\u0436\u0435, \u0447\u0435\u043c Var 3. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c \u0431\u0443\u0434\u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f Var 3","932dcd99":"### equipment - \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u043e, \u0447\u0442\u043e \u044d\u0442\u043e?","3c5165cf":"\u0432\u043e\u0442 \u0442\u0430\u043a, \u043f\u0440\u043e\u0441\u0442\u043e\u0435 \u0443\u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u0439 \u043f\u043e \u0444\u043e\u043b\u0434\u0430\u043c \u043f\u043e\u0437\u0432\u043e\u043b\u0438\u043b\u043e \u0443\u043b\u0443\u0447\u0448\u0438\u0442\u044c \u043d\u0430\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043d\u0430 1%!","30c60dfd":"### owners","5a4c597f":"### mileage_per_year","97ce87ed":"\u041d\u0435\u0442 \u0442\u0430\u043a\u043e\u0433\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 \u0432 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435 - \u043f\u0440\u0438\u0434\u0435\u0442\u0441\u044f \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0435\u0433\u043e \u0438 \u0432 \u0442\u0440\u0435\u0439\u043d\u0435","4ba60214":"\u0413\u043b\u044f\u043d\u0443 \u043d\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u0446\u0435\u043d \u0435\u0449\u0435 \u0440\u0430\u0437","702922da":"\u041d\u0430\u0448\u0435\u043b \u0432 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442 hex \u043d\u0430 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0446\u0432\u0435\u0442\u0430. \u0422\u043e, \u0447\u0442\u043e \u043d\u0443\u0436\u043d\u043e \u0432 \u043e\u0431\u0449\u0435\u043c.","84148c62":"### engine_displacement - \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u0447\u0442\u043e \u044d\u0442\u043e","8e1e6b46":"\u041d\u0443 \u0438 \u0434\u0440\u043e\u043f\u043d\u0435\u043c \u0441\u0442\u0430\u0440\u0443\u044e \u043a\u043e\u043b\u043e\u043d\u043a\u0443 \u0441 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043c","db371561":"\u041f\u0440\u0438\u043c\u0435\u043d\u0438\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0434\u043b\u044f \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u043e\u0433\u043e \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430.","519b743b":"### vehicle_transmission - \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u0447\u0442\u043e \u0442\u0430\u043c \u0441 \u043a\u043e\u0440\u043e\u0431\u043a\u043e\u0439","977ee86c":"\u0421\u0440\u0430\u0437\u0443 \u0441\u0434\u0435\u043b\u0430\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0438 \u0440\u0430\u0431\u043e\u0442\u0435 \u0441 \u0432\u044b\u0431\u0440\u043e\u0441\u0430\u043c\u0438","fe0ed950":"\u0427\u0435\u0433\u043e \u043d\u0435 \u0445\u0432\u0430\u0442\u0430\u0435\u0442:\n\n* \u0412 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435 \u043d\u0435\u0442 \u043e\u0434\u043d\u043e\u0437\u043d\u0430\u0447\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043c\u043e\u0434\u0435\u043b\u0438 \u043c\u0430\u0448\u0438\u043d\u044b. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, 30d \u043c\u043e\u0436\u0435\u0442 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u044c\u0441\u044f \u043a \u043c\u043e\u0434\u0435\u043b\u044f\u043c X3, X3, X5, X6 \u0438, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0435\u0449\u0451 \u043a \u043a\u0430\u043a\u0438\u043c-\u0442\u043e. \u0412\u0438\u0434\u0438\u043c\u043e \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u043d\u0430\u0443\u0447\u0438\u0442\u044c\u0441\u044f \u043f\u043e\u043d\u0438\u043c\u0430\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c \u043f\u043e \u0438\u043c\u0435\u044e\u0449\u0438\u043c\u0441\u044f \u0434\u0430\u043d\u043d\u044b\u043c (\u0433\u043e\u0434 \u0432\u044b\u043f\u0443\u0441\u043a\u0430, \u043e\u0431\u044a\u0435\u043c \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f \u0438 \u0442.\u0434.). \u041d\u043e \u043a\u043e\u0435-\u043a\u0430\u043a \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043c\u043d\u0435 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435, \u043d\u043e \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u043b\u0438 \u044d\u0442\u043e \u0438\u0441\u043a\u0430\u0436\u0435\u043d\u0438\u0435\u043c \u043d\u0430\u043e\u0431\u043e\u0440\u043e\u0442 \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438?\n\n\u041f\u0440\u0438 \u0441\u0431\u043e\u0440\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 \u0432\u043d\u0435\u0448\u043d\u0438\u0445 \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u043e\u0432 \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0444\u0438\u043b\u044c\u0442\u0440\u044b:\n\n* \u041c\u0430\u0440\u043a\u0430 - \u0411\u041c\u0412 \u0434\u043e 2019 \u0433\u043e\u0434\u0430 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0441\u0442\u0432\u0430\n* \u0410\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438 \u0441 \u043f\u0440\u043e\u0431\u0435\u0433\u043e\u043c\n* \u041b\u0435\u0432\u044b\u0439 \u0440\u0443\u043b\u044c\n* \u0421\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 - \u043d\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0435\u043c\u043e\u043d\u0442\u0430\n* \u0420\u0430\u0441\u0442\u0430\u043c\u043e\u0436\u0435\u043d","4215032e":"## Model Setup","b93b3fc7":"\u0422\u0430\u043a \u043a\u0430\u043a \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u0441 \u043e\u0434\u043d\u043e\u0439 \u043c\u0430\u0440\u043a\u043e\u0439 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f - BWM, \u0442\u043e \u043d\u0435\u0442 \u043d\u0438\u043a\u0430\u043a\u043e\u0433\u043e \u0441\u043c\u044b\u0441\u043b\u0430 \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0435. \u0423\u0434\u0430\u043b\u0438\u043c \u0435\u0433\u043e.","33be8e02":"\u0426\u0435\u043b\u044c \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0443\u043f\u0440\u0430\u0436\u043d\u0435\u043d\u0438\u044f:\n\n* \u041e\u0437\u043d\u0430\u043a\u043e\u043c\u0438\u0442\u044c\u0441\u044f \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c\n* \u041f\u043e\u043d\u044f\u0442\u044c, \u043a\u0430\u043a\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043c\u044b \u0441\u043c\u043e\u0436\u0435\u043c \u0438\u0437 \u043d\u0438\u0445 \u0432\u0437\u044f\u0442\u044c\n* \u041f\u043e\u043d\u044f\u0442\u044c, \u043a\u0430\u043a\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432\u043b\u0438\u044f\u044e\u0442 \u043d\u0430 \u0446\u0435\u043b\u0435\u0432\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e, \u0430 \u043a\u0430\u043a\u0438\u0435 \u043d\u0435\u0442\n* \u041f\u043e\u043d\u044f\u0442\u044c, \u043a\u0430\u043a\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u043e\u0431\u0438\u0440\u0430\u0442\u044c \u0438\u0437 \u0432\u043d\u0435\u0448\u043d\u0438\u0445 \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u043e\u0432\n* \u0421\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0436\u0435\u043b\u0430\u0435\u043c\u044b\u0439 \u0432\u0438\u0434 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430, \u043a \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u0431\u0443\u0434\u0435\u043c \u0441\u0442\u0440\u0435\u043c\u0438\u0442\u044c\u0441\u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043e\u0431\u0440\u0430\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435","348f75a3":"### equipment","0e4d6839":"### vehicle_configuration - \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u0447\u0442\u043e \u044d\u0442\u043e","95c6d0bb":"### technical_passport - \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u043e, \u0447\u0442\u043e \u044d\u0442\u043e?","3f385232":"\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0437\u043d\u0430\u0447\u0438\u043c\u044b\u0445 \u0444\u0438\u0447. \u041d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0444\u0438\u0447\u0438 \u043d\u0435 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0442.\u043a. \u043d\u0435 \u043d\u0430\u0448\u043b\u043e\u0441\u044c \u0430\u043d\u0430\u043b\u043e\u0433\u0430 \u0432 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435.","3c0c7e8d":"\u041e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u044e \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u044b","9111dcd8":"\u0417\u0430\u043c\u0435\u043d\u0438\u043c \u0442\u0435\u043a\u0443\u0449\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0430 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 \u0441 \u0440\u0430\u0437\u0431\u0438\u0432\u043a\u043e\u0439 \u043f\u043e 25 \u0442\u044b\u0441.\u043a\u043c. \u0410\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438 \u0441 \u043f\u0440\u043e\u0431\u0435\u0433\u043e\u043c \u0431\u043e\u043b\u0435\u0435 400 \u0442\u044b\u0441.\u043a\u043c. \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u043c \u0432 \u043e\u0434\u043d\u0443 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044e.","b0ba0f2f":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0432\u043e\u043e\u0431\u0449\u0435 \u043e\u0442 \u043a\u0430\u043a\u0438\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043a\u043e\u043b\u0435\u0431\u043b\u0435\u0442\u0441\u044f \u0446\u0435\u043d\u0430. \u041c\u043e\u0436\u0435\u0442 \u0442\u0430\u043c \u0447\u0442\u043e-\u0442\u043e \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u043e\u0433\u043e \u043d\u0430\u0439\u0434\u0443.","8a8606ea":"\u041a\u0430\u0447\u043d\u0443 \u0441\u0435\u0431\u0435 \u0434\u0430\u0442\u0430\u0441\u0435\u0442, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u043d\u0438\u043c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0434\u0440\u0443\u0433\u0438\u0445 \u0430\u043d\u0441\u0430\u043c\u0431\u043b\u0435\u0439 \u0432 \u0434\u0440\u0443\u0433\u043e\u043c \u0444\u0430\u0439\u043b\u0435.","c48b268e":"\u041d\u0430\u043f\u0438\u0448\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u043e\u0437\u0434\u0430\u0441\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0444\u0438\u0447 \u0434\u043b\u044f \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438.","c25e00d4":"# Stacking \n\u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u0440\u0430\u0437\u0431\u0435\u0440\u0435\u043c\u0441\u044f, \u0447\u0442\u043e-\u0436\u0435 \u0442\u0430\u043a\u043e\u0435 \u044d\u0442\u043e\u0442 Stacking. \n#### \u041d\u0430\u0447\u043d\u0435\u043c \u0441 \u0410\u043d\u0441\u0430\u043c\u0431\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439:     \n\u0414\u043e\u043f\u0443\u0441\u0442\u0438\u043c, \u0432\u044b \u043e\u0431\u0443\u0447\u0438\u043b\u0438 \u0420\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438. \u0422\u0435\u043f\u0435\u0440\u044c \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u0440\u043e\u0441\u0442\u043e \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u0442\u044c \u0438\u0445 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0440\u0435\u0434\u043d\u0435\u0432\u0437\u0432\u0435\u0448\u0435\u043d\u043d\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u0435 \u043f\u043e \u0432\u0441\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u044f\u043c. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c, \u0447\u0435\u043c \u0440\u0430\u0437\u043d\u043e\u043e\u0431\u0440\u0430\u0437\u043d\u0435\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 - \u0442\u0435\u043c \u043b\u0443\u0447\u0448\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043c. \u0421\u043c\u043e\u0442\u0440\u0438 \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0430 \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0435 \n![](https:\/\/github.com\/rasbt\/mlxtend\/raw\/master\/docs\/sources\/img\/ensemble_decision_regions_2d.png)\n\n#### \u0410 \u0442\u0435\u043f\u0435\u0440\u044c Stacking:\n\u0423 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u043e\u0442 \u0440\u0430\u0437\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439, \u043f\u043e\u0447\u0435\u043c\u0443 \u0431\u044b \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0438\u0445 \u043a\u0430\u043a \u043d\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\/\u0444\u0438\u0442\u0447\u0438 \u0438 \u043d\u0435 **\u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043f\u043e\u0432\u0435\u0440\u0445 \u044d\u0442\u0438\u0445 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u0439 \u043d\u043e\u0432\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c**? \u042d\u0442\u043e \u043e\u0441\u043d\u043e\u0432\u043d\u0430\u044f \u0438\u0434\u0435\u044f Stacking-a. \n![](https:\/\/miro.medium.com\/max\/1892\/0*GHYCJIjkkrP5ZgPh.png)\n\u0414\u0430\u043b\u0435\u0435 \u0435\u0433\u043e \u0435\u0449\u0435 \u043c\u043e\u0436\u043d\u043e \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u043e \u0443\u0441\u043b\u043e\u0436\u043d\u044f\u0442\u044c. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u044f \u043c\u043e\u0434\u0435\u043b\u0438 \u043e\u0431\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u043d\u0430 \u0440\u0430\u0437\u043d\u044b\u0445 \u0432\u044b\u0431\u043e\u0440\u043a\u0430\u0445 \u0438\/\u0438\u043b\u0438 \u0441 \u0440\u0430\u0437\u043d\u044b\u043c \u0441\u043e\u0441\u0442\u0430\u0432\u043e\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 (bagging), \u0438\u043b\u0438 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u044f \u0443\u0440\u043e\u0432\u043d\u0438 \u0441\u0442\u0435\u043a\u0438\u043d\u0433\u0430. \u0412 \u0438\u0442\u043e\u0433\u0435 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0447\u0442\u043e-\u0442\u043e \u043c\u043e\u043d\u0441\u0442\u0440\u0443\u043e\u0437\u043d\u043e\u0435 \u0432\u0440\u043e\u0434\u0435 \u044d\u0442\u043e\u0433\u043e:\n![](https:\/\/blogs.sas.com\/content\/subconsciousmusings\/files\/2017\/05\/stackedapproach.png)\n\n### Kaggle DarkSide\n\u0411\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e \u043f\u043e\u0431\u0435\u0434\u043d\u044b\u0445 \u0440\u0435\u0448\u0435\u043d\u0438\u0439 \u043d\u0430 kaggle \u0441\u0435\u0439\u0447\u0430\u0441 \u0438\u0434\u0435\u0442 \u0441\u043e \u0441\u0442\u0435\u043a\u0438\u043d\u0433\u043e\u043c. \u0418 \u044d\u0442\u043e \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u043c\u0438\u043d\u0443\u0441 kaggle, \u0442\u0430\u043a \u043a\u0430\u043a \u0437\u0430\u0432\u0435\u0441\u0442\u0438 \u0442\u0430\u043a\u043e\u0433\u043e \u043c\u043e\u043d\u0441\u0442\u0440\u0430, \u0432 \u043f\u0440\u043e\u0434\u0430\u043a\u0448\u0435\u043d, \u043d\u0430 \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u0439 \u043e\u043d\u043b\u0430\u0439\u043d \u0441\u0435\u0440\u0432\u0438\u0441, \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043d\u0435\u0440\u0435\u0430\u043b\u044c\u043d\u043e (\u044f \u0443\u0436\u0435 \u043c\u043e\u043b\u0447\u0443 \u043f\u0440\u043e \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0438\u0440\u0443\u0435\u043c\u043e\u0441\u0442\u044c \u043f\u043e\u0434\u043e\u0431\u043d\u043e\u0433\u043e \u0440\u0435\u0448\u0435\u043d\u0438\u044f). \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u0441\u0430\u043c \u0441\u0442\u0435\u043a\u0438\u043d\u0433 \u043e\u0431\u044b\u0447\u043d\u043e \u043d\u0435 \u0438\u0433\u0440\u0430\u0435\u0442 \u043a\u043b\u044e\u0447\u0435\u0432\u0443\u044e \u0440\u043e\u043b\u044c, \u043d\u043e \u043e\u043d \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0434\u043e\u043a\u0438\u043d\u0443\u0442\u044c \u0434\u043e\u043b\u0438 \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432 \u0441\u043e\u0440\u0435\u0432\u043d\u043e\u0432\u0430\u043d\u0438\u0438 \u043c\u043e\u0433\u0443\u0442 \u043e\u043a\u0430\u0437\u0430\u0442\u044c\u0441\u044f \u043a\u0440\u0438\u0442\u0438\u0447\u043d\u044b\u043c\u0438.\n\n<img src=\"http:\/\/www.quickmeme.com\/img\/c4\/c4a179d0532ea1e02136d050ec961bd873597f7b70d561693cac4c161d06b26a.jpg\">","12812808":"# Submission","abfb6bd0":"### model_date_begin","aff33521":"\u041d\u043e \u043f\u0440\u0438\u0434\u0435\u0442\u0441\u044f \u043f\u043e\u043a\u0430 \u0443\u0434\u0430\u043b\u0438\u0442\u044c, \u0442\u0430\u043a \u043a\u0430\u043a \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u043b \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u043d\u0443\u043b\u044f\u043c\u0438 \u0438 \u044d\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043a\u0430\u0436\u0430\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c.","fd9498a5":"\u041f\u043e\u0447\u0438\u0442\u0430\u043b \u0432 \u043d\u043e\u0432\u043e\u0441\u0442\u044f\u0445, \u0447\u0442\u043e \u043f\u043e\u0441\u043b\u0435 covid \u0441\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u043e\u043a\u0443\u043f\u043a\u0443 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439 \u0432\u044b\u0440\u043e\u0441. \u0412 \u0442\u043e \u0436\u0435 \u0432\u0440\u0435\u043c\u044f \u0435\u0441\u0442\u044c \u0434\u0435\u0444\u0438\u0446\u0438\u0442 \u043d\u0430 \u043d\u043e\u0432\u044b\u0435 \u0430\u0432\u0442\u043e. \u0421\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e, \u0434\u043e\u043b\u0436\u043d\u044b \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 \u0431\u0443 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439? \u0418\u043b\u0438 \u043d\u0430\u043e\u0431\u0440\u043e\u0442 - \u043c\u0435\u043d\u044c\u0448\u0435 \u043f\u0440\u043e\u0434\u0430\u0432\u0430\u0442\u044c. \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u044d\u0442\u043e\u0442 \u0444\u0430\u043a\u0442\u043e\u0440 \u043d\u043e\u0432\u044b\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u043c. \u041f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u044e, \u0447\u0442\u043e \u0442\u0435\u0441\u0442\u043e\u0432\u0443\u044e \u0431\u0430\u0437\u0443 \u0441\u043e\u0431\u0440\u0430\u043b\u0438 \u0435\u0449\u0435 \u0438\u043b\u0438 \u0434\u043e \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u0432 \u0420\u043e\u0441\u0441\u0438\u0438 \u043f\u0430\u043d\u0434\u0435\u043c\u0438\u0438 \u0438\u043b\u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u0435\u0435 \u043d\u0430\u0447\u0430\u043b\u0435. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0445 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u0431\u0443\u0434\u0435\u0442 0. \u0410 \u0434\u043b\u044f \u0443\u0436\u0435 \u0432\u043d\u043e\u0432\u044c \u0441\u043e\u0431\u0440\u0430\u043d\u043d\u044b\u0445 - 1","b5e8709e":"### production_date","a0ad7b17":"\u0423\u0434\u0430\u043b\u0438\u043c \u0438\u0437 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 equipment \u0432\u0441\u0435 \u0444\u0438\u0447\u0438 \u043a\u0440\u043e\u043c\u0435 \u0437\u043d\u0430\u0447\u0438\u043c\u044b\u0445 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0438 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438.","d734f722":"\u0415\u0449\u0435 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u043b\u0438 \u0442\u0430\u043a\u0443\u044e \u0448\u0442\u0443\u043a\u0443 \u043a\u0430\u043a \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0439 \u043d\u0430\u043b\u043e\u0433. \u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u043e \u0442\u043e, \u0447\u0442\u043e \u043d\u0430 \u0434\u043e\u0440\u043e\u0433\u0438\u0435 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438 \u0435\u0441\u0442\u044c \u043f\u043e\u0432\u044b\u0448\u0430\u044e\u0449\u0438\u0439 \u043d\u0430\u043b\u043e\u0433. \u041d\u0430\u043b\u043e\u0433 \u0437\u0430\u0432\u044f\u0437\u0430\u043d \u043d\u0430 \u0440\u0435\u0433\u0438\u043e\u043d\u0435 - \u0442\u043e \u0435\u0441\u0442\u044c \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0440\u0435\u0433\u0438\u043e\u043d\u0443 \u043f\u043e\u0437\u0432\u043e\u043b\u0435\u043d\u043e \u0438\u0437\u043c\u0435\u043d\u044f\u0442\u044c \u0431\u0430\u0437\u043e\u0432\u0443\u044e \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u0432\u0435\u0441\u044c \u043d\u0430\u043b\u043e\u0433. \u041d\u043e \u0445\u043e\u0440\u043e\u0448\u043e \u0442\u043e, \u0447\u0442\u043e \u043f\u043e\u0447\u0442\u0438 \u0432\u043e \u0432\u0441\u0435\u0445 \u0440\u0435\u0433\u0438\u043e\u043d\u0430\u0445 (\u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0442\u0430\u043a\u0438\u0435 \u0430\u043d\u043e\u043c\u0430\u043b\u044c\u043d\u044b\u0435 \u043a\u0430\u043a \u041c\u043e\u0441\u043a\u0432\u0430) \u0441\u0442\u043e\u0438\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0442\u0430\u0432\u043a\u0430 - 150. \u0422\u043e\u043b\u044c\u043a\u043e \u0432 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0440\u0435\u0433\u0438\u043e\u043d\u0430\u0445 \u0435\u0441\u0442\u044c \u0441\u043d\u0438\u0436\u0435\u043d\u0438\u0435, \u043d\u043e \u044d\u0442\u0438 \u0440\u0435\u0433\u0438\u043e\u043d\u044b \u0434\u0430\u043b\u044c\u043d\u0438\u0435. \u041f\u0440\u0430\u0432\u0434\u0430 \u041a\u0440\u044b\u043c \u0442\u043e\u0436\u0435 \u0432\u0445\u043e\u0434\u0438\u0442 \u0432 \u0440\u0435\u0433\u0438\u043e\u043d, \u0433\u0434\u0435 \u0441\u0442\u0430\u0432\u043a\u0430 \u0441\u043d\u0438\u0436\u0435\u043d\u0430. \u041d\u043e \u0434\u0430 \u043b\u0430\u0434\u043d\u043e, \u0434\u043b\u044f \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043f\u0440\u0438\u0431\u043b\u0438\u0436\u0435\u043d\u0438\u0435 \u0432\u043e\u0437\u044c\u043c\u0435\u043c \u0431\u0430\u0437\u043e\u0432\u0443\u044e \u0441\u0442\u0430\u0432\u043a\u0443 \u0437\u0430 1 \u0438 \u0434\u0430\u043b\u044c\u0448\u0435 \u0443\u043c\u043d\u043e\u0436\u0438\u043c \u043d\u0430 \u043e\u0431\u044a\u0435\u043c \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f \u0438 \u043d\u0430 \u043a\u043e\u044d\u0444\u0444. \u043d\u0430 \u0440\u043e\u0441\u043a\u043e\u0448\u044c.","27235051":"\u0423\u0433\u0443. \u041f\u043e\u043d\u044f\u0442\u043d\u043e. \u0420\u0435\u0447\u044c \u0438\u0434\u0435\u0442 \u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432.","9f332c31":"### technical_passport - \u0447\u0442\u043e \u044d\u0442\u043e?","a5119c66":"### \u041f\u0435\u0440\u0432\u0438\u0447\u043d\u044b\u0439 \u043e\u0441\u043c\u043e\u0442\u0440 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445","332c3c9a":"### car_age - \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0432\u043e\u0437\u0440\u0430\u0441\u0442 \u0441\u0430\u043c\u043e\u0433\u043e \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f","f9fcf615":"## Submission Setup","faf680c0":"## \u041a\u0430\u043a \u043a\u0430\u0436\u0434\u0430\u044f \u043c\u043e\u0434\u0435\u043b\u044c \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0441\u044f \u043a \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c?","7bbe7200":"### fuel_type - \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u0447\u0442\u043e \u0442\u0430\u043c \u0441 \u0442\u0438\u043f\u043e\u043c \u0442\u043e\u043f\u043b\u0438\u0432\u0430","68cd1e6e":"\u0421\u0434\u0435\u043b\u0430\u044e \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u044f","78e6cb7b":"\u041e\u0447\u0435\u043d\u044c \u043c\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432. \u0427\u0435\u043c \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c? \u0422\u0430\u043a \u0438 \u0431\u044b\u0442\u044c, \u0437\u0430\u043f\u043e\u043b\u043d\u044e \u0435\u0434\u0438\u043d\u0438\u0446\u0430\u043c\u0438, \u0442\u0430\u043a \u043a\u0430\u043a \u0443 \u0431\u0443 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u043d\u0435 \u0431\u044b\u0442\u044c \u0445\u043e\u0442\u044f \u0431\u044b \u043e\u0434\u043d\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430. \u0410 \u0442\u0430\u043c \u0431\u0443\u0434\u0435\u0442 \u0432\u0438\u0434\u043d\u043e - \u043c\u043e\u0436\u0435\u0442 \u0441\u0434\u0435\u043b\u0430\u044e \u043c\u0435\u0434\u0438\u0430\u043d\u0443 \u0438\u043b\u0438 \u0441\u0440\u0435\u0434\u043d\u044e\u044e. \u041d\u043e \u0432\u0441\u0435 \u0440\u0430\u0432\u043d\u043e ~15% \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u043f\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f. \u041d\u0435 \u0445\u043e\u0440\u043e\u0448\u043e.","4c1664f0":"\u041d\u0443 \u0447\u0442\u043e \u044f \u0442\u0443\u0442 \u0432\u0438\u0436\u0443 - \u0441\u043c\u0435\u0449\u0435\u043d\u043d\u043e\u0441\u0442\u044c \u0432\u043b\u0435\u0432\u043e. \u0421\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e, \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u043f\u0440\u043e\u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0446\u0435\u043d\u0443. \u0427\u0442\u043e \u044f \u0438 \u0441\u0434\u0435\u043b\u0430\u043b \u0432 \u0442\u0440\u0435\u0442\u044c\u0435\u043c \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0435 \u0441\u0442\u0435\u043a\u0438\u043d\u0433\u0430.","1366de4e":"\u0421\u0434\u0435\u043b\u0430\u0435\u043c \u043e\u0442\u0431\u043e\u0440 \u0444\u0438\u0447 \u0441 \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442\u043e\u043c \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0438 > 0.3","600576ef":"\u041d\u0443 \u0438 \u043f\u0435\u0440\u0435\u0432\u0435\u0434\u0443 \u0434\u043b\u044f \u043a\u0440\u0430\u0441\u043e\u0442\u044b \u0438 \u0434\u043b\u044f \u0435\u0434\u0438\u043d\u043e\u043e\u0431\u0440\u0430\u0437\u0438\u044f \u0432 \u043d\u0438\u0436\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440","a3d3af19":"### steering_wheel - \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u043e, \u0447\u0442\u043e \u044d\u0442\u043e?","b0c6de78":"\u0425\u043e\u0447\u0443 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a series, \u0442\u0430\u043a \u043a\u0430\u043a \u0432\u043e \u043c\u043d\u043e\u0433\u043e\u043c \u0435\u0433\u043e \u0437\u0430\u0434\u0430\u0447\u0443 \u0440\u0435\u0448\u0430\u044e\u0442 \u043a\u043e\u0441\u0432\u0435\u043d\u043d\u043e \u0434\u0440\u0443\u0433\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438","d5483deb":"\u041f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0435\u0441\u0442\u044c \u0432 \u043a\u043e\u043b\u043e\u043d\u043a\u0435 ownership (\u0432\u043b\u0430\u0434\u0435\u043d\u0438\u0435)","aa185298":"### number_of_doors - \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0432\u043e\u0437\u0440\u0430\u0441\u0442 \u0441\u0430\u043c\u043e\u0433\u043e \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f","cd789412":"\u0412\u0441\u043f\u043e\u043c\u043d\u0438\u043b, \u0447\u0442\u043e \u0432\u0440\u043e\u0434\u0435 \u0431\u044b \u0432 not_damage \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 - \u0432\u0441\u0435 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438 \u043f\u043e \u0432\u0441\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435 (\u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0430\u044f \u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u0430\u044f) \u0431\u0435\u0437 \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0439. \u041f\u0440\u043e\u0432\u0435\u0440\u044e. \u0418 \u0435\u0441\u043b\u0438 \u044d\u0442\u043e \u0442\u0430\u043a, \u0442\u043e \u0443\u0434\u0430\u043b\u044e \u044d\u0442\u043e\u0442 \u043f\u0440\u0438\u0437\u043d\u0430\u043a.","d99f7c0d":"### production_date - \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0433\u043e\u0434 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0441\u0442\u0432\u0430 \u0441\u0430\u043c\u043e\u0433\u043e \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f","b09591f0":"\u0422\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0439 \u043d\u0430\u043b\u043e\u0433 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u043b\u043e\u0448\u0430\u0434\u0438\u043d\u044b\u0445 \u0441\u0438\u043b, \u0438 \u043f\u0440\u0430\u0432\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0440\u0435\u0433\u0438\u043e\u043d\u0443 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0442\u044c \u0441\u0432\u043e\u044e \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u043d\u0430\u043b\u043e\u0433\u0430 \u043d\u0430 1 \u043b\u043e\u0448\u0430\u0434\u0438\u043d\u0443\u044e \u0441\u0438\u043b\u0443 \u0432 \u0440\u0443\u0431\u043b\u044f\u0445, \u043d\u043e \u0432 \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u0445 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043b\u0438\u043c\u0438\u0442\u0430. \u041a \u0441\u043e\u0436\u0430\u043b\u0435\u043d\u0438\u044e, \u0432 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u043c \u0443 \u043d\u0430\u0441 \u043d\u0435\u0442 \u0440\u0435\u0433\u0438\u043e\u043d\u0430, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043f\u0440\u043e\u0434\u0430\u0435\u0442\u0441\u044f \u0438\u043b\u0438 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044c. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u043f\u0440\u0438\u0448\u043b\u043e\u0441\u044c \u0432\u0437\u044f\u0442\u044c 30 \u0441\u0430\u043c\u044b\u0445 \u0433\u0443\u0441\u0442\u043e\u043d\u0430\u0441\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u0440\u0435\u0433\u0438\u043e\u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u044b (\u043f\u043e \u0438\u0434\u0435\u0435 \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c, \u0447\u0442\u043e \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044c \u043e\u0442\u0442\u0443\u0434\u0430, \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0448\u0435), \u0443\u0441\u0440\u0435\u0434\u043d\u0438\u0442\u044c \u043d\u0430\u043b\u043e\u0433 (\u0442\u0430\u043c \u043d\u0435 \u0431\u044b\u043b\u043e \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043c\u043e\u0436\u043d\u043e \u0432\u0437\u044f\u0442\u044c \u0441\u0440\u0435\u0434\u043d\u044e\u044e) \u0438 \u043f\u043e\u0441\u0447\u0438\u0442\u0430\u0442\u044c \u0441\u0443\u043c\u043c\u0443 \u043d\u0430\u043b\u043e\u0433\u0430. https:\/\/www.autonews.ru\/news\/5e2152979a7947248028cd50","f10013ce":"\u041f\u0435\u0440\u0435\u0432\u0435\u0434\u0443 \u043f\u0440\u0438\u0437\u043d\u0430\u043a price \u0432 \u0442\u0438\u043f int","5f631de5":"\u042f \u0442\u0430\u043a \u043f\u043e\u043d\u044f\u043b, \u0447\u0442\u043e \u044d\u0442\u043e \u043f\u0440\u043e\u0431\u0435\u0433. \u0422\u0443\u0442 \u0432\u0440\u043e\u0434\u0435 \u043e\u043a. \u041f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u043d\u0435\u0442. ","f2c327a8":"\u0412 \u0438\u0442\u043e\u0433\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 **MAPE 13%** \u043d\u0430 \u041b\u0411!","ad55f43e":"\u0421 \u0432\u044b\u0431\u0440\u043e\u0441\u0430\u043c\u0438 \u0446\u0435\u043d \u043d\u0438\u0447\u0435\u0433\u043e \u0434\u0435\u043b\u0430\u0442\u044c \u043f\u043e\u043a\u0430 \u043d\u0435 \u0431\u0443\u0434\u0443.","f9891e04":"\u0421\u043e\u0431\u0440\u0430\u043b \u043d\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0434\u043b\u044f BMW \u043e\u0442\u0441\u044e\u0434\u0430: https:\/\/www.drom.ru\/catalog\/bmw\/ \u0438 http:\/\/www.drivernotes.net\/tehnicheskie_harakteristiki\/bmw . \u041f\u0430\u0440\u0441\u0435\u0440 \u043b\u0435\u0436\u0438\u0442 \u0432 git. \u0420\u0430\u0431\u043e\u0442\u0430 \u043c\u043e\u0436\u043d\u043e \u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u0447\u0442\u043e \u043f\u0440\u043e\u0434\u0435\u043b\u0430\u043d\u0430 \u0437\u0440\u044f - \u043a\u0440\u0430\u0439\u043d\u0435 \u0441\u043b\u043e\u0436\u043d\u043e \u0441\u043e\u0431\u0440\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0430 \u0432\u043d\u0435\u0448\u043d\u0438\u0445 \u0441\u0430\u0439\u0442\u0430\u0445 (\u0438\u043b\u0438 \u043d\u0443\u0436\u043d\u043e \u043f\u043e\u0442\u0440\u0430\u0442\u044c \u043c\u043d\u043e\u0433\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438), \u0447\u0442\u043e\u0431\u044b \u0441\u043e\u0435\u0434\u0438\u043d\u0438\u0442\u044c \u043f\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f\u043c, \u0433\u043e\u0434\u0443 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0441\u0442\u0432\u0430 \u043c\u043e\u0434\u0435\u043b\u0438, \u0441\u0435\u0440\u0438\u0438, \u043e\u0431\u044a\u0435\u043c\u0443 \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f \u0438 \u0442\u0440\u0430\u043d\u0441\u043c\u0438\u0441\u0441\u0438\u0438 \u043d\u043e\u0432\u044b \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438. \u041f\u043e\u0442\u0440\u0430\u0442\u0438\u043b 3 \u0434\u043d\u044f. \u0421\u043f\u0430\u0440\u0441\u0438\u043b \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u0430\u0439\u0442\u043e\u0432 - \u0441\u043a\u043b\u0435\u0438\u0442\u044c \u043d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c.","57038f1c":"\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f \u043f\u043e \u0435\u0433\u043e \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0430\u043c. \u041f\u043e \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c \u0437\u0430\u0434\u0430\u0447\u0438 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0438\u0437 \u0433. \u041c\u043e\u0441\u043a\u0432\u0430. \u0422\u0430\u043a \u043a\u0430\u043a \u0432 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435 \u043c\u0430\u0440\u043a\u0430 - BMW, \u0442\u043e \u0431\u0443\u0434\u0435\u043c \u0441\u0447\u0438\u0442\u0430\u0442\u044c, \u0447\u0442\u043e \u0438 \u0432\u044b\u0431\u043e\u0440\u043a\u0430, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0431\u0443\u0434\u0435\u043c \u043e\u0431\u0443\u0447\u0430\u0442\u044c\u0441\u044f \u0438 \u0434\u043b\u044f \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c - \u0442\u043e\u0436\u0435 BMW. \u041d\u043e \u0432 \u0446\u0435\u043b\u043e\u043c \u043c\u043e\u0434\u0435\u043b\u044c \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u043d\u0435 \u043f\u0440\u0438\u0432\u044f\u0437\u0430\u043d\u0430 \u043a \u043c\u0430\u0440\u043a\u0435 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f. \u0421\u043e\u0431\u0440\u0430\u0442\u044c \u0431\u043e\u043b\u0435\u0435 \u043a\u0440\u0443\u043f\u043d\u0443\u044e \u0431\u0430\u0437\u0443 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0443\u0436\u043d\u043e \u0441 \u0441\u0430\u0439\u0442\u0430  https:\/\/auto.ru\/.","3b29e623":"### engine_power - \u043f\u043e \u0445\u043e\u0434\u0443, \u044d\u0442\u043e \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u044c \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f","7756fd09":"### brand - \u043c\u0430\u0440\u043a\u0430 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f","148ec8e5":"\u041d\u0443 \u0438 \u0432\u0435\u0440\u043d\u0435\u043c \u0443\u0436\u0435 \u043e\u0431\u0449\u0435\u0435 \u043a\u043e\u043b-\u0432\u043e \u043c\u0435\u0441\u044f\u0446\u0435\u0432 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u0432 \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u0434\u0430\u0442\u0430\u0441\u0435\u0442","28f3c658":"## \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445. \u041c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043d\u0430\u0439\u0434\u0443 \u043a\u0430\u043a\u0438\u0435-\u0442\u043e \u0438\u043d\u0441\u0430\u0439\u0442\u044b \u0435\u0449\u0435","c2e105eb":"\u0411\u043e\u043b\u044c\u0448\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0430 \u043c\u043e\u0434\u0435\u043b\u044f\u043c\u0438 9-13 \u043b\u0435\u0442. \u041d\u043e \u043c\u043d\u043e\u0433\u043e \u0438 \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0441\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 (\u043c\u0430\u0440\u043e\u043a) \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439 - \u0434\u043e 6 \u043b\u0435\u0442. \u0415\u0441\u0442\u044c \u043a\u0430\u043a\u0438\u0435-\u0442\u043e \u043e\u0442\u043a\u0440\u043e\u0432\u0435\u043d\u043d\u043e \u0441\u0442\u0430\u0440\u044b\u0435 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438 - \u0431\u043e\u043b\u0435\u0435 45 \u043b\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u0438. \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u044e, \u043d\u0435 \u043e\u0448\u0438\u0431\u043a\u0430 \u043b\u0438 \u044d\u0442\u043e.","6f50bb65":"# \u041f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u0438 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f \u043f\u043e \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0430\u043c\n","5ebb506f":"### color - \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u0447\u0442\u043e \u0441 \u0446\u0432\u0435\u0442\u043e\u043c","0b28dbbe":"\u041f\u0440\u0438\u043c\u0435\u043d\u0438\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430:","e4e6b277":"\u0421\u0434\u0435\u043b\u0430\u044e \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a - \u0441\u0435\u0440\u0438\u044e - \u043d\u0430 \u0431\u0430\u0437\u0435 \u0442\u0440\u0435\u0439\u043d\u0430. \u0422\u0430\u043c \u0432 \u0438\u0437\u0431\u044b\u0442\u043a\u0435 \u0441\u0432\u044f\u0437\u0435\u0439, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043d\u044f\u0442\u044c \u043a\u0430\u043a\u0443\u044e \u0441\u0435\u0440\u0438\u044e \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c \u0432 \u0442\u0435\u0441\u0442\u0435.","7fcd20a6":"\u041f\u0440\u043e\u0434\u0435\u043b\u0430\u044e \u0442\u0443 \u0436\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e, \u0447\u0442\u043e \u0438 \u0441 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u043e\u043c \u043c\u0430\u0440\u043a\u0438 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f","ee3e6383":"## \u0412\u044b\u0432\u043e\u0434\u044b \u043f\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043c EDA \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438","f1e36a4a":"# Bonus\n![](https:\/\/github.com\/itLek\/sfml\/raw\/7e34d290e81921bcaa9d52a2236ec9c43b928e35\/HW_lesson_03\/img\/ml.png)\n## CV\n\u041f\u0435\u0440\u0435\u0434 \u0442\u0435\u043c \u043a\u0430\u043a \u0431\u0435\u0436\u0430\u0442\u044c \u043f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0438 \u043c\u043e\u0434\u0435\u043b\u0438, \u043f\u043e\u0433\u043e\u0432\u043e\u0440\u0438\u043c \u043e \u043a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 ([CV](https:\/\/ru.wikipedia.org\/wiki\/\u041f\u0435\u0440\u0435\u043a\u0440\u0451\u0441\u0442\u043d\u0430\u044f_\u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430))\n\n\u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u0434\u0435\u043b\u0430\u0435\u043c \u043e\u0442\u0431\u043e\u0440 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0438\u043b\u0438 \u043f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0435\u043c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043c\u043e\u0434\u0435\u043b\u0438, \u043c\u044b \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u043e \u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0432 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 (X_test), \u0447\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u043f\u043e\u0434\u0433\u043e\u043d\u0443 \u043f\u043e\u0434 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435. \u0412 \u0438\u0442\u043e\u0433\u0435 \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043c\u00a0\u041f\u0435\u0440\u0435\u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 (**overfitting**).     \n\u0427\u0442\u043e\u0431\u044b \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u044d\u0442\u043e\u0433\u043e, \u043c\u043e\u0436\u043d\u043e \u0441\u0440\u0430\u0437\u0443 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u00a0\u043a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044e \u043f\u043e \u0444\u043e\u043b\u0434\u0430\u043c (\u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u0432 \u043c\u043e\u0434\u0443\u043b\u0435\u00a0*\u041a\u043b\u0430\u0441\u0441\u0438\u0447\u0435\u0441\u043a\u0438\u0439 Machine Learning\u00a0>\u041c\u043e\u0434\u0443\u043b\u044c 7. \u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445\u00a0>7.2. \u0420\u0430\u0437\u0431\u0438\u0435\u043d\u0438\u0435 \u0432\u044b\u0431\u043e\u0440\u043a\u0438*).\u00a0\n\n\u041d\u0438\u0436\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u041f\u0440\u0438\u043c\u0435\u0440, \u043a\u0430\u043a \u043c\u043e\u0436\u043d\u043e \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0430 5 \u0444\u043e\u043b\u0434\u0430\u0445, \u0441 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0438\u043c \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435\u043c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u0439 \u043e\u0442 \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438.","562019bb":"# General Setup","999e067a":"### series","c55836c1":"\u041d\u0430\u043f\u0438\u0448\u0443 \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u0434\u0430\u0441\u0442 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0434\u043b\u044f \u043f\u0435\u0440\u0432\u0438\u0447\u043d\u043e\u0433\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 (\u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u043b \u044d\u0442\u043e \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0443 \u043a\u043e\u043b\u043b\u0435\u0433 \u043f\u043e \u0446\u0435\u0445\u0443 - \u043c\u043d\u0435 \u043f\u043e\u043d\u0440\u0430\u0432\u0438\u043b\u043e\u0441\u044c \u0438 \u044f \u0440\u0435\u0448\u0438\u043b \u0432\u0437\u044f\u0442\u044c \u0435\u0433\u043e \u043d\u0430 \u0432\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u0435)","4f79efa4":"\u0422\u0430\u043c \u0435\u0441\u0442\u044c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438. \u0418\u0445 \u043d\u0435\u043c\u043d\u043e\u0433\u043e, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043c\u043d\u0435 \u0432\u0438\u0434\u0438\u0442\u0441\u044f \u043f\u0440\u043e\u0449\u0435 \u0438\u0445 \u0443\u0434\u0430\u043b\u0438\u0442\u044c, \u0447\u0435\u043c \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u043d\u0435\u043f\u043e\u043d\u044f\u0442\u043d\u043e \u0447\u0435\u043c.","d125f9f4":"\u0414\u0430 \u0443\u0436, \u0431\u043c\u0432\u0435\u0445\u0438 \u0441\u043e \u0441\u0432\u043e\u0438\u043c \u0440\u044f\u0434\u043e\u043c \u043a\u0443\u0437\u043e\u0432\u043e\u0432 \u043d\u0430\u043c\u0443\u0434\u0440\u0438\u043b\u0438. \u041f\u043e\u0447\u0438\u0442\u0430\u043b \u0432 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u0430\u0445 - \u0442\u0430\u043a \u0438 \u0435\u0441\u0442\u044c, \u044d\u0442\u043e \u0432\u0441\u0435 \u0440\u0430\u0437\u043d\u044b\u0435 \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438. \u041f\u0440\u0438\u0434\u0435\u0442\u0441\u044f \u044d\u0442\u043e \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c.","eb125f22":"\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u043d\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u0446\u0435\u043d\u044b","a3c6b28f":"\u041d\u0443 \u0438 \u043f\u0435\u0440\u0435\u0432\u0435\u0434\u0443 \u0435\u0433\u043e \u043a \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e, \u0447\u0442\u043e\u0431\u044b \u044d\u0442\u043e \u0441\u0442\u0430\u043b\u043e \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0435\u0439","22fd42d9":"\u0422\u0430\u043a, \u044d\u0442\u043e \u0443 \u043d\u0430\u0441 \u043e\u0431\u044a\u0435\u043c \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f. \u0421\u0443\u0434\u044f \u043f\u043e \u0432\u0441\u0435\u043c\u0443, LTR - \u044d\u0442\u043e \u043b\u0438\u0442\u0440. \u0417\u043d\u0430\u0447\u0438\u0442 \u044d\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u043e\u0442\u0441\u0435\u0447\u044c \u0438 \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0446\u0438\u0444\u0440\u0443 \u0438 \u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u043a\u043e\u043b\u043e\u043d\u043a\u0443 \u0432\u043e float","d86f39a2":"## Fit","83e07a54":"\u0422\u0435\u043f\u0435\u0440\u044c \u043f\u043e\u0440\u044f\u0434\u043e\u043a. \u041c\u043e\u0436\u0435\u043c \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u0442\u044c \u043a \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0438\u0445 \u0432\u044b\u0431\u043e\u0440\u043e\u043a \u0438 \u0440\u0430\u0431\u043e\u0442\u0435 \u0441 \u043c\u043e\u0434\u0435\u043b\u044f\u043c\u0438.","7a8c7d1b":"\u041f\u043e\u0447\u0438\u0449\u0443 \u0446\u0435\u043d\u044b \u043e\u0442 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432","f7cda1df":"\u041f\u0440\u043e\u0432\u0435\u0440\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0437\u0430\u043c\u0435\u043d\u044b hex \u043d\u0430 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0446\u0432\u0435\u0442\u0430","f661f14d":"![](https:\/\/i.stack.imgur.com\/qX5jd.jpg)","27c0ff24":"\u042d\u043a\u0441\u043f\u043e\u0440\u0442\u043d\u0443 \u0432 csv, \u0447\u0442\u043e\u0431\u044b \u043a\u0430\u0436\u0434\u044b\u0439 \u0440\u0430\u0437 \u043d\u0435 \u043f\u0440\u043e\u0434\u0435\u043b\u044b\u0432\u0430\u0442\u044c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e \u043f\u043e \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e \u0440\u0430\u0431\u043e\u0447\u0435\u0433\u043e \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430.","bfdfbeb6":"### gear_type - \u0447\u0442\u043e \u044d\u0442\u043e?","cfe40a33":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0438","f34f137e":"### covid","72d3b3ba":"\u0412 \u043e\u0442\u043b\u0438\u0447\u0438\u0435 \u043e\u0442 CatBoost \u0438\u043b\u0438 LGBM, XGBoost \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0441\u0430\u043c \u043f\u043e \u0441\u0435\u0431\u0435, \u043e\u043d \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u043f\u043e\u0434\u043e\u0431\u043d\u044b\u0435 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u043c\u0443 \u043b\u0435\u0441\u0443. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u043f\u0435\u0440\u0435\u0434 \u043f\u043e\u0434\u0430\u0447\u0435\u0439 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 XGBoost \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0442\u043e\u043a, \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u043b\u0438 \u043e\u0434\u043d\u043e\u043a\u0440\u0430\u0442\u043d\u043e\u0435 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435.","779fb506":"\u0422\u0430\u043a, \u043f\u043e\u043a\u0430 \u043e\u0441\u0442\u0430\u0432\u0438\u043c \u043a\u043e\u043b\u043e\u043d\u043a\u0443 vehicle_configuration - \u044d\u0442\u043e \u043d\u0435\u043a\u0430\u044f \u0441\u0432\u043e\u0434\u043d\u0430\u044f \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u043f\u0440\u043e \u0422\u0422\u0425 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f. \u041c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0433\u0434\u0435-\u0442\u043e \u0435\u0449\u0435 \u0431\u0443\u0434\u0443\u0442 \u043a\u0430\u043a\u0438\u0435-\u0442\u043e \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438 \u0441 \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438 - \u0431\u0443\u0434\u0435\u043c \u0437\u0434\u0435\u0441\u044c \u0438\u0441\u043a\u0430\u0442\u044c. **\u0410 \u0432 \u043a\u043e\u043d\u0446\u0435 \u043f\u043e\u0442\u043e\u043c \u043f\u043e\u0434\u0447\u0438\u0441\u0442\u0438\u043c \u044d\u0442\u0443 \u043a\u043e\u043b\u043e\u043d\u043a\u0443.**","d7fa488b":"\u041e\u043a. \u0414\u043b\u044f \u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u0440\u0438\u0432\u0435\u0434\u0443 \u0433\u043e\u0434 \u0432 \u0447\u0438\u0441\u043b\u0443 \u0431\u0435\u0437 \u0446\u0438\u0444\u0435\u0440 \u043f\u043e\u0441\u043b\u0435 \u0442\u043e\u0447\u043a\u0438 \u0432 \u043a\u043e\u043d\u0446\u0435. \u041f\u043e\u0439\u0434\u0443 \u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u043b\u043d\u044b\u043c \u043f\u0443\u0442\u0435\u043c - \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u0440\u0438\u0432\u0435\u0434\u0443 \u043a to_datetime, \u0430 \u043f\u043e\u0442\u043e\u043c \u0432\u044b\u0442\u0430\u0449\u0443 \u043e\u0442\u0442\u0443\u0434\u0430 \u0433\u043e\u0434","94a3c3e2":"\u0411\u0443\u0434\u0443 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0442\u043e\u0440\u0438\u043a\u0438 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432","b25b7e0a":"\u041a\u0430\u043a \u0438 \u0432 CatBoost, LightGBM \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u0432\u0432\u043e\u0434\u044f \u0438\u043c\u0435\u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u0439. \u041e\u043d \u043d\u0435 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0432 \u043e\u0434\u043d\u043e\u0440\u0430\u0437\u043e\u0432\u043e\u0435 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438 \u043d\u0430\u043c\u043d\u043e\u0433\u043e \u0431\u044b\u0441\u0442\u0440\u0435\u0435, \u0447\u0435\u043c \u043e\u0434\u043d\u043e\u0440\u0430\u0437\u043e\u0432\u043e\u0435 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435. LGBM \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c, \u0447\u0442\u043e\u0431\u044b \u043d\u0430\u0439\u0442\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432.\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435. \u041f\u0435\u0440\u0435\u0434 \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435\u043c \u043d\u0430\u0431\u043e\u0440\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f LGBM \u0432\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0432\u043e\u0438 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0432 \u0442\u0438\u043f int. \u041e\u043d \u043d\u0435 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u0432\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442\u0435 \u0435\u0433\u043e \u0447\u0435\u0440\u0435\u0437 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 categoryorical_feature.","1ef6ca17":"\u041e\u043a. \u041f\u043e \u0438\u0434\u0435\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c 2 \u0432\u0438\u0434\u0430 - \u0440\u0430\u0441\u0442\u0430\u043c\u043e\u0436\u0435\u043d \u0438 \u043d\u0435 \u0440\u0430\u0441\u0442\u0430\u043c\u043e\u0436\u0435\u043d. \u041d\u043e \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 \u0443 \u043d\u0430\u0441 \u0432\u0441\u0435 \u0440\u0430\u0441\u0442\u0430\u043c\u043e\u0436\u0435\u043d\u043d\u044b\u0435. \u041f\u0435\u0440\u0435\u0432\u0435\u0434\u0435\u043c \u0435\u0433\u043e \u0432 \u0431\u0443\u043b\u0438\u0430\u043d \u0432\u0438\u0434, \u0433\u0434\u0435 1 - \u0440\u0430\u0441\u0442\u0430\u043c\u043e\u0436\u0435\u043d, \u0432\u0441\u0435 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u043e\u0435 - 0.","7754cca1":"### gear_type - \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u043e, \u0447\u0442\u043e \u044d\u0442\u043e?","8c8a1869":"### ownership - \u044d\u0442\u043e \u0443 \u043d\u0430\u0441 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0431\u044b\u043b\u043e \u0432\u043e \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u0438 (\u0433\u043e\u0434 + \u043c\u0435\u0441\u044f\u0446)","a9141bb4":"\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c dummy-\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0438 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438","e85e0ab4":"\u041f\u043e\u043c\u0435\u043d\u044f\u044e \u0440\u0443\u0441\u0441\u043a\u0438\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0442\u0438\u043f\u0430 \u043a\u0443\u0437\u043e\u0432\u0430 \u043d\u0430 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u0430\u043d\u0430\u043b\u043e\u0433","32053491":"### body_type","b6ade9fd":"\u0417\u0430\u043c\u0435\u043d\u0438\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 equipment \u0432 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435 \u043d\u0430 \u0441\u043f\u0438\u0441\u043e\u043a \u0444\u0438\u0447.","276a0cdc":"\u041f\u0440\u043e\u0439\u0434\u0443\u0441\u044c \u043f\u043e \u0432\u0441\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c \u0438 \u043d\u0430\u0439\u0434\u0443 \u0442\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0438\u043c\u0435\u044e\u0442 \u0432\u044b\u0441\u043e\u043a\u0443\u044e \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044e \u0441 \u0434\u0440\u0443\u0433\u0438\u043c\u0438. \u042d\u0442\u043e \u0431\u0443\u0434\u0443\u0442 \u043d\u0430\u0448\u0438 \u043f\u0440\u0435\u0442\u0435\u043d\u0434\u0435\u043d\u0442\u044b \u043d\u0430 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435.","a3563056":"## \u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430","4ecd04b3":"### mileage - \u043f\u043e \u0445\u043e\u0434\u0443, \u044d\u0442\u043e \u043a\u0430\u043a\u043e\u0435-\u0442\u043e \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f; \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u044d\u0442\u043e","7d3f4e9a":"### not_damage - \u0447\u0442\u043e \u044d\u0442\u043e?","8c9e83a6":"# What's next?\n\u0418\u043b\u0438 \u0447\u0442\u043e \u0435\u0449\u0435 \u043c\u043e\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c, \u0447\u0442\u043e\u0431 \u0443\u043b\u0443\u0447\u0448\u0438\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442:\n\n* \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c, \u0447\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0438\u0437\u0432\u043b\u0435\u0447\u044c \u0438\u0437 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0438\u043b\u0438 \u043a\u0430\u043a \u0435\u0449\u0435 \u043c\u043e\u0436\u043d\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\n* \u0421\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\n* \u041f\u043e\u0434\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0435\u0449\u0435 \u0431\u043e\u043b\u044c\u0448\u0435 \u0434\u0430\u043d\u043d\u044b\u0445\n* \u041f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u0434\u043e\u0431\u0440\u0430\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043c\u043e\u0434\u0435\u043b\u0438\n* \u041f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u0434\u0440\u0443\u0433\u0438\u0435 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u044b \u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 ML\n* \u0421\u0434\u0435\u043b\u0430\u0442\u044c \u0410\u043d\u0441\u0430\u043c\u0431\u043b\u044c \u043c\u043e\u0434\u0435\u043b\u0435\u0439, Blending, Stacking","ff1e70cd":"### model_date_end","aabd151e":"\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0434\u043b\u044f \u0437\u0430\u043c\u0435\u043d\u044b \u0444\u0438\u0447 \u0432 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435","558309da":"\u041c\u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u043e\u0434\u043d\u043e\u043c\u0443 \u0441\u0442\u0438\u043b\u044e \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0442\u0440\u0435\u0439\u043d\u0430 \u0438 \u0442\u0435\u0441\u0442\u0430. \u0420\u0430\u0437\u0434\u0435\u043b\u044e \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0442\u0440\u0435\u0439\u043d\u0430 \u043d\u0430 1000 (\u043f\u0440\u0438\u0432\u0435\u0434\u0443 \u043a \u0434\u0440\u043e\u0431\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u043e\u0431\u044a\u0435\u043c) \u0438 \u043e\u043a\u0440\u0443\u0433\u043b\u044e \u0434\u043e \u0434\u0435\u0441\u044f\u0442\u044b\u0445 - \u0442\u043e\u0433\u0434\u0430 \u0431\u0443\u0434\u0435\u0442 \u043a\u0430\u043a \u0432 \u0442\u0435\u0441\u0442\u0435.","3e52ba51":"\u0423\u0445 \u0442\u044b, \u043f\u0440\u0438\u043a\u043e\u043b\u044c\u043d\u043e. \u042d\u0442\u043e \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f \u0443 \u043d\u0430\u0441 \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0442\u0430\u0446\u0438\u044f \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f. \u0427\u0443\u0442\u044c \u043f\u043e\u0437\u0436\u0435 \u043f\u043e\u0434\u0443\u043c\u0430\u044e, \u043a\u0430\u043a \u044d\u0442\u043e \u0440\u0430\u0441\u043f\u0430\u0440\u0441\u0438\u0442\u044c.","2f19ab48":"\u0414\u043e\u0431\u0430\u0432\u043b\u044e \u0435\u0449\u0435 \u0440\u0435\u0439\u0442\u0438\u043d\u0433 \u043c\u0430\u0440\u043a\u0438","ab22d14d":"## price","7a7a07f7":"\u0415\u0441\u0442\u044c \u0438\u0434\u0435\u044f \u043f\u0440\u043e\u0441\u0442\u043e \u043f\u043e\u0441\u0447\u0438\u0442\u0430\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0432 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0438 \u0442\u043e\u0432\u0430\u0440\u0430. \u0421\u043c\u044b\u0441\u043b \u0432 \u0442\u043e, \u0447\u0442\u043e \u0447\u0435\u043c \u0431\u043e\u043b\u044c\u0448\u0435 (\u0434\u043b\u0438\u043d\u043d\u0435\u0435) \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435, \u0442\u0435\u043c \u043e\u043d\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u0434\u0430\u0432\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 \u0446\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u0432 \u0433\u043b\u0430\u0437\u0430\u0445 \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u044f. \u0421\u0447\u0438\u0442\u0430\u0442\u044c \u0431\u0443\u0434\u0443 \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u0442\u043e\u0442\u044b \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0432 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0438. \u041d\u0443, \u043f\u043e\u043a\u0430 \u0447\u0442\u043e-\u0442\u043e \u0441\u043b\u043e\u0436\u043d\u0435\u0435 \u0434\u0443\u043c\u0430\u0442\u044c \u043d\u0435 \u043e\u0445\u043e\u0442\u0430.","b7bdc258":"\u0414\u043e\u0431\u0430\u0432\u043b\u044e \u043f\u0440\u0438\u0437\u043d\u0430\u043a \"\u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0439 \u043d\u0430 \u0440\u044b\u043d\u043a\u0435 \u0420\u043e\u0441\u0441\u0438\u0438\"","d8152338":"\u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 dummy-\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0441 \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u043a\u043e\u0440\u0440\u0435\u043b\u0438\u0440\u0443\u044e\u0449\u0438\u043c\u0438 \u0441 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0444\u0438\u0447\u0430\u043c\u0438 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f. \u0423\u0434\u0430\u043b\u0438\u043c \u0441\u0442\u043e\u043b\u0431\u0435\u0446 equipment.","05223d44":"### owners - \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u043e, \u0447\u0442\u043e \u044d\u0442\u043e?","c43bf5fb":"\u041a\u043e\u043b\u043e\u043d\u043a\u0430 \u0441 \u0422\u0422\u0425 \u0432\u0440\u043e\u0434\u0435 \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435 \u043d\u0443\u0436\u043d\u0430 - \u0443\u0434\u0430\u043b\u044e","7b0c361b":"* > \u041f\u0435\u0440\u0435\u0434 \u0442\u0435\u043c \u043a\u0430\u043a \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c\u0441\u044f \"\u0432\u043e \u0432\u0441\u0435 \u0442\u044f\u0436\u043a\u0438\u0435\" \u0441\u043e \u0421\u0442\u0435\u043a\u0438\u043d\u0433\u043e\u043c, \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u044e \u043f\u043e\u0431\u043e\u043b\u044c\u0448\u0435 \u043f\u043e\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 Feature Engineering-\u043e\u043c.\n* > \u041f\u0440\u0438 Stacking-e \u041e\u0447\u0435\u043d\u044c \u0432\u0430\u0436\u043d\u043e \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u043f\u0440\u043e\u0434\u0443\u043c\u0430\u0442\u044c \u0438 \u0432\u044b\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0447\u0435\u0442\u043a\u0438\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u0430 CV, \u0447\u0442\u043e\u0431 \u043d\u0435 \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0443\u0442\u0435\u0447\u043a\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u0438 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0438.\u00a0  \n\u041d\u0430 \u043a\u0440\u0430\u0439\u043d\u0438\u0439 \u0441\u043b\u0443\u0447\u0430\u0439, \u043c\u043e\u0436\u043d\u043e \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0433\u043e\u0442\u043e\u0432\u044b\u043c\u0438 \u043f\u0430\u043a\u0435\u0442\u0430\u043c\u0438 \u0441 \u0443\u0436\u0435 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u043c Stacking-\u043e\u043c: [vecstack](https:\/\/github.com\/vecxoz\/vecstack), [mlxtend](http:\/\/rasbt.github.io\/mlxtend\/user_guide\/regressor\/StackingCVRegressor\/),  [H2O](http:\/\/docs.h2o.ai\/h2o\/latest-stable\/h2o-docs\/downloading.html)","7e146f58":"\u0423\u0434\u0430\u043b\u0438\u043c \u0441\u0440\u0430\u0437\u0443 \u043d\u0435\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u043c\u044b\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438","4eb0e0de":"\u041d\u0430\u0448\u0435\u043b \u0432 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435 \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u043a\u0440\u0438\u0432\u043e\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 - xDrive20d (\u0438 \u0440\u044f\u0434 \u0434\u0440\u0443\u0433\u0438\u0445). \u0425\u043e\u0447\u0443 \u0435\u0433\u043e \u043f\u043e\u043f\u0440\u0430\u0432\u0438\u0442\u044c","13fec7a9":"RandomForestRegressor, LinearRegression - \u0438\u043c \u0442\u043e\u0436\u0435 \u043d\u0443\u0436\u043d\u044b \u043d\u0430 \u0432\u0445\u043e\u0434 \u0434\u0430\u043d\u043d\u044b\u0435 \u0431\u0435\u0437 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432","0d49c3fe":"### number_of_doors","3b71417c":"# \u0422\u0435\u043f\u0435\u0440\u044c \u0433\u043b\u044f\u043d\u0435\u043c \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u044b \u0441\u043f\u0430\u0440\u0441\u0438\u043b\u0438 \u0438\u0437 \u0410\u0432\u0442\u043e.\u0440\u0443","e5a73504":"\u041c\u043d\u0435 \u043f\u043e\u043f\u0430\u0434\u0430\u043b\u0438\u0441\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0441 \u043f\u0440\u043e\u0431\u0435\u043b\u0430\u043c\u0438 \u0432 \u043a\u043e\u043d\u0446\u0435. \u0423\u0434\u0430\u043b\u044e \u0438\u0445. \u041f\u0440\u043e\u0432\u0435\u0440\u044e \u043d\u0430 \u0432\u0441\u044f\u043a\u0438\u0439 \u0441\u043b\u0443\u0447\u0430\u0439 \u043f\u0440\u043e\u0431\u0435\u043b\u044b \u0432 \u043a\u043e\u043d\u0446\u0435 \u0438 \u043d\u0430\u0447\u0430\u043b\u0435.","4e6d86bc":"\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c dummy variables \u0434\u043b\u044f \u0444\u0438\u0447. \u041f\u0440\u043e\u0434\u0435\u043b\u0430\u0435\u043c \u044d\u0442\u0443 \u0440\u0430\u0431\u043e\u0442\u0443 \u043d\u0430 \u043a\u043e\u043f\u0438\u0438 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430 \u0441 \u0430\u0432\u0442\u0440\u0443, \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u043f\u043e\u0440\u0442\u0438\u0442\u044c \u043e\u0440\u0438\u0433\u0438\u043d\u0430\u043b.","e0959920":"\u0422\u0435\u043f\u0435\u0440\u044c \u0432\u044b\u0434\u0435\u043b\u0438\u043c \u0442\u0435\u0441\u0442\u043e\u0432\u0443\u044e \u0438 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0438\u0435 \u0447\u0430\u0441\u0442\u0438","5b515147":"## \u0421at features\nCatBoost \u0443\u043c\u0435\u0435\u0442 \u0441\u0430\u043c\u043e\u0441\u0442\u043e\u044f\u0442\u0435\u043b\u044c\u043d\u043e \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u043d\u043e \u0434\u043b\u044f \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0443\u0436\u043d\u043e \u0438\u0445 \u0443\u043a\u0430\u0437\u0430\u0442\u044c. \u0414\u0430\u043d\u043d\u044b\u0435 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u043b\u0438 \u0438\u043b\u0438 \u0432 int, \u0438\u043b\u0438 \u0432 string \u0444\u043e\u0440\u043c\u0430\u0442\u0435. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u0438 \u043e\u0442\u0431\u0435\u0440\u0443 \u0442\u0430\u043a\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438:","876abb35":"\u041d\u0443 \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044e \u043a\u043e\u043b\u043e\u043d\u043a\u0443 \u0441 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u043e\u043c \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f","042c9598":"\u0423\u0434\u0430\u043b\u044e \u043f\u0440\u0438\u0437\u043d\u0430\u043a model_date_begin - \u0443 \u043d\u0435\u0433\u043e \u0432\u044b\u0441\u043e\u043a\u0430\u044f \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044f \u0441 production_date","873f8947":"\u041d\u0435 \u0437\u043d\u0430\u044e, \u0447\u0435\u043c \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438, \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u0438\u0441\u043a\u0430\u0437\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e. \u0410 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u043c\u043d\u043e\u0433\u043e - \u043e\u043a\u043e\u043b\u043e 15% \u0432\u0441\u0435\u0433\u043e \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430. \u0423\u0434\u0430\u043b\u044f\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0442\u043e\u0436\u0435 \u043d\u0435 \u0445\u043e\u0447\u0435\u0442\u0441\u044f... \u041c\u043d\u0435 \u043e\u043d \u043a\u0430\u0436\u0435\u0442\u0441\u044f \u0437\u043d\u0430\u0447\u0438\u043c\u044b\u043c. ","753818e6":"\u0412\u0438\u0434\u0438\u043c, \u0447\u0442\u043e \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u043c\u0430\u0440\u043a\u0430\u043c\u0438 \u043e\u0442 1975 \u043f\u043e 2019 \u0433\u043e\u0434.","90dca174":"## mileage_per_year","5c9f734d":"# Data","877c3dfd":"\u041d\u0435 \u0432\u0438\u0436\u0443 \u043e\u0441\u043e\u0431\u043e\u0433\u043e \u0441\u043c\u044b\u0441\u043b\u0430 \u0432 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c \u043a\u043e\u043b-\u0432\u043e \u0434\u0432\u0435\u0440\u0435\u0439 - \u043e\u043d\u0438 \u0438 \u0442\u0430\u043a \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u043a\u043e\u043b\u043e\u043d\u043a\u0435","5f1e76d0":"\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u044e \u0441\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a - \"\u0432\u043e\u0437\u0440\u0430\u0441\u0442 \u043c\u043e\u0434\u0435\u043b\u0438\" (model_age). \u0412\u0440\u0435\u043c\u044f \u0431\u0443\u0434\u0443 \u0441\u0447\u0438\u0442\u0430\u0442\u044c \u043e\u0442 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438.","8070ca96":"## Stacking Var-2","6ecfb222":"\u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a: \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u043c \u043f\u0440\u043e\u0431\u0435\u0433 \u043d\u0430 \u0433\u0440\u0443\u043f\u043f\u044b, \u0438\u0441\u0445\u043e\u0434\u044f \u0438\u0437 \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u0432 \u0441\u0440\u0435\u0434\u043d\u0435\u043c \u0430\u0432\u0442\u043e (\u0434\u0430\u043d\u043d\u044b\u0435 \u0410\u0432\u0442\u043e\u0441\u0442\u0430\u0442) \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442 \u0437\u0430 \u0433\u043e\u0434 17000 \u043a\u043c \u043a\u0430\u0436\u0434\u0430\u044f \u0433\u0440\u0443\u043f\u043f\u0430 \u0431\u0443\u0434\u0435\u0442 \u0433\u0440\u0443\u0431\u043e (\u043d\u0435 \u0432\u0441\u0435\u0433\u0434\u0430 \u043f\u0440\u043e\u0431\u0435\u0433 \u043f\u0440\u0430\u0432\u0434\u0438\u0432) \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043b\u0435\u0442 \u044d\u043a\u0441\u043f\u043b\u0443\u0430\u0442\u0430\u0446\u0438\u0438.","797939cb":"\u0421\u0435\u0439\u0447\u0430\u0441 \u0432 \u043f\u043e\u043b\u0435 equipment \u0431\u0443\u0434\u0443\u0442 \u043f\u043e\u043f\u0430\u0434\u0430\u0442\u044c \u043b\u0438\u0448\u043d\u0438\u0435 \u0437\u0430\u043f\u0438\u0441\u0438, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, 'name','values' \u0438 \u0442.\u0434. \u041d\u0430\u043c \u044d\u0442\u043e \u043d\u0435 \u043f\u043e\u043c\u0435\u0448\u0430\u0435\u0442.","2303fb3b":"### series","b5d51fc5":"\u0422\u0430\u043a, \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u0432\u0435\u0440\u0435\u0439 - \u0442\u0430\u043c \u043c\u043d\u0435 \u043d\u0435 \u043d\u0440\u0430\u0432\u0438\u0442\u0441\u044f \u0444\u043e\u0440\u043c\u0430\u0442 \u0434\u0430\u043d\u043d\u044b\u0445. \u0421\u043a\u043e\u0440\u0435\u0435 \u0432\u0441\u0435\u0433\u043e \u043d\u0430\u0434\u043e \u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0438\u0445 \u043f\u0440\u043e\u0441\u0442\u043e \u0432 int","68a3a1dd":"\u0421\u0434\u0435\u043b\u0430\u044e \u0445\u0430\u043a - \u0437\u0430\u0442\u043e\u0447\u0443 \u0434\u0430\u043d\u043d\u044b\u0435 \u0441\u0442\u0440\u043e\u0433\u043e \u043f\u043e\u0434 \u0442\u0435 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0435\u0441\u0442\u044c \u043d\u0430 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439. \u0414\u0430, \u044d\u0442\u043e \u043f\u0435\u0440\u0435\u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435\u043c \u043f\u0430\u0445\u043d\u0435\u0442, \u043d\u043e \u043f\u0440\u043e\u0441\u0442\u043e \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u043e \u043f\u0440\u043e\u0431\u0438\u0442\u044c 9 \u0431\u0430\u043b\u043b\u043e\u0432.","81f77c56":"## Data Preprocessing","b01af4e9":"\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u044e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u043a\u043e\u043b\u043e\u043d\u043a\u0443 - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u044f, \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0432 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435.  P.S. \u041d\u0435\u043c\u043d\u043e\u0433\u043e, \u043d\u043e \u043d\u0430 0.01 \u044d\u0442\u043e \u0443\u043b\u0443\u0447\u0448\u0438\u043b\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.","d894ff61":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u0438\u043c\u043e\u0441\u0442\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432:","ca7e70f4":"\u0423\u043f\u0440\u043e\u0449\u0443 \u0432 \u043e\u0431\u0449\u0435\u043c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439 - \u0443\u0431\u0435\u0440\u0443 \u0438\u0437 \u043c\u043e\u0434\u0435\u043b\u0438 i \u0438 d. \u041f\u043e \u0438\u0434\u0435\u0435 \u044d\u0442\u043e \u0441\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u0443\u0435\u0442 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438 \u0431\u043e\u043b\u0435\u0435 \u044f\u0432\u043d\u043e, \u0431\u0443\u0434\u0435\u0442 \u043c\u0435\u043d\u044c\u0448\u0435 \u0441\u043f\u0438\u0441\u043e\u043a, \u0430 \u0442\u0438\u043f \u0442\u043e\u043f\u043b\u0438\u0432\u0430 \u0438 \u0442\u0430\u043a \u0443 \u043d\u0430\u0441 \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u0442 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438.","73b47c00":"\u0423\u043c\u043d\u043e\u0436\u0443 \u0442\u0435\u043f\u0435\u0440\u044c engine_displacement \u043d\u0430 1000, \u0447\u0442\u043e\u0431\u044b \u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u044d\u0442\u043e \u043a int \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u043b\u043e\u0433\u0438\u043a\u0443 \u043e\u0431\u044a\u0435\u043c\u0430 \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f","9a603819":"\u0412\u0438\u0436\u0443 \u043c\u0443\u043b\u044c\u0442\u0438\u043a\u043e\u043b\u043b\u0435\u043d\u0438\u0430\u0440\u043d\u0443\u044e \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c \u043c\u0435\u0436\u0434\u0443 \u0431\u0435\u043d\u0437\u0438\u043d\u043e\u043c \u0438 \u0434\u0438\u0437\u0435\u043b\u0435\u043c. \u041d\u0430\u0434\u043e \u0443\u0431\u0440\u0430\u0442\u044c \u043e\u0434\u0438\u043d \u0438\u0437 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432. P.S. \u041f\u043e \u0444\u0430\u043a\u0442\u0443 \u043e\u043a\u0430\u0437\u0430\u043b\u043e\u0441\u044c, \u0447\u0442\u043e \u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0441\u043d\u0438\u0436\u0430\u0435\u0442 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043e\u0442\u043a\u0430\u0437\u0430\u043b\u0441\u044f \u043e\u0442 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f.","12569a1f":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.","5f0cd185":"\u0421\u0434\u0435\u043b\u0430\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u043c, \u0432\u0441\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u0441\u0442\u0430\u0440\u0448\u0435 19 \u043b\u0435\u0442 \u043f\u043e\u043b\u043e\u0436\u0438\u043c \u0432 \u043e\u0434\u043d\u0443 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044e.","3888fd13":"\u0423\u0434\u0430\u043b\u044e \u043b\u0438\u0448\u043d\u0438\u0435 \u0441\u0442\u043e\u043b\u0431\u0446\u044b","89d5aa2b":"### fuel_type","afdfa9b4":"### engine_displacement","67f7db59":"### steering_wheel - \u0447\u0442\u043e \u044d\u0442\u043e?","0b167395":"# CatBoost\n![](https:\/\/pbs.twimg.com\/media\/DP-jUCyXcAArRTo.png:large)   \n\n\n\u0423 \u043d\u0430\u0441 \u0432 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0432\u0441\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435. \u0421\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0442\u0430\u043a\u0438\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0431\u044b\u043b\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0430 \u043e\u0447\u0435\u043d\u044c \u0443\u0434\u043e\u0431\u043d\u0430\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 CatBoost \u043e\u0442 \u042f\u043d\u0434\u0435\u043a\u0441\u0430. [https:\/\/catboost.ai](http:\/\/)     \n\u041d\u0430 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 **CatBoost \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0434\u043d\u043e\u0439 \u0438\u0437 \u043b\u0443\u0447\u0448\u0438\u0445 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a \u0434\u043b\u044f \u0442\u0430\u0431\u043b\u0438\u0447\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445!**\n\n#### \u041f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u0432\u0438\u0434\u0435\u043e \u043e CatBoost (\u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u043e\u043c):\n* [\u0414\u043e\u043a\u043b\u0430\u0434 \u043f\u0440\u043e CatBoost](https:\/\/youtu.be\/9ZrfErvm97M)\n* [\u0421\u0432\u0435\u0436\u0438\u0439 \u0422\u0443\u0442\u043e\u0440\u0438\u0430\u043b \u043e\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u044b CatBoost (\u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0447\u0430\u0441\u0442\u044c)](https:\/\/youtu.be\/wQt4kgAOgV0) ","32f0cf57":"\u0412\u0432\u0435\u0434\u0435\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u043f\u0430\u0434\u0430\u044e\u0442 \u043f\u043e\u0434 \u0440\u043e\u0441\u043a\u043e\u0448\u044c (\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u0432\u0437\u044f\u0442\u0430 \u0441 \u043e\u0444. \u0441\u0430\u0439\u0442\u0430 https:\/\/nalog-nalog.ru\/files\/editor\/0320\/02\/perechen_avtomobil_compressed%202020.pdf)","e14765db":"### mileage","ef15343d":"## EDA \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438"}}