{"cell_type":{"24db0f76":"code","749f6171":"code","bb14ea69":"code","5d51d3e9":"code","66a59fd2":"code","ca445145":"code","cc27aa55":"code","d5dc6c47":"code","1c5a8d2d":"code","f3328513":"code","d1e3f5a6":"code","2ba4e465":"code","b9dd5bf0":"code","06dd3a17":"code","0c565505":"code","afae38d2":"code","c2e6069f":"code","0e294260":"code","bef46cbc":"code","d38e1f88":"code","58f9bf49":"code","47f4baae":"code","c03ecf08":"code","50154cc0":"code","130dcf83":"code","294c5e18":"code","b4eee6ab":"code","436f50ce":"code","4408ded6":"code","5e9819e7":"code","a7926010":"code","94339029":"code","0fd78962":"code","2c516f68":"code","1d434d6b":"markdown","34d68841":"markdown","38e6047a":"markdown","ca8428aa":"markdown","a7e2eaf7":"markdown","3a353f28":"markdown"},"source":{"24db0f76":"import pandas as pd\nfrom pathlib import Path\nfrom matplotlib import pyplot as plt","749f6171":"import os\nos.listdir('..\/input\/')","bb14ea69":"train_df = pd.read_csv('..\/input\/ashrae-energy-prediction\/train.csv')\ntrain_df['timestamp'] = pd.to_datetime(train_df['timestamp'])","5d51d3e9":"def plot_meter(train, leak, start=0, n=100, bn=10):\n    for bid in leak.building_id.unique()[:bn]:    \n        tr = train[train.building_id == bid]\n        lk = leak[leak.building_id == bid]\n        \n        for m in lk.meter.unique():\n            plt.figure(figsize=[10,2])\n            trm = tr[tr.meter == m]\n            lkm = lk[lk.meter == m]\n            \n            plt.plot(trm.timestamp[start:start+n], trm.meter_reading.values[start:start+n], label='train')    \n            plt.plot(lkm.timestamp[start:start+n], lkm.meter_reading.values[start:start+n], '--', label='leak')\n            plt.title('bid:{}, meter:{}'.format(bid, m))\n            plt.legend()","66a59fd2":"# load site 0 data\nucf_root = Path('..\/input\/ashrae-ucf-spider-and-eda-full-test-labels')\nleak0_df = pd.read_pickle(ucf_root\/'site0.pkl') \nleak0_df['meter_reading'] = leak0_df.meter_reading_scraped\nleak0_df.drop(['meter_reading_original','meter_reading_scraped'], axis=1, inplace=True)\nleak0_df.fillna(0, inplace=True)\nleak0_df.loc[leak0_df.meter_reading < 0, 'meter_reading'] = 0\nprint(len(leak0_df))","ca445145":"leak0_df.head()","cc27aa55":"leak0_df.tail()","d5dc6c47":"plot_meter(train_df, leak0_df, start=5000)","1c5a8d2d":"# load site 1 data\nucl_root = Path('..\/usr\/lib\/ucl_data_leakage_episode_2')\nleak1_df = pd.read_pickle(ucl_root\/'site1.pkl') \nleak1_df['meter_reading'] = leak1_df.meter_reading_scraped\nleak1_df.drop(['meter_reading_scraped'], axis=1, inplace=True)\nleak1_df.fillna(0, inplace=True)\nleak1_df.loc[leak1_df.meter_reading < 0, 'meter_reading'] = 0\nprint(len(leak1_df))","f3328513":"leak1_df.head()","d1e3f5a6":"leak1_df.tail()","2ba4e465":"plot_meter(train_df, leak1_df, start=0)","b9dd5bf0":"# load site 2 data\nleak2_df = pd.read_csv('\/kaggle\/input\/asu-buildings-energy-consumption\/asu_2016-2018.csv')\nleak2_df['timestamp'] = pd.to_datetime(leak2_df['timestamp'])\n\nleak2_df.fillna(0, inplace=True)\nleak2_df.loc[leak2_df.meter_reading < 0, 'meter_reading'] = 0\n\nleak2_df = leak2_df[leak2_df.building_id!=245] # building 245 is missing now.\n\n#leak2_df = leak2_df[leak2_df.timestamp.dt.year > 2016]\nprint(len(leak2_df))","06dd3a17":"leak2_df.head()","0c565505":"leak2_df.tail()","afae38d2":"plot_meter(train_df, leak2_df, start=0)","c2e6069f":"# load site 4 data\n# its looks better to use threshold ...\nleak4_df = pd.read_csv('..\/input\/ucb-data-leakage-site-4\/site4.csv')\n\nleak4_df['timestamp'] = pd.to_datetime(leak4_df['timestamp'])\nleak4_df.rename(columns={'meter_reading_scraped': 'meter_reading'}, inplace=True)\nleak4_df.fillna(0, inplace=True)\nleak4_df.loc[leak4_df.meter_reading < 0, 'meter_reading'] = 0\nleak4_df['meter'] = 0\n\nprint('before remove dupilicate', leak4_df.duplicated(subset=['building_id','timestamp']).sum())\nleak4_df.drop_duplicates(subset=['building_id','timestamp'],inplace=True)\nprint('after remove dupilicate', leak4_df.duplicated(subset=['building_id','timestamp']).sum())\nprint(len(leak4_df))","0e294260":"leak4_df.head()","bef46cbc":"leak4_df.tail() # its include 2019. i will delete them later","d38e1f88":"len(leak4_df.building_id.unique())","58f9bf49":"plot_meter(train_df, leak4_df, start=0)","47f4baae":"train_df[train_df.building_id == 621].timestamp.min() # some train data is missing","c03ecf08":"# this data does not include 2016.\nleak15_df = pd.read_csv('..\/input\/ashrae-site15-cornell\/site15_leakage.csv')\n\nleak15_df['timestamp'] = pd.to_datetime(leak15_df['timestamp'])\nleak15_df.fillna(0, inplace=True)\nleak15_df.loc[leak15_df.meter_reading < 0, 'meter_reading'] = 0\n\nprint(leak15_df.duplicated().sum())\nprint(len(leak15_df))","50154cc0":"leak15_df.head()","130dcf83":"leak15_df.tail()","294c5e18":"df = pd.concat([leak0_df, leak1_df, leak2_df, leak4_df, leak15_df])\ndf.drop('score', axis=1, inplace=True)\ndf = df[(df.timestamp.dt.year >= 2016) & (df.timestamp.dt.year < 2019)]\ndf.reset_index(inplace=True, drop=True)\nprint(len(df))","b4eee6ab":"df.timestamp.min(), df.timestamp.max() ","436f50ce":"df.head()","4408ded6":"df.to_feather('leak.feather')","5e9819e7":"leak_df = pd.read_feather('leak.feather')","a7926010":"leak_df.head()","94339029":"leak_df.meter.value_counts()","0fd78962":"len(leak_df.building_id.unique())","2c516f68":"# Wow!! What do you think ? it's really huge now !! \nlen(leak_df) \/ len(train_df)","1d434d6b":"# All Leak Dataset\n\nAs you already know there are huge data leak in this competition. Until now site-0, site-1, site-2, site-4 and site-15 building meter reading data\nwas discovered by great kagglers.\n\nThis Kernel collects all leak data revealed by following great kernels:\n\n* [ASHRAE - UCF Spider and EDA (Full Test Labels)](https:\/\/www.kaggle.com\/gunesevitan\/ashrae-ucf-spider-and-eda-full-test-labels) v3\n* [UCL: Data Leakage (Episode 2)](https:\/\/www.kaggle.com\/mpware\/ucl-data-leakage-episode-2) v1\n* [ASU train and scraped test data](https:\/\/www.kaggle.com\/pdnartreb\/scrap-asu-data) v7\n* [UCB: Data Leakage (Site 4)](https:\/\/www.kaggle.com\/serengil\/ucb-data-leakage-site-4\/output) v15\n* [ASHRAE-site15-cornell](https:\/\/www.kaggle.com\/pp2file\/ashrae-site15-cornell) v3\n\nThank you @gunesevitan, @mpware, @poedator, @pdnartreb, @serengil and @pp2file . You are Great Kagglers!!","34d68841":" # site 2","38e6047a":"# site 1","ca8428aa":"# site 0","a7e2eaf7":"# site 4","3a353f28":"# site 15"}}