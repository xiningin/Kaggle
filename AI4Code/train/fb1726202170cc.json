{"cell_type":{"02e5e164":"code","af573db4":"code","054d1500":"code","211e3972":"code","e3b097ad":"markdown","b19e6cb4":"markdown","f43fcbe5":"markdown","501e4a8d":"markdown","da167d6e":"markdown","81ad99b8":"markdown","2d94e9db":"markdown","993ffa25":"markdown","dbdec7f1":"markdown","765958c5":"markdown","67b2cd9f":"markdown","b5453e32":"markdown"},"source":{"02e5e164":"# Import and install required libraries\n!pip install moviepy\n!pip install pytube3\n\nimport os\nimport moviepy\nfrom pytube import YouTube\nfrom datetime import timedelta\nfrom IPython.display import Video\nfrom IPython.display import YouTubeVideo\nfrom moviepy.video.io.ffmpeg_tools import ffmpeg_extract_subclip\n\nURL_YouTube = 'https:\/\/www.youtube.com\/watch?v=d-souLImH-I'","af573db4":"def YouTube_time_window(url, **kwargs):\n    id_ = url.split(\"=\")[-1]\n    return YouTubeVideo(id_, **kwargs)\n\n# enter time window [hr;mn;sec]\ntime_start = int(timedelta(hours=0, minutes=0, seconds=57).total_seconds())\n\n# enter Duration [sec]\ntime_duration = 25\n\n# Launch\ntime_end = time_start + time_duration\nwidth, height = 550, 350\nYouTube_time_window(URL_YouTube, start=time_start, width=width, height=height)","054d1500":"# For convenience : rename files\nVideo_file_raw = YouTube(URL_YouTube).streams.first().download()\nVideo_file = '\/kaggle\/working\/'+'Vid_in.mp4'\nos.rename(Video_file_raw, Video_file)","211e3972":"# Extract desired segment \nVideo_out_name = 'Vid_out.mp4'\nffmpeg_extract_subclip(Video_file, time_start, time_end, targetname=Video_out_name)\nVideo(Video_out_name, width=width, height=height)","e3b097ad":"<a id=\"1\"><\/a>\n<img src=https:\/\/i.imgur.com\/JmOvb15.png width=450 \/>","b19e6cb4":"<img src=https:\/\/almarmuller.files.wordpress.com\/2014\/11\/but-wait-theres-more.jpg width=\"550\" \/>\n\n","f43fcbe5":"$$\n\\Huge{ \\href{https:\/\/github.com\/Daniboy370\/Deep-Learning\/tree\/master\/Side-Projects\/Mask_RCNN}{ \\text{Click here ! }}}\n$$\n","501e4a8d":"$$\n\\Huge{ \\href{https:\/\/www.kaggle.com\/daniboy370\/tutorial-object-recognition-with-opencv}{ \\text{Click here ! }}}\n$$\n","da167d6e":"<a id=\"3\"><\/a>\n### $\\text{Download : } \ud83d\udce5$\n\n<img src=https:\/\/i.imgur.com\/lc96orO.png width=\"325\" \/>","81ad99b8":"### $\\text{Table of Contents}$\n\n* [YouTube video : \ud83d\udcfc](#1)\n* [Trim video : \u2702\ufe0f  \ud83c\udf9e\ufe0f](#2)\n* [Download : \ud83d\udce5](#3)\n* [Bonus ! \ud83e\uddd9\ud83c\udffb\u200d\u2642\ufe0f](#4)\n","2d94e9db":"### Or maybe deep learning is your thing ?  \ud83e\uddd0\n\n\n\n\n","993ffa25":"<a id=\"4\"><\/a>\n# BONUS \n\n### Would you like to apply object recognition on your output ?   \ud83e\udd28\n\n<img src=https:\/\/github.com\/Daniboy370\/Computer-Vision\/raw\/master\/OpenCV_Demo\/Upload\/Github_GIF.gif width=\"650\" \/>\n\n","dbdec7f1":"<a id=\"2\"><\/a>\n### $\\text{Trim video : } \u2702\ufe0f $  \ud83c\udf9e\ufe0f\n\nIn most cases there is **no need** in the entire footage. Therefore, the desired segmented footage can be **clipped** :","765958c5":"<img src=https:\/\/github.com\/Daniboy370\/Deep-Learning\/raw\/master\/Side-Projects\/Mask_RCNN\/saved_files\/Aladdin_GIF_2.gif width=\"500\" \/>","67b2cd9f":"### $\\text{Abstract}$\n\nIn this notebook I will demonstrate a simple implementation for downloading YouTube video into Kaggle's local directory, extracting the desired time window, being able eventually to apply sophisticated algorithms upon. The general workflow satisfies :\n\n\n\n<img src=https:\/\/i.imgur.com\/XtLmA3U.png width=\"600\" align=center\/>","b5453e32":"$$\n\\Huge{ \\text{Thank you !} }\n$$"}}