{"cell_type":{"a9e9a981":"code","dcf9ff44":"code","104adeff":"code","3d47f5b5":"code","02b3072c":"code","4d9b2b33":"code","dc08b93e":"code","b53b733a":"code","01824cfc":"code","b52f43ff":"code","e47fcf7d":"code","029fc4f8":"code","e6711d93":"code","eeec6932":"code","08c729df":"code","4685875a":"code","8ae1f730":"code","2742b542":"code","ae8964e9":"code","7229452a":"code","154f5fc7":"code","08167881":"code","b88b6f4b":"code","a856eeb4":"code","9e37ecea":"code","53be2ccd":"code","c4d0e86c":"code","b05c9d0c":"markdown","f2185f8f":"markdown","acd794fc":"markdown","1271b46c":"markdown","d439bdd8":"markdown","a88ee66a":"markdown","dbbf1070":"markdown","ba1a59fe":"markdown","872e1668":"markdown","1e9ee6a1":"markdown","f9ad0198":"markdown","f31278b2":"markdown"},"source":{"a9e9a981":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","dcf9ff44":"import os\n\n# There are two ways to load the data from the PANDA dataset:\n# Option 1: Load images using openslide\nimport openslide\n# Option 2: Load images using skimage (requires that tifffile is installed)\nimport skimage.io\nimport random\nimport seaborn as sns\nimport cv2\n\n# General packages\nimport pandas as pd\nimport numpy as np\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport PIL\nfrom IPython.display import Image, display\n\n# Plotly for the interactive viewer (see last section)\nimport plotly.graph_objs as go","104adeff":"# \u5927\u5143\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\nBASE_PATH = '..\/input\/prostate-cancer-grade-assessment'\n\n# training\u3068mask\u753b\u50cf\u30c7\u30fc\u30bf\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\ndata_dir = f'{BASE_PATH}\/train_images'\nmask_dir = f'{BASE_PATH}\/train_label_masks'\n\n\n# train.csv,\u305d\u306e\u4ed6test\u3068submission\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\ntrain = pd.read_csv(f'{BASE_PATH}\/train.csv').set_index('image_id')\ntest = pd.read_csv(f'{BASE_PATH}\/test.csv')\nsubmission = pd.read_csv(f'{BASE_PATH}\/sample_submission.csv')","3d47f5b5":"display(train.head())\nprint(\"Shape of training data :\", train.shape)\nprint(\"unique data provider :\", len(train.data_provider.unique()))\nprint(\"unique isup_grade(target) :\", len(train.isup_grade.unique()))\nprint(\"unique gleason_score :\", len(train.gleason_score.unique()))","02b3072c":"#ISUP\u30b0\u30ec\u30fc\u30c95(\u60aa\u6027\u5ea6\u306e\u9ad8\u3044)\u306e\u753b\u50cf\u3092\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\nres_5 = train.query(\"isup_grade == 5 and data_provider == 'radboud'\")\nres_5.head()","4d9b2b33":"#ISUP\u30b0\u30ec\u30fc\u30c90(\u6b63\u5e38\u7d44\u7e54)\u306e\u753b\u50cf\u3092\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\nres_0 = train.query(\"isup_grade == 0 and data_provider == 'radboud'\")\nres_0.head()","dc08b93e":"def display_image(image_id,x,y,level):\n    isup_grade = train.loc[image_id][\"isup_grade\"]\n    biopsy = openslide.OpenSlide(os.path.join(data_dir,image_id + '.tiff'))\n    biopsy_mask = openslide.OpenSlide(os.path.join(mask_dir,image_id + '_mask.tiff'))\n    print(\"\u753b\u50cf\u60c5\u5831\")\n    print(\"image_id\",image_id)\n    print(\"ISUP\u30b0\u30ec\u30fc\u30c9\uff1a\",isup_grade)\n    print(\"\u753b\u50cf\u30b5\u30a4\u30ba:\",biopsy.dimensions)\n    zoom = [\"\u9ad8\u3044\",\"\u666e\u901a\",\"\u4f4e\u3044\"]\n    print(\"\u62e1\u5927\u7387:\",zoom[level])\n    \n    region = biopsy.read_region((x,y), level, (512, 512))\n    region_mask = biopsy_mask.read_region((x,y), level, (512, 512))\n    \n    f,ax = plt.subplots(1,2,figsize=(16,18))\n    cmap = matplotlib.colors.ListedColormap(['black', 'gray', 'green', 'yellow', 'orange', 'red'])\n    ax[0].imshow(region)\n    ax[0].axis('off')\n    ax[0].set_title(f\"ID: {image_id}\\nISUP: {isup_grade}\")\n    ax[1].imshow(np.asarray(region_mask)[:,:,0], cmap=cmap, interpolation='nearest', vmin=0, vmax=5)\n    ax[1].axis('off')\n    ax[1].set_title(\"mask_image\")\n\n    plt.show() ","b53b733a":"images = [\"007433133235efc27a39f11df6940829\", #grade0\n          \"01642d24ac5520681d6a20f6c42dc4fe\", #grade0\n          \"02577ddcd838f2559936453b6071dc17\", #grade0\n          \"00928370e2dfeb8a507667ef1d4efcbb\", #grade5\n          \"00c15b23b30a5ba061358d9641118904\", #grade5\n          \"00c52cb4db1c7a5811a8f070a910c038\"  #grade5\n         ]","01824cfc":"#\u4e00\u756a\u9060\u3044\u8996\u91ce\u3067\u306e\u753b\u50cf\ndisplay_image(\"007433133235efc27a39f11df6940829\",2000,8000,2)","b52f43ff":"#\u540c\u753b\u50cf\u3092\u62e1\u5927\u3057\u305f\u3082\u306e\ndisplay_image(\"007433133235efc27a39f11df6940829\",4000,11000,1)\n#\u66f4\u306b\u4e0a\u76ae\u7d44\u7e54\u3092\u62e1\u5927\u3057\u305f\u3082\u306e\ndisplay_image(\"007433133235efc27a39f11df6940829\",4300,12500,0)","e47fcf7d":"#\u9060\u304f\u304b\u3089\ndisplay_image(\"00928370e2dfeb8a507667ef1d4efcbb\",2000,8000,2)\n","029fc4f8":"#\u8d64\u3044\u30de\u30b9\u30af\u304c\u3055\u308c\u3066\u3044\u308b\u90e8\u5206\u306b\u3064\u3044\u3066\u62e1\u5927\ndisplay_image(\"00928370e2dfeb8a507667ef1d4efcbb\",5000,8000,1)\n#\u66f4\u306b\u62e1\u5927\ndisplay_image(\"00928370e2dfeb8a507667ef1d4efcbb\",6200,8700,0)","e6711d93":"#\u6b63\u5e38\u7d30\u80de\u4f8b2\ndisplay_image(\"01642d24ac5520681d6a20f6c42dc4fe\",5000,5000,2)","eeec6932":"#\u7dd1\u30de\u30b9\u30af\u90e8\u306b\u3081\u304c\u3051\u3066\u62e1\u5927\u3002\ndisplay_image(\"01642d24ac5520681d6a20f6c42dc4fe\",5000,7000,1)\n#\u66f4\u306b\u62e1\u5927\ndisplay_image(\"01642d24ac5520681d6a20f6c42dc4fe\",6000,7300,0)","08c729df":"#ISUP\u30b0\u30ec\u30fc\u30c95(\u60aa\u6027\u5ea6\u9ad8)\u7d30\u80de\u4f8b2\ndisplay_image(\"00928370e2dfeb8a507667ef1d4efcbb\",2500,8000,2)","4685875a":"#\u60aa\u6027\u90e8\u306b\u62e1\u5927\ndisplay_image(\"00928370e2dfeb8a507667ef1d4efcbb\",4500,8500,1)\n#\u3055\u3089\u306b\u62e1\u5927\ndisplay_image(\"00928370e2dfeb8a507667ef1d4efcbb\",5500,8700,0)","8ae1f730":"#\u307e\u305f\u3001\u540c\u753b\u50cf\u306e\u30aa\u30ec\u30f3\u30b8(\u30b0\u30ea\u30bd\u30f3\u30b9\u30b3\u30a24)\u306e\u90e8\u5206\u306b\u3064\u3044\u3066\u3082\u898b\u3066\u307f\u308b\u3002\ndisplay_image(\"00928370e2dfeb8a507667ef1d4efcbb\",4500,12000,1)\n#\u3055\u3089\u306b\u62e1\u5927\ndisplay_image(\"00928370e2dfeb8a507667ef1d4efcbb\",5200,12800,0)","2742b542":"#\u30c7\u30fc\u30bf\u3092\u63d0\u4f9b\u3057\u3066\u308b\u7814\u7a76\u6240\u306f\u4ee5\u4e0b\u306e2\u3064\u3002\ntrain[\"data_provider\"].unique()","ae8964e9":"def plot_ct(data):\n    left = [i for i in range(len(data))]\n    height = [i[1] for i in data]\n    labels = [i[0] for i in data]\n    plt.bar(left, height, width=0.5,linewidth=2, tick_label=labels)\n    plt.title(\"data_provider\")\n    plt.ylabel(\"count\")\n    plt.xlabel(\"provider\")\n    plt.show()\n    \n\ndata = [\n    ['karolinska',(train[\"data_provider\"] =='karolinska').sum()],\n    ['radboud',(train[\"data_provider\"] =='radboud').sum()]\n]\n\n\nplot_ct(data)\nprint(\"\u65bd\u8a2d\u3054\u3068\u306e\u30c7\u30fc\u30bf\u63d0\u4f9b\u5272\u5408\uff1a\")\nfor i,j in data:\n    print(i,\":\",round(j\/len(train)*100,2),\"%\")","7229452a":"def plot_isup(data):\n    left = [i for i in range(len(data))]\n    height = [i[1] for i in data]\n    labels = [i[0] for i in data]\n    plt.bar(left, height, width=0.5,linewidth=2, tick_label=labels)\n    plt.title(\"isup_grade\")\n    plt.ylabel(\"count\")\n    plt.xlabel(\"isup_grade\")\n    plt.show()\n    \n\ndata = [[i,(train[\"isup_grade\"] == i).sum()] for i in range(6)]\n\nplot_isup(data)\nprint(\"\u305d\u308c\u305e\u308c\u306eISUP\u30b0\u30ec\u30fc\u30c9\u306e\u5272\u5408\uff1a\")\nfor i,j in data:\n    print(\"\u30b0\u30ec\u30fc\u30c9\",i,\":\",round(j\/len(train)*100,2),\"%\")","154f5fc7":"print('karolinska\u306e\u307f')\ndata = [[i,((train[\"isup_grade\"] == i) & (train[\"data_provider\"] =='karolinska')).sum()] for i in range(6)]\n\nplot_isup(data)\nprint(\"\u305d\u308c\u305e\u308c\u306eISUP\u30b0\u30ec\u30fc\u30c9\u306e\u5272\u5408\uff1a\")\nfor i,j in data:\n    print(\"\u30b0\u30ec\u30fc\u30c9\",i,\":\",round(j\/len(train)*100,2),\"%\")","08167881":"print('radboud\u306e\u307f')\ndata = [[i,((train[\"isup_grade\"] == i) & (train[\"data_provider\"] =='radboud')).sum()] for i in range(6)]\n\nplot_isup(data)\nprint(\"\u305d\u308c\u305e\u308c\u306eISUP\u30b0\u30ec\u30fc\u30c9\u306e\u5272\u5408\uff1a\")\nfor i,j in data:\n    print(\"\u30b0\u30ec\u30fc\u30c9\",i,\":\",round(j\/len(train)*100,2),\"%\")","b88b6f4b":"train[\"gleason_score\"].unique()","a856eeb4":"def plot_gleason(data):\n    left = [i for i in range(len(data))]\n    height = [i[1] for i in data]\n    labels = [\"nega\" if i[0] == \"negative\" else i[0] for i in data]\n    plt.bar(left, height, width=0.5,linewidth=2, tick_label=labels)\n    plt.title(\"gleason_score\")\n    plt.ylabel(\"count\")\n    plt.xlabel(\"gleason_score\")\n    plt.show()\n    \n\ndata = [[i,(train[\"gleason_score\"] == i).sum()] for i in train[\"gleason_score\"].unique()]\nplot_gleason(data)\nprint(\"\u305d\u308c\u305e\u308c\u306e\u30b0\u30ea\u30bd\u30f3\u5206\u985e\u306e\u5272\u5408\uff1a\")\nfor i,j in data:\n    print(i,\":\",round(j\/len(train)*100,2),\"%\")","9e37ecea":"for i in [\"karolinska\",\"radboud\"]:\n    res = train[train[\"data_provider\"] == i]\n    print(\"0+0 in \",i,\":\",any(\"0+0\" == i for i in res[\"gleason_score\"]))\n    print(\"negative in \",i,\":\",any(\"negative\" == i for i in res[\"gleason_score\"]))\n","53be2ccd":"print('karolinska\u306e\u307f')\n\ndata = [[i,((train[\"gleason_score\"] == i) & (train[\"data_provider\"] =='karolinska') ).sum()] for i in train[\"gleason_score\"].unique()]\nplot_gleason(data)\nprint(\"\u305d\u308c\u305e\u308c\u306e\u30b0\u30ea\u30bd\u30f3\u5206\u985e\u306e\u5272\u5408\uff1a\")\nfor i,j in data:\n    print(i,\":\",round(j\/len(train)*100,2),\"%\")","c4d0e86c":"print('radboud\u306e\u307f')\n\ndata = [[i,((train[\"gleason_score\"] == i) & (train[\"data_provider\"] =='radboud') ).sum()] for i in train[\"gleason_score\"].unique()]\nplot_gleason(data)\nprint(\"\u305d\u308c\u305e\u308c\u306e\u30b0\u30ea\u30bd\u30f3\u5206\u985e\u306e\u5272\u5408\uff1a\")\nfor i,j in data:\n    print(i,\":\",round(j\/len(train)*100,2),\"%\")","b05c9d0c":"\u307e\u305a\u3001\u6b63\u5e38\u306a\u7d44\u7e54(ISUP\u30b0\u30ec\u30fc\u30c90)\u306e\u753b\u50cf\u306b\u3064\u3044\u30663\u3064\u306e\u500d\u7387\u3067\u898b\u3066\u307f\u307e\u3059  \n\u753b\u50cf\u304b\u3089\u3001\u4ee5\u4e0b\u306e\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002  \n\u30fb\u591a\u304f\u306e\u5834\u6240\u306f\u8a3a\u65ad\u306b\u95a2\u4fc2\u306a\u3044\u975e\u4e0a\u76ae\u6027\u7d44\u7e54\u3067\u3042\u308b\u3002  \n\u30fb\u4e0a\u76ae\u6027\u7d44\u7e54\u306b\u306f\u7d30\u80de\u6838\u304c\u96c6\u4e2d\u3057\u3066\u3044\u308b\u3002  \n\u30fb\u4e0a\u76ae\u6027\u7d44\u7e54\u306f\u6587\u5b57\u901a\u308a\u7d44\u7e54\u306e\u8868\u9762\u306b\u4f4d\u7f6e\u3059\u308b\u3053\u3068\u304c\u5206\u304b\u308b\u3002  \n\u30fb\u6838\u306e\u914d\u7f6e\u304c\u898f\u5247\u7684\u3067\u3042\u308b\u3002  ","f2185f8f":"\u65bd\u8a2d\u3054\u3068\u306b\u304b\u306a\u308a\u30d0\u30e9\u30c4\u30ad\u304c\u3042\u308b\u306e\u304c\u5206\u304b\u308a\u307e\u3057\u305f\u3002  \n\u7279\u5fb4\u3068\u3057\u3066\u306f\u3001  \nkarolinska\u306f\u30b0\u30ec\u30fc\u30c90,1\u306e\u5272\u5408\u304c\u6bd4\u8f03\u7684\u9ad8\u3044\u3002  \nradboud\u306f\u5168\u4f53\u7684\u306b\u5747\u4e00\u306a\u5206\u5e03\u3068\u306a\u3063\u3066\u3044\u308b\u3002  \n\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306b\u304a\u3044\u3066\u3001data_privider\u306f\u4e8b\u524d\u306b\u7279\u5fb4\u91cf\u3068\u3057\u3066\u6e21\u3055\u308c\u308b\u30c7\u30fc\u30bf\u3067\u3059\u3002  \n\u3053\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u306e\u504f\u308a\u304c\u3042\u308b\u3053\u3068\u3092\u8003\u616e\u3059\u308b\u3068\u3001\u65bd\u8a2d\u3054\u3068\u306b\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3001\u3068\u3044\u3046\u65b9\u6cd5\u304c\u6709\u52b9\u306a\u624b\u6bb5\u306b\u306a\u308a\u305d\u3046\u3067\u3059\u3002  \n\n\u6700\u5f8c\u306b\u3001ISUP\u30b0\u30ec\u30fc\u30c9\u3067\u306f\u306a\u304f\u3001\u30b0\u30ea\u30bd\u30f3\u5206\u985e\u306b\u3064\u3044\u3066\u3082\u5206\u5e03\u3092\u898b\u3066\u304a\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002  \n\u30b0\u30ea\u30bd\u30f3\u5206\u985e\u306f\u3001\u7d30\u80de\u4e0a\u76ae\u306b\u304a\u3044\u3066\u305d\u306e\u9762\u7a4d\u304c\u5360\u3081\u308b\u5272\u5408\u304c\u5927\u304d\u3044\u3082\u306e\u304b\u30892\u3064\u64ae\u3063\u3066\u304d\u3066\u30013+3\uff5e5+5\u307e\u3067\u306e\u5206\u985e\u3067\u8868\u3057\u307e\u3059\u3002(\u9670\u6027\u306e\u5834\u5408\u306f0+0\u307e\u305f\u306fnegative)  \n\u66f4\u306b\u305d\u306e\u548c\u304b\u3089ISUP\u30b0\u30ec\u30fc\u30c9\u3092\u6c42\u3081\u308b\u3001\u3068\u3044\u3046\u3075\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002(\u30b3\u30f3\u30da\u30c8\u30c3\u30d7\u306bISUP\u7b97\u51fa\u6cd5\u306e\u56f3\u304c\u3042\u308a\u307e\u3059)  \n\u307e\u305a\u306f\u30c7\u30fc\u30bf\u5168\u4f53\u3067\u306e\u5206\u5e03\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002  ","acd794fc":"\u6b21\u306b\u3001\u60aa\u6027\u5ea6\u306e\u9ad8\u3044\u7d44\u7e54\u753b\u50cf\u306b\u3064\u3044\u3066\u3001\u540c\u3058\u304f3\u6bb5\u968e\u306e\u500d\u7387\u3067\u898b\u3066\u307f\u307e\u3059\u3002  \n\u4ee5\u4e0b\u306e\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002  \n\u30fb\u30de\u30b9\u30af\u753b\u50cf\u306b\u304a\u3044\u3066\u3001\u60aa\u6027\u5ea6\u306e\u9ad8\u3044\u8d64\u8272\u3092\u793a\u3059\u5272\u5408\u304c\u975e\u5e38\u306b\u591a\u3044  \n\u30fb\u7d44\u7e54\u8868\u9762\u3067\u306a\u304f\u3068\u3082\u3001\u7d30\u80de\u6838\u306e\u5bc6\u96c6\u7387\u304c\u975e\u5e38\u306b\u9ad8\u3044  \n\u30fb\u62e1\u5927\u7387\u4e2d\u306e\u753b\u50cf\u3092\u6b63\u5e38\u7d30\u80de\u3068\u6bd4\u8f03\u3057\u305f\u6642\u306b\u3001\u3068\u306b\u304b\u304f\u7d30\u80de\u6838\u306e\u6570\u304c\u591a\u3044\u306e\u304c\u76ee\u7acb\u3064  \n\u30fb\u6838\u306e\u5f62\u3001\u5927\u304d\u3055\u304c\u307e\u3070\u3089\u3067\u3042\u308b  \n\u30fb\u6b63\u5e38\u7d30\u80de\u306b\u5bfe\u3057\u3066\u3001\u6838\u306e\u914d\u7f6e\u304c\u898f\u5247\u7684\u3067\u306a\u3044  ","1271b46c":"# \u30c7\u30fc\u30bf\u306e\u5206\u5e03  \n\u753b\u50cf\u306e\u7279\u5fb4\u3092\u4e00\u901a\u308a\u898b\u7d42\u308f\u3063\u305f\u306e\u3067\u3001\u6b21\u306f\u4e3b\u8981\u306a\u30c7\u30fc\u30bf\u5206\u5e03\u3092\u8abf\u3079\u307e\u3059\u3002  \n\u307e\u305a\u306f\u7814\u7a76\u6240\u3054\u3068\u306e\u30c7\u30fc\u30bf\u306e\u63d0\u4f9b\u5272\u5408\u306b\u3064\u3044\u3066\u898b\u3066\u307f\u307e\u3059\u3002","d439bdd8":"\u3053\u306e2\u3064\u306e\u30c7\u30fc\u30bf\u306e\u6bd4\u8f03\u304b\u3089\u306f\u3001\nkarolinska\u3067\u306f5+\u304b\u3089\u59cb\u307e\u308b\u75c7\u4f8b\u306f\u307b\u3068\u3093\u3069\u6271\u3063\u3066\u3044\u306a\u3044   \n\u305d\u306e\u305f\u3081\u3001karolinska\u306b\u304a\u3051\u308bISUP\u30b0\u30ec\u30fc\u30c95\u306e\u307b\u3068\u3093\u3069\u306f4+5\u306e\u30b0\u30ea\u30bd\u30f3\u5206\u985e\u306b\u3088\u308b\u3082\u306e\u3067\u3042\u308b\u3002  \nkarolinska\u3067\u306f\u967d\u6027\u306e\u5834\u54083+3\u304b3+4\u304c\u5927\u534a\u3092\u5360\u3081\u3066\u3044\u308b\u3002  \nradboud\u3067\u306f\u30c7\u30fc\u30bf\u306e\u5206\u5e03\u304c\u6bd4\u8f03\u7684\u5747\u4e00\u3067\u3042\u308b\u304c\u30015+\u304b\u3089\u59cb\u307e\u308b\u30c7\u30fc\u30bf\u306f\u3084\u306f\u308a\u5c11\u306a\u3044\u3002  \n\n\u3068\u3044\u3063\u305f\u3053\u3068\u304c\u8aad\u307f\u53d6\u308c\u307e\u3059\u3002","a88ee66a":"\u30b0\u30ec\u30fc\u30c90(\u9670\u6027)\u3068\u30b0\u30ec\u30fc\u30c91(\u60aa\u6027\u5ea6\u306e\u4f4e\u3044\u30b0\u30ec\u30fc\u30c9)\u306e\u5272\u5408\u304c\u9ad8\u304f\u3001\u4ed6\u306e\u30c7\u30fc\u30bf\u306e\u5272\u5408\u304c\u307b\u3068\u3093\u3069\u540c\u3058\u3067\u3042\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002  \n\u7279\u306b\u30b0\u30ec\u30fc\u30c93~5\u306f12%\u306b\u7d71\u4e00\u3055\u308c\u3066\u304a\u308a\u3001\u308f\u3056\u3068\u3053\u306e\u3088\u3046\u306b\u4ed5\u7d44\u3093\u3067\u3044\u308b\u306e\u304b\u306a\uff1f\u3068\u611f\u3058\u307e\u3059\u3002  \n\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3067\u3053\u306e\u3088\u3046\u306a\u5206\u5e03\u306b\u306a\u3063\u3066\u3044\u308b\u3068\u306f\u9650\u3089\u306a\u3044\u306e\u3067\u3001\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002  \n  \n\u66f4\u306b\u3001\u65bd\u8a2d\u3054\u3068\u306eISUP\u30b0\u30ec\u30fc\u30c9\u3082\u898b\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002  ","dbbf1070":"\u65bd\u8a2d\u3054\u3068\u306e\u30c7\u30fc\u30bf\u5206\u5e03\u3082\u78ba\u8a8d\u3057\u307e\u3059\u3002","ba1a59fe":"negative\u30680+0\u306f\u540c\u7fa9\u3067\u3059\u304c\u3001\u3069\u3046\u3084\u3089\u7814\u7a76\u6240\u306b\u3088\u3063\u3066\u8868\u8a18\u304c\u7570\u306a\u308b\u3088\u3046\u3067\u3059\u3002  \n0+0\uff1akarolinska\u3067\u306e\u9670\u6027\u8868\u8a18  \nnegative\uff1aradboud\u3067\u306e\u9670\u6027\u8868\u8a18  ","872e1668":"# \u30de\u30b9\u30af\u753b\u50cf\u306e\u30b0\u30ec\u30fc\u30c9\u306b\u3064\u3044\u3066  \n\u5404\u30de\u30b9\u30af\u753b\u50cf\u306e\u8272\u306f\u3001\u6b21\u306e\u30b0\u30ec\u30fc\u30c9\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002  \n## \u9ed2\uff1a\u80cc\u666f\u3002\u7d44\u7e54\u3067\u306f\u306a\u3044\u90e8\u5206  \n## \u7070\u8272\uff1a\u7d50\u5408\u7d44\u7e54\u3084\u975e\u4e0a\u76ae\u7d44\u7e54(\u764c\u306b\u306f\u95a2\u4fc2\u306a\u3044\u7d44\u7e54\u306e\u3053\u3068\u3067\u3059)  \n## \u7dd1\uff1a\u6b63\u5e38\u306a\u4e0a\u76ae\u7d44\u7e54  \n## \u9ec4\u8272\uff1a\u304c\u3093\u7d44\u7e54(\u30b0\u30ea\u30bd\u30f3\u5206\u985e\uff13)  \n## \u30aa\u30ec\u30f3\u30b8\uff1a\u304c\u3093\u7d44\u7e54(\u30b0\u30ea\u30bd\u30f3\u5206\u985e\uff14)  \n## \u8d64\uff1a\u304c\u3093\u7d44\u7e54(\u30b0\u30ea\u30bd\u30f3\u5206\u985e\uff15)  ","1e9ee6a1":"2\u65bd\u8a2d\u306e\u30c7\u30fc\u30bf\u306b\u504f\u308a\u306f\u7121\u3044\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3057\u305f\u3002  \n\u6b21\u306b\u3001ISUP\u30b0\u30ec\u30fc\u30c9\u306e\u5206\u5e03\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002","f9ad0198":"# \u30c7\u30fc\u30bf\u306e\u78ba\u8a8d  \n\u9014\u4e2d\u304f\u3089\u3044\u307e\u3067\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\u306e\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\u3002  \n\u3053\u306eKernel\u3067\u306f\u3001  \n\u30fb\u753b\u50cf\u306e\u78ba\u8a8d  \n\u30fb\u30de\u30b9\u30af\u753b\u50cf\u306e\u78ba\u8a8d  \n\u30fb\u60aa\u6027\u5ea6\u306e\u9ad8\u3044\u7d44\u7e54\u3068\u6b63\u5e38\u7d44\u7e54\u306e\u6bd4\u8f03  \n\u30fb\u30c7\u30fc\u30bf\u306e\u5206\u5e03  \n  \n\u306a\u3069\u306b\u3064\u3044\u3066\u8abf\u3079\u307e\u3059\u3002  ","f31278b2":"# \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u753b\u50cf\u306e\u78ba\u8a8d  \n\u307e\u305a\u6700\u521d\u306b\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u753b\u50cf\u3068\u3001\u305d\u306e\u3069\u306e\u5834\u6240\u304c\u60aa\u6027\u3067\u3042\u308b\u306e\u304b\u3092\u30de\u30b9\u30af\u753b\u50cf\u3092\u7528\u3044\u3066\u78ba\u8a8d\u3057\u3066\u3044\u304d\u307e\u3059\u3002  \n\u6b63\u5e38\u7d44\u7e54\u3068\u60aa\u6027\u5ea6\u306e\u9ad8\u3044\u7d44\u7e54\u306b\u3064\u3044\u3066\u3001\u69d8\u3005\u306a\u62e1\u5927\u7387\u30672\u4f8b\u305a\u3064\u898b\u3066\u307f\u307e\u3059\u3002  \n"}}