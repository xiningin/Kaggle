{"cell_type":{"989b7fe4":"code","38191ac1":"code","b984b851":"code","652217dd":"code","763ee87c":"code","7d0e0e97":"code","913a6c45":"code","a34d77a5":"code","b914dbee":"code","3a672aad":"code","455b5364":"code","ccbfdc3d":"code","79e00a92":"code","7a873cf2":"code","ae938a82":"code","46906f14":"code","e28541a9":"code","7de7c072":"code","4b94a2b4":"code","6a8475c9":"code","f6e67678":"code","70cca328":"code","6e3d51b3":"code","64d21d38":"code","bd996286":"code","fd61e19e":"code","28e6c87b":"code","f9591bd5":"code","aae648c7":"code","8d06c7df":"code","614996ff":"code","b09f8a0f":"code","46f2d185":"code","abc679a2":"code","0cee2589":"code","0e8b71db":"code","2be8095f":"code","a62e53c0":"code","037efd33":"code","34305b90":"code","5e335118":"code","e66155be":"code","cd655e38":"code","ed2e593e":"markdown"},"source":{"989b7fe4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","38191ac1":"# Importing the libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","b984b851":"# Importing the dataset\n# In the given excel file we have 20 separate sheets for different stadiums.\n# Lets import each sheet one by one\n\n# Bangalore Stadium\ndf_bang = pd.read_excel('..\/input\/mumbai-indians-stadium-wise-performance\/UPTADED PERFORMANCE IN STADIUM LIST 2019.xlsx','Bengaluru')","652217dd":"df_bang.head()","763ee87c":"# Displaying column names\n# Notice that Ave is renamed as Ave.1 since there were two columns with same name. Similarly for Runs.1, Player Name.1 and SR.1\ndf_bang.columns","7d0e0e97":"# Delhi Stadium\ndf_delhi = pd.read_excel('..\/input\/mumbai-indians-stadium-wise-performance\/UPTADED PERFORMANCE IN STADIUM LIST 2019.xlsx','Delhi')\ndf_delhi.head()","913a6c45":"# Jaipur Stadium\ndf_jpr = pd.read_excel('..\/input\/mumbai-indians-stadium-wise-performance\/UPTADED PERFORMANCE IN STADIUM LIST 2019.xlsx','Jaipur')\ndf_jpr.head()","a34d77a5":"# Hyderabad Stadium\ndf_hyd = pd.read_excel('..\/input\/mumbai-indians-stadium-wise-performance\/UPTADED PERFORMANCE IN STADIUM LIST 2019.xlsx','Hyderabad')\ndf_hyd.head()","b914dbee":"# Mohali Stadium\ndf_moh = pd.read_excel('..\/input\/mumbai-indians-stadium-wise-performance\/UPTADED PERFORMANCE IN STADIUM LIST 2019.xlsx','Mohali')\ndf_moh.head()","3a672aad":"# Mumbai Stadium\ndf_mum = pd.read_excel('..\/input\/mumbai-indians-stadium-wise-performance\/UPTADED PERFORMANCE IN STADIUM LIST 2019.xlsx','Mumbai')\ndf_mum.head()","455b5364":"# Kolkata Stadium\ndf_kol = pd.read_excel('..\/input\/mumbai-indians-stadium-wise-performance\/UPTADED PERFORMANCE IN STADIUM LIST 2019.xlsx','Kolkata')\ndf_kol.head()","ccbfdc3d":"# Chennai Stadium\ndf_chn = pd.read_excel('..\/input\/mumbai-indians-stadium-wise-performance\/UPTADED PERFORMANCE IN STADIUM LIST 2019.xlsx','Chennai')\ndf_chn.head()","79e00a92":"# Ahmedabad Stadium\ndf_amd = pd.read_excel('..\/input\/mumbai-indians-stadium-wise-performance\/UPTADED PERFORMANCE IN STADIUM LIST 2019.xlsx','Ahmedabad')\ndf_amd.head()","7a873cf2":"# Cuttak Stadium\ndf_ctk = pd.read_excel('..\/input\/mumbai-indians-stadium-wise-performance\/UPTADED PERFORMANCE IN STADIUM LIST 2019.xlsx','Cuttak')\ndf_ctk.head()","ae938a82":"# Nagpur Stadium\ndf_ng = pd.read_excel('..\/input\/mumbai-indians-stadium-wise-performance\/UPTADED PERFORMANCE IN STADIUM LIST 2019.xlsx','Nagpur')\ndf_ng.head()","46906f14":"# Dharamshala Stadium\ndf_dh = pd.read_excel('..\/input\/mumbai-indians-stadium-wise-performance\/UPTADED PERFORMANCE IN STADIUM LIST 2019.xlsx','Dharamshala')\ndf_dh.head()","e28541a9":"# Kochi Stadium\ndf_kch = pd.read_excel('..\/input\/mumbai-indians-stadium-wise-performance\/UPTADED PERFORMANCE IN STADIUM LIST 2019.xlsx','Kochi')\ndf_kch.head()","7de7c072":"# Indore Stadium\ndf_ind = pd.read_excel('..\/input\/mumbai-indians-stadium-wise-performance\/UPTADED PERFORMANCE IN STADIUM LIST 2019.xlsx','Indore')\ndf_ind.head()","4b94a2b4":"# Visakhapatnam Stadium\ndf_vis = pd.read_excel('..\/input\/mumbai-indians-stadium-wise-performance\/UPTADED PERFORMANCE IN STADIUM LIST 2019.xlsx','Visakhapatnam')\ndf_vis.head()","6a8475c9":"# Pune Stadium\ndf_pn = pd.read_excel('..\/input\/mumbai-indians-stadium-wise-performance\/UPTADED PERFORMANCE IN STADIUM LIST 2019.xlsx','Pune')\ndf_pn.head()","f6e67678":"# Raipur Stadium\ndf_rpr = pd.read_excel('..\/input\/mumbai-indians-stadium-wise-performance\/UPTADED PERFORMANCE IN STADIUM LIST 2019.xlsx','Raipur')\ndf_rpr.head()","70cca328":"# Ranchi Stadium\ndf_rnh = pd.read_excel('..\/input\/mumbai-indians-stadium-wise-performance\/UPTADED PERFORMANCE IN STADIUM LIST 2019.xlsx','Ranchi')\ndf_rnh.head()","6e3d51b3":"# Kanpur Stadium\ndf_knp = pd.read_excel('..\/input\/mumbai-indians-stadium-wise-performance\/UPTADED PERFORMANCE IN STADIUM LIST 2019.xlsx','Kanpur')\ndf_knp.head()","64d21d38":"# Rajkot Stadium\ndf_rjk = pd.read_excel('..\/input\/mumbai-indians-stadium-wise-performance\/UPTADED PERFORMANCE IN STADIUM LIST 2019.xlsx','Rajkot')\ndf_rjk.head()","bd996286":"# Now lets create a list containing all the datasets for easy access in visualisation coming up\nmylist = [df_bang, df_delhi, df_jpr, df_hyd, df_moh, df_mum, df_kol, df_chn,df_amd, df_ctk, df_ng, df_dh, df_kch, df_ind,df_vis,df_pn,df_rpr,df_rnh,df_knp, df_rjk]","fd61e19e":"# Creating a list for the names of all stadiums they are situated at\nmylist2 = ['Bangalore','Delhi','Jaipur','Hyderabad','Mohali','Mumbai','Kolkata','Chennai','Ahmedabad','Cuttak','Nagpur','Dharamshala','Kochi','Indore','Visakhapatnam','Pune','Raipur','Ranchi','Kanpur','Rajkot']","28e6c87b":"# Creating a list of the names of all players\nPlayers  = ['Rohit Sharma','Yuvraj Singh','Hardik Pandiya','Quinton de kock','Anukul Roy','Ishan Kishan','Kieron Pollard',\n'Suryakumar Yadav','Krunal Pandya','Lashith Malinga','Jasprit bumrah','Mitchell Mcclenagham','Rahul Chahar','Jayant Yadav',\n'Ben cutting','Siddhesh Lad','Beuran Hendricks','Aditya Tare','Mayank Markande','Alzarri Joseph','Evin Lewis','Rasikh Salam',\n'Barinder Saran','Jason Behrendorff','Anmolpreet Singh','Pankaj Jaswal']","f9591bd5":"# Now lets begin Visualizations !!!","aae648c7":"# Lets see Batting Average of different players for Bangalore Stadium.\nfrom matplotlib import rcParams\nrcParams['figure.figsize'] = 10,7\n\nb = sns.barplot(x='Player Name', y = 'Ave', data = mylist[0] )\n\nplt.rcParams[\"xtick.labelsize\"] = 10\nplt.xticks(rotation = 90)\nplt.tight_layout()\nplt.xlabel('Player Name',fontsize=15)\nplt.ylabel('Average',fontsize=15)\nplt.title('Bangalore', fontsize = 15)\n\nfor p in b.patches:\n    b.annotate(format(p.get_height(), '.1f'), \n                   (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   xytext = (0, 9), \n                   textcoords = 'offset points')\nplt.show()","8d06c7df":"# What if we create visualization for batting average of all the players at different stadiums all at once!\n# Excited ?","614996ff":"# So lets GO for it!\nf, axes = plt.subplots(10,2, figsize=(15,80), sharex = False, sharey = True) \nplt.subplots_adjust(bottom=0.2, wspace=None, hspace=1.2)\ni=0\nmylist3 = []\nwhile i < 20:\n    for j in range(0,10):\n        for k in range(0,2):\n            b = sns.barplot(x='Player Name', y = 'Ave', data = mylist[i], ax=axes[j][k])\n            mylist3.append(axes[j][k])\n            \n            axes[j][k].set_xticklabels(Players, rotation = 90, fontsize=10)\n            axes[j][k].set_ylabel('Batting Average',fontsize=10)\n            axes[j][k].title.set_text(mylist2[i])\n\n            for p in b.patches:\n                b.annotate(format(p.get_height(), '.1f'), \n                (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                ha = 'center', va = 'center', \n                xytext = (0, 9), \n                textcoords = 'offset points')\n            i = i+1\nplt.show()","b09f8a0f":"# Similarly lets create visualization for batting Strike Rate for all the players at different stadiums","46f2d185":"f, axes = plt.subplots(10,2, figsize=(15,80), sharex = False, sharey = True) \nplt.subplots_adjust(bottom=0.2, wspace=None, hspace=1.2)\ni=0\nmylist3 = []\nwhile i < 20:\n    for j in range(0,10):\n        for k in range(0,2):\n            b = sns.barplot(x='Player Name', y = 'SR', data = mylist[i], ax=axes[j][k])\n            mylist3.append(axes[j][k])\n            \n            axes[j][k].set_xticklabels(Players, rotation = 90, fontsize=10)\n            axes[j][k].set_ylabel('Strike Rate(Batting)',fontsize=10)\n            axes[j][k].title.set_text(mylist2[i])\n\n            for p in b.patches:\n                b.annotate(format(p.get_height(), '.1f'), \n                (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                ha = 'center', va = 'center', \n                xytext = (0, 9), \n                textcoords = 'offset points')\n            i = i+1\nplt.show()","abc679a2":"# Similarly lets create visualization for bowling Average for all the players at different stadiums","0cee2589":"f, axes = plt.subplots(10,2, figsize=(15,80), sharex = False, sharey = True) \nplt.subplots_adjust(bottom=0.2, wspace=None, hspace=1.2)\ni=0\nmylist3 = []\nwhile i < 20:\n    for j in range(0,10):\n        for k in range(0,2):\n            b = sns.barplot(x='Player Name', y = 'Ave.1', data = mylist[i], ax=axes[j][k])\n            mylist3.append(axes[j][k]) \n            axes[j][k].set_xticklabels(Players, rotation = 90, fontsize=10)\n            axes[j][k].set_ylabel('Bowling Average',fontsize=10)\n            axes[j][k].title.set_text(mylist2[i])\n\n            for p in b.patches:\n                b.annotate(format(p.get_height(), '.1f'), \n                (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                ha = 'center', va = 'center', \n                xytext = (0, 9), \n                textcoords = 'offset points')\n            i = i+1\nplt.show()","0e8b71db":"# Similarly lets create visualization for bowling Economy for all the players at different stadiums\nf, axes = plt.subplots(10,2, figsize=(15,80), sharex = False, sharey = True) \nplt.subplots_adjust(bottom=0.2, wspace=None, hspace=1.2)\ni=0\nmylist3 = []\nwhile i < 20:\n    for j in range(0,10):\n        for k in range(0,2):\n            b = sns.barplot(x='Player Name', y = 'Econ', data = mylist[i], ax=axes[j][k])\n            mylist3.append(axes[j][k]) \n            axes[j][k].set_xticklabels(Players, rotation = 90, fontsize=10)\n            axes[j][k].set_ylabel('Economy',fontsize=10)\n            axes[j][k].title.set_text(mylist2[i])\n\n            for p in b.patches:\n                b.annotate(format(p.get_height(), '.1f'), \n                (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                ha = 'center', va = 'center', \n                xytext = (0, 9), \n                textcoords = 'offset points')\n            i = i+1\nplt.show()","2be8095f":"# Similarly lets create visualization for bowling Strike Rate for all the players at different stadiums\nf, axes = plt.subplots(10,2, figsize=(15,80), sharex = False, sharey = True) \nplt.subplots_adjust(bottom=0.2, wspace=None, hspace=1.2)\ni=0\nmylist3 = []\nwhile i < 20:\n    for j in range(0,10):\n        for k in range(0,2):\n            b = sns.barplot(x='Player Name', y = 'SR.1', data = mylist[i], ax=axes[j][k])\n            mylist3.append(axes[j][k]) \n            axes[j][k].set_xticklabels(Players, rotation = 90, fontsize=10)\n            axes[j][k].set_ylabel('Strike Rate (Bowling)',fontsize=10)\n            axes[j][k].title.set_text(mylist2[i])\n\n            for p in b.patches:\n                b.annotate(format(p.get_height(), '.1f'), \n                (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                ha = 'center', va = 'center', \n                xytext = (0, 9), \n                textcoords = 'offset points')\n            i = i+1\nplt.show()","a62e53c0":"# From above graphs we can easily get insights of how players performance at given stadium ","037efd33":"# Now lets visualize the performance of a given player at different stadiums","34305b90":"# Visualising the Batting Average of each player at different stadiums\nplt.style.use('dark_background')\nrcParams['figure.figsize'] = 8,3\nfor j in range(0,26):\n    mylist4=[]\n    for i in range(0,20):\n        mylist4.append(mylist[i].at[j,'Ave'])\n    #print(mylist4)\n    b = sns.barplot(x = mylist2, y = mylist4)\n    plt.xticks(rotation = 90)\n    plt.title(Players[j])\n    plt.ylabel('Batting Average')\n    plt.ylim(0,70)\n    for p in b.patches:\n                b.annotate(format(p.get_height(), '.1f'), \n                (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                ha = 'center', va = 'center', \n                xytext = (0, 9), \n                textcoords = 'offset points')\n    plt.show()","5e335118":"# Visualising the Batting Strike Rate of each player at different stadiums\nfor j in range(0,26):\n    mylist4=[]\n    for i in range(0,20):\n        mylist4.append(mylist[i].at[j,'SR'])\n    #print(mylist4)\n    b = sns.barplot(x = mylist2, y = mylist4)\n    plt.xticks(rotation = 90)\n    plt.title(Players[j])\n    plt.ylabel('Strike Rate(Batting)')\n    for p in b.patches:\n                b.annotate(format(p.get_height(), '.1f'), \n                (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                ha = 'center', va = 'center', \n                xytext = (0, 9), \n                textcoords = 'offset points')\n    plt.show()","e66155be":"for j in range(0,26):\n    mylist4=[]\n    for i in range(0,20):\n        mylist4.append(mylist[i].at[j,'Econ'])\n    #print(mylist4)\n    b = sns.barplot(x = mylist2, y = mylist4)\n    plt.xticks(rotation = 90)\n    plt.title(Players[j])\n    plt.ylim(0,17)\n    plt.ylabel('Bowling Economy')\n    for p in b.patches:\n                b.annotate(format(p.get_height(), '.1f'), \n                (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                ha = 'center', va = 'center', \n                xytext = (0, 9), \n                textcoords = 'offset points')\n    plt.show()","cd655e38":"# Similarly we can try for bowling Strike Rate, Average, etc","ed2e593e":"-----"}}