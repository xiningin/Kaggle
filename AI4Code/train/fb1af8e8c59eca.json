{"cell_type":{"586ee835":"code","8e7e8cd0":"code","16f5f615":"code","4efcc132":"code","e77b45cc":"code","df364c75":"code","f4c8d01f":"code","f1b04350":"code","13aa209e":"code","1de38437":"code","0927b01d":"code","4e20ceb0":"code","ce43649c":"markdown","8d7673ff":"markdown","0ebb5e02":"markdown","4db9f390":"markdown","7cf27228":"markdown","a49e2fe2":"markdown","15f10853":"markdown","3db76c28":"markdown","b41d85a6":"markdown","6790a9a4":"markdown"},"source":{"586ee835":"# !pip install \u201cdask[complete]\u201d\n# !python -m pip install dask distributed --upgrade\n\nimport os\nimport dask.dataframe as dd\nfrom dask.distributed import Client, progress\n\nimport matplotlib.pyplot as plt\n\nimport pyarrow\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","8e7e8cd0":"# reading the paths of all the files present in the dataset\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","16f5f615":"# setting the paths to variables to access when required\nTRAINING_PATH = \"\/kaggle\/input\/jane-street-market-prediction\/train.csv\"\nFEATURES_PATH = \"\/kaggle\/input\/jane-street-market-prediction\/features.csv\"\nTEST_PATH = \"\/kaggle\/input\/jane-street-market-prediction\/example_test.csv\"\nSAMPLE_SUB_PATH = \"\/kaggle\/input\/jane-street-market-prediction\/example_sample_submission.csv\"","4efcc132":"%time\ntrain_df = dd.read_csv(TRAINING_PATH)\nfeatures_df = dd.read_csv(FEATURES_PATH)\ntest_df = dd.read_csv(TEST_PATH)","e77b45cc":"train_df.head()","df364c75":"test_df.head()","f4c8d01f":" # start a local Dask client\nclient = Client(n_workers=4, memory_limit='16GB')\nclient","f1b04350":"train_df.to_parquet('.\/jane_street_market_output.parquet')","13aa209e":"%%time\ndata = dd.read_parquet('.\/jane_street_market_output.parquet', engine='pyarrow')","1de38437":" train_df[\"date\"].value_counts().compute().sort_index()","0927b01d":"weights_date = train_df.groupby(train_df.date).weight.mean().compute()\nweights_date","4e20ceb0":"plt.figure(figsize=(16,12))\nplt.bar(weights_date.index, weights_date.values, align='center', alpha=0.8)","ce43649c":"### Thanks :)","8d7673ff":"![Dask](https:\/\/cdn.analyticsvidhya.com\/wp-content\/uploads\/2018\/07\/dask-feat-768x432.jpg)","0ebb5e02":"# Jane Street Market Prediction, Reading Dataset","4db9f390":"## Usage Example","7cf27228":"### In this notebook we are going to use Dask to read a large amount of data in seconds using CPU parallelism, to know more about read the following:<br>\n#### 1) Understanding Dask Framework [here](https:\/\/towardsdatascience.com\/dask-a-guide-to-process-large-datasets-using-parallelization-c5554889abdb)<br>2) Official docs [here](https:\/\/docs.dask.org\/en\/latest\/).","a49e2fe2":"## Output data in form of parquet file","15f10853":"## Reading data","3db76c28":"### Hardware I use to work on Large Data:","b41d85a6":"#### Notice how Dask has reduced the time of reading dataframe to seconds :)<br>To get complete understanding about the data read another notebook [here](https:\/\/www.kaggle.com\/blurredmachine\/jane-street-market-eda-viz-prediction)","6790a9a4":"<table style=\"width:100%\">\n  <tr>\n    <th>HP Z8 G4 Tower - 1125W PSU<\/th>\n    <th>HP ZBook Studio - G7 Mobile Workstation:<\/th>\n  <\/tr>\n  <tr>\n    <td>6234 3.3 GHz (8 Core each) i9 Processors x 2<\/td>\n    <td>6234 3.3 GHz (8 Core) i9 Processor x 1<\/td>\n  <\/tr>\n  <tr>\n    <td>NVIDIA Quadro RTX 8000 x 1<\/td>\n    <td>NVIDIA Quadro RTX 5000 x 1<\/td>\n  <\/tr>\n  <tr>\n    <td>96GB DDR4 RAM 2933<\/td>\n    <td>32GB DDR4 RAM 2933<\/td>\n  <\/tr>\n    \n  <tr>\n    <td>2 TB NVMe M.2 SSD<\/td>\n    <td>2 TB NVMe M.2 SSD<\/td>\n  <\/tr>\n  <tr>\n    <td><img src= \"https:\/\/ssl-product-images.www8-hp.com\/digmedialib\/prodimg\/lowres\/c05724976.png?imdensity=1&imwidth=1024\" width=200px><\/td>\n    <td><img src=\"https:\/\/www8.hp.com\/content\/dam\/sites\/worldwide\/personal-computers\/commercial\/workstations\/zbook-studio\/images\/color-accuracy-image-desktop.png\" width=200px><\/td>\n  <\/tr>\n<\/table>\n"}}