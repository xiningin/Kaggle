{"cell_type":{"3a64b333":"code","071a17e7":"code","42bec68e":"code","d0c4a524":"code","ae2bb45b":"code","cf449ad8":"code","eac8122e":"code","828fe19b":"code","cda72fbb":"code","db1193ec":"code","c57d8330":"code","d6cb9580":"code","dc023e8c":"code","38d2f796":"code","bc2e2255":"code","1a91ebe5":"code","32703a76":"markdown","3ec7f9ef":"markdown","97ce71ce":"markdown","79a684a2":"markdown","75b49615":"markdown","d6cd2c76":"markdown","28902f3c":"markdown","a31b1c0d":"markdown","09053ea7":"markdown","a91e25a7":"markdown","25b992ce":"markdown","267f2b1c":"markdown","60435dd7":"markdown","a0a29650":"markdown","5925cc29":"markdown"},"source":{"3a64b333":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Visualisation libraries\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nsns.set_style('darkgrid')\nfrom plotly.offline import init_notebook_mode, iplot \nimport plotly.graph_objs as go\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\n\n# Increase the default plot size and set the color scheme\nplt.rcParams['figure.figsize'] = 8, 5\n\n# Disable warnings \nimport warnings\nwarnings.filterwarnings('ignore')\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","071a17e7":"df= pd.read_csv(\"..\/input\/novel-corona-virus-2019-dataset\/2019_nCoV_data.csv\",)\ndf.head()","42bec68e":"# Let's check the infos\ndf.info()","d0c4a524":"# Convert Last Update column to datetime64 format\ndf['Last Update'] = df['Last Update'].apply(pd.to_datetime)\ndf.drop(['Sno'],axis=1,inplace=True)\ndf.head()","ae2bb45b":"countries = df['Country'].unique().tolist()\nprint(countries)\n\nprint(\"\\nTotal countries affected by virus: \",len(countries))","cf449ad8":"from datetime import date\nlatest_data = df[df['Last Update'] > pd.Timestamp(date(2020,1,31))]\n\nlatest_data.head()","eac8122e":"print('Globally Confirmed Cases: ',latest_data['Confirmed'].sum())\nprint('Global Deaths: ',latest_data['Deaths'].sum())\nprint('Globally Recovered Cases: ',latest_data['Recovered'].sum())","828fe19b":"# Let's look the various Provinces\/States affected\n\nlatest_data.groupby(['Country','Province\/State']).sum()\n","cda72fbb":"# Creating a dataframe with total no of cases for every country\n\n\ncases = pd.DataFrame(latest_data.groupby('Country')['Confirmed', 'Deaths', 'Recovered'].sum())\ncases['Country'] = cases.index\ncases.index=np.arange(1,28)\n\nglobal_cases = cases[['Country','Confirmed','Deaths', 'Recovered']]\nglobal_cases","db1193ec":"map_data = pd.DataFrame({\n   'name':list(global_cases['Country']),\n   'lat':[-25.27,12.57,56.13,61.92,46.23,51.17,22.32,20.59,41.87,36.2,22.2,35.86,4.21,28.39,12.87,61.52,1.35,35.91,40.46,7.87,60.12,23.7,15.87,55.37,37.09,23.42,14.06,],\n   'lon':[133.78,104.99,-106.35,25.75,2.21,10.45,114.17,78.96,12.56,138.25,113.54,104.19,101.98,84.12,121.77,105.31,103.82,127.77,3.74,80.77,18.64,120.96,100.99,3.43,-95.71,53.84,108.28],\n})\nfig= go.Figure()\nfig.add_trace(go.Scattergeo(\n        lat= map_data['lat'],\n        lon= map_data['lon'],\n        mode= 'markers',\n        marker= dict(\n            size= 12,\n            color='rgb(255, 0, 0)',\n            opacity= 0.7\n        ),\n        text= map_data['name'],\n        hoverinfo= 'text'\n    ))\n\nfig.add_trace(go.Scattergeo(\n        lat= map_data['lat'],\n        lon= map_data['lon'],\n        mode= 'markers',\n        marker= dict(\n            size= 8,\n            color= 'rgb(242, 177, 172)',\n            opacity= 0.7\n        ),\n        hoverinfo= 'none'\n    ))\n\nfig.update_layout(\n        autosize= True,\n        hovermode= 'closest',\n        showlegend= False,\n        title_text= 'Countries with reported confirmed cases, Deaths, Recovered of 2019-nCoV,<br>31 January, 2020',\n    geo= go.layout.Geo(\n        showframe= False,\n        showcoastlines= True,\n        showcountries= True,\n        landcolor= \"rgb(225, 225, 225)\",\n        countrycolor= \"blue\",\n        coastlinecolor= \"blue\",\n        projection_type= \"natural earth\"\n    ))\n\n \nfig.show()","c57d8330":"global_cases.groupby('Country')[ 'Deaths'].sum()","d6cb9580":"#Mainland China\nChina = latest_data[latest_data['Country']== 'Mainland China']\nChina","dc023e8c":"f, ax = plt.subplots(figsize=(12, 8))\n\n\nsns.barplot(x=\"Confirmed\", y=\"Province\/State\", data=China[1:],\n            label=\"Confirmed\", color=\"r\")\n\n\nsns.barplot(x=\"Recovered\", y=\"Province\/State\", data=China[1:],\n            label=\"Recovered\", color=\"g\")\n\n\nsns.barplot(x=\"Deaths\", y=\"Province\/State\", data=China[1:],\n            label=\"Deaths\", color=\"b\")\n\n# Add a legend and informative axis label\nax.set_title('Confirmed vs Recovered vs Death figures of Provinces of China other than Hubei', fontsize=15, fontweight='bold', position=(0.63, 1.05))\nax.legend(ncol=2, loc=\"lower right\", frameon=True)\nax.set(xlim=(0, 40), ylabel=\"\",\n       xlabel=\"Stats\")\nsns.despine(left=True, bottom=True)","38d2f796":"percentage = pd.DataFrame(China.groupby('Province\/State').sum()['Confirmed']).reset_index()\nfig = go.Figure(data= [go.Pie(labels= percentage['Province\/State'], values= percentage.Confirmed)])\nfig.update_layout(title=\"Confirmed cases in province\/states of Mainland China\")\nfig.show()","bc2e2255":"percentage = pd.DataFrame(China.groupby('Province\/State').sum()['Deaths']).reset_index()\nfig = go.Figure(data= [go.Pie(labels= percentage['Province\/State'], values= percentage.Deaths)])\nfig.update_layout(title=\"Death tolls in province\/states of Mainland China\")\nfig.show()","1a91ebe5":"percentage = pd.DataFrame(China.groupby('Province\/State').sum()['Recovered']).reset_index()\nfig = go.Figure(data= [go.Pie(labels= percentage['Province\/State'], values= percentage.Recovered)])\nfig.update_layout(title=\"Recovery rates in province\/states of Mainland China\")\nfig.show()","32703a76":"## Scenerio till 31 January, 2020","3ec7f9ef":"**Special thanks to [Parul Pandey](https:\/\/www.kaggle.com\/parulpandey) for her amazing work on this dataset from which I got my motivation.**","97ce71ce":"**Let's see if any countries have death cases other than China:**","79a684a2":"**So till 31 January, 2020 no other countries have reported deaths. So let's focus on the present state of China:**","75b49615":"## Importing Dataset","d6cd2c76":"**The highest deat tolls:**","28902f3c":"According to World Health Organization (WHO), \"Coronaviruses (CoV) are a large family of viruses that cause illness ranging from the common cold to more severe diseases such as Middle East Respiratory Syndrome (MERS-CoV) and Severe Acute Respiratory Syndrome (SARS-CoV). A novel coronavirus (nCoV) is a new strain that has not been previously identified in humans.\" \n\nIt has been more than one month since the first case of this new zootonic virus has been reported. Wuhan, the capital of Hubei province of China is the epicenter of this new virus. The situation reports about this outbreak can be found [here.](https:\/\/www.who.int\/emergencies\/diseases\/novel-coronavirus-2019\/situation-reports\/)\n\nIn this notebook I will try to get a one month overview of the outbreak. ","a31b1c0d":"## Focus in China","09053ea7":"We know this kind of viruses can spread primarily through contact with an infected person, through respiratory droplets generated when a person, for example, coughs or sneezes, or through droplets of saliva or discharge from the nose. The same happened with 2019-nCov, so let's see in which countries are mostly affected by this virus.","a91e25a7":"**Also checking the recovery rate:**","25b992ce":"**Now let's see which provinces have the highest percentage of confirmed cases:**","267f2b1c":"Let's look at the Confirmed vs Recovered figures of Provinces of China other than Hubei","60435dd7":"**As Wuhan is the epicenter of the coronavirus and capital of the Hubei province, so it has the highest rate in all three features. The recovery rate is still not so high. But we hope and pray this pandemic ends soon and people can start living a normal fear free life again in China and all over the world.**","a0a29650":"## Conclusion","5925cc29":"## Usual Libraries"}}