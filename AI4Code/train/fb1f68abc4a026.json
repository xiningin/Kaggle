{"cell_type":{"46c84bec":"code","7f3db6d5":"code","4f53b1b0":"code","d15b897b":"code","f44f6b9e":"code","6991e106":"code","a6c1f34e":"code","e347dea1":"code","150e9cde":"code","708a658d":"code","095a7517":"code","e1c4519d":"code","0edc4c77":"code","af352610":"code","36e74f41":"code","20f1f241":"code","8f6bf50b":"code","e4099463":"code","b8d29109":"markdown"},"source":{"46c84bec":"!pip install stegano","7f3db6d5":"import os\nfrom stegano import lsb #USED FOR PNG IMAGE\nimport skimage.io as sk\nimport matplotlib.pyplot as plt\nfrom scipy import spatial\nfrom tqdm import tqdm\n\nfrom PIL import Image\nfrom random import shuffle\n\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# \/kaggle\/input\/alaska2-image-steganalysis\/sample_submission.csv\n# \/kaggle\/input\/alaska2-image-steganalysis\/Cover\/64601.jpg","4f53b1b0":"image = sk.imread(\"\/kaggle\/input\/alaska2-image-steganalysis\/Cover\/64601.jpg\")\n\nsecret = lsb.hide(\"\/kaggle\/input\/alaska2-image-steganalysis\/Cover\/64601.jpg\", \"duoduo\")\nsecret.save(\"encoded.png\")","d15b897b":"img1 = sk.imread(\"\/kaggle\/input\/alaska2-image-steganalysis\/Cover\/64601.jpg\")\nimg2 = sk.imread(\"\/kaggle\/working\/encoded.png\")\n\nfig,ax = plt.subplots(1,2,figsize=(18,8))\n    \nax[0].imshow(img1)\nax[1].imshow(img2)","f44f6b9e":"print(lsb.reveal(\"\/kaggle\/working\/encoded.png\"))\n\n(img1 - img2).sum()","6991e106":"# Knaive\nvec1 = np.reshape(img1,(512*512*3))\nvec2 = np.reshape(img2,(512*512*3))\n\n# cosine similarity\nprint(spatial.distance.cosine(vec1,vec2))\nprint(1 - spatial.distance.cosine(vec1,vec2))","a6c1f34e":"BASE_PATH = \"\/kaggle\/input\/alaska2-image-steganalysis\"\ntrain_imageids = pd.Series(os.listdir(BASE_PATH + '\/Cover')).sort_values(ascending=True).reset_index(drop=True)\ntest_imageids = pd.Series(os.listdir(BASE_PATH + '\/Test')).sort_values(ascending=True).reset_index(drop=True)\n\ntrain_imageids","e347dea1":"cover_images_path = pd.Series(BASE_PATH + '\/Cover\/' + train_imageids ).sort_values(ascending=True)\nJMIPOD_images_path = pd.Series(BASE_PATH + '\/JMiPOD\/'+train_imageids).sort_values(ascending=True)\nJUNIWARD_images_path = pd.Series(BASE_PATH + '\/JUNIWARD\/'+train_imageids).sort_values(ascending=True)\nUERD_images_path = pd.Series(BASE_PATH + '\/UERD\/'+train_imageids).sort_values(ascending=True)\ntest_images_path = pd.Series(BASE_PATH + '\/Test\/'+test_imageids).sort_values(ascending=True)\nss = pd.read_csv(f'{BASE_PATH}\/sample_submission.csv')\n\nss","150e9cde":"fig, ax = plt.subplots(nrows=2, ncols=2, figsize=(30, 25))\nk=0\nfor i, row in enumerate(ax):\n    for j, col in enumerate(row):\n        img = sk.imread(cover_images_path[k])\n        col.imshow(img)\n        col.set_title(cover_images_path[k])\n        k=k+1\nplt.suptitle('Cover \u56fe', fontsize=14)\nplt.show()","708a658d":"# \u5c55\u793acover \u52a0 \u4e09\u79cd\u7f16\u7801\u7684 stego\nfig, ax = plt.subplots(nrows=3, ncols=4, figsize=(30, 15))\nfor i in range(3):\n    cvimg = sk.imread(cover_images_path[i])\n    uniimg = sk.imread(JUNIWARD_images_path[i])\n    jpodimg = sk.imread(JMIPOD_images_path[i])\n    uerdimg = sk.imread(UERD_images_path[i])\n    \n    ax[i,0].imshow(cvimg)\n    ax[i,0].set_title('Cover_IMG'+train_imageids[i])\n    ax[i,1].imshow(uniimg)\n    ax[i,1].set_title('JNIWARD_IMG'+train_imageids[i])\n    ax[i,2].imshow(jpodimg)\n    ax[i,2].set_title('JMiPOD_IMG'+train_imageids[i])\n    ax[i,3].imshow(uerdimg)\n    ax[i,3].set_title('UERD_IMG'+train_imageids[i])","095a7517":"# \u67e5\u770b\u9690\u5199\u533a\u57df\nimg_cover = sk.imread(cover_images_path[0])\nimg_jmipod = sk.imread(JMIPOD_images_path[0])\nimg_juniward = sk.imread(JUNIWARD_images_path[0])\nimg_uerd = sk.imread(UERD_images_path[0])\n\nfig, ax = plt.subplots(nrows=3, ncols=4, figsize=(16, 12))\n\nax[0,1].set_title(f'{train_imageids[k]} Channel 0')\nax[0,2].set_title(f'{train_imageids[k]} Channel 1')\nax[0,3].set_title(f'{train_imageids[k]} Channel 2')\n\nax[0,0].imshow(img_jmipod)\nax[0,1].imshow((img_cover == img_jmipod).astype(int)[:,:,0])\nax[0,2].imshow((img_cover == img_jmipod).astype(int)[:,:,1])\nax[0,3].imshow((img_cover == img_jmipod).astype(int)[:,:,2])\nax[0,0].set_ylabel('JMiPOD', rotation=90, size='large')\n\nax[1,0].imshow(img_juniward)\nax[1,1].imshow((img_cover == img_juniward).astype(int)[:,:,0])\nax[1,2].imshow((img_cover == img_juniward).astype(int)[:,:,1])\nax[1,3].imshow((img_cover == img_juniward).astype(int)[:,:,2])\nax[1,0].set_ylabel('JUNIWARD', rotation=90, size='large')\n\nax[2,0].imshow(img_uerd)\nax[2,1].imshow((img_cover == img_uerd).astype(int)[:,:,0])\nax[2,2].imshow((img_cover == img_uerd).astype(int)[:,:,1])\nax[2,3].imshow((img_cover == img_uerd).astype(int)[:,:,2])\nax[2,0].set_ylabel('UERD', rotation=90, size='large')\n\nplt.suptitle('Pixel Deviation from Cover Image')\nplt.show()\n\n(img_cover == img_juniward).shape","e1c4519d":"# \u5728YCbCr\u989c\u8272\u7a7a\u95f4\u4e0a\u67e5\u770b\u56fe\u50cf\u7684\u4e09\u4e2a\u901a\u9053 Cover\nfig,ax = plt.subplots(3,4,figsize=(20,16))\n\nfor i,paths in enumerate(cover_images_path[:3]):\n    image = Image.open(paths)\n    ycbcr = image.convert('YCbCr')\n    (y, cb, cr) = ycbcr.split()\n\n    ax[i,0].imshow(image)\n    ax[i,0].set_title('Cover'+train_imageids[i])\n    ax[i,1].imshow(y)\n    ax[i,1].set_title('Y : Luminance')\n    ax[i,2].imshow(cb)\n    ax[i,2].set_title('Cb : Chroma Blue')\n    ax[i,3].imshow(cr)\n    ax[i,3].set_title('Cr : Chroma Red')","0edc4c77":"# \u67e5\u770b\u4e09\u79cd\u9690\u5199\u7684 YCbCr \u901a\u9053\nfig,ax = plt.subplots(4,4,figsize=(20,16))\nplt.tight_layout()\n\n\nim1 = Image.open(cover_images_path[0])\nim2 = Image.open(JUNIWARD_images_path[0])\nim3 = Image.open(JMIPOD_images_path[0])\nim4 = Image.open(UERD_images_path[0])\n\nfor i,image in enumerate([im1,im2,im3,im4]):\n    ycbcr = image.convert('YCbCr')\n    (y, cb, cr) = ycbcr.split()\n\n    ax[i,0].imshow(image)\n    ax[i,0].set_title('Image')\n    ax[i,1].imshow(y)\n    ax[i,1].set_title('Luminance')\n    ax[i,2].imshow(cb)\n    ax[i,2].set_title('Cb:Chroma Blue')\n    ax[i,3].imshow(cr)\n    ax[i,3].set_title('Cr:Chroma Red')","af352610":"! git clone https:\/\/github.com\/dwgoon\/jpegio\n!pip install jpegio\/.\nimport jpegio as jio","36e74f41":"# \u67e5\u770b\u4e09\u4e2a\u901a\u9053\u7684DCT\u7cfb\u6570\nfig,ax = plt.subplots(4,4,figsize=(20,16))\nplt.tight_layout()\n\nfor i,path in enumerate([cover_images_path[0],JUNIWARD_images_path[0],JMIPOD_images_path[0],UERD_images_path[0]]):\n    \n    image = Image.open(path)\n    jpeg = jio.read(path)\n    DCT_Y = jpeg.coef_arrays[0]\n    DCT_Cr = jpeg.coef_arrays[1]\n    DCT_Cb = jpeg.coef_arrays[2]\n    \n    \n    ax[i,0].imshow(image)\n    ax[i,0].set_title('Image')\n    ax[i,1].imshow(DCT_Y)\n    ax[i,1].set_title('Luminance')\n    ax[i,2].imshow(DCT_Cb)\n    ax[i,2].set_title('Cb:Chroma Blue')\n    ax[i,3].imshow(DCT_Cr)\n    ax[i,3].set_title('Cr:Chroma Red')","20f1f241":"# \u67e5\u770bDCT\u7cfb\u6570\u533a\u522b\ncoverDCT = np.zeros([512,512,3])\nstegoDCT = np.zeros([512,512,3])\njpeg = jio.read(cover_images_path[0])\nstego_juni = jio.read(JUNIWARD_images_path[0])\n\ncoverDCT[:,:,0] = jpeg.coef_arrays[0]\ncoverDCT[:,:,1] = jpeg.coef_arrays[1]\ncoverDCT[:,:,2] = jpeg.coef_arrays[2]\nstegoDCT[:,:,0] = stego_juni.coef_arrays[0]\nstegoDCT[:,:,1] = stego_juni.coef_arrays[1]\nstegoDCT[:,:,2] = stego_juni.coef_arrays[2]\n\nDCT_diff = coverDCT - stegoDCT\nprint(\"DCT\u7cfb\u6570\u76f8\u5f02\u6570\u76ee\uff1a\",len(DCT_diff[np.where(DCT_diff!=0)]))\nprint(\"DCT\u5dee\u5f02\u91cf\uff1a\",np.unique(DCT_diff))\nplt.figure(figsize=(16,10))\nplt.imshow(abs(DCT_diff) )\nplt.show()","8f6bf50b":"# \u4ece\u50cf\u7d20\u5165\u624b\u67e5\u770b\u5dee\u522b\ncoverPixels = np.array(Image.open(cover_images_path[0])).astype('float')\nstegoPixels = np.array(Image.open(JUNIWARD_images_path[0])).astype('float')\n\npixelsDiff = coverPixels - stegoPixels\n\nprint(len(pixelsDiff[np.where(pixelsDiff!=0)]))\nprint(np.unique(pixelsDiff))\nplt.figure(figsize=(16,10))\nplt.imshow(abs(pixelsDiff))\nplt.show()","e4099463":"# \u5bf9\u6bd4\u4e24\u4e2a diff \u56fe\nfig,ax = plt.subplots(1,2,figsize=(16,12))\nax[0].imshow(abs(DCT_diff))\nax[1].imshow(abs(pixelsDiff))","b8d29109":"### Data exploration"}}