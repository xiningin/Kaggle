{"cell_type":{"cf670f4b":"code","d2d03c33":"code","c7e622e3":"code","28504d15":"code","329704ef":"code","9e51f37a":"code","32e9ca7a":"code","e3405abf":"code","596a7b4c":"code","feca5d82":"code","7ccf6116":"code","4a253d46":"code","ec57e4cb":"code","900ecf26":"code","653522ee":"code","e291a944":"code","ea860f71":"code","7037a1ad":"code","98c662a1":"code","500e5a50":"code","da3a1d47":"code","6809b490":"code","0d78d84a":"code","1f0ab88c":"code","7a852d61":"code","d57b3022":"code","389f5781":"code","f5fcc1b8":"code","a40e2865":"code","6a74ae6e":"code","8dac8d5c":"code","243171e7":"code","65e50e00":"code","d34de245":"code","0a42826c":"code","ca640a7b":"code","ff5c2aae":"code","3f7569bb":"code","9fa24c74":"markdown","2ef0f64e":"markdown","e43ad3fb":"markdown","b57aa45e":"markdown","3c9b4e0c":"markdown","aa60ffd7":"markdown","7d5da5c5":"markdown","16d406ea":"markdown","439f07e7":"markdown","b972bdbc":"markdown","45c40be6":"markdown","ae000bcd":"markdown","c115ab29":"markdown","d4f611e5":"markdown","3351787d":"markdown","b3b992f8":"markdown","2b12e3ea":"markdown","87faf651":"markdown","cf7d00c4":"markdown","deaa4f13":"markdown","873b9ee4":"markdown","e7ae5af3":"markdown","210981f3":"markdown","fabd07b8":"markdown","2af5f26d":"markdown","975b6a7d":"markdown","ae56f7fd":"markdown","e39f42bc":"markdown"},"source":{"cf670f4b":"#import all the libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport datetime\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport re\nimport string\n\nimport matplotlib.font_manager as fm\nfrom matplotlib.offsetbox import TextArea, DrawingArea, OffsetImage, AnnotationBbox\nimport matplotlib.image as mpimg\nimport matplotlib.pyplot as plt\n\n\n# VADER Sentiment Analyzer from NLTK\nfrom nltk.sentiment import SentimentAnalyzer\nfrom nltk.sentiment.util import *\nfrom nltk.sentiment.vader import SentimentIntensityAnalyzer\nnltk.download('vader_lexicon')\n\nfrom IPython.display import IFrame\nfrom wordcloud import WordCloud, ImageColorGenerator\n#import matplotlib.pyplot as plt\nfrom nltk.corpus import stopwords","d2d03c33":"df=pd.read_csv('..\/input\/trumps-legacy\/Trumps Legcy.csv')\n\ndf.head()","c7e622e3":"#df.rename(columns={'text':'message'}, inplace = True)\ndataTypeSeries = df.dtypes\ndf[\"id\"]=df[\"id\"].astype(str)\n#print(dataTypeSeries)","28504d15":"#Exploring more features \ndf[\"date\"]= pd.to_datetime(df[\"date\"])\ndf[\"Year\"]= df['date'].dt.year\ndf[\"Month\"]= df['date'].dt.month\ndf[\"Date_no\"]= df['date'].dt.day\ndf[\"Hour\"]= df['date'].dt.hour\ndf[\"Day\"]= df.date.dt.strftime(\"%A\")\ndf['date_dmy'] = df['date'].apply(lambda x: x.strftime(\"%Y-%m-%d\"))\ndf['sentence_length'] = df.text.apply(len)\ndf.head()","329704ef":"tweet1 = pd.DataFrame(df, columns = ['Year','text'])\ntweet1=tweet1.groupby(['Year']).count()\ntweet1 = tweet1.reset_index(inplace=False)\n#tweet1","9e51f37a":"tweet2 = pd.DataFrame(df, columns = ['Year','favorites','retweets'])\ntweet2=tweet2.groupby(['Year']).sum()\ntweet2 = tweet2.reset_index(inplace=False)\n#tweet2","32e9ca7a":"tweet3 = pd.DataFrame(df, columns = ['Hour','text'])\ntweet3=tweet3.groupby(['Hour']).count()\ntweet3 = tweet3.reset_index(inplace=False)\n#tweet3","e3405abf":"tweet4 = pd.DataFrame(df, columns = ['Day','text'])\ntweet4=tweet4.groupby(['Day']).count()\ntweet4 = tweet4.reset_index(inplace=False)\n#tweet4","596a7b4c":"\nfig, ax = plt.subplots(figsize=(22, 6.5),dpi=70, constrained_layout=True)\nfig.patch.set_facecolor('#05214f')\nax.set_facecolor('#05214f')\nax.set_ylim(0, 1.75)\nax.set_xlim(-1, 13)\nax.axhline(1, xmin=0.01, xmax=1.5, c='#4fbdf0', zorder=1,linewidth=40)\n\ntl_sub_x = [0,2,4,6,8,10,12] \ntl_x = [1,3,5,7,9,11] \ntl_dates = [\n    \"2009\\nTweet:56\\n Retweet:4,040\\nFavourite:6,663\",\n    \"2010\\nTweet:142\\n Retweet:25,997\\nFavourite:26,400\",\n    \"2011\\nTweet:773\\n Retweet:240,475\\nFavourite:196,712\",\n    \"2012\\nTweet:3,531\\n Retweet:2,148,322\\nFavourite:1,687,594\",\n    \"2013\\nTweet:8,144\\n Retweet:2,702,375\\nFavourite:2,564,994\",\n    \"2014\\nTweet:5,784\\n Retweet:1,875,426\\nFavourite:2,098,978\",\n    \"2015\\nTweet:7,536\\n Retweet:4,373,101\\nFavourite:8,737,663\",\n    \"2016\\nTweet:4,225\\n Retweet:26,053,735\\nFavourite:72,814,111\",\n    \"2017\\nTweet:2,602\\n Retweet:38,092,938\\nFavourite:161,739,454\",\n    \"2018\\nTweet:3,568\\n Retweet:57,898,893\\nFavourite:234,428,606\",\n    \"2019\\nTweet:7,818\\n Retweet:113,804,887\\nFavourite:366,146,185\",\n    \"2020\\nTweet:12,236\\n Retweet:234,332,515\\nFavourite:731,578,205\",\n    \"2021\\nTweet:156\\n Retweet:6,032,036\\nFavourite:21,737,052\"\n]\nymin1=0.56\nymax1=0.49\nymax2=0.65\nytext1=0.6\nytext2=1.2\n#plot down\nfor i in tl_sub_x:\n    ax.scatter(i,1 , s=40, c='white', zorder=2,linewidths=5)\n    plt.axvline(x=i,ymin=ymin1,ymax=ymax1,color='white', linestyle='-') #vertical line\n    ax.text(i, ytext1, tl_dates[i], ha='center', \n              fontweight='bold',\n             color='white',fontsize=14)\n\n    #plot up\nfor i in tl_x:\n     ax.scatter(i,1 , s=40, c='white', zorder=2,linewidths=5)\n     plt.axvline(x=i,ymin=ymin1,ymax=ymax2,color='white', linestyle='-')  #vertical line\n     ax.text(i, ytext2, tl_dates[i], ha='center', \n               fontweight='bold',\n              color='white',fontsize=14)\n# Spine\nfor spine in [\"left\", \"top\", \"right\", \"bottom\"]:\n     ax.spines[spine].set_visible(False)\n\n# Ticks    \nax.set_xticks([]) \nax.set_yticks([]) \n\n# Title\nax.set_title(\"Trump's Tweet from year 2009-2021\", fontweight=\"bold\",  fontsize=29, color='#4fbdf0')\n\nplt.show()\nfig, ax = plt.subplots(nrows=1,ncols=3,figsize=(8, 3),dpi=70, constrained_layout=True)\nfig.patch.set_facecolor('#4fbdf0')\ncontent_list=[\"\\n  Total Tweet\\n     56,571\",\n              \"\\nTotal Retweet\\n487,584,7401\",\n              \"\\nTotal Favourite\\n1,603,762,617\"]\ncolor_list=['#05214f', '#05214f','#05214f']\nfor i in range(3):\n    ax[i].set_facecolor(color_list[i])\n    ax[i].grid(b=None,axis='both',which='both',color='#4fbdf0')\n    ax[i].axes.get_xaxis().set_visible(False)\n    ax[i].axes.get_yaxis().set_visible(False)\n    for spine in [\"left\", \"top\", \"right\", \"bottom\"]:\n         ax[i].spines[spine].set_visible(False)\n    ax[i].text(0.1,0.4,content_list[i] ,{'fontweight':'bold','font': 'Serif','fontsize': 20,'fontweight': 4,'color': 'white'})\n\n","feca5d82":"tweet4 = pd.DataFrame(df, columns = ['date_dmy','text'])\ntweet4=tweet4.groupby(['date_dmy']).count()\ntweet4 = tweet4.reset_index(inplace=False)\ntweet4\nfig = px.line(tweet4, x='date_dmy', y=\"text\",\n              labels={\n                     \"date_dmy\": \"Year\",\n                     \"text\": \"Tweets per day\"\n                 })\n\nfig.update_layout(\n    font_family=\"Serif\",\n    font_color=\"white\",\n    title_font_family=\"Serif\",\n    title_font_color=\"white\",\n    legend_title_font_color=\"blue\",\n    paper_bgcolor=\"#05214f\",\n    plot_bgcolor='#edf9fc',\n    hovermode='x', \n    title=\"Trump's Tweets per Day\"\n)\nfig.update_xaxes(title_font_family=\"Serif\")\nfig.show()","7ccf6116":"def make_img(img,zoom, x, y):\n    img = mpimg.imread(img)\n    imagebox = OffsetImage(img, zoom=zoom)\n    ab = AnnotationBbox(imagebox, (x,y),frameon=False)\n    ax.add_artist(ab)\n\nfig, ax = plt.subplots(figsize=(8,5), facecolor=\"w\")\nax.axvspan(xmin = 0,xmax= 4, ymax= 1, fc='#030336')\n\n\nmake_img('..\/input\/trump-busy\/trump busiest day.png', 0.6, 2.0, 0.5)\n\nplt.text(0.2,0.9, '      Trump Busiest Day on Twitter    ', {'color':'#4fbdf0','backgroundcolor':'#4fbdf0','font': 'serif','color':'#fcfcff', 'fontsize': 18, 'weight':'bold'},alpha = 0.9 )\nplt.text(0.2,0.1, '       160 Tweets on 05-01-2015       ', {'color':'#4fbdf0','backgroundcolor':'#4fbdf0','font': 'serif','color':'#fcfcff', 'fontsize': 18, 'weight':'bold'},alpha = 0.9 )\nplt.axis('off')\nplt.show()","4a253d46":"busiest_day = df.date_dmy.value_counts().index[0]\nmost_tweets_day = df.date_dmy.value_counts().values[0]\nprint(\"Trump's Busiest Day on Twitter: {} Tweets on {}\".format(most_tweets_day, busiest_day))","ec57e4cb":"# Helper Function to get the running average \ndef get_weighted(series: pd.Series, beta=0.9):\n    weighted = pd.Series(dtype=float)\n    weighted[series.index[0]] = 0 \n    for i in range(1, len(series)):\n        current = series.iloc[i]\n        previous = weighted.iloc[i-1]\n        date = series.index[i]\n        weighted[date] = beta*previous + (1-beta)*current\n    return weighted \n\n# Get a two-line title for our plots\ndef get_multi_line_title(title:str, subtitle:str):\n    return f\"{title}<br><sub>{subtitle}<\/sub><br>\"\nbeta = 0.99 #higher value -> smoother curve\n\nlikes = df.groupby('date_dmy')['favorites'].mean()\nlikes_std = likes.std()\nlikes = likes[likes < 3*likes_std]\n\nretweets = df.groupby('date_dmy')['retweets'].mean()\nretweets_std = retweets.std()\nretweets = retweets[retweets < 3*retweets_std]\nweighted_retweets = get_weighted(retweets, beta)\nweighted_likes = get_weighted(likes, beta)\n\n\nfig = go.Figure([\n    go.Scatter(\n        name=\"Daily Average Likes\",\n        x=likes.index, \n        y=likes.values,\n        mode=\"markers\",\n        opacity=0.3,\n        marker_color=\"salmon\"\n    ), \n    go.Scatter(\n        name=\"Weighted Average Likes\",\n               x=weighted_likes.index, \n        y=weighted_likes.values,\n        opacity=0.8,\n        marker_color='crimson'\n    ),\n    go.Scatter(\n        name=\"Daily Average Retweets\",\n        x=retweets.index, \n        y=retweets.values,\n        mode=\"markers\",\n        opacity=0.3,\n        marker_color=\"lightseagreen\"\n        \n    ), \n        go.Scatter(\n        name=\"Weighted Average Retweets\",\n        x=weighted_retweets.index, \n        y=weighted_retweets.values,\n        opacity=0.8,\n        marker_color='darkgreen'\n    )\n])\nfig.update_layout(\n    font_family=\"Serif\",\n    font_color=\"white\",\n    title_font_family=\"Serif\",\n    title_font_color=\"white\",\n    legend_title_font_color=\"blue\",\n    paper_bgcolor=\"#05214f\",\n    plot_bgcolor='#edf9fc',\n    hovermode='x', \n    xaxis_title=\"Year\",\n    yaxis_title=\"Average Likes per Tweet\",\n    title=\"Trump's Rise In Popularity\"\n)\nfig.update_xaxes(title_font_family=\"Serif\")\nfig.show()","900ecf26":"data = df[df['text'].apply(len) != 0]\ntop_devices = data.groupby('device')['text'].count().sort_values(ascending=False).index.tolist()\n\ndata = data[data['device'].apply(lambda x: x in top_devices)]\nfig = px.histogram(data, x=\"sentence_length\", color=\"device\", opacity=0.75)\n\nfig.update_layout(\n    font_family=\"Arial\",\n    font_color=\"white\",\n    title_font_family=\"Arial\",\n    title_font_color=\"white\",\n    legend_title_font_color=\"blue\",\n    paper_bgcolor=\"#05214f\",\n    plot_bgcolor='#edf9fc',\n    hovermode='x', \n    xaxis_title=\"Text Length\",\n    yaxis_title=\"Number of Tweets\",\n    title=\"Devices used for Tweet\"\n)\nfig.update_xaxes(title_font_family=\"Arial\")\nfig.show()","653522ee":"\ndef format_hour(h: int):\n    h = str(h)\n    if len(h) == 1: \n        h = '0'+h\n    h = h+ \":00\"\n    return h\n\n\nhourly = df.groupby('Hour')['text'].count()\nhourly = pd.DataFrame(hourly).reset_index()\nhourly.columns =['Hour of Day',\"Number of Tweets\"]\nhourly['Hour of Day'] = hourly['Hour of Day'].apply(format_hour)\n\n\n\n\nfig= px.bar_polar(hourly,'Number of Tweets', theta = 'Hour of Day',color = \"Number of Tweets\",\n                 color_discrete_sequence = px.colors.sequential.Plasma_r)\n\n\nfig.update_layout(\n    font_family=\"Serif\",\n    font_color=\"white\",\n    title_font_family=\"Serif\",\n    title_font_color=\"white\",\n    legend_title_font_color=\"blue\",\n    paper_bgcolor=\"#05214f\",\n    plot_bgcolor='#dff0f5',\n    hovermode='x', \n    title=\"Trump's Tweet by Hour\"\n)\nfig.update_xaxes(title_font_family=\"Arial\")\nfig.show()","e291a944":"day_hour = df.id.groupby([df.Day, df.Hour]).count().reset_index()\nday_hour\n# Create a pivot table to call aggregate sum function\nday_hour = pd.pivot_table(day_hour, values = 'id', index = 'Day', columns = 'Hour', aggfunc='sum')\nday_hour = day_hour.reindex((['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']))\n\n\nfont_color=\"#05214f\"\nfig, ax = plt.subplots(figsize = (10,7), dpi = 80)\n#fig.patch.set_facecolor('#05214f')\nax.set_facecolor('#edf9fc')\nax = sns.heatmap(data = day_hour, cbar_kws={'label': 'Tweets per Hour'}, cmap='flare',color=font_color)\nax.set_title(\"When Does Donald Trump Like to Tweet?\",fontsize=12, fontweight='bold', fontfamily='serif',color=font_color)\nax.set_xlabel('Hour of Day (U.S. Eastern Time)',fontsize=10, fontweight='bold', fontfamily='serif',color=font_color)\nax.set_ylabel('Day of Week',fontsize=10, fontweight='bold', fontfamily='serif',color=font_color)\nplt.show()\n\n","ea860f71":"def clean_text(text):\n    '''Make text lowercase, remove text in square brackets,remove links,remove punctuation\n    and remove words containing numbers.'''\n    text = str(text).lower()\n    text = re.sub('&amp', '', text)\n    text = re.sub('rt @\\D\\w*:', '', text)\n    text = re.sub('\\[.*?\\]', '', text)\n    text = re.sub('https?:\/\/\\S+|www\\.\\S+', '', text)\n    text = re.sub('<.*?>+', '', text)\n    text = re.sub('[%s]' % re.escape(string.punctuation), '', text)\n    text = re.sub('\\n', '', text)\n    text = re.sub('\\w*\\d\\w*', '', text)\n    return text\n   ","7037a1ad":"df['message_clean'] = df['text'].apply(clean_text)\n#df.head(15)","98c662a1":"# Initialize the VADER sentiment analyzer object\nvader_analyzer = SentimentIntensityAnalyzer()","500e5a50":"def sentiment_scores(message_clean):\n  score = vader_analyzer.polarity_scores(message_clean)\n  return score","da3a1d47":"df['polarity_scores'] = df.text.apply(sentiment_scores)\ndf['vader_compound'] = df.polarity_scores.apply(lambda x: x['compound'])\ndf['vader_neg'] = df.polarity_scores.apply(lambda x: x['neg'])\ndf['vader_neu'] = df.polarity_scores.apply(lambda x: x['neu'])\ndf['vader_pos'] = df.polarity_scores.apply(lambda x: x['pos'])\n#print(df.head())","6809b490":"\nconditions = [\n    (df['vader_compound'] == 0),\n    (df['vader_compound'] > 0),\n    (df['vader_compound'] < 0)\n]\nchoices = ['neutral','positive','negative']\n\ndf['vader_compound1'] = np.select(conditions, choices)\n#print(df)","0d78d84a":"# Grouping sentiment scores by day to get average daily sentiment scores\ndt_sentiment_dmy = df.vader_compound.groupby(df.date_dmy).mean().reset_index()\nconditions = [\n    (dt_sentiment_dmy['vader_compound'] == 0),\n    (dt_sentiment_dmy['vader_compound'] > 0),\n    (dt_sentiment_dmy['vader_compound'] < 0)\n]\nchoices = ['neutral','positive','negative']\n\ndt_sentiment_dmy['vader_compound1'] = np.select(conditions, choices)\n\ndt_sentiment_dmy[\"date_dmy\"]= pd.to_datetime(dt_sentiment_dmy[\"date_dmy\"])\ndt_sentiment_dmy[\"year\"]= dt_sentiment_dmy['date_dmy'].dt.year\n\n#print(dt_sentiment_dmy)\n","1f0ab88c":"fig = px.line(dt_sentiment_dmy, x='date_dmy', y=\"vader_compound\")\n\nfig.update_layout(\n    font_family=\"Serif\",\n    font_color=\"white\",\n    title_font_family=\"Serif\",\n    title_font_color=\"white\",\n    legend_title_font_color=\"blue\",\n    paper_bgcolor=\"#05214f\",\n    plot_bgcolor='#edf9fc',\n    hovermode='x', \n    xaxis_title=\"Year\",\n    yaxis_title=\"Average Daily Sentiment \",\n    title=\"Trump Tweet Sentiments(VADER Compound Score)\"\n)\nfig.update_xaxes(title_font_family=\"Arial\")\nfig.show()","7a852d61":"\n\nfont_color=\"#05214f\"\nfig, ax = plt.subplots(figsize = (10,7), dpi = 80)\nfig.patch.set_facecolor('#05214f')\nax.set_facecolor('#edf9fc')\nfont_color=\"white\"\nsns.histplot(dt_sentiment_dmy['vader_compound'], ax=ax, color='b', binwidth=0.10, stat='density')\nplt.legend(['Compound VADER Score'])\nax.set_xlim(-1,1)\n\nax.set_title('Distribution of Compound Vader Scores for Trump Tweets',fontsize=12, fontweight='bold', fontfamily='serif',color=font_color)\nax.set_xlabel('VADER Score',fontsize=10, fontweight='bold', fontfamily='serif',color=font_color)\nax.set_ylabel('Density',fontsize=10, fontweight='bold', fontfamily='serif',color=font_color)\nplt.show()","d57b3022":"tweet7 = pd.DataFrame(df, columns = ['text','vader_compound1'])\ntweet7=tweet7.groupby(['vader_compound1']).count()\ntweet7 = tweet7.reset_index(inplace=False)\n#tweet7","389f5781":"fig = px.pie(tweet7, values='text', names='vader_compound1', title='Sentiment Distribution')\nfig.update_layout(\n    font_family=\"Serif\",\n    font_color=\"white\",\n    title_font_family=\"Serif\",\n    title_font_color=\"white\",\n    legend_title_font_color=\"blue\",\n    paper_bgcolor=\"#05214f\",\n    plot_bgcolor='#edf9fc',\n    hovermode='x'\n)\nfig.update_xaxes(title_font_family=\"Arial\")\nfig.show()","f5fcc1b8":"def flatten_list(l):\n    return [x for y in l for x in y]\n\n# color coding our wordclouds \ndef red_color_func(word, font_size, position, orientation, random_state=None,**kwargs):\n    return f\"hsl(0, 100%, {random.randint(25, 75)}%)\" \n\ndef green_color_func(word, font_size, position, orientation, random_state=None,**kwargs):\n    return f\"hsl({random.randint(90, 150)}, 100%, 30%)\" \n\ndef yellow_color_func(word, font_size, position, orientation, random_state=None,**kwargs):\n    return f\"hsl(42, 100%, {random.randint(25, 50)}%)\" \n\ndef generate_word_clouds(neg_doc, neu_doc, pos_doc):\n # Display the generated image:\n\n  fig, axes = plt.subplots(1,3, figsize=(20,10))    \n  wordcloud_neg = WordCloud(max_font_size=50, max_words=100, background_color=\"white\").generate(\" \".join(neg_doc))\n  axes[0].imshow(wordcloud_neg.recolor(color_func=red_color_func, random_state=3), interpolation='bilinear')\n  axes[0].set_title(\"Negative Tweets\")\n  axes[0].axis(\"off\")\n\n  wordcloud_neu = WordCloud(max_font_size=50, max_words=100, background_color=\"white\").generate(\" \".join(neu_doc))\n  axes[1].imshow(wordcloud_neu.recolor(color_func=yellow_color_func, random_state=3), interpolation='bilinear')\n  axes[1].set_title(\"Neutral Words\")\n  axes[1].axis(\"off\")\n\n  wordcloud_pos = WordCloud(max_font_size=50, max_words=100, background_color=\"white\").generate(\" \".join(pos_doc))\n  axes[2].imshow(wordcloud_pos.recolor(color_func=green_color_func, random_state=3), interpolation='bilinear')\n  axes[2].set_title(\"Positive Words\")\n  axes[2].axis(\"off\")\n\n  plt.tight_layout()\n  plt.show();\n\nsentiment_sorted= data.sort_values('favorites', ascending=False)\npositive_top_100 = df[df['vader_compound1'] == \"positive\"].iloc[:100]\nnegative_top_100 = df[df['vader_compound1'] == \"negative\"].iloc[:100]\nneutral_top_100 = df[df['vader_compound1'] == \"neutral\"].iloc[:100]\n\ncleanup = lambda x: [y for y in x.split() if y not in stopwords.words('english')]\nneg_doc = flatten_list(negative_top_100['message_clean'].apply(cleanup))\npos_doc = flatten_list(positive_top_100['message_clean'].apply(cleanup))\nneu_doc = flatten_list(neutral_top_100['message_clean'].apply(cleanup))\n\ngenerate_word_clouds(neg_doc, neu_doc, pos_doc)","a40e2865":"co=df[df['message_clean'].str.contains(\"corona\")]\nindex=co.index\nnumber_of_rows = len(index)\n#print(\"corona:\",number_of_rows)\nco1=df[df['message_clean'].str.contains(\"covid\")]\nindex1=co1.index\nnumber_of_rows1 = len(index1)\n#print(\"covid:\",number_of_rows1)\nco2=df[df['message_clean'].str.contains(\"virus\")]\nindex2=co2.index\nnumber_of_rows2 = len(index2)\n#print(\"virus:\",number_of_rows2)\n#print(\"Total:\",number_of_rows+number_of_rows1+number_of_rows2)\n","6a74ae6e":"\nfig, ax = plt.subplots(figsize=(8,5), facecolor=\"w\")\nax.axvspan(xmin = 0,xmax= 4, ymax= 1, fc='#030336')\n\n\nmake_img('..\/input\/corona\/corona.jpg', 0.6, 2.0, 0.5)\n\nplt.text(0.2,0.9, '                  Corona Virus                   ', {'color':'#4fbdf0','backgroundcolor':'#4fbdf0','font': 'serif','color':'#fcfcff', 'fontsize': 18, 'weight':'bold'},alpha = 0.9 )\nplt.text(0.2,0.1, '    Appears in Tweets 830 time         ', {'color':'#4fbdf0','backgroundcolor':'#4fbdf0','font': 'serif','color':'#fcfcff', 'fontsize': 18, 'weight':'bold'},alpha = 0.9 )\n\nplt.axis('off')\nplt.show()\n","8dac8d5c":"election=df[df['message_clean'].str.contains(\"election fraud\")]\nindex=election.index\nnumber_of_rows = len(index)\n#print(\"election fraud:\",number_of_rows)\n","243171e7":"fig, ax = plt.subplots(figsize=(8,5), facecolor=\"w\")\nax.axvspan(xmin = 0,xmax= 4, ymax= 1, fc='#030336')\n\n\nmake_img('..\/input\/election\/vote.jpg', 0.6, 2.0, 0.5)\n\nplt.text(0.2,0.9, '                  Fruad Election                  ', {'color':'#4fbdf0','backgroundcolor':'#4fbdf0','font': 'serif','color':'#fcfcff', 'fontsize': 18, 'weight':'bold'},alpha = 0.9 )\nplt.text(0.2,0.1, '    Appears in Tweets 20 time         ', {'color':'#4fbdf0','backgroundcolor':'#4fbdf0','font': 'serif','color':'#fcfcff', 'fontsize': 18, 'weight':'bold'},alpha = 0.9 )\n\nplt.axis('off')\nplt.show()","65e50e00":"stock=df[df['message_clean'].str.contains(\"stock\")]\nindex=stock.index\nnumber_of_rows = len(index)\n#print(\"stock market:\",number_of_rows)\n","d34de245":"fig, ax = plt.subplots(figsize=(8,5), facecolor=\"w\")\nax.axvspan(xmin = 0,xmax= 4, ymax= 1, fc='#030336')\n\n\nmake_img('..\/input\/stockexchange\/stock exchange.jpg', 0.6, 2.0, 0.5)\n\nplt.text(0.2,0.9, '                  Stock Exchange               ', {'color':'#4fbdf0','backgroundcolor':'#4fbdf0','font': 'serif','color':'#fcfcff', 'fontsize': 18, 'weight':'bold'},alpha = 0.9 )\nplt.text(0.2,0.1, '    Appears in Tweets 267 time         ', {'color':'#4fbdf0','backgroundcolor':'#4fbdf0','font': 'serif','color':'#fcfcff', 'fontsize': 18, 'weight':'bold'},alpha = 0.9 )\n\nplt.axis('off')\nplt.show()","0a42826c":"pak=df[df['message_clean'].str.contains(\"pakistan\")]\nindex=pak.index\nnumber_of_rows = len(index)\n#print(\"pakistan:\",number_of_rows)\nindia=df[df['message_clean'].str.contains(\"india\")]\nindex=india.index\nnumber_of_rows = len(index)\n#print(\"india:\",number_of_rows)\nmexico=df[df['message_clean'].str.contains(\"mexico\")]\nindex=mexico.index\nnumber_of_rows = len(index)\n#print(\"mexico:\",number_of_rows)\nnk=df[df['message_clean'].str.contains(\"north korea\")]\nindex=nk.index\nnumber_of_rows = len(index)\n#print(\"north korea:\",number_of_rows)","ca640a7b":"def get_flag(name):\n     path = \"..\/input\/country\/flag\/{}.png\".format(name)\n     im = plt.imread(path)\n     return im\n\ndef offset_image(coord, name, ax):\n    img = get_flag(name)\n    im = OffsetImage(img, zoom=0.3)\n    im.image.axes = ax\n\n    ab = AnnotationBbox(im, (coord, 0),  xybox=(0., -45.), frameon=False,\n                        xycoords='data',  boxcoords=\"offset points\", pad=0.5)\n\n    ax.add_artist(ab)\n\n\ncountries = [\"india\",\"mexico\", \"north korea\", \"pakistan\"]\nvaluesA = [157, 353, 207, 19]\n\n\n\nfig, ax = plt.subplots(figsize=(10,6),dpi = 80)\nax.set_facecolor('#f7f9fc')\nfig.patch.set_facecolor('#f7f9fc')\n#ax.axvspan(xmin = -0.5,xmax=3.5 , ymax= 1, fc='#030336')\nax.bar(range(len(countries)), valuesA, width=0.5,align=\"center\")\nax.set_xticks(range(len(countries)))\nax.set_xticklabels(countries)\nax.tick_params(axis='x', which='major', pad=80)\n\nfor i, c in enumerate(countries):\n    offset_image(i, c, ax)\nplt.text(-0.6,380.7, '                               Countries Name in Tweet                                 ', {'color':'#4fbdf0','backgroundcolor':'#4fbdf0','font': 'serif','color':'#fcfcff', 'fontsize': 16, 'weight':'bold'},alpha = 0.9 )\n\n#plt.axis('off')\nplt.show()","ff5c2aae":"joe=df[df['message_clean'].str.contains(\"joe\")]\nindex=joe.index\nnumber_of_rows = len(index)\n#print(\"joe:\",number_of_rows)\nhillary=df[df['message_clean'].str.contains(\"hillary\")]\nindex=hillary.index\nnumber_of_rows = len(index)\n#print(\"hillary:\",number_of_rows)\nobama=df[df['message_clean'].str.contains(\"obama\")]\nindex=obama.index\nnumber_of_rows = len(index)\n#print(\"obama:\",number_of_rows)","3f7569bb":"def make_img(img,zoom, x, y):\n    img = mpimg.imread(img)\n    imagebox = OffsetImage(img, zoom=zoom)\n    ab = AnnotationBbox(imagebox, (x,y),frameon=False)\n    ax.add_artist(ab)\n\nfig, ax = plt.subplots(figsize=(22,8), facecolor=\"w\")\nax.axvspan(xmin = 0,xmax= 4, ymax= 1, fc='#D3B9DF', alpha=0.2)\nax.axvspan(xmin = 4,xmax= 8, ymax= 1, fc='#90DAE0', alpha=0.2)\nax.axvspan(xmin = 8,xmax= 12, ymax= 1, fc='#E0A479', alpha=0.2)\nmake_img('..\/input\/p-country\/pname\/joe.png', 0.9, 2, 0.6)\nmake_img('..\/input\/pnames\/pname\/hillary.png', 0.9, 6, 0.6)\nmake_img('..\/input\/pnames\/pname\/obama.png', 1, 10, 0.6)\nplt.text(s = \"Joe Biden\", x= 2, y= 0.85, va='center', ha='center', fontsize= 30,color ='#030336')\nplt.text(s = \"Hillary Clinton\", x= 6, y= 0.85, va='center', ha='center', fontsize= 30,color ='#030336')\nplt.text(s = \"Barack Obama\", x= 10, y= 0.85, va='center', ha='center', fontsize= 30,color ='#030336')\nplt.text(s = \"1024\", x= 2, y= 0.2, va='center', ha='center',fontsize= 30,color ='#fafbfc',backgroundcolor= '#4fbdf0')\nplt.text(s = \"1088\", x= 6, y= 0.2, va='center', ha='center',fontsize= 30,color ='#fafbfc',backgroundcolor= '#4fbdf0')\nplt.text(s = \"3114\", x= 10, y= 0.2, va='center', ha='center',fontsize= 30,color ='#fafbfc',backgroundcolor= '#4fbdf0')\nplt.text(0.1,0.95, '                                                      Tweets on Hillary Clinton, Obama and Joe Biden                                            ', {'color':'#4fbdf0','backgroundcolor':'#4fbdf0','font': 'serif','color':'#fcfcff', 'fontsize': 18, 'weight':'bold'},alpha = 0.9 )\nplt.axis('off')\nplt.show()","9fa24c74":"<p style=\"background-color:#0c84cf;font-family:newtimeroman;color:#e6f1f7;font-size:150%;text-align:center;border-radius:20px 60px;\">Trump's Tweets per Day<\/p>","2ef0f64e":"<h1 style = \"font-size:20px; font-family:Garamond ; font-weight : normal; color : #0a0a6e;\"> VADER determines the positivity, neutrality, and negativity of each string and represents each type of sentiment with a number between 0 and 1. The values are then used to calculate a compound score, where -1 is most negative, 0 is neutral, and +1 is most positive.<\/h1>","e43ad3fb":"<h1 style = \"font-size:20px; font-family:Garamond ; font-weight : normal; color : #0a0a6e;\"> Trump\u2019s tweets are generally more positive.<\/h1>","b57aa45e":"<p style=\"background-color:#0c84cf;font-family:newtimeroman;color:#e6f1f7;font-size:150%;text-align:center;border-radius:20px 60px;\">How many times Trump has downplayed Corona\/Covid?<\/p>","3c9b4e0c":"<p style=\"background-color:#0c84cf;font-family:newtimeroman;color:#e6f1f7;font-size:150%;text-align:center;border-radius:20px 60px;\">Trump's Tweet 2009-2021<\/p>","aa60ffd7":"<h1 style = \"font-size:20px; font-family:Garamond ; font-weight : normal; color : #0a0a6e;\"> Trump does most of his tweeting at 12:00 PM and 8:00 AM<\/h1>","7d5da5c5":"<p style=\"background-color:#0c84cf;font-family:newtimeroman;color:#e6f1f7;font-size:150%;text-align:center;border-radius:20px 60px;\">Trump's Tweet Sentiments<\/p>","16d406ea":"<h1 style = \"font-size:20px; font-family:Garamond ; font-weight : normal; color : #0a0a6e;\"> This is more interesting. It appears that Trump does most of his tweeting between the hours of 11 AM and 10 PM. This heatmap helps us to visualize the density of the tweet activity within this period, but it also shows us that aside from the early hours of the morning, Trump is generally quite active.<\/h1>","439f07e7":"<p style=\"background-color:#0c84cf;font-family:newtimeroman;color:#e6f1f7;font-size:150%;text-align:center;border-radius:20px 60px;\">Compound Vader Scores for Trump Tweets<\/p>","b972bdbc":"<p style=\"background-color:#0c84cf;font-family:newtimeroman;color:#e6f1f7;font-size:150%;text-align:center;border-radius:20px 60px;\">How many times Trump discussed a particular countries North Korea, India, Pakistan, Mexico?<\/p>","45c40be6":"<p style=\"background-color:#0c84cf;font-family:newtimeroman;color:#e6f1f7;font-size:150%;text-align:center;border-radius:20px 60px;\">How many tweets about Hillary Clinton, Obama or Joe Biden?<\/p>","ae000bcd":"<p style=\"background-color:#0c84cf;font-family:newtimeroman;color:#e6f1f7;font-size:150%;text-align:center;border-radius:20px 60px;\">Trump's Tweet by Day of week and Hour<\/p>","c115ab29":"<p style=\"background-color:#0c84cf;font-family:newtimeroman;color:#e6f1f7;font-size:150%;text-align:center;border-radius:20px 60px;\">Trump's Rise In Popularity<\/p>","d4f611e5":"<p style=\"background-color:#0c84cf;font-family:newtimeroman;color:#e6f1f7;font-size:150%;text-align:center;border-radius:20px 60px;\">Trump's Tweet Analysis from 2009-2021<\/p>","3351787d":"<p style=\"background-color:#0c84cf;font-family:newtimeroman;color:#e6f1f7;font-size:150%;text-align:center;border-radius:20px 60px;\">How many times Trump has called the election fraud?<\/p>","b3b992f8":"<p style=\"background-color:#0c84cf;font-family:newtimeroman;color:#e6f1f7;font-size:150%;text-align:center;border-radius:20px 60px;\">Trump's Tweet Wordcloud<\/p>","2b12e3ea":"<p style=\"background-color:#0c84cf;font-family:newtimeroman;color:#e6f1f7;font-size:150%;text-align:center;border-radius:20px 60px;\">Trump's Tweet by Hour<\/p>","87faf651":" <h1 style = \"font-size:20px; font-family:Garamond ; font-weight : normal; color : #0a0a6e;\"> Patterns and Trends: \nIn this project, we performed an in-depth analysis and visualization of Donald Trump\u2019s Twitter history to uncover patterns and trends in his activity.Donald Trump is incredibly active on Twitter. Surprisingly, Trump\u2019s Twitter use appears to have been highest from 2013-2015, and significantly decreased in the following years. However, in the past 2 years, Trump\u2019s Twitter activity has seen a consistent upward trend and is close to his peak activity.Trump\u2019s tweets were generally neutral, even slightly positive. However, we also see that many of Trump\u2019s tweets were negative. Although the positive is more frequent than the negative.<\/h1>","cf7d00c4":"<h1 style = \"font-size:20px; font-family:Garamond ; font-weight : normal; color : #0a0a6e;\"> There is no doubt that Donald Trump has been a very controversial and polarizing figure in the United States, especially since he announced his run for the presidency in 2015.Throughout his presidency, Donald Trump has used Twitter as a powerful tool to reach his supporters. The social media service has, without a doubt, been one of his most powerful tools.<\/h1>","deaa4f13":"<h1 style = \"font-size:20px; font-family:Garamond ; font-weight : normal; color : #0a0a6e;\"> Trump\u2019s Twitter activity was very high between 2013 and 2016, then decreased after the start of his presidency. However, even more interesting is the fact that Trump has steadily increased his activity since the start of 2019, and is now sending more tweets per month than ever before!<\/h1>","873b9ee4":"<p style=\"background-color:#0c84cf;font-family:newtimeroman;color:#e6f1f7;font-size:150%;text-align:center;border-radius:20px 60px;\">Devices used for Tweet<\/p>","e7ae5af3":"<h1 style = \"font-size:20px; font-family:Garamond ; font-weight : normal; color : #0a0a6e;\"> Trump\u2019s used to send long text from an Iphone.<\/h1>","210981f3":"<p style=\"background-color:#0c84cf;font-family:newtimeroman;color:#e6f1f7;font-size:150%;text-align:center;border-radius:20px 60px;\">Sentiment Distribution<\/p>","fabd07b8":"![image.png](attachment:941a6725-3168-4d8c-8d65-51bab5ff7248.png)","2af5f26d":"![image.png](attachment:f505ed82-de04-4c9e-8a27-47aaaa651594.png)","975b6a7d":"<p style=\"background-color:#0c84cf;font-family:newtimeroman;color:#e6f1f7;font-size:150%;text-align:center;border-radius:20px 60px;\">Link between Trump tweets and stock market prices?<\/p>","ae56f7fd":"<p style=\"background-color:#0c84cf;font-family:newtimeroman;color:#e6f1f7;font-size:150%;text-align:center;border-radius:20px 60px;\">Trump after reviewing my note boook\ud83e\udd23\ud83e\udd23\ud83e\udd23<\/p>","e39f42bc":"<h1 style = \"font-size:30px; font-family:Garamond ; font-weight : normal; color : #0a0a6e;\"> Please do leave your comments \/suggestions and if you like this kernel greatly appreciate to UPVOTE .<\/h1>"}}