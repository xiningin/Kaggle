{"cell_type":{"9319d85a":"code","3f2777c0":"code","f0ee3d31":"code","82dcc483":"code","2a449fc5":"code","653281d2":"code","c1f11dd4":"code","036101cf":"code","0b2f7d9c":"code","4ef8f33b":"code","c63f29ed":"code","24d5acb7":"code","356a7951":"code","fce3ecf8":"code","65f1609a":"code","42c101d3":"code","c3b87bf0":"code","ee422525":"code","66d2b4fb":"code","dd46e797":"code","7f5fd407":"code","d1cdbee4":"code","f3ebfbcc":"code","f8fde1d9":"code","f2e7fdc9":"code","f7adc1c0":"code","97d4b084":"code","9f1dc0fe":"code","b75b364a":"code","08f69123":"code","6f00d1fb":"code","4076efc0":"code","4bd547c4":"code","55d2bf4d":"code","6e1e69a3":"code","e3753d91":"code","0d6bc9aa":"code","e8c8196f":"code","48fcaaf4":"code","92b55f12":"code","1364e78e":"code","dcb2b654":"code","a31cc8f4":"code","6ceb19ab":"code","799ca180":"code","23682081":"code","ca0b5f34":"code","396f1a02":"code","9068cb65":"code","12f7d798":"code","66c995ec":"code","88b64e9f":"code","d81ddf29":"code","56dcd322":"code","0ee4be27":"code","6c73e78c":"code","e3caca70":"code","9b777fb1":"code","31570dce":"code","808653f6":"code","8a68766f":"code","6aa52abf":"code","8a1ee550":"code","31af7248":"code","60ce6940":"code","8714c6ce":"code","5816629c":"code","73bae7c9":"code","7d00ae8d":"code","f589daf3":"code","3f20741c":"code","1fc661d8":"code","a7a4d6de":"markdown","859684f8":"markdown","62591658":"markdown","ae0da766":"markdown","5896ac62":"markdown","755aa14f":"markdown","c40a8520":"markdown","185758ff":"markdown","c5cfc645":"markdown"},"source":{"9319d85a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3f2777c0":"import seaborn as sns\nimport matplotlib.pyplot as plt\nfrom datetime import date","f0ee3d31":"data=pd.read_csv(\"..\/input\/machine-learning-24-hrs-hackathon\/train_SJC.csv\",header=1)\nsample=pd.read_csv(\"..\/input\/machine-learning-24-hrs-hackathon\/Test_SJC.csv\")","82dcc483":"data.columns","2a449fc5":"data=data.rename(columns={'Unnamed: 2':'DateReported','Unnamed: 7':'DependentsOther','Unnamed: 11':'DaysWorkedPerWeek'})\n","653281d2":"# Let us drop duplicated rows if any\ndata.drop_duplicates(inplace=True)","c1f11dd4":"data[\"DateTimeOfAccident\"]=pd.to_datetime(data[\"DateTimeOfAccident\"])\nsample[\"DateTimeOfAccident\"]=pd.to_datetime(sample[\"DateTimeOfAccident\"])","036101cf":"data[\"DateReported\"]=pd.to_datetime(data[\"DateReported\"])\nsample[\"DateReported\"]=pd.to_datetime(sample[\"DateReported\"])","0b2f7d9c":"data[\"MaritalStatus\"]=data[\"MaritalStatus\"].fillna(data[\"MaritalStatus\"].mode()[0])","4ef8f33b":"sample[\"MaritalStatus\"]=sample[\"MaritalStatus\"].fillna(sample[\"MaritalStatus\"].mode()[0])","c63f29ed":"sample[\"MaritalStatus\"]=sample[\"MaritalStatus\"].fillna(sample[\"MaritalStatus\"].mode()[0])","24d5acb7":"data[\"WeeklyWages\"]=data[\"WeeklyWages\"].fillna(data[\"WeeklyWages\"].median())","356a7951":"data[\"HoursWorkedPerWeek\"]=data[\"HoursWorkedPerWeek\"].fillna(data[\"HoursWorkedPerWeek\"].median())","fce3ecf8":"data[\"YearAcc\"]=data[\"DateTimeOfAccident\"].dt.year\ndata[\"MonthAcc\"]=data[\"DateTimeOfAccident\"].dt.month\ndata[\"DayAcc\"]=data[\"DateTimeOfAccident\"].dt.day\nsample[\"YearAcc\"]=sample[\"DateTimeOfAccident\"].dt.year","65f1609a":"delay=data[\"DateReported\"]-data[\"DateTimeOfAccident\"]\ndata[\"delay_reported\"]=[x.days for x in delay]","42c101d3":"delay1=sample[\"DateReported\"]-sample[\"DateTimeOfAccident\"]\nsample[\"delay_reported\"]=[x.days for x in delay1]","c3b87bf0":"data['HoursWorkedPerWeek']=np.where(data['HoursWorkedPerWeek']>100,100,data.HoursWorkedPerWeek)\nsample['HoursWorkedPerWeek']=np.where(sample['HoursWorkedPerWeek']>100,100,sample.HoursWorkedPerWeek)","ee422525":"data[\"Hourly_wage\"]=data['WeeklyWages']\/data['HoursWorkedPerWeek']\nsample[\"Hourly_wage\"]=sample['WeeklyWages']\/sample['HoursWorkedPerWeek']","66d2b4fb":"data[\"Hourly_wage\"]=data['WeeklyWages']\/data['HoursWorkedPerWeek']\nsample[\"Hourly_wage\"]=sample['WeeklyWages']\/sample['HoursWorkedPerWeek']","dd46e797":"data[\"hoursworkedperday\"]=data['HoursWorkedPerWeek']\/data[\"DaysWorkedPerWeek\"]\nsample[\"hoursworkedperday\"]=sample['HoursWorkedPerWeek']\/sample[\"DaysWorkedPerWeek\"]","7f5fd407":"data[\"Hourly_wage\"] = data[\"Hourly_wage\"].replace([np.inf, -np.inf],data[\"Hourly_wage\"].median()).dropna(axis=0)","d1cdbee4":"sample[\"Hourly_wage\"] = sample[\"Hourly_wage\"].replace([np.inf, -np.inf],sample[\"Hourly_wage\"].median()).dropna(axis=0)","f3ebfbcc":"data_cat=data.select_dtypes(include='object').columns.tolist()\ndata_num=data.select_dtypes(exclude='object').columns.tolist()","f8fde1d9":"data_cat","f2e7fdc9":"data_num","f7adc1c0":"sns.boxplot(data[\"Age\"])","97d4b084":"sns.boxplot(data['WeeklyWages'])","9f1dc0fe":"\nsns.boxplot(data=data['InitialIncurredCalimsCost'])","b75b364a":"def floor_cap(df,x):\n    for i in x:\n        low=df[i].quantile(0.05)\n        top=df[i].quantile(0.95)\n        df[i] = np.where(df[i] <low,low,df[i])\n        df[i] = np.where(df[i] >top,top,df[i])","08f69123":"out=['Age','WeeklyWages','HoursWorkedPerWeek','DaysWorkedPerWeek','InitialIncurredCalimsCost',\n'delay_reported','Hourly_wage','hoursworkedperday']","6f00d1fb":"plt.figure(figsize=[12,5])\nsns.boxplot(data=data[['Age','HoursWorkedPerWeek','DaysWorkedPerWeek','hoursworkedperday']])","4076efc0":"a=['Age','WeeklyWages','HoursWorkedPerWeek','DaysWorkedPerWeek','InitialIncurredCalimsCost',\n'delay_reported','Hourly_wage','hoursworkedperday',\"UltimateIncurredClaimCost\"]\nsns.pairplot(data[a])","4bd547c4":"floor_cap(data,out)\nfloor_cap(sample,out)","55d2bf4d":"var=[\"YearAcc\",'Gender','MaritalStatus','PartTimeFullTime','Age','DependentChildren',\n     'DependentsOther','WeeklyWages','HoursWorkedPerWeek','DaysWorkedPerWeek','InitialIncurredCalimsCost',\n     'delay_reported','Hourly_wage','hoursworkedperday',\"UltimateIncurredClaimCost\"]\nvar1=[\"YearAcc\",'Gender','MaritalStatus','PartTimeFullTime','Age','DependentChildren',\n     'DependentsOther','WeeklyWages','HoursWorkedPerWeek','DaysWorkedPerWeek','InitialIncurredCalimsCost',\n     'delay_reported','Hourly_wage','hoursworkedperday']","6e1e69a3":"sns.boxplot(y=data[\"Gender\"], x=data[\"UltimateIncurredClaimCost\"], data=data)","e3753d91":"sns.boxplot(y=data[\"MaritalStatus\"], x=data[\"UltimateIncurredClaimCost\"], data=data)","0d6bc9aa":"sns.boxplot(y=data['PartTimeFullTime'], x=data[\"UltimateIncurredClaimCost\"], data=data)","e8c8196f":"correlation=data[data_num].corr()","48fcaaf4":"plt.figure(figsize=(14,10))\nsns.heatmap(correlation,square=True)","92b55f12":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\nimport sklearn.preprocessing as pre","1364e78e":"df=data[var]\ndfs=sample[var1]","dcb2b654":"cat=['Gender','MaritalStatus','PartTimeFullTime']","a31cc8f4":"le=LabelEncoder()\nfor x in cat:\n    df[x]=le.fit_transform(df[x])","6ceb19ab":"for x in cat:\n    dfs[x]=le.fit_transform(dfs[x])","799ca180":"Y=df[\"UltimateIncurredClaimCost\"]","23682081":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()","ca0b5f34":" X_scale=sc.fit_transform(df.drop(\"UltimateIncurredClaimCost\",axis=1))","396f1a02":" X_scale1=sc.transform(dfs)","9068cb65":"import sklearn.model_selection as ms\nimport sklearn.linear_model as lm\nfrom sklearn.metrics import mean_squared_error","12f7d798":"x_train,x_test,y_train,y_test=ms.train_test_split(X_scale,Y,test_size=0.3,random_state=1234456)","66c995ec":"x_train.shape,x_test.shape,y_train.shape,y_test.shape","88b64e9f":"glm=lm.LinearRegression()","d81ddf29":"glm.fit(x_train,y_train)","56dcd322":"glm.score(x_test,y_test)","0ee4be27":"glm.score(x_train,y_train)","6c73e78c":"np.sqrt(mean_squared_error(y_test,glm.predict(x_test)))","e3caca70":"predictions=glm.predict(X_scale1)","9b777fb1":"csv = pd.read_csv(\"..\/input\/machine-learning-24-hrs-hackathon\/sample_submission.csv\")","31570dce":"csv[\"UltimateIncurredClaimCost\"]=predictions","808653f6":"csv.to_csv(\"20BDA27_2.1.csv\", index = False)","8a68766f":"cat1=['Gender','MaritalStatus','PartTimeFullTime',\"YearAcc\"]","6aa52abf":"le=LabelEncoder()\nfor x in cat1:\n    df[x]=le.fit_transform(df[x])","8a1ee550":"for x in cat1:\n    dfs[x]=le.fit_transform(dfs[x])","31af7248":" X_scaled=sc.fit_transform(df.drop(\"UltimateIncurredClaimCost\",axis=1))","60ce6940":" X_scaled1=sc.transform(dfs)","8714c6ce":"x_train1,x_test1,y_train1,y_test1=ms.train_test_split(X_scaled,Y,test_size=0.3,random_state=1234456)","5816629c":"glms=lm.LinearRegression()\nglms.fit(x_train1,y_train1,)\nprint(\"Test score :\",glms.score(x_test1,y_test1))\nprint(\"Train score :\",glms.score(x_train1,y_train1))","73bae7c9":"np.sqrt(mean_squared_error(y_test1,glm.predict(x_test1)))","7d00ae8d":"predictions=glm.predict(X_scaled1)","f589daf3":"csv = pd.read_csv(\"..\/input\/machine-learning-24-hrs-hackathon\/sample_submission.csv\")","3f20741c":"csv[\"UltimateIncurredClaimCost\"]=predictions","1fc661d8":"csv.to_csv(\"20BDA27_2.2.csv\", index = False)","a7a4d6de":"# EDA","859684f8":"# Data Preprocessing","62591658":"**Converting to dates in dataset to datetime objects**","ae0da766":"# Feature Extraction","5896ac62":"**Renaming the columns.**","755aa14f":"## Considering \"YearAcc\"","c40a8520":"**Outlier Treatment**","185758ff":"# Data Loading","c5cfc645":"**Missing Value treatment**"}}