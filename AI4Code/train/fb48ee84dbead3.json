{"cell_type":{"60fd15ae":"code","bdf7e945":"code","ca3a9e69":"code","f2c6c266":"code","f0048f00":"code","0d97d952":"code","0b793b04":"code","a2054aec":"code","938b46ef":"code","0e2db11b":"code","e1737d4d":"code","44537add":"code","a390e654":"code","5011f9c1":"code","cd520853":"code","24774e35":"code","bb48097d":"code","c8395805":"markdown","c55cb41c":"markdown","dc2ea54c":"markdown","43e59168":"markdown","728ab216":"markdown","c427ae23":"markdown","3f568a25":"markdown","e49fb1da":"markdown","5969d0a3":"markdown","47e41e87":"markdown","5ea2e713":"markdown","1e080ca5":"markdown","d80dbc62":"markdown","33a04a69":"markdown","3cc36a44":"markdown","65b291a9":"markdown","dfdd5a00":"markdown"},"source":{"60fd15ae":"# Installing the factor_analyzer library to test factor analysis.\n!pip install factor_analyzer","bdf7e945":"\nimport matplotlib.pyplot as plt\nfrom factor_analyzer import FactorAnalyzer\n\nimport warnings\nwarnings.filterwarnings(\"ignore\", category=DeprecationWarning)\nwarnings.filterwarnings(\"ignore\", category=UserWarning)\nwarnings.filterwarnings(\"ignore\", category=FutureWarning)\n# This Python 3 environment comes with many helpful analytics libraries installed\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\npd.set_option('max_columns', 50)","ca3a9e69":"df = pd.read_csv('\/kaggle\/input\/survey-shop-car\/EFA.csv')\nprint(df.shape)\ndf.head()","f2c6c266":"columnStatistics = pd.DataFrame(df.max(axis=0)) # will return max value of each column\ncolumnStatistics.columns = ['MaxValues']\n\ncolumnStatistics['MinValues'] = df.min(axis=0) # will return min value of each column\n\nuniqueCounts = pd.DataFrame(columnStatistics.index)\nuniqueCounts.set_index(0, inplace=True)\nuniqueCounts['UniqueValues'] = np.nan\nfor col in df:\n    uniqueCounts.loc[col]['UniqueValues'] = df[col].nunique() # will return min value of each column\ncolumnStatistics['UniqueValues'] = uniqueCounts['UniqueValues']\n\ncolumnStatistics","f0048f00":"from factor_analyzer.factor_analyzer import calculate_kmo\nkmo_all,kmo_model=calculate_kmo(df)\nkmo_model","0d97d952":"fa = FactorAnalyzer(rotation=None, n_factors=len(df.columns))\nfa.fit(df)\n\n# Check Eigenvalues\nev, v = fa.get_eigenvalues()\nev","0b793b04":"plt.scatter(range(1,df.shape[1]+1),ev)\nplt.plot(range(1,df.shape[1]+1),ev)\nplt.title('Scree Plot')\nplt.xlabel('Factors')\nplt.ylabel('Eigenvalue')\nplt.axhline(y=1, color='r', linestyle='--')\nplt.grid()\nplt.show()","a2054aec":"fa = FactorAnalyzer(rotation=\"varimax\", n_factors=5)\nfa.fit(df)\n\n# Check loadings\nloadings = pd.DataFrame(fa.loadings_)\nloadings.rename(columns = lambda x: 'Factor-' + str(x + 1), inplace=True)\nloadings.index = df.columns\nloadings","938b46ef":"def color_factor_importance(val):\n    if np.abs(val) > 0.4:\n        color = 'green'\n    elif np.abs(val) > 0.3 and np.abs(val) <= 0.4:\n        color = 'blue'\n    else: \n        color = 'red'\n    return 'color: %s' % color\n\nloadings.style.applymap(color_factor_importance)","0e2db11b":"segments = loadings[loadings >= .4].fillna(loadings[loadings <= -.4])\nsegments\n","e1737d4d":"segment_names = ['Overall Cost', 'Comfort and Fuel Efficiency', 'Review Confirmer', 'Service', 'Color Trumps All']\nsegments.columns = segment_names\nsegments","44537add":"communalities = fa.get_communalities()\ncommunalities = pd.DataFrame(communalities, index=df.T.index, columns=['communalities'])\ncommunalities.sort_values(by=['communalities'], ascending=True).head(8)","a390e654":"#Heatmap of loadings\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nplt.figure(figsize=(30,25))\nsns.heatmap(segments, annot=True, cmap=\"YlGnBu\")\n","5011f9c1":"# Check variance\nfactorVariance = pd.DataFrame(fa.get_factor_variance())\nfactorVariance.rename(columns = lambda x: 'Factor-' + str(x + 1), inplace=True)\nfactorVariance.index = ['SS Loadings', 'Proportion Variance', 'Cumulative Variance']\nfactorVariance","cd520853":"df['Respondent_ID'] = df.index\ndf.head()","24774e35":"\n# Correlation matrix\ncorrelation_export = df.corr().unstack().reset_index(name='value')\ncorrelation_export.columns = ['Feature 1', 'Feature 2', 'Value']\ncorrelation_export.to_csv('Correlations.csv', index=False)\ncorrelation_export.head()","bb48097d":"\n# Loadings\nloadings.columns = segment_names\nloadings_export = loadings.unstack().reset_index(name='value')\nloadings_export.columns = ['Segment', 'Feature', 'Value']\nloadings_export.to_csv('Loadings.csv', index=False)\nloadings_export.head()","c8395805":"Segments","c55cb41c":"Check Eigenvalues","dc2ea54c":"Export for Reporting","43e59168":"Factor Analysis library - python -> factor-analyzer 0.3.2","728ab216":"Correlation matrix","c427ae23":"## Final Notebook","3f568a25":"Create Segments and Review Loadings","e49fb1da":"Gr\u00e1fico com as cargas fatoriais","5969d0a3":"Prepare Data","47e41e87":"Kaiser-Meyer-Olkin (KMO)\n","5ea2e713":"Check Variance and Do Adequacy Checks","1e080ca5":"Loadings","d80dbc62":"References: https:\/\/www.kdnuggets.com\/2020\/01\/survey-segmentation-tutorial.html","33a04a69":"# Factor Analysis - segmentation analysis \n![](https:\/\/www.tibco.com\/blog\/wp-content\/uploads\/2016\/10\/rsz_bigstock-customer-segmentation-segment-104069243.jpg)\n[source](https:\/\/www.tibco.com\/blog\/2016\/10\/03\/customer-analytics-series-2-segmentation-analysis-with-customer-analytics-templates-for-spotfire\/)\n","3cc36a44":"Using EFA to Create Segments","65b291a9":"Vislumbre dos dados","dfdd5a00":"Comunalidades"}}