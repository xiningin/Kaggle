{"cell_type":{"f5a303aa":"code","18574b16":"code","9bfabd53":"code","82f4dedc":"code","25d4d568":"code","c3dc3674":"markdown","f6a31422":"markdown","89f9af07":"markdown","ca27a16f":"markdown","906a7d3a":"markdown","6d60580a":"markdown","75667fef":"markdown","de6dcacf":"markdown"},"source":{"f5a303aa":"import easyocr # !pip install easyocr if not installed \nimport os\nimport PIL\nfrom PIL import ImageDraw\nimport matplotlib.pyplot as plt","18574b16":"path_to_images = '..\/input\/fifty-states-car-license-plates-dataset\/Fifty States License Plates'\nimages_in_path = os.listdir(path_to_images)\n\nimages = []\nfor image in images_in_path:\n    images.append(path_to_images + '\/' + image)\nprint('Number of images ', len(images))","9bfabd53":"reader = easyocr.Reader(['en'])","82f4dedc":"import timeit \n\nstart_time = timeit.default_timer()\nall_bounds = []\nfor image in images:\n    bounds = reader.readtext(image)\n    all_bounds.append(bounds)\nelapsed = timeit.default_timer() - start_time\n\nprint(f'Time taken on CPU {elapsed}')","25d4d568":"def check_title(input):\n    input = input.replace(' ', '')\n    return input.isalnum() and not input.isalpha() and not input.isdigit() or input.isdigit()\n\ndef show_results_top10(images, all_bounds, color='blue', width=2):\n    fig = plt.figure(figsize=(20, 5))\n    for i in range(10):\n        ax = fig.add_subplot(2,5, i+1, xticks=[], yticks=[])\n        image = PIL.Image.open(images[i])\n        draw = ImageDraw.Draw(image)\n        \n        for bound in all_bounds[i]:\n            p0, p1, p2, p3 = bound[0]\n            draw.line([*p0, *p1, *p2, *p3, *p0], fill=color, width=width)\n            \n        title = ' '  \n        ith_bound = all_bounds[i]\n        for box in ith_bound:\n            if check_title(box[1]):\n                title += box[1] + ' '\n                title += '| '\n            \n        ax.imshow(image)\n        ax.set_title(title)\n\nshow_results_top10(images, all_bounds)","c3dc3674":"#### Lets time it as well","f6a31422":"# \ud83d\udcd2 Lets install EasyOCR   \nThis notebook uses [EasyOCR](https:\/\/github.com\/JaidedAI\/EasyOCR) on [car license plate](https:\/\/www.kaggle.com\/mobassir\/fifty-states-car-license-plates-dataset). This library is actually straightforward and easy to use!   ","89f9af07":"# Done! \ud83e\udd17 ","ca27a16f":"The labeling requires improvement,","906a7d3a":"## Get OCR and bounding boxes  \n**Note**: in the original repo you can use the method `readtext_batched()` to read multiple images in one line of code \ud83d\ude0a but for some reason the easyocr Pypi does not reflect this currently. So we will loop over each image and `readtext()`","6d60580a":"### Lets visualize the results","75667fef":"## Install (Detector + Recognizer models for a specific list of languages)\n**Note**: EasyOCR supports 80+ languages, and by default it move them to GPU. if you are running this locally and do not have a GPU, it will default to CPU on it own or you can set that manually:   \n\n```reader = easyocr.Reader(['en'], gpu=False) ``` \n\nMy notebook does not use GPU","de6dcacf":"## Images to list"}}