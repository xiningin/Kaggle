{"cell_type":{"f7c50c03":"code","0401639e":"code","adb21560":"code","5162605f":"code","30b22e08":"code","82155368":"code","e05e1245":"code","5e224934":"code","4fdb738c":"code","ff9e5ee4":"code","0031881b":"code","1a2dc491":"code","ba052e50":"code","cacd20be":"code","43875c67":"code","3c9bc786":"code","74d9d5a8":"code","3622343f":"code","271c3026":"markdown","2a1958ee":"markdown","67977767":"markdown","db75ac4f":"markdown","188629f1":"markdown"},"source":{"f7c50c03":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px\n\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0401639e":"df = pd.read_csv('..\/input\/bigdatacertificationkr\/basic1.csv', delimiter=',', encoding = \"utf8\")\n\ndf.head()","adb21560":"df.isnull().sum()","5162605f":"df[\"city\"].value_counts()","30b22e08":"import matplotlib.pyplot as plt\nimport matplotlib as mpl","82155368":"import matplotlib.font_manager as fm\nfont = fm.FontProperties(fname='..\/input\/bigdatacertificationkr\/malgun.ttf')","e05e1245":"#label in sns.displot\n#sns.displot(\uc138\uc6d4['\ub098\uc774'])\n#plt.xlabel('\ub098\uc774', fontproperties=font)","5e224934":"#Code by Lucas Abrah\u00e3o https:\/\/www.kaggle.com\/lucasabrahao\/trabalho-manufatura-an-lise-de-dados-no-brasil\n\ndf[\"city\"].value_counts().plot.bar(color=['blue', '#f5005a', 'yellow', 'green'], title='Korean cities');","4fdb738c":"df[\"f4\"].value_counts()","ff9e5ee4":"dfcorr=df.corr()\ndfcorr\nplt.figure(figsize=(10,4))\nsns.heatmap(df.corr(),annot=False,cmap='Spectral_r')\nplt.show()","0031881b":"#Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\ncolor = plt.cm.RdBu(np.linspace(0,1,20))\ndf[\"f4\"].value_counts().sort_values(ascending=False).head(20).plot.pie(y=\"artist\",colors=color,autopct=\"%0.1f%%\")\nplt.title(\"Personalities Types\")\nplt.axis(\"off\")\nplt.show()","1a2dc491":"!pip install pywaffle","ba052e50":"#Codes by ask9 https:\/\/www.kaggle.com\/arbazkhan971\/indians-vs-world\/notebook\n\ndef random_colors(number_of_colors):\n    color = [\"#\"+''.join([random.choice('0123456789ABCDEF') for j in range(6)])\n                 for i in range(number_of_colors)]\n    return color","cacd20be":"from pywaffle import Waffle\nimport random\n\nage = df[\"age\"].value_counts()\n\nfig = plt.figure(\n    FigureClass=Waffle,\n    rows=5,\n    columns=10,\n    values=gender,\n    colors = random_colors(len(age)),\n    title={'label': 'Age Distribution', 'loc': 'left'},\n    labels=[\"{}({})\".format(a, b) for a, b in zip(age.index, age) ],\n    legend={'loc': 'lower left', 'bbox_to_anchor': (0, -0.4), 'ncol': len(df.groupby(\"city\").get_group('\uc11c\uc6b8')), 'framealpha': 0},\n    font_size=30, \n    icons = 'child',\n    figsize=(12, 5),  \n    icon_legend=True\n);","43875c67":"#Code by Seonghyeon https:\/\/www.kaggle.com\/jeongseonghyeon\/sewol-visuali\/notebook\n\n# \ud45c\ub97c \ub098\ud0c0\ub0b4\uae30 \uc704\ud574 seaborn\uacfc matplotlib\ub97c \ubd80\ub974\uace0\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl","3c9bc786":"#Code by Seonghyeon https:\/\/www.kaggle.com\/jeongseonghyeon\/sewol-visuali\/notebook\n\n# \ud45c\uc5d0 \ud55c\uae00\uc744 \ud45c\uc2dc\ud558\uae30 \uc704\ud574 \ud3f0\ud2b8\ub97c \ub9d1\uc740(malgun.ttf)\ub85c \uc124\uc815\ud569\ub2c8\ub2e4.\nimport matplotlib.font_manager as fm\nfont = fm.FontProperties(fname='..\/input\/malgun\/malgun.ttf')\nfont_name = fm.FontProperties(fname='..\/input\/malgun\/malgun.ttf').get_name()\nmpl.rc('font',family=font_name)","74d9d5a8":"#Code by Seonghyeon https:\/\/www.kaggle.com\/jeongseonghyeon\/sewol-visuali\/notebook\n\n# \uc6d0\ud615 \uadf8\ub798\ud504\nplt.pie(df['city']);\nplt.legend(df['city'].index, prop=font)\nplt.show()","3622343f":"#Code by Seonghyeon https:\/\/www.kaggle.com\/jeongseonghyeon\/sewol-visuali\/notebook\n\n# \ub9c9\ub300 \uadf8\ub798\ud504\n\n#ax = df['city'].plot.bar()\nax.set_xticklabels(df['city'].value_counts().plot.bar, fontproperties=font, rotation = 0)","271c3026":"#Korean Cities\n\nGyeonggi - \uacbd\uae30\n\nSeul - \uc11c\uc6b8\n\nDaegu - \ub300\uad6c\n\nBusan - \ubd80\uc0b0\n\nI hope its correct.","2a1958ee":"#Since I don't know how to add fontproperties (I tried with no good results), I think Gyeonggi is in blue on the chart above. Then it comes Seul, Daegu and Busan columns.","67977767":"![](https:\/\/devblogs.microsoft.com\/wp-content\/uploads\/sites\/33\/2019\/02\/5-Buffers-Bart.png)devblogs.microsoft.com","db75ac4f":"#Trying to handle Korean characters. And, unfortunately, still failing.","188629f1":"I'm still trying to learn how to deal with korean fonts."}}