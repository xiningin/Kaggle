{"cell_type":{"1a61d3ac":"code","15527b48":"code","f7d859b9":"code","dfb5d764":"code","d836af7f":"code","019353fe":"code","d0e3ab6d":"code","bf7a7af1":"code","58b9c74b":"code","b2130f3d":"code","c8a8c089":"code","9990f64d":"code","43e66788":"code","f99eb9ee":"code","0859f70c":"code","1a8c5507":"markdown","a891419c":"markdown","1a679125":"markdown","85482c8d":"markdown","7994b1a2":"markdown","45cfac72":"markdown","dbd09294":"markdown","d406ecd5":"markdown","7528fc23":"markdown","9b1640f2":"markdown","888a3a7d":"markdown"},"source":{"1a61d3ac":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\nimport pandas as pd\nimport numpy as np\nfrom datetime import datetime,timedelta\nfrom sklearn.metrics import mean_squared_error\nfrom scipy.optimize import curve_fit\nfrom scipy.optimize import fsolve\nimport matplotlib.pyplot as plt\n%matplotlib inline","15527b48":"df=pd.read_csv('..\/input\/indonesia-coronavirus-cases\/confirmed_acc.csv')","f7d859b9":"df = df.loc[:,['date','cases']]\nFMT = '%m\/%d\/%Y'\ndate = df['date']\ndf['date'] = date.map(lambda x : (datetime.strptime(x, FMT) - datetime.strptime(\"1\/22\/2020\", FMT)).days  )","dfb5d764":"df","d836af7f":"def logistic_model(x,a,b,c):\n    return c\/(1+np.exp(-(x-b)\/a))","019353fe":"x = list(df.iloc[:,0])\ny = list(df.iloc[:,1])\nfit = curve_fit(logistic_model,x,y,p0=[2,100,1000])","d0e3ab6d":"A,B=fit\n#nilai a,b,c\nA","bf7a7af1":"#a=A[0]\n#b=A[1]\n#c=A[2]","58b9c74b":"errors = [np.sqrt(fit[1][i][i]) for i in [0,1,2]]\nerrors","b2130f3d":"#Kemungkinan terburuk\na=A[0]+errors[0]\nb=A[1]+errors[1]\nc=A[2]+errors[2]","c8a8c089":"#Jumlah hari maksimal dari 22 Januari \nsol = int(fsolve(lambda x : logistic_model(x,a,b,c) - int(c),b))\nsol","9990f64d":"pred_x = list(range(max(x),sol))\nplt.rcParams['figure.figsize'] = [7, 7]\nplt.rc('font', size=14)# Real data\nplt.scatter(x,y,label=\"Data riil\",color=\"red\")\n\n# Predicted logistic curve\nplt.plot(x+pred_x, [logistic_model(i,a,b,c) for i in x+pred_x], label=\"Model Logistik\" )\n\nplt.legend()\nplt.xlabel(\"Days since 22 January 2020\")\nplt.ylabel(\"Total number of infected people\")\nplt.ylim((min(y)*0.9,c*1.1))\nplt.show()","43e66788":"y_pred_logistic = [logistic_model(i,a,b,c) for i in x]\np=mean_squared_error(y,y_pred_logistic)\n\ns1=(np.subtract(y,y_pred_logistic)**2).sum()\ns2=(np.subtract(y,np.mean(y))**2).sum()\nr=1-s1\/s2\nprint(\"R^2 adalah {}\".format(r))\nprint(\"Mean square errornya adalah {}\".format(p))","f99eb9ee":"### Tanggal wabah maksimal\nfrom datetime import timedelta, date\nfrom datetime import datetime  \nfrom datetime import timedelta \n\nstart_date = \"22\/01\/20\"\n\ndate_1 = datetime.strptime(start_date, \"%d\/%m\/%y\")\n\nend_date = date_1 + timedelta(days=sol)\n\nx=end_date.strftime(\"%d %b %Y\")","0859f70c":"print(\"Jumlah kasus maksimal di indonesia menurut prediksi adalah {:f}\".format(A[2]+errors[2])) #Penambahan dengan error\nprint(\"Wabah akan berakhir {:.0f} hari setelah 22 Januari 2020 atau {}\". format(sol,x))","1a8c5507":"# 2. Input Data","a891419c":"###### Update 24 Maret 2020","1a679125":"**Prediksi ini akan lebih akurat jika data yang disediakan lebih baik dan puncak penyebaran telah dilewati.Berbagai faktor, seperti kebijakan social\/physical distancing akan berpengaruh pada kasus riil.**\n\n","85482c8d":"1. ### Mengubah format tanggal menjadi jumlah hari terhitung dari 22 Januari 2020","7994b1a2":"> # Koefisien Determinasi\nKoefisien Determinasi (R^2) digunakan sebagai ukuran seberapa baik hasil obeservasi direplikasi oleh model. R^2 adalah proporsi dari varians dalam variabel dependen yang dapat diprediksi dari variabel independen. Nilai R^2 dapat dinyatakan dengan rumus berikut:\n![](https:\/\/wikimedia.org\/api\/rest_v1\/media\/math\/render\/svg\/e320a2123613f37fa74c48bfcfaf070e54dfc2ee)\n","45cfac72":"# 1. Library","dbd09294":"## Model Logistik COVID-19 Indonesia\n\nPrediksi penyebaran COVID-19 di Indonesia ini dibuat dengan  menggunakan model logistik. Model ini telah digunakan pada prediksi penyebaran COVID-19 di Italia (https:\/\/towardsdatascience.com\/covid-19-infection-in-italy-mathematical-models-and-predictions-7784b4d7dd8d). Notebook ini dimodifikasi dari https:\/\/www.kaggle.com\/rizkyalifr\/logistic-model-for-indonesia-covid-19 . ","d406ecd5":"# 3. Membuat Model Logistik","7528fc23":"![image.png](attachment:image.png)","9b1640f2":"# Kesimpulan","888a3a7d":"Model logistik dapat digambarkan pada rumus: \n    f(x,a,b,c)=  c\/(1+e^(-(x-b)\/a) )   \t\t         \nDengan a merupakan laju infeksi, b hari maksimum terjadinya infeksi, dan c jumlah orang terinfeksi yang tercatat.\n"}}