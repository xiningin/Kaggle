{"cell_type":{"59727dbf":"code","c2995e8c":"code","fc344dad":"code","ee7cc9ef":"code","e5fcac3a":"code","00c4dcbc":"code","37f9c8d9":"code","68e2cde6":"code","0f86f579":"code","276d596c":"code","7abd977e":"code","3c60da86":"code","1db7f3c4":"code","3f00be45":"code","105d656b":"code","15cc791b":"code","cb9b88c2":"code","2fddfe40":"code","c2cde5ad":"code","66f0723c":"markdown","e6f53678":"markdown","4851666d":"markdown","8c38aff5":"markdown","57b70ac6":"markdown"},"source":{"59727dbf":"import pandas as pd","c2995e8c":"df_R = pd.read_csv('..\/input\/ncaam-march-mania-2021\/MNCAATourneyDetailedResults.csv',sep=',',header=0,index_col=None)\ndf_R.drop(df_R.loc[(df_R['Season']<2015)|(df_R['Season']>2019),:].index,inplace=True)\ndf_R","fc344dad":"df_sub = pd.read_csv('..\/input\/ncaam-march-mania-2021\/MSampleSubmissionStage1.csv',sep=',',header=0,index_col=None)\ndf_sub","ee7cc9ef":"df_Rid_1 = df_R[['Season','WTeamID','LTeamID']]\ndf_Rid_1['Label']=1\ndf_Rid_1\n\ndf_Rid_0 = df_R[['Season','LTeamID','WTeamID']]\ndf_Rid_0.columns = ['Season','WTeamID','LTeamID']\ndf_Rid_0['Label']=0\n\ndf_all = pd.concat([df_Rid_1,df_Rid_0])\ndf_all","e5fcac3a":"import numpy as np\nimport pandas as pd\nimport pickle\nimport xgboost as xgb\nfrom sklearn.model_selection import train_test_split\nfrom xgboost.sklearn import XGBClassifier\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import classification_report\n","00c4dcbc":"train, test = train_test_split(df_all)","37f9c8d9":"train_X = train.drop('Label', axis=1).values\ntrain_y = train['Label'].values\ntest_X = test.drop('Label', axis=1).values\ntest_y = test['Label'].values\n","68e2cde6":"clf = GridSearchCV(\n    estimator = XGBClassifier(use_label_encoder =False,verbosity=0),\n    param_grid = {'booster':['gbtree', 'gblinear', 'dart'],\n        'n_estimators': [2,5,10, 20, 50],\n                  'max_depth': [3,4,5,6,10,20],\n                  'subsample':[0.6, 0.7, 0.8]},\n    cv=StratifiedKFold(n_splits=5).split(train_X, train_y)\n)\nclf.fit(train_X, train_y)","0f86f579":"print(clf.best_params_)\nprint(classification_report(clf.best_estimator_.predict(test_X), test_y))","276d596c":"df_sub['Season'] = df_sub['ID'].apply(lambda x: x.split('_')[0])\ndf_sub['Team1'] = df_sub['ID'].apply(lambda x: x.split('_')[1])\ndf_sub['Team2'] = df_sub['ID'].apply(lambda x: x.split('_')[2])\ndf_sub","7abd977e":"predict_features = df_sub.drop(['ID','Pred'], axis=1).values\n\ndf_final = df_sub\ndf_final['Pred'] = clf.predict_proba(predict_features)[:,1]\n","3c60da86":"df_final[['ID','Pred']]\ndf_final[['ID','Pred']].set_index('ID').to_csv('submissionID1.csv')","1db7f3c4":"df_all2 = df_all.drop('Season',axis=1)","3f00be45":"train, test = train_test_split(df_all2)","105d656b":"train_X = train.drop('Label', axis=1).values\ntrain_y = train['Label'].values\ntest_X = test.drop('Label', axis=1).values\ntest_y = test['Label'].values","15cc791b":"clf = GridSearchCV(\n    estimator = XGBClassifier(use_label_encoder =False,verbosity=0),\n    param_grid = {'booster':['gbtree', 'gblinear', 'dart'],\n        'n_estimators': [2,5,10, 20, 50],\n                  'max_depth': [3,4,5,6,10,20],\n                  'subsample':[0.6, 0.7, 0.8]},\n    cv=StratifiedKFold(n_splits=5).split(train_X, train_y)\n)\nclf.fit(train_X, train_y)","cb9b88c2":"print(clf.best_params_)\nprint(classification_report(clf.best_estimator_.predict(test_X), test_y))","2fddfe40":"predict_features = df_sub.drop(['ID','Pred','Season'], axis=1).values\n\ndf_final = df_sub\ndf_final['Pred'] = clf.predict_proba(predict_features)[:,1]","c2cde5ad":"df_final[['ID','Pred']]\ndf_final[['ID','Pred']].set_index('ID').to_csv('submissionID2.csv')","66f0723c":"Honestly, I just cannot understand training with teamID which is unexplanable! <p>\nJust imagine team0 won team5 and team2 won team5, could you tell that team 1 will win team5 as well? <p>\nIt would have a good performance on training data, but poor on prediction.<p>\nAnyway, let's see how it works?","e6f53678":"Train by ID","4851666d":"# Train by season and teamID within 2015-2019\nThis is definitely tricky, we are training on what we are predicting :)","8c38aff5":"# Train by teamID only within 2015-2019","57b70ac6":"# Conclusion\nThe prediction scores are good, with the best 0.47885 and 0.52537.\nAfter all training on ID is like a forced remember, just probably why the 3rd prize last competition is based on teamID with a little luck. "}}