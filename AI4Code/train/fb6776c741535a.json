{"cell_type":{"f31cb11d":"code","f91fe41b":"code","6f0b8367":"code","e3910c97":"code","47b2564a":"code","559f1d11":"code","f4ea281d":"code","f920174c":"code","c7cec339":"code","d3ff3c2a":"code","c2030740":"code","fad6614a":"code","f078ea22":"code","d65af495":"code","71134c58":"code","c3793978":"code","ea90525d":"code","c95cb930":"code","bf683d3c":"code","5ff80de5":"code","626a9370":"code","9e1c8ae2":"code","cd1c04a5":"code","8f3be338":"code","f2285710":"code","4503980e":"code","26bdef4d":"code","e5797e08":"code","05b32e66":"code","0e4d6754":"code","9090d7d6":"code","07f0cc81":"code","d72cdf9c":"code","130e32c2":"code","5ffe4628":"code","e710feea":"code","47aa5c66":"code","f2a4b028":"code","3b4c63d2":"code","af6439a9":"code","14ceb184":"code","e182240e":"code","b5a21149":"code","7e17bb31":"code","df0634bf":"code","df4c94f6":"code","c09a7af5":"code","4c925349":"code","ff10935c":"code","607d6aa9":"code","9d26826d":"code","135b7396":"code","f171f247":"code","49226782":"code","832ee1c6":"code","d959a580":"code","c970845d":"code","53e56e66":"code","553692e7":"code","9f92c096":"code","a1999cf7":"code","32fec842":"code","b4eb24c2":"code","6570bf1d":"code","599b8e0f":"code","add94f98":"code","f5cbfaa5":"code","4c45c779":"code","a6d0f69c":"code","2bca2e52":"code","ec8f2576":"code","52c2141e":"code","69aed31c":"code","458553ef":"code","a83459be":"code","7816d6b2":"code","036ca7e3":"code","67d55622":"code","c783b179":"code","1607d72e":"code","f4813c16":"code","1e024f71":"code","f959516f":"code","3f993ebd":"code","71e350b1":"code","6380d2a6":"code","253b6a45":"code","4ea07438":"code","d5e3cb87":"code","92a755fe":"code","834615ed":"code","81cf8e23":"code","76933f2d":"code","56bbc5cd":"code","623fcc8c":"code","add2ea07":"code","b3a9e3d0":"code","253cfbd4":"code","a4960cb1":"code","25c0921c":"code","5f5c5141":"markdown","1ab9ee1b":"markdown","eaf25365":"markdown","304e9767":"markdown","c765a2d9":"markdown","26bb4f13":"markdown","34dc3790":"markdown","83b525d8":"markdown","8f382211":"markdown","bf1e7608":"markdown","90916e45":"markdown","2e331f1a":"markdown","cc7966dc":"markdown","772f9f26":"markdown","7129749f":"markdown","bd0d1c7f":"markdown","09e230e7":"markdown","252d970e":"markdown","9757d398":"markdown","7ca416c3":"markdown","4b11be3f":"markdown","e7a69623":"markdown","c2ba15b6":"markdown","73f83d66":"markdown","eb3b6b5c":"markdown","5ae1ca7d":"markdown","af32853c":"markdown","927eb561":"markdown","04b9d584":"markdown","0489863a":"markdown","73fcac27":"markdown","3958289e":"markdown","5f6a8fa3":"markdown","c77faf20":"markdown","d74e8bf5":"markdown","6c05be81":"markdown","4f37bb09":"markdown","607c106b":"markdown"},"source":{"f31cb11d":"#GENERAL\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport random\nimport time\n#PATH PROCESS\nimport os\nimport os.path\nfrom pathlib import Path\nimport glob\nfrom scipy.io import loadmat\n#IMAGE PROCESS\nfrom PIL import Image\nfrom keras.preprocessing import image\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nimport cv2\nfrom keras.applications.vgg16 import preprocess_input, decode_predictions\nfrom keras.preprocessing import image\nfrom skimage.feature import hessian_matrix, hessian_matrix_eigvals\nfrom scipy.ndimage.filters import convolve\nfrom skimage import data, io, filters\nimport skimage\nfrom skimage.morphology import convex_hull_image, erosion\nfrom IPython import display\nfrom scipy.ndimage import gaussian_filter\n#SCALER & TRANSFORMATION\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import MinMaxScaler\nfrom keras.utils.np_utils import to_categorical\nfrom sklearn.model_selection import train_test_split\nfrom keras import regularizers\nfrom sklearn.preprocessing import LabelEncoder\n#ACCURACY CONTROL\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report, roc_auc_score, roc_curve\nfrom sklearn.model_selection import GridSearchCV, cross_val_score\nfrom sklearn.metrics import mean_squared_error, r2_score\n#OPTIMIZER\nfrom tensorflow.keras.optimizers import RMSprop,Adam,Optimizer,Optimizer, SGD\n#MODEL LAYERS\nfrom tensorflow.keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPool2D, BatchNormalization,MaxPooling2D,BatchNormalization,\\\n                        Permute, TimeDistributed, Bidirectional,GRU, SimpleRNN,\\\nLSTM, GlobalAveragePooling2D, SeparableConv2D, ZeroPadding2D, Convolution2D, ZeroPadding2D,Reshape, Conv2DTranspose,\\\nLeakyReLU, GaussianNoise, GlobalMaxPooling2D, ReLU, Input, Concatenate\nfrom keras import models\nfrom keras import layers\nimport tensorflow as tf\nfrom keras.applications import VGG16,VGG19,inception_v3\nfrom keras import backend as K\nfrom keras.utils import plot_model\nfrom keras.datasets import mnist\nimport keras\nfrom keras.models import Model\n#IGNORING WARNINGS\nfrom warnings import filterwarnings\nfilterwarnings(\"ignore\",category=DeprecationWarning)\nfilterwarnings(\"ignore\", category=FutureWarning) \nfilterwarnings(\"ignore\", category=UserWarning)","f91fe41b":"Example_Image_Path = \"..\/input\/shanghaitech\/ShanghaiTech\/part_A\/train_data\/images\/IMG_1.jpg\"","6f0b8367":"Example_Test_Path = \"..\/input\/shanghaitech\/ShanghaiTech\/part_A\/test_data\/images\/IMG_1.jpg\"\n\n# we need this for example demonstration because cv2 processes overwrite images","e3910c97":"Example_Reading_Image = cv2.cvtColor(cv2.imread(Example_Image_Path),cv2.COLOR_BGR2RGB)","47b2564a":"Example_Test_Image = cv2.cvtColor(cv2.imread(Example_Test_Path),cv2.COLOR_BGR2RGB)\n\n# for example demonstration","559f1d11":"figure = plt.figure(figsize=(10,10))\n\nplt.imshow(Example_Reading_Image)","f4ea281d":"figure = plt.figure(figsize=(10,10))\n\nplt.imshow(Example_Test_Image)","f920174c":"Example_Testing_Zeros = np.zeros((Example_Reading_Image.shape[0], Example_Reading_Image.shape[1]), dtype=np.float32)","c7cec339":"figure = plt.figure(figsize=(10,10))\n\nplt.imshow(Example_Testing_Zeros)","d3ff3c2a":"Example_Mat_Path = \"..\/input\/shanghaitech\/ShanghaiTech\/part_A\/train_data\/ground-truth\/GT_IMG_1.mat\"","c2030740":"Example_Testing_Mat = \"..\/input\/shanghaitech\/ShanghaiTech\/part_A\/test_data\/ground-truth\/GT_IMG_1.mat\"","fad6614a":"Example_Load_Mat = loadmat(Example_Mat_Path)","f078ea22":"print(type(Example_Load_Mat))","d65af495":"print(Example_Load_Mat.items())","71134c58":"print(Example_Load_Mat.keys())\n\n# we need image info\n# image_info is a keyword in the MAT dictionary.","c3793978":"Example_Image_Info = Example_Load_Mat.get(\"image_info\")","ea90525d":"print(type(Example_Image_Info))","c95cb930":"print(Example_Image_Info.shape)","bf683d3c":"print(Example_Image_Info)\n\n# we need coordinates","5ff80de5":"Example_Coordinates = Example_Image_Info[0][0][0][0][0]\n\n# coordinates","626a9370":"print(Example_Coordinates)","9e1c8ae2":"print(type(Example_Coordinates))","cd1c04a5":"print(Example_Coordinates.shape)","8f3be338":"Example_Load_Mat_For_Testing = loadmat(Example_Testing_Mat)[\"image_info\"]","f2285710":"Example_Testing_Coordinates = Example_Load_Mat_For_Testing[0][0][0][0][0]","4503980e":"print(Example_Testing_Coordinates[0:10])","26bdef4d":"figure = plt.figure(figsize=(10,10))\n\nfor e_x_cor, e_y_cor in Example_Testing_Coordinates:\n    e_x_cor = int(e_x_cor)\n    e_y_cor = int(e_y_cor)\n    cv2.drawMarker(Example_Test_Image, (e_x_cor, e_y_cor), (255, 0, 0),thickness=1)\n\nplt.imshow(Example_Test_Image)\nplt.title(\"testing\")","e5797e08":"for x_cor_example, y_cor_example in Example_Coordinates:\n    x_cor_example = int(x_cor_example)\n    y_cor_example = int(y_cor_example)\n    Example_Testing_Zeros[y_cor_example, x_cor_example] = 1\n    \nfigure = plt.figure(figsize=(10,10))\nplt.imshow(Example_Testing_Zeros,cmap=\"gray\")","05b32e66":"Gaussian_Image_Example = gaussian_filter(Example_Testing_Zeros,sigma=5,truncate=5*5)\n\nfigure = plt.figure(figsize=(10,10))\nplt.xlabel(Gaussian_Image_Example.shape)\nplt.imshow(Gaussian_Image_Example,cmap=\"jet\")","0e4d6754":"figure,axis = plt.subplots(1,3,figsize=(10,10))\n\naxis[0].imshow(Example_Reading_Image)\naxis[1].imshow(Example_Testing_Zeros)\naxis[2].imshow(Gaussian_Image_Example)","9090d7d6":"Ground_Truth_Path_A = Path(\"..\/input\/shanghaitech\/ShanghaiTech\/part_A\/train_data\/ground-truth\")","07f0cc81":"Images_Path_A = Path(\"..\/input\/shanghaitech\/ShanghaiTech\/part_A\/train_data\/images\")","d72cdf9c":"Ground_Truth_Path_B = Path(\"..\/input\/shanghaitech\/ShanghaiTech\/part_B\/train_data\/ground-truth\")","130e32c2":"Images_Path_B = Path(\"..\/input\/shanghaitech\/ShanghaiTech\/part_B\/train_data\/images\")","5ffe4628":"GT_List_A = list(Ground_Truth_Path_A.glob(r\"*.mat\"))\nGT_List_B = list(Ground_Truth_Path_B.glob(r\"*.mat\"))","e710feea":"Images_List_A = list(Images_Path_A.glob(r\"*.jpg\"))\nImages_List_B = list(Images_Path_B.glob(r\"*.jpg\"))","47aa5c66":"GT_List_A = sorted(GT_List_A)\nGT_List_B = sorted(GT_List_B)\nImages_List_A = sorted(Images_List_A)\nImages_List_B = sorted(Images_List_B)","f2a4b028":"print(\"LEN A GT: \",len(GT_List_A))\nprint(\"---\"*5)\nprint(\"LEN A IMAGES: \",len(Images_List_A))\nprint(\"---\"*20)\nprint(\"LEN B GT: \",len(GT_List_B))\nprint(\"---\"*5)\nprint(\"LEN B IMAGES: \",len(Images_List_B))","3b4c63d2":"print(GT_List_A[0])\nprint(Images_List_A[0])","af6439a9":"print(GT_List_A[100])\nprint(Images_List_A[100])","14ceb184":"Total_Mat_Path = []\nTotal_Image_Path = []\n\nfor ma_path,mb_path,ia_path,ib_path in zip(GT_List_A,GT_List_B,Images_List_A,Images_List_B):\n    Total_Mat_Path.append(ma_path)\n    Total_Mat_Path.append(mb_path)\n    Total_Image_Path.append(ia_path)\n    Total_Image_Path.append(ib_path)","e182240e":"print(\"MAIN MAT LEN: \",len(Total_Mat_Path))\nprint(\"---\"*5)\nprint(\"MAIN IMAGE LEN: \",len(Total_Image_Path))","b5a21149":"print(Total_Mat_Path[0])\nprint(Total_Image_Path[0])","7e17bb31":"print(Total_Mat_Path[100])\nprint(Total_Image_Path[100])","df0634bf":"Image_Path_Series = pd.Series(Total_Image_Path,name=\"IMAGE\").astype(str)\nMat_Path_Series = pd.Series(Total_Mat_Path,name=\"MAT\").astype(str)","df4c94f6":"print(\"MAT LEN: \",len(Mat_Path_Series))\nprint(\"---\"*5)\nprint(\"IMAGE LEN: \",len(Image_Path_Series))","c09a7af5":"print(Image_Path_Series[44])","4c925349":"print(Mat_Path_Series[44])","ff10935c":"Image_Label_List = []\nMat_Label_List = []\n\ntotal_added = []\ntotal_not_added = []\ntime_count = 0\n\nfor x_images,x_mat in zip(Image_Path_Series.values,Mat_Path_Series.values):\n    \n    try:\n        time_count += 1\n        Reading_Image = cv2.cvtColor(cv2.imread(x_images),cv2.COLOR_BGR2RGB)\n\n        Coordinates_x_info = loadmat(x_mat)[\"image_info\"]\n        Coordinates_x = Coordinates_x_info[0][0][0][0][0]\n\n        Main_Zeros = np.zeros((Reading_Image.shape[0], Reading_Image.shape[1]), dtype=np.float32)\n        for x_cor, y_cor in Coordinates_x:\n            x_cor = int(x_cor)\n            y_cor = int(y_cor)\n            Main_Zeros[y_cor, x_cor] = 1\n\n        Gaussian_Image_With_Coordinates = gaussian_filter(Main_Zeros,sigma=6,truncate=6*6)\n        \n        Resized_Image = cv2.resize(Reading_Image,(180,180))\n        Resized_Gaussian_Image = cv2.resize(Gaussian_Image_With_Coordinates,(180,180))\n        \n        Image_Label_List.append(Resized_Image)\n        Mat_Label_List.append(Resized_Gaussian_Image)\n        total_added.append(str(time_count))\n        \n    except :\n        total_not_added.append(str(time_count))\n        pass\n\nprint(f\"{len(total_not_added)} EPOCHS NOT ADDED\")\nprint(\"---\"*20)\nprint(f\"{len(total_added)} EPOCHS ADDED\")\n        \n        \n    ","607d6aa9":"print(\"MAT LEN: \",len(Mat_Label_List))\nprint(\"IMAGE LEN: \",len(Image_Label_List))","9d26826d":"print(\"MAT IMAGE SHAPE: \",Mat_Label_List[0].shape)\nprint(\"ORIGINAL IMAGE SHAPE: \",Image_Label_List[0].shape)","135b7396":"print(\"WHEN IT IS ARRAY MAT SHAPE: \",np.shape(np.array(Mat_Label_List)))\nprint(\"WHEN IT IS ARRAY IMAGE SHAPE: \",np.shape(np.array(Image_Label_List)))","f171f247":"figure,axis = plt.subplots(1,2,figsize=(10,10))\n\naxis[0].imshow(Mat_Label_List[0],cmap=\"jet\")\naxis[0].set_xlabel(Mat_Label_List[0].shape)\naxis[0].set_title(\"MAT\")\naxis[1].imshow(Image_Label_List[0])\naxis[1].set_xlabel(Image_Label_List[0].shape)\naxis[1].set_title(\"ORIGINAL\")","49226782":"figure,axis = plt.subplots(1,2,figsize=(10,10))\n\naxis[0].imshow(Mat_Label_List[220],cmap=\"jet\")\naxis[0].set_xlabel(Mat_Label_List[220].shape)\naxis[0].set_title(\"MAT\")\naxis[1].imshow(Image_Label_List[220])\naxis[1].set_xlabel(Image_Label_List[220].shape)\naxis[1].set_title(\"ORIGINAL\")","832ee1c6":"figure,axis = plt.subplots(1,2,figsize=(10,10))\n\naxis[0].imshow(Mat_Label_List[22],cmap=\"jet\")\naxis[0].set_xlabel(Mat_Label_List[22].shape)\naxis[0].set_title(\"MAT\")\naxis[1].imshow(Image_Label_List[22])\naxis[1].set_xlabel(Image_Label_List[22].shape)\naxis[1].set_title(\"ORIGINAL\")","d959a580":"figure,axis = plt.subplots(1,2,figsize=(10,10))\n\naxis[0].imshow(Mat_Label_List[302],cmap=\"jet\")\naxis[0].set_xlabel(Mat_Label_List[302].shape)\naxis[0].set_title(\"MAT\")\naxis[1].imshow(Image_Label_List[302])\naxis[1].set_xlabel(Image_Label_List[302].shape)\naxis[1].set_title(\"ORIGINAL\")","c970845d":"figure,axis = plt.subplots(1,2,figsize=(10,10))\n\naxis[0].imshow(Mat_Label_List[552],cmap=\"jet\")\naxis[0].set_xlabel(Mat_Label_List[552].shape)\naxis[0].set_title(\"MAT\")\naxis[1].imshow(Image_Label_List[552])\naxis[1].set_xlabel(Image_Label_List[552].shape)\naxis[1].set_title(\"ORIGINAL\")","53e56e66":"figure,axis = plt.subplots(1,2,figsize=(10,10))\n\naxis[0].imshow(Mat_Label_List[9],cmap=\"jet\")\naxis[0].set_xlabel(Mat_Label_List[9].shape)\naxis[0].set_title(\"MAT\")\naxis[1].imshow(Image_Label_List[9])\naxis[1].set_xlabel(Image_Label_List[9].shape)\naxis[1].set_title(\"ORIGINAL\")","553692e7":"figure,axis = plt.subplots(1,2,figsize=(10,10))\n\naxis[0].imshow(Mat_Label_List[276],cmap=\"jet\")\naxis[0].set_xlabel(Mat_Label_List[276].shape)\naxis[0].set_title(\"MAT\")\naxis[1].imshow(Image_Label_List[276])\naxis[1].set_xlabel(Image_Label_List[276].shape)\naxis[1].set_title(\"ORIGINAL\")","9f92c096":"figure,axis = plt.subplots(1,2,figsize=(10,10))\n\naxis[0].imshow(Mat_Label_List[16],cmap=\"jet\")\naxis[0].set_xlabel(Mat_Label_List[16].shape)\naxis[0].set_title(\"MAT\")\naxis[1].imshow(Image_Label_List[16])\naxis[1].set_xlabel(Image_Label_List[16].shape)\naxis[1].set_title(\"ORIGINAL\")","a1999cf7":"figure,axis = plt.subplots(5,5,figsize=(10,10))\n\nfor indexing,operation in enumerate(axis.flat):\n    \n    Mat_Picking_Image = Mat_Label_List[indexing]\n    operation.imshow(Mat_Picking_Image)\n    \nplt.tight_layout()\nplt.show()","32fec842":"figure,axis = plt.subplots(5,5,figsize=(10,10))\n\nfor indexing,operation in enumerate(axis.flat):\n    \n    Image_Picking_Image = Image_Label_List[indexing]\n    operation.imshow(Image_Picking_Image)\n    \nplt.tight_layout()\nplt.show()","b4eb24c2":"X_Train = np.array(Image_Label_List,dtype=\"float32\")\nX_Test = np.array(Mat_Label_List,dtype=\"float32\")","6570bf1d":"print(\"TRAIN SHAPE: \",X_Train.shape)\nprint(\"TEST SHAPE: \",X_Test.shape)","599b8e0f":"X_Train = X_Train \/ 255.\nX_Test = X_Test \/ 255.","add94f98":"figure,axis = plt.subplots(1,2,figsize=(10,10))\n\naxis[0].imshow(X_Test[1],cmap=\"jet\")\naxis[0].set_xlabel(X_Test[1].shape)\naxis[0].set_title(\"MAT\")\naxis[1].imshow(X_Train[1])\naxis[1].set_xlabel(X_Train[1].shape)\naxis[1].set_title(\"ORIGINAL\")","f5cbfaa5":"Early_Stopper = tf.keras.callbacks.EarlyStopping(monitor=\"loss\",patience=3,mode=\"min\")\nCheckpoint_Model = tf.keras.callbacks.ModelCheckpoint(monitor=\"val_accuracy\",\n                                                      save_best_only=True,\n                                                      save_weights_only=True,\n                                                      filepath=\".\/modelcheck\")","4c45c779":"compile_loss = \"mse\"\ncompile_optimizer = Adam(lr=0.0000001)\noutput_class = 1","a6d0f69c":"Encoder_AE = Sequential()\nEncoder_AE.add(Conv2D(32,(2,2),kernel_initializer = 'he_normal'))\nEncoder_AE.add(BatchNormalization())\nEncoder_AE.add(ReLU())\n#\nEncoder_AE.add(Conv2D(64,(2,2),kernel_initializer = 'he_normal'))\nEncoder_AE.add(BatchNormalization())\nEncoder_AE.add(ReLU())\n#\nEncoder_AE.add(Conv2D(128,(2,2),kernel_initializer = 'he_normal'))\nEncoder_AE.add(BatchNormalization())\nEncoder_AE.add(ReLU())\n#\nEncoder_AE.add(Conv2D(256,(2,2),kernel_initializer = 'he_normal'))\nEncoder_AE.add(BatchNormalization())\nEncoder_AE.add(ReLU())","2bca2e52":"Decoder_AE = Sequential()\nDecoder_AE.add(Conv2DTranspose(128,(2,2)))\nDecoder_AE.add(ReLU())\n#\nDecoder_AE.add(Conv2DTranspose(64,(2,2)))\nDecoder_AE.add(ReLU())\n#\nDecoder_AE.add(Conv2DTranspose(32,(2,2)))\nDecoder_AE.add(ReLU())\n#\nDecoder_AE.add(Conv2DTranspose(output_class,(2,2)))\nDecoder_AE.add(ReLU())","ec8f2576":"Auto_Encoder = Sequential([Encoder_AE,Decoder_AE])","52c2141e":"Auto_Encoder.compile(loss=compile_loss,optimizer=compile_optimizer)","69aed31c":"Model_AutoEncoder_Histoyr = Auto_Encoder.fit(X_Train,X_Test,epochs=10,callbacks=[Checkpoint_Model])","458553ef":"Prediction_Seen = Auto_Encoder.predict(X_Train[:5])","a83459be":"figure,axis = plt.subplots(1,3,figsize=(10,10))\naxis[0].imshow(X_Train[4])\naxis[0].set_title(\"ORIGINAL\")\naxis[1].imshow(Prediction_Seen[4],cmap=\"jet\")\naxis[1].set_title(\"PREDICTION\")\naxis[2].imshow(Prediction_Seen[4],cmap=\"Spectral\")\naxis[2].set_title(\"PREDICTION\")","7816d6b2":"figure,axis = plt.subplots(1,3,figsize=(10,10))\naxis[0].imshow(X_Train[1])\naxis[0].set_title(\"ORIGINAL\")\naxis[1].imshow(Prediction_Seen[1],cmap=\"jet\")\naxis[1].set_title(\"PREDICTION\")\naxis[2].imshow(Prediction_Seen[1],cmap=\"hot\")\naxis[2].set_title(\"PREDICTION\")","036ca7e3":"figure,axis = plt.subplots(1,3,figsize=(10,10))\naxis[0].imshow(X_Train[2])\naxis[0].set_title(\"ORIGINAL\")\naxis[1].imshow(Prediction_Seen[2],cmap=\"jet\")\naxis[1].set_title(\"PREDICTION\")\naxis[2].imshow(Prediction_Seen[2],cmap=\"cubehelix\")\naxis[2].set_title(\"PREDICTION\")","67d55622":"figure,axis = plt.subplots(1,3,figsize=(10,10))\naxis[0].imshow(X_Train[3])\naxis[0].set_title(\"ORIGINAL\")\naxis[1].imshow(Prediction_Seen[3],cmap=\"jet\")\naxis[1].set_title(\"PREDICTION\")\naxis[2].imshow(Prediction_Seen[3],cmap=\"nipy_spectral\")\naxis[2].set_title(\"PREDICTION\")","c783b179":"figure,axis = plt.subplots(1,4,figsize=(10,10))\naxis[0].imshow(Prediction_Seen[0],cmap=\"jet\")\naxis[0].set_title(np.mean(Prediction_Seen[0]))\naxis[1].imshow(Prediction_Seen[1],cmap=\"jet\")\naxis[1].set_title(np.mean(Prediction_Seen[1]))\naxis[2].imshow(Prediction_Seen[2],cmap=\"jet\")\naxis[2].set_title(np.mean(Prediction_Seen[2]))\naxis[3].imshow(Prediction_Seen[3],cmap=\"jet\")\naxis[3].set_title(np.mean(Prediction_Seen[3]))","1607d72e":"Mean_One = np.mean(Prediction_Seen[0])\nMean_Two = np.mean(Prediction_Seen[1])\nMean_Three = np.mean(Prediction_Seen[2])\nMean_Four = np.mean(Prediction_Seen[3])\n\nprint(Mean_One)\nprint(Mean_Two)\nprint(Mean_Three)\nprint(Mean_Four)","f4813c16":"Non_Seen_Image_One = \"..\/input\/shanghaitech\/ShanghaiTech\/part_A\/test_data\/images\/IMG_110.jpg\"\nNon_Seen_Image_Two = \"..\/input\/shanghaitech\/ShanghaiTech\/part_A\/test_data\/images\/IMG_123.jpg\"\nNon_Seen_Image_Three = \"..\/input\/shanghaitech\/ShanghaiTech\/part_A\/test_data\/images\/IMG_100.jpg\"","1e024f71":"Reading_Sample = cv2.cvtColor(cv2.imread(Non_Seen_Image_One),cv2.COLOR_BGR2RGB)\nResized_Sample = cv2.resize(Reading_Sample,(180,180))\nPrediction_Resized_Sample = Resized_Sample.reshape(-1,180,180,3)","f959516f":"Prediction_Non_Seen = Auto_Encoder.predict(Prediction_Resized_Sample)\nPrediction_Non_Seen = Prediction_Non_Seen.reshape(180,180)","3f993ebd":"figure,axis = plt.subplots(1,2,figsize=(10,10))\naxis[0].imshow(Resized_Sample)\naxis[0].set_title(\"ORIGINAL\")\naxis[1].imshow(Prediction_Non_Seen,cmap=\"nipy_spectral\")\naxis[1].set_title(\"PREDICTION\")","71e350b1":"Reading_Sample = cv2.cvtColor(cv2.imread(Non_Seen_Image_Two),cv2.COLOR_BGR2RGB)\nResized_Sample = cv2.resize(Reading_Sample,(180,180))\nPrediction_Resized_Sample = Resized_Sample.reshape(-1,180,180,3)\n\nPrediction_Non_Seen = Auto_Encoder.predict(Prediction_Resized_Sample)\nPrediction_Non_Seen = Prediction_Non_Seen.reshape(180,180)","6380d2a6":"figure,axis = plt.subplots(1,2,figsize=(10,10))\naxis[0].imshow(Resized_Sample)\naxis[0].set_title(\"ORIGINAL\")\naxis[1].imshow(Prediction_Non_Seen,cmap=\"nipy_spectral\")\naxis[1].set_title(\"PREDICTION\")","253b6a45":"Reading_Sample = cv2.cvtColor(cv2.imread(Non_Seen_Image_Three),cv2.COLOR_BGR2RGB)\nResized_Sample = cv2.resize(Reading_Sample,(180,180))\nPrediction_Resized_Sample = Resized_Sample.reshape(-1,180,180,3)\n\nPrediction_Non_Seen = Auto_Encoder.predict(Prediction_Resized_Sample)\nPrediction_Non_Seen = Prediction_Non_Seen.reshape(180,180)","4ea07438":"figure,axis = plt.subplots(1,2,figsize=(10,10))\naxis[0].imshow(Resized_Sample)\naxis[0].set_title(\"ORIGINAL\")\naxis[1].imshow(Prediction_Non_Seen,cmap=\"nipy_spectral\")\naxis[1].set_title(\"PREDICTION\")","d5e3cb87":"Encoder = Sequential()\n#\nEncoder.add(Conv2D(32,(2,2),kernel_initializer = 'he_normal'))\nEncoder.add(BatchNormalization())\nEncoder.add(LeakyReLU())\n#\nEncoder.add(Conv2D(64,(2,2),kernel_initializer = 'he_normal'))\nEncoder.add(BatchNormalization())\nEncoder.add(LeakyReLU())\n\n\nDecoder = Sequential()\n#\nDecoder.add(Conv2DTranspose(32,(2,2)))\nDecoder.add(LeakyReLU())\n#\nDecoder.add(Conv2DTranspose(output_class,(2,2)))\nDecoder.add(LeakyReLU())","92a755fe":"ANN_AutoEncoder = Sequential([Encoder,Decoder])","834615ed":"ANN_AutoEncoder.compile(loss=\"mse\",optimizer=RMSprop(lr=0.000001))","81cf8e23":"H\u0131story_Complex = ANN_AutoEncoder.fit(X_Train,X_Test,epochs=10)","76933f2d":"ANN_Prediction_Images = ANN_AutoEncoder.predict(X_Train[:5])","56bbc5cd":"figure,axis = plt.subplots(1,2,figsize=(10,10))\naxis[0].imshow(X_Train[1])\naxis[0].set_title(\"ORIGINAL\")\naxis[1].imshow(ANN_Prediction_Images[1],cmap=\"nipy_spectral\")\naxis[1].set_title(\"PREDICTION\")","623fcc8c":"figure,axis = plt.subplots(1,2,figsize=(10,10))\naxis[0].imshow(X_Train[2])\naxis[0].set_title(\"ORIGINAL\")\naxis[1].imshow(ANN_Prediction_Images[2],cmap=\"jet\")\naxis[1].set_title(\"PREDICTION\")","add2ea07":"figure,axis = plt.subplots(1,2,figsize=(10,10))\naxis[0].imshow(X_Train[3])\naxis[0].set_title(\"ORIGINAL\")\naxis[1].imshow(ANN_Prediction_Images[3],cmap=\"hot\")\naxis[1].set_title(\"PREDICTION\")","b3a9e3d0":"Non_Seen_Image = \"..\/input\/shanghaitech\/ShanghaiTech\/part_A\/test_data\/images\/IMG_151.jpg\"\n\nReading_Sample = cv2.cvtColor(cv2.imread(Non_Seen_Image),cv2.COLOR_BGR2RGB)\nResized_Sample = cv2.resize(Reading_Sample,(180,180))\nPrediction_Resized_Sample = Resized_Sample.reshape(-1,180,180,3)\n\nPrediction_Non_Seen = ANN_AutoEncoder.predict(Prediction_Resized_Sample)\nPrediction_Non_Seen = Prediction_Non_Seen.reshape(180,180)","253cfbd4":"figure,axis = plt.subplots(1,2,figsize=(10,10))\naxis[0].imshow(Resized_Sample)\naxis[0].set_title(\"ORIGINAL\")\naxis[1].imshow(Prediction_Non_Seen,cmap=\"hot\")\naxis[1].set_title(\"PREDICTION\")","a4960cb1":"Non_Seen_Image = \"..\/input\/shanghaitech\/ShanghaiTech\/part_A\/test_data\/images\/IMG_149.jpg\"\n\nReading_Sample = cv2.cvtColor(cv2.imread(Non_Seen_Image),cv2.COLOR_BGR2RGB)\nResized_Sample = cv2.resize(Reading_Sample,(180,180))\nPrediction_Resized_Sample = Resized_Sample.reshape(-1,180,180,3)\n\nPrediction_Non_Seen = ANN_AutoEncoder.predict(Prediction_Resized_Sample)\nPrediction_Non_Seen = Prediction_Non_Seen.reshape(180,180)","25c0921c":"figure,axis = plt.subplots(1,2,figsize=(10,10))\naxis[0].imshow(Resized_Sample)\naxis[0].set_title(\"ORIGINAL\")\naxis[1].imshow(Prediction_Non_Seen,cmap=\"hot\")\naxis[1].set_title(\"PREDICTION\")","5f5c5141":"# CONV2D - CONV2DTRANPOSE AUTO ENCODER PROCESS","1ab9ee1b":"##### ONE","eaf25365":"#### CREATING TRAIN DATA","304e9767":"#### DECODER","c765a2d9":"##### THREE","26bb4f13":"# DATA PROCESS","34dc3790":"#### EXAMPLE MAT PATH","83b525d8":"# PACKAGES AND LIBRARIES","8f382211":"#### EXAMPLE TRANSFORMATION OF COORDINATES","bf1e7608":"#### EXAMPLE PEOPLE DENSITY","90916e45":"##### TWO","2e331f1a":"### OVERVIEW\n\n* Example Path Process\n* Example Image Display\n* Example MAT Load\n* Example Drawing Marker\n* Example Transformation Of Coordinates\n* Example Coordinates Overwriting Image\n* Example Density Display","cc7966dc":"#### ENCODER","772f9f26":"#### STRUCTURE","7129749f":"# SPECTRUM AUTO ENCODER PROCESS","bd0d1c7f":"#### COORDINATES AND IMAGE PATH","09e230e7":"#### TRAINING","252d970e":"#### PARAMETERS","9757d398":"# PROCESS SUMMARY","7ca416c3":"#### TO ARRAY","4b11be3f":"#### MEAN CHECKING","e7a69623":"#### MAIN PATH","c2ba15b6":"#### EXAMPLE DEMONSTRATION","73f83d66":"#### AUTO ENCODER TRAINING","eb3b6b5c":"#### EXAMPLE PATH","5ae1ca7d":"#### EXAMPLE LOAD MAT","af32853c":"##### ONE","927eb561":"#### SAMPLE PREDICTION","04b9d584":"#### SPECIAL PREDICTION","0489863a":"#### EXAMPLE ZEROS FOR PROTECTING MAIN IMAGE","73fcac27":"##### TWO","3958289e":"#### CALLBACK","5f6a8fa3":"#### EXAMPLE IMAGE","c77faf20":"#### SPECIAL PREDICTION","d74e8bf5":"#### CHECKING NEW DATA","6c05be81":"#### AUTO ENCODER STRUCTURE","4f37bb09":"#### SAMPLE PREDICTION","607c106b":"#### TOTAL MAT AND IMAGES"}}