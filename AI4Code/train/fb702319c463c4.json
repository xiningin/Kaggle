{"cell_type":{"60498c83":"code","68d94a0b":"code","de23b050":"code","81adabdd":"code","53aa1957":"code","39df3233":"code","2840aa26":"code","15dd1872":"code","1831febb":"code","6ba8c0e7":"code","c29193b6":"code","b6a2972b":"code","ceebc049":"code","c7d78f8b":"code","b25f0454":"code","cb7d4242":"code","0596a637":"code","b971caec":"code","bad99c89":"code","502b25fb":"code","cff1e172":"code","305efa8f":"code","87e8f588":"code","8f5c31a4":"code","9e99f0ba":"code","41c07ad9":"code","05c9536f":"code","b8ed0ed3":"code","06f5e839":"code","e712bee1":"code","06650ee5":"code","6c59dcfd":"code","234fb849":"code","45071290":"code","9de9b869":"code","c1acbc81":"code","0622f123":"code","6c241018":"code","2cb1b7a1":"code","73b3f87e":"code","584aed6c":"code","20ca3f7b":"code","1fc1151e":"code","7e13db8c":"code","0b90542b":"code","57bf811c":"code","507b4d7d":"code","07da57f1":"code","f9e0f96e":"code","28ce5851":"code","0d50869d":"code","304c6ef6":"code","a0d7595b":"code","91f4fe5c":"code","a1ba60cd":"markdown","1bfe43ef":"markdown","f631b852":"markdown","7e7650a3":"markdown","a2fb613f":"markdown","65a236c3":"markdown","0edb580e":"markdown","a44ff205":"markdown","2c1edd72":"markdown","33690a02":"markdown","da2ab9ac":"markdown","12cd5087":"markdown","b2cebd49":"markdown","bd11a2d6":"markdown"},"source":{"60498c83":"# https:\/\/www.linkedin.com\/in\/carlos-eduardo-silva-80463316\/\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","68d94a0b":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')","de23b050":"pima = pd.read_csv(\"..\/input\/pima-indians-diabetes-database\/diabetes.csv\")\npima.head()","81adabdd":"from pandas_profiling import ProfileReport","53aa1957":"#Generating the Visualization\nreport = ProfileReport(pima, minimal=False, progress_bar=False)","39df3233":"report.to_notebook_iframe()","2840aa26":"pima.describe()","15dd1872":"pima.info()\npima.shape","1831febb":"pima.hist(figsize=(18,12), bins=15, edgecolor = 'white')","6ba8c0e7":"# Diabetes per class\npima1=pima[pima['Outcome']==1]\ncolumns = pima.columns[:8]\nlength = len(columns)\nplt.subplots(figsize=(18,15))\nfor i,j in zip(columns, range(length)):\n    plt.subplot((length\/2),3,1+j)\n    pima1[i].hist(bins=20, edgecolor = 'black')\n    plt.title(i)\nplt.show()","c29193b6":"sns.countplot(x='Outcome', data=pima)\nplt.title('Outcome Values')","b6a2972b":"pima.plot(kind='box', subplots=True, layout=(3,3), figsize=(14,10) )","ceebc049":"sns.boxplot(x='Outcome', y='Glucose', data=pima)","c7d78f8b":"pima['Pregnancies'].value_counts().plot.bar()","b25f0454":"sns.pairplot(pima, hue='Outcome')","cb7d4242":"# Correlation without treating the data\ncorr = pima.corr()\nplt.figure(figsize=(12,10))\n#cmap = sns.diverging_palette(180,5, as_cmap=True)\nsns.heatmap(corr, square=True,annot=True, cmap='coolwarm')","0596a637":"pima[pima.isnull().any(axis=1)] ","b971caec":"# Values iqual to zero\n(pima[['Pregnancies','Glucose','BloodPressure','SkinThickness','Insulin','BMI','DiabetesPedigreeFunction','Age']] == 0).sum()","bad99c89":"# making pivot for find values mean by atributes and class\npima.pivot_table(index='Outcome',values=['Glucose','Insulin','BloodPressure','SkinThickness','BMI'])\\\n.round(decimals=2)","502b25fb":"# values equal to zero by class\nprint(\"Value Glucose per\", pima[pima.Glucose == 0].groupby('Outcome')['Outcome'].count())\nprint(\"Value BloodPressure per\", pima[pima.BloodPressure == 0].groupby('Outcome')['Outcome'].count())\nprint(\"Value SkinThickness per\", pima[pima.SkinThickness == 0].groupby('Outcome')['Outcome'].count())\nprint(\"Value Insulin per\", pima[pima.Insulin == 0].groupby('Outcome')['Outcome'].count())\nprint(\"Value BMI per\", pima[pima.BMI == 0].groupby('Outcome')['BMI'].count())","cff1e172":"pima.loc[(pima['Outcome'] == 1) & (pima['Insulin']==0), 'Insulin'] = 100.34\npima.loc[(pima['Outcome'] == 0) & (pima['Insulin']==0), 'Insulin'] = 68.79","305efa8f":"pima.loc[(pima['Outcome']==1) & (pima['Glucose']==0), 'Glucose'] = 141.26\npima.loc[(pima['Outcome']==0) & (pima['Glucose']==0), 'Glucose'] = 109.98","87e8f588":"pima.loc[(pima['Outcome']==0) & (pima['BloodPressure']==0), 'BloodPressure'] = 68.18\npima.loc[(pima['Outcome']==1) & (pima['BloodPressure']==0), 'BloodPressure'] = 70.82","8f5c31a4":"pima.loc[(pima['Outcome']==0) & (pima['SkinThickness']==0), 'SkinThickness'] = 19.66\npima.loc[(pima['Outcome']==1) & (pima['SkinThickness']==0), 'SkinThickness'] = 22.16","9e99f0ba":"pima.loc[(pima['Outcome']==0) & (pima['BMI'] == 0), 'BMI'] = 30.30\npima.loc[(pima['Outcome']==1) & (pima['BMI'] == 0), 'BMI'] = 30.30","41c07ad9":"pima.hist(figsize=(18,12), bins=20, edgecolor = 'black')","05c9536f":"from sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score, plot_confusion_matrix","b8ed0ed3":"X = pima.iloc[:, 0:8]\ny = pima.iloc[:,8]","06f5e839":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()","e712bee1":"X = scaler.fit_transform(X)","06650ee5":"features=[\"Pregnancies\",\"Glucose\",\"BloodPressure\",\"SkinThickness\",\"Insulin\",\"BMI\",\"DiabetesPedigreeFunction\",\"Age\"]","6c59dcfd":"X","234fb849":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=0 )","45071290":"model = RandomForestClassifier(n_estimators=50, random_state=0,\n                              criterion='entropy', max_depth=3,\n                              max_features = 'log2', min_samples_split=4,\n                              )\nmodel.fit(X_train,y_train)\n","9de9b869":"lista = []","c1acbc81":"pred = model.predict(X_test)","0622f123":"score = accuracy_score(pred, y_test)\nlista.append(score)\nprint(score)","6c241018":"model.feature_importances_","2cb1b7a1":"pd.DataFrame({\n    \"Variable\": features,\n    \"coef\": model.feature_importances_\n}) \\\n.round(decimals=2) \\\n.sort_values('coef', ascending=False)\\\n.style.bar(color=['grey', 'lightblue'], align ='zero')","73b3f87e":"import eli5\nfrom eli5.sklearn import PermutationImportance","584aed6c":"permutation = PermutationImportance(model, random_state = 0)\npermutation.fit(X_test, y_test)\neli5.show_weights(permutation, feature_names = features)","20ca3f7b":"corr = pima.corr()\nplt.figure(figsize=(12,10))\ncmap = sns.diverging_palette(180,5, as_cmap=True)\nsns.heatmap(corr, square=True,annot=True, cmap=cmap)","1fc1151e":"from sklearn.neighbors import KNeighborsClassifier","7e13db8c":"model_knn = KNeighborsClassifier(n_neighbors=24)","0b90542b":"model_knn.fit(X_train, y_train)","57bf811c":"knn = model_knn.score(X_test, y_test)\nlista.append(knn)\nprint(knn)","507b4d7d":"rate = []\nfor i in range(1,40):\n    \n    knn = KNeighborsClassifier(n_neighbors=i)\n    knn.fit(X_train,y_train)\n    pred = knn.predict(X_test)\n    rate.append(np.mean(pred != y_test))\n\nplt.figure(figsize=(10,6))\nplt.plot(range(1,40),rate,color='blue', linestyle='dashed', marker='o',\n         markerfacecolor='red', markersize=10)\nplt.title('Error Rate x K Values')\nplt.xlabel('K Values')\nplt.ylabel('Error Rate')","07da57f1":"from sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import confusion_matrix","f9e0f96e":"model_tree = DecisionTreeClassifier(random_state=0)","28ce5851":"model_tree.fit(X_train, y_train)","0d50869d":"pred = model_tree.predict(X_test)  ","304c6ef6":"from sklearn.metrics import confusion_matrix, accuracy_score\nprec = accuracy_score(y_test, pred)\nmatriz = confusion_matrix(y_test, pred)","a0d7595b":"lista.append(prec)\nprint(prec)\nprint(matriz)","91f4fe5c":"resul = (pd.DataFrame(lista, index=['Random Forest','KNeighborsClassifier','Tree Classifier'])*100).round(decimals=2)\nresul.columns=['Accuracy']\nresul","a1ba60cd":"VISUALIZATIONS","1bfe43ef":"**Data Modeling**","f631b852":"[](http:\/\/)**DATA PROCESSING**","7e7650a3":"Changing attribute value by Class average","a2fb613f":"RELATIONSHIP BETWEEN ATRIBUTES","65a236c3":"# **EDA**","0edb580e":"Visualization after changing","a44ff205":"#  [](http:\/\/)K-Nearest Neighbours Classifier","2c1edd72":"# ELI5","33690a02":"# > ****RandomForestClassifier****","da2ab9ac":"**Thanks!!!**\n\nhttps:\/\/www.linkedin.com\/in\/carlos-eduardo-silva-80463316\/","12cd5087":"# Decision Tree Classifier","b2cebd49":"IMPORTING DATA SET","bd11a2d6":"**VALUES MISSING**"}}