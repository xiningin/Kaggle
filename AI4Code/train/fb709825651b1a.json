{"cell_type":{"2e9eddf9":"code","e5057a92":"code","569d38df":"code","5b379335":"code","7053bff5":"code","5a367d89":"code","2a634e0c":"code","e5f12d46":"code","25781e95":"code","825ecbb1":"code","d52cd006":"code","4ecc1f78":"code","a515a638":"code","7be15299":"code","a4a3ad2a":"code","32e57d0d":"code","cbe1a525":"code","61f5bf16":"code","dc8f5b12":"code","4c6e52ee":"code","d96b42f1":"code","6781fd64":"code","1669d422":"code","1b3cd576":"code","6ec59e19":"code","a7e503d2":"code","4ea39cef":"code","1f82e9bf":"code","a23b9bb8":"code","804a6f46":"code","b8beb656":"code","64da7899":"code","47d53c4b":"code","519f646e":"code","862166c6":"code","24bf25f8":"code","ff0f16fb":"code","03728360":"code","39ded460":"code","08cde08a":"code","5d2b54c6":"code","2671ecbc":"code","8d7ad0da":"code","e2906a91":"code","e976ad00":"code","715fe391":"code","c5b38baa":"code","b8247053":"code","51fcd076":"code","ce1875a0":"code","0098bbd0":"code","ab189225":"code","f03cadeb":"code","0da0b39a":"code","7abdb4de":"code","c3bdf03d":"code","c6866053":"code","5bc15fa0":"code","293f1b62":"code","3ed51899":"code","31b93d5d":"code","f634ca62":"code","44cfa9c6":"code","abaf3c39":"code","ad1bdb64":"code","137f8cc9":"code","360d564d":"code","4066f0e7":"code","5a3079b9":"code","01e0fe85":"code","83a32817":"code","b621996b":"markdown","37bc06cc":"markdown","202cc210":"markdown","bcfcd5ef":"markdown","d9d93765":"markdown","630183a5":"markdown","b21ab360":"markdown","2e70332d":"markdown","255711fc":"markdown","2bac1c64":"markdown","fd9f9a4e":"markdown","15374ee6":"markdown","543d7b52":"markdown","f2db8451":"markdown","e7c89e1c":"markdown","5ee5e898":"markdown","8d420aab":"markdown","434777da":"markdown","ad1eb35b":"markdown","3c603ca6":"markdown","ece8fdc6":"markdown","93cbea3f":"markdown","43df8eb8":"markdown","8b8fbb65":"markdown","6936779e":"markdown","07d7d593":"markdown","4918937b":"markdown","4d77f55c":"markdown","af6424a6":"markdown","d6da79da":"markdown","bfe1fa82":"markdown","166038fd":"markdown","d14b1dfe":"markdown","3e9fd90d":"markdown","fcfad222":"markdown","04add583":"markdown","20ac5df3":"markdown","c242f711":"markdown","4567720c":"markdown","2479f313":"markdown","ad88aacb":"markdown","8c5533ff":"markdown","e84d745c":"markdown","83ef7911":"markdown","c1fef04a":"markdown","0c6b7095":"markdown","67a83fbd":"markdown","67365fd7":"markdown","0629d70f":"markdown","ba104ee4":"markdown","ebfed6df":"markdown","71e8cd1f":"markdown","0eb007b3":"markdown","7cdd5824":"markdown","bc39338b":"markdown","25088935":"markdown","ad7705b2":"markdown","0889fa72":"markdown","dd21045a":"markdown","0d207907":"markdown","76c458b6":"markdown","ded99fdb":"markdown","8c08c620":"markdown","c8115db9":"markdown","47e45e32":"markdown","922d919c":"markdown","9b75cbd8":"markdown","a2b5e31f":"markdown","d437241c":"markdown","a6444954":"markdown","72f6035c":"markdown","84258ee2":"markdown"},"source":{"2e9eddf9":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.pyplot import figure\n!pip install xlrd","e5057a92":"missing_values = [\"n\/a\", \"na\", \"--\", \" \"]\ndata = pd.read_excel('..\/input\/superstore\/Superstore Data file.xls' ,na_values =  missing_values)\n","569d38df":"data.head()","5b379335":"data.info()","7053bff5":"data.describe()","5a367d89":"data.isnull().sum()","2a634e0c":"data.duplicated()","e5f12d46":"data.boxplot()","25781e95":"data.boxplot(column = 'Profit')","825ecbb1":"data.boxplot(column = 'Sales')","d52cd006":"data.boxplot(column = 'Sales' , by= 'Quantity')\ndata.boxplot(column = 'Profit' , by= 'Quantity')\n","4ecc1f78":"Q1 = data['Sales'].quantile(0.25)\nQ3 = data['Sales'].quantile(0.75)\nIQR = Q3 - Q1    \nfilter = (data['Sales'] >= Q1 - 1.5 * IQR) & (data['Sales'] <= Q3 + 1.5 *IQR)\ndata = data[filter]\n\nQ1 = data['Profit'].quantile(0.25)\nQ3 = data['Profit'].quantile(0.75)\nIQR = Q3 - Q1\nfilter = (data['Profit'] >= Q1 - 1.5 * IQR) & (data['Profit'] <= Q3 + 1.5 *IQR)\ndata = data[filter]","a515a638":"data.boxplot(column = 'Sales' , by= 'Quantity')\ndata.boxplot(column = 'Profit' , by= 'Quantity')\n","7be15299":"data.describe()","a4a3ad2a":"fig, ax = plt.subplots(figsize=(12,6))\nax.scatter(data['Sales'], data['Profit'])\nax.set_xlabel('Sales')\nax.set_ylabel('Profit')\nplt.show()","32e57d0d":"fig, ax = plt.subplots(figsize=(12,6))\nax.scatter(data['Quantity'], data['Sales'])\nax.set_xlabel('Quantity')\nax.set_ylabel('Sales')\nplt.show()","cbe1a525":"fig, ax = plt.subplots(figsize=(12,6))\nax.scatter(data['Discount'], data['Profit'])\nax.set_xlabel('Discount')\nax.set_ylabel('Profit')\nplt.show()","61f5bf16":"data['Order Date'] = pd.to_datetime(data['Order Date'], format='%d\/%m\/%Y')","dc8f5b12":"data.sort_values(by=['Order Date'], inplace=True, ascending=True)","4c6e52ee":"data.set_index(\"Order Date\", inplace = True)","d96b42f1":"data.drop('Row ID',axis = 1, inplace = True)","6781fd64":"data.head()","1669d422":"Furniture = data[data.Category == 'Furniture']\nFurniture.head()","1b3cd576":"Office = data[data.Category == 'Office Supplies']\nOffice.head()","6ec59e19":"Furniture = Furniture.resample('MS').sum()\nOffice = Office.resample('MS').sum()","a7e503d2":"Furniture.head()","4ea39cef":"del Furniture['Postal Code']\ndel Office['Postal Code']","1f82e9bf":"Furniture.head()","a23b9bb8":"plt.plot(Furniture.index, Furniture.Sales, figure=figure(figsize=(20, 10)))\nplt.legend(('Sales'))\nplt.title(\"Furniture Sales\")\nplt.show()","804a6f46":"plt.plot(Office.index, Office.Sales, figure=figure(figsize=(20, 10)))\nplt.legend(('Sales'))\nplt.title(\"Office Supllies Sales\")\nplt.show()","b8beb656":"plt.plot(Furniture.index, Furniture.Sales,Office.Sales, figure=figure(figsize=(20, 10)))\nplt.legend(('Furniture Sales', 'Office Supplies Sales'))\nplt.title(\"Sales\")\nplt.show()","64da7899":"from pandas.tseries.offsets import DateOffset\n\n#get last month in the data - increase it by 1 month, add it to the data\n\n#for furniture dataset\nFurniture = Furniture.append(pd.Series(name = Furniture.index[-1]+DateOffset(months=1), dtype='float64'))\n\n#for office dataset\nOffice = Office.append(pd.Series(name = Office.index[-1]+DateOffset(months=1), dtype='float64'))","47d53c4b":"Furniture.tail()","519f646e":"Furniture['MA4'] = Furniture.Sales.rolling(window=4).mean()","862166c6":"Furniture.MA4 = Furniture.MA4.shift(1)","24bf25f8":"Furniture.head()","ff0f16fb":"Furniture.tail()","03728360":"plt.plot(Furniture.index,Furniture.Sales,Furniture.MA4,figure=figure(figsize=(20, 10)))\nplt.legend(('Real Data', 'Predicted'))\nplt.title(\"Furniture Sales Prediction Using 4 Periods Moving Average\")\nplt.show()","39ded460":"Office['MA4'] = Office.Sales.rolling(window=4).mean()","08cde08a":"Office.MA4 = Office.MA4.shift(1)","5d2b54c6":"Office.head()","2671ecbc":"Office.tail()","8d7ad0da":"plt.plot(Office.index,Office.Sales,Office.MA4,figure=figure(figsize=(20, 10)))\nplt.legend(('Real Data', 'Predicted'))\nplt.title(\"Office Supplies Sales Prediction Using 4 Periods Moving Average\")\nplt.show()","e2906a91":"Furniture['ES1'] = np.nan\nFurniture['ES5'] = np.nan","e976ad00":"Furniture['ES1']= Furniture.Sales.ewm(alpha=0.1, adjust=False).mean()\nFurniture['ES5']= Furniture.Sales.ewm(alpha=0.5, adjust=False).mean()","715fe391":"Furniture.ES1 = Furniture.ES1.shift(1)\nFurniture.ES5 = Furniture.ES5.shift(1)","c5b38baa":"Furniture.ES1.iat[0] = Furniture.Sales.iat[0]\nFurniture.ES5.iat[0] = Furniture.Sales.iat[0]","b8247053":"Furniture.head()","51fcd076":"Furniture.tail()","ce1875a0":"plt.plot(Furniture.index,Furniture.Sales,Furniture.ES1,figure=figure(figsize=(20, 10)))\nplt.legend(('Real Data', 'Predicted'))\nplt.title(\"Furniture Sales Prediction Using Exponential Smoothing with Alpha = 0.1\")\nplt.show()","0098bbd0":"plt.plot(Furniture.index,Furniture.Sales,Furniture.ES5,figure=figure(figsize=(20, 10)))\nplt.legend(('Real Data', 'Predicted'))\nplt.title(\"Furniture Sales Prediction Using Exponential Smoothing with Alpha = 0.5\")\nplt.show()","ab189225":"plt.plot(Furniture.index,Furniture.Sales,Furniture.index,Furniture.ES1,Furniture.index,Furniture.ES5,figure=figure(figsize=(20, 10)))\nplt.legend(('Real Data', 'Predicted with Alpha = 0.1,', 'Predicted with Alpha = 0.5'))\nplt.title(\"Furniture Sales Prediction Using Exponential Smoothing\")\nplt.show()","f03cadeb":"Office['ES1'] = np.nan\nOffice['ES5'] = np.nan","0da0b39a":"Office['ES1']= Office.Sales.ewm(alpha=0.1, adjust=False).mean()\nOffice['ES5']= Office.Sales.ewm(alpha=0.5, adjust=False).mean()","7abdb4de":"Office.ES1 = Office.ES1.shift(1)\nOffice.ES5 = Office.ES5.shift(1)","c3bdf03d":"Office.ES1.iat[0] = Office.Sales.iat[0]\nOffice.ES5.iat[0] = Office.Sales.iat[0]","c6866053":"Office.head()","5bc15fa0":"Office.tail()","293f1b62":"plt.plot(Office.index,Office.Sales,Office.ES1,figure=figure(figsize=(20, 10)))\nplt.legend(('Real Data', 'Predicted'))\nplt.title(\"Office Supplies Sales Prediction Using Exponential Smoothing with Alpha = 0.1\")\nplt.show()","3ed51899":"plt.plot(Office.index,Office.Sales,Office.ES5,figure=figure(figsize=(20, 10)))\nplt.legend(('Real Data', 'Predicted'))\nplt.title(\"Office Supplies Sales Prediction Using Exponential Smoothing with Alpha = 0.5\")\nplt.show()","31b93d5d":"plt.plot(Office.index,Office.Sales,Office.index,Office.ES1,Office.index,Office.ES5,figure=figure(figsize=(20, 10)))\nplt.legend(('Real Data', 'Predicted with Alpha = 0.1,', 'Predicted with Alpha = 0.5'))\nplt.title(\"Office Supplies Sales Prediction Using Exponential Smoothing\")\nplt.show()","f634ca62":"print(\"Next Months Forecasts for Furniture Sales Will be :\")\nprint(\"    - Using 4 Periods Moving Average = \", Furniture.MA4.values[-1])\nprint(\"    - Using Exponential Smoothing With a = 0.1 = \", Furniture.ES1.values[-1])\nprint(\"    - Using Exponential Smoothing With a = 0.5 = \", Furniture.ES5.values[-1])","44cfa9c6":"print(\"Next Months Forecasts for Office Supplies Sales Will be :\")\nprint(\"    - Using 4 Periods Moving Average = \", Office.MA4.values[-1])\nprint(\"    - Using Exponential Smoothing With a = 0.1 = \", Office.ES1.values[-1])\nprint(\"    - Using Exponential Smoothing With a = 0.5 = \", Office.ES5.values[-1])","abaf3c39":"print(\"Mean Squared Error for Furniture Forecasts :\")\nprint(\"    - For 4 Periods Moving Average MSE = \", ((Furniture.MA4 - Furniture.Sales)**2).mean())\nprint(\"    - For Exponential Smoothing With a = 0.1 MSE = \", ((Furniture.ES1 - Furniture.Sales)**2).mean())\nprint(\"    - For Exponential Smoothing With a = 0.5 MSE = \", ((Furniture.ES5 - Furniture.Sales)**2).mean())","ad1bdb64":"print(\"Mean Absolute Percentage Error for Furniture Forecasts :\")\nprint(\"    - For 4 Periods Moving Average MAPE = \", (abs(Furniture.MA4 - Furniture.Sales)\/Furniture.Sales).mean())\nprint(\"    - For Exponential Smoothing With a = 0.1 MAPE = \", (abs(Furniture.ES1 - Furniture.Sales)\/Furniture.Sales).mean())\nprint(\"    - For Exponential Smoothing With a = 0.5 MAPE = \", (abs(Furniture.ES5 - Furniture.Sales)\/Furniture.Sales).mean())","137f8cc9":"print(\"Least Absolute Deviations for Furniture Forecasts :\")\nprint(\"    - For 4 Periods Moving Average LAD = \", abs(Furniture.MA4 - Furniture.Sales).max())\nprint(\"    - For Exponential Smoothing With a = 0.1 LAD = \", abs(Furniture.ES1 - Furniture.Sales).max())\nprint(\"    - For Exponential Smoothing With a = 0.5 LAD = \", abs(Furniture.ES5 - Furniture.Sales).max())","360d564d":"print(\"Mean Absolute Deviations for Furniture Forecasts :\")\nprint(\"    - For 4 Periods Moving Average MAD = \", abs(Furniture.MA4 - Furniture.Sales).mean())\nprint(\"    - For Exponential Smoothing With a = 0.1 MAD = \", abs(Furniture.ES1 - Furniture.Sales).mean())\nprint(\"    - For Exponential Smoothing With a = 0.5 MAD = \", abs(Furniture.ES5 - Furniture.Sales).mean())","4066f0e7":"print(\"Mean Squared Error for Office Supplies Forecasts :\")\nprint(\"    - For 4 Periods Moving Average MSE = \", ((Office.MA4 - Office.Sales)**2).mean())\nprint(\"    - For Exponential Smoothing With a = 0.1 MSE = \", ((Office.ES1 - Office.Sales)**2).mean())\nprint(\"    - For Exponential Smoothing With a = 0.5 MSE = \", ((Office.ES5 - Office.Sales)**2).mean())","5a3079b9":"print(\"Mean Absolute Percentage Error for Office Supplies Forecasts :\")\nprint(\"    - For 4 Periods Moving Average MAPE = \", (abs(Office.MA4 - Office.Sales)\/Office.Sales).mean())\nprint(\"    - For Exponential Smoothing With a = 0.1 MAPE = \", (abs(Office.ES1 - Office.Sales)\/Office.Sales).mean())\nprint(\"    - For Exponential Smoothing With a = 0.5 MAPE = \", (abs(Office.ES5 - Office.Sales)\/Office.Sales).mean())","01e0fe85":"print(\"Least Absolute Deviations for Office Supplies Forecasts :\")\nprint(\"    - For 4 Periods Moving Average LAD = \", abs(Office.MA4 - Office.Sales).max())\nprint(\"    - For Exponential Smoothing With a = 0.1 LAD = \", abs(Office.ES1 - Office.Sales).max())\nprint(\"    - For Exponential Smoothing With a = 0.5 LAD = \", abs(Office.ES5 - Office.Sales).max())","83a32817":"print(\"Mean Absolute Deviations for Office Supplies Forecasts :\")\nprint(\"    - For 4 Periods Moving Average MAD = \", abs(Office.MA4 - Office.Sales).mean())\nprint(\"    - For Exponential Smoothing With a = 0.1 MAD = \", abs(Office.ES1 - Office.Sales).mean())\nprint(\"    - For Exponential Smoothing With a = 0.5 MAD = \", abs(Office.ES5 - Office.Sales).mean())","b621996b":"### Least Absolute Deviations (LAD)","37bc06cc":"### Mean Absolute Deviations (MAD)","202cc210":"### Mean Absolute Percentage Error (MAPE)","bcfcd5ef":"**In this part we're going to predict the sales using 3 different ways**\n- 4 Period Moving Average\n- Exponential Smoothing Using alpha = 0.1\n- Exponential Smoothing Using alpha = 0.5\n","d9d93765":"Now let's take a look at the data with the newly created 2 columns","630183a5":"In statistics, a moving average is a calculation used to analyze data points by creating a series of averages of different subsets of the full data set.","b21ab360":"### Now we'll do the exact same thing with Office Supplies Sales data","2e70332d":"# Data Analysis","255711fc":"### Now we'll do the exact same with Office Supplies Sales data","2bac1c64":"It seems that we need to change the index of our dataset to 'Order Date' because it'll make it easier in forecasting","fd9f9a4e":"Now let's take a look at our new monthly data","15374ee6":"We'll apply exponential smoothing using different alpha values\n- alpha = 0.1\n- alpha = 0.5","543d7b52":"Now we'll shift the moving average column because each 4 months predict the next one which is the 5th not the 4th which is used in averaging","f2db8451":"Let's check the dataset for any missing values","e7c89e1c":"Let's take a look at the data after generating the MA4 column","5ee5e898":"### Mean Absolute Percentage Error (MAPE)","8d420aab":"It seems like there are no missing values in our dataset, great","434777da":"# Forecasts Results Comparison","ad1eb35b":"### Mean Squred Error (MSE)","3c603ca6":"## Next Month Forecast (For All Next Months)","ece8fdc6":"## 4 Period Moving Average","93cbea3f":"### Let's start with Furniture Sales data","43df8eb8":"# Forecasting","8b8fbb65":"### Least Absolute Deviations (LAD)","6936779e":"Let's plot these predictions and compare them with actual values","07d7d593":"### Mean Absolute Deviations (MAD)","4918937b":"The predicted data seems alot far from the real one","4d77f55c":"## Office Supplies Forecast Results","af6424a6":"**In this part we're going to take a look at Furniture sales and also Office Supplies sales**","d6da79da":"Let's check for that new row","bfe1fa82":"First lets create an empty record for month next to the last of our dataset, becuase we're going to predict that month's sales","166038fd":"After doing these modifications we'll notice that the 'Row ID' column became of no use, so let's drop it","d14b1dfe":"## Timestap","3e9fd90d":"Let's visualize the data of Office Supplies Sales also","fcfad222":"### Let's start with the Furniture Sales data","04add583":"### Mean Squred Error (MSE)","20ac5df3":"# Data Cleaning & Preprocessing","c242f711":"Now let's take a look again at our data","4567720c":"The predicted data seems alot far from the real one","2479f313":"to do that we'll first convert that column from a String type to a Datetime type, so it can be sorted properly","ad88aacb":"Now let's calculate the values using the EWM function","8c5533ff":"We can see that everything went well except one small problem, Postal Codes got summed, that happened because they are numbers, and we obviously don't need that, so let's drop the Postal Code column from both Furniture and Office Supplies data","e84d745c":"Let's see a glimpse of the data","83ef7911":"## Exponential Smoothing","c1fef04a":"## Furniture Forecast Results","0c6b7095":"Let's take a look again","67a83fbd":"Now we'll shift the 2 columns each months predict the next one not itself","67365fd7":"Now we sort it in ascending order","0629d70f":"Looks like our data has a Seasonal Pattern","ba104ee4":"Now we'll read the dataset","ebfed6df":"First we'll import the necessary libraries","71e8cd1f":"And the same for Office Supplies Sales","0eb007b3":"We'll be using the average of the 4 previous months as the prediction for the current month","7cdd5824":"We'll set the first months prediction the same as the real value (it's called initial value in the exponential smoothing)","bc39338b":"Exponential smoothing is a rule of thumb technique for smoothing time series data using the exponential window function. Whereas in the simple moving average the past observations are weighted equally, exponential functions are used to assign exponentially decreasing weights over time.","25088935":"Let's plot ES5 vs the real data and see how it looks","ad7705b2":"Alpha = 0.5 seems to give better results with predictions close to the real data","0889fa72":"Alpha = 0.5 seems to give better results with predictions close to the real data","dd21045a":"We'll use a rolling window of 4, calculate the mean, store in the newly created column","0d207907":"Let's visualize the data of Furniture Sales by plotting the sales vs time","76c458b6":"Let's see both of them compared to each other","ded99fdb":"Let's plot ES1 vs the real data and see how it looks","8c08c620":"Let's extract Furniture Sales to a new dataframe and take a look at it","c8115db9":"## Visualizations","47e45e32":"Let's see the 2 together with the real data","922d919c":"it looks clearly that Exponential Smoothing with Alpha = 0.5 gives better results compared to Alpha = 0.1","9b75cbd8":"it looks clearly that Exponential Smoothing with Alpha = 0.5 gives better results compared to Alpha = 0.1","a2b5e31f":"First we'll create 2 empty columns to store the predicted values\n- ES1 = predicted value for the exponential smoothing when alpha = 0.1\n- ES5 = predicted value for the exponential smoothing when alpha = 0.5","d437241c":"Let's see the description of the dataset to check for some statistics ","a6444954":"And then we set the 'Order Date' column as an index as we said","72f6035c":"But first we need to sort our data based on the 'Order Date' because it seems to be not sorted","84258ee2":"Now we'll sum the sales of each month, and use the start of each month as the timestamp"}}