{"cell_type":{"a71849da":"code","47859891":"code","fff4f7d4":"code","42feaa48":"code","788f9cba":"code","c77a84cd":"code","32ed49a0":"code","7baefb9f":"code","0d9f540c":"code","a8ce1de6":"code","ac03c17c":"code","d906df87":"code","b29c1df3":"code","801bf700":"code","cada69bc":"code","a69042f2":"code","7f1f65f0":"code","1ff1b39e":"code","05dd9a06":"code","6dbf76f7":"code","929b363d":"code","7e386043":"code","0c22b516":"code","a2a436cb":"code","0dbaee5c":"code","a00070a2":"code","d4ea1229":"markdown","d9ac969e":"markdown","7f78083a":"markdown","01632b76":"markdown","fa50c4bb":"markdown","dfdbad46":"markdown","f792446a":"markdown"},"source":{"a71849da":"from IPython.display import YouTubeVideo\nYouTubeVideo('ypYI_lmLD7g', width=750, height=450)\n","47859891":"import pandas as pd \nimport numpy as np \nimport matplotlib.pyplot as plt \nimport seaborn as sns ","fff4f7d4":"df = pd.read_csv(\"..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv\")\ndf.head()","42feaa48":"df.info()","788f9cba":"df.describe().T","c77a84cd":"cols= [\"#6daa9f\",\"#774571\"]\nsns.countplot(x= df[\"DEATH_EVENT\"], palette= cols)\n","32ed49a0":"cols= [\"#4AA96C\",\"#F55C47\"]\nsns.countplot(x= df[\"sex\"], palette= cols)","7baefb9f":"cols= [\"#335D2D\",\"#FFB0B0\"]\nsns.countplot(x= df[\"high_blood_pressure\"], palette= cols)\n","0d9f540c":"\nplt.subplots(figsize=(13,13))\nsns.heatmap(df.corr(),annot=True, square=True);","a8ce1de6":"cols= [\"#4AA96C\",\"#F55C47\"]\nsns.relplot(data=df,x=\"age\", y=\"platelets\",hue=\"DEATH_EVENT\",palette= cols  )","ac03c17c":"sns.relplot(\n    data=df,\n    x=\"age\", y=\"serum_creatinine\",\n    hue=\"DEATH_EVENT\", kind=\"line\",\n    height=4, aspect=2, \n)","d906df87":"sns.set_theme(style=\"darkgrid\")\nsns.lineplot(x=\"ejection_fraction\", y=\"serum_creatinine\",\n             hue=\"DEATH_EVENT\", style=\"smoking\",\n             data=df)","b29c1df3":"colors =[ \"#4F0E0E\" , \"#EEEBDD\"]\nplt.figure(figsize = [6, 12])\nplt.subplot(211)\nsns.countplot( x= 'smoking', data = df)\nplt.subplot(212)\nsns.countplot(x='smoking', hue = 'DEATH_EVENT', data = df ,palette=colors)","801bf700":"x =df.drop('DEATH_EVENT' ,axis=1).values\ny = df['DEATH_EVENT'].values ","cada69bc":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train,y_test = train_test_split(x,y,test_size=0.25) ","a69042f2":"from sklearn.ensemble import RandomForestClassifier \nclf = RandomForestClassifier(max_depth=5, n_estimators=10, max_features=1)\nclf.fit(X_train,y_train)","7f1f65f0":"y_predict_test=clf.predict(X_test)\ny_predict_test","1ff1b39e":"from sklearn.metrics import confusion_matrix, classification_report\ncm_forest = confusion_matrix(y_test, y_predict_test)\nsns.heatmap(cm_forest, annot = True) ","05dd9a06":"    tn = cm_forest[0,0]\n    fp = cm_forest[0,1]\n    tp = cm_forest[1,1]\n    fn = cm_forest[1,0]\n    \n    accuracy  = (tp + tn) \/ (tp + fp + tn + fn)\n    precision = tp \/ (tp + fp)\n    \n    specificity = tn \/ (tn + fp)\n    print(f'Accuracy : {accuracy*100}')\n    print(f'Precision: {precision*100}')\n  \n","6dbf76f7":"from sklearn.tree import DecisionTreeClassifier\nh=DecisionTreeClassifier(max_depth=5)\nh.fit(X_train,y_train)","929b363d":"y_predict_test_2=h.predict(X_test)\ny_predict_test_2","7e386043":"cm_tree = confusion_matrix(y_test, y_predict_test_2)\nsns.heatmap(cm_tree, annot = True) ","0c22b516":"    tn = cm_tree[0,0]\n    fp = cm_tree[0,1]\n    tp = cm_tree[1,1]\n    fn = cm_tree[1,0]\n    \n    accuracy_2  = (tp + tn) \/ (tp + fp + tn + fn)\n    precision_2 = tp \/ (tp + fp)\n    \n    specificity = tn \/ (tn + fp)\n    print(f'Accuracy : {accuracy_2*100}')\n    print(f'Precision: {precision_2*100}')\n  \n","a2a436cb":"from sklearn import svm\nsvm = svm.SVC(kernel=\"linear\",gamma=2, C=1)\nsvm.fit(X_train,y_train)\n\ny_predict_test_3=svm.predict(X_test)\ny_predict_test_3","0dbaee5c":"cm_svm = confusion_matrix(y_test, y_predict_test_3)\nsns.heatmap(cm_svm, annot = True) ","a00070a2":"    tn = cm_svm[0,0]\n    fp = cm_svm[0,1]\n    tp = cm_svm[1,1]\n    fn = cm_svm[1,0]\n    \n    accuracy_3  = (tp + tn) \/ (tp + fp + tn + fn)\n    precision_3 = tp \/ (tp + fp)\n    \n    specificity = tn \/ (tn + fp)\n    print(f'Accuracy : {accuracy_3*100}')\n    print(f'Precision: {precision_3*100}')","d4ea1229":"# **<span style=\"color:#440A67;\">DATA ANALYSIS<\/span>**","d9ac969e":"**About the data:**\n\n* age: Age of the patient\n* anaemia: If the patient had the haemoglobin below the normal range\n* creatinine_phosphokinase: The level of the creatine phosphokinase in the blood in mcg\/L\n* diabetes: If the patient was diabetic\n* ejection_fraction: Ejection fraction is a measurement of how much blood the left ventricle pumps out with each contraction\n* high_blood_pressure: If the patient had hypertension\n* platelets: Platelet count of blood in kiloplatelets\/mL\n* serum_creatinine: The level of serum creatinine in the blood in mg\/dL\n* serum_sodium: The level of serum sodium in the blood in mEq\/L\n* sex: The sex of the patient\n* smoking: If the patient smokes \n* time: It is the time of the patient's follow-up visit \n* DEATH_EVENT: If the patient deceased \n\n","7f78083a":"# **<span style=\"color:#440A67;\">IMPORTING LIBRARIES<\/span>**","01632b76":"# **<span style=\"color:#440A67;\">LOADING DATA<\/span>**","fa50c4bb":"# **<span style=\"color:#440A67;\">DATA PREPROCESSING<\/span>**","dfdbad46":"# **<span style=\"color:#440A67;\">MODEL BUILDING<\/span>**","f792446a":"## Thank you "}}