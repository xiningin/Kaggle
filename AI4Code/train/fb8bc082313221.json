{"cell_type":{"e1e80559":"code","7830f371":"code","93b65431":"code","62e5d47e":"code","831ef796":"code","87b049ff":"code","7589ff1b":"code","43aa8e6f":"markdown","48edf5bb":"markdown","3b12aba3":"markdown","0b213766":"markdown","2cbdd24d":"markdown","f523a6f6":"markdown"},"source":{"e1e80559":"import pandas\nfrom keras.models import Sequential\nfrom keras.layers import Dense\n#from keras.layers import Dropout\nimport numpy\n# fix random seed for reproducibility\nnumpy.random.seed(7)\n\n#names = ['preg', 'plas', 'pres', 'skin', 'test', 'mass', 'pedi', 'age', 'class']\ndata = pandas.read_csv('..\/input\/diabetes.csv')\n\narray = data.values\nX = array[:,0:8]\nY = array[:,8]\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.1\n                                                    ,random_state = 0)\n\ndata.head(5)","7830f371":"model = Sequential()\nmodel.add(Dense(15, input_dim=8, kernel_initializer='uniform', activation='relu'))\n#model.add(Dropout(0.2))\nmodel.add(Dense(8, kernel_initializer='uniform', activation='relu'))\n#model.add(Dropout(0.2))\nmodel.add(Dense(3, kernel_initializer='uniform', activation='relu'))\nmodel.add(Dense(1, kernel_initializer='uniform', activation='sigmoid'))\n\nmodel.summary()","93b65431":"model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])","62e5d47e":"from tensorflow.keras.callbacks import TensorBoard\nimport datetime\n\nlog_dir = \"logs\/fit\/\" + datetime.datetime.now().strftime(\"%Y%m%d-%H%M%S\")\ntensorboard_callback = TensorBoard(\"logs\")\n\nmodel.fit(X_train, Y_train, \n          epochs=200, \n          batch_size=10, \n          validation_data=(X_test, Y_test), \n          callbacks=[tensorboard_callback])","831ef796":"%load_ext tensorboard.notebook\n%tensorboard --logdir logs","87b049ff":"\nscores = model.evaluate(X_test, Y_test)\nprint(\"%s: %.2f%%\" % (model.metrics_names[1], scores[1]*100))","7589ff1b":"from keras.models import model_from_json\n\n# Save model Architecture as JSON\nmodel_json = model.to_json()\nwith open(r'diabetes_model.json', \"w\") as json_file:\n   json_file.write(model_json)\n\n# Save weights as HDF5\nmodel.save_weights(r'diabetes_model.h5')","43aa8e6f":"**Fit the model**","48edf5bb":"**Evaluate the model**","3b12aba3":"**Load Data**","0b213766":"**Compile Model**","2cbdd24d":"**Saving your Neural Network**\n\nAs;\n* Weights\n* Architecture","f523a6f6":"**Create Model**"}}