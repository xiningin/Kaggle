{"cell_type":{"db5edd5c":"code","05707135":"code","2a87fefe":"code","5abde370":"code","d0441332":"code","61cee47e":"code","3b94351a":"code","b8125744":"code","2bfdbef6":"code","0080b462":"code","4b9d147a":"markdown"},"source":{"db5edd5c":"! pip install '..\/input\/keras4torch\/keras4torch-1.0.9-py3-none-any.whl'","05707135":"import torch\nimport torchvision\nfrom torch import nn\n\nimport numpy as np\n\nimport keras4torch as k4t\n\nk4t.__version__","2a87fefe":"mnist_data = np.load('..\/input\/mnist-numpy\/mnist.npz')\nlist(mnist_data.keys())","5abde370":"x_train, y_train = mnist_data['x_train'], mnist_data['y_train']\n\nx_train = x_train.astype('float32')[:, None, :, :] \/ 255.0\ny_train = y_train.astype('int64')\n\nx_train.shape, y_train.shape","d0441332":"model = torch.nn.Sequential(\n    k4t.layers.Conv2d(32, kernel_size=3), nn.ReLU(),\n    nn.MaxPool2d(2, 2), \n    k4t.layers.Conv2d(64, kernel_size=3), nn.ReLU(),\n    nn.Flatten(),\n    k4t.layers.Linear(10)\n)","61cee47e":"model = k4t.Model(model).build([1, 28, 28])","3b94351a":"model.summary()","b8125744":"model.compile(optimizer='adam', loss=nn.CrossEntropyLoss(), metrics=['acc'])","2bfdbef6":"history = model.fit(x_train, y_train,\n                \tepochs=10,\n                \tbatch_size=512,\n                \tvalidation_split=0.2,\n                \t)","0080b462":"history.plot(kind='line', y=['loss', 'val_loss'])","4b9d147a":"# Welcome\n\nThis notebook will demonstrate how to use `keras4torch` in code competition (Internet disabled)."}}