{"cell_type":{"92ec64f8":"code","21a6601f":"code","42d2310a":"code","6dbcde63":"code","00be4025":"code","2ed99070":"code","ff7fc43f":"code","0831736e":"code","d780f755":"code","d9743e41":"code","4f52703b":"code","f2406cec":"code","69629911":"code","5612e889":"code","cf05b017":"code","be6ea9a0":"markdown","0891dd89":"markdown","8bd308a2":"markdown","4de18a57":"markdown","c7379b50":"markdown","def377f3":"markdown","998cb142":"markdown","a17d692b":"markdown","54bc47ef":"markdown","9c9803fa":"markdown","71c7109a":"markdown","56bdf8ce":"markdown","a26ac5bd":"markdown","777ef19e":"markdown","87ad7d33":"markdown"},"source":{"92ec64f8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","21a6601f":"import pandas as pd\nimport numpy as np \nimport matplotlib.pyplot as plt \nimport seaborn as sns \nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import mean_absolute_error,accuracy_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import plot_roc_curve\n","42d2310a":"heart=pd.read_csv(\"..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv\")\noxy=pd.read_csv(\"\/kaggle\/input\/heart-attack-analysis-prediction-dataset\/heart.csv\")","6dbcde63":"heart.head()","00be4025":"oxy.head()","2ed99070":"heart.corr()","ff7fc43f":"plt.figure(figsize=(20,10))\nsns.heatmap(heart.corr(),annot=True)","0831736e":"sns.pairplot(heart,hue='output')\nplt.legend()","d780f755":"sns.barplot(x='output',y='cp',hue='output',data=heart)","d9743e41":"sns.countplot('cp',hue='output',data=heart)","4f52703b":"sns.barplot(x=\"output\",y=\"thalachh\",hue=\"output\",data=heart)","f2406cec":"scale=StandardScaler()\nX=heart.drop(columns=\"output\")\ny=heart[\"output\"]\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=42)\nX_train=scale.fit_transform(X_train)\nX_test=scale.transform(X_test)\nlogreg=LogisticRegression()\nmodel=logreg.fit(X_train,y_train)\npred=model.predict(X_test)\nprint(classification_report(y_test,pred))","69629911":"accuracy_score(y_test,pred)","5612e889":"confusion_matrix(y_test,pred)","cf05b017":"def cmcrcheck(X_test,y_test,y_pred,model):\n    print(classification_report(y_test,y_pred))\n    cm= confusion_matrix(y_test,y_pred)\n    cmdf=pd.DataFrame(index=[0,1],columns=[0,1],data=cm)\n    fig,axes=plt.subplots(figsize=(5,5))\n    g=sns.heatmap(cmdf,annot=True,cmap='Greens',fmt='.0f',ax=axes,cbar=False)\n    g.set_xlabel('Predicted Value')\n    g.set_ylabel('True Value')\n    \n    plot_roc_curve(model,X_test,y_test)\n    plt.show()\n\ncmcrcheck(X_test,y_test,pred,model)\n","be6ea9a0":"Importing the dataset ","0891dd89":"Accuracy of the logistic regression model is as follows","8bd308a2":"Printing the head of the heart ","4de18a57":"Plotting a pairplot ","c7379b50":"Plotting the Confusion Matrix as a heatmap:","def377f3":"Plotting the Correlation Matrix for all the attributes in the dataset ","998cb142":"Confusion Matrix for the Logistic Regression model","a17d692b":"# **Logistic Regression Model**","54bc47ef":"Plotting the relationship between Chest pain (Cp) and Output ","9c9803fa":"Accuracy of the Logistic Regression model is 81.318%","71c7109a":"#  Importing the libraries","56bdf8ce":"From the above correlation matrix we can infer that there is a greater deal of positive correlation between cp, thalach and slp. Inaddtion to that we can also infer that there is negative correlation between output and exng, oldpeak, caa","a26ac5bd":"Creating a bar plot between output and maximum heart rate achieved (thalachh) explains that people with higher heart rate tends to get heart attack ","777ef19e":"Visualizing the Correlation plot to get more valuable insights ","87ad7d33":"Creating a countplot for cp and output to idwntify which type of pain results in heart attack the most. Type of chest pain: \nValue 0: typical angina\nValue 1: atypical angina\nValue 2: non-anginal pain\nValue 3: asymptomatic"}}