{"cell_type":{"eb05e644":"code","4b0d8d85":"code","6b8c85c3":"code","7b61fba5":"code","891a25d9":"code","81cd63af":"code","8ab44d5e":"code","d0dcd79a":"code","4d30e277":"markdown","0a33d1c5":"markdown","ce6fc186":"markdown","f2c7bbf9":"markdown","eebb6602":"markdown","bb1f1a84":"markdown","08494c0f":"markdown"},"source":{"eb05e644":"import numpy as np\nimport pandas as pd\ntrain_data = pd.read_csv('\/kaggle\/input\/cat-in-the-dat-ii\/train.csv')\ntest_data = pd.read_csv('\/kaggle\/input\/cat-in-the-dat-ii\/test.csv')","4b0d8d85":"def resumetable(df):\n    print(f\"Dataset Shape: {df.shape}\")\n    summary = pd.DataFrame(df.dtypes,columns=['dtypes'])\n    summary = summary.reset_index()\n    summary['Name'] = summary['index']\n    summary = summary[['Name','dtypes']]\n    summary['Missing'] = df.isnull().sum().values\n    summary['Total'] = df.count().values   \n    summary['Missing Percentage']=(summary['Missing']\/summary['Total'])*100\n    summary['Uniques'] = df.nunique().values\n    summary['Uniques_val'] = [df[col].unique() for col in df.columns]\n    return summary\n\nresumetable(train_data)","6b8c85c3":"def fillna_sample(df):\n    for col in df.columns:\n        df.loc[df[col].isna(),col] = df[col][-df[col].isna()].sample(n= df[col].isna().sum()).values\nfillna_sample(train_data)\nfillna_sample(test_data)","7b61fba5":"train_label = train_data['target']\ntrain_data.drop(columns=['id', 'target'], axis=1, inplace=True)\ntest_id = test_data['id']\ntest_data.drop(columns=['id'], axis=1, inplace=True)","891a25d9":"from sklearn.preprocessing import LabelEncoder\nlb_bin = LabelEncoder()\ncategorical_cols = train_data.select_dtypes(include=['object']).columns\nfor col in categorical_cols:\n    train_data[col] = lb_bin.fit_transform(train_data[col])\n    test_data[col] = lb_bin.fit_transform(test_data[col])","81cd63af":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()\ntrain_data = scaler.fit_transform(train_data)\ntest_data = scaler.fit_transform(test_data)","8ab44d5e":"from sklearn.linear_model import LogisticRegression\nlrclf = LogisticRegression(C=5)\nlrclf.fit(train_data, train_label)\nlrclf_pred = lrclf.predict_proba(test_data)","d0dcd79a":"submission = pd.DataFrame({'id': test_id, 'target': lrclf_pred[:,1]})\nsubmission.to_csv('submission.csv', index=False)","4d30e277":"**Scale Data**","0a33d1c5":"**Import Data**","ce6fc186":"**Explore Data**","f2c7bbf9":"**Fit Model & Predict**","eebb6602":"**Convert Categorical Features to Numeric**","bb1f1a84":"**Missing Values**","08494c0f":"**Split label Column & Drop usless**"}}