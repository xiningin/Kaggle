{"cell_type":{"1788fe24":"code","e3ff9814":"code","dc96e505":"code","397c190c":"code","4d816c7f":"markdown"},"source":{"1788fe24":"import pandas as pd\nfrom IPython.display import HTML, display","e3ff9814":"%%time\ndf_train = pd.read_csv(\"https:\/\/raw.githubusercontent.com\/google-research-datasets\/gap-coreference\/master\/gap-development.tsv\", delimiter='\\t')","dc96e505":"def display_row(row):\n    txt = row.Text\n    txt_html = ''\n    last_offset = 0\n    for key_offset, offset in row.T[['Pronoun-offset', 'A-offset', 'B-offset']].sort_values().iteritems():\n        key = key_offset.split('-')[0]\n        if key in key in {'A', 'B'}:\n            is_coref = row[f'{key}-coref']\n        else:\n            is_coref = ''\n        txt_html = txt_html + txt[last_offset:offset] + f'<span class=\"{key} {is_coref}\">' + row[key] + '<\/span>'\n        last_offset = offset + len(row[key])\n        \n    txt_html = txt_html + txt[last_offset:]\n\n    display(HTML('<li>' + txt_html + '<\/li>'))","397c190c":"# Add styles\ndisplay(HTML('''\n<style>\n.A, .B, .Pronoun { font-weight: bold }\n.True { color: green }\n.False { color: red }\n<\/style>\n'''))\n\ndisplay(HTML('<ul>'))\n\nfor _, row in df_train.iloc[:20].iterrows():\n    display_row(row)\n\nHTML('<\/ul>')","4d816c7f":"This notebook will sample a few sentences, highlighting the pronoun with the positive (green) and negative (red) targets."}}