{"cell_type":{"f2f884de":"code","502d8bed":"code","67f4499f":"code","b73e2399":"code","56c176ee":"code","0ed10a09":"code","d5571e14":"code","38ba16f0":"code","0309d935":"code","15e2abe7":"code","2dfea00b":"code","17113240":"code","e55c9b1d":"code","7093d076":"code","06eb73fd":"code","749a927a":"markdown","3f475101":"markdown","bbbf70c6":"markdown","2101628d":"markdown","68e51d43":"markdown","799bf5d9":"markdown","c90785e5":"markdown"},"source":{"f2f884de":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.cluster.hierarchy import linkage, dendrogram\nimport warnings\nwarnings.filterwarnings('ignore')","502d8bed":"df = pd.read_csv('..\/input\/gapminder-datacamp-2007\/gapminder_full.csv')\ndf.head()","67f4499f":"df.shape","b73e2399":"df.isna().sum()","56c176ee":"df.dtypes","0ed10a09":"df.describe()","d5571e14":"df.country.nunique()","38ba16f0":"df.year.nunique()","0309d935":"df.year.unique()","15e2abe7":"df.continent.unique()","2dfea00b":"def life_exp_vs_gdp_cap(year):\n\n    dff = df[df['year']==year]\n    plt.figure(dpi=150)\n    np_pop = np.array(dff.population)\n    np_pop2 = np_pop*2\n    plot = sns.scatterplot(dff['gdp_cap'], dff['life_exp'], hue=dff['continent'], \n                    size=np_pop2, sizes=(20,500), alpha=0.5)\n    h, l = plot.get_legend_handles_labels()\n    col_lgd = plt.legend(h[:6], l[:6])\n    plt.gca().add_artist(col_lgd)\n    plt.grid(True)\n    \n    plt.xscale('log')\n    plt.xlabel('GDP per Capita [in USD]', fontsize=14)\n    plt.ylabel('Life Expectancy [in years]', fontsize=14)\n    plot_title = 'World Development in ' + str(year)\n    plt.title(plot_title, fontsize=20)\n    plt.xticks([1000, 10000, 100000],['1k', '10k', '100k'])\n    plt.show()\n    \n\nlife_exp_vs_gdp_cap(1952)\nlife_exp_vs_gdp_cap(2007)","17113240":"def plot_dendrogram(dataframe, feature, title):\n    plt.figure(figsize=(70, 30))\n    mergings = linkage(dataframe[[feature]], method='complete')\n    dendrogram(mergings, leaf_rotation=90, leaf_font_size=16, labels=list(dataframe['country']))\n    plt.title(title, fontsize=100)\n    plt.show()\n\ndef hierarchical_cluster(year):\n    dff = df[df['year']==year]\n    plot_dendrogram(dff, 'population', 'Population  '+ str(year))\n    plot_dendrogram(dff, 'life_exp', 'Life Expectancy  '+ str(year))\n    plot_dendrogram(dff, 'gdp_cap', 'GDP per Capita  '+ str(year))\n    \n\nhierarchical_cluster(2007)","e55c9b1d":"def population_most_and_least(year):\n\n    figs, (ax1, ax2) = plt.subplots(1, 2, figsize=(20, 10))\n    figs.subplots_adjust(wspace=0.8)\n    temp = df[df['year']==year]\n    pop_max = temp['population'].nlargest(5)\n    pop_min = temp['population'].nsmallest(5)\n    \n    ax1.bar(temp['country'].loc[pop_max.index], pop_max, color=['c', 'm', 'k', 'chartreuse', 'burlywood'])\n    plt.setp(ax1.xaxis.get_majorticklabels(), rotation=90)\n    ax1.set_ylabel('Population [in Billion]', fontsize=16)\n    ax1.set_yticks([200000000, 400000000, 600000000, 800000000,1000000000, 1200000000, 1400000000], \n                   ['0.2bn', '0.4bn', '0.6bn', '0.8bn', '1bn', '1.2bn', '1.4bn'])\n    ax1.title.set_text('5 most populated countries')\n\n    ax2.bar(temp['country'].loc[pop_min.index], pop_min, color=['salmon', 'olivedrab', \n                                                                'steelblue', 'orchid', 'lightseagreen'])\n    plt.setp(ax2.xaxis.get_majorticklabels(), rotation=90)\n    ax2.title.set_text('5 least populated countries')\n    title = 'Population    ' + str(year)\n    figs.suptitle(title, fontsize=30)\n    plt.show()\n\npopulation_most_and_least(1952)\npopulation_most_and_least(2007)","7093d076":"def life_exp_most_and_least(year):\n\n    figs, (ax1, ax2) = plt.subplots(1, 2, figsize=(20, 10))\n    figs.subplots_adjust(wspace=0.8)\n    temp = df[df['year']==year]\n    life_max = temp['life_exp'].nlargest(5)\n    life_min = temp['life_exp'].nsmallest(5)\n\n    ax1.bar(temp['country'].loc[life_max.index], life_max, color=['orangered', 'm', 'olive', 'chartreuse', 'burlywood'])\n    plt.setp(ax1.xaxis.get_majorticklabels(), rotation=90)\n    ax1.set_ylim([68, 85])\n    ax1.set_ylabel('Life Expectancy [in years]', fontsize=16)\n    ax1.title.set_text('Top 5 countries')\n\n    ax2.bar(temp['country'].loc[life_min.index], life_min, color=['salmon', 'cyan', \n                                                                'royalblue', 'maroon', 'lightseagreen'])\n    plt.setp(ax2.xaxis.get_majorticklabels(), rotation=90)\n    ax2.set_ylim([28, 45])\n    ax2.set_ylabel('Life Expectancy [in years]', fontsize=16)\n    ax2.title.set_text('Bottom 5 countries')\n    title = 'Life Expectancy   ' + str(year)\n    figs.suptitle(title, fontsize=30)\n    plt.show()\nlife_exp_most_and_least(1952)\nlife_exp_most_and_least(2007)","06eb73fd":"def gdp_cap_most_and_least(year):\n    figs, (ax1, ax2) = plt.subplots(1, 2, figsize=(20, 10))\n    figs.subplots_adjust(wspace=0.8)\n    temp = df[df['year']==year]\n    gdp_max = temp['gdp_cap'].nlargest(5)\n    gdp_min = temp['gdp_cap'].nsmallest(5)\n\n    ax1.bar(temp['country'].loc[gdp_max.index], gdp_max, color=['darkorange', 'forestgreen', 'teal', 'silver', 'purple'])\n    plt.setp(ax1.xaxis.get_majorticklabels(), rotation=90)\n    ax1.set_ylabel('GDP per Capita [in USD]', fontsize=16)\n    ax1.title.set_text('Top 5 countries')\n\n    ax2.bar(temp['country'].loc[gdp_min.index], gdp_min, color=['peru', 'dodgerblue', \n                                                                'midnightblue', 'darkorchid', 'lightseagreen'])\n    plt.setp(ax2.xaxis.get_majorticklabels(), rotation=90)\n\n    ax2.set_ylabel('GDP per Capita [in USD]', fontsize=16)\n    ax2.title.set_text('Bottom 5 countries')\n    title = 'GDP per Capita [in USD]   ' + str(year)\n    figs.suptitle(title, fontsize=30)\n    plt.show()\n\ngdp_cap_most_and_least(1952) \ngdp_cap_most_and_least(2007)","749a927a":"And now GDP per Capita","3f475101":"Now the same for life expectancy. ","bbbf70c6":"My next move is to find out the countries with the most and least population. ","2101628d":"Let's upload the data and have a look","68e51d43":"Now let's find out, how close are countries with each other based on different features. \nNote:-  The y-axis is a measure of closeness of either individual data points or clusters.  ","799bf5d9":"It can be seen from the above diagram that increment in GDP per Capita positively affects life expectancy.  For different year value( chose from df.country.unique) in function life_exp_vs_gdp_cap, respective plot will be plotted. ","c90785e5":"Relation b\/w life expectancy and GDP per capita"}}