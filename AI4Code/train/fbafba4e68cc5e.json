{"cell_type":{"3e68cc34":"code","89811897":"code","333b22e5":"code","8e592b62":"code","54473a20":"code","b024cf09":"code","b66d7966":"code","0cabd0f3":"code","dd1edf51":"code","c935eb4d":"code","9e0b76fb":"code","a0e3fbdf":"code","4e12caa6":"code","9ad909ed":"code","be16ce32":"code","3e5b571b":"code","f03a5422":"code","e95f918d":"code","14a09502":"code","62fe2e6d":"code","efdc7b29":"code","17a6f040":"code","8f4d91cf":"code","3125b41a":"code","79e3fe1b":"code","bc35298c":"code","f4b6cb45":"code","c9de4a11":"code","fc5a4f6b":"code","910764b0":"code","0a26d3b2":"code","a9c72c13":"markdown","3abecbea":"markdown","53f98ba0":"markdown","6be48246":"markdown","aba5b33c":"markdown","e83d116a":"markdown","67faf80c":"markdown","d0c17087":"markdown","138798b5":"markdown","fc7f2abf":"markdown","366743a4":"markdown","36d82f5f":"markdown","0692c664":"markdown","bbedfb40":"markdown","3ca4fa85":"markdown","294ed2ce":"markdown","1842cbb4":"markdown","48864582":"markdown","746b5d8c":"markdown"},"source":{"3e68cc34":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom warnings import simplefilter\nsimplefilter(action='ignore', category=FutureWarning)","89811897":"anime = pd.read_csv('..\/input\/anime-recommendations-database\/anime.csv')\nrating = pd.read_csv('..\/input\/anime-recommendations-database\/rating.csv')","333b22e5":"anime.info()","8e592b62":"rating.info()","54473a20":"print('anime.csv (shape):',anime.shape)\nprint('rating.csv (shape):',rating.shape)","b024cf09":"anime.head()","b66d7966":"rating.head()","0cabd0f3":"# checking for null values\n\nanime.isnull().sum()","dd1edf51":"# filling all anime without rating with 0\n\nanime.fillna({'rating':0},inplace=True)","c935eb4d":"sns.countplot(x='type',data=anime)\nplt.title('Distribution of anime type')\nplt.show()","9e0b76fb":"top_anime_rating_count = rating.groupby(by='anime_id').count()['rating'].sort_values(ascending=False).head(10)\ntop_anime_rating_count = pd.DataFrame({'rating_count':top_anime_rating_count}).reset_index()\ntop_anime_rating = pd.merge(top_anime_rating_count,anime,on='anime_id')\n\nplt.title(\"Top anime with highest rating count\")\nsns.barplot(x='rating_count',y='name',data=top_anime_rating,orient='h')\nplt.show()","a0e3fbdf":"fig,ax = plt.subplots(ncols=2,figsize=(14,6))\n\nsns.kdeplot(color='b',shade=True,data=anime[(anime['type']=='Movie')]['rating'],label='Movies',ax=ax[0])\nsns.kdeplot(color='r',shade=True,data=anime[(anime['type']=='TV')]['rating'],label='TV',ax=ax[0])\nsns.boxplot(x='type',y='rating',data=anime[(anime['type']=='Movie')|(anime['type']=='TV')],ax=ax[1])\nax[0].legend()\nplt.show()","4e12caa6":"# we will only get the episodes for anime series in TV\n\nepisodes_rating = anime[(anime['episodes']!='Unknown')&(anime['type']=='TV')].astype({'episodes':int})\n\n# we can see that there are outliers present\n# for the sake of visualization, we will only consider anime with below 100 episodes\n\nepisodes_rating['episodes'].describe()","9ad909ed":"episodes_rating_filtered = episodes_rating[episodes_rating['episodes']<100][['episodes','rating']]","be16ce32":"sns.kdeplot(data=episodes_rating_filtered,shade=True)\nplt.show()","3e5b571b":"user_rating_count = rating.groupby(by='user_id').count()['anime_id']\nuser_rating_count.describe()","f03a5422":"sns.kdeplot(data=user_rating_count,shade=True)\nplt.title('Number of ratings given by the user')\nplt.xlabel(\"Rating count\")\nplt.show()","e95f918d":"anime_rating_count = rating.groupby(by='anime_id').count()['rating'].reset_index().rename(columns={'rating':'rating_count'})\nanime_rating_count['rating_count'].describe()","14a09502":"filtered_anime = anime_rating_count[anime_rating_count['rating_count']>250]","62fe2e6d":"# anime with over 250 rating count\n\nfiltered_anime.head()","efdc7b29":"user_rating_count = rating.groupby(by='user_id').count()['rating'].reset_index().rename(columns={'rating':'rating_count'})\nuser_rating_count['rating_count'].describe()","17a6f040":"# users who gave over 100 ratings to different anime\n\nfiltered_user = user_rating_count[user_rating_count['rating_count']>100]","8f4d91cf":"filtered_user.head()","3125b41a":"filtered_rating_anime = rating[rating['anime_id'].isin(filtered_anime['anime_id'])]\nfiltered_rating = filtered_rating_anime[filtered_rating_anime['user_id'].isin(filtered_user['user_id'])]","79e3fe1b":"# this dataset now contains popular anime and users wth high rating counts\n\nfiltered_rating.head()","bc35298c":"# we can see that most of the values are zero since most of the users does not have ratings for every anime\n\nrating_matrix = filtered_rating.pivot_table(index='user_id',columns='anime_id',values='rating').fillna(0)\nprint(rating_matrix.shape)\nrating_matrix.head()","f4b6cb45":"user_anime = anime[anime['name']=='Bleach']\nuser_anime","c9de4a11":"user_anime_ratings = rating_matrix[int(user_anime['anime_id'])]","fc5a4f6b":"correlated_anime = rating_matrix.corrwith(user_anime_ratings).reset_index().rename(columns={0:'Correlation'})\ncorrelated_anime.head()","910764b0":"recommended_anime = correlated_anime.sort_values(by='Correlation',ascending=False).head(11).iloc[1:]","0a26d3b2":"pd.merge(recommended_anime,anime,on='anime_id',how='left').drop(columns=['anime_id','Correlation'])","a9c72c13":"We can see that most of the anime with episodes ranging 10-20,20-30 and 45-55 receives a rating of around 7.","3abecbea":"We can see from the chart the different types of anime present in the dataset.","53f98ba0":"### Remove anime with low count of ratings and users who gave low count of ratings\n\n* We will only consider popular anime (rating count over 250) and users who gave lots of rating on different anime (>100)","6be48246":"### Correlate user's anime with other anime based on ratings","aba5b33c":"### Movie and TV ratings","e83d116a":"We can see that the ratings in movies are more spread out than ratings in TV","67faf80c":"### Construct Rating Matrix\n\n* We will construct a matrix by using pivot table wherein users will be indexes and anime in columns","d0c17087":"### Number of ratings given by the user","138798b5":"The anime 'Death Note' has the highest rating count with almost 40000 ratings.","fc7f2abf":"### Distribution of anime type","366743a4":"### Number of episodes(TV) and rating","36d82f5f":"### Output ten recommended anime","0692c664":"# Anime Recommendation System using Pearson Correlation","bbedfb40":"We can see that most anime have rating count below 500","3ca4fa85":"# Load the datasets\n\n* 2 different datasets will be loaded in to dataframes \n* Dataset can be downloaded in https:\/\/www.kaggle.com\/CooperUnion\/anime-recommendations-database","294ed2ce":"### anime.csv\n\n* anime_id - myanimelist.net's unique id identifying an anime.\n* name - full name of anime.\n* genre - comma separated list of genres for this anime.\n* type - movie, TV, OVA, etc.\n* episodes - how many episodes in this show. (1 if movie).\n* rating - average rating out of 10 for this anime.\n* members - number of community members that are in this anime's \"group\".\n\n### rating.csv\n\n* user_id - non identifiable randomly generated user id.\n* anime_id - the anime that this user has rated.\n* rating - rating out of 10 this user has assigned (-1 if the user watched it but didn't assign a rating).","1842cbb4":"# Exploratory Data Analysis\n\n* Distribution of anime type\n* Anime with highest rating counts\n* Movie and TV ratings\n* Number of episodes and rating\n* Number of ratings given by the user\n* Anime rating count","48864582":"### Anime with highest rating counts","746b5d8c":"# Collaborative Filtering using Pearson Correlation\n\n<br>\n\n```\n* In this recommendation system, we will be utilizing the collaborative filtering technique.\n* By using this technique, the system will recommend anime based on the correlation between the ratings of \n  the user's anime and the ratings of other anime.\n* For example, I watched 10 anime and gave each of them a rating. Now, my friend watched an anime from my \n  anime list and now asks me to recommend three anime. With that, I will recommend three anime with closest \n  rating to the rating I gave for the anime that my friend watched.\n```\n\n### Process\n\n<br>\n\n```\n* Remove anime with low count of ratings and users who gave low count of ratings\n* Construct Rating Matrix\n* Correlate user's anime with other anime based on ratings\n* Output ten recommended anime\n```"}}