{"cell_type":{"8efafe53":"code","0fbb6a9a":"code","8d7997ce":"code","498267c7":"code","fc8f3c35":"code","6d808447":"code","aee1ed9d":"code","66d98f25":"code","911d2c75":"code","764d6eb3":"code","0f042c36":"code","ab58cf4f":"code","ccbc0efc":"code","4616e632":"code","08deca1e":"code","0f0cd209":"code","8efaf71e":"code","fd4d1d46":"code","ae70d981":"code","8697b160":"code","ddcaadf5":"code","5ccb69a7":"code","2229b8d3":"code","5e375a4b":"code","4a437bdb":"code","53a7e3fa":"code","96b7d31f":"code","8ff53614":"code","e94d3f04":"code","a58e5507":"code","513a51b2":"code","19a11cb3":"code","053fa2a5":"code","6122b3cf":"code","6ee54cc7":"code","a75b5c39":"code","0e5e002d":"code","e34435d7":"code","9b2c85cf":"code","a0e63e67":"code","673c1a50":"code","a4f0daf5":"code","9c49301f":"code","a7c71944":"markdown","c88bd8ae":"markdown","2256d6d6":"markdown","3a1f1b42":"markdown","18609caa":"markdown","d38fa09c":"markdown","458712dc":"markdown","10b478d2":"markdown"},"source":{"8efafe53":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0fbb6a9a":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","8d7997ce":"train= pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ndf=pd.concat([train,test])","498267c7":"df.head()","fc8f3c35":"\ndf.shape","6d808447":"train.head()","aee1ed9d":"test.head()","66d98f25":"train.shape","911d2c75":"test.shape","764d6eb3":"train.isnull()","0f042c36":"sns.heatmap(train.isnull(),yticklabels=False,cmap='YlGnBu')","ab58cf4f":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',data=train)","ccbc0efc":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',hue='Sex',data=train)","4616e632":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',hue ='Pclass',data=train)","08deca1e":"sns.displot(train['Age'].dropna(),kde=0,color='y',bins=40)","0f0cd209":"sns.countplot(x='SibSp',data=train)","8efaf71e":"sns.boxplot(x='Pclass',y='Age',data=train\n           )","fd4d1d46":"def impute_age_train(cols):\n    Age=cols[0]\n    Pclass=cols[1]\n    \n    if pd.isnull(Age):\n        if Pclass == 1:\n            return 37\n        elif Pclass == 2:\n            return 29\n        else :\n            return 24\n    else:\n        return Age","ae70d981":"sns.boxplot(x='Pclass',y='Age',data=test\n           )","8697b160":"def impute_age_test(cols):\n    Age=cols[0]\n    Pclass=cols[1]\n    \n    if pd.isnull(Age):\n        if Pclass == 1:\n            return 42\n        elif Pclass == 2:\n            return 27\n        else :\n            return 25\n    else:\n        return Age","ddcaadf5":"train[['Age','Pclass']]\n","5ccb69a7":"test[['Age','Pclass']]","2229b8d3":"train['Age']=train[['Age','Pclass']].apply(impute_age_train,axis=1)\ntest['Age']=test[['Age','Pclass']].apply(impute_age_test,axis=1)","5e375a4b":"sns.heatmap(train.isnull(),yticklabels=False,cmap='viridis')","4a437bdb":"train.drop('Cabin',axis=1,inplace=True)\ntest.drop('Cabin',axis=1,inplace=True)","53a7e3fa":"sns.heatmap(train.isnull(),yticklabels=False,cmap='viridis')","96b7d31f":"Embarked = pd.get_dummies(train['Embarked'],drop_first=True)\nEmbarked_test = pd.get_dummies(test['Embarked'],drop_first=True)\nEmbarked.head()","8ff53614":"Sex=pd.get_dummies(train['Sex'],drop_first=True)\nSex_test=pd.get_dummies(test['Sex'],drop_first=True)\nSex.head()","e94d3f04":"train.head()","a58e5507":"train.drop(['Sex','Name','Embarked','Ticket'],axis=1,inplace=True)\ntest.drop(['Sex','Name','Embarked','Ticket'],axis=1,inplace=True)","513a51b2":"train.head()","19a11cb3":"test.head()","053fa2a5":"train = pd.concat([train,Sex,Embarked],axis=1)\ntest = pd.concat([test,Sex_test,Embarked_test],axis=1)\ntrain.head()","6122b3cf":"train.drop('Survived',axis=1).head()","6ee54cc7":"train['Survived'].head()","a75b5c39":"x_train = train.drop('Fare',axis=1)\nx_train=x_train.drop('Survived',axis=1)\ny_train = train['Survived']\nx_train\n    ","0e5e002d":"x_test = test.drop('Fare',axis=1)\nx_test","e34435d7":"from sklearn.ensemble import RandomForestClassifier\nrandom_forest = RandomForestClassifier()\nrandom_forest.fit(x_train,y_train)\n#prediction = random_forest.predict(x_test)","9b2c85cf":"prediction = random_forest.predict(x_test)\n","a0e63e67":"\nprediction = np.array(prediction)\nprediction","673c1a50":"random_forest.score(x_train,y_train)","a4f0daf5":"\nSubmission = pd.DataFrame()\nSubmission['PassengerId']= test['PassengerId']\nSubmission['Survived']=prediction\n\nSubmission","9c49301f":"Submission.to_csv('submit.csv',index = False)","a7c71944":"Reading the data","c88bd8ae":"# **Cleaning the Data**\n\nFilling the missing Data","2256d6d6":"# **Evaluation**","3a1f1b42":"# Import Libraries","18609caa":"# ****Building Model****","d38fa09c":"# **Training and Prediction\u00b6**","458712dc":"# **Exploratory Data Analysis (EDA)**","10b478d2":"# **Categorical features**"}}