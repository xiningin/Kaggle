{"cell_type":{"537c24e7":"code","cccc071d":"code","bc5ff04d":"code","bf847078":"code","d0ba5ec6":"code","4691e14f":"code","34c2b7cb":"code","57b622e0":"code","80bf3caa":"code","feb63113":"code","7a979821":"code","11010ddf":"code","c30e60cf":"code","b2194d3c":"code","78cb6d70":"code","87b47c0d":"code","5e80cea3":"code","7de276f7":"code","dc859401":"code","2094df83":"code","a675236a":"code","217f87ea":"markdown","841c4f5a":"markdown","d70cfc11":"markdown"},"source":{"537c24e7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","cccc071d":"import tensorflow as tf","bc5ff04d":"print(tf.__version__)","bf847078":"mnist = tf.keras.datasets.mnist\n","d0ba5ec6":"(x_train, y_train),(x_test, y_test) = mnist.load_data()","4691e14f":"import matplotlib.pyplot as plt","34c2b7cb":"#how it looks like\nplt.imshow(x_train[2])","57b622e0":"#normalization is needed in some cases, so it is better to do it now too\nx_train = tf.keras.utils.normalize(x_train, axis=1)\nx_test = tf.keras.utils.normalize(x_test, axis=1)","80bf3caa":"plt.imshow(x_train[2]) #values are between 0 and 1 now","feb63113":"classifier = tf.keras.models.Sequential() #creating the model","7a979821":"classifier.add(tf.keras.layers.Flatten())","11010ddf":"classifier.add(tf.keras.layers.Dense(8, activation=tf.nn.relu))#adding layer 1","c30e60cf":"classifier.add(tf.keras.layers.Dense(8, activation=tf.nn.relu))#adding layer 2","b2194d3c":"classifier.add(tf.keras.layers.Dense(10, activation=tf.nn.sigmoid))#output layer","78cb6d70":"classifier.compile(optimizer='adam',\n              loss='sparse_categorical_crossentropy',\n              metrics=['accuracy']) #compile with basic settings","87b47c0d":"#now the model is ready\nclassifier.fit(x_train,y_train,epochs=3)","5e80cea3":"val_loss, val_acc = classifier.evaluate(x_test, y_test)  # evaluate the out of sample data with model\nprint(val_loss)  # model's loss (error)\nprint(val_acc)  # model's accuracy","7de276f7":"prediction=classifier.predict(x_test)","dc859401":"prediction[0]","2094df83":"np.argmax(prediction[5])","a675236a":"plt.imshow(x_test[5])","217f87ea":"It looks like working!","841c4f5a":"implication of what i learn from tutorial: https:\/\/www.youtube.com\/watch?v=wQ8BIBpya2k","d70cfc11":"not a very good model now, but it is just to learn"}}