{"cell_type":{"4517d9c6":"code","394f774c":"code","d70cb3cf":"code","6173344e":"code","7499d99c":"code","568acc2a":"code","2f230df7":"code","83be7529":"code","4525d161":"code","d10e2f9f":"code","4ea45cf3":"code","e93f421e":"code","06459e07":"code","7770b76b":"code","0a9b7f77":"code","e3584aa8":"code","fa9dc9d6":"code","16e6480f":"code","4cc3f858":"code","faa1724a":"code","b774fa84":"code","6019b081":"code","8add5969":"code","7f204310":"code","713f17a5":"markdown","bf538807":"markdown","45970088":"markdown","c4239759":"markdown","bcf77e90":"markdown","c6eb908a":"markdown","3b97cb8f":"markdown","c52aa9a5":"markdown","3fff38d2":"markdown","eaecb278":"markdown","b400d3b4":"markdown","f996b2ef":"markdown","4eab497d":"markdown","b97551d0":"markdown","935c119e":"markdown","559b773c":"markdown","13f35395":"markdown","5f130b1d":"markdown","c7f1ffc9":"markdown","b17c3385":"markdown","ab637e51":"markdown","bdd0fcd4":"markdown","17c4f96b":"markdown","e8a7a7d5":"markdown","d8224207":"markdown","11db795c":"markdown","cd41ba9a":"markdown","1f1e7951":"markdown","1e90e055":"markdown","7d43e4d3":"markdown","45d09bc1":"markdown","046fefca":"markdown","d943c43b":"markdown","e2d30c5a":"markdown","d53cdce2":"markdown","ba85a3ff":"markdown","10434249":"markdown","54ad5f7e":"markdown"},"source":{"4517d9c6":"import numpy as np\nimport pandas as pd\nimport os\nfrom scipy.signal import hilbert\nfrom scipy.signal import hann\nfrom scipy.signal import convolve\nimport copy\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom tqdm import tqdm_notebook\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.svm import NuSVR, SVR\nfrom sklearn.metrics import mean_absolute_error, f1_score\npd.options.display.precision = 15\nfrom collections import defaultdict\nimport lightgbm as lgb\nimport xgboost as xgb\nimport catboost as cat\nimport time\nfrom collections import Counter\nimport datetime\nfrom catboost import CatBoostRegressor\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import StratifiedKFold, KFold, RepeatedKFold, GroupKFold, GridSearchCV, train_test_split, TimeSeriesSplit, RepeatedStratifiedKFold\nfrom sklearn import metrics\nfrom sklearn.metrics import classification_report, confusion_matrix\nfrom sklearn import linear_model\nimport gc\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nfrom bayes_opt import BayesianOptimization\n# import eli5\nimport shap\nfrom IPython.display import HTML\nimport json\nimport altair as alt\nfrom category_encoders.ordinal import OrdinalEncoder\nimport networkx as nx\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom typing import List\n\nimport os\nimport time\nimport datetime\nimport json\nimport gc\nfrom numba import jit\n\nimport numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom tqdm import tqdm_notebook\n\nimport lightgbm as lgb\nimport xgboost as xgb\nfrom catboost import CatBoostRegressor, CatBoostClassifier\nfrom sklearn import metrics\nfrom typing import Any\nfrom itertools import product\npd.set_option('max_rows', 500)\nimport re\nfrom tqdm import tqdm\nfrom joblib import Parallel, delayed","394f774c":"path = '\/kaggle\/input\/m5-forecasting-accuracy'\ntrain_sales = pd.read_csv(f'{path}\/sales_train_validation.csv')\ncalendar = pd.read_csv(f'{path}\/calendar.csv')\nsubmission = pd.read_csv(f'{path}\/sample_submission.csv')\nsell_prices = pd.read_csv(f'{path}\/sell_prices.csv')","d70cb3cf":"calendar","6173344e":"train_sales","7499d99c":"sell_prices","568acc2a":"submission","2f230df7":"train_sales.loc[train_sales['item_id'] == 'HOBBIES_1_001']","83be7529":"sell_prices.loc[sell_prices['item_id'] == 'HOBBIES_1_001']","4525d161":"plt.figure(figsize=(12, 4))\nfor i in range(10):\n    plt.plot(train_sales.loc[train_sales['item_id'] == 'HOBBIES_1_001'].iloc[i, 6:].values,\n             label=train_sales.loc[train_sales['item_id'] == 'HOBBIES_1_001'].iloc[i, 5]);\nplt.title('HOBBIES_1_001 sales')\nplt.legend();","d10e2f9f":"plt.figure(figsize=(12, 4))\nfor i in range(10):\n    plt.plot(train_sales.loc[train_sales['item_id'] == 'HOBBIES_1_001'].iloc[i, 6:].rolling(30).mean().values,\n             label=train_sales.loc[train_sales['item_id'] == 'HOBBIES_1_001'].iloc[i, 5]);\nplt.title('HOBBIES_1_001 sales, rolling mean 30 days')\nplt.legend();\n\nplt.figure(figsize=(12, 4))\nfor i in range(10):\n    plt.plot(train_sales.loc[train_sales['item_id'] == 'HOBBIES_1_001'].iloc[i, 6:].rolling(60).mean().values,\n             label=train_sales.loc[train_sales['item_id'] == 'HOBBIES_1_001'].iloc[i, 5]);\nplt.title('HOBBIES_1_001 sales, rolling mean 60 days')\nplt.legend();\n\nplt.figure(figsize=(12, 4))\nfor i in range(10):\n    plt.plot(train_sales.loc[train_sales['item_id'] == 'HOBBIES_1_001'].iloc[i, 6:].rolling(90).mean().values,\n             label=train_sales.loc[train_sales['item_id'] == 'HOBBIES_1_001'].iloc[i, 5]);\nplt.title('HOBBIES_1_001 sales, rolling mean 90 days')\nplt.legend();\n","4ea45cf3":"item_prices = sell_prices.loc[sell_prices['item_id'] == 'HOBBIES_1_001']\nfor s in item_prices['store_id'].unique():\n    small_df = item_prices.loc[item_prices['store_id'] == s]\n    plt.plot(small_df['wm_yr_wk'], small_df['sell_price'], label=s)\nplt.legend()\nplt.title('HOBBIES_1_001 sell prices');","e93f421e":"train_sales.loc[train_sales['store_id'] == 'CA_1']","06459e07":"sell_prices.loc[sell_prices['store_id'] == 'CA_1']","7770b76b":"ca_1_sales = train_sales.loc[train_sales['store_id'] == 'CA_1']\npd.crosstab(ca_1_sales['cat_id'], ca_1_sales['dept_id'])","0a9b7f77":"plt.figure(figsize=(12, 4))\nfor d in ca_1_sales['dept_id'].unique():\n    store_sales = ca_1_sales.loc[ca_1_sales['dept_id'] == d]\n    store_sales.iloc[:, 6:].sum().rolling(30).mean().plot(label=d)\nplt.title('CA_1 sales by department, rolling mean 30 days')\nplt.legend(loc=(1.0, 0.5));","e3584aa8":"item_prices = sell_prices.loc[sell_prices['item_id'] == 'HOBBIES_1_001']\nfor s in item_prices['store_id'].unique():\n    small_df = item_prices.loc[item_prices['store_id'] == s]\n    plt.plot(small_df['wm_yr_wk'], small_df['sell_price'], label=s)\nplt.legend()\nplt.title('HOBBIES_1_001 sell prices');","fa9dc9d6":"ca_1_prices = sell_prices.loc[sell_prices['store_id'] == 'CA_1']\nca_1_prices['dept_id'] = ca_1_prices['item_id'].apply(lambda x: x[:-4])\n","16e6480f":"plt.figure(figsize=(12, 6))\nfor d in ca_1_prices['dept_id'].unique():\n    small_df = ca_1_prices.loc[ca_1_prices['dept_id'] == d]\n    grouped = small_df.groupby(['wm_yr_wk'])['sell_price'].mean()\n    plt.plot(grouped.index, grouped.values, label=d)\nplt.legend(loc=(1.0, 0.5))\nplt.title('CA_1 mean sell prices by dept');","4cc3f858":"train_sales.loc[train_sales['dept_id'] == 'HOBBIES_1']","faa1724a":"train_sales.loc[train_sales['dept_id'] == 'HOBBIES_1', 'item_id'].nunique()","b774fa84":"sell_prices.loc[sell_prices['item_id'].str.contains('HOBBIES_1')]","6019b081":"hobbies_1_sales = train_sales.loc[train_sales['dept_id'] == 'HOBBIES_1']\nplt.figure(figsize=(12, 6))\nfor d in hobbies_1_sales['store_id'].unique():\n    store_sales = hobbies_1_sales.loc[hobbies_1_sales['store_id'] == d]\n    store_sales.iloc[:, 6:].sum().rolling(30).mean().plot(label=d)\nplt.title('HOBBIES_1 sales by stores, rolling mean 30 days')\nplt.legend(loc=(1.0, 0.5));","8add5969":"sell_prices.head()","7f204310":"hobbies_1_prices = sell_prices.loc[sell_prices['item_id'].str.contains('HOBBIES_1')]\nplt.figure(figsize=(12, 6))\nfor d in hobbies_1_prices['store_id'].unique():\n    small_df = hobbies_1_prices.loc[hobbies_1_prices['store_id'] == d]\n    grouped = small_df.groupby(['wm_yr_wk'])['sell_price'].mean()\n    plt.plot(grouped.index, grouped.values, label=d)\nplt.legend(loc=(1.0, 0.5))\nplt.title('HOBBIES_1 mean sell prices by store');","713f17a5":"# \u603b\u7ed3","bf538807":"\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8be5\u90e8\u95e8\u6709416\u4e2a\u5546\u54c1\uff0c\u5e76\u4e14\u5728\u6240\u6709\u5546\u5e97\u4e2d\u90fd\u51fa\u552e\u3002","45970088":"## \u5f15\u5165\u5de5\u5177\u5305","c4239759":"### \u63a2\u7d22\u67d0\u4e00\u4e2a\u5546\u5e97\u7684\u6240\u6709\u4fe1\u606f\n\n","bcf77e90":"\u5982\u679c\u89c9\u5f97\u8fd9\u4e2a\u6570\u636e\u63a2\u7d22\u6709\u7528\uff0c\u8bf7\u52a8\u52a8\u5c0f\u624b\u7ed9\u6211\u70b9\u4e2a\u8d5e\ud83d\ude1c","c6eb908a":"\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u8be5\u5546\u54c1\u57283\u4e2a\u5dde\u768410\u5bb6\u5546\u5e97\u4e2d\u5747\u6709\u9500\u552e\u3002 \u6b64\u9879\u76ee\u5c5e\u4e8e\u201c HOBBIES\u201d\u7c7b\u522b\uff0c\u5728\u201c HOBBIES_1\u201d\u90e8\u95e8\u51fa\u552e\u3002","3b97cb8f":"\u63a2\u7d22\u5546\u5e97CA_1\u7684\u6240\u6709\u4fe1\u606f","c52aa9a5":"# train_sale","3fff38d2":"\u8fd9\u4e2anotebook\u6765\u81ea\u4e8e\u4e24\u4e2a\u516c\u5f00\u7684notebook\n\nhttps:\/\/www.kaggle.com\/holoong9291\/eda-for-m5-en\n\nhttps:\/\/www.kaggle.com\/artgor\/it-is-time-for-m5-going-step-by-step","eaecb278":"## M5 competition\n\n\u6b64\u7ade\u8d5b\u662f\u9884\u6d4b\u7ade\u8d5b\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u672a\u676528\u5929\u7684\u9500\u552e\u505a\u51fa\u6b63\u786e\u7684\u9884\u6d4b\u3002 \u5e76\u4e14\uff0c\u4e0d\u4ec5\u8981\u9884\u6d4b\u516c\u5171\u699c\u5355\u4e0a28\u5929\u7684\u9500\u552e\u6570\u636e\uff0c\u8fd8\u8981\u9884\u6d4b\u79c1\u6709\u699c\u5355\u4e0a28\u5929\u7684\u9500\u552e\u6570\u636e\uff0c\u5206\u6570\u5404\u536050%\u3002\u5982\u679c\u5728\u622a\u6b62\u65e5\u671f\u524d\u8fd8\u5269\u4e00\u4e2a\u6708\uff0c\u516c\u5171\u699c\u5355\u5c06\u4f1a\u5173\u95ed\uff0c\u5f00\u542f\u79c1\u6709\u699c\u5355\uff0c\u5e76\u4e14\u4f1a\u7ed9\u51fa\u516c\u5171\u699c\u5355\u4e0a28\u5929\u7684\u9500\u552e\u6570\u636e\u7684\u771f\u5b9e\u6807\u7b7e\u3002\n\n\n\u5e76\u4e14\u5bf9\u4e8e\u8fd9\u4e2a\u6570\u636e\u96c6\u6709\u4e24\u4e2a\u6bd4\u8d5b\uff0c\u53ea\u662f\u8981\u9884\u6d4b\u7684\u6307\u6807\u4e0d\u540c\n\n* \u5728\u8fd9\u4e2a\u6bd4\u8d5b\u4e2d\u6211\u4eec\u91c7\u7528WRMSSE\u8bef\u5dee (\u52a0\u6743\u7684\u5747\u65b9\u6839\u6807\u51c6\u8bef\u5dee);\n![](https:\/\/i.imgur.com\/uqhsf3d.png)\n![](https:\/\/i.imgur.com\/B1hglCf.png)\n\n\n\n\n\n* \u5728[\u53e6\u4e00\u573a\u6bd4\u8d5b](https:\/\/www.kaggle.com\/c\/m5-forecasting-uncertainty)\u4e2d\uff0c\u6211\u4eec\u9884\u6d4b\u7684\u662f\u5546\u54c1\u4ef7\u683c\u7684\u4e0d\u786e\u5b9a\u6027\u5206\u5e03\uff0c\u91c7\u7528\uff08WSPL\uff09\u6307\u6807\n![](https:\/\/i.imgur.com\/J8XAQP4.png)\n![](https:\/\/i.imgur.com\/jzLckus.png)\n![](https:\/\/i.imgur.com\/3ihaSZO.png)\n\n\n\n\n\n![](https:\/\/i.imgur.com\/C5hASXe.png)\n\n*Work in progress :)*","b400d3b4":"** calender \u5404\u9879\u6570\u636e\u7684\u89e3\u91ca\u5982\u4e0b:\n\ncalender\u4e3b\u8981\u5305\u542b\u7684\u662f\u65e5\u671f\u6570\u636e\n\ndate\uff1a\u4ece2011\u5e741\u670829\u65e5\u2014\u20142016\u5e746\u670819\u65e5\u7684\u6240\u6709\u65e5\u671f\n\nwm_yr_wk:wm\u662fWalMart\u7684\u610f\u601d\uff0c\u6807\u53f7\u4e3a1\uff0c\u65e0\u610f\u4e49\u3002\u7b2c2,3\u4f4d\u6570\u5b57\u4ee3\u8868\u5e74\u4efd\uff0c\u6700\u540e\u4e24\u4f4d\u6570\u5b57\u4ee3\u8868\u662f\u4eca\u5e74\u7684\u7b2c\u591a\u5c11\u5468\uff0c\u598211101\u8868\u793a\u65e5\u671f\u5904\u57282011\u5e74\u7684\u7b2c\u4e00\u5468\uff0c\n\n\nd\uff1a\u5bf9\u4e8e\u65e5\u671f\u7684\u7f16\u53f7\n\nevent_name_1:\u5728\u90a3\u4e00\u5929\u53d1\u751f\u7684\u7b2c\u4e00\u573a\u5927\u4e8b\u4ef6\n\nevent_type_1:\u5728\u90a3\u4e00\u5929\u53d1\u751f\u7684\u7b2c\u4e00\u573a\u5927\u4e8b\u4ef6\u7c7b\u578b\n\nevent_name_2:\u5728\u90a3\u4e00\u5929\u53d1\u751f\u7684\u7b2c\u4e8c\u573a\u5927\u4e8b\u4ef6\n\nevent_type_2:\u5728\u90a3\u4e00\u5929\u53d1\u751f\u7684\u7b2c\u4e8c\u573a\u5927\u4e8b\u4ef6\u7684\u7c7b\u578b\n\n\nsnap_CA:\u52a0\u5dde\u7684\u5546\u5e97\u662f\u5426\u53ef\u4ee5\u5728\u90a3\u4e00\u5929\u53ef\u4ee5\u4f7f\u7528\u798f\u5229\u5238\n\nsnap_TX:\u5f97\u514b\u8428\u65af\u5dde\u7684\u5546\u5e97\u662f\u5426\u53ef\u4ee5\u5728\u90a3\u4e00\u5929\u4f7f\u7528\u798f\u5229\u5238\t\n\nsnap_WI:\u5a01\u65af\u5eb7\u661f\u5dde\u7684\u5546\u5e97\u662f\u5426\u53ef\u4ee5\u5728\u90a3\u4e00\u5929\u4f7f\u7528\u798f\u5229\u5238\t\n\n\n\n\n","f996b2ef":"\u73b0\u5728\u6765\u770b\u4e00\u770b`HOBBIES_1_001`\u5546\u54c1\u7684\u4ef7\u683c","4eab497d":"## \u8f7d\u5165\u6587\u4ef6","b97551d0":"\u5728`submission`\u4e2d\u4e3b\u8981\u586b\u5165\u5bf9\u672a\u676528\u5929\u7684\u9884\u6d4b\u503c\uff0c\u5728\u516c\u5171\u699c\u5355\u4e0a\u5e94\u8be5\u662fd_1914\u5929\u81f3d_1941\u5929\u7684\u5546\u54c1\u9500\u91cf\u9884\u6d4b\u503c\n\n\u5f53\u516c\u5171\u699c\u5355\u5173\u95ed\u540e\uff0c\u5c06\u7ed9\u51fad_1914\u81f3d_1941\u5929\u7684\u771f\u5b9e\u503c\uff0c\u7136\u540e\u6211\u4eec\u5c06\u8981\u9884\u6d4b\u7684\u5219\u5e94\u8be5\u662fd_1942\u5929\u81f3d_1969\u5929\u5546\u54c1\u7684\u9500\u91cf\u9884\u6d4b\u503c","935c119e":"\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u9500\u552e\u91cf\u5728\u4e00\u76f4\u4f1a\u589e\u52a0\u3002 \u800c\u4e14\u6211\u4eec\u53ef\u4ee5\u770b\u5230CA_1\u548cCA_3\u5546\u5e97\u7684\u9500\u552e\u989d\u9ad8\u4e8e\u5176\u4ed6\u5546\u5e97\u3002","559b773c":"\u67e5\u770b\u6bcf\u4e2a\u7c7b\u522b\u4ee5\u53ca\u90e8\u95e8\u6709\u591a\u5c11\u79cd\u5546\u54c1","13f35395":"**** `sell_prices` \u5404\u9879\u6570\u636e\u7684\u89e3\u91ca\u5982\u4e0b: \n\nstore_id:\u8868\u793a\u5546\u5e97\u7684ID\n\nitem_id\uff1a\u8868\u793a\u5546\u54c1\u7684\u7f16\u53f7\n\nwm_yr_wk:\u7b2c2,3\u4f4d\u6570\u5b57\u4ee3\u8868\u5e74\u4efd\uff0c\u6700\u540e\u4e24\u4f4d\u6570\u5b57\u4ee3\u8868\u662f\u4eca\u5e74\u7684\u7b2c\u591a\u5c11\u5468\uff0c\u598211325\u8868\u793a\u65e5\u671f\u5904\u57282013\u5e74\u7684\u7b2c25\u5468\n\nsell_price\uff1a\u8868\u793a\u9500\u552e\u4ef7\u683c","5f130b1d":"# calender","c7f1ffc9":"### \u4e00\u4e2a\u5355\u72ec\u7684\u5546\u54c1\u7684\u6240\u6709\u4fe1\u606f\n\nLet's start with looking at all the data for a single item.","b17c3385":"\u53ef\u4ee5\u770b\u51fa\uff0c\u8be5\u5546\u54c1\u5728\u524d\u4e9b\u65f6\u671f\u7684\u9500\u91cf\u4e3a\u96f6\uff0c\u5728\u7b2c900\u591a\u5929\u65f6\u624d\u6709\u9500\u91cf","ab637e51":"\u53ef\u4ee5\u770b\u5230\u9500\u552e\u4ef7\u683c\u4e00\u76f4\u5728\u4e0a\u6da8\uff0c\u5e76\u4e14\u662f\u5468\u671f\u6027\u7684\u589e\u957f\uff0c\u4ece\u56fe\u4e2d\u53ef\u4ee5\u770b\u51fa\u8c8c\u4f3c\u662f\u5728\u67d0\u4e2a\u7279\u6b8a\u7684\u65f6\u95f4\u8282\u70b9\u5f00\u59cb\u589e\u957f\u3002","bdd0fcd4":"# sell_prices","17c4f96b":"**** `train_sale` \u5404\u9879\u6570\u636e\u7684\u89e3\u91ca\u5982\u4e0b: \n\nitem_id:\u7b2c\u4e00\u4e2a\u8868\u793a\u5546\u54c1\u7c7b\u522b\uff0c\u2018HOBBIES_1_001\u2019\u8868\u793a\u6b64\u9879\u76ee\u5c5e\u4e8e\u201c HOBBIES\u201d\u7c7b\u522b\uff0c\u5728\u201c HOBBIES_1\u201d\u90e8\u95e8\u51fa\u552e\uff0c\u7f16\u53f7\u4e3a001\n\ndept_id\uff1a\u5373department_id,\u8868\u793a\u5546\u54c1\u5728\u54ea\u4e2a\u90e8\u95e8\u51fa\u552e\n\ncat_id:\u5373category_id,\u8868\u793a\u5546\u54c1\u7684\u7c7b\u522b\n\nstore_id:\u8868\u793a\u5546\u54c1\u5728\u54ea\u4e2a\u5546\u5e97\u51fa\u552e\uff0cCA_1\u8868\u793a\u8be5\u5546\u54c1\u5728\u52a0\u5dde\u76841\u5546\u5e97\u51fa\u552e\n\nstate_id\uff1a\u8868\u793a\u5546\u5e97\u6240\u5904\u7684\u5dde\n\n\nd_1\u81f3d_1913\u5217\uff1a\u8868\u793a\u5728\u7b2c\u4e00\u5929\u81f3\u7b2c1913\u5929\uff0c\u6bcf\u5929\u7684\u5546\u54c1\u9500\u552e\u91cf\n\n\n\n\n\n","e8a7a7d5":"\u4f5c\u56fe\u6765\u67e5\u770b\u4e00\u4e0b`HOBBIES_1_001`\u5728\u7b2cd_1\u5929\u81f3d_1913\u5929\u7684\u9500\u91cf\u60c5\u51b5","d8224207":"### \u67d0\u4e2a\u90e8\u95e8\u6240\u542b\u6709\u7684\u6240\u6709\u4fe1\u606f\n\n\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5206\u6790\u540c\u4e00\u90e8\u95e8\u7684\u4e0d\u540c\u7269\u54c1\u5728\u4e0d\u540c\u5546\u5e97\u7684\u9500\u552e\u60c5\u51b5\u3002","11db795c":"\u9664\u4e86\u6709\u4e00\u6b21\u5076\u5c14\u7684\u964d\u4ef7\uff0c\u5927\u90e8\u5206\u65f6\u95f4\u4ef7\u683c\u662f\u4fdd\u6301\u5e73\u7a33\u72b6\u6001","cd41ba9a":"\u6211\u4eec\u53ef\u4ee5\u770b\u5230 `HOBBIES_1` \u7684\u4ef7\u683c\u968f\u65f6\u95f4\u662f\u589e\u957f\u7684, \u800c\u5176\u4ed6\u7c7b\u7684\u4ef7\u683c\u57fa\u672c\u4fdd\u6301\u5e73\u7a33.","1f1e7951":"## \u8fdb\u884c\u6570\u636e\u63a2\u7d22","1e90e055":"# submission","7d43e4d3":"\u53ef\u4ee5\u770b\u5230 `FOODS_1` \u7684\u9500\u91cf\u66f4\u9ad8.","45d09bc1":"\u67e5\u770b\u8be5\u5546\u5e97\u9500\u552e\u7684\u6240\u6709\u5546\u54c1\u7684\u4ef7\u683c","046fefca":"So what do we see here?\n* there is a definite seasonality with several peaks;\n* the sales are more or less constant and quite low (max sales per day in one store is 11);\n* as a result, it could be difficult to predict such low values;","d943c43b":"\u4ece\u8868\u683c\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u603b\u5171\u67093049\u79cd\u5546\u54c1\u5728CA_1\u51fa\u552e","e2d30c5a":"\u5148\u770b\u4e00\u770b\u5546\u54c1\u7f16\u53f7\u4e3a`HOBBIES_1_001`\u5546\u54c1\u7684\u4fe1\u606f","d53cdce2":"\u67e5\u770b\u8be5\u5546\u5e97\u6240\u6709\u7c7b\u522b\u7684\u9500\u552e\u4ef7\u683c","ba85a3ff":"* \u603b\u5171\u670910\u5bb6\u95e8\u5e97\u5206\u5e03\u5728\u4e09\u4e2a\u5dde\n\n* \u5171\u6709\u4ece2011\u5e741\u670829\u65e5\u81f32016\u5e744\u670825\u65e5\uff0c\u5373d_1\u81f3d_1913\u5929\u7684\u6240\u6709\u4fe1\u606f\uff0c\u5305\u62ec\u9500\u91cf\n\n* \u67092016\u5e744\u670825\u65e5\u81f32016\u5e746\u670819\u65e5\uff0c\u5373d_1914\u81f3d_1969\u5929\u7684\u6240\u6709\u4fe1\u606f\uff0c\u4f46\u662f\u4e0d\u5305\u542b\u9500\u91cf\n\n* \u6211\u4eec\u8981\u9884\u6d4b\u7684\u5219\u662f\u603b\u517160979\u79cd\u5546\u54c1\u5728d_1914\u81f3d_1969\u603b\u517156\u5929\u7684\u9500\u91cf\n\n","10434249":"\u91cd\u65b0\u4f5c\u56fe\uff0c\u8ba9\u6570\u636e\u770b\u8d77\u6765\u66f4\u52a0\u76f4\u89c2","54ad5f7e":"\u8fd9\u5bb6\u5546\u5e97\u5206\u4e3a3\u7c7b\uff1a\u98df\u54c1\uff0c\u7231\u597d\u548c\u5bb6\u5ead\uff0c\u67092-3\u4e2a\u90e8\u95e8\u3002"}}