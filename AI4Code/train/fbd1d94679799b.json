{"cell_type":{"ba87feb6":"code","a3e60461":"code","0f53b5b9":"code","69040795":"code","8664d5b1":"code","945cac63":"code","ef12eff2":"code","6ccbe28f":"code","0fec6877":"code","d7a6d13f":"code","442c3cc3":"code","67221883":"code","8c450c2f":"code","bddcb778":"code","4fcc8f76":"code","cb064c47":"code","7649fd7a":"code","9ccd1ea0":"code","a280b534":"code","97cca0ee":"code","82c3f5e8":"code","cf37a380":"code","9c9f55b0":"code","8eb772e9":"code","cc6b3904":"code","bc87f163":"code","dfed2c67":"code","625f5899":"code","1d585e57":"code","97632fda":"code","a97d80f4":"code","f2a69850":"code","98418bc3":"code","b55c8f34":"code","01ccdb32":"code","503ec62d":"code","964e2c90":"markdown","fc30447d":"markdown","73e78d2a":"markdown","1c22595b":"markdown","3ec99b57":"markdown","90ee80c7":"markdown","aa82d5f6":"markdown","feeeb7a5":"markdown","d562f4fa":"markdown","4517ba59":"markdown","355653be":"markdown","30c6caf0":"markdown","862f7f78":"markdown","acfd5d95":"markdown","417cff6c":"markdown","d5eb83b7":"markdown","57b01e40":"markdown","7c81a533":"markdown","67220279":"markdown","89206956":"markdown","d36e6f8c":"markdown","719be131":"markdown","fda49380":"markdown","3ff4c498":"markdown","89e3230b":"markdown","2a965ef0":"markdown","2d6625f8":"markdown","a63ec95b":"markdown","aaf523c2":"markdown","79faa54d":"markdown","9d27956a":"markdown","2e30daad":"markdown","bc012566":"markdown","bddf02c3":"markdown","54f1e97c":"markdown"},"source":{"ba87feb6":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport matplotlib.ticker as mtick\nfrom sklearn.model_selection import train_test_split, KFold\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\n\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import precision_score, recall_score, confusion_matrix, classification_report, accuracy_score, f1_score,roc_auc_score,plot_confusion_matrix\nfrom xgboost import XGBClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.model_selection import cross_validate\n\npd.set_option('display.max_columns', None)\n\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","a3e60461":"train = pd.read_csv('\/kaggle\/input\/mobile-price-classification\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/mobile-price-classification\/test.csv')","0f53b5b9":"train.head(10)","69040795":"train.info()","8664d5b1":"train.describe()","945cac63":"sns.set(rc={\"figure.dpi\":100})\nsns.set_context('paper')\nsns.set_style(\"ticks\")\n\nfig = plt.figure(figsize=(15,12))\ngs = fig.add_gridspec(2, 2)\ngs.update(wspace=0.3, hspace=0.4)\nfig.text(0.085,0.95,'Battery power and its effect of the price range ', fontfamily='serif',fontsize=15, fontweight='bold')\nsns.set_palette('Spectral')\n\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\nax2 = fig.add_subplot(gs[1,0],ylim=(0, 3000),xlim=(0,5))\nax3 = fig.add_subplot(gs[1,1],ylim=(0, 3000))\n\n#Axis 0 \n\nax0.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(x='battery_power',\n            data=train,\n            shade=True,\n            ax=ax0,\n            linewidth = 0\n            )\nax0.yaxis.set_major_formatter(mtick.PercentFormatter(1, decimals=3))\nax0.set_xlabel(\"\")\nax0.set_ylabel(\"\")\nax0.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0,y=1)\nax0.spines['top'].set_visible(False)\nax0.spines['right'].set_visible(False)\nax0.spines['left'].set_visible(False)\n\n\n#Axis 1 \n\nax1.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(x='battery_power',\n           hue='price_range',\n           shade=True,\n           data=train,\n           palette='Spectral',\n           ax=ax1,\n           fill=True,\n           alpha=.3, \n           linewidth=0\n           \n           )\nax1.yaxis.set_major_formatter(mtick.PercentFormatter(1, decimals=3))\nax1.set_xlabel(\"\")\nax1.set_ylabel(\"\")\nax1.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1)\nax1.legend(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'],fontsize=6,frameon=False)\nax1.spines['top'].set_visible(False)\nax1.spines['right'].set_visible(False)\nax1.spines['left'].set_visible(False)\n\n#Axis 2\n\nax2.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.boxenplot(y='battery_power',\n              data=train,\n              ax=ax2,\n              zorder=3,\n              linewidth=0.4)\n\nax2.set_xlabel(\"\")\nax2.set_ylabel(\"\")\nax2.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0,y=1.15)\nax2.spines['top'].set_visible(False)\nax2.spines['right'].set_visible(False)\nax2.spines['left'].set_visible(False)\n\n#Axis3\n\nax3.grid(color='gray', linestyle='-', axis='y', zorder=0,  dashes=(1,5))\nsns.boxenplot(x='price_range',\n              y='battery_power',\n              data=train,\n              ax=ax3,\n              zorder=3,\n              linewidth=0.4\n           \n            )\n\nax3.set_xlabel(\"\")\nax3.set_ylabel(\"\")\nax3.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1.15)\nax3.set_xticklabels(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'])\nax3.spines['top'].set_visible(False)\nax3.spines['right'].set_visible(False)\nax3.spines['left'].set_visible(False)\n\nfig.show()\n\n\n\n","ef12eff2":"fig = plt.figure(figsize=(15,4))\ngs = fig.add_gridspec(1, 2)\ngs.update(wspace=0.3, hspace=0)\nfig.text(0.120,1.1,'Bluetooth and its effect on the price ', fontfamily='serif',fontsize=15, fontweight='bold')\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\n\n\nsns.countplot(x='blue',\n           data=train,\n            palette='Blues',\n           ax=ax0)\nax0.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nax0.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1)\nax0.spines['top'].set_visible(False)\nax0.spines['right'].set_visible(False)\nax0.spines['left'].set_visible(False)\nax0.set_xticklabels([\"Doesnt Support\",\"Support\"])\nax0.set_xlabel(\"\")\nax0.set_ylabel(\"\")   \n\nsns.countplot(x='blue',\n             data=train,\n             hue='price_range',\n             ax=ax1)\nax1.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nax1.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.25,y=1)\nax1.spines['top'].set_visible(False)\nax1.spines['right'].set_visible(False)\nax1.spines['left'].set_visible(False)\nax1.get_legend().remove()\nlegend_labels, _= ax1.get_legend_handles_labels()\nax1.legend(legend_labels, ['Low Cost ', 'Medium Cost','High Cost','Very High Cost'], ncol=4, bbox_to_anchor=(-0.30, 1.22))\nax1.set_xticklabels([\"Doesnt Support\",\"Support\"])\nax1.set_xlabel(\"\")\nax1.set_ylabel(\"\")\n\nfig.show()","6ccbe28f":"fig = plt.figure(figsize=(15,12))\ngs = fig.add_gridspec(2, 2)\ngs.update(wspace=0.3, hspace=0.4)\nfig.text(0.085,0.95,'Clock Speed and its effect of the price range ', fontfamily='serif',fontsize=15, fontweight='bold')\nsns.set_palette('Spectral')\n\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\nax2 = fig.add_subplot(gs[1,0],ylim=(0,5))\nax3 = fig.add_subplot(gs[1,1],ylim=(0,5))\n\n#Axis 0 \n\nax0.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(x='clock_speed',\n            data=train,\n            shade=True,\n            ax=ax0,\n            linewidth = 0\n            )\nax0.yaxis.set_major_formatter(mtick.PercentFormatter(1, decimals=3))\nax0.set_xlabel(\"\")\nax0.set_ylabel(\"\")\nax0.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0,y=1.05)\nax0.spines['top'].set_visible(False)\nax0.spines['right'].set_visible(False)\nax0.spines['left'].set_visible(False)\n\n\n#Axis 1 \n\nax1.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(x='clock_speed',\n           hue='price_range',\n           shade=True,\n           data=train,\n           palette='Spectral',\n           ax=ax1,\n           fill=True,\n           alpha=.3, \n           linewidth=0\n           \n           )\nax1.yaxis.set_major_formatter(mtick.PercentFormatter(1, decimals=3))\nax1.set_xlabel(\"\")\nax1.set_ylabel(\"\")\nax1.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1.05)\nax1.legend(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'],fontsize=6,frameon=False)\nax1.spines['top'].set_visible(False)\nax1.spines['right'].set_visible(False)\nax1.spines['left'].set_visible(False)\n\n#Axis 2\n\nax2.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.boxenplot(y='clock_speed',\n              data=train,\n              ax=ax2,\n              zorder=3,\n              linewidth=0.4)\n\nax2.set_xlabel(\"\")\nax2.set_ylabel(\"\")\nax2.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0,y=1.15)\nax2.spines['top'].set_visible(False)\nax2.spines['right'].set_visible(False)\nax2.spines['left'].set_visible(False)\n\n#Axis3\n\nax3.grid(color='gray', linestyle='-', axis='y', zorder=0,  dashes=(1,5))\nsns.boxenplot(x='price_range',\n              y='clock_speed',\n              data=train,\n              ax=ax3,\n              zorder=3,\n              linewidth=0.4\n           \n            )\n\nax3.set_xlabel(\"\")\nax3.set_ylabel(\"\")\nax3.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1.15)\nax3.set_xticklabels(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'])\nax3.spines['top'].set_visible(False)\nax3.spines['right'].set_visible(False)\nax3.spines['left'].set_visible(False)\n\nfig.show()","0fec6877":"fig = plt.figure(figsize=(15,4))\ngs = fig.add_gridspec(1, 2)\ngs.update(wspace=0.3, hspace=0)\nfig.text(0.120,1.1,'Dual-sim and its effect on the price ', fontfamily='serif',fontsize=15, fontweight='bold')\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\n\n\nsns.countplot(x='dual_sim',\n           data=train,\n            palette='bone',\n           ax=ax0)\nax0.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nax0.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1)\nax0.spines['top'].set_visible(False)\nax0.spines['right'].set_visible(False)\nax0.spines['left'].set_visible(False)\nax0.set_xticklabels([\"Doesnt Support\",\"Support\"])\nax0.set_xlabel(\"\")\nax0.set_ylabel(\"\")   \n\nsns.countplot(x='dual_sim',\n             data=train,\n             hue='price_range',\n             ax=ax1)\nax1.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nax1.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.25,y=1)\nax1.spines['top'].set_visible(False)\nax1.spines['right'].set_visible(False)\nax1.spines['left'].set_visible(False)\nax1.get_legend().remove()\nlegend_labels, _= ax1.get_legend_handles_labels()\nax1.legend(legend_labels, ['Low Cost ', 'Medium Cost','High Cost','Very High Cost'], ncol=4, bbox_to_anchor=(-0.30, 1.22))\nax1.set_xticklabels([\"Doesnt Support\",\"Support\"])\nax1.set_xlabel(\"\")\nax1.set_ylabel(\"\")\n\nfig.show()","d7a6d13f":"fig = plt.figure(figsize=(15,12))\ngs = fig.add_gridspec(2, 2)\ngs.update(wspace=0.3, hspace=0.4)\nfig.text(0.085,0.95,'Front Camera mega-pixels and its effect on the price range', fontfamily='serif',fontsize=15, fontweight='bold')\nsns.set_palette('Spectral')\n\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\nax2 = fig.add_subplot(gs[1,0],ylim=(0,20))\nax3 = fig.add_subplot(gs[1,1],ylim=(0,20))\n\n#Axis 0 \n\nax0.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(x='fc',\n            data=train,\n            shade=True,\n            ax=ax0,\n            linewidth = 0\n            )\nax0.yaxis.set_major_formatter(mtick.PercentFormatter(1, decimals=3))\nax0.set_xlabel(\"\")\nax0.set_ylabel(\"\")\nax0.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0,y=1.05)\nax0.spines['top'].set_visible(False)\nax0.spines['right'].set_visible(False)\nax0.spines['left'].set_visible(False)\n\n\n#Axis 1 \n\nax1.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(x='fc',\n           hue='price_range',\n           shade=True,\n           data=train,\n           palette='Spectral',\n           ax=ax1,\n           fill=True,\n           alpha=.3, \n           linewidth=0\n           \n           )\nax1.yaxis.set_major_formatter(mtick.PercentFormatter(1, decimals=3))\nax1.set_xlabel(\"\")\nax1.set_ylabel(\"\")\nax1.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1.05)\nax1.legend(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'],fontsize=6,frameon=False)\nax1.spines['top'].set_visible(False)\nax1.spines['right'].set_visible(False)\nax1.spines['left'].set_visible(False)\n\n#Axis 2\n\nax2.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.boxenplot(y='fc',\n              data=train,\n              ax=ax2,\n              zorder=3,\n              linewidth=0.4)\n\nax2.set_xlabel(\"\")\nax2.set_ylabel(\"\")\nax2.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0,y=1.15)\nax2.spines['top'].set_visible(False)\nax2.spines['right'].set_visible(False)\nax2.spines['left'].set_visible(False)\n\n#Axis3\n\nax3.grid(color='gray', linestyle='-', axis='y', zorder=0,  dashes=(1,5))\nsns.boxenplot(x='price_range',\n              y='fc',\n              data=train,\n              ax=ax3,\n              zorder=3,\n              linewidth=0.4\n           \n            )\n\nax3.set_xlabel(\"\")\nax3.set_ylabel(\"\")\nax3.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1.15)\nax3.set_xticklabels(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'])\nax3.spines['top'].set_visible(False)\nax3.spines['right'].set_visible(False)\nax3.spines['left'].set_visible(False)\n\nfig.show()\n\n\n\n","442c3cc3":"fig = plt.figure(figsize=(15,4))\ngs = fig.add_gridspec(1, 2)\ngs.update(wspace=0.3, hspace=0)\nfig.text(0.120,1.1,'4G and its effect on the price ', fontfamily='serif',fontsize=15, fontweight='bold')\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\n\n\nsns.countplot(x='four_g',\n           data=train,\n            palette='bone',\n           ax=ax0)\nax0.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nax0.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1)\nax0.spines['top'].set_visible(False)\nax0.spines['right'].set_visible(False)\nax0.spines['left'].set_visible(False)\nax0.set_xticklabels([\"Doesnt Support\",\"Support\"])\nax0.set_xlabel(\"\")\nax0.set_ylabel(\"\")   \n\nsns.countplot(x='four_g',\n             data=train,\n             hue='price_range',\n             ax=ax1)\nax1.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nax1.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.25,y=1)\nax1.spines['top'].set_visible(False)\nax1.spines['right'].set_visible(False)\nax1.spines['left'].set_visible(False)\nax1.get_legend().remove()\nlegend_labels, _= ax1.get_legend_handles_labels()\nax1.legend(legend_labels, ['Low Cost ', 'Medium Cost','High Cost','Very High Cost'], ncol=4, bbox_to_anchor=(-0.30, 1.22))\nax1.set_xticklabels([\"Doesnt Support\",\"Support\"])\nax1.set_xlabel(\"\")\nax1.set_ylabel(\"\")\n\nfig.show()","67221883":"fig = plt.figure(figsize=(15,12))\ngs = fig.add_gridspec(2, 2)\ngs.update(wspace=0.3, hspace=0.4)\nfig.text(0.085,0.95,'Internal Memory(Gigabyte) and its effect of the price range ', fontfamily='serif',fontsize=15, fontweight='bold')\nsns.set_palette('Spectral')\n\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\nax2 = fig.add_subplot(gs[1,0],ylim=(0,80))\nax3 = fig.add_subplot(gs[1,1],ylim=(0,80))\n\n#Axis 0 \n\nax0.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(x='int_memory',\n            data=train,\n            shade=True,\n            ax=ax0,\n            linewidth = 0\n            )\nax0.yaxis.set_major_formatter(mtick.PercentFormatter(1, decimals=3))\nax0.set_xlabel(\"\")\nax0.set_ylabel(\"\")\nax0.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0,y=1.05)\nax0.spines['top'].set_visible(False)\nax0.spines['right'].set_visible(False)\nax0.spines['left'].set_visible(False)\n\n\n#Axis 1 \n\nax1.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(x='int_memory',\n           hue='price_range',\n           shade=True,\n           data=train,\n           palette='Spectral',\n           ax=ax1,\n           fill=True,\n           alpha=.3, \n           linewidth=0\n           \n           )\nax1.yaxis.set_major_formatter(mtick.PercentFormatter(1, decimals=3))\nax1.set_xlabel(\"\")\nax1.set_ylabel(\"\")\nax1.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1.05)\nax1.legend(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'],fontsize=6,frameon=False)\nax1.spines['top'].set_visible(False)\nax1.spines['right'].set_visible(False)\nax1.spines['left'].set_visible(False)\n\n#Axis 2\n\nax2.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.boxenplot(y='int_memory',\n              data=train,\n              ax=ax2,\n              zorder=3,\n              linewidth=0.4)\n\nax2.set_xlabel(\"\")\nax2.set_ylabel(\"\")\nax2.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0,y=1.15)\nax2.spines['top'].set_visible(False)\nax2.spines['right'].set_visible(False)\nax2.spines['left'].set_visible(False)\n\n#Axis3\n\nax3.grid(color='gray', linestyle='-', axis='y', zorder=0,  dashes=(1,5))\nsns.boxenplot(x='price_range',\n              y='int_memory',\n              data=train,\n              ax=ax3,\n              zorder=3,\n              linewidth=0.4\n           \n            )\n\nax3.set_xlabel(\"\")\nax3.set_ylabel(\"\")\nax3.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1.15)\nax3.set_xticklabels(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'])\nax3.spines['top'].set_visible(False)\nax3.spines['right'].set_visible(False)\nax3.spines['left'].set_visible(False)\n\nfig.show()","8c450c2f":"fig = plt.figure(figsize=(15,12))\ngs = fig.add_gridspec(2, 2)\ngs.update(wspace=0.3, hspace=0.4)\nfig.text(0.085,0.95,'Mobile Depth in cm and its effect of the price range ', fontfamily='serif',fontsize=15, fontweight='bold')\nsns.set_palette('Spectral')\n\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\nax2 = fig.add_subplot(gs[1,0],ylim=(0,2))\nax3 = fig.add_subplot(gs[1,1],ylim=(0,2))\n\n#Axis 0 \n\nax0.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(x='m_dep',\n            data=train,\n            shade=True,\n            ax=ax0,\n            linewidth = 0\n            )\nax0.yaxis.set_major_formatter(mtick.PercentFormatter(1, decimals=3))\nax0.set_xlabel(\"\")\nax0.set_ylabel(\"\")\nax0.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0,y=1.05)\nax0.spines['top'].set_visible(False)\nax0.spines['right'].set_visible(False)\nax0.spines['left'].set_visible(False)\n\n\n#Axis 1 \n\nax1.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(x='m_dep',\n           hue='price_range',\n           shade=True,\n           data=train,\n           palette='Spectral',\n           ax=ax1,\n           fill=True,\n           alpha=.3, \n           linewidth=0\n           \n           )\nax1.yaxis.set_major_formatter(mtick.PercentFormatter(1, decimals=3))\nax1.set_xlabel(\"\")\nax1.set_ylabel(\"\")\nax1.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1.05)\nax1.legend(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'],fontsize=6,frameon=False)\nax1.spines['top'].set_visible(False)\nax1.spines['right'].set_visible(False)\nax1.spines['left'].set_visible(False)\n\n#Axis 2\n\nax2.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.boxenplot(y='m_dep',\n              data=train,\n              ax=ax2,\n              zorder=3,\n              linewidth=0.4)\n\nax2.set_xlabel(\"\")\nax2.set_ylabel(\"\")\nax2.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0,y=1.15)\nax2.spines['top'].set_visible(False)\nax2.spines['right'].set_visible(False)\nax2.spines['left'].set_visible(False)\n\n#Axis3\n\nax3.grid(color='gray', linestyle='-', axis='y', zorder=0,  dashes=(1,5))\nsns.boxenplot(x='price_range',\n              y='m_dep',\n              data=train,\n              ax=ax3,\n              zorder=3,\n              linewidth=0.4\n           \n            )\n\nax3.set_xlabel(\"\")\nax3.set_ylabel(\"\")\nax3.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1.15)\nax3.set_xticklabels(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'])\nax3.spines['top'].set_visible(False)\nax3.spines['right'].set_visible(False)\nax3.spines['left'].set_visible(False)\n\nfig.show()","bddcb778":"fig = plt.figure(figsize=(15,12))\ngs = fig.add_gridspec(2, 2)\ngs.update(wspace=0.3, hspace=0.4)\nfig.text(0.085,0.95,'Mobile Phone Weight and its effect of the price range ', fontfamily='serif',fontsize=15, fontweight='bold')\nsns.set_palette('Spectral')\n\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\nax2 = fig.add_subplot(gs[1,0],ylim=(0,220))\nax3 = fig.add_subplot(gs[1,1],ylim=(0,220))\n\n#Axis 0 \n\nax0.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(x='mobile_wt',\n            data=train,\n            shade=True,\n            ax=ax0,\n            linewidth = 0\n            )\nax0.yaxis.set_major_formatter(mtick.PercentFormatter(1, decimals=3))\nax0.set_xlabel(\"\")\nax0.set_ylabel(\"\")\nax0.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0,y=1.05)\nax0.spines['top'].set_visible(False)\nax0.spines['right'].set_visible(False)\nax0.spines['left'].set_visible(False)\n\n\n#Axis 1 \n\nax1.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(x='mobile_wt',\n           hue='price_range',\n           shade=True,\n           data=train,\n           palette='Spectral',\n           ax=ax1,\n           fill=True,\n           alpha=.3, \n           linewidth=0\n           \n           )\nax1.yaxis.set_major_formatter(mtick.PercentFormatter(1, decimals=3))\nax1.set_xlabel(\"\")\nax1.set_ylabel(\"\")\nax1.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1.05)\nax1.legend(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'],fontsize=6,frameon=False)\nax1.spines['top'].set_visible(False)\nax1.spines['right'].set_visible(False)\nax1.spines['left'].set_visible(False)\n\n#Axis 2\n\nax2.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.boxenplot(y='mobile_wt',\n              data=train,\n              ax=ax2,\n              zorder=3,\n              linewidth=0.4)\n\nax2.set_xlabel(\"\")\nax2.set_ylabel(\"\")\nax2.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0,y=1.15)\nax2.spines['top'].set_visible(False)\nax2.spines['right'].set_visible(False)\nax2.spines['left'].set_visible(False)\n\n#Axis3\n\nax3.grid(color='gray', linestyle='-', axis='y', zorder=0,  dashes=(1,5))\nsns.boxenplot(x='price_range',\n              y='mobile_wt',\n              data=train,\n              ax=ax3,\n              zorder=3,\n              linewidth=0.4\n           \n            )\n\nax3.set_xlabel(\"\")\nax3.set_ylabel(\"\")\nax3.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1.15)\nax3.set_xticklabels(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'])\nax3.spines['top'].set_visible(False)\nax3.spines['right'].set_visible(False)\nax3.spines['left'].set_visible(False)\n\nfig.show()","4fcc8f76":"fig = plt.figure(figsize=(15,12))\ngs = fig.add_gridspec(2, 2)\ngs.update(wspace=0.3, hspace=0.4)\nfig.text(0.085,0.95,'Number of cores and its effect of the price range ', fontfamily='serif',fontsize=15, fontweight='bold')\nsns.set_palette('Spectral')\n\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\nax2 = fig.add_subplot(gs[1,0],ylim=(0,10))\nax3 = fig.add_subplot(gs[1,1],ylim=(0,10))\n\n#Axis 0 \n\nax0.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(x='n_cores',\n            data=train,\n            shade=True,\n            ax=ax0,\n            linewidth = 0\n            )\nax0.yaxis.set_major_formatter(mtick.PercentFormatter(1, decimals=3))\nax0.set_xlabel(\"\")\nax0.set_ylabel(\"\")\nax0.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0,y=1.05)\nax0.spines['top'].set_visible(False)\nax0.spines['right'].set_visible(False)\nax0.spines['left'].set_visible(False)\n\n\n#Axis 1 \n\nax1.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(x='n_cores',\n           hue='price_range',\n           shade=True,\n           data=train,\n           palette='Spectral',\n           ax=ax1,\n           fill=True,\n           alpha=.3, \n           linewidth=0\n           \n           )\nax1.yaxis.set_major_formatter(mtick.PercentFormatter(1, decimals=3))\nax1.set_xlabel(\"\")\nax1.set_ylabel(\"\")\nax1.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1.05)\nax1.legend(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'],fontsize=6,frameon=False)\nax1.spines['top'].set_visible(False)\nax1.spines['right'].set_visible(False)\nax1.spines['left'].set_visible(False)\n\n#Axis 2\n\nax2.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.boxenplot(y='n_cores',\n              data=train,\n              ax=ax2,\n              zorder=3,\n              linewidth=0.4)\n\nax2.set_xlabel(\"\")\nax2.set_ylabel(\"\")\nax2.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0,y=1.15)\nax2.spines['top'].set_visible(False)\nax2.spines['right'].set_visible(False)\nax2.spines['left'].set_visible(False)\n\n#Axis3\n\nax3.grid(color='gray', linestyle='-', axis='y', zorder=0,  dashes=(1,5))\nsns.boxenplot(x='price_range',\n              y='n_cores',\n              data=train,\n              ax=ax3,\n              zorder=3,\n              linewidth=0.4\n           \n            )\n\nax3.set_xlabel(\"\")\nax3.set_ylabel(\"\")\nax3.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1.15)\nax3.set_xticklabels(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'])\nax3.spines['top'].set_visible(False)\nax3.spines['right'].set_visible(False)\nax3.spines['left'].set_visible(False)\n\nfig.show()","cb064c47":"fig = plt.figure(figsize=(15,12))\ngs = fig.add_gridspec(2, 2)\ngs.update(wspace=0.3, hspace=0.4)\nfig.text(0.085,0.95,'Primary Camera mega pixels and its effect of the price range ', fontfamily='serif',fontsize=15, fontweight='bold')\nsns.set_palette('Spectral')\n\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\nax2 = fig.add_subplot(gs[1,0])\nax3 = fig.add_subplot(gs[1,1])\n\n#Axis 0 \n\nax0.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(x='pc',\n            data=train,\n            shade=True,\n            ax=ax0,\n            linewidth = 0\n            )\nax0.yaxis.set_major_formatter(mtick.PercentFormatter(1, decimals=3))\nax0.set_xlabel(\"\")\nax0.set_ylabel(\"\")\nax0.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0,y=1.05)\nax0.spines['top'].set_visible(False)\nax0.spines['right'].set_visible(False)\nax0.spines['left'].set_visible(False)\n\n\n#Axis 1 \n\nax1.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(x='pc',\n           hue='price_range',\n           shade=True,\n           data=train,\n           palette='Spectral',\n           ax=ax1,\n           fill=True,\n           alpha=.3, \n           linewidth=0\n           \n           )\nax1.yaxis.set_major_formatter(mtick.PercentFormatter(1, decimals=3))\nax1.set_xlabel(\"\")\nax1.set_ylabel(\"\")\nax1.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1.05)\nax1.legend(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'],fontsize=6,frameon=False)\nax1.spines['top'].set_visible(False)\nax1.spines['right'].set_visible(False)\nax1.spines['left'].set_visible(False)\n\n#Axis 2\n\nax2.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.boxenplot(y='pc',\n              data=train,\n              ax=ax2,\n              zorder=3,\n              linewidth=0.4)\n\nax2.set_xlabel(\"\")\nax2.set_ylabel(\"\")\nax2.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0,y=1.15)\nax2.spines['top'].set_visible(False)\nax2.spines['right'].set_visible(False)\nax2.spines['left'].set_visible(False)\n\n#Axis3\n\nax3.grid(color='gray', linestyle='-', axis='y', zorder=0,  dashes=(1,5))\nsns.boxenplot(x='price_range',\n              y='pc',\n              data=train,\n              ax=ax3,\n              zorder=3,\n              linewidth=0.4\n           \n            )\n\nax3.set_xlabel(\"\")\nax3.set_ylabel(\"\")\nax3.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1.15)\nax3.set_xticklabels(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'])\nax3.spines['top'].set_visible(False)\nax3.spines['right'].set_visible(False)\nax3.spines['left'].set_visible(False)\n\nfig.show()","7649fd7a":"fig = plt.figure(figsize=(15,12))\ngs = fig.add_gridspec(2, 2)\ngs.update(wspace=0.3, hspace=0.4)\nfig.text(0.085,0.95,'Pixel resolution height and its effect of the price range ', fontfamily='serif',fontsize=15, fontweight='bold')\nsns.set_palette('Spectral')\n\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\nax2 = fig.add_subplot(gs[1,0])\nax3 = fig.add_subplot(gs[1,1])\n\n#Axis 0 \n\nax0.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(x='px_height',\n            data=train,\n            shade=True,\n            ax=ax0,\n            linewidth = 0\n            )\nax0.yaxis.set_major_formatter(mtick.PercentFormatter(1, decimals=3))\nax0.set_xlabel(\"\")\nax0.set_ylabel(\"\")\nax0.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0,y=1.05)\nax0.spines['top'].set_visible(False)\nax0.spines['right'].set_visible(False)\nax0.spines['left'].set_visible(False)\n\n\n#Axis 1 \n\nax1.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(x='px_height',\n           hue='price_range',\n           shade=True,\n           data=train,\n           palette='Spectral',\n           ax=ax1,\n           fill=True,\n           alpha=.3, \n           linewidth=0\n           \n           )\nax1.yaxis.set_major_formatter(mtick.PercentFormatter(1, decimals=3))\nax1.set_xlabel(\"\")\nax1.set_ylabel(\"\")\nax1.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1.05)\nax1.legend(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'],fontsize=6,frameon=False)\nax1.spines['top'].set_visible(False)\nax1.spines['right'].set_visible(False)\nax1.spines['left'].set_visible(False)\n\n#Axis 2\n\nax2.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.boxenplot(y='px_height',\n              data=train,\n              ax=ax2,\n              zorder=3,\n              linewidth=0.4)\n\nax2.set_xlabel(\"\")\nax2.set_ylabel(\"\")\nax2.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0,y=1.15)\nax2.spines['top'].set_visible(False)\nax2.spines['right'].set_visible(False)\nax2.spines['left'].set_visible(False)\n\n#Axis3\n\nax3.grid(color='gray', linestyle='-', axis='y', zorder=0,  dashes=(1,5))\nsns.boxenplot(x='price_range',\n              y='px_height',\n              data=train,\n              ax=ax3,\n              zorder=3,\n              linewidth=0.4\n           \n            )\n\nax3.set_xlabel(\"\")\nax3.set_ylabel(\"\")\nax3.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1.15)\nax3.set_xticklabels(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'])\nax3.spines['top'].set_visible(False)\nax3.spines['right'].set_visible(False)\nax3.spines['left'].set_visible(False)\n\nfig.show()","9ccd1ea0":"fig = plt.figure(figsize=(15,12))\ngs = fig.add_gridspec(2, 2)\ngs.update(wspace=0.3, hspace=0.4)\nfig.text(0.085,0.95,'Pixel Resolution Width and its effect of the price range ', fontfamily='serif',fontsize=15, fontweight='bold')\nsns.set_palette('Spectral')\n\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\nax2 = fig.add_subplot(gs[1,0])\nax3 = fig.add_subplot(gs[1,1])\n\n#Axis 0 \n\nax0.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(x='px_width',\n            data=train,\n            shade=True,\n            ax=ax0,\n            linewidth = 0\n            )\nax0.yaxis.set_major_formatter(mtick.PercentFormatter(1, decimals=3))\nax0.set_xlabel(\"\")\nax0.set_ylabel(\"\")\nax0.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0,y=1.05)\nax0.spines['top'].set_visible(False)\nax0.spines['right'].set_visible(False)\nax0.spines['left'].set_visible(False)\n\n\n#Axis 1 \n\nax1.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(x='px_width',\n           hue='price_range',\n           shade=True,\n           data=train,\n           palette='Spectral',\n           ax=ax1,\n           fill=True,\n           alpha=.3, \n           linewidth=0\n           \n           )\nax1.yaxis.set_major_formatter(mtick.PercentFormatter(1, decimals=3))\nax1.set_xlabel(\"\")\nax1.set_ylabel(\"\")\nax1.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1.05)\nax1.legend(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'],fontsize=6,frameon=False)\nax1.spines['top'].set_visible(False)\nax1.spines['right'].set_visible(False)\nax1.spines['left'].set_visible(False)\n\n#Axis 2\n\nax2.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.boxenplot(y='px_width',\n              data=train,\n              ax=ax2,\n              zorder=3,\n              linewidth=0.4)\n\nax2.set_xlabel(\"\")\nax2.set_ylabel(\"\")\nax2.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0,y=1.15)\nax2.spines['top'].set_visible(False)\nax2.spines['right'].set_visible(False)\nax2.spines['left'].set_visible(False)\n\n#Axis3\n\nax3.grid(color='gray', linestyle='-', axis='y', zorder=0,  dashes=(1,5))\nsns.boxenplot(x='price_range',\n              y='px_width',\n              data=train,\n              ax=ax3,\n              zorder=3,\n              linewidth=0.4\n           \n            )\n\nax3.set_xlabel(\"\")\nax3.set_ylabel(\"\")\nax3.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1.15)\nax3.set_xticklabels(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'])\nax3.spines['top'].set_visible(False)\nax3.spines['right'].set_visible(False)\nax3.spines['left'].set_visible(False)\n\nfig.show()","a280b534":"fig = plt.figure(figsize=(15,12))\ngs = fig.add_gridspec(2, 2)\ngs.update(wspace=0.3, hspace=0.4)\nfig.text(0.085,0.95,'Random Access Memory(RAM) and its effect of the price range ', fontfamily='serif',fontsize=15, fontweight='bold')\nsns.set_palette('Spectral')\n\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\nax2 = fig.add_subplot(gs[1,0])\nax3 = fig.add_subplot(gs[1,1])\n\n#Axis 0 \n\nax0.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(x='ram',\n            data=train,\n            shade=True,\n            ax=ax0,\n            linewidth = 0\n            )\nax0.yaxis.set_major_formatter(mtick.PercentFormatter(1, decimals=3))\nax0.set_xlabel(\"\")\nax0.set_ylabel(\"\")\nax0.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0,y=1.05)\nax0.spines['top'].set_visible(False)\nax0.spines['right'].set_visible(False)\nax0.spines['left'].set_visible(False)\n\n\n#Axis 1 \n\nax1.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(x='ram',\n           hue='price_range',\n           shade=True,\n           data=train,\n           palette='Spectral',\n           ax=ax1,\n           fill=True,\n           alpha=.3, \n           linewidth=0\n           \n           )\nax1.yaxis.set_major_formatter(mtick.PercentFormatter(1, decimals=3))\nax1.set_xlabel(\"\")\nax1.set_ylabel(\"\")\nax1.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1.05)\nax1.legend(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'],fontsize=6,frameon=False)\nax1.spines['top'].set_visible(False)\nax1.spines['right'].set_visible(False)\nax1.spines['left'].set_visible(False)\n\n#Axis 2\n\nax2.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.boxenplot(y='ram',\n              data=train,\n              ax=ax2,\n              zorder=3,\n              linewidth=0.4)\n\nax2.set_xlabel(\"\")\nax2.set_ylabel(\"\")\nax2.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0,y=1.15)\nax2.spines['top'].set_visible(False)\nax2.spines['right'].set_visible(False)\nax2.spines['left'].set_visible(False)\n\n#Axis3\n\nax3.grid(color='gray', linestyle='-', axis='y', zorder=0,  dashes=(1,5))\nsns.boxenplot(x='price_range',\n              y='ram',\n              data=train,\n              ax=ax3,\n              zorder=3,\n              linewidth=0.4\n           \n            )\n\nax3.set_xlabel(\"\")\nax3.set_ylabel(\"\")\nax3.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1.15)\nax3.set_xticklabels(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'])\nax3.spines['top'].set_visible(False)\nax3.spines['right'].set_visible(False)\nax3.spines['left'].set_visible(False)\n\nfig.show()","97cca0ee":"fig = plt.figure(figsize=(15,12))\ngs = fig.add_gridspec(2, 2)\ngs.update(wspace=0.3, hspace=0.4)\nfig.text(0.085,0.95,'Screen Height of mobile and its effect of the price range ', fontfamily='serif',fontsize=15, fontweight='bold')\nsns.set_palette('Spectral')\n\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\nax2 = fig.add_subplot(gs[1,0])\nax3 = fig.add_subplot(gs[1,1])\n\n#Axis 0 \n\nax0.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(x='sc_h',\n            data=train,\n            shade=True,\n            ax=ax0,\n            linewidth = 0\n            )\nax0.yaxis.set_major_formatter(mtick.PercentFormatter(1, decimals=3))\nax0.set_xlabel(\"\")\nax0.set_ylabel(\"\")\nax0.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0,y=1.05)\nax0.spines['top'].set_visible(False)\nax0.spines['right'].set_visible(False)\nax0.spines['left'].set_visible(False)\n\n\n#Axis 1 \n\nax1.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(x='sc_h',\n           hue='price_range',\n           shade=True,\n           data=train,\n           palette='Spectral',\n           ax=ax1,\n           fill=True,\n           alpha=.3, \n           linewidth=0\n           \n           )\nax1.yaxis.set_major_formatter(mtick.PercentFormatter(1, decimals=3))\nax1.set_xlabel(\"\")\nax1.set_ylabel(\"\")\nax1.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1.05)\nax1.legend(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'],fontsize=6,frameon=False)\nax1.spines['top'].set_visible(False)\nax1.spines['right'].set_visible(False)\nax1.spines['left'].set_visible(False)\n\n#Axis 2\n\nax2.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.boxenplot(y='sc_h',\n              data=train,\n              ax=ax2,\n              zorder=3,\n              linewidth=0.4)\n\nax2.set_xlabel(\"\")\nax2.set_ylabel(\"\")\nax2.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0,y=1.15)\nax2.spines['top'].set_visible(False)\nax2.spines['right'].set_visible(False)\nax2.spines['left'].set_visible(False)\n\n#Axis3\n\nax3.grid(color='gray', linestyle='-', axis='y', zorder=0,  dashes=(1,5))\nsns.boxenplot(x='price_range',\n              y='sc_h',\n              data=train,\n              ax=ax3,\n              zorder=3,\n              linewidth=0.4\n           \n            )\n\nax3.set_xlabel(\"\")\nax3.set_ylabel(\"\")\nax3.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1.15)\nax3.set_xticklabels(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'])\nax3.spines['top'].set_visible(False)\nax3.spines['right'].set_visible(False)\nax3.spines['left'].set_visible(False)\n\nfig.show()","82c3f5e8":"fig = plt.figure(figsize=(15,12))\ngs = fig.add_gridspec(2, 2)\ngs.update(wspace=0.3, hspace=0.4)\nfig.text(0.085,0.95,'Screen Width of mobile and its effect of the price range ', fontfamily='serif',fontsize=15, fontweight='bold')\nsns.set_palette('Spectral')\n\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\nax2 = fig.add_subplot(gs[1,0])\nax3 = fig.add_subplot(gs[1,1])\n\n#Axis 0 \n\nax0.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(x='sc_w',\n            data=train,\n            shade=True,\n            ax=ax0,\n            linewidth = 0\n            )\nax0.yaxis.set_major_formatter(mtick.PercentFormatter(1, decimals=3))\nax0.set_xlabel(\"\")\nax0.set_ylabel(\"\")\nax0.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0,y=1.05)\nax0.spines['top'].set_visible(False)\nax0.spines['right'].set_visible(False)\nax0.spines['left'].set_visible(False)\n\n\n#Axis 1 \n\nax1.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(x='sc_w',\n           hue='price_range',\n           shade=True,\n           data=train,\n           palette='Spectral',\n           ax=ax1,\n           fill=True,\n           alpha=.3, \n           linewidth=0\n           \n           )\nax1.yaxis.set_major_formatter(mtick.PercentFormatter(1, decimals=3))\nax1.set_xlabel(\"\")\nax1.set_ylabel(\"\")\nax1.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1.05)\nax1.legend(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'],fontsize=6,frameon=False)\nax1.spines['top'].set_visible(False)\nax1.spines['right'].set_visible(False)\nax1.spines['left'].set_visible(False)\n\n#Axis 2\n\nax2.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.boxenplot(y='sc_w',\n              data=train,\n              ax=ax2,\n              zorder=3,\n              linewidth=0.4)\n\nax2.set_xlabel(\"\")\nax2.set_ylabel(\"\")\nax2.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0,y=1.15)\nax2.spines['top'].set_visible(False)\nax2.spines['right'].set_visible(False)\nax2.spines['left'].set_visible(False)\n\n#Axis3\n\nax3.grid(color='gray', linestyle='-', axis='y', zorder=0,  dashes=(1,5))\nsns.boxenplot(x='price_range',\n              y='sc_w',\n              data=train,\n              ax=ax3,\n              zorder=3,\n              linewidth=0.4\n           \n            )\n\nax3.set_xlabel(\"\")\nax3.set_ylabel(\"\")\nax3.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1.15)\nax3.set_xticklabels(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'])\nax3.spines['top'].set_visible(False)\nax3.spines['right'].set_visible(False)\nax3.spines['left'].set_visible(False)\n\nfig.show()","cf37a380":"fig = plt.figure(figsize=(15,12))\ngs = fig.add_gridspec(2, 2)\ngs.update(wspace=0.3, hspace=0.4)\nfig.text(0.085,0.95,'Longest time that a single battery charge will last and its effect of the price range ', fontfamily='serif',fontsize=15, fontweight='bold')\nsns.set_palette('Spectral')\n\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\nax2 = fig.add_subplot(gs[1,0])\nax3 = fig.add_subplot(gs[1,1])\n\n#Axis 0 \n\nax0.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(x='talk_time',\n            data=train,\n            shade=True,\n            ax=ax0,\n            linewidth = 0\n            )\nax0.yaxis.set_major_formatter(mtick.PercentFormatter(1, decimals=3))\nax0.set_xlabel(\"\")\nax0.set_ylabel(\"\")\nax0.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0,y=1.05)\nax0.spines['top'].set_visible(False)\nax0.spines['right'].set_visible(False)\nax0.spines['left'].set_visible(False)\n\n\n#Axis 1 \n\nax1.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.kdeplot(x='talk_time',\n           hue='price_range',\n           shade=True,\n           data=train,\n           palette='Spectral',\n           ax=ax1,\n           fill=True,\n           alpha=.3, \n           linewidth=0\n           \n           )\nax1.yaxis.set_major_formatter(mtick.PercentFormatter(1, decimals=3))\nax1.set_xlabel(\"\")\nax1.set_ylabel(\"\")\nax1.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1.05)\nax1.legend(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'],fontsize=6,frameon=False)\nax1.spines['top'].set_visible(False)\nax1.spines['right'].set_visible(False)\nax1.spines['left'].set_visible(False)\n\n#Axis 2\n\nax2.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nsns.boxenplot(y='talk_time',\n              data=train,\n              ax=ax2,\n              zorder=3,\n              linewidth=0.4)\n\nax2.set_xlabel(\"\")\nax2.set_ylabel(\"\")\nax2.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0,y=1.15)\nax2.spines['top'].set_visible(False)\nax2.spines['right'].set_visible(False)\nax2.spines['left'].set_visible(False)\n\n#Axis3\n\nax3.grid(color='gray', linestyle='-', axis='y', zorder=0,  dashes=(1,5))\nsns.boxenplot(x='price_range',\n              y='talk_time',\n              data=train,\n              ax=ax3,\n              zorder=3,\n              linewidth=0.4\n           \n            )\n\nax3.set_xlabel(\"\")\nax3.set_ylabel(\"\")\nax3.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1.15)\nax3.set_xticklabels(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'])\nax3.spines['top'].set_visible(False)\nax3.spines['right'].set_visible(False)\nax3.spines['left'].set_visible(False)\n\nfig.show()","9c9f55b0":"fig = plt.figure(figsize=(15,4))\ngs = fig.add_gridspec(1, 2)\ngs.update(wspace=0.3, hspace=0)\nfig.text(0.120,1.1,'3G and its effect on the price ', fontfamily='serif',fontsize=15, fontweight='bold')\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\n\n\nsns.countplot(x='three_g',\n           data=train,\n            palette='bone',\n           ax=ax0)\nax0.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nax0.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1)\nax0.spines['top'].set_visible(False)\nax0.spines['right'].set_visible(False)\nax0.spines['left'].set_visible(False)\nax0.set_xticklabels([\"Doesnt Support\",\"Support\"])\nax0.set_xlabel(\"\")\nax0.set_ylabel(\"\")   \n\nsns.countplot(x='three_g',\n             data=train,\n             hue='price_range',\n             ax=ax1)\nax1.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nax1.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.25,y=1)\nax1.spines['top'].set_visible(False)\nax1.spines['right'].set_visible(False)\nax1.spines['left'].set_visible(False)\nax1.get_legend().remove()\nlegend_labels, _= ax1.get_legend_handles_labels()\nax1.legend(legend_labels, ['Low Cost ', 'Medium Cost','High Cost','Very High Cost'], ncol=4, bbox_to_anchor=(-0.30, 1.22))\nax1.set_xticklabels([\"Doesnt Support\",\"Support\"])\nax1.set_xlabel(\"\")\nax1.set_ylabel(\"\")\n\nfig.show()","8eb772e9":"fig = plt.figure(figsize=(15,4))\ngs = fig.add_gridspec(1, 2)\ngs.update(wspace=0.3, hspace=0)\nfig.text(0.120,1.1,'Touch Screen and its effect on the price ', fontfamily='serif',fontsize=15, fontweight='bold')\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\n\n\nsns.countplot(x='touch_screen',\n           data=train,\n            palette='bone',\n           ax=ax0)\nax0.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nax0.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1)\nax0.spines['top'].set_visible(False)\nax0.spines['right'].set_visible(False)\nax0.spines['left'].set_visible(False)\nax0.set_xticklabels([\"Doesnt Support\",\"Support\"])\nax0.set_xlabel(\"\")\nax0.set_ylabel(\"\")   \n\nsns.countplot(x='touch_screen',\n             data=train,\n             hue='price_range',\n             ax=ax1)\nax1.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nax1.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.25,y=1)\nax1.spines['top'].set_visible(False)\nax1.spines['right'].set_visible(False)\nax1.spines['left'].set_visible(False)\nax1.get_legend().remove()\nlegend_labels, _= ax1.get_legend_handles_labels()\nax1.legend(legend_labels, ['Low Cost ', 'Medium Cost','High Cost','Very High Cost'], ncol=4, bbox_to_anchor=(-0.30, 1.22))\nax1.set_xticklabels([\"Doesnt Support\",\"Support\"])\nax1.set_xlabel(\"\")\nax1.set_ylabel(\"\")\n\nfig.show()","cc6b3904":"fig = plt.figure(figsize=(15,4))\ngs = fig.add_gridspec(1, 2)\ngs.update(wspace=0.3, hspace=0)\nfig.text(0.120,1.1,'Wi-fi and its effect on the price ', fontfamily='serif',fontsize=15, fontweight='bold')\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\n\n\nsns.countplot(x='wifi',\n           data=train,\n            palette='bone',\n           ax=ax0)\nax0.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nax0.set_title('Distribution',fontsize=12,fontfamily='serif',fontweight='bold',x=0.1,y=1)\nax0.spines['top'].set_visible(False)\nax0.spines['right'].set_visible(False)\nax0.spines['left'].set_visible(False)\nax0.set_xticklabels([\"Doesnt Support\",\"Support\"])\nax0.set_xlabel(\"\")\nax0.set_ylabel(\"\")   \n\nsns.countplot(x='wifi',\n             data=train,\n             hue='price_range',\n             ax=ax1)\nax1.grid(color='gray', linestyle=':', axis='y', zorder=0,  dashes=(1,5))\nax1.set_title('Distribution by Price Range',fontsize=12,fontfamily='serif',fontweight='bold',x=0.25,y=1)\nax1.spines['top'].set_visible(False)\nax1.spines['right'].set_visible(False)\nax1.spines['left'].set_visible(False)\nax1.get_legend().remove()\nlegend_labels, _= ax1.get_legend_handles_labels()\nax1.legend(legend_labels, ['Low Cost ', 'Medium Cost','High Cost','Very High Cost'], ncol=4, bbox_to_anchor=(-0.30, 1.22))\nax1.set_xticklabels([\"Doesnt Support\",\"Support\"])\nax1.set_xlabel(\"\")\nax1.set_ylabel(\"\")\n\nfig.show()","bc87f163":"train_numerical=['battery_power','clock_speed','fc','int_memory','m_dep','mobile_wt','n_cores','pc','px_height','px_width','ram','sc_h','sc_w','talk_time']","dfed2c67":"X = train.drop('price_range', axis=1)\ny = train['price_range']","625f5899":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nX[train_numerical] = scaler.fit_transform(X[train_numerical])","1d585e57":"X_train, X_test, y_train, y_test = train_test_split(X, y , shuffle =True,test_size=0.25,random_state=42)","97632fda":"LReg = LogisticRegression(random_state = 42)\n\nLReg.fit(X_train,y_train)\n\npredLReg = LReg.predict(X_test)\n\nreportLReg = classification_report(y_test, predLReg, output_dict = True)\n\ncrLReg = pd.DataFrame(reportLReg).transpose()\n\ncrLReg","a97d80f4":"GNB = GaussianNB()\n\nGNB.fit(X_train,y_train)\n\npredGNB = GNB.predict(X_test)\n\nreportGNB = classification_report(y_test, predGNB, output_dict = True)\n\ncrGNB = pd.DataFrame(reportGNB).transpose()\n\ncrGNB\n","f2a69850":"DTC = DecisionTreeClassifier(random_state = 42)\n\nDTC.fit(X_train,y_train)\n\npredDTC = DTC.predict(X_test)\n\nreportDTC = classification_report(y_test,predDTC, output_dict = True)\n\ncrDTC = pd.DataFrame(reportDTC).transpose()\n\ncrDTC","98418bc3":"KNN = KNeighborsClassifier()\n\nKNN.fit(X_train,y_train)\n\npredKNN = KNN.predict(X_test)\n\nreportKNN = classification_report(y_test,predKNN, output_dict = True)\n\ncrKNN = pd.DataFrame(reportKNN).transpose()\n\ncrKNN\n","b55c8f34":"RFC = RandomForestClassifier(random_state=42)\n\nRFC.fit(X_train,y_train)\n\npredRFC = RFC.predict(X_test)\n\nreportRFC = classification_report(y_test,predRFC,output_dict = True)\n\ncrRFC = pd.DataFrame(reportRFC).transpose()\n\ncrRFC\n","01ccdb32":"SVM = SVC(random_state = 42)\n\nSVM.fit(X_train,y_train)\n\npredSVM = SVM.predict(X_test)\n\nreportSVM = classification_report(y_test,predSVM,output_dict = True)\n\ncrSVM = pd.DataFrame(reportSVM).transpose()\n\ncrSVM","503ec62d":"fig = plt.figure(figsize=(15,12))\ngs = fig.add_gridspec(2, 3)\ngs.update(wspace=0.6, hspace=0.6)\nfig.text(0.085,0.95,'Confusion Matrix for the Models', fontfamily='serif',fontsize=15, fontweight='bold')\n\n\nax0 = fig.add_subplot(gs[0, 0])\nax1 = fig.add_subplot(gs[0, 1])\nax2 = fig.add_subplot(gs[0,2])\nax3 = fig.add_subplot(gs[1,0])\nax4 = fig.add_subplot(gs[1,1])\nax5 = fig.add_subplot(gs[1,2])\n#logistic reg\ncmLReg = confusion_matrix(y_test, predLReg)\nsns.heatmap(cmLReg, annot=True,ax=ax0,fmt='d',cmap='Blues')\nax0.set_xlabel('Predicted labels')\nax0.set_ylabel('True labels') \nax0.set_title('Logistic Regression',fontsize=10,fontfamily='serif',fontweight='bold')\nax0.xaxis.set_ticklabels(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'],rotation='vertical') \nax0.yaxis.set_ticklabels(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'],rotation='horizontal')\n#Naive Bayes\ncmGNB = confusion_matrix(y_test, predGNB)\nsns.heatmap(cmGNB, annot=True,ax=ax1,fmt='d',cmap='Blues')\nax1.set_xlabel('Predicted labels')\nax1.set_ylabel('True labels') \nax1.set_title('Naive Bayes',fontsize=10,fontfamily='serif',fontweight='bold')\nax1.xaxis.set_ticklabels(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'],rotation='vertical') \nax1.yaxis.set_ticklabels(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'],rotation='horizontal')\n#Decision Tree Classifier\ncmDTC = confusion_matrix(y_test, predDTC)\nsns.heatmap(cmDTC, annot=True,ax=ax2,fmt='d',cmap='Blues')\nax2.set_xlabel('Predicted labels')\nax2.set_ylabel('True labels') \nax2.set_title('DecisionTreeClassifier',fontsize=10,fontfamily='serif',fontweight='bold')\nax2.xaxis.set_ticklabels(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'],rotation='vertical') \nax2.yaxis.set_ticklabels(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'],rotation='horizontal')\n#KNN\ncmKNN = confusion_matrix(y_test, predKNN)\nsns.heatmap(cmKNN, annot=True,ax=ax3,fmt='d',cmap='Blues')\nax3.set_xlabel('Predicted labels')\nax3.set_ylabel('True labels') \nax3.set_title('KNN',fontsize=10,fontfamily='serif',fontweight='bold')\nax3.xaxis.set_ticklabels(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'],rotation='vertical') \nax3.yaxis.set_ticklabels(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'],rotation='horizontal')\n#RFC\ncmRFC = confusion_matrix(y_test, predRFC)\nsns.heatmap(cmRFC, annot=True,ax=ax4,fmt='d',cmap='Blues')\nax4.set_xlabel('Predicted labels')\nax4.set_ylabel('True labels') \nax4.set_title('Random Forest Classifier',fontsize=10,fontfamily='serif',fontweight='bold')\nax4.xaxis.set_ticklabels(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'],rotation='vertical') \nax4.yaxis.set_ticklabels(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'],rotation='horizontal')\n#SVM\ncmRFC = confusion_matrix(y_test, predRFC)\nsns.heatmap(cmRFC, annot=True,ax=ax5,fmt='d',cmap='Blues')\nax5.set_xlabel('Predicted labels')\nax5.set_ylabel('True labels') \nax5.set_title('Support Machine Vector',fontsize=10,fontfamily='serif',fontweight='bold')\nax5.xaxis.set_ticklabels(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'],rotation='vertical') \nax5.yaxis.set_ticklabels(['Low Cost ', 'Medium Cost','High Cost','Very High Cost'],rotation='horizontal')\n\nfig.show()\n","964e2c90":"<a id=\"WP\"><\/a>\n## Weight of the Phone","fc30447d":"![](data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAoHCBQUFBgVFRUYGRgYGBsYGRobGxobGRgaGxgZGhobGhkbIi0kGx0pIBkYJTgmKy4wNDQ0GiM5Pzk0Pi02NDABCwsLEA8QGhESGDIgICMyMjIyMDIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMDIyMjIyMjIyMjAyMjIyMjIyMDIyMP\/AABEIAKgBLAMBIgACEQEDEQH\/xAAcAAABBQEBAQAAAAAAAAAAAAAAAgMEBQYHAQj\/xABDEAACAQIEAwYDAwkIAgIDAAABAhEAAwQSITEFQVEGEyJhcYEykaFCUrEHFCNicpLB0fAVM0OCorLC4VPxk6Mk0uL\/xAAWAQEBAQAAAAAAAAAAAAAAAAAAAQL\/xAAfEQEBAQACAgIDAAAAAAAAAAAAAREhUQISMUFhcYH\/2gAMAwEAAhEDEQA\/AOzUUUUBRRRQFFFFAUUUUBRRRQFFFFAUUUUBRRWf452rw2DuJbvsyl1LBspKjXKAY1knTQGg0FFVuF4xauf3bB43CspI\/aEyvvTpxv6p+dBNoqu\/tBv\/ABx6t\/IGvfz5vuj50FhRVTcxN6fCyAdCjN9Q4r1eI3B8dqfNGB9yHyx6AtQWtFV68Ws7M+QkwBcBtknoucDN7TU8Gg9ooooCiiigKKKKAooooCiiigKKKKAooooCiiigKKKKAoqt4txW1hbee40clUasx6KP6ArF4rtJcv63O+s220tpaQ57xmCO9Ommm33udB0M3ANCQD61DbilkKHDhlJgFAXzHouUHMfSudW7dxkfDC3c758xKM6IiK0shZ1hrzZSIzHltpFJxD95bS\/3QKIwk3LjG7eJlCqMNFUEklRHwzUG6xXaSwjZCdRqxLIAg0+OWkTO0E+VeWOLXrhOSyFtgaPcLLm6lbZVWyjqYrEcO4vZDlrltbb6qjoqi3bSNMoElWBLHNBOu5+GpHaHiqXpS3jrKWyB4WDzsJDZVJYdAfed6Cyx3a+4bndYZRdudQItjlPM5d\/FOsaA14eHcSu63ceyT9izbVAvkHJzH1Iql4TxTBYX4cVbM6sYuFmPMlu61P8AW1WVzttheV9P3Lp\/4CnKvcRwG3bQviMXjHA3zXtCTyUKASTWZa+iMTaVlUx8dx3aP2nJg+QgGneJcUw99s744noosGFHlNwVC7zBjfEXT6WU\/jeqxD44jcGx\/wBbdfTpVjwzEXr2bMyrbQS7uSyIPMEDMSIhRvPIa1Q3eJYBPifEv5KltJ8pLPFV3Gu1JuItu2gs2EMpbBnX79xjq7+Z\/wC6C\/47xSzcM2FCFIytoGdQZd3UCAYBI0EAH2hDtvjLTwlwOgA0uDOGMSTmzZvLRgNNqruB4e6pN0yHYQiGdtGLOPOB7Dzqp4otzMWKrr0UKPkIqK6Pw78pls6X7LJ+tbIceuVspA9Ca1PDe02DvwLd9CTsrHI\/7rwT7V89viuqkUgYgUH0\/FECvnPh3afFYf8Au7rovJQ3g\/cIK\/StRgvyo4oR3iW3iJlDmI56qyifammOzBNPI\/Woo4ZaGqAod\/0bNb16lUIDe4Nc9H5UlGUG0Q7QAoTN4iB8MXASNdDAJ6Co2M\/KQ9wAC35yjG2SP32NNMdOVcQnw3g46XEUn0DW8kepVqUOJXV+PDsf1rTrcA9Q+R\/YKa5Fge3V8N+jt34PhzNczpvvNxCojrIrd8M4lcvW1Y3MQSRLZFTINTAzJaMGI+dBpLfH8MSFNwIx2S6GtMfRbgUn2q0BrnfH8SlzDXbfeuHYBUD3bhUywnMioIGWTsaXg+2lvD2UthGcooUszZQY6aExTTHQaKwln8oiEw1k\/wCVwfoQK0WA7RWL4\/ROGaJ7skK58grwD7GPOmpi6oqsbiJ2CHN90nKTy0zATrH8Jrxsa5ICp1mQw6RlJgbnmRtoDVFpRVOcZdk6LEbbNJkCOR2OunvSrfEDMErM5SpInNExpzI1joaC2opmzfDeR6U9QFFFFAUUUUBRRXhoOC9r+O4hsZeW4oJS46IJICorEKAPMQZ5zNVmI7UYtyrFhKfDrETodFAGo0PXnNb38o3ZzvLy3VGUtGZ48OgC5THPRSPVvKsVe7Msu91R\/lP86sszlLqsfj+KZmi42Z9GjMWfyPNvQ146Y07ggnWC9tSR+yWnl9KmYTB27FwOcRbLQQoJUQTpIlt4ke9aPC8GxN8C4losCNHKgAjfQsYIqXyz4WTtz\/GveQxczqTtm0B9Dsfaoy3C20n611G52WxawTaBk5VHeWp65VVnAnTYdPKq3HWcTYE3MLiQOoTMo9WtlgKexjBixcO1tz6Ix\/AU4mAvn\/Cf3Ur\/ALoq9PaVDss\/5v5LUd+0ZOyj5Mf+Qq+16MiAnCsQf8OPVk\/\/AGqanBr\/AN5F9WP8FpDcbuHbT0Vf+Waot7jVzZSfMyo\/2qKm0yLE8ELRnuiByC6+xJ0+VWmCt27AIUGYkk6uwUTyGwiYAA0mqFbWLuNbQGXuglVLvmCj7byYVIBMnkpPKpnFbaW7BVWDIsHvI8V+5BhxOq2gA4Rd2ks32RWbrUxcYHtULQYLbZi+jMVO0yF8QBA5mBqY10EQ8dir1yWW2FBO0nw+2\/1NZixxKBIg9Z0P4kVq8P2pwb2u7v4RQcoXvEVg8gQHOVoLc9oNWYl1m8RhnYyz6\/1zOtRX4eRAzmSQB5k7b1sLd3h6gMtu9cPRmCL7BMxI9TXo473c9zat2tIkKMxHRi8k\/KmxZ41lh2dxUAi25zarCGG9CN6XhOFX1bxIIB1DeH8SKtMXx+40hrhPVVkj5aD6VWJxHvHVSxAJ1JbUDn4R\/Gi5i0wnDJufESx0ZbZObIRDCY0BEifM661pH7PcOUanEM0bLcUD3LBqrMPjrarltgKvQc\/MnmaWMUrMCwldZHXaD0PPQ9fKohbcOwYbwWSSPvOzn1OQCrKxZvsuW3byIekIp89Pi99aZbGWhohbLGxWPaFkU9he0Ny0T3WgPJoK+w1I+YqCfhey11\/jY+g0n3Ovyr3GcNs4VlY3LZIMlHIbNH2Wy+L51T43jl+5PeXXIO6r4F+S1VtilXaB\/H1NFajH8csXLZQYNFYiA8gZT1jICfr71n84Hzn09DVddx3nUK7j\/OtI3\/Ce2ty2O7vM729pBHer0ys2\/ofnyOy4fxG3iEzrdlQWaYyuhUKD4YMDxiZLA5tgNBwjPcbYV0\/8leFz2rzOQVzJB10ZQ5Yqw1GjCY60Rr7tq3JW405REwfCsFjmLFsynbxSspoJFNXMpJWGNwSAScrn4mCkrErvH2fxq2SxZMLKNEkDwkySSTrJkkkk7mafcIsZiBJESdySBoPUj50RVYa6x0yFI2+ICAYHxAax0kab6ibnDXSw1BBH1868suhUOsZWUMDyKkSDPSKVafNJG2kGQQwiZEctaoeooooCiiig8qn45x63hl8Wrt8NsfE3LXoPP5TVf2k7UizNuyO8u7GNVT9qN28vnXPLjX3drjrcLtPiIOuhBJPSOXTTSpasjztRdxeMOt9kyliUV2W3BgQQhjTYEydY1msonYy7cYBSgkwPjYljrvEsxg6DkDpoTWvwuFd2VB4ix0CsknKBJMSEAB1YiBPMkKbzh3H8FhiQM9xwMpuIhyDbMtudcsgSd2gEkwIkpY97H\/k+sYQC5dUPd38QBC+23sJHm2hG6Zo6n0rLp25wh3zr6oanYftTgn2vID+t4fxqauLi1bM5juRBAMqB0GgnrJE607EU3hsRbcSjKw6ggj6VlO0vFzfuNg7D5UUf\/k3Rsic0B5sdo5nTbNGoio4lhMNjsRdusiiyi92LigB7lz7yt5SD5hUnfTMWvyfXT4u9s5ZMMSROp1iNPSr7H8RtomVBktW1IUeQ1JPViZPmTWJtccusXdbhWXJCKqFgIAkOyMdAAIneTGtJaWRd3+yttAE78FvtFANP807+2nrTuA7KWUhlRmywZbVN920iPXSqzAcWuZgTicUY1y96QP3VUCrTi3FhfdLlxCSilRJgETOygL7laW0mGuL4i2juix4\/75+d9gAwsow17pQFzEaMVCjwrNYXjfES7Fd+vltoI22j00rQcavAvlTKXYAKBr3YI1n7og7bmekzKu9gk\/Nxee4LckCWJJYn7qiSx3095ipFrAo8VKtMTsY+daS32fwgEHv3P3g6W5\/yd28fvGvX7O4Yxku3k8mS3dH7wZCP3TVIrVvHIoLBYncgCJn+NRb99OdxZ\/VDN+OlWV7sxdP93fw7xsCzWz87qqg\/eqK\/ZvGrqbDuPvWwLq\/vWswFTF9lZcVSJa4Y6QT9Nh869sYcwzDaCImSRz20Bir7g\/AnvOFKGZMCDIjc5T\/W1Ql7QX7Nx+4cKpMAZbbrA00zqfnz3qxmouGxTW\/Mf1vV1hsar84NZg4huZ1+X4ULfg7fLQ\/y+lDWvLxzpLYqOdZh8UxHxMPYfiCPwpn84P3z8v8AumGtM+N6GmXvNuYA8zVEuMI5n6D+dNviCT\/RPzOo9qYauHvoNSS3poP3jANeJivuqBrGxY\/MwBz61RySdT7mf\/daPg7YK2Ju3mc81RGA\/eYa\/KiJnCuH3L9wIFLk7CZHnIgKAOuwrrfDeGPasraUxBksCCCx3IBiOQBiYArG8K7W4O2Mlo27YOhLLdJP7RySfnArV4LiNm4AzY5FB+7CfVwTVF1w7Cvbtrba4XgGXdjcdpJaWMLrr10gV5i+JWCVFy6XddAqDMZlTqqAsDKqZJG1GHt8Pb4sRaueT3g4\/dZo+lX2DWwBFopHRCsf6aDPpevOFFnB5FEBXvEeEDQBVkkCNtfatNhLWVdgCdWiNWO503M0+B5UqgKKKKAoorw0HNOM9lFOKusbhUXGzxmYBpJ1hSASCYPPQVWY\/s9hbCgkG47sES2Jl3PKWYwNRJ5SOtdA7S20No94VCiTLKGjTxEAjkJrmnZ\/DnFtde0RZCoEtDLOS3cZ8xABEOQplurt1qZOl2nETNOFs5ddL9xBCmD\/AHVvpbUk+bGSdSa0+F4bbtoFCDTqKTwrgZsoFUqepk6\/MVObD3Pu\/Ig\/gaQqFd4daP8Ahr8qgYjgtg\/ZirK+Lg\/w3\/dMfhVDiOI3LlzuMMM907sPgtgbsTtI68vNtBURTYFm73WFk4hgRmmFsqR4mYj7Ucz8I\/WIhVy4ltBZtGVBl32Nx+bHoOQHIeckl4Jh0Nq02Z2\/vbnNz90dFB5e51rM8b4jkHdofGw1I+wD\/wAj\/wB9Kzeo1+0HtBxBrrixaBbxAEKCS7zAUAbwfr6VWXrF7DgB7qJEwoAZt56b+tTeFZbdxSwYEjwkDadJ89J2B030rdYDAYfEJF5CVI0e2mZeuZkEn\/MhPoKtucI5NieJ3mM943qIX\/bFRnxNw7u5HmxP8a6zjvyWZl73C3kdCJAJBBH6r7ezfOsy3ZJR47txFQNBCEM7kbohEoD1JJyyCQZAZoY7E2V8V1wyoh1aAQ7bi2kkEuRr0A1J2nQ8V4hcxDhmgKoy20B8KL0HU9TufkBEnRVChEQZURfhRZmBOpJ3LHUnU0qmBnKa8YSNDHnp\/Gn6IFMERFuA6spH7MH6GKeBgyNxz5j3pZQUk26YJtnjWJTa850IhjnEEQRleRBGlT8X2dQYA4y3atpcZWJQLCuuoS4ls+FW55QIIEiNjJ7M9nlcfnOJEWVPhU\/4rD\/hO\/Xbaan9puJF1cEMdPEBtatmBrpCsZiTtt1mVXGLgcbhG9UAPzAqBcJnYD0mKscdgGtmFbMvIq0+xUGRT3Cuz2KxTZbVtmHNo8IHUmtYyrbbMU+GQDv\/AApkISQANzA+dbvFcKt4ZVtMfEOQGZ3PMhBJOvsKpsRwY3HzH9Guyr8TkDoi89zvzqarPX7eVmWZykifQxXlu0zfCpPoCfwrXYfhNlN0LN1chvoPD\/GrBbkCBoOg0HyppjC27UrPkT8q8S1NbDFcOW6DAIPNlG\/r1\/Gm8Jgbdv4kY6\/F4Sp9NZ+YqauRS4LhbvsPetjw+wLdsIPX3pNu\/b2Gn+U\/yqSiE7QfcVGiiR0FNlE+6PlSzaf7p+Ved0\/3W+RohxLzp8Fx1\/Zdh+BqZY7QYtNsRd93LfRpqv7tvut8jSHGtB0Hsb2qu3bvc3yGLA5WgKZAmDEA6DpW9rh\/Zy8Uxlgj\/wAij5nWu4VqM15Td66qKWYwAJP9dacBrJdoeJO2lsFlVhsMxO8sFGrdBE\/FMEUtRF7Q3zdtXCwEFYgnQJIzSRyy5iTXPuJcQt2riDDsQ6AB3twEOWIWBo+2vKANzMdBt3JI0OUozMWGiQVABMAGQXMaxk1+IAZjEdj7F15sO1ssTCQpUxvkRmVgPSQNgBEVPG88rVh2b7R38UxRcMjFQC7i6UUSco8Lo4BJnSeRrVXrGKKEolu2QJBztdYxqR3YVFk6\/bFZ3s5w04S0Yu2WV3W4Ha206ABAPGNvER+2dKurhV\/724zg5fC2ieNsqgogAYE6DPmq2xJFHxbC4zFXjat3lGGgZnQQs6hrZhibjAjUBsuokg6UzxF7WCt\/m+HHjYeNzq7ebH3MDYSavuPcWXD24EZiIUdK5jxXiYQNcuGWJ0HNj0qb9Kb4nxEWl6u3wj\/kfL8azlsktJ8TEz5sedRnxRuOWcyzH28gOgFaLsvww3XAAzO2yjcAa+E8+evrWpMTdWPCcAWADCZ3kVveC9nrYGYllB3G4Y7xB+Lb9roRUng\/Au7UNcUJHNgPrm0+VL4v2ow+HQm2Rcf4VCmZPQv0Eid406gHDRrj\/wCZ4VTcuobjN8NsnKtxgPiZB8caSzzA25A86x+NuXrhuXCJ2VVEIijZEX7Kj\/vek4\/HXL9w3bjZnb5KOSqOSj+tTTE1qRCq9mkTXs1UKmiaTNE0CprRdmuArdm\/f8OHTfkbjDdVP3Rzb2GslWuzXAPzgm5cJTDofG2xcj7Knl5ty5a7WnaDjggBcqIgGRAIVFGgYgdNIX\/qpasK49x0DXRcultIgW1GgJXk3ReXrsx2YF5rhIdcj\/Gp3YHcMfiM\/KsbluX3DQxWZAJ8R\/WPUn10rc9mOGOHVgl0AfeFsL9LhP0rDTYDgWAUZvzayIEk5FAA5knpWQ7Q9sgoNrBqqINDcCrJ0\/w0Ihf2mB2Ph2NartXg+8wV1O87vwg5uRysGyt1VoynyNcr\/Nbd8RaIS8qy9ufA4A1e0eXmv2fTxHTKva5qx1zMZZiSWY9WY6sfWm83TTr1Pqd296EssWKxBG4OhHqKn2cEo31P0qqhWrTNsPflU6zgANWM+XKpI0oms6pSgDQCo9\/DA6roTv0PqKemiagyfEsLfQk23bzQ6n\/KT8Q8jr61S\/2xeG7D3Ufyrod60rCCKqMTwxM2Z0Vgd2iWjz2mtnLKjjl39T90fwpxePXRyX6j+NX9\/A8OUjMSs7TbcA+4uxNeLgOGH\/EX\/WP+ZrPtOjntSDtDc6D95v50r+3bh+x\/qb+dXycJ4af8S3\/8jj+Bp9OE8PG1xP8A5j\/FKe06MpvsRinuY2xmkDvU03BltdSZEafWvoea412SsYJMTb7sqzlwVhmuRl1JnRRoOkyR5x1tLmlWXUqD2g4oqRaB8TaGNTr9kAayRqeg9azeEw7hrmbK+aSJZlIJHh0Kk24kRkMaSN9I+t9RddXWHiSQT+kdVBIIKtLFehHLzm4lWhu7bx+FTqohFLmF0hTLuRPmJAiJUOXcVlfuzlAyyWdlQPodEzEKTO4nTXylaJbVWHi7pUDHx3Db5ygQsUYAAfDK6xyry0GKjKGBlfG5WQBuYtsyuSJGyxJPlTgvPmOhgGFAg5\/PPmkehUUV491GyNosaKRcUeFiAYCtDaAHLqTGgrzG4xLVsXbgbOAcgdmYruAVU6ISOgB1IND4rug7uYEQqnLnJkkk5SQNwIk7TOsDEcU4i15yTtyFBG4rj7lxi5lmJhRynl6CsXxzGZ2CZswQEFhoGb7RA6DYe\/WrPjfEiJt2z4joxH2R90ef4fhSrgC4it+M+2bfpDNkNEH2\/iDWl7PYPGBg1hWuldYXNnXzlQSPlVbb4JcXVNfI\/wBaVdYLiT4RSYdbjDIqq0Mx9R9naTSidxTE4lWC4hLltmE5Gc538oIkLzLHbSASQKYLk6mNoAAhVA2VRyG\/zJMkk1FsoxJuXGzXH+I9ByVZ5D671JBqSKVRNJmiaqFTXs0maJoFzV52Z4CcSxdyUsJ8b9TvkT9aOfIeolns5wJsU5JOSymtx+nPIs7ufpueQOg4zxVAos2lCWUEKo2bXUnnG5J3JPPnLVkecf40gQW7YCWUEIuwgfaPlz896wL8RW68uSBOk6T56iKj8cx7vcyahRqeWY9Y+70HvRhsStoZnMLMTE\/TekiWumdm8XhlRQqZmjUtbRjPkwuKI\/y1q7XFFUaW49nH+0NFc84P2mwTKqPawbECAxVVc+rEzV\/bxWDba0BP3MRcQf6THSrhq149iBftG2QRP3Q8yNpzBQa4nxnBPYuFy+SDI8XiDDUFSuxnXTWup4xcKVIFsj1xN1j8ifSubca4RaVy5zN6yB8zqfnTBJ4fxu3igq4g5LmmW8BE+Tgec+IadQILmbcL22yXRE\/C4+Bhy15SNaxCwfnpGkdIq\/4Vxw217u6M9omIO6TuVPLr09Cc1SxZV5NE00+Hyr3lljctdPtod4I39vcSNa8t3QwkGRWGj017NNg149wKJJAoHZpF24qiWMf10qGuKa4wS2BJky0CAqlmOuwCqx9tqjPZzSVuByBJjMDHMqGALAeWo1MAa1QXbYutkS2WzaZYnMfQbc9RtVLiuEOrRbGbWMpYSPQ7MPP\/AN1cvdVQDbLqWDKwJB0OmWQBM66R93c1Hv3mcy7RmkBzEZgAAGOgHL8TVRX\/ANjYkb2HHyr1eFYj\/wAT\/StvwLtc9h1tXbedQchTMCVOkd05MkHfKfbLXS+FvhsSneWirLz2zKejLuDVRzL8nvArwxK3Ht5QqtE9SIn6n6V11LelLw2GVToOVSsgqoxGFS2IKqg1nQACeunPzowGGa3IRlg8ykuemZgwVoG2ZTWDwfF87MqZgymCNucAjNEjbUdRU+zx5hoLh03B3Hr0rP8AVbNsJsAxIlmcNMuzNmLZkK5TM6ARroBTePuqss+VVlWyrmlihlAWZj4QwBhQskakiQc8naG5GhU+1VGK4k1wnM+YjkATHsKYak8V4i15iTtyFZri\/E+7\/R29XO5+5\/8A1\/79VcV4nkGS2QXPPcJ6\/reXufOswGCLGTqTrP41ZO0tIwOCJMnc1p+G8LmNKm8G4KWjStNxK2MHYzKua65yW1iSzlWYQOZhTpzMDnWvyjLcdxtrBIFgPef4E6TsW+mn\/U5fC22LG5dOa43yUdB0pu1Zc3GuXSWusTmJ3UzqNdjUmazrUiSGFezUWvQ5600SZr2ajrdPOli4Kodmrbs\/wV8VcgHKia3LnJB0HVjrA99hUfgnCXxVzIhAUa3Lh+FF6nqTBhefoCRq8fj7dtBhcKItoYdp8TtAkk82OknkI5QKlph3inEbdu2tiyMttNFH3juWc85313mTpvisZxAloTUT4iZ8Z\/l+NO4\/E5iUTbYkcx90eXU86RgsFmIHWkiWq3GYTvmzGRAgRypKcKugQCrr0ZQRXSX7H5bQuAyYmKMDwMnlVxHO14VPx4RT+wzp9BpUvB8Ps27iXFwtxWRgwhlIkbfZmK6zhODqNxVinDUHIfKrkHM7\/GWfTu3HWA0x0GgjlzrPcUwd29ottlB3Zt46da7c\/D16Cq7E8LHSg41a4AVGtFzh0cq6ZiuD9BVHi+FkcquDD4a9cwz5re2xQ\/CRzAB5eW06iNIusP3WK8Vk5L32rZ2c76DmfLf9qJHuM4d5VSYjCMpzLII2I39PMeVZsXU7E4t0OUplbnP4jqPOoz2bhU3GVsoIBYiBJ2Anc+QqfheL28QBaxYyvsl0bk\/rblv93UPuIvFsBcsspuNNqAFuCXVU5bTCz0ka\/LOY1qIrlSGBKkEEEGCCNiCNj51K\/tFh+kW0gcEfpcjeFpkPkzd2H5zkG2bfxVBcKpKu2U\/Err+kBHIFUBiSDrqCDymnEuPnUhVts6knNGR51SEdYGh0k\/Z0MTVCCI+IlQRKXDquhiDpqJBGmm2uleFp0AyZ1OZSZRyNZEr4eXnv5kpuW1tgT4bgHiR1y5iwOqAb8jMDkCNTHrGQ621\/RyvgfI1wGdMhU+GTOo9NNqI9ygeDLz8VppUoQujKwEDn9an8G4pewzi\/buOYhXI1cRoFdD8S7DbSOtV\/ggal1aYCsO+RwBqc24nmeRg0lmLEu7JnQKIy5SwGgAj4j5+UUHaOynbiziot3QLV46BSfA5\/UY7H9U69JrX56+aXuZiTlCydFmY9+ta\/hP5S79i0LdxO+K6ByWzZeQYgGSNdaaYiYvhN62YNsMOqkoY6RrPzqsd0UkujoTuWXNPqyyTXab\/DweVVeI7Po3KterOuY4biNoad6IPUMI9c1N38ZZRi6HO7CAFMj5jQb+dbvEdi7bfZHypux2BtgzTDXOsFw57jFmGrEk+pM1uuB9miYJGla3h3Zm3b5T61fWcMF2FUVuA4WtsaCs3+UrAm5h1KzmtOHABgsIIIB66g7cq3uWq\/ifDluqQafI4N\/bl0\/FdS5GgXEoHjrFwBnA9GSKWMbaYS+GuKI+PDOLtufNHJP\/2CthxzsLJLIKw2N7KXbTSmZSOakg1mxrUq2LD\/AN3ibZP3bk2H9Jfwf\/YaXieH3bQzPbdV5PEofS4sqfY1Q3jfXS4FuD9dZb9\/R\/8AVTmAxht+K217DsTr3bkgnzUlSR6samGrAVZcF4PcxVzJbEKNXc\/BbXmWP4Dc\/h7w3tNZWfzoW7pgkP8Am1svOy5oVMw5mSagYvttiHU20gJ9lVUJbX0RQPwqcrw03aXj1rBWRhcJqx1J+07HQu\/4AeUDQE1meELcRXliTcIZid+c\/PT5VB4bhCzG5cJZ21JP9bVp8FhSY0rUjNpOFws1ouG8OJIMVL4VwcmNK1+A4aFG1XEeYIOUCHarDD4UCnrdoCnQKihVoivaWFoGytNOlSWFIoIVzDzVZiuHg8qvmWmmSrow+O4T0FZzHcM8q6jewwPKqrF8MBqo5Dj+F76Ujh\/F7mH\/AEd0d5ZO6ndZ3IMGPWD5hoEb7iHB99KzHEOE76VLDUDEcHUjvsGVe2cpe2YBiZ0YSUJ11BIOoBO1Ui5mRxpkVgGTwkrBjIjOMw226DSKm2xdwr57RI3leRB30OmvQ6HmOdWy4fDcQ1GW3iNoPwufu66zt4SZ2gttWbMaZ8XbYkfGrwZDN31sKSIIZhBgAwdp0J3Cmu3bg7xmAe39stlvawFzEN+yJA1A\/VJCuI4G7h3yXFZHG20EbSpIhht6eRqE5zGXOcnm0E+1BIw2MCg5beZjszkwPUkQ3sSBppTPPMYJ6wAB+yOVMXcUoptEe4GIZECiYZvEfIKoJB9YopWIxQG29P4bhzOuYyCTt\/PzpfCeFM7AKMzdeQrqnBOzDJaA6mT5kxrRNdCa1Se7qTXhWtahgJSggpzJQEqBKpSwtFe0BXhWlTQaBi5YBqrxnCkfcVdV4Vmro5\/xXskjTC1jOI9kiswCK7c9moN\/AK24pxRwDEcFdeU+1Jw3CzPw12+\/2ettuBTSdmLQMxTBzfhvCiY8Nbbg\/AjoSK0eG4RbTZasrdoDYUEfC4MINqnqkUKtOBagQBSwtKr2g8Ar2iig8IpBSnKKBkivCtPV4VoIzCm2SpLLSClBXX8KDVNj+EA8q07LTb261qY5nxLgh10rKY7hLI2ZNDz6EdDXbMRgw3KqXHcBVuVByPiOMu3kFt7hhTIW5JEjmjnVTy9OUVmcfhL9p8r6TqrfZYdQa69xDskW2E1WJ2Ov\/CGITodR7A7VmxXMsNw8sdZb02Hqa13Auyty4RplXy\/r+utb3hPYxUILyx89hW0wXDUtjYUFD2e7L27Kjw\/91qktgCKWBRQO0UUUBRRRQFFFFAUUUUBRRRQFeFaKKBBSvAtFFAoLSgKKKBYalg0UUATXmaiigC1eZqKKAzUFqKKBOavJoooCiiigK8KivKKBLW6ba35UUUCDbFeCzRRVDqIBtSqKKgKKKKD\/2Q==)","73e78d2a":"<a id=\"R\"><\/a>\n## RAM","1c22595b":"<a id=\"EDA\"><\/a>\n# EDA and Data Visualization","3ec99b57":"<a id=\"LBR\"><\/a>\n# Libraries","90ee80c7":"<a id=\"FC\"><\/a>\n## Front Camera","aa82d5f6":"<a id=\"DTC\"><\/a>\n## Decision Tree Classifier","feeeb7a5":"<a id=\"4G\"><\/a>\n## 4G","d562f4fa":"<a id=\"PRH\"><\/a>\n## Pixel Resolution Height","4517ba59":"<a id=\"CS\"><\/a>\n## Clock Speed","355653be":"<a id=\"PC\"><\/a>\n## Primary Camera Mega Pixels","30c6caf0":"<a id=\"MD\"><\/a>\n## Mobile Depth","862f7f78":"# Table of Contents\n\n* [Libraries](#LBR)\n* [Data Loading](#Data)\n* [Data Dictionary](#Data-Dictionary)\n* [EDA and Data Visualization](#EDA)\n    - [Battery Power](#BP)\n    - [Bluetooth](#B)\n    - [Clock Speed](#CS)\n    - [Dual-sim](#DS)\n    - [Front Camera](#FC)\n    - [4G](#4G)\n    - [Internal Memory](#IM)\n    - [Mobile Depth](#MD)\n    - [Weight of the Phone](#WP)\n    - [Number of Cores](#NC)\n    - [Primary Camera Mega Pixels](#PC)\n    - [Pixel Resolution Height](#PRH)\n    - [Pixel Resolution Width](#PRW)\n    - [RAM](#R)\n    - [Screen Height](#SH)\n    - [Screen Width](#SW)\n    - [Talk Time](#TT)\n    - [3G](#3G)\n    - [Touch Screen](#TS)\n    - [Wi-fi](#W)\n* [Preprocessing](#PP)\n* [Models](#Models)\n    - [Logistic Regression](#LR)\n    - [Naive Bayes](#NB)\n    - [Decision Tree Classifier](#DTC)\n    - [KNN](#KNN)\n    - [Random Forest Classifier](#RFC)\n    - [SVM](#SVM)\n","acfd5d95":"<a id=\"Data\"><\/a>\n# Data Loading","417cff6c":"<a id=\"KNN\"><\/a>\n## KNN","d5eb83b7":"<a id=\"SH\"><\/a>\n## Screen Height","57b01e40":"<a id=\"PP\"><\/a>\n# Preprocessing\n","7c81a533":"<a id=\"Data Dictionary\"><\/a>\n# Data Dictionary\n\n\n\n\n**battery_power** = Total energy a battery can store in one time measured in mAh.\n\n**blue** = Has bluetooth or not. | 1: Has , 0: doesnt have\n\n**clock_speed** = Speed at which microprocessor executes instructions.\n\n**dual_sim** = Has dual sim support or not | 1: support, 0: doesnt support\n\n**fc** = Front Camera mega pixels.\n\n**four_g** = Has 4G or not. | 1: Has , 0: doesnt have\n\n**int_memory** = Internal memory in gigabytes.\n\n**m_dep** = Mobile Depth in cm.\n\n**mobile_wt** = Weight of mobile phone.\n\n**n_cores** = Number of cores of processor.\n\n**pc** = Primary Camera mega pixels.\n\n**px_height** = Pixel Resolution Height.\n\n**px_width** = Pixel Resolution Width.\n\n**ram** = Random Access Memory in Mega Bytes.\n\n**sc_h** = Screen Height of mobile in cm.\n\n**sc_w** = Screen Width of mobile in cm.\n\n**talk_time** = Longest time that a single battery charge will last when you are.\n\n**three_g** = Has 3G or not. | 1: Has, 0:Doesnt have\n\n**touch_screen** = Has touch screen or not. | 1: Has, 0:Doesnt have\n\n**wifi** = Has wifi or not. | 1:Has, 0:Doesnt have\n\n**price_range** = This is the target variable. | 3:Very High Cost, 2:High Cost, 1:Medium Cost, 0:Low Cost\n\n\n\n\n\n","67220279":"<a id=\"SW\"><\/a>\n## Screen Width","89206956":"<a id=\"W\"><\/a>\n## Wi-fi","d36e6f8c":"<a id=\"BP\"><\/a>\n## Battery Power","719be131":"<a id=\"DS\"><\/a>\n## Dual Sim","fda49380":"<a id=\"IM\"><\/a>\n## Internal Memory","3ff4c498":"<a id=\"NC\"><\/a>\n## Number of Cores","89e3230b":"# Mobile Price Classification","2a965ef0":"<a id=\"PRW\"><\/a>\n## Pixel Resolution Width","2d6625f8":"<a id=\"B\"><\/a>\n## Bluetooth","a63ec95b":"<a id=\"TS\"><\/a>\n## Touch Screen","aaf523c2":"<a id=\"Models\"><\/a>\n# Models","79faa54d":"<a id=\"SVM\"><\/a>\n## SVM","9d27956a":"<a id=\"LR\"><\/a>\n## Logistic Regression","2e30daad":"<a id=\"LR\"><\/a>\n## Random Forest Classifier","bc012566":"<a id=\"3G\"><\/a>\n## 3G","bddf02c3":"<a id=\"TT\"><\/a>\n## Talk Time","54f1e97c":"<a id=\"NB\"><\/a>\n## Naive Bayes"}}