{"cell_type":{"85a9533b":"code","b717f418":"code","4d829f60":"code","aeff1820":"code","8fb1457d":"code","0ff94e40":"code","6c3ca2d6":"code","bcb8cc59":"code","99fa8e2b":"code","f1a9cf4e":"code","f6aa26e4":"code","ef40d200":"code","dbacd1bb":"code","defca1de":"code","469c2b44":"code","e9273110":"code","bc886f62":"code","71fa1254":"code","18bb592d":"code","a5789944":"code","8f8cb6ac":"code","a838da17":"code","55e6a34f":"code","5f712cc8":"markdown","7cb411bd":"markdown","577a0bcf":"markdown","a87cc2a8":"markdown"},"source":{"85a9533b":"#Importing all the required libraries for the analysis of the automobile dataset.\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","b717f418":"#Imporing the dataset using pandas, naming it as df_automobile.\n#Definig the null value or NaN values as '?' using na_values keyword.\ndf_automobile = pd.read_csv('..\/input\/automobile-dataset\/Automobile_data.csv', na_values=['?'])","4d829f60":"#Below statement returns the first  rows ofthe dataset with their column names.\ndf_automobile.head(10)","aeff1820":"#Returns the shape (Rows & Columns) of the dataset\ndf_automobile.shape","8fb1457d":"#Returns the Column names available in the dataset\ndf_automobile.columns","0ff94e40":"#isnull() function checks the presence of any nul value \n#.any() function will return boolean values of the cloumns containig null values.\ndf_automobile.isnull().any()","6c3ca2d6":"#.sum() calculates the null values availble in the particular columns\ndf_automobile.isnull().sum()","bcb8cc59":"#plotting the histogram of colums with integer datatype.\ndf_automobile.hist(grid=True,figsize=(13,13), )","99fa8e2b":"#The below code is used to fill null values or NaN values with either of their mean values or mode values.\n#If a column with continous values is having any null values, fill it with their mean values\n#and if any column contains categorical value fill it with mode\ndf_automobile[ 'normalized-losses' ].fillna(value= df_automobile['normalized-losses'].mean(), inplace=True)\ndf_automobile['num-of-doors'].fillna(value = df_automobile['num-of-doors'].mode().values[0], inplace=True)\ndf_automobile['bore'].fillna(value = df_automobile['bore'].mean(), inplace=True)\ndf_automobile['stroke'].fillna(value = df_automobile['stroke'].mean(), inplace=True)\ndf_automobile['horsepower'].fillna(value = df_automobile['horsepower'].mean(), inplace=True)\ndf_automobile['peak-rpm'].fillna(value = df_automobile['peak-rpm'].mean(), inplace=True)\ndf_automobile['price'].fillna(value=df_automobile['price'].mean(),inplace=True)","f1a9cf4e":"#Now we can see we dont have any null values.\ndf_automobile.isnull().any()","f6aa26e4":"#Again priting the top 10 values to check if the null values are replaced with their new values or not.\ndf_automobile.head(10)","ef40d200":"df_automobile.shape","dbacd1bb":"df_automobile.describe()","defca1de":"#Heatmap technique is used to visualize the relation of the features.\nplt.figure(figsize=(20,20))\nsns.heatmap(df_automobile.corr(), annot = True, cmap = 'YlGnBu',fmt = '.2f')","469c2b44":"# From the above figure we can see that highway-mpg and city-mpg are highly correlated \n#so we are deleting highway-mpg  column.\ndf_new = df_automobile.drop(['highway-mpg'], axis=1)  ","e9273110":"df_new","bc886f62":"#again checking the shape of the dataset.\ndf_new.shape","71fa1254":"#Ince the make column is having same elements i.e. the automobile companies so we are aggregating\n#all those companies names and their other attributes by using either their mean value or adding them.\ndata_agg = df_new.groupby('make')\nwheel_base = data_agg['wheel-base'].agg(np.mean)\nlength = data_agg['length'].agg(np.mean)\nwidth = data_agg['width'].agg(np.mean)\nheight = data_agg['height'].agg(np.mean)\ncurb_weight = data_agg['curb-weight'].agg(np.mean)\nengine_size = data_agg['engine-size'].agg(np.mean)\nbore = data_agg['bore'].agg(np.mean)\nstroke = data_agg['stroke'].agg(np.mean)\ncompression_ration = data_agg['compression-ratio'].agg(np.mean)\nhorsepower = data_agg['horsepower'].agg(np.mean)\npeak_rpm = data_agg['peak-rpm'].agg(np.mean)\ncity_mpg = data_agg['city-mpg'].agg(np.mean)\nprice = data_agg['price'].agg(np.mean)\n#print(length)\n#print(height)","18bb592d":"#Here we are plotting all the features with other attributes to get the insights from the dataset.\nplt.figure(figsize=(13,10))\nplt.subplot(221)\nplt.plot(wheel_base, 'r--')\nplt.xticks(rotation = 90)\nplt.xlabel('make')\nplt.ylabel('peak-rpm')\nplt.show()\n\nplt.figure(figsize=(13,10))\nplt.subplot(222)\nplt.plot(length, 'ro')\nplt.xticks(rotation = 90)\nplt.xlabel('make')\nplt.ylabel('length')\nplt.show()\n\nplt.figure(figsize=(13,10))\nplt.subplot(223)\nplt.plot(width, 'g^')\nplt.xticks(rotation = 90)\nplt.xlabel('make')\nplt.ylabel('width')\nplt.show()\n\nplt.figure(figsize=(13,10))\nplt.subplot(224)\nplt.plot(height, 'rs')\nplt.xticks(rotation = 90)\nplt.xlabel('make')\nplt.ylabel('height')\nplt.show()\n\nplt.figure(figsize=(13,10))\nplt.subplot(225)\nplt.plot(curb_weight, 'ro')\nplt.xticks(rotation = 90)\nplt.xlabel('make')\nplt.ylabel('curb-weight')\nplt.tight_layout()\nplt.show()","a5789944":"plt.figure(figsize=(13, 8))\nplt.xticks(rotation=90)\nsns.boxplot(x = 'make', y = 'price', data = df_new)","8f8cb6ac":"plt.figure(figsize=(13, 8))\nsns.boxplot(x = 'body-style', y = 'price', data=df_new)","a838da17":"plt.figure(figsize=(13, 8))\nsns.violinplot(x = 'engine-type', y = 'price', data=df_new)","55e6a34f":"plt.figure(figsize = (15, 8)), \nsns.countplot(df_automobile['make'], data=df_automobile)\nplt.xticks(rotation = 45)","5f712cc8":"In the above figure we used boxblot visualization technique provided by seaborn and we can comapre\nthe prices of the automobiles launched by different companies and can know that the automobiles\nlaucnched bt the mercedes-benz has highe price range in the market as compared to other companies","7cb411bd":"Again using seaborn but the violin plot technique to see that the ohcf type of engines used in automobiles have higher price range and can also compare the price ranges of the other engine-types.","577a0bcf":"In the above figures we can see the relationships of the values and how they are depending on the other features of the automobile companies.\n\nFigure 1 - We can see that the peak-rpm of mercedes-benz are high as compared to the other companies.\nfigure 2 - In this plot we can see that the lengths of Jaguar automobiles are high.\nfigure 3 - Shows that Mercedes-Benz launches cars with the highest widhts.\n\nSo using the matplotlib, we compare many features to get the insights.","a87cc2a8":"Here we are again using boxplot to visualize that the hardtop automobiles have the higher price \nrange in the market."}}