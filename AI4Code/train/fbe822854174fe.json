{"cell_type":{"7e1f87a1":"code","79c7b586":"code","6cccf817":"code","55dfcc39":"code","297639f5":"code","3ac9b509":"code","73b1e981":"code","9756b172":"code","45af8c72":"code","5a0185e5":"code","1be5d3e6":"code","2f908bc7":"code","6c8d676c":"code","81eb6820":"code","5bf03eb5":"markdown","3b6ed445":"markdown"},"source":{"7e1f87a1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n# Any results you write to the current directory are saved as output.","79c7b586":"data=pd.read_csv('..\/input\/creditcard.csv',header=0)\ndata.head()","6cccf817":"print(data.shape)\nprint('+'*50)\n#print(data.info())\ndata.info()","55dfcc39":"fig=data.plot(kind='Line',x='Time',y='Amount')\nfig=plt.gcf()\nfig.set_size_inches(8,6)\nplt.show()","297639f5":"fig=data.plot(kind='hist',x='Amount',y='Class',bins=2,rwidth=0.8)\nfig=plt.gcf()\nfig.set_size_inches(8,6)\nplt.show()","3ac9b509":"fig=data.plot(kind='scatter',x='Class',y='Amount')\nfig=plt.gcf()\nfig.set_size_inches(8,6)\nplt.show()","73b1e981":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn import svm\nfrom sklearn import metrics\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier","9756b172":"data.corr()","45af8c72":"plt.figure(figsize=(25,20))\nsns.heatmap(data.corr(),annot=True)\nplt.show()","5a0185e5":"cordata=data[['Time','V7','V20','Amount','Class']]\ncordata.head()","1be5d3e6":"plt.figure(figsize=(15,10))\nsns.heatmap(cordata.corr(),annot=True)\nplt.show()","2f908bc7":"train,test=train_test_split(data,test_size=0.3,random_state=0)\nprint(train.shape)\nprint('-'*70)\nprint(test.shape)\nprint('-'*70)\nprint(train.head())\nprint('-'*70)\nprint(test.head())","6c8d676c":"x_train=train[['Time','V1','V2','V3','V4','V5','V6','V7','V8','V9','V10',\n              'V11','V12','V13','V14','V15','V16','V17','V18','V19','V20',\n             'V21','V22','V23','V24','V25','V26','V27','V28','Amount']]\ny_train=train[['Class']]\nx_test=test[['Time','V1','V2','V3','V4','V5','V6','V7','V8','V9','V10',\n              'V11','V12','V13','V14','V15','V16','V17','V18','V19','V20',\n             'V21','V22','V23','V24','V25','V26','V27','V28','Amount']]\ny_test=test[['Class']]","81eb6820":"model=LogisticRegression()\nmodel.fit(x_train,y_train)\nprediction1=model.predict(x_test)\nprint('The accuracy of Logistic Regression is :',metrics.accuracy_score(prediction1,y_test)*100)","5bf03eb5":"model=svm.SVC()\nmodel.fit(x_train,y_train)\nprediction2=model.predict(x_test)\nprint('The accuracy of Aupport Vector Macine is :', metrics.accuracy_score(prediction2,y_test)*100)","3b6ed445":"# Upcoming\n\n* **Random Forest**\n* **Decision Tree**\n* **K Neighbors**"}}