{"cell_type":{"54014d76":"code","7e460492":"code","4a751c65":"code","5ae6f40f":"code","72a9bbe5":"code","ad33c360":"code","43e5d6bd":"code","74ac9738":"code","7ca50fd9":"code","26d0ef39":"code","62924681":"code","b648606a":"code","7646062f":"code","84527f20":"code","aa0aafd0":"code","1f537f16":"code","4a58d892":"code","651ae5fc":"code","34e24ef5":"code","dff585d6":"code","5913211d":"code","8c3dd03c":"code","8b6bf495":"code","1acd4d0c":"markdown","914cd24b":"markdown","979917b3":"markdown","e53ea096":"markdown","c3eabfc3":"markdown","6affbcf7":"markdown","1287726a":"markdown","e2d84eb1":"markdown","89ee6d0b":"markdown","c664e218":"markdown","cb6c7bea":"markdown"},"source":{"54014d76":"import numpy as np \nimport pandas as pd \nimport geopandas as gpd\nimport folium \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os \nfrom folium import plugins\nimport pylab as pl","7e460492":"os.listdir(\"..\/input\/oakland-street-trees\/\")","4a751c65":"data=pd.read_csv(\"..\/input\/oakland-street-trees\/oakland-street-trees.csv\")\ndata.head()","5ae6f40f":"len(data)","72a9bbe5":"data.isnull().sum()","ad33c360":"data=data.dropna(subset=['SPECIES'])","43e5d6bd":"len(data.SPECIES.unique())","74ac9738":"fig,ax=plt.subplots(1,2,figsize=(15,8))\nclr = (\"blue\", \"forestgreen\", \"gold\", \"red\", \"purple\",'cadetblue','hotpink','orange','darksalmon','brown')\ndata.SPECIES.value_counts().sort_values(ascending=False)[:10].sort_values().plot(kind='barh',color=clr,ax=ax[0])\nax[0].set_title(\"Top 10 species by counts\",size=20)\nax[0].set_xlabel('counts',size=18)\n\n\ncount=data['SPECIES'].value_counts()\ngroups=list(data['SPECIES'].value_counts().index)[:10]\ncounts=list(count[:10])\ncounts.append(count.agg(sum)-count[:10].agg('sum'))\ngroups.append('Other')\ntype_dict=pd.DataFrame({\"group\":groups,\"counts\":counts})\nclr1=('brown','darksalmon','orange','hotpink','cadetblue','purple','red','gold','forestgreen','blue','plum')\nqx = type_dict.plot(kind='pie', y='counts', labels=groups,colors=clr1,autopct='%1.1f%%', pctdistance=0.9, radius=1.2,ax=ax[1])\nplt.legend(loc=0, bbox_to_anchor=(1.15,0.4)) \nplt.subplots_adjust(wspace =0.5, hspace =0)\nplt.ylabel('')","7ca50fd9":"Top10_species_counts=data[data['SPECIES'].isin(list(data.SPECIES.value_counts()[:10].index[:10]))]\nTop10_species_counts.groupby(['SPECIES','LOWWELL'])['OBJECTID'].agg('count').unstack('LOWWELL').plot.barh(figsize=(15,8))\nplt.ylabel('')\nplt.xlabel('counts',size=18)\nplt.title('Lowwell for Top 10 species',size=20)\nplt.tick_params(labelsize=16)","26d0ef39":"fig,ax=plt.subplots(figsize=(25,12))\nsns.boxplot(x=\"SPECIES\", y=\"WELLWIDTH\", data=Top10_species_counts)\nax.set_title(\"Boxplot of WELLWIDTH for Top 10 species\",size=20)","62924681":"data['Location 1'][0]","b648606a":"data['Long']=data['Location 1'].apply(lambda x: x.split(',')[0].split(':')[1].strip().strip(\"'\"))\ndata['Lat']=data['Location 1'].apply(lambda x: len(x.split(':')))\ndata=data.drop(index=data[data.Lat<8].index)\ndata['Lat']=data['Location 1'].apply(lambda x: x.split(',')[5].split(':')[1].strip('}').strip().strip(\"'\"))\ndata=data.drop(index=data[data.Lat.isin(['{\"address\"'])].index)\ndata.Lat=data.Lat.astype(float)\ndata.Long=data.Long.astype(float)\ndata.head()","7646062f":"data['street']=data.STNAME.apply(lambda x:x.split(',')[0].split(':')[1].split(\"'\")[1])\ndata=data.drop(index=data[~data.street.isin(['{\"address\"'])].index)\ndata['street']=data.STNAME.apply(lambda x:x.split(',')[0].split(':')[2])\ndata=data.drop(index=data[data.street==' \"None\"'].index)\ndata.street.value_counts()","84527f20":"fig,ax=plt.subplots(figsize=(12,8))\nclr = (\"blue\", \"forestgreen\", \"gold\", \"red\", \"purple\",'cadetblue','hotpink','orange','darksalmon','brown')\ndata.street.value_counts().sort_values(ascending=False)[:10].sort_values().plot(kind='barh',color=clr,ax=ax)\nax.set_title(\"Top 10 street by trees\",size=20)\nax.set_xlabel('trees',size=18)\n","aa0aafd0":"fig,ax=plt.subplots(figsize=(15,8))\nTop10_street_counts=data[data['street'].isin(list(data.street.value_counts()[:10].index[:10]))]\nsns.boxplot(x=\"street\", y=\"WELLWIDTH\", data=Top10_street_counts)\nax.set_title(\"Boxplot of WELLWIDTH for Top 10 street\",size=20)","1f537f16":"data[data.street==' \"M L KING JR WY\"'][data.WELLWIDTH>30]","4a58d892":"fig,ax=plt.subplots(figsize=(15,8))\ndata=data[data.WELLWIDTH<30]\nTop10_street_counts=data[data['street'].isin(list(data.street.value_counts()[:10].index[:10]))]\nsns.boxplot(x=\"street\", y=\"WELLWIDTH\", data=Top10_street_counts)\nax.set_title(\"Boxplot of WELLWIDTH for Top 10 street(Remove the outlier)\",size=20)","651ae5fc":"East_14th=data[data.street==' \"EAST 14TH ST\"']\nEast_14th.head()","34e24ef5":"fig,ax=plt.subplots(1,2,figsize=(16,8))\nEast_14th.SPECIES.value_counts()[:10].sort_values().plot(kind='barh',color=clr,ax=ax[0])\nax[0].set_title(\"Top 10 Species by counts on East_14th_st\",size=20)\nax[0].set_xlabel(\"counts\",size=18)\n\nEast_14th.groupby(['WELLWIDTH'])['OBJECTID'].agg('count').plot.bar(ax=ax[1])\npl.xticks(rotation=360)\nax[1].set_title(\"Distribution of WELLWIDTH on East_14th_st\",size=20)\nax[1].set_ylabel(\"counts\",size=18)\nax[1].set_xlabel('WELLWIDTH',size=18)","dff585d6":"data.head()","5913211d":"data_tree=pd.DataFrame({'WELLWIDTH':Top10_species_counts.WELLWIDTH,'WELLLENGTH':Top10_species_counts.WELLLENGTH,'PAREAWIDTH':Top10_species_counts.PAREAWIDTH,'SPECIES':Top10_species_counts.SPECIES})\ndata_tree=data_tree[data_tree.SPECIES.isin(['Platanus acerifolia','Liquidambar styraciflua','Pyrus calleryana cvs'])]\ndata_tree=data_tree[data_tree.WELLWIDTH<30]\nfig,ax=plt.subplots(3,1,figsize=(25,20))\nsns.boxplot(x=\"SPECIES\", y=\"WELLWIDTH\", data=data_tree,ax=ax[0])\nax[0].set_title(\"Boxplot of WELLWIDTH for data_tree\",size=20)\n\ndata_tree=data_tree[data_tree.WELLLENGTH<20]\nsns.boxplot(x=\"SPECIES\", y=\"WELLLENGTH\", data=data_tree,ax=ax[1])\nax[1].set_title(\"Boxplot of WELLLENGTH for data_tree\",size=20)\n\ndata_tree=data_tree[data_tree.PAREAWIDTH<20]\nsns.boxplot(x=\"SPECIES\", y=\"PAREAWIDTH\", data=data_tree,ax=ax[2])\nax[2].set_title(\"Boxplot of PAREAWIDTH for data_tree\",size=20)","8c3dd03c":"from sklearn.preprocessing import LabelEncoder\nlabelencoder = LabelEncoder()\ndata_tree['SPECIES_new'] = labelencoder.fit_transform(data_tree['SPECIES'])\ndata_tree.head()","8b6bf495":"from sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier\nx_train,x_test,y_train,y_test=train_test_split(data_tree[['WELLWIDTH','WELLLENGTH','PAREAWIDTH']],data_tree[['SPECIES_new']],test_size=0.2,random_state=0)\ntree=DecisionTreeClassifier(criterion='entropy',max_depth=4,random_state=0)\ntree=tree.fit(x_train,y_train)\npredict=tree.predict(x_test)\ny=y_test['SPECIES_new']\nfrom sklearn import metrics\nprint(\"acc_train:\",metrics.accuracy_score(y_train,tree.predict(x_train)))\nprint(\"acc_test:\",metrics.accuracy_score(y,predict))","1acd4d0c":"* [1.DataOverview](#1.DataOverview)\n* [2.Visualization](#2.Visualization)\n    * [2.1&nbsp;Visualization&nbsp;for&nbsp;species](#21)\n    * [2.2&nbsp;Visualization&nbsp;for&nbsp;street](#22)\n        * [2.2.1&nbsp;Visualization&nbsp;for&nbsp;East_14th_st](#221)\n* [3.Decision_tree](#3.Decision_tree)","914cd24b":"There are 196 species of tree in this data. If I visualize for all data,it will be complicated.\n\nSo,most of my visualizations are for Top 10.","979917b3":"<h3 id=\"22\">2.2&nbsp;Visualization&nbsp;for&nbsp;street<\/h3>","e53ea096":"# 3.Decision_tree","c3eabfc3":"<h3 id=\"221\">2.2.1&nbsp;Visualization&nbsp;for&nbsp;East_14th_st<\/h3>","6affbcf7":"This data size is 38613,and the variable include 'OBJECTID','WELLWIDTH','WELLLENGTH',and so on.\n\nThere are 5 missing data in this data.We drop out the 5 data at first.\n\nAccording to the different visualization,I will do other data pre-processing.","1287726a":"Decision tree for Top 3 species by counts.Remove the data which WELLWIDTH is greater than 30.\n\nRemove the data which WELLLENGTH is greater than 20.Remove the data which PAREAWIDTH is greater than 20\n\n","e2d84eb1":"Remove the outlier","89ee6d0b":"# 2.Visualization","c664e218":"<h3 id=\"21\">2.1&nbsp;Visualization&nbsp;for&nbsp;species<\/h3>","cb6c7bea":"# 1.DataOverview"}}