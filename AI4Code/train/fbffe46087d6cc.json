{"cell_type":{"bce7f20c":"code","87449998":"code","e9c022af":"code","9650fff3":"code","435b952d":"code","1f6bc149":"code","c4da845f":"code","f14ef40f":"markdown","085ec49d":"markdown","ec0f3d32":"markdown","d0ccc8c7":"markdown","bcbf4747":"markdown","20b0264f":"markdown","cc0be736":"markdown","38802ec8":"markdown"},"source":{"bce7f20c":"import gc\n\nimport numpy as np\nimport pandas as pd\n\nimport pickle\n\npd.set_option('max_columns', None)\n\nimport lightgbm as lgb","87449998":"models = [pickle.load(open(f'..\/input\/lgb-simple\/lgb_model_fold{fold}.pkl', 'rb')) for fold in range(5)]","e9c022af":"n_loop = 5","9650fff3":"train_dfs = pickle.load(open('..\/input\/train-infer\/train_df.pkl', 'rb'))\nsample_prediction_dfs = pickle.load(open('..\/input\/train-infer\/train_submission.pkl', 'rb'))","435b952d":"count = 0\n\nfor (test_df, sample_prediction_df) in zip(train_dfs, sample_prediction_dfs):\n    \n    print('*'*10)\n    print(f'loop{count}')\n    \n    print('test_df')\n    display(test_df)\n    print('sample_prediction_df')\n    display(sample_prediction_df)\n    \n    # Please copy and paste your code for inference below here\n    feat_cols = [col for col in test_df.columns if col not in ['row_id', 'time_id', 'investment_id', 'target']]\n    test_df = test_df[feat_cols]\n    preds = [model.predict(test_df) for model in models]\n    sample_prediction_df['target'] = np.mean(preds, axis=0)\n    # Write anything other than env.predict above this.\n    \n    print('submission')\n    display(sample_prediction_df) \n    \n    count += 1\n    \n    if count > n_loop - 1:\n        break","1f6bc149":"import ubiquant\nenv = ubiquant.make_env()  \niter_test = env.iter_test()","c4da845f":"for (test_df, sample_prediction_df) in iter_test:\n    print('test_df')\n    display(test_df)\n    print('sample_prediction_df')\n    display(sample_prediction_df)\n    \n    env.predict(sample_prediction_df) \n    \n    break","f14ef40f":"Please upvote if this notebook helps.","085ec49d":"# 3.verification","ec0f3d32":"# 1. About This Notebook","d0ccc8c7":"Load the models you want to do outside of the loop below.","bcbf4747":"In the code competition, if an error occurs in a private dataset, Kaggle will not tell us the cause of the error.<br>\nI tried to mimic private data inference using train data.<br>\n<br>\nThe difference between private and public is the difference in memory consumption due to the different number of rows and the unknown investment_id.<br>\nThis Notebook replaces some of the train data with an unknown investment_id (9999) so that it can be verified.<br>\n<br>\nIf you have any suggestions for improvement, please comment.","20b0264f":"# 2. Importing libraries and loading models","cc0be736":"There is no point in letting it run too long, so limit it to 5 loops.<br>\nIf you want to verify memory leaks, etc., change this value as necessary.","38802ec8":"(Reference) You can see that the same as the private dataset below."}}