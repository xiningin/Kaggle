{"cell_type":{"7ccf5be2":"code","41c920d3":"code","0dde8b85":"code","08019918":"code","cbf1ac65":"code","047857bf":"code","a4968194":"code","d6c01ae3":"code","c28209bb":"code","8822af99":"code","16b0abda":"code","f23dbeb1":"code","4e847592":"code","d5d54d7a":"code","5e186f74":"code","749f98b4":"code","e236708f":"code","42d11658":"code","48f4860f":"code","7a399c91":"code","358d6342":"code","56d986c6":"code","3bebb0b1":"code","d675e7bd":"code","b4b1e845":"code","87ebc733":"code","f4d4c453":"code","f82994f2":"code","bb406456":"code","52980c29":"code","2b116867":"code","cefd0a48":"code","237099c5":"code","ea65a691":"code","1d5f574b":"code","9f70a709":"code","4b1e6d69":"code","9dc1483c":"markdown","2e6879e6":"markdown","e208a829":"markdown","6f17cfc1":"markdown","1e60b1f3":"markdown","cda6ee50":"markdown","268134c7":"markdown","84f23c6d":"markdown","cff7bdab":"markdown","2859036a":"markdown","ddc2c491":"markdown","720e9328":"markdown","19b374e3":"markdown","14c65659":"markdown","3d1bce3d":"markdown","b04264ff":"markdown","4a6d71c6":"markdown","1a85ed4c":"markdown","0e5827d3":"markdown","84aa6b75":"markdown","9c6675fd":"markdown","aa25bd12":"markdown","f16e6223":"markdown","4cdc97d8":"markdown"},"source":{"7ccf5be2":"# linear algebra\nimport numpy as np\n# data processing, CSV file I\/O (e.g. pd.read_csv)\nimport pandas as pd\n#Unix commands\nimport os\n\n# import useful tools\nfrom glob import glob\nfrom PIL import Image\nimport cv2\nimport pydicom\nimport scipy.ndimage\nfrom skimage import measure \nfrom mpl_toolkits.mplot3d.art3d import Poly3DCollection\nfrom skimage.morphology import disk, opening, closing\nfrom tqdm import tqdm\nfrom os import listdir, mkdir\nfrom sklearn.decomposition import PCA\nfrom IPython.display import HTML\nfrom PIL import Image\n\n# import data visualization\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as patches\nimport seaborn as sns\nimport plotly.express as px\n\nfrom bokeh.plotting import figure\nfrom bokeh.io import output_notebook, show, output_file\nfrom bokeh.models import ColumnDataSource, HoverTool, Panel\nfrom bokeh.models.widgets import Tabs\n\n# import data augmentation\nimport albumentations as albu\n\n# import math module\nimport math","41c920d3":"#Libraries\nimport pandas_profiling\nimport xgboost as xgb\nfrom sklearn.metrics import log_loss\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn import preprocessing\nfrom sklearn.model_selection import KFold\nfrom sklearn.tree import DecisionTreeRegressor","0dde8b85":"#used for changing color of text in print statement\nfrom colorama import Fore, Back, Style\ny_ = Fore.YELLOW\nr_ = Fore.RED\ng_ = Fore.GREEN\nb_ = Fore.BLUE\nm_ = Fore.MAGENTA\nsr_ = Style.RESET_ALL","08019918":"# One-hot encoding\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.ensemble import RandomForestRegressor","cbf1ac65":"# Setup the paths to train and test images\nDATASET = '..\/input\/lish-moa'\nTEST_DIR_CSV_PATH = '..\/input\/lish-moa\/test_features.csv'\nTEST_FTR_PATH = '..\/input\/lish-moa\/test_features.csv'\nTRAIN_FTR_PATH = '..\/input\/lish-moa\/train_features.csv'\nTRAIN_CSV_NON_PATH = '..\/input\/lish-moa\/train_targets_nonscored.csv'\nTRAIN_CSV_SCR_PATH = '..\/input\/lish-moa\/train_targets_scored.csv'","047857bf":"# Loading training data and test data\ntest_ftr = pd.read_csv(TEST_FTR_PATH)\ntrain_ftr = pd.read_csv(TRAIN_FTR_PATH)\ntrain_csv_non = pd.read_csv(TRAIN_CSV_NON_PATH)\ntrain_csv_scr = pd.read_csv(TRAIN_CSV_SCR_PATH)","a4968194":"df = pd.concat([train_ftr, test_ftr])","d6c01ae3":"#Loading Sample Files for Submission\nsample = pd.read_csv('..\/input\/lish-moa\/sample_submission.csv')\n# Confirmation of the format of samples for submission\nsample.head(3).style.applymap(lambda x: 'background-color:lightsteelblue')","c28209bb":"HTML('<iframe width=\"800\" height=\"500\" src=\"https:\/\/www.youtube.com\/embed\/UMxsZdVrA7A\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>')\n","8822af99":"print('Number of rows in test set: ', test_ftr.shape[0])\nprint('Number of columns in test set: ', test_ftr.shape[1] - 1)","16b0abda":"test_ftr.head(5).style.applymap(lambda x: 'background-color:lightsteelblue')","f23dbeb1":"print('Number of rows in training set: ', train_ftr.shape[0])\nprint('Number of columns in training set: ', train_ftr.shape[1] - 1)","4e847592":"train_ftr.head(5).style.applymap(lambda x: 'background-color:lightsteelblue')","d5d54d7a":"print(f\"{b_}Number of rows in train data: {r_}{train_ftr.shape[0]}\\n{b_}Number of columns in train data: {r_}{train_ftr.shape[1]}\")","5e186f74":"train_csv_non.head(5).style.applymap(lambda x: 'background-color:lightsteelblue')","749f98b4":"print(f\"{b_}Number of rows in train data: {r_}{train_csv_non.shape[0]}\\n{b_}Number of columns in train data: {r_}{train_csv_non.shape[1]}\")","e236708f":"train_csv_scr.head(5).style.applymap(lambda x: 'background-color:lightsteelblue')","42d11658":"print(f\"{b_}Number of rows in train data: {r_}{train_csv_scr.shape[0]}\\n{b_}Number of columns in train data: {r_}{train_csv_scr.shape[1]}\")","48f4860f":"# Check for missing values in the training features data\ntrain_ftr.isnull().sum()","7a399c91":"# Check for missing values in the training targets nonscored data\ntrain_csv_non.isnull().sum()","358d6342":"# Check for missing values in the training targets scored data\ntrain_csv_scr.isnull().sum()","56d986c6":"df.info()","3bebb0b1":"# Number of Gene expression columns\ntrain_ftr.columns.str.startswith('g-').sum()","d675e7bd":"# Number of Cell viability columns\ntrain_ftr.columns.str.startswith('c-').sum()","b4b1e845":"# Check age-related statistics in the Training data\ntrain_ftr.describe().style.applymap(lambda x: 'background-color:yellow')","87ebc733":"# Check age-related statistics in the test data\ntest_ftr.describe().style.applymap(lambda x: 'background-color:lightgreen')","f4d4c453":"train_ftr.groupby( ['cp_type','cp_time','cp_dose'] ).agg( ['mean','std','count'] )","f82994f2":"# coding: utf-8\nfrom tqdm import tqdm\nimport time\n\n# Set the total value \nbar = tqdm(total = 1000)\n# Add description\nbar.set_description('Progress rate')\nfor i in range(100):\n    # Set the progress\n    bar.update(25)\n    time.sleep(1)","bb406456":"plt.figure(figsize=(16, 16))\ncols = [\n    'c-1', 'c-2', 'c-3', 'c-4',\n    'c-5', 'c-6', 'c-7', 'c-8',\n    'c-92', 'c-93', 'c-94', 'c-95', \n    'c-96', 'c-97', 'c-98', 'c-99']\nfor i, col in enumerate(cols):\n    plt.subplot(4, 4, i + 1)\n    plt.hist(train_ftr.loc[:, col], bins=100, alpha=1,color='#00FFFF');\n    plt.title(col)","52980c29":"plt.figure(figsize=(16, 16))\ncols = [\n    'g-1', 'g-2', 'g-3', 'g-4',\n    'g-5', 'g-6', 'g-7', 'g-8',\n    'g-92', 'g-93', 'g-94', 'g-95', \n    'g-96', 'g-97', 'g-98', 'g-99']\nfor i, col in enumerate(cols):\n    plt.subplot(4, 4, i + 1)\n    plt.hist(train_ftr.loc[:, col], bins=100, alpha=1,color='#800080');\n    plt.title(col)","2b116867":"# Draw a pie chart about CPtypes of Training data.\nplt.pie(train_ftr[\"cp_type\"].value_counts(),labels=[\"trt_cp\",\"ctl_vehicle\"],autopct=\"%.1f%%\")\nplt.title(\"Ratio of CPtypes of Training data\")\nplt.show()","cefd0a48":"plt.figure(figsize=(15,5))\nsns.distplot(train_ftr['cp_time'], color='blue', bins=10)\nplt.title(\"Train: Treatment duration \", fontsize=15, weight='bold')\nplt.show()","237099c5":"# Draw a pie chart about CPtypes of Training data.\nplt.pie(train_ftr[\"cp_dose\"].value_counts(),labels=[\"D1\",\"D2\"],autopct=\"%.1f%%\")\nplt.title(\"Ratio of CPdose\")\nplt.show()","ea65a691":"# Set the total value \nbar = tqdm(total = 1000)\n# Add description\nbar.set_description('Progress rate')\nfor i in range(100):\n    # Set the progress\n    bar.update(25)\n    time.sleep(1)","1d5f574b":"plt.figure(figsize=(5,12))\nplt.subplot(3,1,1)\nsplot = sns.countplot(train_ftr[\"cp_type\"],color='#33FFCC')\nfor p in splot.patches:\n    splot.annotate(format(p.get_height(), '.1f'), \n                   (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   xytext = (0, 9), \n                   textcoords = 'offset points')\nplt.title('cp_type')\nplt.subplot(3,1,2)\nsns.countplot(train_ftr['cp_time'],hue=train_ftr['cp_type'],color='#00FF00')\nplt.title('cp_time and cp_type')\nplt.subplot(3,1,3)\nsns.countplot(train_ftr['cp_dose'],hue=train_ftr['cp_type'],color='#00FFFF')\nplt.title('cp_dose and cp_type')\nplt.tight_layout()","9f70a709":"# Calculate Pearson's r using pandas\nres=train_ftr.corr() \n\n# Show correlation matrix\nprint(res)","4b1e6d69":"# View the heat map of the correlation matrix\nsns.heatmap(res,square=True)","9dc1483c":"# Checking data statistics","2e6879e6":"* [Data Description](https:\/\/www.kaggle.com\/c\/lish-moa\/data) says that cp_time and cp_dose indicate treatment duration (24, 48, 72 hours) and dose (high or low).\n* [The cp_dose column](https:\/\/www.kaggle.com\/c\/lish-moa\/discussion\/184005) indicates the dose level used in the experiment. Generally a higher dose will have a stronger effect.","e208a829":"* [Mechanisms of Action (MoA) Prediction. EDA](https:\/\/www.kaggle.com\/isaienkov\/mechanisms-of-action-moa-prediction-eda)\n* [Explorations of Action - MoA EDA](https:\/\/www.kaggle.com\/headsortails\/explorations-of-action-moa-eda)\n* [MoA Prediction: Starter notebook](https:\/\/www.kaggle.com\/ruchi798\/moa-prediction-starter-notebook)\n* [Drugs classification: Mechanisms of Action](https:\/\/www.kaggle.com\/amiiiney\/drugs-classification-mechanisms-of-action)\n* [Mechanisms of Action (MoA) Prediction. EDA](https:\/\/www.kaggle.com\/yutohisamatsu\/mechanisms-of-action-moa-prediction-eda)\n* [The MoA challenge- An analysis of the data](https:\/\/www.kaggle.com\/bibhash123\/the-moa-challenge-an-analysis-of-the-data)","6f17cfc1":"* Therefore, we can conclude that there is no missing training data","1e60b1f3":"* The ratio of D1 to D2 isn't much different.","cda6ee50":"[Code Requirements](https:\/\/www.kaggle.com\/c\/lish-moa\/overview\/code-requirements) say that No internet access enabled.Let's turn off the Internet.","268134c7":"* The ratio of 24h to 48h to 72h isn't much different.","84f23c6d":"# Correlation analysis","cff7bdab":"* [sig_id](https:\/\/clue.io\/connectopedia\/glossary) is a CMap unique identification number assigned to each signature generated from L1000 data.","2859036a":"* The discussion of how to handle the non-scoring data is going on in [this thread](https:\/\/www.kaggle.com\/c\/lish-moa\/discussion\/180429) .","ddc2c491":"# Loading data","720e9328":"# Your upvote will motivate me.","19b374e3":"# Acknowledgements","14c65659":"* Therefore, we can conclude that there is no missing training data","3d1bce3d":"*  cp_type indicates samples treated with a compound (cp_vehicle) or with a control perturbation (ctrl_vehicle).","b04264ff":"# Checking data","4a6d71c6":"* Therefore, we can conclude that there is no missing training data","1a85ed4c":"To be continued.....","0e5827d3":"# Data Visualization","84aa6b75":"# Set Up","9c6675fd":"# Have A Look","aa25bd12":"* Features g- signify gene expression data.","f16e6223":"* Features c- signify cell viability data.","4cdc97d8":"* [Data Description](https:\/\/www.kaggle.com\/c\/lish-moa\/data) says that cp_time and cp_dose indicate treatment duration (24, 48, 72 hours) and dose (high or low).\n* [The cp_time column](https:\/\/www.kaggle.com\/c\/lish-moa\/discussion\/184005) indicates the amount of time elapsed between adding the drug and when the measurement was taken. "}}