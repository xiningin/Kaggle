{"cell_type":{"59dc2e28":"code","6ccc5e19":"code","99e6bb3f":"code","9622bfd1":"code","77f03a6c":"markdown","352b0e90":"markdown","f4560505":"markdown","678b0d77":"markdown"},"source":{"59dc2e28":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\n#\u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u044b \u0432 \u0432\u0438\u0434\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b (id \u0441\u0435\u043c\u044c\u0438, \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442\u044b, \u0440\u0430\u0437\u043c\u0435\u0440 \u0441\u0435\u043c\u044c\u0438)\nfpath = '\/kaggle\/input\/santa-workshop-tour-2019\/family_data.csv'\ndata = pd.read_csv(fpath, index_col='family_id')\n\n#\u0441\u0442\u0430\u0440\u0442\u043e\u0432\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435, \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0435 kaggle\nfpath = '\/kaggle\/input\/santa-workshop-tour-2019\/sample_submission.csv'\nsubmission = pd.read_csv(fpath, index_col='family_id')\n\n#\u0432\u0432\u043e\u0434\u0438\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 min_occ, max_occ - \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u0441\u0435\u0442\u0438\u0442\u0435\u043b\u0435\u0439 \u0437\u0430 \u0434\u0435\u043d\u044c\nmin_occ = 125\nmax_occ = 300\n\n#\u0441\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u044c, \u0433\u0434\u0435 \u043a\u043b\u044e\u0447 - id \u0441\u0435\u043c\u044c\u0438, \u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 - \u0435\u0435 \u0440\u0430\u0437\u043c\u0435\u0440\nfamily_size_dict = data[['n_people']].to_dict()['n_people']\n\n#\u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043c\u0430\u0441\u0441\u0438\u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u0435\u0439. \u043a\u0430\u0436\u0434\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442\u043e\u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0439 \u0441\u0435\u043c\u044c\u0438\nfamily_choices = []\nfor f in range(5000):\n    family_choices.append(data.loc[f,'choice_0':'choice_9'].to_dict())\n\nN_DAYS = 100\n#\u0441\u043f\u0438\u0441\u043a\u0443 \u0434\u043d\u0435\u0439 \u0437\u0430\u0434\u0430\u0435\u0442\u0441\u044f \u043e\u0431\u0440\u0430\u0442\u043d\u044b\u0439 \u043f\u043e\u0440\u044f\u0434\u043e\u043a, \u0442\u0430\u043a \u043a\u0430\u043a \u043e\u0442\u0441\u0447\u0435\u0442 \u0438\u0434\u0435\u0442 \u043e\u0442 \u0440\u043e\u0436\u0434\u0435\u0441\u0442\u0432\u0430 (1 \u0434\u0435\u043d\u044c - 24 \u0434\u0435\u043a\u0430\u0431\u0440\u044f, 2 \u0434\u0435\u043d\u044c - 23 \u0434\u0435\u043a\u0430\u0431\u0440\u044f \u0438\u0442\u0434)\ndays = list(range(N_DAYS,0,-1))\n\n#\u0441\u043b\u043e\u0432\u0430\u0440\u044c {id: \u0440\u0430\u0437\u043c\u0435\u0440 \u0441\u0435\u043c\u044c\u0438} \u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u043f\u043e \u0443\u0431\u044b\u0432\u0430\u043d\u0438\u044e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0447\u0435\u043b\u043e\u0432\u0435\u043a \u0432 \u0441\u0435\u043c\u044c\u0435\nfam_forSort = data['n_people'].to_dict();\nlist_forSort = list(fam_forSort.items())\nfam_sorted = sorted(list_forSort, key=lambda i: i[1], reverse=True)\n\n#\u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0449\u0430\u044f \u043a\u043b\u044e\u0447 \u043f\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e\ndef get_key(arr, value):\n    for k, v in arr.items():\n        if v == value:\n            return k\n    return 'none'\n\n#\u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u044e\u0449\u0430\u044f, \u043d\u0435 \u043f\u0440\u0435\u0432\u043e\u0441\u0445\u043e\u0434\u0438\u0442 \u043b\u0438 \u0447\u0438\u0441\u043b\u043e \u043f\u043e\u0441\u0435\u0442\u0438\u0442\u0435\u043b\u0435\u0439 \u0432 \u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c 200\n#\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 200 \u0432\u044b\u0431\u0440\u0430\u043d\u043e \u0441 \u0446\u0435\u043b\u044c\u044e \u0441\u0431\u0430\u043b\u0430\u043d\u0441\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0447\u0438\u0441\u043b\u043e \u043f\u043e\u0441\u0435\u0442\u0438\u0442\u0435\u043b\u0435\u0439 \u043c\u0435\u0436\u0434\u0443 \u0434\u043d\u044f\u043c\u0438\ng_daily_occupancy = {k:0 for k in days}\ndef get_daily_occupancy(day, n_people):\n    if (g_daily_occupancy[day] + n_people <= 200):\n        g_daily_occupancy[day] += n_people\n        return True\n    else:\n        return False\n\n#\u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u0441\u0447\u0438\u0442\u0430\u044e\u0449\u0430\u044f \u0440\u0430\u0441\u0445\u043e\u0434\u044b \u0434\u043b\u044f \u0440\u0435\u0448\u0435\u043d\u0438\u044f\ndef cost_function(prediction):\n    penalty = 0\n\n    #\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f, \u043f\u043e\u0434\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u044e\u0449\u0430\u044f \u0447\u0438\u0441\u043b\u043e \u043f\u043e\u0441\u0435\u0442\u0438\u0442\u0435\u043b\u0435\u0439 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0434\u043d\u044f\n    daily_occupancy = {k:0 for k in days}\n    \n    #f - id \u0441\u0435\u043c\u044c\u0438, d - \u0434\u0435\u043d\u044c, \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044b\u0439 \u0434\u043b\u044f \u044d\u0442\u043e\u0439 \u0441\u0435\u043c\u044c\u0438\n    for f, d in enumerate(prediction):\n\n       #n - \u0440\u0430\u0437\u043c\u0435\u0440 \u0440\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0435\u043c\u043e\u0439 \u0441\u0435\u043c\u044c\u0438 \n        n = family_size_dict[f]\n        daily_occupancy[d] += n\n        \n        #\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f, \u043a\u0430\u043a\u0438\u043c \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442\u043e\u043c \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0435\u043c\u044c\u0438\n        d_name = get_key(family_choices[f], d)\n\n        #\u0441\u0447\u0438\u0442\u0430\u044e\u0442\u0441\u044f \u0440\u0430\u0441\u0445\u043e\u0434\u044b \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442\u0430\n        if d_name == 'choice_0':\n            penalty += 0\n        elif d_name == 'choice_1':\n            penalty += 50\n        elif d_name == 'choice_2':\n            penalty += 50 + 9 * n\n        elif d_name == 'choice_3':\n            penalty += 100 + 9 * n\n        elif d_name == 'choice_4':\n            penalty += 200 + 9 * n\n        elif d_name == 'choice_5':\n            penalty += 200 + 18 * n\n        elif d_name == 'choice_6':\n            penalty += 300 + 18 * n\n        elif d_name == 'choice_7':\n            penalty += 300 + 36 * n\n        elif d_name == 'choice_8':\n            penalty += 400 + 36 * n\n        elif d_name == 'choice_9':\n            penalty += 500 + 36 * n + 199 * n\n        else:\n            penalty += 500 + 36 * n + 398 * n\n\n    #\u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442\u0441\u044f, \u0441\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043b\u0438 \u0447\u0438\u0441\u043b\u043e \u043f\u043e\u0441\u0435\u0442\u0438\u0442\u0435\u043b\u0435\u0439 \u0440\u0430\u043c\u043a\u0430\u043c, \u0435\u0441\u043b\u0438 \u043d\u0435\u0442 - \u0440\u0430\u0441\u0445\u043e\u0434 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0430\u0441\u0442\u043e\u043b\u044c\u043a\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0435\u0432\u043e\u0441\u0445\u043e\u0434\u0438\u0442\u044c \u043b\u044e\u0431\u043e\u0439 \u0440\u0430\u0431\u043e\u0447\u0438\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\n    for _, v in daily_occupancy.items():\n        if (v > max_occ) or (v < min_occ):\n            penalty += 100000000\n            \n    #\u043f\u043e\u0434\u0441\u0447\u0435\u0442 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0440\u0430\u0441\u0445\u043e\u0434\u043e\u0432\n    #\u0442\u0430\u043a \u043a\u0430\u043a \u0432 \u0444\u043e\u0440\u043c\u0443\u043b\u0435 \u0434\u043b\u044f n-\u0433\u043e \u0434\u043d\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043b\u044f n+1-\u0433\u043e, \u0442\u043e \u0434\u0435\u043d\u044c 100 \u043f\u043e\u0434\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\n    accounting_cost = (daily_occupancy[days[0]]-125.0) \/ 400.0 * daily_occupancy[days[0]]**(0.5)\n    accounting_cost = max(0, accounting_cost)\n\n    #\u043f\u043e\u0434\u0441\u0447\u0435\u0442 \u0434\u043b\u044f \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0445 \u0434\u043d\u0435\u0439 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0433\u043e \u0434\u043d\u044f\n    yesterday_count = daily_occupancy[days[0]]\n    for day in days[1:]:\n        today_count = daily_occupancy[day]\n        diff = abs(today_count - yesterday_count)\n        accounting_cost += max(0, (daily_occupancy[day]-125.0) \/ 400.0 * daily_occupancy[day]**(0.5 + diff \/ 50.0))\n        yesterday_count = today_count\n\n    penalty += accounting_cost\n\n    return penalty, daily_occupancy\n\n\n#\u0441\u0447\u0438\u0442\u0430\u0435\u043c \u0440\u0430\u0441\u0445\u043e\u0434\u044b \u0434\u043b\u044f \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u043e\u0433\u043e \u0440\u0435\u0448\u0435\u043d\u0438\u044f\nbest = submission['assigned_day'].tolist()\nstart_score = cost_function(best)[0]\nprint(start_score)\nnew = best.copy()\n\n#\u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0435\u043c\u044c\u0438 \u0441\u0442\u0430\u0432\u0438\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043d\u044f - 121 (\u0442.\u0435. \u043d\u0435 \u0432\u0445\u043e\u0434\u044f\u0449\u0435\u0435 \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d, \u0447\u0442\u043e\u0431\u044b \u043e\u0441\u0432\u043e\u0431\u043e\u0434\u0438\u0442\u044c \u0432\u0441\u0435 \u0434\u043d\u0438)\nfor i in range(5000):\n    new[i] = 121;\n\n#\u0441\u043f\u0438\u0441\u043e\u043a \u0441\u0435\u043c\u0435\u0439, \u043f\u043e\u043f\u0430\u0432\u0448\u0438\u0445 \u0432 \u0434\u0435\u043d\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442\u0430\nunlucky_arr = []","6ccc5e19":"for fam_id, f in enumerate(fam_sorted):\n    pick=0\n    while pick<10:\n        new[f[0]] = family_choices[f[0]][f'choice_{pick}']\n        ans = get_daily_occupancy(family_choices[f[0]][f'choice_{pick}'], f[1])\n        if pick==9:\n            unlucky_arr.append(f)\n        if (ans==False):\n            pick +=1\n        else: \n            break;\n\n#\u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430 \u0434\u043d\u0435\u0439 \u0432\u044b\u0431\u0438\u0440\u0430\u044e\u0442\u0441\u044f \u0432 under_occ \u0442\u0435, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0441\u0435\u0442\u0438\u0442\u0435\u043b\u0435\u0439 \u043c\u0435\u043d\u044c\u0448\u0435 125\nres_daily_occ = list(cost_function(new)[1].items())\nunder_occ = []\nfor i, k in enumerate(res_daily_occ):\n    if k[1]<125: under_occ.append(k)\n\n#\u0441\u043f\u0438\u0441\u043e\u043a unlucky_arr \u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u043f\u043e \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u043d\u0438\u044e, \u0442\u0430\u043a \u043a\u0430\u043a \u0441\u0435\u043c\u044c\u0438 \u0438\u0437 \u043d\u0435\u0433\u043e \u0431\u0443\u0434\u0443\u0442 \u043f\u0435\u0440\u0435\u043d\u043e\u0441\u0438\u0442\u044c\u0441\u044f \u0432 \u0434\u043d\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435 \u0445\u0432\u0430\u0442\u0438\u043b\u043e \u043f\u043e\u0441\u0435\u0442\u0438\u0442\u0435\u043b\u0435\u0439\n#\u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0441\u0435\u043c\u044c\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0431\u043e\u043b\u044c\u0448\u0435 \u043b\u044e\u0434\u0435\u0439, \u0441\u043a\u043e\u0440\u0435\u0435 \u043e\u0441\u0442\u0430\u043d\u0443\u0442\u0441\u044f \u043d\u0430 \u0441\u0432\u043e\u0435\u043c 10 \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442\u0435, \u0430 \u0442\u0435, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043c\u0435\u043d\u044c\u0448\u0435 - \u043f\u043e\u043f\u0430\u0434\u0443\u0442 \u043d\u0430 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0435 \u0434\u043d\u0438\nunlucky_arr = sorted(unlucky_arr, key=lambda i: i[1])","99e6bb3f":"i=0\nj=0\nwhile (under_occ[j][1]<130) :\n    new[unlucky_arr[i][0]] = under_occ[j][0]\n    tmp=under_occ[j];\n    under_occ.remove(under_occ[j])\n    if (j<len(under_occ)):\n        under_occ.insert(j, (tmp[0],tmp[1]+unlucky_arr[i][1]))\n    else: under_occ.insert(0, (tmp[0],tmp[1]+unlucky_arr[i][1]))\n    if (unlucky_arr):\n        unlucky_arr.remove(unlucky_arr[i])\n    else: break\n    if (under_occ[j][1]>=130):\n        under_occ.remove(under_occ[j])\n    if (len(under_occ)==0):\n        break\n\n#\u0441\u0447\u0438\u0442\u0430\u0435\u043c \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u0440\u0430\u0441\u0445\u043e\u0434\u044b \u0434\u043b\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u0440\u0435\u0448\u0435\u043d\u0438\u044f\nres = cost_function(new)\nprint('penalty = ', res[0])\nprint(res[1])","9622bfd1":"fam_sorted.reverse();\nfor i in range(15):\n    for fam_id, f in enumerate(fam_sorted):\n        for pick in range(10):\n            day = family_choices[f[0]][f'choice_{pick}']\n            temp = new.copy()\n            temp[f[0]] = day # add in the new pick\n            if cost_function(temp)[0] < start_score:\n                new = temp.copy()\n                start_score = cost_function(new)[0]\n                break;\n\n#\u043a\u043e\u0433\u0434\u0430 \u043f\u0435\u0440\u0435\u0431\u043e\u0440 \u0437\u0430\u043a\u0430\u043d\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f, \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0443\nsubmission['assigned_day'] = new\nprint(cost_function(new)[1])\nscore = cost_function(new)[0]\nsubmission.to_csv(f'submission_{score}.csv')\nprint(f'Score: {score}')","77f03a6c":"\u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0434\u043d\u044f \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430 under_occ \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0435: \u043a \u043d\u0435\u043c\u0443 \u043f\u0440\u0438\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0441\u0435\u043c\u044c\u044f \u0438\u0437 unlucky_arr, \u043a \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u043b\u044e\u0434\u0435\u0439 \u0432 \u044d\u0442\u043e\u0442 \u0434\u0435\u043d\u044c \u043f\u0440\u0438\u0431\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0435\u0435 \u0440\u0430\u0437\u043c\u0435\u0440, \u0441\u0435\u043c\u044c\u044f \u0443\u0434\u0430\u043b\u044f\u0435\u0442\u0441\u044f \u0438\u0437 unlucky_arr. \u0415\u0441\u043b\u0438 \u0447\u0438\u0441\u043b\u043e \u043f\u043e\u0441\u0435\u0442\u0438\u0442\u0435\u043b\u0435\u0439 \u0432 \u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c \u043f\u0440\u0435\u0432\u044b\u0441\u0438\u043b\u043e 130, \u0434\u0435\u043d\u044c \u0443\u0434\u0430\u043b\u044f\u0435\u0442\u0441\u044f \u0438\u0437 under_occ => \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043a \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c\u0443. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 130 \u0432\u044b\u0431\u0440\u0430\u043d\u043e \u0437\u0430\u0442\u0435\u043c, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0434\u0438\u0442\u044c \u0441\u0438\u0442\u0443\u0430\u0446\u0438\u044e, \u043a\u043e\u0433\u0434\u0430 \u0441\u0435\u043c\u044c\u044f \u0438\u0437 \u0434\u043d\u044f under_occ[k] (\u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0434\u043e\u0432\u0435\u043b\u0438 \u0434\u043e 125 \u043f\u043e\u0441\u0435\u0442\u0438\u0442\u0435\u043b\u0435\u0439) \u043f\u0435\u0440\u0435\u043d\u043e\u0441\u0438\u0442\u0441\u044f \u043d\u0430 under_occ[k+m] \u0438 \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u0432 under_occ[k] \u0441\u043d\u043e\u0432\u0430 \u043d\u0435 \u0445\u0432\u0430\u0442\u0430\u0435\u0442 \u043f\u043e\u0441\u0435\u0442\u0438\u0442\u0435\u043b\u0435\u0439","352b0e90":"\u0417\u0430\u0434\u0430\u0447\u0430 - \u0434\u0430\u043d\u043e 5000 \u0441\u0435\u043c\u0435\u0439, \u0443 \u043a\u0430\u0436\u0434\u043e\u0439 \u0435\u0441\u0442\u044c \u0442\u043e\u043f-10 \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442\u043d\u044b\u0445 \u0434\u043d\u0435\u0439 (choice_0 - choice_9) \u0434\u043b\u044f \u043f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u044f \u043c\u0443\u0437\u0435\u044f \u0421\u0430\u043d\u0442\u0430 \u041a\u043b\u0430\u0443\u0441\u0430. \u0412 \u0434\u0435\u043d\u044c \u043c\u0443\u0437\u0435\u0439 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043e\u0442 125 \u0434\u043e 300 \u043f\u043e\u0441\u0435\u0442\u0438\u0442\u0435\u043b\u0435\u0439, \u0440\u0430\u0437\u043c\u0435\u0440\u044b \u0441\u0435\u043c\u0435\u0439 \u0434\u0430\u043d\u044b. \u0415\u0441\u043b\u0438 \u0441\u0435\u043c\u044c\u044f \u043d\u0435 \u043f\u043e\u043f\u0430\u0434\u0430\u0435\u0442 \u0432 \u0441\u0432\u043e\u0439 \u043f\u0435\u0440\u0432\u044b\u0439 \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442, \u0442\u043e \u043e\u043d\u0430 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0431\u043e\u043d\u0443\u0441\u044b; \u0447\u0435\u043c \u0434\u0430\u043b\u044c\u0448\u0435 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c \u043e\u0442 choice_0 \u0441\u0435\u043c\u044c\u0438, \u0442\u0435\u043c \u0431\u043e\u043b\u044c\u0448\u0435 \u0431\u043e\u043d\u0443\u0441. \u041a\u0440\u043e\u043c\u0435 \u0442\u043e\u0433\u043e \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0442 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0440\u0430\u0441\u0445\u043e\u0434\u044b \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u043c\u0443\u0437\u0435\u044f \u0432 \u043a\u0430\u0436\u0434\u044b\u0439 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u0434\u0435\u043d\u044c. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0441\u0435\u043c\u044c\u0438 \u043f\u043e \u0434\u043d\u044f\u043c \u0442\u0430\u043a, \u0447\u0442\u043e\u0431\u044b \u043c\u0438\u043d\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0440\u0430\u0441\u0445\u043e\u0434\u044b \u043c\u0443\u0437\u0435\u044f","f4560505":"\u041a\u0430\u0436\u0434\u043e\u0439 \u0441\u0435\u043c\u044c\u0435 \u0432 \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u0443\u043c\u0435\u043d\u044c\u0448\u0435\u043d\u0438\u044f (\u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u0441\u0430\u043c\u044b\u0445 \u043c\u043d\u043e\u0433\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0445) \u0441\u0442\u0430\u0432\u0438\u0442\u0441\u044f \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0435 \u0434\u0435\u043d\u044c \u0438\u0445 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442\u0430 (choice_0). \u0417\u0430\u0442\u0435\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442\u0441\u044f, \u043d\u0435 \u043f\u0440\u0435\u0432\u044b\u0448\u0430\u0435\u0442 \u043b\u0438 \u0447\u0438\u0441\u043b\u043e \u043f\u043e\u0441\u0438\u0442\u0435\u0442\u0435\u043b\u0435\u0439 \u0432 \u044d\u0442\u043e\u0442 \u0434\u0435\u043d\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 200. \u0415\u0441\u043b\u0438 \u043f\u0440\u0435\u0432\u044b\u0448\u0430\u0435\u0442, \u0442\u043e \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 pick \u0438 \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u043c \u0441\u0435\u043c\u044c\u0435 \u0434\u0435\u043d\u044c \u0438\u0445 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442\u0430. \u0415\u0441\u043b\u0438 pick \u0434\u043e\u0445\u043e\u0434\u0438\u0442 \u0434\u043e 9, \u0442\u043e \u0441\u0435\u043c\u044c\u0435 \u0441\u0442\u0430\u0432\u0438\u0442\u0441\u044f \u0434\u0435\u043d\u044c choice_9, \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u044d\u0442\u043e\u0433\u043e \u0434\u043d\u044f \u043f\u0435\u0440\u0435\u043f\u043e\u043b\u043d\u0435\u043d\u043e. \u0421\u0435\u043c\u044c\u044f, \u0434\u043e\u0448\u0435\u0434\u0448\u0430\u044f \u0434\u043e choice_9 \u0437\u0430\u043d\u043e\u0441\u0438\u0442\u0441\u044f \u0432 \u0441\u043f\u0438\u0441\u043e\u043a unlucky_arr. \u041c\u044b \u0431\u0443\u0434\u0435\u043c \u043c\u0435\u043d\u044f\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043d\u0435\u0439 \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u044d\u0442\u0438\u0445 \u0441\u0435\u043c\u0435\u0439 \u0438 \u044d\u0442\u0438\u043c \u0438\u0437\u0431\u0430\u0432\u0438\u043c\u0441\u044f \u043e\u0442 \u043f\u0435\u0440\u0435\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u044b\u0445 \u0434\u043d\u0435\u0439 (\u0442.\u043a. \u043e\u043d\u0438 \u043f\u0435\u0440\u0435\u043f\u043e\u043b\u043d\u044f\u044e\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0437\u0430 \u0441\u0447\u0435\u0442 \u0441\u0435\u043c\u0435\u0439 \u0441 choice_9).","678b0d77":"\u0421\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u0435\u043c\u0435\u0439 \u043f\u043e \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u043d\u0438\u044e \u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0433\u0435\u043d\u0435\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c. \u0417\u0430\u0447\u0435\u043c \u043f\u043e \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u043d\u0438\u044e? \u041d\u0430 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u0434\u043b\u044f \u0431\u043e\u043b\u044c\u0448\u0438\u0445 \u0441\u0435\u043c\u0435\u0439 \u0443\u0447\u0442\u0435\u043d\u044b \u0438\u0445 \u043f\u043e\u0436\u0435\u043b\u0430\u043d\u0438\u044f, \u0430 \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0438\u0435 \u0441\u0435\u043c\u044c\u0438 \u0440\u0430\u0437\u043d\u0435\u0441\u0435\u043d\u044b \u043a\u0430\u043a \u043f\u0440\u0438\u0434\u0435\u0442\u0441\u044f. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u0441\u0435\u0439\u0447\u0430\u0441 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u043d\u0435 \u043f\u0435\u0440\u0435\u043f\u043e\u043b\u043d\u0435\u043d\u044b, \u0430 \u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e, \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u0434\u0430\u0432\u0430\u0442\u044c \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0438\u043c \u0441\u0435\u043c\u044c\u044f\u043c \u0438\u0445 \u043f\u0435\u0440\u0432\u044b\u0435 \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442\u044b. \u0415\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0440\u0430\u0441\u0445\u043e\u0434\u043e\u0432 \u0443\u043c\u0435\u043d\u044c\u0448\u0430\u0435\u0442\u0441\u044f, \u0442\u043e \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0437\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u0435\u0442 \u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442\u0430 \u0434\u043b\u044f \u0440\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0435\u043c\u043e\u0439 \u0441\u0435\u043c\u044c\u0438 \u0438 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u0442 \u043a \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439. \u0414\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0435\u0431\u043e\u0440 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u0435\u0442\u0441\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0437, \u0442\u0430\u043a \u043a\u0430\u043a \u043f\u0435\u0440\u0435\u043d\u043e\u0441 \u0441\u0435\u043c\u0435\u0439 \u043d\u0430 \u0431\u043e\u043b\u0435\u0435 \u0432\u044b\u0441\u043e\u043a\u0438\u0435 \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442\u044b \u043e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0430\u0435\u0442 \u0434\u043d\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e\u043c \u043f\u0435\u0440\u0435\u0431\u043e\u0440\u0435 \u043c\u043e\u0433\u0443\u0442 \u043e\u043a\u0430\u0437\u0430\u0442\u044c\u0441\u044f \u0431\u043e\u043b\u0435\u0435 \u0432\u044b\u0441\u043e\u043a\u0438\u043c\u0438 \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442\u0430\u043c\u0438 \u0443 \u0434\u0440\u0443\u0433\u0438\u0445 \u0441\u0435\u043c\u0435\u0439"}}