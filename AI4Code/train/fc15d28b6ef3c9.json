{"cell_type":{"ae26f9d7":"code","0b04cd5f":"code","44e98cac":"code","09997c3e":"code","baab285b":"code","96613cd8":"code","2a5a9323":"code","efb39381":"code","a52da79c":"code","84a54193":"code","b1e45bce":"code","6cda109c":"code","29d2fb06":"code","0aa18702":"code","4a12b3dd":"code","2490aceb":"code","da9c9429":"code","8ba2e2d1":"code","27a95af6":"code","a6ec88c5":"code","144b39ab":"code","3adb9c20":"code","255da0d6":"code","344b3c50":"code","5f386fae":"code","4c3a0790":"code","d6a369d0":"code","635c2916":"code","50ed8960":"code","22c935a0":"code","d31bc5b8":"code","8b7ac5d9":"code","9090cc0e":"code","ba7d1c98":"code","c29d2f75":"code","bd8070a2":"code","222e5537":"code","b085b8f3":"code","c6c68e8e":"markdown","a064aef2":"markdown","10b25e88":"markdown","ea867cd9":"markdown","1c6b03fc":"markdown","3e3a3cdf":"markdown","e74e6cd4":"markdown","40c37090":"markdown","ee5635d0":"markdown","9a931e14":"markdown","279e3941":"markdown","c05265e1":"markdown","5a916e81":"markdown","61274864":"markdown","b07e0db5":"markdown","8c9360f5":"markdown","d10e5f6f":"markdown","ead1dd7b":"markdown","49c0adb1":"markdown","671ce90a":"markdown"},"source":{"ae26f9d7":"!pip install pycaret","0b04cd5f":"import numpy as np\nimport pandas as pd\nimport category_encoders as ce\nimport seaborn as sns\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.model_selection import train_test_split\nfrom pycaret.regression import *\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error as MSE\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import r2_score\nfrom sklearn.inspection import permutation_importance\nimport catboost as cb\n","44e98cac":"df=pd.read_csv('..\/input\/pizza-price-prediction\/pizza_v1.csv')","09997c3e":"df.head()","baab285b":"# Number of rows in dataset \ndf.size","96613cd8":"# checking for null values\ndf.isnull().sum()","2a5a9323":"# splitting into categorical and numerical columns\ndf_numerical=df.select_dtypes(exclude=['object'])\ndf_categorical=df.select_dtypes(include=['object'])","efb39381":"df.dtypes","a52da79c":"# cleaning the categorical columns\ndf['company'].value_counts()\ndf[\"price_rupiah\"].value_counts()","84a54193":"df.rename(columns = {'price_rupiah':'Cost','company':'Company','diameter':'Diameter','variant':'Variant','size':'Size','extra_sauce':'Extra_sauce','extra_cheese':'Extra_cheese'}, inplace = True)","b1e45bce":"df.columns","6cda109c":"plt.figure(figsize=(10,8))\nplt.pie(df['Company'].value_counts(),autopct='%.1f',labels=df['Company'].unique())\nplt.title('Companies Weigtage')\nplt.show()","29d2fb06":"sns.boxplot(x=\"Company\", y=\"Diameter\", data=df)\nplt.show()","0aa18702":"sns.boxplot(x=\"topping\", y=\"Diameter\", data=df)\nplt.xticks(rotation =90)\nplt.show()","4a12b3dd":"df_company=df.groupby('Company').agg({'Company':['count']})\nsns.kdeplot(df['Company'].value_counts(), color='r', shade=True)","2490aceb":"df_company=df.groupby('topping').agg({'topping':['count']})\nsns.kdeplot(df['topping'].value_counts(), color='r', shade=True)","da9c9429":"sns.histplot(data=df, x=\"Company\",hue='Extra_cheese')","8ba2e2d1":"sns.histplot(data=df, x=\"Company\",hue='Extra_sauce')","27a95af6":"#encodded columns\nencoding_columns=['Company','topping','Variant','Size','Extra_sauce','Extra_cheese']","a6ec88c5":"# cost cleaning\ndef refining_cost(col,df):\n    df[col]=df[col].map(lambda x:x.replace('Rp',''))\n    df[col]=df[col].map(lambda x:x.replace(',',''))\n    ","144b39ab":"def categorical_encoding(value,df):\n    one_hot_encoder=ce.OneHotEncoder(cols=value,return_df=True,use_cat_names=True)\n    df_final = one_hot_encoder.fit_transform(df)\n    return df_final\n        \n       \n    \n        ","3adb9c20":"df=categorical_encoding(\"Company\",df)\ndf=categorical_encoding(\"topping\",df)\ndf=categorical_encoding('Variant',df)\ndf=categorical_encoding('Size',df)\ndf=categorical_encoding(\"Extra_sauce\",df)\ndf=categorical_encoding('Extra_cheese',df)\n","255da0d6":"refining_cost('Cost',df)","344b3c50":"df['Cost']=df['Cost'].astype('float64')","5f386fae":"df.dtypes","4c3a0790":"X=df.drop(['Cost'],axis=1)\nY=df['Cost']","d6a369d0":"print(X.shape)","635c2916":"X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.2, random_state=1372)","50ed8960":"X_train, X_test, y_train, y_test=np.array(X_train), np.array(X_test), np.array(y_train), np.array(y_test)","22c935a0":"scaler = MinMaxScaler()\nX_train=scaler.fit_transform(X_train)\nX_test=scaler.transform(X_test)\nX_train=scaler.fit_transform(X_train)\nX_test=scaler.transform(X_test)\n","d31bc5b8":"scaler = MinMaxScaler()\ny_train=scaler.fit_transform(y_train.reshape(-1,1))\ny_test=scaler.transform(y_test.reshape(-1,1))","8b7ac5d9":"y_test","9090cc0e":"\nclf = setup(df, target = 'Cost',normalize=True)","ba7d1c98":"df","c29d2f75":"compare_models()","bd8070a2":"model = create_model('catboost')","222e5537":"train_dataset = cb.Pool(X_train, y_train) \ntest_dataset = cb.Pool(X_test, y_test)\nmodel = cb.CatBoostRegressor(loss_function=\"RMSE\")\ngrid = {'iterations': [100, 150, 200],\n        'learning_rate': [0.03, 0.1],\n        'depth': [2, 4, 6, 8],\n        'l2_leaf_reg': [0.2, 0.5, 1, 3]}\nmodel.grid_search(grid, train_dataset)\npred = model.predict(X_test)\nrmse = (np.sqrt(mean_squared_error(y_test, pred)))\nr2 = r2_score(y_test, pred)\n\n\n\n\n","b085b8f3":"print(\"RMSE: {:.2f}\".format(rmse))\nprint(\"R2: {:.2f}\".format(r2))","c6c68e8e":"<h3>Splitting into categorical and numerical columns<\/h3>","a064aef2":"<h3>Pycaret will be able to come up with a efficient models<\/h3>","10b25e88":"<h3>Our machine learning model can understand only numbers, So we should convert the categorical columns into numerical .So that\n    we are able to come with a better fit of the data<\/h3>\n<img src='https:\/\/media3.giphy.com\/media\/26TFT7az4DofCxqShL\/giphy.gif?cid=ecf05e47ubqnhg3cwc6uao5nr6rqa1y6x6jun0a11yfuzlle&rid=giphy.gif&ct=g'>\n\n    ","ea867cd9":"<h3>Important custom function for data cleaning <\/h3>","1c6b03fc":"<h3>Renaming the columns<\/h3>","3e3a3cdf":"<h4>Refining cost is used to replace some reduntant symbols in the \"Cost\" column<\/h4>","e74e6cd4":"# **Guessing pizza price prediction with topping,diameter.....etc.**","40c37090":"<H3>RMSE is calculated for evaluvating for the cat boost regressor<\/H3>","ee5635d0":"<h4>PyCaret is an open-source, low-code machine learning library in Python that aims to reduce the cycle time from hypothesis to insights. It is well suited for seasoned data scientists who want to increase the productivity of their ML experiments by using PyCaret in their workflows or for citizen data scientists and those new to data science with little or no background in coding.<\/h4>","9a931e14":"<h3>Scaling the data to get a more genralized model,which could allocate proper weightage to each\n    and every features in training set<\/h3>\n<img src='https:\/\/media.giphy.com\/media\/3o7TKx9IHKtbtSo3Mk\/giphy.gif'>","279e3941":"<h4>Total number of rows in the dataset<\/h4>","c05265e1":"<h4>Reading the data from the csv file using pandas inbulit package for handling csv datastructures\u270c\ufe0f <\/h4>","5a916e81":"# DATAFLOW:\n1. Data Collection\n2. Data cleaning and checking\n3. Visualize data and checking\n4. spliting the data\n5. best-fit model with pycaret \ud83d\ude0a\n6. evaluation metric","61274864":"<p>we have to choose the model with highest coefficient of dtermination<\/p>","b07e0db5":"# Importing the required packages","8c9360f5":"<H3>Data Visualization<?H3>","d10e5f6f":"<h4>categorical_encoding is used to encode the categorical values into numerical values<\/h4>","ead1dd7b":"<h3>Splitting Our data into train and test <\/h3>","49c0adb1":"<h3>No null values\ud83d\ude0b<\/h3>","671ce90a":"<img style=\"{margin-left:50px}\" src=\"https:\/\/c.tenor.com\/XMeGq6VyxQoAAAAC\/friends-joey-tribbiani.gif\">"}}