{"cell_type":{"c511b4a7":"code","f1f90df1":"code","3d5ab0a1":"code","d140a956":"code","a1c61c7a":"code","13277d5b":"code","6b60807c":"code","0ae08433":"code","880e6527":"code","6a0c27fa":"code","63e0dc4f":"code","300ce655":"code","504aba84":"code","0419abd2":"code","028a0a83":"code","862af54d":"code","c3a0c1dc":"code","4fa7361d":"code","950a8667":"code","0b2a8084":"markdown","a7b41aa0":"markdown","aefc459f":"markdown","88c82c55":"markdown","f760c1e8":"markdown"},"source":{"c511b4a7":"import numpy as np\nimport pylab as pl\nimport pandas as pd\nimport matplotlib.pyplot as plt \n%matplotlib inline\nimport seaborn as sns\nfrom sklearn.utils import shuffle\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import confusion_matrix,classification_report\nfrom sklearn.model_selection import cross_val_score, GridSearchCV\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","f1f90df1":"train = pd.read_csv(\"..\/input\/fatality-analysis-reporting-system-data\/fars_train.csv\")\ntest = pd.read_csv(\"..\/input\/fatality-analysis-reporting-system-data\/fars_test.csv\")","3d5ab0a1":"train.info()\ntrain[0:10]","d140a956":"train1 = train[['AGE','INJURY_SEVERITY']]\ntrain1 = train[pd.notnull(train['AGE'])]\ntrain1.rename(columns = {'AGE':'AGE'}, inplace = True)\ntrain1.head(10)","a1c61c7a":"# Distribution of INJURY_SEVERITY\ntrain.INJURY_SEVERITY.value_counts()[0:30].plot(kind='bar')\nplt.show()","13277d5b":"train1 = train[['CASE_STATE','AGE','SEX','PERSON_TYPE','SEATING_POSITION','RESTRAINT_SYSTEM-USE','AIR_BAG_AVAILABILITY\/DEPLOYMENT','EJECTION','EJECTION_PATH','EXTRICATION','NON_MOTORIST_LOCATION','NON_MOTORIST_LOCATION','POLICE_REPORTED_ALCOHOL_INVOLVEMENT','METHOD_ALCOHOL_DETERMINATION',\n          'ALCOHOL_TEST_TYPE','ALCOHOL_TEST_RESULT','POLICE-REPORTED_DRUG_INVOLVEMENT','METHOD_OF_DRUG_DETERMINATION','DRUG_TEST_RESULTS_(1_of_3)','DRUG_TEST_TYPE_(2_of_3)','DRUG_TEST_RESULTS_(2_of_3)','DRUG_TEST_TYPE_(3_of_3)','DRUG_TEST_RESULTS_(3_of_3)',\n          'HISPANIC_ORIGIN','TAKEN_TO_HOSPITAL','RELATED_FACTOR_(1)-PERSON_LEVEL','RELATED_FACTOR_(2)-PERSON_LEVEL','RELATED_FACTOR_(3)-PERSON_LEVEL','RACE','INJURY_SEVERITY']] #Subsetting the data\ncor = train1.corr() #Calculate the correlation of the above variables\nsns.heatmap(cor, square = True) #Plot the correlation as heat map","6b60807c":"#Frequency distribution of classes\"\ntrain_outcome = pd.crosstab(index=train[\"INJURY_SEVERITY\"],  # Make a crosstab\n                              columns=\"count\")      # Name the count column\n\ntrain_outcome","0ae08433":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\ndef FunLabelEncoder(df):\n    for c in df.columns:\n        if df.dtypes[c] == object:\n            le.fit(df[c].astype(str))\n            df[c] = le.transform(df[c].astype(str))\n    return df","880e6527":"train = FunLabelEncoder(train)\ntrain.info()\ntrain.iloc[235:300,:]","6a0c27fa":"test.info()\ntest[0:10]","63e0dc4f":"test = FunLabelEncoder(train)\ntest.info()\ntest.iloc[235:300,:]","300ce655":"print(\"Any missing sample in training set:\",train.isnull().values.any())\nprint(\"Any missing sample in test set:\",test.isnull().values.any(), \"\\n\")","504aba84":"\nfeatures=['CASE_STATE','AGE','SEX','PERSON_TYPE','SEATING_POSITION','RESTRAINT_SYSTEM-USE','AIR_BAG_AVAILABILITY\/DEPLOYMENT','EJECTION','EJECTION_PATH','EXTRICATION','NON_MOTORIST_LOCATION','NON_MOTORIST_LOCATION','POLICE_REPORTED_ALCOHOL_INVOLVEMENT','METHOD_ALCOHOL_DETERMINATION',\n          'ALCOHOL_TEST_TYPE','ALCOHOL_TEST_RESULT','POLICE-REPORTED_DRUG_INVOLVEMENT','METHOD_OF_DRUG_DETERMINATION','DRUG_TEST_RESULTS_(1_of_3)','DRUG_TEST_TYPE_(2_of_3)','DRUG_TEST_RESULTS_(2_of_3)','DRUG_TEST_TYPE_(3_of_3)','DRUG_TEST_RESULTS_(3_of_3)',\n          'HISPANIC_ORIGIN','TAKEN_TO_HOSPITAL','RELATED_FACTOR_(1)-PERSON_LEVEL','RELATED_FACTOR_(2)-PERSON_LEVEL','RELATED_FACTOR_(3)-PERSON_LEVEL','RACE']\ntarget = 'INJURY_SEVERITY'","0419abd2":"#This is input which our classifier will use as an input.\ntrain[features].head(10)","028a0a83":"#Display first 10 target variables\ntrain[target].head(10).values","862af54d":"from sklearn.neural_network import MLPClassifier\nmlp = MLPClassifier(hidden_layer_sizes=(100,100,100),max_iter=1000, random_state=42)\n\n# We train model\nmlp.fit(train[features],train[target]) \n\n\n","c3a0c1dc":"#Make predictions using the features from the test data set\npredictions = mlp.predict(test[features])\n\n#Display our predictions\npredictions","4fa7361d":"submission = pd.DataFrame({'AGE':test['AGE'],'INJURY_SEVERITY':predictions})\n\n#Visualize the first 5 rows\nsubmission.head()","950a8667":"#Convert DataFrame to a csv file that can be uploaded\n#This is saved in the same directory as your notebook\nfilename = 'submission.csv'\n\nsubmission.to_csv(filename,index=False)\n\nprint('Saved file: ' + filename)","0b2a8084":"Transform data train","a7b41aa0":"I have found an interesting dataset : Fatality Analysis Reporting System Data,\nit contains 30 features:\n\n 0   CASE_STATE                          \n 1   AGE                                  \n 2   SEX                                  \n 3   PERSON_TYPE                          \n 4   SEATING_POSITION                     \n 5   RESTRAINT_SYSTEM-USE                 \n 6   AIR_BAG_AVAILABILITY\/DEPLOYMENT      \n 7   EJECTION                             \n 8   EJECTION_PATH                        \n 9   EXTRICATION                         \n 10  NON_MOTORIST_LOCATION                \n 11  POLICE_REPORTED_ALCOHOL_INVOLVEMENT  \n 12  METHOD_ALCOHOL_DETERMINATION         \n 13  ALCOHOL_TEST_TYPE                   \n 14  ALCOHOL_TEST_RESULT                   \n 15  POLICE-REPORTED_DRUG_INVOLVEMENT     \n 16  METHOD_OF_DRUG_DETERMINATION         \n 17  DRUG_TEST_TYPE                       \n 18  DRUG_TEST_RESULTS_(1_of_3)           \n 19  DRUG_TEST_TYPE_(2_of_3)              \n 20  DRUG_TEST_RESULTS_(2_of_3)           \n 21  DRUG_TEST_TYPE_(3_of_3)              \n 22  DRUG_TEST_RESULTS_(3_of_3)            \n 23  HISPANIC_ORIGIN                      \n 24  TAKEN_TO_HOSPITAL                    \n 25  RELATED_FACTOR_(1)-PERSON_LEVEL      \n 26  RELATED_FACTOR_(2)-PERSON_LEVEL      \n 27  RELATED_FACTOR_(3)-PERSON_LEVEL      \n 28  RACE   \n 29  INJURY_SEVERITY \n \n source data: https:\/\/www.kaggle.com\/adedigbadeola\/fatality-analysis-reporting-system-data\n ","aefc459f":"# Plotting Heatmap\nHeatmap can be defined as a method of graphically representing numerical data where individual data points contained in the matrix are represented using different colors. The colors in the heatmap can denote the frequency of an event, the performance of various metrics in the data set, and so on. Different color schemes are selected by varying businesses to present the data they want to be plotted on a heatmap [2].","88c82c55":"Here, we tried to predict injury severity using the MLP algorithm:\nMulti-layer Perceptron (MLP) is a supervised learning algorithm that learns a function \n by training on a dataset, where  is the number of dimensions for input and  is the number of dimensions for output. Given a set of features \n and a target , it can learn a non-linear function approximator for either classification or regression. It is different from logistic regression, in that between the input and the output layer, there can be one or more non-linear layers, called hidden layers. Figure 1 shows a one hidden layer MLP with scalar output.\nhttps:\/\/scikit-learn.org\/stable\/modules\/neural_networks_supervised.html","f760c1e8":"Transform data train"}}