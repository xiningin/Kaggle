{"cell_type":{"aaea1422":"code","a337e54d":"code","274fdfc7":"code","2ea99403":"code","1d5ef5a3":"code","32d78c20":"code","018741a4":"code","bc4ba419":"code","4b126f20":"code","39d830e5":"code","be415748":"code","d0948368":"code","e1932b3b":"code","6587ee51":"code","d9673651":"code","53b8c1e5":"code","dfc425a8":"code","3fec83a4":"code","eb845fb8":"code","bb38640d":"code","2a1095fe":"code","32b7f400":"code","44a2b042":"code","7599b3d4":"code","af86d6b1":"code","dfd9a44f":"code","b12444da":"code","446af814":"code","132aea39":"code","76cf5dd2":"code","c5065fcb":"code","3570e643":"code","0a9cc3f5":"code","32350c4d":"code","b3031150":"code","2b5b6f04":"code","5ab133f0":"code","49d8c9c9":"code","c374b626":"code","8a987061":"code","196bd52a":"code","8edda502":"code","e233773e":"code","18262004":"code","ee22e4eb":"code","4d3f257f":"code","90a756b7":"code","48575013":"code","d9eeac47":"code","731e021a":"code","28853baa":"code","c6e1a5ac":"code","a8aae7b0":"code","d24655af":"code","a17a02f2":"code","f31b84ae":"code","4263f7e4":"code","f9198d2c":"code","ed92dbcd":"code","54c12772":"code","69ed5ef5":"code","03676467":"code","b7455735":"code","f5afc3a0":"code","ab9bfd3a":"markdown","adba6203":"markdown","4ff72e8c":"markdown","0fe06e61":"markdown"},"source":{"aaea1422":"import pandas as pd\nimport numpy as np\nimport warnings\nwarnings.filterwarnings('ignore')\nimport matplotlib.pyplot as plt\nimport seaborn as sns","a337e54d":"train_df = pd.read_excel(\"Data_Train.xlsx\")\ntest_df = pd.read_excel(\"Test_set.xlsx\")","274fdfc7":"train_df.head()","2ea99403":"test_df.head()","1d5ef5a3":"big_df = train_df.append(test_df,sort=False)","32d78c20":"big_df.tail()","018741a4":"big_df.dtypes","bc4ba419":"big_df['Date']  = big_df['Date_of_Journey'].str.split('\/').str[0]\nbig_df['Month'] = big_df['Date_of_Journey'].str.split('\/').str[1]\nbig_df['Year']  = big_df['Date_of_Journey'].str.split('\/').str[2]\nbig_df.head()","4b126f20":"big_df.dtypes","39d830e5":"big_df['Date']  = big_df['Date'].astype(int)\nbig_df['Month'] = big_df['Month'].astype(int)\nbig_df['Year']  = big_df['Year'].astype(int)","be415748":"big_df.dtypes","d0948368":"big_df = big_df.drop('Date_of_Journey',axis=1)","e1932b3b":"big_df.head()","6587ee51":"big_df['Arrival_Time'] = big_df['Arrival_Time'].str.split(' ').str[0]\nbig_df.head()","d9673651":"big_df.isnull().sum()","53b8c1e5":"big_df[big_df['Total_Stops'].isnull()]","dfc425a8":"big_df['Total_Stops'] = big_df['Total_Stops'].fillna('1 stop')","3fec83a4":"big_df['Total_Stops'] = big_df['Total_Stops'].replace('non-stop', '0 stop')","eb845fb8":"big_df.head()","bb38640d":"big_df['stop'] = big_df['Total_Stops'].str.split(' ').str[0]","2a1095fe":"big_df.head()","32b7f400":"big_df['stop'] = big_df['stop'].astype(int)","44a2b042":"big_df = big_df.drop('Total_Stops',axis=1)","7599b3d4":"big_df.head()","af86d6b1":"big_df.dtypes","dfd9a44f":"big_df['Arrival_Hour']     = big_df['Arrival_Time'].str.split(':').str[0]\nbig_df['Arrival_Minute']   = big_df['Arrival_Time'].str.split(':').str[1]\nbig_df['Departure_Hour']   = big_df['Dep_Time'].str.split(':').str[0]\nbig_df['Departure_Minute'] = big_df['Dep_Time'].str.split(':').str[1]","b12444da":"big_df['Arrival_Hour'] = big_df['Arrival_Hour'].astype(int)\nbig_df['Arrival_Minute'] = big_df['Arrival_Minute'].astype(int)\nbig_df['Departure_Hour'] = big_df['Departure_Hour'].astype(int)\nbig_df['Departure_Hour'] = big_df['Departure_Hour'].astype(int)","446af814":"big_df = big_df.drop(['Arrival_Time','Dep_Time'],axis=1)","132aea39":"big_df.head()","76cf5dd2":"big_df.Route.unique()","c5065fcb":"big_df['Route_1'] = big_df['Route'].str.split('\u2192 ').str[0]\nbig_df['Route_2'] = big_df['Route'].str.split('\u2192 ').str[1]\nbig_df['Route_3'] = big_df['Route'].str.split('\u2192 ').str[2]\nbig_df['Route_4'] = big_df['Route'].str.split('\u2192 ').str[3]\nbig_df['Route_5'] = big_df['Route'].str.split('\u2192 ').str[4]\nbig_df['Route_6'] = big_df['Route'].str.split('\u2192 ').str[5]","3570e643":"big_df.head()","0a9cc3f5":"big_df['Route_1'].fillna('None',inplace=True)\nbig_df['Route_2'].fillna('None',inplace=True)\nbig_df['Route_3'].fillna('None',inplace=True)\nbig_df['Route_4'].fillna('None',inplace=True)\nbig_df['Route_5'].fillna('None',inplace=True)\nbig_df['Route_6'].fillna('None',inplace=True)","32350c4d":"big_df.head()","b3031150":"big_df = big_df.drop(['Duration','Route'],axis=1)","2b5b6f04":"big_df.head()","5ab133f0":"big_df[big_df['Price'].isnull()]","49d8c9c9":"big_df['Price'].fillna(big_df['Price'].mean(),inplace=True)","c374b626":"big_df.isnull().sum()","8a987061":"big_df.head()","196bd52a":"from sklearn.preprocessing import LabelEncoder\nencoder = LabelEncoder()\nbig_df['Airline'] = encoder.fit_transform(big_df['Airline'])\nbig_df['Source'] = encoder.fit_transform(big_df['Source'])\nbig_df['Destination'] = encoder.fit_transform(big_df['Destination'])\nbig_df['Additional_Info'] = encoder.fit_transform(big_df['Additional_Info'])\nbig_df['Route_1'] = encoder.fit_transform(big_df['Route_1'])\nbig_df['Route_2'] = encoder.fit_transform(big_df['Route_2'])\nbig_df['Route_3'] = encoder.fit_transform(big_df['Route_3'])\nbig_df['Route_4'] = encoder.fit_transform(big_df['Route_4'])\nbig_df['Route_5'] = encoder.fit_transform(big_df['Route_5'])\nbig_df['Route_6'] = encoder.fit_transform(big_df['Route_6'])","8edda502":"big_df.head()","e233773e":"from sklearn.linear_model import Lasso\nfrom sklearn.feature_selection import SelectFromModel","18262004":"df_train = big_df[:10683]\ndf_test = big_df[10683:]","ee22e4eb":"X = df_train.drop('Price',axis=1)\ny = df_train['Price']","4d3f257f":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3,random_state=0)","90a756b7":"model = SelectFromModel(Lasso(alpha=0.005,random_state=0))","48575013":"model.fit(X_train,y_train)","d9eeac47":"model.get_support()","731e021a":"selected_features = X_train.columns[(model.get_support())]","28853baa":"selected_features","c6e1a5ac":"X_train = X_train.drop('Year',axis=1)","a8aae7b0":"X_test=X_test.drop(['Year'],axis=1)","d24655af":"from sklearn.model_selection import RandomizedSearchCV","a17a02f2":"# number of trees\nn_estimators = [int(x) for x in np.linspace(start=100,stop=1200,num=12)]\n# number of fetaures to consider at every split\nmax_features = ['auto','sqrt']\n# max level in tree\nmax_depth = [int(x) for x in np.linspace(5,30,num=6)]\n# min sample required for split\nmin_samples_split = [2,5,10,15,100]\n# min samples at each leaf node\nmin_samples_leaf = [1,2,5,10]","f31b84ae":"# create a random grid\nrandom_grid = {'n_estimators': n_estimators,\n               'max_features': max_features,\n               'max_depth': max_depth,\n               'min_samples_split': min_samples_split,\n               'min_samples_leaf': min_samples_leaf}\nprint(random_grid)","4263f7e4":"# use the random search to find best hyper parameters\n# first create a base model to tune\nfrom sklearn.ensemble import RandomForestRegressor\nrf = RandomForestRegressor()","f9198d2c":"# search of parameters\nrf_random = RandomizedSearchCV(estimator=rf,param_distributions=random_grid,scoring='neg_mean_squared_error',n_iter=50,cv=5,verbose=2,random_state=42,n_jobs=1)","ed92dbcd":"rf_random.fit(X_train,y_train)","54c12772":"y_pred = rf_random.predict(X_test)","69ed5ef5":"sns.distplot(y_test-y_pred)","03676467":"plt.scatter(y_test,y_pred,c='black')","b7455735":"from sklearn import metrics\nprint('MAE:', metrics.mean_absolute_error(y_test, y_pred))\nprint('MSE:', metrics.mean_squared_error(y_test, y_pred))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))","f5afc3a0":"print(\"R2 Score of Our Model is : \",metrics.r2_score(y_test, y_pred))","ab9bfd3a":"### Random Forest Regressor","adba6203":"### Predict The Flight Ticket Price Hackathon\nFlight ticket prices can be something hard to guess, today we might see a price, check out the price of the same flight tomorrow, it will be a different story. We might have often heard travellers saying that flight ticket prices are so unpredictable. Huh! Here we take on the challenge! As data scientists, we are gonna prove that given the right data anything can be predicted. Here you will be provided with prices of flight tickets for various airlines between the months of March and June of 2019 and between various cities.\n\nSize of training set: 10683 records\n\nSize of test set: 2671 records\n\nFEATURES: Airline: The name of the airline.\n\nDate_of_Journey: The date of the journey\n\nSource: The source from which the service begins.\n\nDestination: The destination where the service ends.\n\nRoute: The route taken by the flight to reach the destination.\n\nDep_Time: The time when the journey starts from the source.\n\nArrival_Time: Time of arrival at the destination.\n\nDuration: Total duration of the flight.\n\nTotal_Stops: Total stops between the source and destination.\n\nAdditional_Info: Additional information about the flight\n\nPrice: The price of the ticket","4ff72e8c":"### feature engineering","0fe06e61":"### Feature Selection"}}