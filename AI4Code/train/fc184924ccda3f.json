{"cell_type":{"9bf237b1":"code","1d278036":"code","6346def8":"code","0e02c7c7":"code","c1ac8892":"code","24526e0e":"markdown"},"source":{"9bf237b1":"import pandas as pd\nfrom sklearn import preprocessing\nfrom tqdm import tqdm","1d278036":"# load data\ntrain = pd.read_csv('\/home\/gargi\/Documents\/comp\/AmesHousing.csv')\ntrain.drop(['PID'], axis=1, inplace=True)\n\norigin = pd.read_csv('\/home\/gargi\/Documents\/comp\/train.csv')\ntrain.columns = origin.columns\n\ntest = pd.read_csv('\/home\/gargi\/Documents\/comp\/test.csv')\nsubmission = pd.read_csv('\/home\/gargi\/Documents\/comp\/sample_submission.csv')\n\nprint('Train:{}   Test:{}'.format(train.shape,test.shape))","6346def8":"# drop missing values\nmissing = test.isnull().sum()\nmissing = missing[missing>0]\ntrain.drop(missing.index, axis=1, inplace=True)\ntrain.drop(['Electrical'], axis=1, inplace=True)\n\ntest.dropna(axis=1, inplace=True)\ntest.drop(['Electrical'], axis=1, inplace=True)","0e02c7c7":"l_test = tqdm(range(0, len(test)), desc='Matching')\nfor i in l_test:\n    for j in range(0, len(train)):\n        for k in range(1, len(test.columns)):\n            if test.iloc[i,k] == train.iloc[j,k]:\n                continue\n            else:\n                break\n        else:\n            submission.iloc[i, 1] = train.iloc[j, -1]\n            break\nl_test.close()","c1ac8892":"submission.to_csv('result-with-best.csv', index=False)","24526e0e":"-----------------------"}}