{"cell_type":{"2d3005a7":"code","de56819c":"code","5ca093ba":"code","ebadc55f":"code","b21d6b1c":"code","c3faeaff":"code","5a90c973":"code","a5a1f683":"code","e1a92e01":"code","89518e31":"code","ce019131":"code","046a9f8c":"code","3ad76c36":"code","1ba2a942":"code","d2d9bf9f":"code","e7271894":"code","d34c4b8c":"code","480f7678":"code","98240dc7":"code","bed42da5":"code","e223a9f1":"code","61a726b3":"code","00ea56f7":"code","2ac17269":"code","57ca29f1":"code","0ab7a4f5":"markdown","ad349500":"markdown","395a4758":"markdown","d3896a5c":"markdown","21c447ed":"markdown","8c2fac61":"markdown","3d1b1d8e":"markdown","1916eb9d":"markdown","174b9f17":"markdown","06764bed":"markdown","1014cfb8":"markdown","6c5a6208":"markdown","e14e21a4":"markdown","f058895b":"markdown","70a557ee":"markdown","85d14336":"markdown","112c927b":"markdown","75d4fd35":"markdown","af8cdb08":"markdown"},"source":{"2d3005a7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","de56819c":"train= pd.read_csv('\/kaggle\/input\/tabular-playground-series-feb-2021\/train.csv')\ntest =pd.read_csv('\/kaggle\/input\/tabular-playground-series-feb-2021\/test.csv')","5ca093ba":"import matplotlib.pyplot as plt\nimport seaborn as sns","ebadc55f":"train.head()","b21d6b1c":"train.columns","c3faeaff":"test.head()","5a90c973":"train.describe()","a5a1f683":"train.isnull().sum()","e1a92e01":"train_x = train.drop(['id', 'target'], axis=1)\n\nnumerical = train[train_x.columns].select_dtypes(include=['int64','float64']).columns\ncategorical = train[train_x.columns].select_dtypes(exclude=['int64','float64']).columns","89518e31":"corr = train[numerical].corr().abs()\nmask = np.zeros_like(corr)\nmask[np.triu_indices_from(mask)] = True\n\nfig, ax = plt.subplots(figsize=(14, 10))\n\nsns.heatmap(corr, mask=mask, annot=True)\n\nplt.show()","ce019131":"def hist(x):\n    \n    sns.histplot(x=train[x], data=train)\n\n    plt.show()\n   \nfor i in range(0,10):\n    \n    hist('cat'+str(i))","046a9f8c":"def kde(x):\n    \n    sns.kdeplot(x=train[x], color=\"m\")\n\n    plt.show()\n   \nfor i in range(0,14):\n    \n    kde('cont'+str(i))","3ad76c36":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\nfor feature in categorical:\n   \n    le.fit(train[feature])\n    train[feature] = le.transform(train[feature])\n    test[feature] = le.transform(test[feature])\n\n","1ba2a942":"train.head()","d2d9bf9f":"from sklearn.model_selection import train_test_split\nx = train_x\ny = train['target']\n\n\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=42)","e7271894":"import h2o\nfrom h2o.automl import H2OAutoML\n\nh2o.init()","d34c4b8c":"train_hf = h2o.H2OFrame(train)\ntest_hf = h2o.H2OFrame(test)\n\npredictors = list(train_x)\nresponse = 'target'\n\n# Split into train and test\ntrain, valid = train_hf.split_frame(ratios=[.8], seed=1234)","480f7678":"aml = H2OAutoML(\n    max_models=20,\n    max_runtime_secs=200,\n    exclude_algos = [\"DeepLearning\", \"DRF\"],\n    seed=42,\n)\naml.train(x=predictors,\n        y=response,\n        training_frame=train,\n        validation_frame=valid\n)\n","98240dc7":"# View the AutoML Leaderboard\nlb = aml.leaderboard\nlb.head(rows=lb.nrows) ","bed42da5":"# Get the top model of leaderboard \nse = aml.leader \nrmse= aml.leader.rmse(valid=True)\nmae = aml.leader.mae(valid=True)\n\nprint('The model performance in RMSE: {}'.format(rmse))\nprint('The model performance in MAE: {}'.format(mae))","e223a9f1":"# Get the metalearner model of top model \nmetalearner = h2o.get_model(se.metalearner().model_id)\nmetalearner.varimp()","61a726b3":"model = h2o.get_model('GBM_grid__1_AutoML_20210219_060331_model_1')\nmodel.varimp_plot(num_of_features = 10)","00ea56f7":"preds = aml.predict(test_hf).as_data_frame()\npreds.head()","2ac17269":"df=pd.read_csv('..\/input\/tabular-playground-series-feb-2021\/sample_submission.csv')","57ca29f1":"df['target'] = preds['predict']\ndf.to_csv('submission_h2o1.csv', index=False)\ndf.head()\n","0ab7a4f5":"Split categorical and numerical variables","ad349500":"# Work in progress","395a4758":"## Differentiate categorical and numerical columns","d3896a5c":"## Feature importance","21c447ed":"## Label encodeing categorical columns","8c2fac61":"# Training the model","3d1b1d8e":"## Defining train and test set to train model ","1916eb9d":"## Categorical column visualization","174b9f17":"## Correlation function among Numerical column","06764bed":"# [h20 autoML Reference](http:\/\/www.geeksforgeeks.org\/automl-using-h2o\/)","1014cfb8":"## split train-valid set","6c5a6208":"## Numerical column visualization","e14e21a4":"## Check for null values ","f058895b":"# Building h2o Model\n","70a557ee":"# Submission file 1","85d14336":"## Model performance ","112c927b":"# 1. **import lib**","75d4fd35":"## Get the top model of leaderboard","af8cdb08":"## Test set predicting"}}