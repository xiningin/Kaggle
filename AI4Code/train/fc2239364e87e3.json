{"cell_type":{"3ebc7173":"code","b02b1557":"code","65ee09eb":"code","22fb42f2":"code","607b4d26":"code","2f6ba778":"code","6a6f4aad":"code","aa88774c":"code","770e7b7a":"code","9a3d63be":"markdown","18a8c1ca":"markdown","0f7604ed":"markdown","b28e3a7d":"markdown","5ded9c4b":"markdown","0641fa30":"markdown","cea79bfd":"markdown","af691019":"markdown","17764227":"markdown","397185b1":"markdown","dfed705b":"markdown","aca6a83f":"markdown","4f890be1":"markdown","3083b60b":"markdown"},"source":{"3ebc7173":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b02b1557":"data=pd.read_csv('\/kaggle\/input\/obesity-among-adults-by-country-19752016\/obesity-cleaned.csv')\nc_to_c=pd.read_csv('\/kaggle\/input\/country-mapping-iso-continent-region\/continents2.csv')\ndata=data[~(data['Obesity (%)']=='No data')]\ndata=data.replace('Bolivia (Plurinational State of)','Bolivia').\\\nreplace(\"Democratic Republic of the Congo\",'Congo').\\\nreplace(\"Guinea-Bissau\",'Guinea Bissau').\\\nreplace(\"Iran (Islamic Republic of)\t\",'Iran').\\\nreplace(\"Republic of Korea\",'South Korea').\\\nreplace(\"Republic of Moldova\",'Moldova').\\\nreplace(\"Republic of North Macedonia\",'Macedonia').\\\nreplace(\"Russian Federation\",'Russia').\\\nreplace(\"United Kingdom of Great Britain and Northern Ireland\",'United Kingdom').\\\nreplace(\"United States of America\",'United States')\ndata=data[~(data.Country.isin(['Bosnia and Herzegovina', 'Czechia', \"C\u00f4te d'Ivoire\",\n       \"Democratic People's Republic of Korea\",\n       'Iran (Islamic Republic of)', \"Lao People's Democratic Republic\",\n       'Sudan (former)', 'Syrian Arab Republic',\n       'United Republic of Tanzania',\n       'Venezuela (Bolivarian Republic of)', 'Viet Nam']))]\ndata=data.merge(c_to_c[['region','name']].rename(columns={'name':'Country'}),on=['Country'],how='left')","65ee09eb":"data['Obesity_point_estimate']=np.round(data['Obesity (%)'].map(lambda x:str(x).split('[')[0]).astype('float'),2)\ndata['Obesity_lower_ci']=np.round(data['Obesity (%)'].map(lambda x:str(x).split(' ')[1].replace('[','').replace(']','').split('-')[0]).astype('float'),2)\ndata['Obesity_upper_ci']=np.round(data['Obesity (%)'].map(lambda x:str(x).split(' ')[1].replace('[','').replace(']','').split('-')[1]).astype('float'),2)\ndata['Obesity_ci_intervel']=np.round((data['Obesity_upper_ci']-data['Obesity_lower_ci'])\/2.0,2)","22fb42f2":"import plotly.express as px\npx.scatter(data[data.Sex=='Both sexes'],x='Obesity_ci_intervel',y='Obesity_point_estimate',size='Obesity_ci_intervel',\n          animation_frame='Year',animation_group='Country',hover_data={\"Obesity_point_estimate\":True,\"Obesity_ci_intervel\":True,'Year':False},\n          color='region',hover_name='Country', range_y=[0,data[data.Sex=='Both sexes'].Obesity_point_estimate.max()],\n           range_x=[0,data[data.Sex=='Both sexes'].Obesity_ci_intervel.max()])","607b4d26":"fig=px.scatter(data[data.Sex!='Both sexes'],x='Obesity_ci_intervel',y='Obesity_point_estimate',\n          animation_frame='Year',animation_group='Country',hover_data={\"Obesity_point_estimate\":True,\"Obesity_ci_intervel\":True,'Year':False},\n          color='region',hover_name='Country',facet_col='region', range_y=[0,data.Obesity_point_estimate.max()])\nfig.update_layout(\n    yaxis_title=\"Obesity_point_estimate<br>\")","2f6ba778":"px.scatter(data[data.Sex=='Both sexes'],x='Obesity_upper_ci',y='Obesity_lower_ci',size='Obesity_point_estimate',\n          animation_frame='Year',animation_group='Country',hover_data={\"Obesity_point_estimate\":True,\"Obesity_ci_intervel\":True,'Year':False},\n          color='region',hover_name='Country', range_y=[0,data.Obesity_lower_ci.max()+10],\n           range_x=[0,data[data.Sex=='Both sexes'].Obesity_upper_ci.max()+10])","6a6f4aad":"px.scatter(data[data.Sex!='Both sexes'],x='Obesity_ci_intervel',y='Obesity_point_estimate',size='Obesity_ci_intervel',\n          animation_frame='Year',animation_group='Country',hover_data={\"Obesity_point_estimate\":True,\"Obesity_ci_intervel\":True,'Year':False},\n          color='region',hover_name='Country', facet_col='Sex',range_y=[0,data.Obesity_point_estimate.max()],\n           range_x=[0,data[data.Sex!='Both sexes'].Obesity_ci_intervel.max()])","aa88774c":"temp=data[data.Sex=='Both sexes'].groupby(['region','Year']).agg({'Obesity_point_estimate':np.mean,'Obesity_ci_intervel':np.mean}).reset_index()\npx.bar(temp,x='region',y='Obesity_point_estimate',animation_frame='Year',color='region',range_y=[0,temp.Obesity_point_estimate.max()+10])","770e7b7a":"temp=data[data.Sex!='Both sexes'].groupby(['region','Year','Sex']).agg({'Obesity_point_estimate':np.mean,'Obesity_ci_intervel':np.mean}).reset_index()\npx.bar(temp, x=\"region\", y=\"Obesity_point_estimate\", color=\"Sex\", barmode=\"group\",animation_frame='Year',range_y=[0,temp.Obesity_point_estimate.max()+10])","9a3d63be":"# Content :\n* [Introduction](#Introduction)\n* [Preprocessing](#Preprocessing)\n    * [Finding point estimate measure from confidence interval](#Finding-point-estimate-measure-from-confidence-interval)\n* [Analyzing obesity percentages across regions](#Analyzing-obesity-percentages-across-regions)\n    * [Point Estimate to interval conparision for Both Sexes](#Point-Estimate-to-interval-conparision-for-Both-Sexes)\n        * [Facet regions for Both sexes](#Facet-regions-for-Both-sexes)\n    * [Confidence Interval upper bound to lower bound comparision for Both sexes](#Confidence-Interval-upper-bound-to-lower-bound-comparision-for-Both-sexes)\n    * [Point Estimate to interval Comparison by Sex](#Point-Estimate-to-interval-Comparison-by-Sex)\n    * [Region mean obesity rates](#Region-mean-obesity-rates)\n    * [Region mean obesity rates by Sex](#Region-mean-obesity-rates-by-Sex)\n    ","18a8c1ca":"## Point Estimate to interval Comparison by Sex","0f7604ed":"# Analyzing obesity percentages across regions","b28e3a7d":"## Finding point estimate measure from confidence interval","5ded9c4b":"Before diving into the data, we need to understand a few small things about point estimates and confidence intervals \n\nIt is not possible to calculate  BMI ( or any other metric of interest ) at a huge level, like for an entire nation. Hence the easier way of doing so, is to calculate the metric of interest for a big sample (which is called point estimate ) and then calculate confidence intervals for that point estimate \n","0641fa30":"### Facet regions for Both sexes","cea79bfd":"## Point Estimate to interval conparision for Both Sexes","af691019":"## Confidence Interval upper bound to lower bound comparision for Both sexes","17764227":"# Preprocessing ","397185b1":"## Region mean obesity rates by Sex","dfed705b":"![image23-768x381.jpg](attachment:image23-768x381.jpg)","aca6a83f":"## Region mean obesity rates","4f890be1":"# Introduction","3083b60b":"We can in turn easily calculate the measure of point estimate from either of the confidence interval bounds as <br\/><br\/>\n$$ Interval = \\frac{upper\\ bound\\ of\\ confidence\\ interval\\ -\\ lower\\ bound\\ of\\ confidence\\ interval}{2}$$"}}