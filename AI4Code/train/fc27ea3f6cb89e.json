{"cell_type":{"e0936596":"code","096d3315":"code","65454f2e":"code","e37c2ddb":"code","aac66a75":"code","f613d1c5":"code","070f00f2":"code","8c0cf67d":"code","857e5f22":"code","033d15e4":"code","eac51093":"code","689f69bd":"code","3aa2b761":"markdown","0588db86":"markdown","d42b9884":"markdown","9d18d4b2":"markdown","7e068093":"markdown","7c4f52de":"markdown","3c92a0cd":"markdown","c95595a3":"markdown","56abf7fc":"markdown"},"source":{"e0936596":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","096d3315":"df_sorted = pd.read_pickle('\/kaggle\/input\/easymoney\/EasyMoney_base.pkl',compression='zip')","65454f2e":"df_sorted.head()","e37c2ddb":"df_sorted.groupby('pk_cid').agg({'totalAssets':np.max,\n                                 'totalCuentas':np.max,\n                                 'totalAhorro':np.max,\n                                 'totalFinanciacion':np.max})","aac66a75":"df_max.columns=['maxTotalAssets','maxTotalCuentas','maxTotalAhorro','maxTotalFinanciacion']","f613d1c5":"df_max.head()","070f00f2":"df_sorted['maxTotalAssets']=df_sorted['pk_cid'].map(df_max['maxTotalAssets'])\ndf_sorted['maxTotalCuentas']=df_sorted['pk_cid'].map(df_max['maxTotalCuentas'])\ndf_sorted['maxTotalAhorro']=df_sorted['pk_cid'].map(df_max['maxTotalAhorro'])\ndf_sorted['maxTotalFinanciacion']=df_sorted['pk_cid'].map(df_max['maxTotalFinanciacion'])","8c0cf67d":"df_sorted","857e5f22":"lista_mostrar=['pk_cid','pk_partition','isNewClient','isActive','totalAssets',\n               'totalCuentas','totalAhorro','totalFinanciacion','totalIngresos',\n               'totalBeneficio','hayAlta','diasDesdeUltimaAlta','diasDesdeUltimaAltaInt','maxTotalAssets',\n               'maxTotalCuentas','maxTotalAhorro','maxTotalFinanciacion']","033d15e4":"df_sorted[df_sorted['pk_cid']==1515194][lista_mostrar]","eac51093":"df_sorted[  (df_sorted['totalAssets'] < df_sorted['maxTotalAssets']) &\n            (df_sorted['pk_partition']=='2019-05-28') ][lista_mostrar]","689f69bd":"df_sorted[df_sorted['pk_cid']==29008][lista_mostrar]","3aa2b761":"Vamos a ver cuantos clientes estan por debajo de su maximo de contratacion en el ultimo mes del que tenemos datos:","0588db86":"Solo son 45000 clientes. De unos 443000 clientes totales. Solo son un 10%.","d42b9884":"# Cargamos el dataset base:","9d18d4b2":"Vemos el detalle para uno de estos clientes:","7e068093":"Vemos que funcionan bien parfa una particion en concreto:","7c4f52de":"Vamos a reducir el numero de columnas a mostrar:","3c92a0cd":"Agrupamos el dataset por pk_cid y sacamos los max de las variables totalXXXXX","c95595a3":"Cambiamos el nombre a las columnas , para que sean mas descriptivas:\n","56abf7fc":"Como no tenemos el campo pk_partition en este dataset auxiliar df_max, pasamos estas columnas al dataset mediante un mapeo mediante la columna pk_cid."}}