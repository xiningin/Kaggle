{"cell_type":{"0cd60bfd":"code","f54f700c":"code","7a355b78":"code","fef17e2c":"code","0175ecb4":"code","b9f5d3a7":"code","38d54421":"code","eb5d65d7":"code","f35d1b05":"code","2ceb9f25":"code","ef945532":"code","fd78ec51":"code","ca39425b":"code","efafce50":"code","911195b4":"code","2096fe10":"code","a2012b91":"code","c5bcad45":"code","11ea3738":"code","b41a0858":"code","6d697952":"code","34267f6f":"code","d36484c8":"code","a62d5c5a":"markdown"},"source":{"0cd60bfd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport plotly.plotly as py\nfrom plotly.offline import init_notebook_mode,iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\nfrom wordcloud import WordCloud\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\nimport warnings\nwarnings.filterwarnings('ignore')\nplt.style.use('ggplot')\n\n# Any results you write to the current directory are saved as output.","f54f700c":"#\u00fcniversitelerin d\u00fcnya genelindeki s\u0131ralamas\u0131\ntimesData=pd.read_csv('..\/input\/timesData.csv')","7a355b78":"timesData.head(10)","fef17e2c":"timesData.info()","0175ecb4":"timesData.columns","b9f5d3a7":"df=timesData.iloc[:100,:]\nimport plotly.graph_objs as go\ntrace1=go.Scatter(x=df.world_rank,\n                 y=df.citations,\n                 mode=\"lines\",\n                 name=\"citations\",\n                 marker=dict(color='rgba(16,122,250,0.8)'),\n                 text=df.university_name)\ntrace2=go.Scatter(x=df.world_rank,\n                 y=df.teaching,\n                 mode=\"lines\",\n                 name=\"teaching\",\n                 marker=dict(color='rgba(163,15,42,0.8)'),\n                 text=df.university_name)\ndata=[trace1,trace2]\nlayout=dict(title='Citation and Teaching vs World Rank Of Top 100 Universities',\n           xaxis=dict(title='World Rank',ticklen=5,zeroline=False))\nfig = dict(data=data,layout=layout)\niplot(fig)","38d54421":"df2014=timesData[timesData.year==2014].iloc[:100,:]\ndf2015=timesData[timesData.year==2015].iloc[:100,:]\ndf2016=timesData[timesData.year==2016].iloc[:100,:]\nimport plotly.graph_objs as go\ntrace1=go.Scatter(x=df2014.world_rank,\n                 y=df2014.citations,\n                 mode=\"markers\",\n                 name=\"2014\",\n                 marker=dict(color='rgba(165,0,165,0.8)'),\n                 text=df2014.university_name)\ntrace2=go.Scatter(x=df2015.world_rank,\n                 y=df2015.citations,\n                 mode=\"markers\",\n                 name=\"2015\",\n                 marker=dict(color='rgba(23,45,85,0.8)'),\n                 text=df2015.university_name)\ntrace3=go.Scatter(x=df2016.world_rank,\n                 y=df2016.citations,\n                 mode=\"markers\",\n                 name=\"2016\",\n                 marker=dict(color='rgba(49,150,56,0.8)'),\n                 text=df2014.university_name)\ndata=[trace1,trace2,trace3]\nlayout=dict(title='Citation vs worls rank of top 100',\n           xaxis=dict(title='World Rank',ticklen=5,zeroline=False),\n           yaxis=dict(title='Citation',ticklen=5,zeroline=False))\nfig=dict(data=data,layout=layout)\niplot(fig)","eb5d65d7":"df2014=timesData[timesData.year==2014].iloc[:100,:]\ndf2015=timesData[timesData.year==2015].iloc[:100,:]\ndf2016=timesData[timesData.year==2016].iloc[:100,:]\ntrace1=go.Scatter(x=df2014.world_rank,\n                 y=df2014.total_score,\n                 name=\"2014\",\n                 mode=\"markers\",\n                 marker=dict(color='rgba(165,15,25,0.8)'),\n                 text=df2014.university_name)\ntrace2=go.Scatter(x=df2015.world_rank,\n                 y=df2015.total_score,\n                 name=\"2015\",\n                 mode=\"markers\",\n                 marker=dict(color='rgba(12,75,245,0.7)'),\n                 text=df2015.university_name)\ntrace3=go.Scatter(x=df2016.world_rank,\n                 y=df2016.total_score,\n                 name=\"2016\",\n                 text=df2016.university_name,\n                 mode=\"markers\",\n                 marker=dict(color='rgba(120,250,33)'))\ndata=[trace1,trace2,trace3]\nlayout=dict(title=\"Total Score vs Worlds Rank of top 100\",\n           xaxis=dict(title=\"World Rank\",ticklen=5,zeroline=False),\n           yaxis=dict(title=\"Total Score\",ticklen=5,zeroline=False))\nfig=dict(data=data,layout=layout)\niplot(fig)\n","f35d1b05":"df2014=timesData[timesData.year==2014].iloc[:3,:]\nimport plotly.graph_objs as go\ntrace1=go.Bar(x=df2014.university_name,\n              y=df2014.citations,\n              name=\"citations\",\n              marker=dict(color='rgba(255,190,230,0.8)'),\n              text=df2014.country)\ntrace2=go.Bar(x=df2014.university_name,\n              y=df2014.teaching,\n              name=\"teaching\",\n              marker=dict(color='rgba(200,150,255)',\n                         line=dict(color='rgba(0,0,0,0.8)',width=1.5)),\n              text=df2014.country)\ndata=[trace1,trace2]\n#barmode=group yanyana yap s\u00fctunlar\u0131\nlayout=go.Layout(barmode=\"group\")\nfig=go.Figure(data=data,layout=layout)\niplot(fig)","2ceb9f25":"df2014=timesData[timesData.year==2014].iloc[:3,:]\nx=df2014.university_name\ntrace1={\n    'x':x,\n    'y':df2014.citations,\n    'name':'citations',\n    'type':'bar'\n};\ntrace2={\n    'x':x,\n    'y':df2014.teaching,\n    'name':'Teaching',\n    'type':'bar'\n};\ndata=[trace1,trace2]\nlayout={\n    'xaxis':{'title':'Top 3 University'},\n    #barmode=relative altl\u0131 \u00fcstl\u00fc koy\n    'barmode':'relative',\n    'title':'citations and teaching of top 3 universities in 2014'\n};\nfig=go.Figure(data=data,layout=layout)\niplot(fig)","ef945532":"df2016.info()","fd78ec51":"df2016=timesData[timesData.year==2016].iloc[:7,:]\npie1=df2016.num_students\n\npie1_list=[float(each.replace(',','.')) for each in df2016.num_students]\nlabels=df2016.university_name\nfig={\n    #Trace1=\n    \"data\":[{\n    \"values\":pie1_list,\n    \"labels\":labels,\n    #domain = grafi\u011fin b\u00fcy\u00fckl\u00fc\u011f\u00fc\n    \"domain\":{\"x\":[0, .8]},\n    \"name\":\"Number of Students Rates\",\n   #hoverinfo : oran+y\u00fczde+isim\n    \"hoverinfo\":\"label+percent+name\",\n    #ortadaki beyaz deli\u011fin b\u00fcy\u00fckl\u00fc\u011f\u00fc hole\n    \"hole\": .3,\n    \"type\":\"pie\"\n    \n}],#layout=\n     \"layout\":{\n         \"title\":\"Universities Number of Students rates\",\n         \"annotations\":[\n             {\n                 \"font\":{\"size\":20}, \n                 # sharrow=false sol yukardaki number of students yaz\u0131s\u0131 kaybolur\n                 \"showarrow\":True,\n                 \"text\":\"Number of Students\",\n                 \"x\":0.20,\n                 \"y\":1\n                 \n             },\n         ]\n     }\n    }\niplot(fig)","ca39425b":"df2016.info()\n","efafce50":"df2016=timesData[timesData.year==2016].iloc[:20,:]\nnum_students_size=[float(each.replace(',','.')) for each in df2016.num_students]\ninternational_color=[float(each) for each in df2016.international]\ndata=[\n    {\n        'y':df2016.teaching,\n        'x':df2016.world_rank,\n        'mode':'markers',\n        'marker':{\n            'color':international_color,\n            'size':num_students_size,\n            'showscale':True\n        },\n        'text':df2016.university_name\n        \n    }\n]\n#layout kullanmad\u0131\u011f\u0131m\u0131z i\u00e7in direkt datay\u0131 yazd\u0131rd\u0131k\n\niplot(data)\n#1. \u00fcniversitenin g\u00f6z\u00fckmeme sebebi number of studentin size \u0131n\u0131n \u00e7ok az yada hi\u00e7 olmamas\u0131","911195b4":"df2011=timesData.student_staff_ratio[timesData.year==2011]\ndf2012=timesData.student_staff_ratio[timesData.year==2012]\ntrace1=go.Histogram(\n    x=df2011,\n    name ='2011 student staff ratio',\n    opacity=0.75,\n    marker=dict(color='rgba(122,130,213,0.8)')\n    )\ntrace2=go.Histogram(\n    x=df2012,\n    name ='2012 student staff ratio',\n    opacity=0.75,\n    marker=dict(color='rgba(231,15,150,0.8)')\n    )\ndata=[trace1,trace2]\nlayout=go.Layout(barmode=\"overlay\",\n                title=\"students-staff ratio in 2011-2012\")\nfig=go.Figure(data=data,layout=layout)\niplot(fig)","2096fe10":"df2011=timesData.country[timesData.year==2014]\nplt.subplots(figsize=(10,10))\nwordcloud=WordCloud(background_color='white',\n                   width=512,\n                   height=384).generate(\"\".join(df2011))\n#.generate(\"\".join(Df2011))= kelimeleri ay\u0131r en \u00e7ok kullan\u0131lan kelimeleri\n#b\u00fcy\u00fck bir \u015fekilde \u00e7izdir\nplt.imshow(wordcloud) #image show\nplt.axis('off') #x ve y ekseni \u00e7\u0131kmas\u0131n diye off deriz\nplt.savefig('graph.png')\nplt.show()","a2012b91":"df2015=timesData[timesData.year==2015]\ntrace1=go.Box(y=df2015.total_score,\n             name='total score of universities in 2015',\n             marker=dict(color='rgb(12,12,140)',))\ntrace2=go.Box(y=df2015.research,\n             name='research of universities in 2015',\n             marker=dict(color='rgb(12,128,128)',))\ndata=[trace1,trace2]\n#layout yoksa figure e gerek yok\niplot(data)","c5bcad45":"import plotly.figure_factory as ff\ndataframe=timesData[timesData.year==2015]\n#kar\u015f\u0131la\u015ft\u0131rmak istedi\u011fimiz \u00f6zellikler \"research\",\"international\",\"total_score\"\n#bunlar\u0131 dataframe e at\u0131p da kar\u015f\u0131la\u015ft\u0131r\u0131yoruz.\ndata2015=dataframe.loc[:,[\"research\",\"international\",\"total_score\"]]\n#dataframe in uzunlu\u011funda liste haz\u0131rl\u0131yoruz dataframein indexine e\u015fitliyoruz.\ndata2015[\"index\"]=np.arange(1,len(data2015)+1)\n\nfig=ff.create_scatterplotmatrix(data2015,diag='box',index='index',colormap='Portland',\n                               colormap_type='cat',\n                               height=700,width=700)\niplot(fig)","11ea3738":"trace1=go.Scatter(\nx=dataframe.world_rank,\ny=dataframe.teaching,\nname=\"teaching\",\nmarker=dict(color='rgba(210,112,113,0.8)'),)\n\ntrace2=go.Scatter(\nx=dataframe.world_rank,\ny=dataframe.income,\nxaxis='x2',\nyaxis='y2',\nname=\"income\",\nmarker=dict(color='rgba(50,50,150,0.8)'),)\n\ndata=[trace1,trace2]\n\nlayout=go.Layout(\n    xaxis2=dict(\n        domain=[0.6,0.95],\n        anchor='y2', ),\n    yaxis2=dict(\n        domain=[0.6,0.95],\n        anchor='x2',),\n    #2 plot i\u00e7 i\u00e7e oldu\u011fu i\u00e7in anchor kulland\u0131k\n    #domain yerimizi belirtir\n    #2.plotu \u00e7izmek i\u00e7in kullan\u0131lan \u015fey = anchor\n    title='Income and Teaching vs World Rank of Universities')\n\nfig=go.Figure(data=data,layout=layout)\n\niplot(fig)","b41a0858":"trace1=go.Scatter3d(\nx=dataframe.world_rank,\ny=dataframe.research,\nz=dataframe.citations,\nmode='markers',\nmarker=dict(\n    size=10,\n    color='rgba(155,155,155)')\n)\ndata=[trace1]\nlayout=go.Layout(margin=dict(l=0,r=0,t=0,b=0))\nfig=go.Figure(data=data,layout=layout)\niplot(fig)\n    ","6d697952":"trace1=go.Scatter(\nx=dataframe.world_rank,\ny=dataframe.research,\nname=\"research\")\n\ntrace2=go.Scatter(\nx=dataframe.world_rank,\ny=dataframe.citations,\nxaxis='x2',\nyaxis='y2',\nname='citations')\n\ntrace3=go.Scatter(\nx=dataframe.world_rank,\ny=dataframe.income,\nxaxis='x3',\nyaxis='y3',\nname='income')\ntrace4=go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.total_score,\nxaxis='x4',\nyaxis='y4',\nname=\"total_score\")\ndata=[trace1,trace2,trace3,trace4]\nlayout=go.Layout(\n    # x axis domain = yataydaki yeri belirtr= 0. 0.45 ars\u0131nda olsun 0.1 bo\u015fluk olsun 0.55 0.1 aras\u0131nda olsun\n    # y axis domain = dikeydeki yeri belirtr= 0. 0.45 ars\u0131nda olsun 0.1 bo\u015fluk olsun 0.55 0.1 aras\u0131nda olsun\nxaxis=dict(domain=[0,0.45]),\nyaxis=dict(domain=[0,0.45]),\nxaxis2=dict(domain=[0.55,1]),\nxaxis3=dict(\n    domain=[0,0.45],\n    anchor='y3'),\nxaxis4=dict(\n    domain=[0.55,1],\n    anchor='y4'),\nyaxis2=dict(\n    \n    domain=[0,0.45],\n    anchor='x2'),\nyaxis3=dict(domain=[0.55,1]),\nyaxis4=dict(\n    domain=[0.55,1],\n    anchor='y4'))\nfig=go.Figure(data=data,layout=layout)\niplot(fig)\n    ","34267f6f":"timesData.info()\ntimesData.total_score.value_counts()\ntimesData.total_score=[float(each.replace('-','0')) for each in timesData.total_score]","d36484c8":"timesData.country[timesData.total_score>59.0].iloc[:100]","a62d5c5a":"TEACHING VE CITATIONS KAR\u015eILA\u015eTIRMASI"}}