{"cell_type":{"d6fe0255":"code","95daebf1":"code","52f45065":"code","cda247cc":"code","f4ab70e2":"code","46706933":"code","100273b1":"code","97c08d56":"code","c7d4cd46":"code","835c899b":"code","c58fe9a9":"code","6424d6ed":"code","33e96624":"code","daac8b41":"code","d0d97e9c":"code","0a4bdb9b":"code","e20cf011":"code","35fa6baf":"code","a2004bc0":"code","00a681c5":"code","40a44a31":"code","70eae5b0":"code","98318c3f":"code","2ecc06cb":"code","fe141849":"code","d62c6bce":"code","9105684b":"code","4e59b983":"code","80f7a2aa":"code","c7d69119":"code","da66b303":"code","6c9acb03":"code","32c4cde9":"code","4c510ffd":"code","6dc0022b":"code","b6d562c3":"code","9726d49a":"code","e83e4145":"code","f2f9f946":"code","99be019b":"code","37ddf7af":"code","0e76abff":"markdown","974c2abe":"markdown","835eb81c":"markdown","fbf1d8f9":"markdown","358cc918":"markdown","ad6a8e32":"markdown","944016bf":"markdown","064f2f58":"markdown","989f48d5":"markdown","c40f4adf":"markdown","3da14189":"markdown","5ad89d7b":"markdown"},"source":{"d6fe0255":"%matplotlib inline","95daebf1":"import numpy as np\nimport statsmodels.api as sm\nfrom scipy import stats\nfrom matplotlib import pyplot as plt\n\nplt.rc(\"figure\", figsize= (16, 8))\nplt.rc('font', size = 14)","52f45065":"!wget https:\/\/raw.githubusercontent.com\/bhattbhavesh91\/linear-regression-assumptions\/master\/data.csv","cda247cc":"import pandas as pd ","f4ab70e2":"df = pd.read_csv('.\/data.csv')","46706933":"df.head()","100273b1":"target_col = 'Target'\n\nX = df.loc[:, df.columns != target_col]\ny = df.loc[:, target_col]","97c08d56":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 42)","c7d4cd46":"X_with_constant = sm.add_constant(X_train)\nmodel = sm.OLS(y_train, X_with_constant)","835c899b":"results = model.fit()\nresults.params","c58fe9a9":"results.summary()","6424d6ed":"X_test = sm.add_constant(X_test)","33e96624":"y_pred = results.predict(X_test)","daac8b41":"residual = y_test - y_pred","d0d97e9c":"from statsmodels.stats.outliers_influence import variance_inflation_factor","0a4bdb9b":"vif = [variance_inflation_factor(X_train.values, i) for i in range(X_train.shape[1])]\npd.DataFrame({'vif' : vif[0:]}, index = X_train.columns)","e20cf011":"import statsmodels.api as sm","35fa6baf":"data = sm.datasets.scotland.load(as_pandas = False)","a2004bc0":"data","00a681c5":"data.keys()","40a44a31":"data.data","70eae5b0":"print(sm.datasets.star98.NOTE)","98318c3f":"data = sm.datasets.star98.load(as_pandas = False)","2ecc06cb":"data.exog = sm.add_constant(data.exog, prepend = False)","fe141849":"data.exog","d62c6bce":"print(data.endog[:5, :])","9105684b":"glm_binom = sm.GLM(data.endog, data.exog, family = sm.families.Binomial())\nres = glm_binom.fit()\nprint(res.summary())","4e59b983":"data = sm.datasets.scotland.load(as_pandas = False)\ndata.exog = sm.add_constant(data.exog)","80f7a2aa":"glm_gamma = sm.GLM(data.endog, data.exog, family = sm.families.Gamma())\n#res = glm_poisson.fit()\n\n#print(res.summary())","c7d69119":"glm_gamma","da66b303":"gamma_results = glm_gamma.fit()","6c9acb03":"print(gamma_results.summary())","32c4cde9":"gamma_results.params","4c510ffd":"gamma_results.scale","6dc0022b":"gamma_results.deviance","b6d562c3":"gamma_results.pearson_chi2","9726d49a":"gamma_results.llf","e83e4145":"data = sm.datasets.scotland.load(as_pandas = False)\ndata.exog = sm.add_constant(data.exog)","f2f9f946":"glm_poisson = sm.GLM(data.endog, data.exog, family = sm.families.Poisson())","99be019b":"glm_results = glm_poisson.fit()","37ddf7af":"glm_results.summary()","0e76abff":"GLM Poisson Distribution","974c2abe":"# Generalized Linear Models","835eb81c":"In the next version, I'll talk about how to make inferences from the results summary.","fbf1d8f9":"![](data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAYIAAACCCAMAAAB8Uz8PAAACTFBMVEX\/\/\/\/\/5sv\/+PH\/5cicnZ+ioaH\/6s3+5cr\/6c7\/\/\/z\/\/\/r7\/\/\/4\/\/\/\/\/\/X1\/\/\/\/\/\/f\/\/\/H\/8uX\/68vv\/\/\/p\/\/\/e9P\/65s729vaeinqhgXj\/+uzz+\/\/n+P\/\/\/+vj\/\/\/\/58X\/\/+bZ+P+KdWz\/+d6SZSwAWIoAJE3r8PX06Nm8ubn\/8NSRcErI4fb\/9OHWtY3V1NQ0UGwAAACurq58pcnw0rC12PXP8P\/IoHdYirPG1uUAAFsxTYS4y93R4\/Xez8Ovp6OPudywh1vTqYRLD1teFEpbeZp3RSboxZ+Aa1RKXJFqVlhZZn3o5eDkyq1DT1x+jKKneWXKtqHMv7AFQl7\/2ajO0sPxvos9aYG1e1rOlGNqT0d+doaixuVsJjN1eJbGy9FqLE2EZmd2aYKjjZ+Xo7nUzMjj1MK7z+OtqrmWj5czAAClhWMAFEWAXDdJKABCZZA\/ADogLHA3AFVGfKg6KFkAGFzCybscPGtuQjgzNmlWOig9Ql+ntMVhOQpPPl+4tMNUUEwABlG7yspKKUR5VT1vmb49MD89SG6fcEFGAAYqF1FXPEAvCjc0Y497gaB1NwBdJwyWY028l4GLVikcAAdEABpNMDaETla+s5OpfUWWZWFZZWueiV9VAE7U0rKGal1PIWNhTWcfABZmHBxmSEIhIiZZMzyQfoFFRE1eLzNJBCcjLEFxla1gbntUOHJcUHZMHj0sACtzb2J4lJ4GUXEoKjblrHeTWT1JHhIiADtTZm4AH08LACGYl45bRzmCZnR2ZHRyaUaxkJdTFwA+mBzzAAAgAElEQVR4nO19i0NaV7rvCr54iDwUUMRgdFL2Rh4OD5FTXnKHkOpGhUoehkptAaW01844xyQNk6RUGmc6yUzInU6muSeezOSMdqLNnNjHmTljm9vzj91vrQ2KKIjGpo\/hlwibvdf+1uO3Ht\/69lrfRqiGGmqo4dtHMO2uD8XwUSjWjFCiXla4wo93IsSJwknEC82qtu6gGupp+\/6CqddbgrLtnyFnIrb9Sznbsit8evuYE5w5SB5E7lYiYZak1dWwnVaIqNnlKHObi4RnIZ6FzFLJzsoRcWinPiYoSnODE06G7CKTqvxNhXvdM2wiW0su8JLoRyfR61is\/1+gWHrfsOavMKk3ZYh660WczODm\/54rJDdwQ4aCg\/vGiMRvt7lIwvQkapdM+tPCpYRTGG0uDU9t0cqnBTbz\/hEUINfxaCJN+zOcO7+ZKmKeExUY5svdOLJdDyBBSkfXz0uLpwSct6zKaNFv\/mkdfKTMpLbuhyEP\/ux9+0TJeZ4GU8CJQ732\/+vCbEvvL3VUvo77X4AStGEK+Brkv9gaIqfFl4AjfpQXNzn4oajbHkqqKDoUY9wORNGzLZSJNCYoxoWftYacQtqtemuNoUMOl117GS6FZqhZ5p20gu4U0iY7h47Xy\/hxN5ZMXRPBL6hVKHDFaVsDeS5cxxCSuNN8tyNkV5pCSRly0WnkiuLY3GkECZhR\/iKmoCEN15q7\/xeUoHLc54QfAgiTTtQ7JXSLf5Cql+E2xgulqXoIaep0NdihRrdjClwxKumk0hy6JeWjri4kSa1xQYqwfBcNH+QgmmylaRnqs0quKWch0UIa+gUXfR0oQDazkNa4MpAmpTvdKcHy6QaoBkXl0okSdJ8HcoLEPzkOv0sqIFBgmO\/98YD\/3dal+e7fZd5TLep2UgDImYVvZUnVeZ+USy6Cbs8MZeWPZDZz3RXZULb3BjWF\/PPcF1RLEbiesnb\/re1HEb9Hqxvy9P7SHk15en+lSpm95q732hYHqA9kOZ142L4YMQyqs0pMQeAl\/m1PYA5HMSWwDepHQo6mK5ACcbJ5yVM3EhNof2033LRkIce2ue6fdd1Cv7Ha5rvfRT+yKn97IjUwFCEUIK8ZLctSVsNN0WLEMk+tqvzzwkldADdFyxx\/eKBD5wpF5FdaO2R1mAJ5v+C2NTDT+5MTBkjagA1nUjsn\/l0Gy\/ef5L\/SBgc621w8aFbPAwXSn4md\/jmUk3kHAx4QTCjQX3cabiqHNV+rhsw5q8FjmDNqQPSq0zbYdYWaElh88ltoKD2G7kSAgvGBeMsuCkTx0P\/R+d9t9v60+3ebb2ZoTSkF2x21\/kMcK\/\/3A8iQtXm6RjsNWe1ZARxdvTuIui\/rPyUNTviTNvHbrX+IdL3jEwx5RK8eRzaP9jKy3MQUtC7qxJOaSRnKpU\/r\/POiPh+ueuqX0Ec69UsC3EFgefeW00Yj\/GoaMUJ+ljyo+2pr9+X\/60F1Nw1Z4b\/d98Fpm1n8dssdKzo1oKRPb1MgoZet\/kF0GsR1DQMFyLBGRgvLPH\/a2fR+OgeSoRdiO6LxzPKaqVP46glI2s9bDYSCG81fEfmWeXTKDQed+HQ8iCno\/fcW\/YcD4uGMkTmtE53Ot4InTv+g8InxadSoEdIpj5901PqRFkjgg7u3UNdVSLdtA4sECiAFJX0RbgUXe4GCf2m23YRW8Ecdv5gCgT4p0yeNtD3IDmspEM9hUh7kjWAKINHafkLB\/TmBdq73JKFA9KcBQkEcevUhj5Cl4KfIAq2gG1qBTjmp6rOiDjumQKIx+ECutJSCdjNy4brUrxJGKdMDWffVNq3PMIgsWULBRYHS7i1QcOLUCRtQ0EIoED88Pl6gQDzcBhQoL5F+2DInHHYaxctPzIgJj6q4hILAFWbRgwgF3XkKkDsqU2P5mIKFk0hph9M2j5qloBnyzkBHET8d4eUpEOUpGHaK4tM6g3kHBeH+ll6cbttGf6cyKvzJcaNw0bqDAWqx3xm4knloDdTTK7KmDyPB0TQeXJjUI4eAOn3Frn1g7\/uP\/+jXpNghUth+ob4eSKHTMA4lRu05X2hUk8rKrzpBuXJa+jV9OFxgZOG9TJ85EHPr\/CMLf54RprLi6cxsi3y1\/ok9NxZ\/qJODBMmkw+BLjIWAXF7wMTOdDj4G2vXT6VQ2MZpZvkdqS251jFlps\/mU74F8frupvjPn6\/3ridToWHNqUPv2gM1nvDSTWm\/33f\/5ACQvtaboG2sfu+tjJiOBGwvDdq+vE+VI16qf3ph25Ez1DJYcHHOP4HG7K4ZAc5P\/ecYyQl+F3AAt2tV7F5wgv8UwxwHROCJfZ2DU\/cB42nP\/6sLVjHsmsLrulD81DUPKOak16jrkg7oOZ8dkufXNkXYfrsRQOKlB6oE9WO92KnvSp9dyo2Mq+Xu6XCa5vwL1nQR0RIe8kyeZFewfahuBGR41e8i4ftCQv19Owd8PoGIdLPx6\/azmkHH9oKFQKJ5XVLwq1PwafphQsI1PweQnDjxFxR6Ut91WyZ3wwWFPMdFdYZmShs0v09AVmtI4Of9MXYL\/JHyINPJft7G\/hSuySsHlY1ulFXgZWm7gYrPBQ356b5aGFd3ZqYYhmKrshUA6uTNOBgUOYKv4foIP9VOhgA+eJgAU8HMe5XsqqIq42irwlU42DKcQDn4IeBr8ocCVG4cU6PshVG9\/M0\/B00CttczzGNxvM4yA\/IaaDLMALJLpzMcnULAxa3DM+T9gajzCYwSMho\/lQ3PsTEypIBoOSV4+7m+7wI4etkhK5+0PXW3JOXDlFd72KD9OL0cS0ZRH\/6XONrLiREK3cdrenllR2fpDIy3uaDBGraaXZwIjze5oKmIw5yK9mAKYoaUGe\/+SPh2xzAdiUKJ1vkBW+5+ZRat+jDkFFBhOog5ZytFhHx9ZWfikud3RIzOARFUw2uEIRZcjCClvp6kPnIZ5+SpOQjroC45o7vqESWPO0\/QoM6nL2b+vGnUlMMY+PJ8+xdxAatwRpSJd77Ua1qYzoRjM\/cg0z5JFjIIJD8Mv4b2FKUHXKnNPZTBzR6gpAUcjMaayeQqaDVnRT44bspbPSOfBMRpOCv8NZoi2CFoCCsQPVbMQ37LVa0baT1oYZtkK7eVJZgqq+dOMG8\/DxiPC4QH\/YBeW3zEADdOH\/LcsPtR7Q4+n4IaRg2mX3w\/kZmwRKOjF8IvbFLQBBW2I4Z\/Wkfk6TNN5zIqsAygQ3ws\/bhE\/LVAAM3xFMBLIdudbQYGCvw\/DPBUF1rQnhW+32Dx\/YClA3nUdr12XYylobnfmgAL+k4XHLYh62oqwFlBEwdpHOqTAFAxa5lD3Y0IBJ\/j+D5CD36T7Bg3z4t8OLDr8F6EQUmvhv8psg7mRhrTyyxnbPPS9ysmNhvAHpsm0YV6\/am93JGJ6bAMM9Hem1hucS2upucTL0D80vaCxzXf\/5YRt0H\/TchFGVdtc8CL1n8eHsoE55i1sPtXeEIhPwUQ9lUXSX7VeSi+aDTeVX9pBij010uAg3SBvfKN9jiLyRxvS8tGoYU7YYw9GuBdVQ+Z2DWtp+GGBY1QYGfjTcOCrk\/0NIx\/PaIRDDTmFD6ADYTQkHB4SyRW4xocLrAAN7tIUJADDyoNR3KjB\/xj2ZhyZgoSC6wK4eVsiBMZ\/JCIsW6PI3yXg4SCdIjYafPzPpKHWUEMNNdRQQw3PCzxODd8qEJLU1fCtAlNwrIZvEwUKuBjFF7jHdv4+KMjdjbvOVnVrY+Oe4bg7DyEGbuGGnbdz975\/R9L2TwS3KGSZO\/aQVHoGpw3\/NTYVzhQO6uTsd54CSxAQKrq9LigPhJ6Bg7pgqJFrCSaKk8U9ZqlGZCMkJiTffV4d2jq0wCEXhPldRK6\/oZgDnBfXLvK3wQ0E95C+O1CCWxd0cfNR7ymvsVTS7hyqUxtcrndd3mhw5c9I2\/P3SHPsQZ6CujsbTZbNRlyxgH5gTd0ut53VNlZZb\/fIwpkfZxrVw3JSV\/0U\/moMkrLiktpVXmyjbT1huZ0ppOXY1g2WTXnh+MzLcPHMRa2X5uIwcFQkUP1bk+Uhvn+HALZh4HNn6r1hkq+KWZt4I8OVLlONWAhXnSTpZnuKwh+RlGDTySarMSD3u0tyqL4U5qrbqYn6xnyUhALSx0wkG4soaFza0FoSlmBIGkgEQ363vC4gP3MWanFV9XZPCp78Iyxt56qDQfnEx7QU6ov\/URik4ROWYPkWxp14P8HlWsKQlrpACKohHMgtoQAkKSRXB\/EfSAQKjk28rLW4QJQbfqqhzm5RcCqj\/WID2lKoEQtohAbJhV84ANybUJ9bh8O6YKIuUSlr2vPr2okxiLDRAg0iKK9jxYUacfzSIK7+6tsbcCkQqoPsyKFFJPyrOId1JIeFhsw9b2pUu7W5MCZIDVFiCqQgERI1Tu2gYD24HL6UuB0+t275cOH8huWD8JmzwKC\/4bAUZM6\/oG2XfhSeuCJ9JXxm7czZicvazz+VLicMIxNvh6Gal7nx836cdvVyeHxh6Kx\/1NKT8K5PfBZaMp15WdqRGDKdz5xP5ymQLq1NvLGwlJ741G\/a6mqBgs3UvYT6oXw5fP6s\/4F2PHx7w9\/gX00ck44v+Iep8xtNUAa2+okLFXorqApvUrbwUgai68\/d\/1vvUuYcHFneo3Jh24Y3fH698Zj03Ib6duZMPxTYOZO\/3jIceCD3Plb3JAzr\/vdD+RxyP9\/QehekPfJj0Cec2WjEFHD9d0fkt8Pc8xluMQUbTV6oeYvh8xvqSwwuffjQ4sgOxQBQkJYund2cuKjV3gm\/EpYGbJiCM59OfKpVL97\/a+85UzkKzlzBFEDlX8xAWkYNU1r1qmUUCm5i1L9OanLfRqEVQIC3e+HKj0e02xLUp9wfZvBA9CXOzGRiMgzFuAH1nzsxTElvw3Hjsbq68fDn9ZUoOKZd2ljRQmTpz9e0EIs6+Jbp8zXpqfsPtNC5hPDA2XhuA8SdGVFPQurGFxqPTTygJh77X9Oqh4PD8nwOobeaSHLV03LuxLp2KMO2gqbP01I483m6iALu0kYjV\/1Au7STAvWljYrJrEQBtL9TZ9V\/69Weuv8KLkCgoBco+LlWPVmJgmMTHy5ouXWW5cQ5loJRuXq0QEE\/NOVzmc+LKJASCj5dMkmLKMiceURNPND2EQoow2YIAvZaElz1w7D09gKm4NjEBe34QmW96cyPTdIvoMl9vtYIFHwRhqN16aX7H0N9WgxrA\/ICBf2EgnPQk\/sf6M+8NrFKqYcDmAI8lB7jejdXoAX0QIHXS6ehd8IUaG+HJ0YauZ+ThlLQiH6xDuH+tLm4sbRu+a\/M+U\/9\/7Vw\/mV5o61cf7Ef6mzrhHfbhqFeeqfe9ij16P7HDbYX5Lb6nGnib\/e\/KMtto394s33TsvhkcR06okfh1GaOnniUWNrwv5AY+mwlsfT3vlHDfyegiN5MLJ2d+GN4yXfmvy1\/NG2Vp\/+N+sbz\/YGPNxfrh9b9H4ZvP2mnJy5dT0KZeVeCDdDn4n684+71ROUsSKcp6Z2\/9\/196Kx84h\/hO\/f6ID2W\/8nYPnsS9n72hOYeU3+xzrWNtl+5+2F4acPyzvUG9cNN2xW5bTNn8n+WuLNBulTu+X45NJjxBLSq4JNNlgL1sBb6JO450sXkKWhqIn1pE7epGFxpx\/7qWxlggVysDjdxiVxu07E6HAs+QYSXvZML94K+UEgLt2k7VaBcc7nsT5Jm\/J0X1lQUM4RqKmTmmKWhKZCjuE1Eh8GpISnzuyYu7DfKYQ2GCAHhTdyt9NRB6kiujuUjIknACS7EnQ+qxlonNyDHcrw09EVYUF4pxeOAtIdbRMHeSTjzD\/qQjeC7A65\/dbN9l\/7FtW2279MInh0WEkN+ZtE+sc4esRRIP6K4BrpYKd0bldT37w24oHzuNYl9zlmzFGaLMD1iE1CY7wEFjTV8q0DIWF\/Dt4pv+2lFDTX8kIH3DFMNaYSUu7bGhOgLKqry9n3es0RNVbngLl55eaqk4rLyI4eyZ8O97Nl1Orf7VNVYuomQG76\/LvV0wHO35KwoWCaD4mEoQPmj7au8zq4HMnSA\/TXK2P5h2ICVN6C5SnfJf6Pg3YkgpK026VVB6\/j4hGgWIfUeuwOomADpK8WmvLdNAVnBGMhWH3Ow7JJHnntnvS8fEoN+rsvo1W+2IQTFMhLMKt\/R2eblseBMML3SljLLx4Jm\/ZcbeOH5weA6YTNr4S4vZNMb4X3FtoXgyjvrdioZdiJhcpcfEAL9Bzp5fbBfFaKH7amz7T7xpTT13omU7+7F1lyk8Qbe\/yN80Gwpv+2Dt9K2dRzaXHcq3fS1QmESClxwUuymo82oqUI1cNFJ9\/PsiSz\/0oo4fTcZe+AyWtT5B9X9MkVuTSHwmiX2wEv8JwP+Ktx+7AQt0F7GTXmc\/PXOsfGYkT+CXCaTCvE79s4g\/yN7z0DXPeZCtN1jMHeNtn6kE716wpBFDwfcedIafchm3fNmDOEFAeIpMASUA8mHxzrzDkZ4Cr5bplDASe3wmAqflI+VlVKX7Y7s1YC\/MfS+gevqoH6s6xO0iMs78eEMJ9ev8kIrSAAFzoNTcA1GA+wBBSgQP0Z+M+nMoVMprIwuT0FmWNZ1LzwCNXcHBf71gtcAvwdNy8r2EpgCyoThlNvxnqsWJCFb3xImU0+9ycHAScONTqR3FO\/UKoXNmjhhOHDTfxYE+jWKVNYwF7is6kvbboZ0ljUYNHU2s20weIOZ1JX1J1MOeGCx4JtyA3jbQiozI4\/hzpcqtH3hyt77uIW\/t4979KuaxVjIYcv29qtup8WvDhh8GuGfB5B+DHdEQxFtP713NwbgbwvmXFPgnToaWpZg6cMdkfJaZ\/4kkpfviAIRmirfRr4RULQpiji0PS6T0EyUiUabXVG7KB7l0MY4Q2tc0YNtxBXSdCcSYuXQ4kGGNSMTFShfb0X8eLRQ78oNxxLaLqKjUQ188+JRiJq6xtBODq3iJQXYuRCU8XTU7qqgdxbtQJDQUVz7QT1+nTiLImMBOUnBSVTJ71Sifteu0e8r+Ek0PkAO6B3nK2sjuxFcKZSX1lc55F7k5v047dzEK6zkg6v7QG7BvtugHEaS8Z3bh6mD+jKgtiqlZL+Z1x5NZM+9y65KGg\/nB7itsIYaaqihhn82MICSITA\/JPIq75nk7PZwwAiKv36gkLTXu2NkssNvPxrDCPVLh7GH1esCHvIlLDiGdFW0U+uHS\/WZRD48VepTrwxceZsQj3F\/n7SaJQ8aYo2RzNE4Q+K9cgJZTpLDfO3fmggIkxWrc0cJBcpYwadnsKrnANpbiLUs8F3Dz9fi\/2wACrzzepPboXQ74UvmomPIZap3JpLusUNxwgcKDPN8E51GOY+QjqfRSjPx+WZqRpU30Hc4JTTtgOlrA3EgiwJQnnIHCqlQXVVmM78ZWViLFr+nDAX8UL0dT5Ir5Swwg9yHdYV3KCxlXcPO6ePih863rF6zRLM8YOydQvLH9z9pHS9vlKwA\/p\/S8WSrzYq8VsugOquIiqfg7PgASCWFWh4dsnYnyg10DHjZYNiK4I2InqpQ794ujEpgMLPGKYRE5Shw2ame9KxGeW2X0+ZtDFnFj5\/r4LO0ZtRgR6upSJ9VedrXmbjusdxEwuXwJ4LxQ9kLcStA6NJx7MRjkN9+z9wNZS9+Sgz9+cGhDDqMF1TI4Mk52tnGgttMh0x7S4C6p6opk+1WUI4CHhS9Fju8DVUYK75qUx\/YOvxMgI4I8d+y8pZlfbp4S84cVU4zD9r0U72HpQARClJWZItYBuusaEUIFEjnUMph37cVwGiQ04Wiec0JWkHXSLMhHa2yFZCxQGREbEfEIa4wBDA2dxKXVOTPJUOuzRGZkC7fCnrnkM1xWIeQh4GkZwxSRtXTdkmPI5Q2adzQhyfqaVliiumoUhHZidA01rCEIIeXG3PFoHNfaUV+XxQ74c8NVLiRWklzTBA8mNyMtSToa9jU2jRCL9Q7UZ2nuqjpWYEe+i1+aCWtksOBMqlifbxhd8MBaE4c2uRAiWR9BfXYMkKHZr9Po3k1CFhRinQtymrs8PiBVi5zgbZjr+H5Zye5AxRJvLX0IA\/htarur\/BY7vsLvqmTqBi8UDW6Jc9F01FljIE+JGEPkbI\/iHGVU7CrckonIaUTxjL4Xk0pqgYnrwMeYD2KghSY4sD31VBDDTXU8F1GaYdeTQfPqz7oNw0XzT5vPvq0cGgNXt1QajPZufaWiUfxe4biu1UKdp0OnykKHnrHihL3HInJGL3iJC\/jYCXu0GpcJtWu57zyp6VnCvckqniRF5uagoQjMjkWwd1qwwqy3AGzjmtHar\/gLV1s3eUb2ogSOwpM\/IVZsuxBe+iUcjJ749uKZvT83JVWRCN0ZwCp\/3VrtQh\/xyrGRKzOzG8otYWVWkr5W\/55q1MUlclm1igrCh6NpdS4UzrOQVAG8\/cjdteZ+39zqC6C4tFmxInbSYsI3NBwNBStkUTzq394tz0ISpnRcIxwghenNXwjXmJ0rZljRBK4y1BEgfCad7BAwU\/5ZDUQNLImD1RqDWKXVIh6TlgGd1srgIJ4VAPJMNKEDHwPaPdQoy1VmUosWfwfo6ylFDH4rWpMxVYlcaK8A\/ske4JyQrqVs4yTrN3WTqHc0c7evhb\/wiyNBHXeef60ZjEWNFuy6hebDfPiSZ3c4ZaRt9jwbq+3XxkQ9kWa3rcv63Iz1FPV0GDiij3lCcyJnrZ9JNtJAe+SDlPgiE\/qkM0jXJypG0QGK7Ybdb1GKGi8mkl5dq9o6xgIOjhJVYc9lybdF25BBg+aVmHrTxWowlJKzYZGNG57xbmeLcJ7wDbZPAVDVvEDFEzilx9CtfH64pNH2wq+btO+0eD4KBN3iP\/clrLy4rlB9Us4KwZziHmaoe0u0zV028PP+dCQRzvSPJS+J0NDEZunG7\/RqXFEIIk\/HNhJAVK\/mAEKdArt4xYowo+Oa+ew1VP4VWu+khqywmUd0paaK1hLaWTLWE0spQO9U9VaSg37W0rpFhR4tI+l9KMTWrwU2WWi72GLEuJNb5tOv27jjVshW1Wkpnp83YosP55ZHEDxlmA6inIRS54C\/cce5bAKGRmjEShA6sutQxHtSEvK8Xsd1Of8S7UafcqRlts7ll+LrkG9uUk6IvSbgSIKtD7kdZDq7Y3ooUx3U6BZkcG1EJ23McA94qctlpgR9d6qhgJ1FturMcp2RECB\/jTUg1D54brrMfJ7jOTlLUnyApfeOagX7LAA\/RC\/54TfU0ViqofkIW7tkcCjdYdocT1pt\/W33wj\/OW04Sd5G5X20Tl6AeMpHL3uEb5kDVzRL5sDYQoy\/lJU\/ctp8wX7m4cbiWmpuu14ER5yoawq5fpGm2weFfYPUxw7DRRm0YEu\/sT3mbLzRihJpN95QU9IRUZPpRH081hxMJu0oZJoVwD3c0WhubAYdq+qpGd+dSaoaL7eCzvJlurMOItJDHVLiR9J40xBuqpSJnm3OrTdUGAzqLhrbx9iehu2ILHBig9UUAtCd5uxl9kccAag0w7xeTnrxmkxeRd14+2LxO4D0Y4VBDC8mJOrtXmtLQbQ+JuC3Zy7AuKyPoXyFq3YZqiIvX4GPXCWdjYjokoqdadyNooXtJvK5bTrlQZeBRMYKT9yeEZbRhkq14xkRlE2TPTBbJmNJmQXWQnc0Xs8kjaCLBZ2s+qeMVa+IcwrylaW26X32GRYwXvpMY\/l44ajiFq0jQbn3\/BwJeMaSE1VUJp4xv47oO\/Kiq2o3dNZQQw011FCKUvWDd5BnYQd8blblw0mE3xqST025caZMlHw2PP\/oLKYSt8mdbkaJ3Zt7lLNEQaXoA46Fob+Y6GndtnVzt5mTtZHuUi\/k72+rnkITq1Hq04L8d1Vx5xzYqpwfNEXRinqUfIpkrJy+iw2QpWotkequeNthYBtEtvm9FDYOmwP56kEfZ7\/ahteUJvIF0bV71QS79zuwi\/UiSymf7uRhJwVbJtKqsiwCvVduRuymWol7HzvCNAnmLlPDVgS80Jd7rbkhM0rhwV7hWxlAgf8kctkldLxehVymNHJF3TBNdXLoTgl9rRlPMA8EPlDgnxc2OBOxMC1DfiuSzDJ0nuKEkxdtRkGY7PC\/blXSDF1sL+tw8uNQhSU07TbNtgT70514Ay3Ujngn0lbjBwFTkIugvIlJ+VoZClzROK1BPEIBxJCAn8X2DBxhC9n83beTAtE1rJaSrbXQRqgoQx+Nkmrr3\/xMB0SIf2u1mS1ZZDMbbooWI5Z5alXVoctFDk7BK5nQKl6YiO5YsXFoANF3s+gr9uHAuE4\/xa5rpNIofjfLWymS3jEAM7GOE9hMB+WDraM4IPahoCLbuveF8Ks2NA4UsOYMfRkK9JlpJ15dSRpL0CmOLuvqigm2WUUPBGSOXEKB1IcJJtbDoExIj1urM+DuC2gF6l+1+Qf5l04YsjkPUr9kYV8d3zWsUtLLh6AAWoH0soDY53rnoEgLa3oRIlY3M\/YxAKWrQ\/x2nb7YBFpYU6rLzUAvIb8lII8UOgbwXlf+hf0NM8J2DyKtwEN+lqMAv+cUNxT5lArxk80IKkX+Hakspo9L51mrBKFASTxo4bHI70E9kJuclbh80V9oPqLXoAIFvW8MAAWLQIFhEFkG\/SwF4mHV8oDt4BTgsaD7121FFIihUnmMSEA2DuccduyQQgh5V15oDcSKtll3yFZkkMFQ1I4IBQw27nW91uyHQMILVVhmxE9bccPJ6cgzZ+VrZW7xe4RfRTXALdAQIe4xpo3bPVH3DWSI2A1bFGwjpeudMrbgViCfIfWow34U9gRO31lTj5mX81EPdTafqN3UoLL5mMlI4MbCqj213u5zrR6wwwu9Z6J7IuKUj3kYCVxxQl6gvQZiTsuLAuTvj2\/GZNjgiDfOaMfw+a0bqeE0VU+nUXA9mYZj4cqsihtDTaN0MOmsbmEvHmimFJ8AAAd4SURBVAuEbjqG6xVSulfTzTZob01zUNPxAlP8NDPlwT2JeCUtIGMB9o0UtPJW0ttsWfqjEKEawoUWY8VjhGgxTScdiPd1G9ESAhFee\/o7YjmpjG1fR3Rhiwf\/a1WFfTNkTWnBY0iyJW+43K0\/7QHRdN4bDr\/QtoSlvgyKPIUBBeI9FBvWMCq8sOtCfu8\/KNNVu576jqDghEtpRyLWT0fCgZTltzyJ3DQ9W6hdCQe7GHsfN1p58Apq7ZY9bZdhbWtFB3SDqpJVCizyfmJ2c85ujuCFZNXVh+8Qdu2z5GkO8Ep15kC2Uk71Pkv4+JlFJbFMmSj2ua2GGmqooYajAj\/0zT1CrR4i+vn4CeQwjOZo16pK3KZ0XLVbG5FUv1mGEzzUVsOEEynKjZX7uIctRiHlloh07jDJOCDkT9Px00fqkBBP\/Bsv7mUircbcycE+LDr32ZtZBqCyy2OurWf9OyuWcrbqlQ8FV7E8waGScUAIT8FMRJlGkG0eozB2MhqkUODFo5341GEkdj2A6ia8RZYwggbHrn7B8hQCfeXtfqCtKjo5RoDmcBQEiRvIjjzRwtfJBjecCw7Wbas28SvcWPHEqxkSjjKq6VFC\/W4b4jMauS\/hEy6uBfszyzPes6HhdC5bd+sgjnK3wS5u1KCONrw8k\/+U2MokHxzveq2ZX8Y3Yx6W7FbxcYKxg\/MP4nmndVuLbvl4URQ\/1LBip0xGmDBU3ne+jVBmNqgja+r0w5uH2vd7MKjfbUX81DzfeP8ySkV6\/11g8+TNdELj3ZcOI\/EPEeAU6vFX0O7JWkaM7ilSAmU8lOaRi4gvPMt2R+EFwTYFjNF4AZoTZUf6yTUBcQ9bnVnBYu61qs3qQTR0tIt3y6Lrf6zYVWzTWO8nhILmLQoSMe1hKUCJd2WYAlKVyDzYktVj56wVKeB3yORju30SVQ\/8TGGrI2KM8QsZoMCJH4moDkCBTec67rV6I+grzTe2cHEnEk+jxpTH3x\/6uabPI\/1Z21DWMM9ZtFpevHs2eOMwKpkcKl8QurCO40h9kUmlddiqblvDjjcqd0T6YXtw7Fk8D2Cf1fIYNSYIevBP0hFxaGPIEVg3mlTVDi\/ytNuVRkuexMhz8x7OwaMf36hh4J\/CqMA+tWA8ZowKOHWo8RgE4vv8VuT1wAgv4KQLKxsqLwiU32LKapTVAQ+4WImQkB5cRNYfcIx4bMUf1Tk1wnsQNEj4ABfHs6TluwBxEt0myt22fbhyIXifWQEsGJH3XD1aWIyxL3ohHeqDuon+boKys4p5Ye89klSe8Sqe3f6Yn1Mp9ihsXrxa8Ti9VVtya6ihhhpqqAIH3XRP0fXPMD0rL73y1qC9oY9VcrJ\/VODEoxVHHl6cju721MqptFwzMYkXHiTqTbPutt2+1PfzLRSU7VjUczBAbET\/LHOtWsjz82Kl84h39u2NoYrql7Ajpkk83TVDoyopeKK\/tuEXMQmQ9sW93hW1n3ouTh7aRg\/z30BMUtiNx9tZdcSzVU9244XXEnFyz+NBvW2QR3bSRwUujYR28hhjFFqGgGLXSxrIDlwVxxjlxZ1UtFkSjyIm7uQYBRKjHRsB9tAzpSdBt74Mk2FxjKxGkWjyD+GpaCcyNpe3E3CMMIUTuo2HXqmZGyh+Zw5rKeXjVkEe61dtKTXiLXcwpXQ2WXtfPGxaDgDbIP8ts2He8iL6monpPzAurpnanSEmRq3K8LZ7M0wtaabDjt9uox9tWVHR1BjlCPTzp2UdA4Yb4au7O25DFqTmjazTrXhhjvgBoUD5tE3\/mqC8g7qAGXU4E8nkYSngr7Tyd1hKoRpw3HRPJJFm6E5oIFVJ4bmZa0ErXlPnUdLu57G7zDaI+qzqk2hRlvavxWnNuBUFrtgN+DBkMmIKqOtOTnzZ6jXr76m8\/U7l4lqnfKRFEn+o89\/ivbp7\/fcQzC5\/ZEWiOG1HT6Hstzava6fwDFh4oZyhKGftKnutGiiLLaUuE\/3UZLLDZE25mCUTZvlaVVL8Hq3VYlZn0blK7iSPEgUKDFcG\/PNIiCnQyIfbszBBhJHNf6MFKa9regZyQEHXvU5NYtSuyPnkI8KnqnGd38d\/dfe7CLGfUmwulb7bgs2lvS8VNq9bzIkYKr86VLQik48Zn9VSas1vU1AoOK+rFJ3YVpG7IjuYpbQN2nwEPWCej9tkTt9NxR2P\/2KLfgqqy9\/HmEUzryOTZOAQT+h5wXWTe12xOHbaFxjdXM2sGJOJsVA6cIWZ3Fhc877U9ZfS8YoTfBNyrVyh6VCMmEvZzetDHoRSa1gbKvvoTH89+uyWUioJ0bLdoAhbSkU03eCUP22YrfpZqDzWEHKgpVho\/Tk8riEo3iKPjSsK9mtbjSYB8B9ZrqzInxCU1bMVbGBWrj9C1mgqtndkly8JS\/aZ3vKKWP8EOF0i1lJ6rYUkRJD\/qHY1BF5o2vVYIHjW1HxHwE\/mN68X9j0hYUM53TD3zJbSwvajPS2l1b4EAWmhYT9nr9XfKJSlpUF9k55YK7x1i\/cNuo6o4fsLY31DDd8mvu0KUEMN3z7+P0+ndzdRqZhmAAAAAElFTkSuQmCC)","358cc918":"Linear Model vs GLM <br>\n\nA Linear model has the following assumptions -> \n1. Normally Distributed <br>\n2. Independent <br>\n3. Equal Variance <br>","ad6a8e32":"The three components in GLM <br>\n1. linear predictor\n2. link function\n3. probability distribution","944016bf":"### Notebook in making","064f2f58":"### No multicolinearity","989f48d5":"### Normality of Residual","c40f4adf":"1. Logistic Regression -> Binary Type <br>\n    a) Family -> Binomial() <br>\n    b) Link -> logit <br>\n    Example -> True\/False, Yes\/No <br> <br> <br> <br>\n    \n    \n2. Poisson Regression -> Count type <br>\n    a) Family -> Poisson() <br>\n    b) Link -> Log <br>\n    Example -> Number of votes, no of storms, no of vehicles etc. <br>","3da14189":"## Linear Modelling (Regression)","5ad89d7b":"## Linear Regression using statsmodels"}}