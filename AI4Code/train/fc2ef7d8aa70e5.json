{"cell_type":{"c4c7e012":"code","b56f1e6e":"code","ab8dba78":"code","b4f07dd6":"code","2453a056":"code","8ae12954":"code","a260a3ea":"code","2e2bb061":"code","f38eaed4":"code","7ef36147":"code","5a71ac55":"code","f65e42af":"code","9ca91a24":"code","618ca2cd":"code","81983cdb":"code","da7c463b":"code","0173d66c":"code","11e4fd2f":"code","f6ca1af9":"code","4f5320cb":"code","7cfab83a":"code","01513714":"code","ce98f2f7":"code","63487a5e":"code","d016fb19":"code","2a4b58e4":"code","9f5c0728":"code","6dc5cabe":"code","61d1d15c":"code","6b80fcba":"code","3e3b6a9a":"code","18bb81dc":"markdown","ba708e72":"markdown","95a69533":"markdown","16b7f0de":"markdown"},"source":{"c4c7e012":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport datetime \n\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn import metrics\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report\nfrom sklearn.metrics import plot_confusion_matrix\nfrom sklearn.model_selection import GridSearchCV, cross_val_score","b56f1e6e":"data1 = pd.read_csv(\"..\/input\/room-occupancy-prediction-iot\/Train1.csv\")\n\ndata2 = pd.read_csv(\"..\/input\/room-occupancy-prediction-iot\/Train2.csv\")\n\ntest = pd.read_csv(\"..\/input\/room-occupancy-prediction-iot\/Test.csv\")\n\n\ndata = pd.concat([data1, data2], axis = 0)\ndata = data.reset_index(drop = True)\ndata.head()","ab8dba78":"data = pd.concat([data, test], axis = 0)","b4f07dd6":"data.drop(columns=\"Unnamed: 0\", inplace = True)\n\ndata.head()","2453a056":"data.info()","8ae12954":"data.describe().T","a260a3ea":"corrmat = data.corr()\n\nplt.subplots(figsize=(7,7))\nsns.heatmap(corrmat, vmax=1, annot= True, cmap=\"Blues\", square=True);","2e2bb061":"corr_occupancy = data.corrwith(data[\"Occupancy\"], axis=0)\ncorr_occupancy = pd.DataFrame(corr_occupancy)\ncorr_occupancy.rename (columns = {0: 'occupancy'}, inplace = True)\n\nplt.subplots(figsize=(10,7))\nsns.set(font_scale=1.1)\nsns.heatmap(corr_occupancy, vmax=1,cmap=\"Blues\",fmt='.4f',annot=True);","f38eaed4":"plt.figure(figsize=(8,5))\nsns.scatterplot(x = data[\"Light\"], y = data[\"CO2\"],hue = data[\"Occupancy\"]);\nplt.show()","7ef36147":"plt.figure(figsize=(8,5))\nsns.scatterplot(x = data[\"Light\"], y = data[\"Temperature\"],hue = data[\"Occupancy\"]);\nplt.show()","5a71ac55":"plt.figure(figsize=(8,5))\nsns.scatterplot(x = data[\"Temperature\"], y = data[\"CO2\"],hue = data[\"Occupancy\"]);\nplt.show()","f65e42af":"plt.figure(figsize=(8,5))\nsns.scatterplot(x = data[\"Humidity\"], y = data[\"CO2\"],hue = data[\"Occupancy\"]);\nplt.show()","9ca91a24":"data['Date'] = pd.to_datetime(data['date'])\n\ndata = data.drop(columns = \"date\")\n\ndata[\"Year\"] = data['Date'].dt.year\ndata[\"Month\"] = data['Date'].dt.month\ndata[\"Day\"] = data['Date'].dt.day\n\ndata[\"Hour\"] = data['Date'].dt.hour\ndata[\"Minute\"] = data['Date'].dt.minute\ndata[\"Second\"] = data[\"Date\"].dt.second\n\ndata.head()","618ca2cd":"data.info()","81983cdb":"num_cols = [\"Temperature\", \"Humidity\", \"Light\", \"CO2\", \"HumidityRatio\"]\nfor i in num_cols:\n    plt.figure(figsize=(8,5))\n    sns.boxplot(x=data[i],palette=\"Set2\");\n    plt.show()","da7c463b":"def outlier_th(dataframe, col_name, q1, q3):\n    q1 = dataframe[col_name].quantile(q1)\n    q3 = dataframe[col_name].quantile(q3)\n    iqr = q3 - q1\n    low_limit = q1 - 1.5 * iqr\n    up_limit = q3 + 1.5 * iqr\n   \n    return low_limit, up_limit\n\nlow_humidity, up_humidity = outlier_th(data, \"Humidity\", q1=0.30, q3=0.60)\nlow_light, up_light = outlier_th(data, \"Light\", q1=0.25, q3=0.75)","0173d66c":"data = data[~((data[\"Humidity\"] < low_humidity) | (data[\"Humidity\"] > up_humidity))]\ndata = data[~((data[\"Light\"] < low_light) | (data[\"Light\"] > up_light))]","11e4fd2f":"plt.figure(figsize=(8,5))\nsns.boxplot(x=data[\"Humidity\"]);\nplt.show()","f6ca1af9":"plt.figure(figsize=(8,5))\nsns.boxplot(x=data[\"Light\"]);\nplt.show()","4f5320cb":"data[\"Light\/Hour\"] = data[\"Light\"] \/ data[\"Hour\"]\n","7cfab83a":"data.isnull().sum()","01513714":"data = data.fillna(0)\n\ndata.isnull().sum()","ce98f2f7":"train = data[:9917]\ntest = data[9917:]\n\n\nX_train = train.drop(columns=[\"Occupancy\",\"Date\"])\ny_train = train[\"Occupancy\"].values\n\nX_test = test.drop(columns=[\"Occupancy\",\"Date\"])\ny_test = test[\"Occupancy\"].values\n\nprint(\"Data Shape:\", data.shape)\nprint(\"X_train Shape:\", X_train.shape)\nprint(\"y_train Shape:\", y_train.shape)\nprint(\"X_test Shape:\", X_test.shape)\nprint(\"y_test Shape:\", y_test.shape)","63487a5e":"model = RandomForestClassifier()\n\nparams = {\"max_depth\": [2,5,10,14],\n             \"max_features\": [2,5,7,14],\n             \"n_estimators\": [2,7],\n             \"min_samples_split\": [2,5]}\n\ncv_model = GridSearchCV(model, params, cv=10, n_jobs=-1, verbose=0).fit(X_train,y_train)","d016fb19":"print(\"Best Parameters: \" + str(cv_model.best_params_))","2a4b58e4":"data_grid_rf = pd.DataFrame(cv_model.cv_results_)\ndata_grid_rf","9f5c0728":"rf_best_model = cv_model.best_estimator_\n\n#Best model score\n\nrf_crossVal = cv_model.best_score_\nrf_crossVal","6dc5cabe":"rf_best_model.fit(X_train, y_train)","61d1d15c":"rf_best_model.score(X_test, y_test)","6b80fcba":"y_pred = rf_best_model.predict(X_test)\ny_pred","3e3b6a9a":"accuracy = accuracy_score(y_test, y_pred)\nprint(\"Test Accuracy: {:.4%}\".format(accuracy))\n\nplot_confusion_matrix(rf_best_model,X_test,y_test, cmap=\"Blues\")\nplt.show()\n    \nprint(classification_report(y_test,y_pred))","18bb81dc":"<a id=\"5\"><\/a>\n<p style=\"background-color:#728FCE;font-family:newtimeroman;color:#F4FBFE;font-size:180%;text-align:center;border-radius:10px 10px;\"> MODELLING \ud83e\uddbe <\/p>","ba708e72":"<a id=\"4\"><\/a>\n<p style=\"background-color:#728FCE;font-family:newtimeroman;color:#F4FBFE;font-size:180%;text-align:center;border-radius:10px 10px;\"> PREPROCESSING <\/p>","95a69533":"\n<p style=\"background-color:#728FCE;font-family:newtimeroman;color:#F4FBFE;font-size:180%;text-align:center;border-radius:10px 10px;\">OCCUPANCY DETECTION OF AN OFFICE<\/p>\n\nIn this study, real data obtained from an IoT device were analyzed and the human presence in the room was determined by supervised learning algorithms.\n\n<center><img src = \"https:\/\/t3.ftcdn.net\/jpg\/03\/00\/69\/62\/360_F_300696256_G3FmsyVhXJFyIqTqjD0Z2bhLObBFJ36Q.jpg\"><\/center>\n\n<p style=\"background-color:#728FCE;font-family:newtimeroman;color:#F4FBFE;font-size:180%;text-align:center;border-radius:10px 10px;\">TABLE OF CONTENTS <\/p>\n\n#### [1. ABOUT DATASET](#1)\n\n#### [2. IMPORTING LIBRARIES AND LOADING DATA](#2)\n \n#### [3. EXPLORATORY DATA ANALYSIS (EDA) ](#3)\n\n#### [4. PREPROCESSING](#4)\n\n#### [5. MODELING](#5)\n\n<a id=\"1\"><\/a>\n<p style=\"background-color:#728FCE;font-family:newtimeroman;color:#F4FBFE;font-size:180%;text-align:center;border-radius:10px 10px;\">ABOUT DATASET <\/p>\n\n* <b> Train1 : <\/b> Measurements taken with the doors closed.\n* <b> Train2 : <\/b> Measurements taken with the doors closed.\n* <b> Test : <\/b> Measurements taken with the doors open.\n\n**Data Labels**\n\n* <b>Date : <\/b> The time and time of measurement\n* <b>Temperature : <\/b>  Temperature value\n* <b>Humidity : <\/b>   Humidity amount\n* <b>Light : <\/b>  Amount of Light\n* <b>CO2 : <\/b>  Amount of Carbon Dioxide\n* <b>HumidityRatio : <\/b>  Humidity Rate\n* <b>Oppupancy : <\/b>  Human presence in the office room\n<p> <\/p>\n\n\nThe model created using Train1 and Train2 has been tested for Test data.\n\n<p> <\/p>\n\n<a id=\"2\"><\/a>\n<p style=\"background-color:#728FCE;font-family:newtimeroman;color:#F4FBFE;font-size:180%;text-align:center;border-radius:10px 10px;\">IMPORTING LIBRARIES AND LOADING DATA<\/p>\n","16b7f0de":"<a id=\"3\"><\/a>\n<p style=\"background-color:#728FCE;font-family:newtimeroman;color:#F4FBFE;font-size:180%;text-align:center;border-radius:10px 10px;\">EXPLORATORY DATA ANALYSIS \u2692 <\/p>"}}