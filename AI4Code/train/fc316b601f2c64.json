{"cell_type":{"6487883f":"code","8d6cabab":"code","e5ceb352":"code","0f2aaecb":"code","58c36004":"code","bf7befe4":"code","84e4ae6a":"code","9f80ed91":"code","c4057b91":"code","00ade5fc":"code","92789554":"code","d10f5685":"code","4a89134e":"code","3618f8b7":"code","205d0e4e":"code","4dc73260":"code","a657be8b":"code","c11e1447":"code","f132753d":"code","7266e0a6":"code","8c32f40c":"code","d7a1af7c":"code","a38e6108":"code","41d5644b":"code","c1b9fbfe":"code","34a3fecf":"code","a1b4cf05":"code","2dfd35ae":"code","186f880e":"code","34ed82f5":"code","91400b0f":"code","22102c75":"code","b157cdad":"code","194c0607":"code","738a532c":"markdown","819082ca":"markdown","9202759c":"markdown","56a031bd":"markdown","e4f95fc9":"markdown","c47b4286":"markdown","2d50cd1c":"markdown","76521d18":"markdown","672e3839":"markdown","8dc31c4d":"markdown","7c8b6476":"markdown","dd3ea641":"markdown","37a8c291":"markdown","7ffc402f":"markdown","8d2644e6":"markdown","e51fc2d9":"markdown","ebc18316":"markdown","f1895072":"markdown"},"source":{"6487883f":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline","8d6cabab":"df = pd.read_csv('..\/input\/hr-analytics\/HR_comma_sep.csv')","e5ceb352":"df.head(10)","0f2aaecb":"df.info()","58c36004":"df.describe()","bf7befe4":"df['left'].describe()","84e4ae6a":"print(\"No of employees lost by the company: \", df[df['left']==1].shape[0])\nprint(\"No of employees retained by the company: \", df[df['left']==0].shape[0])","9f80ed91":"df.groupby('left').mean() ","c4057b91":"import seaborn as sns\nfig, ax = plt.subplots(1, 1, figsize=(10, 5))\nsns.heatmap(df.corr(), linewidths = 2, cmap=\"plasma\", annot=True)","00ade5fc":"df1 = df[['satisfaction_level', 'last_evaluation', 'number_project',\n       'average_montly_hours', 'time_spend_company', 'left']]","92789554":"fig, ax = plt.subplots(1, 1, figsize=(10, 5))\nsns.heatmap(df1.corr(), linewidths = 2, cmap=\"plasma\", annot=True)","d10f5685":"sns.pairplot(df, hue=\"left\")","4a89134e":"df1 = df[['left','salary']]\nleft = df1[df['left']==1].salary.value_counts()\nretained = df1[df['left']==0].salary.value_counts()\nleft_percent = left \/ (left + retained)\nretain_percent = retained \/ (left + retained)\ncounts1 = {\"retained\":retained, \"left\":left, \"retained_percent\":retain_percent, \"left_percent\":left_percent}\ncounts1 = pd.DataFrame(counts1)\ncounts1","3618f8b7":"x = counts1.index\ny1 = counts1.retained\ny2 = counts1.left\n\nf, axs = plt.subplots(2,2,figsize=(15,5))\nplt.subplot(1, 2, 1)\nplt.bar(x, y1, color='r')\nplt.bar(x, y2, bottom=y1, color='b')\nplt.title(\"Number of Employee Retention grouped by Salary\")\nplt.xlabel(\"Salary\")\nplt.ylabel(\"Number of Employees Retained\/Left\")\nplt.legend(['retained', 'left'])\ny1 = counts1.retained_percent\ny2 = counts1.left_percent\n\nplt.subplot(1, 2, 2)\nplt.bar(x, y1, color='r')\nplt.bar(x, y2, bottom=y1, color='b')\nplt.title(\"Percent of Employee Retention grouped by Salary\")\nplt.xlabel(\"Salary\")\nplt.ylabel(\"Percent of Employees Retained\/Left\")\nplt.legend(['retained', 'left'])\n\nplt.show()","205d0e4e":"df1 = df[['left','Department']]\nleft = df1[df['left']==1].Department.value_counts()\nretained = df1[df['left']==0].Department.value_counts()\nleft_percent = left \/ (left + retained)\nretain_percent = retained \/ (left + retained)\ncounts2 = {\"retained\":retained, \"left\":left, \"retained_percent\":retain_percent, \"left_percent\":left_percent}\ncounts2 = pd.DataFrame(counts2)\ncounts2","4dc73260":"x = counts2.index\ny1 = counts2.retained\ny2 = counts2.left\n\nf, axs = plt.subplots(2,2,figsize=(15,5))\nplt.subplot(1, 2, 1)\nplt.bar(x, y1, color='r')\nplt.bar(x, y2, bottom=y1, color='b')\nplt.title(\"Number of Employee Retention grouped by Department\")\nplt.xlabel(\"Department\")\nplt.ylabel(\"Number of Employees Retained\/Left\")\nplt.xticks(rotation=80)\nplt.legend(['retained', 'left'])\n\ny1 = counts2.retained_percent\ny2 = counts2.left_percent\n\nplt.subplot(1, 2, 2)\nplt.bar(x, y1, color='r')\nplt.bar(x, y2, bottom=y1, color='b')\nplt.title(\"Percent of Employee Retention grouped by Department\")\nplt.xlabel(\"Department\")\nplt.ylabel(\"Percent of Employees Retained\/Left\")\nplt.xticks(rotation=80)\nplt.legend(['retained', 'left'])\n\nplt.show()","a657be8b":"df1 = df[['left','Work_accident']]\nleft = df1[df['left']==1].Work_accident.value_counts()\nretained = df1[df['left']==0].Work_accident.value_counts()\nleft_percent = left \/ (left + retained)\nretain_percent = retained \/ (left + retained)\ncounts3 = {\"retained\":retained, \"left\":left, \"retained_percent\":retain_percent, \"left_percent\":left_percent}\ncounts3 = pd.DataFrame(counts3)\ncounts3.index = [\"No\", \"Yes\"]\ncounts3","c11e1447":"x = counts3.index\ny1 = counts3.retained\ny2 = counts3.left\n\nf, axs = plt.subplots(2,2,figsize=(15,5))\nplt.subplot(1, 2, 1)\nplt.bar(x, y1, color='r')\nplt.bar(x, y2, bottom=y1, color='b')\nplt.title(\"Number of Employee Retention grouped by Work Accident\")\nplt.xlabel(\"Work Accident\")\nplt.ylabel(\"Number of Employees Retained\/Left\")\nplt.legend(['retained', 'left'])\n\ny1 = counts3.retained_percent\ny2 = counts3.left_percent\n\nplt.subplot(1, 2, 2)\nplt.bar(x, y1, color='r')\nplt.bar(x, y2, bottom=y1, color='b')\nplt.title(\"Percent of Employee Retention grouped by Work Accident\")\nplt.xlabel(\"Work Accident\")\nplt.ylabel(\"Percent of Employees Retained\/Left\")\nplt.legend(['retained', 'left'])\n\nplt.show()","f132753d":"df1 = df[['left','promotion_last_5years']]\nleft = df1[df['left']==1].promotion_last_5years.value_counts()\nretained = df1[df['left']==0].promotion_last_5years.value_counts()\nleft_percent = left \/ (left + retained)\nretain_percent = retained \/ (left + retained)\ncounts4 = {\"retained\":retained, \"left\":left, \"retained_percent\":retain_percent, \"left_percent\":left_percent}\ncounts4 = pd.DataFrame(counts4)\ncounts4.index = [\"No\", \"Yes\"]\ncounts4","7266e0a6":"x = counts4.index\ny1 = counts4.retained\ny2 = counts4.left\n\nf, axs = plt.subplots(2,2,figsize=(15,5))\nplt.subplot(1, 2, 1)\nplt.bar(x, y1, color='r')\nplt.bar(x, y2, bottom=y1, color='b')\nplt.title(\"Number of Employee Retention grouped by Promotion in last 5 years\")\nplt.xlabel(\"Work Accident\")\nplt.ylabel(\"Number of Employees Retained\/Left\")\nplt.legend(['retained', 'left'])\n\ny1 = counts4.retained_percent\ny2 = counts4.left_percent\n\nplt.subplot(1, 2, 2)\nplt.bar(x, y1, color='r')\nplt.bar(x, y2, bottom=y1, color='b')\nplt.title(\"Percent of Employee Retention grouped by Promotion in last 5 years\")\nplt.xlabel(\"Work Accident\")\nplt.ylabel(\"Percent of Employees Retained\/Left\")\nplt.legend(['retained', 'left'])\n\nplt.show()","8c32f40c":"sns.boxplot(data = df, y='satisfaction_level', x='left')","d7a1af7c":"box=sns.boxplot(data = df, y='last_evaluation', x='left')","a38e6108":"sns.boxplot(data = df, y='average_montly_hours', x='left')","41d5644b":"sns.boxplot(data = df, y='time_spend_company', x='left')","c1b9fbfe":"sns.boxplot(data = df, y='number_project', x='left')","34a3fecf":"df1 = df[['salary', 'Department','satisfaction_level', 'average_montly_hours', 'promotion_last_5years','left']]","a1b4cf05":"df1 = pd.get_dummies(df1, columns = ['Department','salary'])","2dfd35ae":"df1.head()","186f880e":"X = np.asarray(df1.loc[:, df1.columns != 'left'])\ny = np.asarray(df1.loc[:, df1.columns == 'left'])","34ed82f5":"from sklearn import preprocessing\n# scaler = preprocessing.StandardScaler().fit(X)","91400b0f":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score, f1_score, confusion_matrix, classification_report\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2,random_state = 1)","22102c75":"from sklearn.metrics import roc_auc_score,roc_curve\nfrom sklearn.linear_model import LogisticRegression\nmodel = LogisticRegression(max_iter=1000)\nmodel.fit(X_train,y_train.ravel())\nlog_pred = model.predict(X_test)","b157cdad":"print(\" accuracy = \", accuracy_score(y_test, log_pred)) \nprint(\" f1_score = \", f1_score(y_test, log_pred))\nprint(confusion_matrix(y_test, log_pred))\nprint(classification_report(y_test, log_pred))","194c0607":"from sklearn.metrics import roc_auc_score,roc_curve\nmodel = LogisticRegression(max_iter=1000)\nmodel.fit(X_train,y_train.ravel())\n\ny_pred=model.predict(X_test)\ny_proba=model.predict_proba(X_test)\n\nns_probs = [0 for _ in range(len(y_test))]\nns_auc = roc_auc_score(y_test, ns_probs)\nprint(\"ROC AUC SCORE: \",roc_auc_score(y_test, y_proba[:, 1]))\nns_fpr, ns_tpr, _ = roc_curve(y_test, ns_probs)\nlr_fpr, lr_tpr, _ = roc_curve(y_test, y_proba[:,1])\nplt.plot(ns_fpr, ns_tpr, linestyle='--', label='No Skill')\nplt.plot(lr_fpr, lr_tpr, marker='.', label='Logistic')\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')","738a532c":"### D. Comparing Employee Retention with promotion in last 5 years","819082ca":"### B. Comparing Employee Retention with Department","9202759c":"### Pairplot with Employee Retention as hue","56a031bd":"## Plotting bar charts to show the correlation between department and employee retention","e4f95fc9":"## Building a Logistic Regression Model","c47b4286":"### C. Comparing Employee Retention with Work Accident","2d50cd1c":"### A. Comparing Employee Retention with Salary","76521d18":"## Evaluation of the model","672e3839":"### Heatmap of continuous value attributes only","8dc31c4d":"## Understanding impact of employee salaries on retention using bar charts","7c8b6476":"Here, we see that the lower the salary, the more number of employees left their job at the company","dd3ea641":"## Exploratory Data Analysis\n\nNow do some exploratory data analysis to figure out which variables have direct and clear impact on employee retention (ie, whether they leave the company or continue to work) ","37a8c291":"We see that the plots made by each of the two from the following classifies Employees Retained from Employees left:\n- satisfaction level\n- average monthly hours\n- last evaluation","7ffc402f":"Here, we see that the percentage of Employees retained are slightly greater for the Department Management and RandD","8d2644e6":"## Importing and understanding the data ","e51fc2d9":"### E. Comparing Employee Retention with continuous valued attributes, namely:\n\n1. satisfaction_level\n2. last_evaluation\n3. average_montly_hours\n4. time_spend_company\n5. sns.boxplot(data = df, y='number_project', x='left')","ebc18316":"Thus, we see that Satisfaction_level has a significant influence on Employee Retention","f1895072":"Though the number of Employees retained are higher when they have gotten a promotion in the last 5 years, there are very few Employees with promotions"}}