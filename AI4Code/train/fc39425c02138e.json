{"cell_type":{"52b99496":"code","1fe8954e":"code","568460f2":"code","600c8249":"code","2cc69d7e":"code","65ca5006":"code","3cf731fa":"code","f4bd6802":"code","d700a880":"code","8f7d625e":"code","cfc0d5a4":"code","7dc64f6c":"code","b171aa78":"code","da4949e9":"code","0d8ce8e9":"markdown","b46950c2":"markdown","1531fd40":"markdown","b52204d1":"markdown","72ce4b8c":"markdown","09953e49":"markdown","6cd0656e":"markdown"},"source":{"52b99496":"!pip install -q hvplot","1fe8954e":"import pandas as pd\nimport numpy as np\nfrom time import time\nimport hvplot.pandas\n\nimport matplotlib.pyplot as plt","568460f2":"data = pd.read_csv('\/kaggle\/input\/college-data\/data.csv')\ndata.head()","600c8249":"data.loc[data.grad_rate > 100, 'grad_rate'] = 100","2cc69d7e":"accuracy = {}\nspeed = {}\n\nX = data.drop('private', axis=1)\ny = data.private","65ca5006":"from sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import RepeatedStratifiedKFold\n\nmodel = GradientBoostingClassifier()\n\nstart = time()\ncv = RepeatedStratifiedKFold(n_splits=5, n_repeats=5, random_state=42)\nscore = cross_val_score(model, X, y, scoring='accuracy', cv=cv, n_jobs=-1)\n\nspeed['GradientBoosting'] = np.round(time() - start, 3)\naccuracy['GradientBoosting'] = (np.mean(score) * 100).round(3)\n\nprint(f\"Mean Accuracy: {accuracy['GradientBoosting']}\\nSTD: {np.std(score):.3f}\\nRun Time: {speed['GradientBoosting']}s\")","3cf731fa":"from xgboost import XGBClassifier\n\nmodel = XGBClassifier()\n\nstart = time()\ncv = RepeatedStratifiedKFold(n_splits=5, n_repeats=5, random_state=42)\nscore = cross_val_score(model, X, y, scoring='accuracy', cv=cv, n_jobs=-1)\n\nspeed['XGBoost'] = np.round(time() - start, 3)\naccuracy['XGBoost'] = (np.mean(score) * 100).round(3)\n\nprint(f\"Mean Accuracy: {accuracy['XGBoost']}\\nSTD: {np.std(score):.3f}\\nRun Time: {speed['XGBoost']}s\")","f4bd6802":"from lightgbm import LGBMClassifier\n\nmodel = LGBMClassifier()\n\nstart = time()\ncv = RepeatedStratifiedKFold(n_splits=5, n_repeats=5, random_state=42)\nscore = cross_val_score(model, X, y, scoring='accuracy', cv=cv, n_jobs=-1)\n\nspeed['LGBM'] = np.round(time() - start, 3)\naccuracy['LGBM'] = (np.mean(score) * 100).round(3)\n\nprint(f\"Mean Accuracy: {accuracy['LGBM']}\\nSTD: {np.std(score):.3f}\\nRun Time: {speed['LGBM']}s\")","d700a880":"from catboost import CatBoostClassifier\n\nmodel = CatBoostClassifier()\n\nstart = time()\ncv = RepeatedStratifiedKFold(n_splits=5, n_repeats=5, random_state=42)\nscore = cross_val_score(model, X, y, scoring='accuracy', cv=cv, n_jobs=-1)\n\nspeed['CatBoost'] = np.round(time() - start, 3)\naccuracy['CatBoost'] = (np.mean(score) * 100).round(3)\n\nprint(f\"Mean Accuracy: {accuracy['CatBoost']}\\nSTD: {np.std(score):.3f}\\nRun Time: {speed['CatBoost']}s\")","8f7d625e":"from sklearn.ensemble import AdaBoostClassifier\n\nmodel = AdaBoostClassifier()\n\nstart = time()\ncv = RepeatedStratifiedKFold(n_splits=5, n_repeats=5, random_state=42)\nscore = cross_val_score(model, X, y, scoring='accuracy', cv=cv, n_jobs=-1)\n\nspeed['AdaBoost'] = np.round(time() - start, 3)\naccuracy['AdaBoost'] = (np.mean(score) * 100).round(3)\n\nprint(f\"Mean Accuracy: {accuracy['AdaBoost']}\\nSTD: {np.std(score):.3f}\\nRun Time: {speed['AdaBoost']}s\")","cfc0d5a4":"for algo, result in accuracy.items():\n    print(f\"{algo:{20}}: Score: {result}, Speed: {speed[algo]}\")","7dc64f6c":"accuracy_df = pd.DataFrame(list(accuracy.items()), columns=['Algorithm', 'Accuracy'])\n\nspeed_df = pd.DataFrame(list(speed.items()), columns=['Algorithm', 'Time'])","b171aa78":"accuracy_df.hvplot.barh(x='Algorithm', y='Accuracy')","da4949e9":"speed_df.hvplot.barh(x='Algorithm', y='Time')","0d8ce8e9":"# 5. AdaBoost","b46950c2":"# `CatBoost` vs `Light GBM` vs `XGBoost`","1531fd40":"# 3. LightGBM","b52204d1":"# 2. XGBoost","72ce4b8c":"# 1. Scikit-Learn","09953e49":"# 4. CatBoost","6cd0656e":"# 6. Scikit-Learn vs XGBoost vs LightGBM vs CatBoost"}}