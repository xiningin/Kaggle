{"cell_type":{"a87790f9":"code","127a1641":"code","6804072f":"code","581521fc":"code","d5f76bf2":"code","7aee4869":"code","50954949":"code","ba94114b":"code","68ce7a6a":"code","fddf3d28":"code","a447b5e3":"code","e3b5f4ec":"code","caa91d37":"code","1a1af03a":"code","eb98c3bf":"code","2492d780":"code","45fa36c2":"code","1a823704":"code","3321e700":"code","e2606bd2":"code","1ee17d92":"code","a2f70363":"code","4ecc7b81":"code","b105ac90":"code","165784f7":"code","18316a20":"code","36147623":"code","caee2b68":"code","cd1d0972":"code","5645de07":"code","ca9658fe":"code","660731bb":"code","8f0bf57a":"code","7524ac0b":"code","bbf4077c":"code","31e3e228":"code","f5cfb417":"code","1d34ddd4":"code","9913426c":"code","202b98b2":"code","304554e8":"code","cca5bdb2":"code","9a9f8bb9":"code","040d125b":"code","6201095a":"code","c46ade6a":"code","b73bac8e":"code","15266845":"code","6c9bdb9e":"code","324074f8":"code","e6c36dc4":"code","c9d3dcba":"code","321081fc":"code","84f9a104":"code","b0ed4a5f":"code","49059b2d":"code","82b9eddf":"code","98beedf2":"code","60cdf8bd":"code","82556950":"markdown","daa09131":"markdown","43aad9a7":"markdown","56da4a8c":"markdown"},"source":{"a87790f9":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","127a1641":"df=pd.read_csv(\"..\/input\/zomato-bangalore-restaurants\/zomato.csv\")\ndf","6804072f":"df.head()","581521fc":"df.tail()","d5f76bf2":"df.info()","7aee4869":"df.describe()","50954949":"df.columns.tolist()","ba94114b":"df.shape","68ce7a6a":"df.isna().sum()","fddf3d28":"#for rating of resturant url,adress,phone,listed_in(type)not needed so to be dropped\ndf=df.drop(['url', 'address','phone','listed_in(city)'], axis=1)\ndf","a447b5e3":"df.name.value_counts().head()","e3b5f4ec":"df.name.value_counts().tail()","caa91d37":"plt.figure(figsize = (13,8))\nr = df.name.value_counts()[:50].plot(kind = 'bar',color='green',fontsize=15)\nr.legend(['Restaurants'])\nplt.xlabel(\"Name of Restaurant\")\nplt.ylabel(\"Count of Restaurants\")\nplt.title(\"Name vs count of Restaurant\",fontsize =15, weight = 'bold',color='red')","1a1af03a":"#no of  accepting online ordesrs\ndf.online_order.value_counts()","eb98c3bf":"plt.figure(figsize = (13,8))\ns= df.online_order.value_counts().plot(kind = 'bar',color='yellow',fontsize=15)\nr.legend(['orders'])\nplt.xlabel(\"online orders\")\nplt.ylabel(\"Count \")\nplt.title(\"No of online orders\",fontsize =15, weight = 'bold',color='red')","2492d780":"df['book_table'].value_counts()","45fa36c2":"plt.figure(figsize = (13,8))\ns= df.book_table.value_counts().plot(kind = 'bar',color='red',fontsize=15)\nr.legend(['book table'])\nplt.xlabel(\"book_table\")\nplt.ylabel(\"no of resturants \")\nplt.title(\"book table facility\",fontsize =15, weight = 'bold',color='blue')","1a823704":"#location\ndf['location'].value_counts()[:15]","3321e700":"plt.figure(figsize = (13,8))\ns= df.location.value_counts()[:20].plot(kind = 'bar',color='pink',fontsize=25)\nr.legend(['location'])\nplt.xlabel(\"location\")\nplt.ylabel(\"count \")\nplt.title(\"location vs count\",fontsize =15, weight = 'bold',color='blue')","e2606bd2":"df['rest_type'].value_counts()","1ee17d92":"plt.figure(figsize = (13,8))\ns= df.rest_type.value_counts()[:20].plot(kind = 'bar',color='lightskyblue',fontsize=25)\nr.legend(['rest type'])\nplt.xlabel(\"rest_type\")\nplt.ylabel(\"count \")\nplt.title(\"rest type vs count\",fontsize =15, weight = 'bold',color='blue')","a2f70363":"#rename approx cost column\ndf.rename(columns={'approx_cost(for two people)': 'approx_cost'}, inplace=True)","4ecc7b81":"df['approx_cost'].value_counts()","b105ac90":"plt.figure(figsize = (13,8))\ns= df.approx_cost.value_counts()[:20].plot(kind = 'bar',color='orange',fontsize=25)\nr.legend(['approx_cost'])\nplt.xlabel(\"approx_cost\")\nplt.ylabel(\"count \")\nplt.title(\"approx cost vs count\",fontsize =15, weight = 'bold',color='blue')","165784f7":"df=df[df.dish_liked.isna()==False]\n","18316a20":"df.isna().sum()","36147623":"df['dish_liked'].value_counts()\n","caee2b68":"plt.figure(figsize = (13,8))\ns= df.dish_liked.value_counts()[:20].plot(kind = 'bar',color='lightgreen',fontsize=25)\nr.legend(['dish liked'])\nplt.xlabel(\"dish_liked\")\nplt.ylabel(\"count \")\nplt.title(\"approx cost vs count\",fontsize =15, weight = 'bold',color='blue')","cd1d0972":"df['rates'].value_counts()","5645de07":"df=df[df.rates.isna()==False]","ca9658fe":"df['rates'].value_counts()","660731bb":"plt.figure(figsize = (13,8))\ns= df.rates.value_counts()[:20].plot(kind = 'bar',color='lightgreen',fontsize=25)\nr.legend(['rates'])\nplt.xlabel(\"rates\")\nplt.ylabel(\"count \")\nplt.title(\"rates vs count\",fontsize =15, weight = 'bold',color='blue')","8f0bf57a":"df['cuisines'].value_counts()","7524ac0b":"plt.figure(figsize = (12,6))\nsns.countplot(x=df['rates'], hue = df['online_order'])\nplt.ylabel(\"Restaurants that Accept\/Not Accepting online orders\")\nplt.title(\"rate vs online order\",weight = 'bold')","bbf4077c":"df['location'].nunique()","31e3e228":"#creating dummies for online order,table booked as it contains categorical yes and no\ndf['online_order']= pd.get_dummies(df.online_order, drop_first=True)\ndf['book_table']= pd.get_dummies(df.book_table, drop_first=True)\ndf\n","f5cfb417":"df.drop(columns=['dish_liked','reviews_list','menu_item','listed_in(type)'], inplace  =True)","1d34ddd4":"df['rest_type'] = df['rest_type'].str.replace(',' , '') \ndf['rest_type'] = df['rest_type'].astype(str).apply(lambda x: ' '.join(sorted(x.split())))\ndf['rest_type'].value_counts().head()","9913426c":"df['cuisines'] = df['cuisines'].str.replace(',' , '') \ndf['cuisines'] = df['cuisines'].astype(str).apply(lambda x: ' '.join(sorted(x.split())))\ndf['cuisines'].value_counts().head()","202b98b2":"from sklearn.preprocessing import LabelEncoder\nT = LabelEncoder()                 \ndf['location'] = T.fit_transform(df['location'])\ndf['rest_type'] = T.fit_transform(df['rest_type'])\ndf['cuisines'] = T.fit_transform(df['cuisines'])\n#df['dish_liked'] = T.fit_transform(df['dish_liked'].","304554e8":"df[\"approx_cost\"] = df[\"approx_cost\"].astype(str).str.replace(',' , '') ","cca5bdb2":"df[\"approx_cost\"] =df[\"approx_cost\"].astype('float')","9a9f8bb9":"df.head()","040d125b":"x = df.drop(['rates','name','approx_cost'],axis = 1)\nx","6201095a":"y=df['rates']\ny","c46ade6a":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.3,random_state = 33)\nx_train","b73bac8e":"x_test","15266845":"x_test.fillna(x_train.mean(), inplace=True)","6c9bdb9e":"col_mask=df.isnull().any(axis=0) ","324074f8":"row_mask=df.isnull().any(axis=1)","e6c36dc4":"df.loc[row_mask,col_mask]","c9d3dcba":"np.isnan(x.values.any())","321081fc":"df=df[df.approx_cost.isna()==False]","84f9a104":"from sklearn.linear_model import LinearRegression\nlr = LinearRegression()\nlr.fit(x_train,y_train)\ny_pred_lr = lr.predict(x_test)","b0ed4a5f":"lr.score(x_test, y_test)*100","49059b2d":"from sklearn import metrics\nfrom sklearn.ensemble import RandomForestRegressor\nrfr = RandomForestRegressor()\nrfr.fit(x_train,y_train)\ny_pred_rfr = rfr.predict(x_test)","82b9eddf":"rfr.score(x_test,y_test)*100","98beedf2":"##SVM\nfrom sklearn import metrics\nfrom sklearn.svm import SVC\ns= SVC()\ns.fit(x_train,y_train)\ny_pred_s = s.predict(x_test)  ","60cdf8bd":"s.score(x_test,y_test)*100","82556950":"# 87 locations from where resturants accessed through zomato\n","daa09131":"# online orders are more","43aad9a7":"#average rating is 3.9\n","56da4a8c":"biriyani most liked"}}