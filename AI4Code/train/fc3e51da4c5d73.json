{"cell_type":{"7e92ee79":"code","4da0cb9a":"code","33d8fdb9":"code","1edd8ebe":"code","b0da9a2c":"code","c5c36ad8":"code","8bd6ec11":"code","6aea8381":"code","efed752a":"code","194efcb3":"code","9a9fa706":"code","f855995a":"code","0138b9d6":"code","5b7e3be2":"code","b9f87c96":"code","320f0adc":"code","92489f77":"code","b627646d":"code","bd163ada":"code","c138cd54":"code","02a8ead3":"code","37cc2e6b":"code","5894f6b9":"code","8949ec3e":"code","c57792c7":"markdown","dabfaa54":"markdown","d32cc18c":"markdown","2a977ea3":"markdown","eb91e035":"markdown","81f0cebe":"markdown","dbe232ee":"markdown","32d996b7":"markdown","ec0859ea":"markdown","37905c79":"markdown","0a0f81ba":"markdown"},"source":{"7e92ee79":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \nfor dirname, _, filenames in os.walk('\/kaggle\/output'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4da0cb9a":"import os\nimport numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport plotly.express as px\nfrom plotly.offline import init_notebook_mode\nimport plotly.graph_objects as go\ninit_notebook_mode(connected=True)\npd.set_option('display.max_columns', 5000)\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nos.mkdir('\/kaggle\/working\/individual_charts\/')\n\n# Load the data\n\ndef load_csv(base_dir,file_name):\n    \"\"\"Loads a CSV file into a Pandas DataFrame\"\"\"\n    file_path = os.path.join(base_dir,file_name)\n    df = pd.read_csv(file_path,low_memory=False,encoding='ISO-8859-1')\n    return df    \n\nbase_dir_2017 = '\/kaggle\/input\/kaggle-survey-2017\/'\nfile_name_2017 = 'multipleChoiceResponses.csv'\nsurvey_df_2017 = load_csv(base_dir_2017,file_name_2017)\nresponses_df_2017 = survey_df_2017[1:]\nsurvey_df_2017.to_csv('2017_kaggle_ds_and_ml_survey_responses_only.csv',index=False)\n\nbase_dir_2018 = '\/kaggle\/input\/kaggle-survey-2018\/'\nfile_name_2018 = 'multipleChoiceResponses.csv'\nsurvey_df_2018 = load_csv(base_dir_2018,file_name_2018)\nresponses_df_2018 = survey_df_2018[1:]\nsurvey_df_2018.to_csv('2018_kaggle_ds_and_ml_survey_responses_only.csv',index=False)\n\nbase_dir_2019 = '\/kaggle\/input\/kaggle-survey-2019\/'\nfile_name_2019 = 'multiple_choice_responses.csv'\nsurvey_df_2019 = load_csv(base_dir_2019,file_name_2019)\nresponses_df_2019 = survey_df_2019[1:]\nsurvey_df_2019.to_csv('2019_kaggle_ds_and_ml_survey_responses_only.csv',index=False)\n\nbase_dir_2020 = '\/kaggle\/input\/kaggle-survey-2020'\nfile_name_2020 = 'kaggle_survey_2020_responses.csv'\nsurvey_df_2020 = load_csv(base_dir_2020,file_name_2020)\nresponses_df_2020 = survey_df_2020[1:]\nsurvey_df_2020.to_csv('2020_kaggle_ds_and_ml_survey_responses_only.csv',index=False)\n\nbase_dir_2021 = '\/kaggle\/input\/kaggle-survey-2021\/'\nfile_name_2021 = 'kaggle_survey_2021_responses.csv'\nsurvey_df_2021 = load_csv(base_dir_2021,file_name_2021)\nresponses_df_2021 = survey_df_2021[1:]\nsurvey_df_2021.to_csv('2021_kaggle_ds_and_ml_survey_responses_only.csv',index=False)\n\n# print('Total Number of Responses 2017: ',responses_df_2017.shape[0])\n# print('Total Number of Responses 2018: ',responses_df_2018.shape[0])\n# print('Total Number of Responses 2019: ',responses_df_2019.shape[0])\n# print('Total Number of Responses 2020: ',responses_df_2020.shape[0])\n# print('Total Number of Responses 2021: ',responses_df_2021.shape[0])\nresponses_df_2021_backup=responses_df_2021\nprint('Data Loaded succesfully')","33d8fdb9":"def count_then_return_percent(dataframe,column_name):\n    '''\n    A helper function to return value counts as percentages.\n    '''\n    counts = dataframe[column_name].value_counts(dropna=False)\n    percentages = round(counts*100\/(dataframe[column_name].count()),1)\n    return percentages\n\ndef count_then_return_percent_for_multiple_column_questions(dataframe,list_of_columns_for_a_single_question,dictionary_of_counts_for_a_single_question):\n    '''\n    A helper function to convert counts to percentages.\n    '''\n    df = dataframe\n    subset = list_of_columns_for_a_single_question\n    df = df[subset]\n    df = df.dropna(how='all')\n    total_count = len(df) \n    dictionary = dictionary_of_counts_for_a_single_question\n    for i in dictionary:\n        dictionary[i] = round(float(dictionary[i]*100\/total_count),1)\n    return dictionary \n\ndef create_dataframe_of_counts(dataframe,column,rename_index,rename_column,return_percentages=False):\n    '''\n    A helper function to create a dataframe of either counts \n    or percentages, for a single multiple choice question.\n    '''\n    df = dataframe[column].value_counts().reset_index() \n    if return_percentages==True:\n        df[column] = (df[column]*100)\/(df[column].sum())\n    df = pd.DataFrame(df) \n    df = df.rename({'index':rename_index, column:rename_column}, axis='columns')\n    return df\n\ndef sort_dictionary_by_percent(dataframe,list_of_columns_for_a_single_question,dictionary_of_counts_for_a_single_question): \n    ''' \n    A helper function that can be used to sort a dictionary.   \n    It is an adaptation of a similar function\n    from https:\/\/www.kaggle.com\/sonmou\/what-topics-from-where-to-learn-data-science.\n    '''\n    dictionary = count_then_return_percent_for_multiple_column_questions(dataframe,\n                                                                list_of_columns_for_a_single_question,\n                                                                dictionary_of_counts_for_a_single_question)\n    dictionary = {v:k    for(k,v) in dictionary.items()}\n    list_tuples = sorted(dictionary.items(), reverse=False) \n    dictionary = {v:k for (k,v) in list_tuples}   \n    return dictionary\n\ndef plotly_choropleth_map(df, column, title, max_value):\n    '''\n    This function creates a choropleth map.\n    '''\n    fig = px.choropleth(df, \n                    locations = 'country',  \n                    color = column,\n                    locationmode = 'country names', \n                    color_continuous_scale = 'viridis',\n                    title = title,\n                    range_color = [0, max_value])\n    fig.update(layout=dict(title=dict(x=0.5)))\n    fig.show()\n\ndef plotly_bar_chart(response_counts,title,y_axis_title,orientation):\n    '''\n    This function creates a bar chart.\n    '''\n    response_counts_series = pd.Series(response_counts)\n    pd.DataFrame(response_counts_series).to_csv('\/kaggle\/working\/individual_charts\/chart_'+title+'.csv',index=True)\n    fig = px.bar(response_counts_series,\n             labels={\"index\": '',\"value\": y_axis_title},\n             text=response_counts_series.values,\n             orientation=orientation,)\n    fig.update_layout(showlegend=False,\n                      title={'text': title+' in 2021',\n                             'y':0.95,\n                             'x':0.5,})\n    fig.show()\n    \ndef plotly_bar_chart_with_x_axis_limit(response_counts,title,y_axis_title,orientation,limit_for_axis):\n    '''\n    A slightly modified version of plotly_bar_chart().\n    '''\n    response_counts_series = pd.Series(response_counts)\n    pd.DataFrame(response_counts_series).to_csv('\/kaggle\/working\/individual_charts\/chart_'+title+'.csv',index=True)\n    fig = px.bar(response_counts_series,\n             labels={\"index\": '',\"value\": y_axis_title},\n             text=response_counts_series.values,\n             orientation=orientation,)\n    fig.update_xaxes(range=[0, limit_for_axis])\n    fig.update_layout(showlegend=False,\n                      title={'text': title+' in 2021',\n                             'y':0.95,\n                             'x':0.5,})\n    fig.show()","1edd8ebe":"# Questions where respondents can select more than one answer choice have been split into multiple columns.\n# These dictionaries contain value counts for every answer choice for every multiple-column question.\nq7_dictionary_of_counts_2018 = {\n    'Python' : (responses_df_2018['Q16_Part_1'].count()),\n    'R': (responses_df_2018['Q16_Part_2'].count()),\n    'SQL' : (responses_df_2018['Q16_Part_3'].count()),\n    'C\/C++' : (responses_df_2018['Q16_Part_8'].count()),\n    'Visual Basic \/ BVA' : (responses_df_2018['Q16_Part_7'].count()),\n    'Java' : (responses_df_2018['Q16_Part_5'].count()),\n    'Javascript' : (responses_df_2018['Q16_Part_6'].count()),\n    'C#\/.NET' : (responses_df_2018['Q16_Part_13'].count()),\n    'PHP' : (responses_df_2018['Q16_Part_14'].count()),\n    'Go' : (responses_df_2018['Q16_Part_12'].count()),\n    'Scala' : (responses_df_2018['Q16_Part_10'].count()),\n    'Bash' : (responses_df_2018['Q16_Part_4'].count()),\n    'MATLAB' : (responses_df_2018['Q16_Part_9'].count()),\n    'None' : (responses_df_2018['Q16_Part_17'].count()),\n    'Other' : (responses_df_2018['Q16_Part_18'].count())\n}\n\nq9_dictionary_of_counts_2018 = {\n    'JupyterLab' : (responses_df_2018['Q13_Part_1'].count()),\n    'RStudio': (responses_df_2018['Q13_Part_2'].count()),\n    'Atom' : (responses_df_2018['Q13_Part_6'].count()),\n    'Visual Studio Code (VSCode)' : (responses_df_2018['Q13_Part_4'].count()),\n    'PyCharm' : (responses_df_2018['Q13_Part_3'].count()),\n    'Spyder' : (responses_df_2018['Q13_Part_13'].count()),\n    'Notepad++' : (responses_df_2018['Q13_Part_9'].count()),\n    'Sublime Text' : (responses_df_2018['Q13_Part_10'].count()),\n    'Vim, Emacs, or similar' : (responses_df_2018['Q13_Part_11'].count()),\n    'Visual Studio' : (responses_df_2018['Q13_Part_8'].count()),\n    'MATLAB' : (responses_df_2018['Q13_Part_7'].count()),\n    'None' : (responses_df_2018['Q13_Part_14'].count()),\n    'Other' : (responses_df_2018['Q13_Part_15'].count())\n}\n\n\nq10_dictionary_of_counts_2018 = {\n    'Kaggle Notebooks' : (responses_df_2018['Q14_Part_1'].count()),\n    'Colab Notebooks': (responses_df_2018['Q14_Part_2'].count()),\n    'Azure Notebooks' : (responses_df_2018['Q14_Part_3'].count()),\n    'Paperspace \/ Gradient' : (responses_df_2018['Q14_Part_6'].count()),\n    'Binder \/ JupyterHub' : (responses_df_2018['Q14_Part_9'].count()),\n    'Domino Datalab' : (responses_df_2018['Q14_Part_4'].count()),\n    'Crestle' : (responses_df_2018['Q14_Part_8'].count()),\n    'Google Cloud Notebook Products' : (responses_df_2018['Q14_Part_5'].count()),\n    'FloydHub Notebooks' : (responses_df_2018['Q14_Part_7'].count()),\n    'None' : (responses_df_2018['Q14_Part_10'].count()),\n    'Other' : (responses_df_2018['Q14_Part_11'].count())\n}\n\n\n\nq14_dictionary_of_counts_2018 = {\n    'Matplotlib' : (responses_df_2018['Q21_Part_2'].count()),\n    'Seaborn': (responses_df_2018['Q21_Part_8'].count()),\n    'Plotly \/ Plotly Express' : (responses_df_2018['Q21_Part_6'].count()),\n    'Ggplot \/ ggplot2' : (responses_df_2018['Q21_Part_1'].count()),\n    'Shiny' : (responses_df_2018['Q21_Part_4'].count()),\n    'D3.js' : (responses_df_2018['Q21_Part_5'].count()),\n    'Altair' : (responses_df_2018['Q21_Part_3'].count()),\n    'Bokeh' : (responses_df_2018['Q21_Part_7'].count()),\n    'Geoplotlib' : (responses_df_2018['Q21_Part_9'].count()),\n    'Leaflet \/ Folium' : (responses_df_2018['Q21_Part_10'].count()),\n    'None' : (responses_df_2018['Q21_Part_12'].count()),\n    'Other' : (responses_df_2018['Q21_Part_13'].count())\n}\n\n\nq16_dictionary_of_counts_2018 = {\n    'Scikit-learn' : (responses_df_2018['Q19_Part_1'].count()),\n    'TensorFlow': (responses_df_2018['Q19_Part_2'].count()),\n    'Keras' : (responses_df_2018['Q19_Part_3'].count()),\n    'PyTorch' : (responses_df_2018['Q19_Part_4'].count()),\n    'Fast.ai' : (responses_df_2018['Q19_Part_7'].count()),\n    'RandomForest' : (responses_df_2018['Q19_Part_13'].count()),\n    'Spark MLib' : (responses_df_2018['Q19_Part_5'].count()),\n    'MXNet' : (responses_df_2018['Q28_Part_8'].count()),\n    'Xgboost' : (responses_df_2018['Q19_Part_10'].count()),\n    'LightGBM' : (responses_df_2018['Q19_Part_14'].count()),\n    'CatBoost' : (responses_df_2018['Q19_Part_15'].count()),\n    'Prophet' : (responses_df_2018['Q19_Part_12'].count()),\n    'H20-3' : (responses_df_2018['Q19_Part_6'].count()),\n    'Caret' : (responses_df_2018['Q19_Part_9'].count()),\n    'None' : (responses_df_2018['Q19_Part_18'].count()),\n    'Other' : (responses_df_2018['Q19_Part_19'].count())\n}\n\n\nq26a_dictionary_of_counts_2018 = {\n    'Amazon Web Services (AWS)' : (responses_df_2018['Q15_Part_2'].count()),\n    'Microsoft Azure': (responses_df_2018['Q15_Part_3'].count()),\n    'Google Cloud Platform (GCP)' : (responses_df_2018['Q15_Part_1'].count()),\n    'IBM Cloud \/ Red Hat' : (responses_df_2018['Q15_Part_4'].count()),\n    'Alibaba Cloud' : (responses_df_2018['Q15_Part_5'].count()),\n    'None' : (responses_df_2018['Q15_Part_6'].count()),\n    'Other' : (responses_df_2018['Q15_Part_7'].count())\n}\n\n\n\nq29a_dictionary_of_counts_2018 = {\n    'MySQL' : (responses_df_2018['Q29_Part_10'].count()),\n    'PostgreSQL': (responses_df_2018['Q29_Part_11'].count()),\n    'SQLite' : (responses_df_2018['Q29_Part_12'].count()),\n    'Oracle Database' : (responses_df_2018['Q29_Part_13'].count()),\n    'IBM Db2' : (responses_df_2018['Q29_Part_26'].count()),\n    'Microsoft SQL Server' : (responses_df_2018['Q29_Part_9'].count()),\n    'Microsoft Access' : (responses_df_2018['Q29_Part_15'].count()),\n    'Microsoft Azure SQL Database' : (responses_df_2018['Q29_Part_21'].count()),\n    'Amazon Redshift' : (responses_df_2018['Q30_Part_9'].count()),\n    'AWS Relational Database Service' : (responses_df_2018['Q29_Part_1'].count()),\n    'AWS DynamoDB' : (responses_df_2018['Q29_Part_5'].count()),\n    'Google Cloud BigQuery' : (responses_df_2018['Q30_Part_10'].count()),\n    'Google Cloud SQL' : (responses_df_2018['Q29_Part_3'].count()),\n    'None' : (responses_df_2018['Q29_Part_27'].count()),\n    'Other' : (responses_df_2018['Q29_Part_28'].count())\n}\n\n\n# Questions where respondents can select more than one answer choice have been split into multiple columns.\n# These dictionaries contain value counts for every answer choice for every multiple-column question.\n\n\nq7_dictionary_of_counts_2019 = {\n    'Python' : (responses_df_2019['Q18_Part_1'].count()),\n    'R': (responses_df_2019['Q18_Part_2'].count()),\n    'SQL' : (responses_df_2019['Q18_Part_3'].count()),\n    'C' : (responses_df_2019['Q18_Part_4'].count()),\n    'C++' : (responses_df_2019['Q18_Part_5'].count()),\n    'Java' : (responses_df_2019['Q18_Part_6'].count()),\n    'Javascript' : (responses_df_2019['Q18_Part_7'].count()),\n    'TypeScript' : (responses_df_2019['Q18_Part_8'].count()),\n    'Bash' : (responses_df_2019['Q18_Part_9'].count()),\n    'MATLAB' : (responses_df_2019['Q18_Part_10'].count()),\n    'None' : (responses_df_2019['Q18_Part_11'].count()),\n    'Other' : (responses_df_2019['Q18_Part_12'].count())\n}\n\n\nq9_dictionary_of_counts_2019 = {\n    'JupyterLab' : (responses_df_2019['Q16_Part_1'].count()),\n    'RStudio': (responses_df_2019['Q16_Part_2'].count()),\n    'Atom' : (responses_df_2019['Q16_Part_4'].count()),\n    'Visual Studio \/ Visual Studio Code (VSCode)' : (responses_df_2019['Q16_Part_6'].count()),\n    'PyCharm' : (responses_df_2019['Q16_Part_3'].count()),\n    'Spyder' : (responses_df_2019['Q16_Part_7'].count()),\n    'Notepad++' : (responses_df_2019['Q16_Part_9'].count()),\n    'Sublime Text' : (responses_df_2019['Q16_Part_10'].count()),\n    'Vim, Emacs, or similar' : (responses_df_2019['Q16_Part_8'].count()),\n    'MATLAB' : (responses_df_2019['Q16_Part_5'].count()),\n    'None' : (responses_df_2019['Q16_Part_11'].count()),\n    'Other' : (responses_df_2019['Q16_Part_12'].count())\n}\n\nq10_dictionary_of_counts_2019 = {\n    'Kaggle Notebooks' : (responses_df_2019['Q17_Part_1'].count()),\n    'Colab Notebooks': (responses_df_2019['Q17_Part_2'].count()),\n    'Azure Notebooks' : (responses_df_2019['Q17_Part_3'].count()),\n    'Paperspace \/ Gradient' : (responses_df_2019['Q17_Part_5'].count()),\n    'Binder \/ JupyterHub' : (responses_df_2019['Q17_Part_7'].count()),\n    'Code Ocean' : (responses_df_2019['Q17_Part_9'].count()),\n    'IBM Watson Studio' : (responses_df_2019['Q17_Part_8'].count()),\n    'Amazon Notebook Products' : (responses_df_2019['Q17_Part_10'].count()),\n    'Google Cloud Notebook Products' : (responses_df_2019['Q17_Part_4'].count()),\n    'FloydHub Notebooks' : (responses_df_2019['Q17_Part_6'].count()),\n    'None' : (responses_df_2019['Q17_Part_11'].count()),\n    'Other' : (responses_df_2019['Q17_Part_12'].count())\n}\n\n\nq12_dictionary_of_counts_2019 = {\n    'CPUs' : (responses_df_2019['Q21_Part_1'].count()),\n    'GPUs' : (responses_df_2019['Q21_Part_2'].count()),\n    'TPUs': (responses_df_2019['Q21_Part_3'].count()),\n    'None' : (responses_df_2019['Q21_Part_4'].count()),\n    'Other' : (responses_df_2019['Q21_Part_5'].count())\n}\n\n\nq14_dictionary_of_counts_2019 = {\n    'Matplotlib' : (responses_df_2019['Q20_Part_2'].count()),\n    'Seaborn': (responses_df_2019['Q20_Part_8'].count()),\n    'Plotly \/ Plotly Express' : (responses_df_2019['Q20_Part_6'].count()),\n    'Ggplot \/ ggplot2' : (responses_df_2019['Q20_Part_1'].count()),\n    'Shiny' : (responses_df_2019['Q20_Part_4'].count()),\n    'D3.js' : (responses_df_2019['Q20_Part_5'].count()),\n    'Altair' : (responses_df_2019['Q20_Part_3'].count()),\n    'Bokeh' : (responses_df_2019['Q20_Part_7'].count()),\n    'Geoplotlib' : (responses_df_2019['Q20_Part_9'].count()),\n    'Leaflet \/ Folium' : (responses_df_2019['Q20_Part_10'].count()),\n    'None' : (responses_df_2019['Q20_Part_11'].count()),\n    'Other' : (responses_df_2019['Q20_Part_12'].count())\n}\n\nq16_dictionary_of_counts_2019 = {\n    'Scikit-learn' : (responses_df_2019['Q28_Part_1'].count()),\n    'TensorFlow': (responses_df_2019['Q28_Part_2'].count()),\n    'Keras' : (responses_df_2019['Q28_Part_3'].count()),\n    'PyTorch' : (responses_df_2019['Q28_Part_6'].count()),\n    'Fast.ai' : (responses_df_2019['Q28_Part_10'].count()),\n    'RandomForest' : (responses_df_2019['Q28_Part_4'].count()),\n    'Spark MLib' : (responses_df_2019['Q28_Part_9'].count()),\n    'Xgboost' : (responses_df_2019['Q28_Part_5'].count()),\n    'LightGBM' : (responses_df_2019['Q28_Part_8'].count()),\n    'Caret' : (responses_df_2019['Q28_Part_7'].count()),\n    'None' : (responses_df_2019['Q28_Part_11'].count()),\n    'Other' : (responses_df_2019['Q28_Part_12'].count())\n}\n\n\nq17_dictionary_of_counts_2019 = {\n    'Linear or Logistic Regression' : (responses_df_2019['Q24_Part_1'].count()),\n    'Decision Trees or Random Forests': (responses_df_2019['Q24_Part_2'].count()),\n    'Gradient Boosting Machines (xgboost, lightgbm, etc)' : (responses_df_2019['Q24_Part_3'].count()),\n    'Bayesian Approaches' : (responses_df_2019['Q24_Part_4'].count()),\n    'Evolutionary Approaches' : (responses_df_2019['Q24_Part_5'].count()),\n    'Dense Neural Networks (MLPs, etc)' : (responses_df_2019['Q24_Part_6'].count()),\n    'Convolutional Neural Networks' : (responses_df_2019['Q24_Part_7'].count()),\n    'Generative Adversarial Networks' : (responses_df_2019['Q24_Part_8'].count()),\n    'Recurrent Neural Networks' : (responses_df_2019['Q24_Part_9'].count()),\n    'Transformer Networks (BERT, gpt-3, etc)' : (responses_df_2019['Q24_Part_10'].count()),\n    'None' : (responses_df_2019['Q24_Part_11'].count()),\n    'Other' : (responses_df_2019['Q24_Part_12'].count())\n}\n\n\nq18_dictionary_of_counts_2019 = {\n    'General purpose image\/video tools (PIL, cv2, skimage, etc)' : (responses_df_2019['Q26_Part_1'].count()),\n    'Image segmentation methods (U-Net, Mask R-CNN, etc)': (responses_df_2019['Q26_Part_2'].count()),\n    'Object detection methods (YOLOv3, RetinaNet, etc)' : (responses_df_2019['Q26_Part_3'].count()),\n    'Image classification and other general purpose networks (VGG, Inception, ResNet, ResNeXt, NASNet, EfficientNet, etc)' : (responses_df_2019['Q26_Part_4'].count()),\n    'Generative Networks (GAN, VAE, etc)' : (responses_df_2019['Q26_Part_5'].count()),\n    'None' : (responses_df_2019['Q26_Part_6'].count()),\n    'Other' : (responses_df_2019['Q26_Part_7'].count())\n}\n\nq19_dictionary_of_counts_2019 = {\n    'Word embeddings\/vectors (GLoVe, fastText, word2vec)' : (responses_df_2019['Q27_Part_1'].count()),\n    'Encoder-decoder models (seq2seq, vanilla transformers)': (responses_df_2019['Q27_Part_2'].count()),\n    'Contextualized embeddings (ELMo, CoVe)' : (responses_df_2019['Q27_Part_3'].count()),\n    'Transformer language models (GPT-3, BERT, XLnet, etc)' : (responses_df_2019['Q27_Part_4'].count()),\n    'None' : (responses_df_2019['Q27_Part_5'].count()),\n    'Other' : (responses_df_2019['Q27_Part_6'].count())\n}\n\nq26a_dictionary_of_counts_2019 = {\n    'Amazon Web Services (AWS)' : (responses_df_2019['Q29_Part_2'].count()),\n    'Microsoft Azure': (responses_df_2019['Q29_Part_3'].count()),\n    'Google Cloud Platform (GCP)' : (responses_df_2019['Q29_Part_1'].count()),\n    'IBM Cloud \/ Red Hat' : (responses_df_2019['Q29_Part_4'].count()),\n    'Oracle Cloud' : (responses_df_2019['Q29_Part_7'].count()),\n    'SAP Cloud' : (responses_df_2019['Q29_Part_8'].count()),\n    'Salesforce Cloud' : (responses_df_2019['Q29_Part_6'].count()),\n    'VMware Cloud' : (responses_df_2019['Q29_Part_9'].count()),\n    'Alibaba Cloud' : (responses_df_2019['Q29_Part_5'].count()),\n    'Red Hat Cloud' : (responses_df_2019['Q29_Part_10'].count()),\n    'None' : (responses_df_2019['Q29_Part_11'].count()),\n    'Other' : (responses_df_2019['Q29_Part_12'].count())\n}\n\nq29a_dictionary_of_counts_2019 = {\n    'MySQL' : (responses_df_2019['Q34_Part_1'].count()),\n    'PostgreSQL': (responses_df_2019['Q34_Part_2'].count()),\n    'SQLite' : (responses_df_2019['Q34_Part_3'].count()),\n    'Oracle Database' : (responses_df_2019['Q34_Part_5'].count()),\n    'Microsoft SQL Server' : (responses_df_2019['Q34_Part_4'].count()),\n    'Microsoft Access' : (responses_df_2019['Q34_Part_6'].count()),\n    'Microsoft Azure SQL Database' : (responses_df_2019['Q34_Part_9'].count()),\n    'Amazon Redshift' : (responses_df_2019['Q31_Part_2'].count()),\n    'AWS Relational Database Service' : (responses_df_2019['Q34_Part_7'].count()),\n    'AWS DynamoDB' : (responses_df_2019['Q34_Part_8'].count()),\n    'Google Cloud BigQuery' : (responses_df_2019['Q31_Part_1'].count()),\n    'Google Cloud SQL' : (responses_df_2019['Q34_Part_10'].count()),\n    'None' : (responses_df_2019['Q34_Part_11'].count()),\n    'Other' : (responses_df_2019['Q34_Part_12'].count())\n}\n\nq33a_dictionary_of_counts_2019 = {\n    'Google Cloud AutoML' : (responses_df_2019['Q33_Part_1'].count()),\n    'H20 Driverless AI': (responses_df_2019['Q33_Part_2'].count()),\n    'Databricks AutoML' : (responses_df_2019['Q33_Part_3'].count()),\n    'DataRobot AutoML' : (responses_df_2019['Q33_Part_4'].count()),\n    'Tpot' : (responses_df_2019['Q33_Part_5'].count()),\n    'Auto-Keras' : (responses_df_2019['Q33_Part_6'].count()),\n    'Auto-Sklearn' : (responses_df_2019['Q33_Part_7'].count()),\n    'Auto_ml' : (responses_df_2019['Q33_Part_8'].count()),\n    'Xcessiv' : (responses_df_2019['Q33_Part_9'].count()),\n    'MLbox' : (responses_df_2019['Q33_Part_10'].count()),\n    'No \/ None' : (responses_df_2019['Q33_Part_11'].count()),\n    'Other' : (responses_df_2019['Q33_Part_12'].count())\n}\n\n# Questions where respondents can select more than one answer choice have been split into multiple columns.\n# These dictionaries contain value counts for every answer choice for every multiple-column question.\n\nq7_dictionary_of_counts_2020 = {\n    'Python' : (responses_df_2020['Q7_Part_1'].count()),\n    'R': (responses_df_2020['Q7_Part_2'].count()),\n    'SQL' : (responses_df_2020['Q7_Part_3'].count()),\n    'C' : (responses_df_2020['Q7_Part_4'].count()),\n    'C++' : (responses_df_2020['Q7_Part_5'].count()),\n    'Java' : (responses_df_2020['Q7_Part_6'].count()),\n    'Javascript' : (responses_df_2020['Q7_Part_7'].count()),\n    'Julia' : (responses_df_2020['Q7_Part_8'].count()),\n    'Swift' : (responses_df_2020['Q7_Part_9'].count()),\n    'Bash' : (responses_df_2020['Q7_Part_10'].count()),\n    'MATLAB' : (responses_df_2020['Q7_Part_11'].count()),\n    'None' : (responses_df_2020['Q7_Part_12'].count()),\n    'Other' : (responses_df_2020['Q7_OTHER'].count())\n}\n\nq9_dictionary_of_counts_2020 = {\n    'JupyterLab' : (responses_df_2020['Q9_Part_1'].count()),\n    'RStudio': (responses_df_2020['Q9_Part_2'].count()),\n    'Visual Studio' : (responses_df_2020['Q9_Part_3'].count()),\n    'Visual Studio Code (VSCode)' : (responses_df_2020['Q9_Part_4'].count()),\n    'PyCharm' : (responses_df_2020['Q9_Part_5'].count()),\n    'Spyder' : (responses_df_2020['Q9_Part_6'].count()),\n    'Notepad++' : (responses_df_2020['Q9_Part_7'].count()),\n    'Sublime Text' : (responses_df_2020['Q9_Part_8'].count()),\n    'Vim, Emacs, or similar' : (responses_df_2020['Q9_Part_9'].count()),\n    'MATLAB' : (responses_df_2020['Q9_Part_10'].count()),\n    'None' : (responses_df_2020['Q9_Part_11'].count()),\n    'Other' : (responses_df_2020['Q9_OTHER'].count())\n}\n\nq10_dictionary_of_counts_2020 = {\n    'Kaggle Notebooks' : (responses_df_2020['Q10_Part_1'].count()),\n    'Colab Notebooks': (responses_df_2020['Q10_Part_2'].count()),\n    'Azure Notebooks' : (responses_df_2020['Q10_Part_3'].count()),\n    'Paperspace \/ Gradient' : (responses_df_2020['Q10_Part_4'].count()),\n    'Binder \/ JupyterHub' : (responses_df_2020['Q10_Part_5'].count()),\n    'Code Ocean' : (responses_df_2020['Q10_Part_6'].count()),\n    'IBM Watson Studio' : (responses_df_2020['Q10_Part_7'].count()),\n    'Amazon Sagemaker Studio' : (responses_df_2020['Q10_Part_8'].count()),\n    'Amazon EMR Notebooks' : (responses_df_2020['Q10_Part_9'].count()),\n    'Google Cloud AI Platform Notebooks' : (responses_df_2020['Q10_Part_10'].count()),\n    'Google Cloud Datalab Notebooks' : (responses_df_2020['Q10_Part_11'].count()),\n    'Databricks Collaborative Notebooks' : (responses_df_2020['Q10_Part_12'].count()),\n    'None' : (responses_df_2020['Q10_Part_13'].count()),\n    'Other' : (responses_df_2020['Q10_OTHER'].count())\n}\n\nq12_dictionary_of_counts_2020 = {\n    'GPUs' : (responses_df_2020['Q12_Part_1'].count()),\n    'TPUs': (responses_df_2020['Q12_Part_2'].count()),\n    'None' : (responses_df_2020['Q12_Part_3'].count()),\n    'Other' : (responses_df_2020['Q12_OTHER'].count())\n}\n\nq14_dictionary_of_counts_2020 = {\n    'Matplotlib' : (responses_df_2020['Q14_Part_1'].count()),\n    'Seaborn': (responses_df_2020['Q14_Part_2'].count()),\n    'Plotly \/ Plotly Express' : (responses_df_2020['Q14_Part_3'].count()),\n    'Ggplot \/ ggplot2' : (responses_df_2020['Q14_Part_4'].count()),\n    'Shiny' : (responses_df_2020['Q14_Part_5'].count()),\n    'D3.js' : (responses_df_2020['Q14_Part_6'].count()),\n    'Altair' : (responses_df_2020['Q14_Part_7'].count()),\n    'Bokeh' : (responses_df_2020['Q14_Part_8'].count()),\n    'Geoplotlib' : (responses_df_2020['Q14_Part_9'].count()),\n    'Leaflet \/ Folium' : (responses_df_2020['Q14_Part_10'].count()),\n    'None' : (responses_df_2020['Q14_Part_11'].count()),\n    'Other' : (responses_df_2020['Q14_OTHER'].count())\n}\n\nq16_dictionary_of_counts_2020 = {\n    'Scikit-learn' : (responses_df_2020['Q16_Part_1'].count()),\n    'TensorFlow': (responses_df_2020['Q16_Part_2'].count()),\n    'Keras' : (responses_df_2020['Q16_Part_3'].count()),\n    'PyTorch' : (responses_df_2020['Q16_Part_4'].count()),\n    'Fast.ai' : (responses_df_2020['Q16_Part_5'].count()),\n    'MXNet' : (responses_df_2020['Q16_Part_6'].count()),\n    'Xgboost' : (responses_df_2020['Q16_Part_7'].count()),\n    'LightGBM' : (responses_df_2020['Q16_Part_8'].count()),\n    'CatBoost' : (responses_df_2020['Q16_Part_9'].count()),\n    'Prophet' : (responses_df_2020['Q16_Part_10'].count()),\n    'H20-3' : (responses_df_2020['Q16_Part_11'].count()),\n    'Caret' : (responses_df_2020['Q16_Part_12'].count()),\n    'Tidymodels' : (responses_df_2020['Q16_Part_13'].count()),\n    'JAX' : (responses_df_2020['Q16_Part_14'].count()),\n    'None' : (responses_df_2020['Q16_Part_15'].count()),\n    'Other' : (responses_df_2020['Q16_OTHER'].count())\n}\n\nq17_dictionary_of_counts_2020 = {\n    'Linear or Logistic Regression' : (responses_df_2020['Q17_Part_1'].count()),\n    'Decision Trees or Random Forests': (responses_df_2020['Q17_Part_2'].count()),\n    'Gradient Boosting Machines (xgboost, lightgbm, etc)' : (responses_df_2020['Q17_Part_3'].count()),\n    'Bayesian Approaches' : (responses_df_2020['Q17_Part_4'].count()),\n    'Evolutionary Approaches' : (responses_df_2020['Q17_Part_5'].count()),\n    'Dense Neural Networks (MLPs, etc)' : (responses_df_2020['Q17_Part_6'].count()),\n    'Convolutional Neural Networks' : (responses_df_2020['Q17_Part_7'].count()),\n    'Generative Adversarial Networks' : (responses_df_2020['Q17_Part_8'].count()),\n    'Recurrent Neural Networks' : (responses_df_2020['Q17_Part_9'].count()),\n    'Transformer Networks (BERT, gpt-3, etc)' : (responses_df_2020['Q17_Part_10'].count()),\n    'None' : (responses_df_2020['Q17_Part_11'].count()),\n    'Other' : (responses_df_2020['Q17_OTHER'].count())\n}\n\n\nq18_dictionary_of_counts_2020 = {\n    'General purpose image\/video tools (PIL, cv2, skimage, etc)' : (responses_df_2020['Q18_Part_1'].count()),\n    'Image segmentation methods (U-Net, Mask R-CNN, etc)': (responses_df_2020['Q18_Part_2'].count()),\n    'Object detection methods (YOLOv3, RetinaNet, etc)' : (responses_df_2020['Q18_Part_3'].count()),\n    'Image classification and other general purpose networks (VGG, Inception, ResNet, ResNeXt, NASNet, EfficientNet, etc)' : (responses_df_2020['Q18_Part_4'].count()),\n    'Generative Networks (GAN, VAE, etc)' : (responses_df_2020['Q18_Part_5'].count()),\n    'None' : (responses_df_2020['Q18_Part_6'].count()),\n    'Other' : (responses_df_2020['Q18_OTHER'].count())\n}\n\n\nq19_dictionary_of_counts_2020 = {\n    'Word embeddings\/vectors (GLoVe, fastText, word2vec)' : (responses_df_2020['Q19_Part_1'].count()),\n    'Encoder-decoder models (seq2seq, vanilla transformers)': (responses_df_2020['Q19_Part_2'].count()),\n    'Contextualized embeddings (ELMo, CoVe)' : (responses_df_2020['Q19_Part_3'].count()),\n    'Transformer language models (GPT-3, BERT, XLnet, etc)' : (responses_df_2020['Q19_Part_4'].count()),\n    'None' : (responses_df_2020['Q19_Part_5'].count()),\n    'Other' : (responses_df_2020['Q19_OTHER'].count())\n}\n\n\nq23_dictionary_of_counts_2020 = {\n    'Analyze and understand data to influence product or business decisions' : (responses_df_2020['Q23_Part_1'].count()),\n    'Build and\/or run the data infrastructure that my business uses for storing, analyzing, and operationalizing data': (responses_df_2020['Q23_Part_2'].count()),\n    'Build prototypes to explore applying machine learning to new areas' : (responses_df_2020['Q23_Part_3'].count()),\n    'Build and\/or run a machine learning service that operationally improves my product or workflows' : (responses_df_2020['Q23_Part_4'].count()),\n    'Experimentation and iteration to improve existing ML models' : (responses_df_2020['Q23_Part_5'].count()),\n    'Do research that advances the state of the art of machine learning' : (responses_df_2020['Q23_Part_6'].count()),\n    'None of these activities are an important part of my role at work' : (responses_df_2020['Q23_Part_7'].count()),\n    'Other' : (responses_df_2020['Q23_OTHER'].count())\n}\n\n\nq26a_dictionary_of_counts_2020 = {\n    'Amazon Web Services (AWS)' : (responses_df_2020['Q26_A_Part_1'].count()),\n    'Microsoft Azure': (responses_df_2020['Q26_A_Part_2'].count()),\n    'Google Cloud Platform (GCP)' : (responses_df_2020['Q26_A_Part_3'].count()),\n    'IBM Cloud \/ Red Hat' : (responses_df_2020['Q26_A_Part_4'].count()),\n    'Oracle Cloud' : (responses_df_2020['Q26_A_Part_5'].count()),\n    'SAP Cloud' : (responses_df_2020['Q26_A_Part_6'].count()),\n    'Salesforce Cloud' : (responses_df_2020['Q26_A_Part_7'].count()),\n    'VMware Cloud' : (responses_df_2020['Q26_A_Part_8'].count()),\n    'Alibaba Cloud' : (responses_df_2020['Q26_A_Part_9'].count()),\n    'Tencent Cloud' : (responses_df_2020['Q26_A_Part_10'].count()),\n    'None' : (responses_df_2020['Q26_A_Part_11'].count()),\n    'Other' : (responses_df_2020['Q26_A_OTHER'].count())\n}\n\nq26b_dictionary_of_counts_2020 = {\n    'Amazon Web Services (AWS)' : (responses_df_2020['Q26_B_Part_1'].count()),\n    'Microsoft Azure': (responses_df_2020['Q26_B_Part_2'].count()),\n    'Google Cloud Platform (GCP)' : (responses_df_2020['Q26_B_Part_3'].count()),\n    'IBM Cloud \/ Red Hat' : (responses_df_2020['Q26_B_Part_4'].count()),\n    'Oracle Cloud' : (responses_df_2020['Q26_B_Part_5'].count()),\n    'SAP Cloud' : (responses_df_2020['Q26_B_Part_6'].count()),\n    'Salesforce Cloud' : (responses_df_2020['Q26_B_Part_7'].count()),\n    'VMware Cloud' : (responses_df_2020['Q26_B_Part_8'].count()),\n    'Alibaba Cloud' : (responses_df_2020['Q26_B_Part_9'].count()),\n    'Tencent Cloud' : (responses_df_2020['Q26_B_Part_10'].count()),\n    'None' : (responses_df_2020['Q26_B_Part_11'].count()),\n    'Other' : (responses_df_2020['Q26_B_OTHER'].count())\n}\n\nq27a_dictionary_of_counts_2020 = {\n    'Amazon EC2' : (responses_df_2020['Q27_A_Part_1'].count()),\n    'AWS Lambda': (responses_df_2020['Q27_A_Part_2'].count()),\n    'Amazon Elastic Container Service' : (responses_df_2020['Q27_A_Part_3'].count()),\n    'Azure Cloud Services' : (responses_df_2020['Q27_A_Part_4'].count()),\n    'Microsoft Azure Container Instances' : (responses_df_2020['Q27_A_Part_5'].count()),\n    'Azure Functions' : (responses_df_2020['Q27_A_Part_6'].count()),\n    'Google Cloud Compute Engine' : (responses_df_2020['Q27_A_Part_7'].count()),\n    'Google Cloud Functions' : (responses_df_2020['Q27_A_Part_8'].count()),\n    'Google Cloud Run' : (responses_df_2020['Q27_A_Part_9'].count()),\n    'Google Cloud App Engine' : (responses_df_2020['Q27_A_Part_10'].count()),\n    'No \/ None' : (responses_df_2020['Q27_A_Part_11'].count()),\n    'Other' : (responses_df_2020['Q27_A_OTHER'].count())\n}\n\nq27b_dictionary_of_counts_2020 = {\n    'Amazon EC2' : (responses_df_2020['Q27_B_Part_1'].count()),\n    'AWS Lambda': (responses_df_2020['Q27_B_Part_2'].count()),\n    'Amazon Elastic Container Service' : (responses_df_2020['Q27_B_Part_3'].count()),\n    'Azure Cloud Services' : (responses_df_2020['Q27_B_Part_4'].count()),\n    'Microsoft Azure Container Instances' : (responses_df_2020['Q27_B_Part_5'].count()),\n    'Azure Functions' : (responses_df_2020['Q27_B_Part_6'].count()),\n    'Google Cloud Compute Engine' : (responses_df_2020['Q27_B_Part_7'].count()),\n    'Google Cloud Functions' : (responses_df_2020['Q27_B_Part_8'].count()),\n    'Google Cloud Run' : (responses_df_2020['Q27_B_Part_9'].count()),\n    'Google Cloud App Engine' : (responses_df_2020['Q27_B_Part_10'].count()),\n    'No \/ None' : (responses_df_2020['Q27_B_Part_11'].count()),\n    'Other' : (responses_df_2020['Q27_B_OTHER'].count())\n}\n\nq28a_dictionary_of_counts_2020 = {\n    'Amazon SageMaker' : (responses_df_2020['Q28_A_Part_1'].count()),\n    'Amazon Forecast': (responses_df_2020['Q28_A_Part_2'].count()),\n    'Amazon Rekognition' : (responses_df_2020['Q28_A_Part_3'].count()),\n    'Azure Machine Learning Studio' : (responses_df_2020['Q28_A_Part_4'].count()),\n    'Azure Cognitive Services' : (responses_df_2020['Q28_A_Part_5'].count()),\n    'Google Cloud AI Platform \/ Google Cloud ML Engine' : (responses_df_2020['Q28_A_Part_6'].count()),\n    'Google Cloud Video AI' : (responses_df_2020['Q28_A_Part_7'].count()),\n    'Google Cloud Natural Language' : (responses_df_2020['Q28_A_Part_8'].count()),\n    'Google Cloud Vision AI' : (responses_df_2020['Q28_A_Part_9'].count()),\n    'No \/ None' : (responses_df_2020['Q28_A_Part_10'].count()),\n    'Other' : (responses_df_2020['Q28_A_OTHER'].count())\n}\n\nq28b_dictionary_of_counts_2020 = {\n    'Amazon SageMaker' : (responses_df_2020['Q28_B_Part_1'].count()),\n    'Amazon Forecast': (responses_df_2020['Q28_B_Part_2'].count()),\n    'Amazon Rekognition' : (responses_df_2020['Q28_B_Part_3'].count()),\n    'Azure Machine Learning Studio' : (responses_df_2020['Q28_B_Part_4'].count()),\n    'Azure Cognitive Services' : (responses_df_2020['Q28_B_Part_5'].count()),\n    'Google Cloud AI Platform \/ Google Cloud ML Engine' : (responses_df_2020['Q28_B_Part_6'].count()),\n    'Google Cloud Video AI' : (responses_df_2020['Q28_B_Part_7'].count()),\n    'Google Cloud Natural Language' : (responses_df_2020['Q28_B_Part_8'].count()),\n    'Google Cloud Vision AI' : (responses_df_2020['Q28_B_Part_9'].count()),\n    'No \/ None' : (responses_df_2020['Q28_B_Part_10'].count()),\n    'Other' : (responses_df_2020['Q28_B_OTHER'].count())\n}\n\n\nq29a_dictionary_of_counts_2020 = {\n    'MySQL' : (responses_df_2020['Q29_A_Part_1'].count()),\n    'PostgreSQL': (responses_df_2020['Q29_A_Part_2'].count()),\n    'SQLite' : (responses_df_2020['Q29_A_Part_3'].count()),\n    'Oracle Database' : (responses_df_2020['Q29_A_Part_4'].count()),\n    'MongoDB' : (responses_df_2020['Q29_A_Part_5'].count()),\n    'Snowflake' : (responses_df_2020['Q29_A_Part_6'].count()),\n    'IBM Db2' : (responses_df_2020['Q29_A_Part_7'].count()),\n    'Microsoft SQL Server' : (responses_df_2020['Q29_A_Part_8'].count()),\n    'Microsoft Access' : (responses_df_2020['Q29_A_Part_9'].count()),\n    'Microsoft Azure Data Lake Storage' : (responses_df_2020['Q29_A_Part_10'].count()),\n    'Amazon Redshift' : (responses_df_2020['Q29_A_Part_11'].count()),\n    'Amazon Athena' : (responses_df_2020['Q29_A_Part_12'].count()),\n    'Amazon DynamoDB' : (responses_df_2020['Q29_A_Part_13'].count()),\n    'Google Cloud BigQuery' : (responses_df_2020['Q29_A_Part_14'].count()),\n    'Google Cloud SQL' : (responses_df_2020['Q29_A_Part_15'].count()),\n    'Google Cloud Firestore' : (responses_df_2020['Q29_A_Part_16'].count()),\n    'None' : (responses_df_2020['Q29_A_Part_17'].count()),\n    'Other' : (responses_df_2020['Q29_A_OTHER'].count())\n}\n\n\nq29b_dictionary_of_counts_2020 = {\n    'MySQL' : (responses_df_2020['Q29_B_Part_1'].count()),\n    'PostgreSQL': (responses_df_2020['Q29_B_Part_2'].count()),\n    'SQLite' : (responses_df_2020['Q29_B_Part_3'].count()),\n    'Oracle Database' : (responses_df_2020['Q29_B_Part_4'].count()),\n    'MongoDB' : (responses_df_2020['Q29_B_Part_5'].count()),\n    'Snowflake' : (responses_df_2020['Q29_B_Part_6'].count()),\n    'IBM Db2' : (responses_df_2020['Q29_B_Part_7'].count()),\n    'Microsoft SQL Server' : (responses_df_2020['Q29_B_Part_8'].count()),\n    'Microsoft Access' : (responses_df_2020['Q29_B_Part_9'].count()),\n    'Microsoft Azure Data Lake Storage' : (responses_df_2020['Q29_B_Part_10'].count()),\n    'Amazon Redshift' : (responses_df_2020['Q29_B_Part_11'].count()),\n    'Amazon Athena' : (responses_df_2020['Q29_B_Part_12'].count()),\n    'Amazon DynamoDB' : (responses_df_2020['Q29_B_Part_13'].count()),\n    'Google Cloud BigQuery' : (responses_df_2020['Q29_B_Part_14'].count()),\n    'Google Cloud SQL' : (responses_df_2020['Q29_B_Part_15'].count()),\n    'Google Cloud Firestore' : (responses_df_2020['Q29_B_Part_16'].count()),\n    'None' : (responses_df_2020['Q29_B_Part_17'].count()),\n    'Other' : (responses_df_2020['Q29_B_OTHER'].count())\n}\n\nq31a_dictionary_of_counts_2020 = {\n    'Amazon QuickSight' : (responses_df_2020['Q31_A_Part_1'].count()),\n    'Microsoft Power BI': (responses_df_2020['Q31_A_Part_2'].count()),\n    'Google Data Studio' : (responses_df_2020['Q31_A_Part_3'].count()),\n    'Looker' : (responses_df_2020['Q31_A_Part_4'].count()),\n    'Tableau' : (responses_df_2020['Q31_A_Part_5'].count()),\n    'Salesforce' : (responses_df_2020['Q31_A_Part_6'].count()),\n    'Einstein Analytics' : (responses_df_2020['Q31_A_Part_7'].count()),\n    'Qlik' : (responses_df_2020['Q31_A_Part_8'].count()),\n    'Domo' : (responses_df_2020['Q31_A_Part_9'].count()),\n    'TIBCO Spotfire' : (responses_df_2020['Q31_A_Part_10'].count()),\n    'Alteryx' : (responses_df_2020['Q31_A_Part_11'].count()),\n    'Sisense' : (responses_df_2020['Q31_A_Part_12'].count()),\n    'SAP Analytics Cloud' : (responses_df_2020['Q31_A_Part_13'].count()),\n    'None' : (responses_df_2020['Q31_A_Part_14'].count()),\n    'Other' : (responses_df_2020['Q31_A_OTHER'].count())\n}\n\nq31b_dictionary_of_counts_2020 = {\n    'Amazon QuickSight' : (responses_df_2020['Q31_B_Part_1'].count()),\n    'Microsoft Power BI': (responses_df_2020['Q31_B_Part_2'].count()),\n    'Google Data Studio' : (responses_df_2020['Q31_B_Part_3'].count()),\n    'Looker' : (responses_df_2020['Q31_B_Part_4'].count()),\n    'Tableau' : (responses_df_2020['Q31_B_Part_5'].count()),\n    'Salesforce' : (responses_df_2020['Q31_B_Part_6'].count()),\n    'Einstein Analytics' : (responses_df_2020['Q31_B_Part_7'].count()),\n    'Qlik' : (responses_df_2020['Q31_B_Part_8'].count()),\n    'Domo' : (responses_df_2020['Q31_B_Part_9'].count()),\n    'TIBCO Spotfire' : (responses_df_2020['Q31_B_Part_10'].count()),\n    'Alteryx' : (responses_df_2020['Q31_B_Part_11'].count()),\n    'Sisense' : (responses_df_2020['Q31_B_Part_12'].count()),\n    'SAP Analytics Cloud' : (responses_df_2020['Q31_B_Part_13'].count()),\n    'None' : (responses_df_2020['Q31_B_Part_14'].count()),\n    'Other' : (responses_df_2020['Q31_B_OTHER'].count())\n}\n\nq33a_dictionary_of_counts_2020 = {\n    'Automated data augmentation (e.g. imgaug, albumentations)' : (responses_df_2020['Q33_A_Part_1'].count()),\n    'Automated feature engineering\/selection (e.g. tpot, boruta_py)': (responses_df_2020['Q33_A_Part_2'].count()),\n    'Automated model selection (e.g. auto-sklearn, xcessiv)' : (responses_df_2020['Q33_A_Part_3'].count()),\n    'Automated model architecture searches (e.g. darts, enas)' : (responses_df_2020['Q33_A_Part_4'].count()),\n    'Automated hyperparameter tuning (e.g. hyperopt, ray.tune, Vizier)' : (responses_df_2020['Q33_A_Part_5'].count()),\n    'Automation of full ML pipelines (e.g. Google AutoML, H20 Driverless AI)' : (responses_df_2020['Q33_A_Part_6'].count()),\n    'No \/ None' : (responses_df_2020['Q33_A_Part_7'].count()),\n    'Other' : (responses_df_2020['Q33_A_OTHER'].count())\n}\n\nq33b_dictionary_of_counts_2020 = {\n    'Automated data augmentation (e.g. imgaug, albumentations)' : (responses_df_2020['Q33_B_Part_1'].count()),\n    'Automated feature engineering\/selection (e.g. tpot, boruta_py)': (responses_df_2020['Q33_B_Part_2'].count()),\n    'Automated model selection (e.g. auto-sklearn, xcessiv)' : (responses_df_2020['Q33_B_Part_3'].count()),\n    'Automated model architecture searches (e.g. darts, enas)' : (responses_df_2020['Q33_B_Part_4'].count()),\n    'Automated hyperparameter tuning (e.g. hyperopt, ray.tune, Vizier)' : (responses_df_2020['Q33_B_Part_5'].count()),\n    'Automation of full ML pipelines (e.g. Google AutoML, H20 Driverless AI)' : (responses_df_2020['Q33_B_Part_6'].count()),\n    'No \/ None' : (responses_df_2020['Q33_B_Part_7'].count()),\n    'Other' : (responses_df_2020['Q33_B_OTHER'].count())\n}\n\nq34a_dictionary_of_counts_2020 = {\n    'Google Cloud AutoML' : (responses_df_2020['Q34_A_Part_1'].count()),\n    'H20 Driverless AI': (responses_df_2020['Q34_A_Part_2'].count()),\n    'Databricks AutoML' : (responses_df_2020['Q34_A_Part_3'].count()),\n    'DataRobot AutoML' : (responses_df_2020['Q34_A_Part_4'].count()),\n    'Tpot' : (responses_df_2020['Q34_A_Part_5'].count()),\n    'Auto-Keras' : (responses_df_2020['Q34_A_Part_6'].count()),\n    'Auto-Sklearn' : (responses_df_2020['Q34_A_Part_7'].count()),\n    'Auto_ml' : (responses_df_2020['Q34_A_Part_8'].count()),\n    'Xcessiv' : (responses_df_2020['Q34_A_Part_9'].count()),\n    'MLbox' : (responses_df_2020['Q34_A_Part_10'].count()),\n    'No \/ None' : (responses_df_2020['Q34_A_Part_11'].count()),\n    'Other' : (responses_df_2020['Q34_A_OTHER'].count())\n}\n\nq34b_dictionary_of_counts_2020 = {\n    'Google Cloud AutoML' : (responses_df_2020['Q34_B_Part_1'].count()),\n    'H20 Driverless AI': (responses_df_2020['Q34_B_Part_2'].count()),\n    'Databricks AutoML' : (responses_df_2020['Q34_B_Part_3'].count()),\n    'DataRobot AutoML' : (responses_df_2020['Q34_B_Part_4'].count()),\n    'Tpot' : (responses_df_2020['Q34_B_Part_5'].count()),\n    'Auto-Keras' : (responses_df_2020['Q34_B_Part_6'].count()),\n    'Auto-Sklearn' : (responses_df_2020['Q34_B_Part_7'].count()),\n    'Auto_ml' : (responses_df_2020['Q34_B_Part_8'].count()),\n    'Xcessiv' : (responses_df_2020['Q34_B_Part_9'].count()),\n    'MLbox' : (responses_df_2020['Q34_B_Part_10'].count()),\n    'No \/ None' : (responses_df_2020['Q34_B_Part_11'].count()),\n    'Other' : (responses_df_2020['Q34_B_OTHER'].count())\n}\n\n\nq35a_dictionary_of_counts_2020 = {\n    'Neptune.ai' : (responses_df_2020['Q35_A_Part_1'].count()),\n    'Weights & Biases': (responses_df_2020['Q35_A_Part_2'].count()),\n    'Comet.ml' : (responses_df_2020['Q35_A_Part_3'].count()),\n    'Sacred + Omniboard' : (responses_df_2020['Q35_A_Part_4'].count()),\n    'TensorBoard' : (responses_df_2020['Q35_A_Part_5'].count()),\n    'Guild.ai' : (responses_df_2020['Q35_A_Part_6'].count()),\n    'Polyaxon' : (responses_df_2020['Q35_A_Part_7'].count()),\n    'Trains' : (responses_df_2020['Q35_A_Part_8'].count()),\n    'Domino Model Monitor' : (responses_df_2020['Q35_A_Part_9'].count()),\n    'No \/ None' : (responses_df_2020['Q35_A_Part_10'].count()),\n    'Other' : (responses_df_2020['Q35_A_OTHER'].count())\n}\n\n\nq35b_dictionary_of_counts_2020 = {\n    'Neptune.ai' : (responses_df_2020['Q35_B_Part_1'].count()),\n    'Weights & Biases': (responses_df_2020['Q35_B_Part_2'].count()),\n    'Comet.ml' : (responses_df_2020['Q35_B_Part_3'].count()),\n    'Sacred + Omniboard' : (responses_df_2020['Q35_B_Part_4'].count()),\n    'TensorBoard' : (responses_df_2020['Q35_B_Part_5'].count()),\n    'Guild.ai' : (responses_df_2020['Q35_B_Part_6'].count()),\n    'Polyaxon' : (responses_df_2020['Q35_B_Part_7'].count()),\n    'Trains' : (responses_df_2020['Q35_B_Part_8'].count()),\n    'Domino Model Monitor' : (responses_df_2020['Q35_B_Part_9'].count()),\n    'No \/ None' : (responses_df_2020['Q35_B_Part_10'].count()),\n    'Other' : (responses_df_2020['Q35_B_OTHER'].count())\n}\n\nq36_dictionary_of_counts_2020 = {\n    'Plotly Dash' : (responses_df_2020['Q36_Part_1'].count()),\n    'Streamlit': (responses_df_2020['Q36_Part_2'].count()),\n    'NBViewer' : (responses_df_2020['Q36_Part_3'].count()),\n    'GitHub' : (responses_df_2020['Q36_Part_4'].count()),\n    'Personal Blog' : (responses_df_2020['Q36_Part_5'].count()),\n    'Kaggle' : (responses_df_2020['Q36_Part_6'].count()),\n    'Colab' : (responses_df_2020['Q36_Part_7'].count()),\n    'Shiny' : (responses_df_2020['Q36_Part_8'].count()),\n    'None \/ I do not share my work publicly' : (responses_df_2020['Q36_Part_9'].count()),\n    'Other' : (responses_df_2020['Q36_OTHER'].count())\n}\n\n\nq37_dictionary_of_counts_2020 = {\n    'Coursera' : (responses_df_2020['Q37_Part_1'].count()),\n    'EdX': (responses_df_2020['Q37_Part_2'].count()),\n    'Kaggle Learn Courses' : (responses_df_2020['Q37_Part_3'].count()),\n    'DataCamp' : (responses_df_2020['Q37_Part_4'].count()),\n    'Fast.ai' : (responses_df_2020['Q37_Part_5'].count()),\n    'Udacity' : (responses_df_2020['Q37_Part_6'].count()),\n    'Udemy' : (responses_df_2020['Q37_Part_7'].count()),\n    'LinkedIn Learning' : (responses_df_2020['Q37_Part_8'].count()),\n    'Cloud-certification programs' : (responses_df_2020['Q37_Part_9'].count()),\n    'University Courses' : (responses_df_2020['Q37_Part_10'].count()),\n    'None' : (responses_df_2020['Q37_Part_11'].count()),\n    'Other' : (responses_df_2020['Q37_OTHER'].count())\n}\n\n\nq39_dictionary_of_counts_2020 = {\n    'Twitter (data science influencers)' : (responses_df_2020['Q39_Part_1'].count()),\n    'Email newsletters (Data Elixir, OReilly Data & AI, etc)': (responses_df_2020['Q39_Part_2'].count()),\n    'Reddit (r\/machinelearning, etc)' : (responses_df_2020['Q39_Part_3'].count()),\n    'Kaggle (notebooks, forums, etc)' : (responses_df_2020['Q39_Part_4'].count()),\n    'Course Forums (forums.fast.ai, Coursera forums, etc)' : (responses_df_2020['Q39_Part_5'].count()),\n    'YouTube (Kaggle YouTube, Cloud AI Adventures, etc)' : (responses_df_2020['Q39_Part_6'].count()),\n    'Podcasts (Chai Time Data Science, OReilly Data Show, etc)' : (responses_df_2020['Q39_Part_7'].count()),\n    'Blogs (Towards Data Science, Analytics Vidhya, etc)' : (responses_df_2020['Q39_Part_8'].count()),\n    'Journal Publications (peer-reviewed journals, conference proceedings, etc)' : (responses_df_2020['Q39_Part_9'].count()),\n    'Slack Communities (ods.ai, kagglenoobs, etc)' : (responses_df_2020['Q39_Part_10'].count()),\n    'None' : (responses_df_2020['Q39_Part_11'].count()),\n    'Other' : (responses_df_2020['Q39_OTHER'].count())\n}\n\n# Questions where respondents can select more than one answer choice have been split into multiple columns.\n# These dictionaries contain value counts for every answer choice for every multiple-column question.\n\nq7_dictionary_of_counts_2021 = {\n    'Python' : (responses_df_2021['Q7_Part_1'].count()),\n    'R': (responses_df_2021['Q7_Part_2'].count()),\n    'SQL' : (responses_df_2021['Q7_Part_3'].count()),\n    'C' : (responses_df_2021['Q7_Part_4'].count()),\n    'C++' : (responses_df_2021['Q7_Part_5'].count()),\n    'Java' : (responses_df_2021['Q7_Part_6'].count()),\n    'Javascript' : (responses_df_2021['Q7_Part_7'].count()),\n    'Julia' : (responses_df_2021['Q7_Part_8'].count()),\n    'Swift' : (responses_df_2021['Q7_Part_9'].count()),\n    'Bash' : (responses_df_2021['Q7_Part_10'].count()),\n    'MATLAB' : (responses_df_2021['Q7_Part_11'].count()),\n    'None' : (responses_df_2021['Q7_Part_12'].count()),\n    'Other' : (responses_df_2021['Q7_OTHER'].count())\n}\n\nq9_dictionary_of_counts_2021 = {\n    'JupyterLab' : (responses_df_2021['Q9_Part_1'].count()),\n    'RStudio': (responses_df_2021['Q9_Part_2'].count()),\n    'Visual Studio' : (responses_df_2021['Q9_Part_3'].count()),\n    'Visual Studio Code (VSCode)' : (responses_df_2021['Q9_Part_4'].count()),\n    'PyCharm' : (responses_df_2021['Q9_Part_5'].count()),\n    'Spyder' : (responses_df_2021['Q9_Part_6'].count()),\n    'Notepad++' : (responses_df_2021['Q9_Part_7'].count()),\n    'Sublime Text' : (responses_df_2021['Q9_Part_8'].count()),\n    'Vim, Emacs, or similar' : (responses_df_2021['Q9_Part_9'].count()),\n    'MATLAB' : (responses_df_2021['Q9_Part_10'].count()),\n    'Jupyter Notebook' : (responses_df_2021['Q9_Part_11'].count()),    \n    'None' : (responses_df_2021['Q9_Part_12'].count()),\n    'Other' : (responses_df_2021['Q9_OTHER'].count())\n}\n\nq10_dictionary_of_counts_2021 = {\n    'Kaggle Notebooks' : (responses_df_2021['Q10_Part_1'].count()),\n    'Colab Notebooks': (responses_df_2021['Q10_Part_2'].count()),\n    'Azure Notebooks' : (responses_df_2021['Q10_Part_3'].count()),\n    'Paperspace \/ Gradient' : (responses_df_2021['Q10_Part_4'].count()),\n    'Binder \/ JupyterHub' : (responses_df_2021['Q10_Part_5'].count()),\n    'Code Ocean' : (responses_df_2021['Q10_Part_6'].count()),\n    'IBM Watson Studio' : (responses_df_2021['Q10_Part_7'].count()),\n    'Amazon Sagemaker Studio Notebooks' : (responses_df_2021['Q10_Part_8'].count()),\n    'Amazon EMR Notebooks' : (responses_df_2021['Q10_Part_9'].count()),\n    'Google Cloud Notebooks (AI Platform \/ Vertex AI)' : (responses_df_2021['Q10_Part_10'].count()),\n    'Google Cloud Datalab' : (responses_df_2021['Q10_Part_11'].count()),\n    'Databricks Collaborative Notebooks' : (responses_df_2021['Q10_Part_12'].count()),\n    'Zeppelin \/ Zepl Notebooks' : (responses_df_2021['Q10_Part_13'].count()),\n    'Deepnote Notebooks' : (responses_df_2021['Q10_Part_14'].count()),\n    'Observable Notebooks' : (responses_df_2021['Q10_Part_15'].count()),\n    'None' : (responses_df_2021['Q10_Part_16'].count()),\n    'Other' : (responses_df_2021['Q10_OTHER'].count())\n}\n\nq12_dictionary_of_counts_2021 = {\n    'NVIDIA GPUs' : (responses_df_2021['Q12_Part_1'].count()),\n    'Google Cloud TPUs': (responses_df_2021['Q12_Part_2'].count()),\n    'AWS Trainium Chips': (responses_df_2021['Q12_Part_3'].count()),\n    'AWS Inferentia Chips': (responses_df_2021['Q12_Part_4'].count()),\n    'None' : (responses_df_2021['Q12_Part_5'].count()),\n    'Other' : (responses_df_2021['Q12_OTHER'].count())\n}\n\nq14_dictionary_of_counts_2021 = {\n    'Matplotlib' : (responses_df_2021['Q14_Part_1'].count()),\n    'Seaborn': (responses_df_2021['Q14_Part_2'].count()),\n    'Plotly \/ Plotly Express' : (responses_df_2021['Q14_Part_3'].count()),\n    'Ggplot \/ ggplot2' : (responses_df_2021['Q14_Part_4'].count()),\n    'Shiny' : (responses_df_2021['Q14_Part_5'].count()),\n    'D3.js' : (responses_df_2021['Q14_Part_6'].count()),\n    'Altair' : (responses_df_2021['Q14_Part_7'].count()),\n    'Bokeh' : (responses_df_2021['Q14_Part_8'].count()),\n    'Geoplotlib' : (responses_df_2021['Q14_Part_9'].count()),\n    'Leaflet \/ Folium' : (responses_df_2021['Q14_Part_10'].count()),\n    'None' : (responses_df_2021['Q14_Part_11'].count()),\n    'Other' : (responses_df_2021['Q14_OTHER'].count())\n}\n\nq16_dictionary_of_counts_2021 = {\n    'Scikit-learn' : (responses_df_2021['Q16_Part_1'].count()),\n    'TensorFlow': (responses_df_2021['Q16_Part_2'].count()),\n    'Keras' : (responses_df_2021['Q16_Part_3'].count()),\n    'PyTorch' : (responses_df_2021['Q16_Part_4'].count()),\n    'Fast.ai' : (responses_df_2021['Q16_Part_5'].count()),\n    'MXNet' : (responses_df_2021['Q16_Part_6'].count()),\n    'Xgboost' : (responses_df_2021['Q16_Part_7'].count()),\n    'LightGBM' : (responses_df_2021['Q16_Part_8'].count()),\n    'CatBoost' : (responses_df_2021['Q16_Part_9'].count()),\n    'Prophet' : (responses_df_2021['Q16_Part_10'].count()),\n    'H20-3' : (responses_df_2021['Q16_Part_11'].count()),\n    'Caret' : (responses_df_2021['Q16_Part_12'].count()),\n    'Tidymodels' : (responses_df_2021['Q16_Part_13'].count()),\n    'JAX' : (responses_df_2021['Q16_Part_14'].count()),\n    'PyTorch Lightning' : (responses_df_2021['Q16_Part_15'].count()),\\\n    'Huggingface' : (responses_df_2021['Q16_Part_16'].count()),\n    'None' : (responses_df_2021['Q16_Part_17'].count()),\n    'Other' : (responses_df_2021['Q16_OTHER'].count())\n}\n\nq17_dictionary_of_counts_2021 = {\n    'Linear or Logistic Regression' : (responses_df_2021['Q17_Part_1'].count()),\n    'Decision Trees or Random Forests': (responses_df_2021['Q17_Part_2'].count()),\n    'Gradient Boosting Machines (xgboost, lightgbm, etc)' : (responses_df_2021['Q17_Part_3'].count()),\n    'Bayesian Approaches' : (responses_df_2021['Q17_Part_4'].count()),\n    'Evolutionary Approaches' : (responses_df_2021['Q17_Part_5'].count()),\n    'Dense Neural Networks (MLPs, etc)' : (responses_df_2021['Q17_Part_6'].count()),\n    'Convolutional Neural Networks' : (responses_df_2021['Q17_Part_7'].count()),\n    'Generative Adversarial Networks' : (responses_df_2021['Q17_Part_8'].count()),\n    'Recurrent Neural Networks' : (responses_df_2021['Q17_Part_9'].count()),\n    'Transformer Networks (BERT, gpt-3, etc)' : (responses_df_2021['Q17_Part_10'].count()),\n    'None' : (responses_df_2021['Q17_Part_11'].count()),\n    'Other' : (responses_df_2021['Q17_OTHER'].count())\n}\n\n\nq18_dictionary_of_counts_2021 = {\n    'General purpose image\/video tools (PIL, cv2, skimage, etc)' : (responses_df_2021['Q18_Part_1'].count()),\n    'Image segmentation methods (U-Net, Mask R-CNN, etc)': (responses_df_2021['Q18_Part_2'].count()),\n    'Object detection methods (YOLOv3, RetinaNet, etc)' : (responses_df_2021['Q18_Part_3'].count()),\n    'Image classification and other general purpose networks (VGG, Inception, ResNet, ResNeXt, NASNet, EfficientNet, etc)' : (responses_df_2021['Q18_Part_4'].count()),\n    'Generative Networks (GAN, VAE, etc)' : (responses_df_2021['Q18_Part_5'].count()),\n    'None' : (responses_df_2021['Q18_Part_6'].count()),\n    'Other' : (responses_df_2021['Q18_OTHER'].count())\n}\n\n\nq19_dictionary_of_counts_2021 = {\n    'Word embeddings\/vectors (GLoVe, fastText, word2vec)' : (responses_df_2021['Q19_Part_1'].count()),\n    'Encoder-decoder models (seq2seq, vanilla transformers)': (responses_df_2021['Q19_Part_2'].count()),\n    'Contextualized embeddings (ELMo, CoVe)' : (responses_df_2021['Q19_Part_3'].count()),\n    'Transformer language models (GPT-3, BERT, XLnet, etc)' : (responses_df_2021['Q19_Part_4'].count()),\n    'None' : (responses_df_2021['Q19_Part_5'].count()),\n    'Other' : (responses_df_2021['Q19_OTHER'].count())\n}\n\n\nq24_dictionary_of_counts_2021 = {\n    'Analyze and understand data to influence product or business decisions' : (responses_df_2021['Q24_Part_1'].count()),\n    'Build and\/or run the data infrastructure that my business uses for storing, analyzing, and operationalizing data': (responses_df_2021['Q24_Part_2'].count()),\n    'Build prototypes to explore applying machine learning to new areas' : (responses_df_2021['Q24_Part_3'].count()),\n    'Build and\/or run a machine learning service that operationally improves my product or workflows' : (responses_df_2021['Q24_Part_4'].count()),\n    'Experimentation and iteration to improve existing ML models' : (responses_df_2021['Q24_Part_5'].count()),\n    'Do research that advances the state of the art of machine learning' : (responses_df_2021['Q24_Part_6'].count()),\n    'None of these activities are an important part of my role at work' : (responses_df_2021['Q24_Part_7'].count()),\n    'Other' : (responses_df_2021['Q24_OTHER'].count())\n}\n\n\nq27a_dictionary_of_counts_2021 = {\n    'Amazon Web Services (AWS)' : (responses_df_2021['Q27_A_Part_1'].count()),\n    'Microsoft Azure': (responses_df_2021['Q27_A_Part_2'].count()),\n    'Google Cloud Platform (GCP)' : (responses_df_2021['Q27_A_Part_3'].count()),\n    'IBM Cloud \/ Red Hat' : (responses_df_2021['Q27_A_Part_4'].count()),\n    'Oracle Cloud' : (responses_df_2021['Q27_A_Part_5'].count()),\n    'SAP Cloud' : (responses_df_2021['Q27_A_Part_6'].count()),\n    'Salesforce Cloud' : (responses_df_2021['Q27_A_Part_7'].count()),\n    'VMware Cloud' : (responses_df_2021['Q27_A_Part_8'].count()),\n    'Alibaba Cloud' : (responses_df_2021['Q27_A_Part_9'].count()),\n    'Tencent Cloud' : (responses_df_2021['Q27_A_Part_10'].count()),\n    'None' : (responses_df_2021['Q27_A_Part_11'].count()),\n    'Other' : (responses_df_2021['Q27_A_OTHER'].count())\n}\n\nq27b_dictionary_of_counts_2021 = {\n    'Amazon Web Services (AWS)' : (responses_df_2021['Q27_B_Part_1'].count()),\n    'Microsoft Azure': (responses_df_2021['Q27_B_Part_2'].count()),\n    'Google Cloud Platform (GCP)' : (responses_df_2021['Q27_B_Part_3'].count()),\n    'IBM Cloud \/ Red Hat' : (responses_df_2021['Q27_B_Part_4'].count()),\n    'Oracle Cloud' : (responses_df_2021['Q27_B_Part_5'].count()),\n    'SAP Cloud' : (responses_df_2021['Q27_B_Part_6'].count()),\n    'Salesforce Cloud' : (responses_df_2021['Q27_B_Part_7'].count()),\n    'VMware Cloud' : (responses_df_2021['Q27_B_Part_8'].count()),\n    'Alibaba Cloud' : (responses_df_2021['Q27_B_Part_9'].count()),\n    'Tencent Cloud' : (responses_df_2021['Q27_B_Part_10'].count()),\n    'None' : (responses_df_2021['Q27_B_Part_11'].count()),\n    'Other' : (responses_df_2021['Q27_B_OTHER'].count())\n}\n\nq29a_dictionary_of_counts_2021 = {\n    'Amazon Elastic Compute Cloud (EC2)' : (responses_df_2021['Q29_A_Part_1'].count()),\n    'Microsoft Azure Virtual Machines' : (responses_df_2021['Q29_A_Part_2'].count()),\n    'Google Cloud Compute Engine' : (responses_df_2021['Q29_A_Part_3'].count()),\n    'No \/ None' : (responses_df_2021['Q29_A_Part_4'].count()),\n    'Other' : (responses_df_2021['Q29_A_OTHER'].count())\n}\n\nq29b_dictionary_of_counts_2021 = {\n    'Amazon Elastic Compute Cloud (EC2)' : (responses_df_2021['Q29_B_Part_1'].count()),\n    'Microsoft Azure Virtual Machines' : (responses_df_2021['Q29_B_Part_2'].count()),\n    'Google Cloud Compute Engine' : (responses_df_2021['Q29_B_Part_3'].count()),\n    'No \/ None' : (responses_df_2021['Q29_B_Part_4'].count()),\n    'Other' : (responses_df_2021['Q29_B_OTHER'].count())\n}\n\nq30a_dictionary_of_counts_2021 = {\n    'Microsoft Azure Data Lake Storage' : (responses_df_2021['Q30_A_Part_1'].count()),\n    'Microsoft Azure Disk Storage': (responses_df_2021['Q30_A_Part_2'].count()),\n    'Amazon Simple Storage Service (S3) ' : (responses_df_2021['Q30_A_Part_3'].count()),\n    'Amazon Elastic File System (EFS) ' : (responses_df_2021['Q30_A_Part_4'].count()),\n    'Google Cloud Storage (GCS) ' : (responses_df_2021['Q30_A_Part_5'].count()),\n    'Google Cloud Filestore' : (responses_df_2021['Q30_A_Part_6'].count()),\n    'No \/ None' : (responses_df_2021['Q30_A_Part_7'].count()),\n    'Other' : (responses_df_2021['Q30_A_OTHER'].count())\n}\n\nq30b_dictionary_of_counts_2021 = {\n    'Microsoft Azure Data Lake Storage' : (responses_df_2021['Q30_B_Part_1'].count()),\n    'Microsoft Azure Disk Storage': (responses_df_2021['Q30_B_Part_2'].count()),\n    'Amazon Simple Storage Service (S3) ' : (responses_df_2021['Q30_B_Part_3'].count()),\n    'Amazon Elastic File System (EFS) ' : (responses_df_2021['Q30_B_Part_4'].count()),\n    'Google Cloud Storage (GCS) ' : (responses_df_2021['Q30_B_Part_5'].count()),\n    'Google Cloud Filestore' : (responses_df_2021['Q30_B_Part_6'].count()),\n    'No \/ None' : (responses_df_2021['Q30_B_Part_7'].count()),\n    'Other' : (responses_df_2021['Q30_B_OTHER'].count())\n}\n\nq31a_dictionary_of_counts_2021 = {\n    'Amazon SageMaker' : (responses_df_2021['Q31_A_Part_1'].count()),\n    'Azure Machine Learning Studio': (responses_df_2021['Q31_A_Part_2'].count()),\n    'Google Cloud Vertex AI' : (responses_df_2021['Q31_A_Part_3'].count()),\n    'DataRobot' : (responses_df_2021['Q31_A_Part_4'].count()),\n    'Databricks' : (responses_df_2021['Q31_A_Part_5'].count()),\n    'Dataiku' : (responses_df_2021['Q31_A_Part_6'].count()),\n    'Alteryx' : (responses_df_2021['Q31_A_Part_7'].count()),\n    'Rapidminer' : (responses_df_2021['Q31_A_Part_8'].count()),\n    'No \/ None' : (responses_df_2021['Q31_A_Part_9'].count()),\n    'Other' : (responses_df_2021['Q31_A_OTHER'].count())\n}\n\nq31b_dictionary_of_counts_2021 = {\n    'Amazon SageMaker' : (responses_df_2021['Q31_B_Part_1'].count()),\n    'Azure Machine Learning Studio': (responses_df_2021['Q31_B_Part_2'].count()),\n    'Google Cloud Vertex AI' : (responses_df_2021['Q31_B_Part_3'].count()),\n    'DataRobot' : (responses_df_2021['Q31_B_Part_4'].count()),\n    'Databricks' : (responses_df_2021['Q31_B_Part_5'].count()),\n    'Dataiku' : (responses_df_2021['Q31_B_Part_6'].count()),\n    'Alteryx' : (responses_df_2021['Q31_B_Part_7'].count()),\n    'Rapidminer' : (responses_df_2021['Q31_B_Part_8'].count()),\n    'No \/ None' : (responses_df_2021['Q31_B_Part_9'].count()),\n    'Other' : (responses_df_2021['Q31_B_OTHER'].count())\n}\n\nq32a_dictionary_of_counts_2021 = { \n    'MySQL' : (responses_df_2021['Q32_A_Part_1'].count()),\n    'PostgreSQL': (responses_df_2021['Q32_A_Part_2'].count()),\n    'SQLite' : (responses_df_2021['Q32_A_Part_3'].count()),\n    'Oracle Database' : (responses_df_2021['Q32_A_Part_4'].count()),\n    'MongoDB' : (responses_df_2021['Q32_A_Part_5'].count()),\n    'Snowflake' : (responses_df_2021['Q32_A_Part_6'].count()),\n    'IBM Db2' : (responses_df_2021['Q32_A_Part_7'].count()),\n    'Microsoft SQL Server' : (responses_df_2021['Q32_A_Part_8'].count()),\n    'Microsoft Azure SQL Database' : (responses_df_2021['Q32_A_Part_9'].count()), \n    'Microsoft Azure Cosmos DB' : (responses_df_2021['Q32_A_Part_10'].count()),\n    'Amazon Redshift' : (responses_df_2021['Q32_A_Part_11'].count()), \n    'Amazon Aurora' : (responses_df_2021['Q32_A_Part_12'].count()),\n    'Amazon RDS' : (responses_df_2021['Q32_A_Part_13'].count()),\n    'Amazon DynamoDB' : (responses_df_2021['Q32_A_Part_14'].count()),\n    'Google Cloud BigQuery' : (responses_df_2021['Q32_A_Part_15'].count()),\n    'Google Cloud SQL' : (responses_df_2021['Q32_A_Part_16'].count()),\n    'Google Cloud Firestore' : (responses_df_2021['Q32_A_Part_17'].count()),\n    'Google Cloud BigTable' : (responses_df_2021['Q32_A_Part_18'].count()),\n    'Google Cloud Spanner' : (responses_df_2021['Q32_A_Part_19'].count()),\n    'None' : (responses_df_2021['Q32_A_Part_20'].count()),\n    'Other' : (responses_df_2021['Q32_A_OTHER'].count())\n}\n\n\nq32b_dictionary_of_counts_2021 = {\n    'MySQL' : (responses_df_2021['Q32_B_Part_1'].count()),\n    'PostgreSQL': (responses_df_2021['Q32_B_Part_2'].count()),\n    'SQLite' : (responses_df_2021['Q32_B_Part_3'].count()),\n    'Oracle Database' : (responses_df_2021['Q32_B_Part_4'].count()),\n    'MongoDB' : (responses_df_2021['Q32_B_Part_5'].count()),\n    'Snowflake' : (responses_df_2021['Q32_B_Part_6'].count()),\n    'IBM Db2' : (responses_df_2021['Q32_B_Part_7'].count()),\n    'Microsoft SQL Server' : (responses_df_2021['Q32_B_Part_8'].count()),\n    'Microsoft Azure SQL Database' : (responses_df_2021['Q32_B_Part_9'].count()), \n    'Microsoft Azure Cosmos DB' : (responses_df_2021['Q32_B_Part_10'].count()),\n    'Amazon Redshift' : (responses_df_2021['Q32_B_Part_11'].count()), \n    'Amazon Aurora' : (responses_df_2021['Q32_B_Part_12'].count()),\n    'Amazon RDS' : (responses_df_2021['Q32_B_Part_13'].count()),\n    'Amazon DynamoDB' : (responses_df_2021['Q32_B_Part_14'].count()),\n    'Google Cloud BigQuery' : (responses_df_2021['Q32_B_Part_15'].count()),\n    'Google Cloud SQL' : (responses_df_2021['Q32_B_Part_16'].count()),\n    'Google Cloud Firestore' : (responses_df_2021['Q32_B_Part_17'].count()),\n    'Google Cloud BigTable' : (responses_df_2021['Q32_B_Part_18'].count()),\n    'Google Cloud Spanner' : (responses_df_2021['Q32_B_Part_19'].count()),\n    'None' : (responses_df_2021['Q32_B_Part_20'].count()),\n    'Other' : (responses_df_2021['Q32_B_OTHER'].count())\n}\n\nq34a_dictionary_of_counts_2021 = { \n    'Amazon QuickSight' : (responses_df_2021['Q34_A_Part_1'].count()),\n    'Microsoft Power BI': (responses_df_2021['Q34_A_Part_2'].count()),\n    'Google Data Studio' : (responses_df_2021['Q34_A_Part_3'].count()),\n    'Looker' : (responses_df_2021['Q34_A_Part_4'].count()),\n    'Tableau' : (responses_df_2021['Q34_A_Part_5'].count()),\n    'Salesforce' : (responses_df_2021['Q34_A_Part_6'].count()),\n    'Tableau CRM' : (responses_df_2021['Q34_A_Part_7'].count()),\n    'Qlik' : (responses_df_2021['Q34_A_Part_8'].count()),\n    'Domo' : (responses_df_2021['Q34_A_Part_9'].count()),\n    'TIBCO Spotfire' : (responses_df_2021['Q34_A_Part_10'].count()),\n    'Alteryx' : (responses_df_2021['Q34_A_Part_11'].count()),\n    'Sisense' : (responses_df_2021['Q34_A_Part_12'].count()),\n    'SAP Analytics Cloud' : (responses_df_2021['Q34_A_Part_13'].count()),\n    'Microsoft Azure Synapse' : (responses_df_2021['Q34_A_Part_14'].count()),\n    'Thoughtspot' : (responses_df_2021['Q34_A_Part_15'].count()),\n    'None' : (responses_df_2021['Q34_A_Part_16'].count()),\n    'Other' : (responses_df_2021['Q34_A_OTHER'].count())\n}\n\nq34b_dictionary_of_counts_2021 = {\n    'Amazon QuickSight' : (responses_df_2021['Q34_B_Part_1'].count()),\n    'Microsoft Power BI': (responses_df_2021['Q34_B_Part_2'].count()),\n    'Google Data Studio' : (responses_df_2021['Q34_B_Part_3'].count()),\n    'Looker' : (responses_df_2021['Q34_B_Part_4'].count()),\n    'Tableau' : (responses_df_2021['Q34_B_Part_5'].count()),\n    'Salesforce' : (responses_df_2021['Q34_B_Part_6'].count()),\n    'Tableau CRM' : (responses_df_2021['Q34_B_Part_7'].count()),\n    'Qlik' : (responses_df_2021['Q34_B_Part_8'].count()),\n    'Domo' : (responses_df_2021['Q34_B_Part_9'].count()),\n    'TIBCO Spotfire' : (responses_df_2021['Q34_B_Part_10'].count()),\n    'Alteryx' : (responses_df_2021['Q34_B_Part_11'].count()),\n    'Sisense' : (responses_df_2021['Q34_B_Part_12'].count()),\n    'SAP Analytics Cloud' : (responses_df_2021['Q34_B_Part_13'].count()),\n    'Microsoft Azure Synapse' : (responses_df_2021['Q34_B_Part_14'].count()),\n    'Thoughtspot' : (responses_df_2021['Q34_B_Part_15'].count()),\n    'None' : (responses_df_2021['Q34_B_Part_16'].count()),\n    'Other' : (responses_df_2021['Q34_B_OTHER'].count())\n}\n\nq36a_dictionary_of_counts_2021 = {\n    'Automated data augmentation (e.g. imgaug, albumentations)' : (responses_df_2021['Q36_A_Part_1'].count()),\n    'Automated feature engineering\/selection (e.g. tpot, boruta_py)': (responses_df_2021['Q36_A_Part_2'].count()),\n    'Automated model selection (e.g. auto-sklearn, xcessiv)' : (responses_df_2021['Q36_A_Part_3'].count()),\n    'Automated model architecture searches (e.g. darts, enas)' : (responses_df_2021['Q36_A_Part_4'].count()),\n    'Automated hyperparameter tuning (e.g. hyperopt, ray.tune, Vizier)' : (responses_df_2021['Q36_A_Part_5'].count()),\n    'Automation of full ML pipelines (e.g. Google AutoML, H20 Driverless AI)' : (responses_df_2021['Q36_A_Part_6'].count()),\n    'No \/ None' : (responses_df_2021['Q36_A_Part_7'].count()),\n    'Other' : (responses_df_2021['Q36_A_OTHER'].count())\n}\n\nq36b_dictionary_of_counts_2021 = {\n    'Automated data augmentation (e.g. imgaug, albumentations)' : (responses_df_2021['Q36_B_Part_1'].count()),\n    'Automated feature engineering\/selection (e.g. tpot, boruta_py)': (responses_df_2021['Q36_B_Part_2'].count()),\n    'Automated model selection (e.g. auto-sklearn, xcessiv)' : (responses_df_2021['Q36_B_Part_3'].count()),\n    'Automated model architecture searches (e.g. darts, enas)' : (responses_df_2021['Q36_B_Part_4'].count()),\n    'Automated hyperparameter tuning (e.g. hyperopt, ray.tune, Vizier)' : (responses_df_2021['Q36_B_Part_5'].count()),\n    'Automation of full ML pipelines (e.g. Google AutoML, H20 Driverless AI)' : (responses_df_2021['Q36_B_Part_6'].count()),\n    'No \/ None' : (responses_df_2021['Q36_B_Part_7'].count()),\n    'Other' : (responses_df_2021['Q36_B_OTHER'].count())\n}\n\nq37a_dictionary_of_counts_2021 = {\n    'Google Cloud AutoML' : (responses_df_2021['Q37_A_Part_1'].count()),\n    'H20 Driverless AI': (responses_df_2021['Q37_A_Part_2'].count()),\n    'Databricks AutoML' : (responses_df_2021['Q37_A_Part_3'].count()),\n    'DataRobot AutoML' : (responses_df_2021['Q37_A_Part_4'].count()),\n    'Amazon Sagemaker Autopilot' : (responses_df_2021['Q37_A_Part_5'].count()),\n    'Azure Automated Machine Learning' : (responses_df_2021['Q37_A_Part_6'].count()),\n    'No \/ None' : (responses_df_2021['Q37_A_Part_7'].count()),\n    'Other' : (responses_df_2021['Q37_A_OTHER'].count())\n}\n\nq37b_dictionary_of_counts_2021 = {\n    'Google Cloud AutoML' : (responses_df_2021['Q37_B_Part_1'].count()),\n    'H20 Driverless AI': (responses_df_2021['Q37_B_Part_2'].count()),\n    'Databricks AutoML' : (responses_df_2021['Q37_B_Part_3'].count()),\n    'DataRobot AutoML' : (responses_df_2021['Q37_B_Part_4'].count()),\n    'Amazon Sagemaker Autopilot' : (responses_df_2021['Q37_B_Part_5'].count()),\n    'Azure Automated Machine Learning' : (responses_df_2021['Q37_B_Part_6'].count()),\n    'No \/ None' : (responses_df_2021['Q37_B_Part_7'].count()),\n    'Other' : (responses_df_2021['Q37_B_OTHER'].count())\n}\n\n\nq38a_dictionary_of_counts_2021 = {\n    'Neptune.ai' : (responses_df_2021['Q38_A_Part_1'].count()),\n    'Weights & Biases': (responses_df_2021['Q38_A_Part_2'].count()),\n    'Comet.ml' : (responses_df_2021['Q38_A_Part_3'].count()),\n    'Sacred + Omniboard' : (responses_df_2021['Q38_A_Part_4'].count()),\n    'TensorBoard' : (responses_df_2021['Q38_A_Part_5'].count()),\n    'Guild.ai' : (responses_df_2021['Q38_A_Part_6'].count()),\n    'Polyaxon' : (responses_df_2021['Q38_A_Part_7'].count()),\n    'ClearML' : (responses_df_2021['Q38_A_Part_8'].count()),\n    'Domino Model Monitor' : (responses_df_2021['Q38_A_Part_9'].count()),\n    'MLflow' : (responses_df_2021['Q38_A_Part_10'].count()),\n    'No \/ None' : (responses_df_2021['Q38_A_Part_11'].count()),\n    'Other' : (responses_df_2021['Q38_A_OTHER'].count())\n}\n\n\nq38b_dictionary_of_counts_2021 = {\n    'Neptune.ai' : (responses_df_2021['Q38_B_Part_1'].count()),\n    'Weights & Biases': (responses_df_2021['Q38_B_Part_2'].count()),\n    'Comet.ml' : (responses_df_2021['Q38_B_Part_3'].count()),\n    'Sacred + Omniboard' : (responses_df_2021['Q38_B_Part_4'].count()),\n    'TensorBoard' : (responses_df_2021['Q38_B_Part_5'].count()),\n    'Guild.ai' : (responses_df_2021['Q38_B_Part_6'].count()),\n    'Polyaxon' : (responses_df_2021['Q38_B_Part_7'].count()),\n    'ClearML' : (responses_df_2021['Q38_B_Part_8'].count()),\n    'Domino Model Monitor' : (responses_df_2021['Q38_B_Part_9'].count()),\n    'MLflow' : (responses_df_2021['Q38_B_Part_10'].count()),\n    'No \/ None' : (responses_df_2021['Q38_B_Part_11'].count()),\n    'Other' : (responses_df_2021['Q38_B_OTHER'].count())\n}\n\nq39_dictionary_of_counts_2021 = {\n    'Plotly Dash' : (responses_df_2021['Q39_Part_1'].count()),\n    'Streamlit': (responses_df_2021['Q39_Part_2'].count()),\n    'NBViewer' : (responses_df_2021['Q39_Part_3'].count()),\n    'GitHub' : (responses_df_2021['Q39_Part_4'].count()),\n    'Personal Blog' : (responses_df_2021['Q39_Part_5'].count()),\n    'Kaggle' : (responses_df_2021['Q39_Part_6'].count()),\n    'Colab' : (responses_df_2021['Q39_Part_7'].count()),\n    'Shiny' : (responses_df_2021['Q39_Part_8'].count()),\n    'None \/ I do not share my work publicly' : (responses_df_2021['Q39_Part_9'].count()),\n    'Other' : (responses_df_2021['Q39_OTHER'].count())\n}\n\n\nq40_dictionary_of_counts_2021 = {\n    'Coursera' : (responses_df_2021['Q40_Part_1'].count()),\n    'EdX': (responses_df_2021['Q40_Part_2'].count()),\n    'Kaggle Learn Courses' : (responses_df_2021['Q40_Part_3'].count()),\n    'DataCamp' : (responses_df_2021['Q40_Part_4'].count()),\n    'Fast.ai' : (responses_df_2021['Q40_Part_5'].count()),\n    'Udacity' : (responses_df_2021['Q40_Part_6'].count()),\n    'Udemy' : (responses_df_2021['Q40_Part_7'].count()),\n    'LinkedIn Learning' : (responses_df_2021['Q40_Part_8'].count()),\n    'Cloud-certification programs' : (responses_df_2021['Q40_Part_9'].count()),\n    'University Courses' : (responses_df_2021['Q40_Part_10'].count()),\n    'None' : (responses_df_2021['Q40_Part_11'].count()),\n    'Other' : (responses_df_2021['Q40_OTHER'].count())\n}\n\n\nq42_dictionary_of_counts_2021 = {\n    'Twitter (data science influencers)' : (responses_df_2021['Q42_Part_1'].count()),\n    'Email newsletters (Data Elixir, OReilly Data & AI, etc)': (responses_df_2021['Q42_Part_2'].count()),\n    'Reddit (r\/machinelearning, etc)' : (responses_df_2021['Q42_Part_3'].count()),\n    'Kaggle (notebooks, forums, etc)' : (responses_df_2021['Q42_Part_4'].count()),\n    'Course Forums (forums.fast.ai, Coursera forums, etc)' : (responses_df_2021['Q42_Part_5'].count()),\n    'YouTube (Kaggle YouTube, Cloud AI Adventures, etc)' : (responses_df_2021['Q42_Part_6'].count()),\n    'Podcasts (Chai Time Data Science, OReilly Data Show, etc)' : (responses_df_2021['Q42_Part_7'].count()),\n    'Blogs (Towards Data Science, Analytics Vidhya, etc)' : (responses_df_2021['Q42_Part_8'].count()),\n    'Journal Publications (peer-reviewed journals, conference proceedings, etc)' : (responses_df_2021['Q42_Part_9'].count()),\n    'Slack Communities (ods.ai, kagglenoobs, etc)' : (responses_df_2021['Q42_Part_10'].count()),\n    'None' : (responses_df_2021['Q42_Part_11'].count()),\n    'Other' : (responses_df_2021['Q42_OTHER'].count())\n}\n\n# Questions where respondents can select more than one answer choice have been split into multiple columns.\n# These lists delineate every sub-column for every multiple-column question.\n\n\nq7_list_of_columns_2018 = ['Q16_Part_1',\n                      'Q16_Part_2',\n                      'Q16_Part_3',\n                      'Q16_Part_4',\n                      'Q16_Part_5',\n                      'Q16_Part_6',\n                      'Q16_Part_7',\n                      'Q16_Part_8',\n                      'Q16_Part_9',\n                      'Q16_Part_10',\n                      'Q16_Part_11',\n                      'Q16_Part_12']\n\nq9_list_of_columns_2018 = ['Q13_Part_1',\n                      'Q13_Part_2',\n                      'Q13_Part_3',\n                      'Q13_Part_4',\n                      'Q13_Part_5',\n                      'Q13_Part_6',\n                      'Q13_Part_7',\n                      'Q13_Part_8',\n                      'Q13_Part_9',\n                      'Q13_Part_10',\n                      'Q13_Part_11',\n                      'Q13_Part_12']\n\n\nq10_list_of_columns_2018 = ['Q14_Part_1',\n                       'Q14_Part_2',\n                       'Q14_Part_3',\n                       'Q14_Part_4',\n                       'Q14_Part_5',\n                       'Q14_Part_6',\n                       'Q14_Part_7',\n                       'Q14_Part_8',\n                       'Q14_Part_9',\n                       'Q14_Part_10',\n                       'Q14_Part_11']\n\nq14_list_of_columns_2018 = ['Q21_Part_1',\n                            'Q21_Part_2',\n                            'Q21_Part_3',\n                            'Q21_Part_4',\n                            'Q21_Part_5',\n                            'Q21_Part_6',\n                            'Q21_Part_7',\n                            'Q21_Part_8',\n                            'Q21_Part_9',\n                            'Q21_Part_10',\n                            'Q21_Part_11',\n                            'Q21_Part_12']\n\nq16_list_of_columns_2018 = ['Q19_Part_1',\n                       'Q19_Part_2',\n                       'Q19_Part_3',\n                       'Q19_Part_4',\n                       'Q19_Part_5',\n                       'Q19_Part_6',\n                       'Q19_Part_7',\n                       'Q19_Part_8',\n                       'Q19_Part_9',\n                       'Q19_Part_10',\n                       'Q19_Part_11',\n                       'Q19_Part_12']\n\n\n\nq26a_list_of_columns_2018 = ['Q15_Part_1',\n                        'Q15_Part_2',\n                        'Q15_Part_3',\n                        'Q15_Part_4',\n                        'Q15_Part_5',\n                        'Q15_Part_6',\n                        'Q15_Part_7']\n\n\nq29a_list_of_columns_2018 = ['Q29_Part_1',\n                        'Q29_Part_2',\n                        'Q29_Part_3',\n                        'Q29_Part_4',\n                        'Q29_Part_5',\n                        'Q29_Part_6',\n                        'Q29_Part_7',\n                        'Q29_Part_8',\n                        'Q29_Part_9',\n                        'Q29_Part_10',\n                        'Q29_Part_11',\n                        'Q29_Part_12']\n\n\n# Questions where respondents can select more than one answer choice have been split into multiple columns.\n# These lists delineate every sub-column for every multiple-column question.\n\nq7_list_of_columns_2019 = ['Q18_Part_1',\n                      'Q18_Part_2',\n                      'Q18_Part_3',\n                      'Q18_Part_4',\n                      'Q18_Part_5',\n                      'Q18_Part_6',\n                      'Q18_Part_7',\n                      'Q18_Part_8',\n                      'Q18_Part_9',\n                      'Q18_Part_10',\n                      'Q18_Part_11',\n                      'Q18_Part_12']\n\n\nq9_list_of_columns_2019 = ['Q16_Part_1',\n                      'Q16_Part_2',\n                      'Q16_Part_3',\n                      'Q16_Part_4',\n                      'Q16_Part_5',\n                      'Q16_Part_6',\n                      'Q16_Part_7',\n                      'Q16_Part_8',\n                      'Q16_Part_9',\n                      'Q16_Part_10',\n                      'Q16_Part_11',\n                      'Q16_Part_12']\n\n\nq10_list_of_columns_2019 = ['Q17_Part_1',\n                       'Q17_Part_2',\n                       'Q17_Part_3',\n                       'Q17_Part_4',\n                       'Q17_Part_5',\n                       'Q17_Part_6',\n                       'Q17_Part_7',\n                       'Q17_Part_8',\n                       'Q17_Part_9',\n                       'Q17_Part_10',\n                       'Q17_Part_11',\n                       'Q17_Part_12']\n\n\nq12_list_of_columns_2019 = ['Q21_Part_1',\n                            'Q21_Part_2',\n                            'Q21_Part_3',\n                            'Q21_Part_4',\n                            'Q21_Part_5']\n\nq14_list_of_columns_2019 = ['Q20_Part_1',\n                            'Q20_Part_2',\n                            'Q20_Part_3',\n                            'Q20_Part_4',\n                            'Q20_Part_5',\n                            'Q20_Part_6',\n                            'Q20_Part_7',\n                            'Q20_Part_8',\n                            'Q20_Part_9',\n                            'Q20_Part_10',\n                            'Q20_Part_11',\n                            'Q20_Part_12']\n\n\nq16_list_of_columns_2019 = ['Q28_Part_1',\n                       'Q28_Part_2',\n                       'Q28_Part_3',\n                       'Q28_Part_4',\n                       'Q28_Part_5',\n                       'Q28_Part_6',\n                       'Q28_Part_7',\n                       'Q28_Part_8',\n                       'Q28_Part_9',\n                       'Q28_Part_10',\n                       'Q28_Part_11',\n                       'Q28_Part_12']\n\n\nq17_list_of_columns_2019 = ['Q24_Part_1',\n                       'Q24_Part_2',\n                       'Q24_Part_3',\n                       'Q24_Part_4',\n                       'Q24_Part_5',\n                       'Q24_Part_6',\n                       'Q24_Part_7',\n                       'Q24_Part_8',\n                       'Q24_Part_9',\n                       'Q24_Part_10',\n                       'Q24_Part_11',\n                       'Q24_Part_12']\n\nq18_list_of_columns_2019 = ['Q26_Part_1',\n                       'Q26_Part_2',\n                       'Q26_Part_3',\n                       'Q26_Part_4',\n                       'Q26_Part_5',\n                       'Q26_Part_6',\n                       'Q26_Part_7']\n\nq19_list_of_columns_2019 = ['Q27_Part_1',\n                       'Q27_Part_2',\n                       'Q27_Part_3',\n                       'Q27_Part_4',\n                       'Q27_Part_5',\n                       'Q27_Part_6']\n\nq26a_list_of_columns_2019 = ['Q29_Part_1',\n                        'Q29_Part_2',\n                        'Q29_Part_3',\n                        'Q29_Part_4',\n                        'Q29_Part_5',\n                        'Q29_Part_6',\n                        'Q29_Part_7',\n                        'Q29_Part_8',\n                        'Q29_Part_9',\n                        'Q29_Part_10',\n                        'Q29_Part_11',\n                        'Q29_Part_12']\n\nq27a_list_of_columns_2019 = ['Q27_A_Part_1',\n                        'Q27_A_Part_2',\n                        'Q27_A_Part_3',\n                        'Q27_A_Part_4',\n                        'Q27_A_Part_5',\n                        'Q27_A_Part_6',\n                        'Q27_A_Part_7',\n                        'Q27_A_Part_8',\n                        'Q27_A_Part_9',\n                        'Q27_A_Part_10',\n                        'Q27_A_Part_11',\n                        'Q27_A_OTHER']\n\nq29a_list_of_columns_2019 = ['Q34_Part_1',\n                        'Q34_Part_2',\n                        'Q34_Part_3',\n                        'Q34_Part_4',\n                        'Q34_Part_5',\n                        'Q34_Part_6',\n                        'Q34_Part_7',\n                        'Q34_Part_8',\n                        'Q34_Part_9',\n                        'Q34_Part_10',\n                        'Q34_Part_11',\n                        'Q34_Part_12']\n\nq37a_list_of_columns_2019 = ['Q33_Part_1',\n                        'Q33_Part_2',\n                        'Q33_Part_3',\n                        'Q33_Part_4',\n                        'Q33_Part_5',\n                        'Q33_Part_6',\n                        'Q33_Part_7',\n                        'Q33_Part_8',\n                        'Q33_Part_9',\n                        'Q33_Part_10',\n                        'Q33_Part_11',\n                        'Q33_Part_12']\n\n# Questions where respondents can select more than one answer choice have been split into multiple columns.\n# These lists delineate every sub-column for every multiple-column question.\n\nq7_list_of_columns_2020 = ['Q7_Part_1',\n                      'Q7_Part_2',\n                      'Q7_Part_3',\n                      'Q7_Part_4',\n                      'Q7_Part_5',\n                      'Q7_Part_6',\n                      'Q7_Part_7',\n                      'Q7_Part_8',\n                      'Q7_Part_9',\n                      'Q7_Part_10',\n                      'Q7_Part_11',\n                      'Q7_Part_12',\n                      'Q7_OTHER']\n\nq9_list_of_columns_2020 = ['Q9_Part_1',\n                      'Q9_Part_2',\n                      'Q9_Part_3',\n                      'Q9_Part_4',\n                      'Q9_Part_5',\n                      'Q9_Part_6',\n                      'Q9_Part_7',\n                      'Q9_Part_8',\n                      'Q9_Part_9',\n                      'Q9_Part_10',\n                      'Q9_Part_11',\n                      'Q9_OTHER']\n\nq10_list_of_columns_2020 = ['Q10_Part_1',\n                       'Q10_Part_2',\n                       'Q10_Part_3',\n                       'Q10_Part_4',\n                       'Q10_Part_5',\n                       'Q10_Part_6',\n                       'Q10_Part_7',\n                       'Q10_Part_8',\n                       'Q10_Part_9',\n                       'Q10_Part_10',\n                       'Q10_Part_11',\n                       'Q10_Part_12',\n                       'Q10_Part_13',\n                       'Q10_OTHER']\n\nq12_list_of_columns_2020 = ['Q12_Part_1',\n                            'Q12_Part_2',\n                            'Q12_Part_3',\n                            'Q12_OTHER']\n\nq14_list_of_columns_2020 = ['Q14_Part_1',\n                            'Q14_Part_2',\n                            'Q14_Part_3',\n                            'Q14_Part_4',\n                            'Q14_Part_5',\n                            'Q14_Part_6',\n                            'Q14_Part_7',\n                            'Q14_Part_8',\n                            'Q14_Part_9',\n                            'Q14_Part_10',\n                            'Q14_Part_11',\n                            'Q14_OTHER']\n\nq16_list_of_columns_2020 = ['Q16_Part_1',\n                       'Q16_Part_2',\n                       'Q16_Part_3',\n                       'Q16_Part_4',\n                       'Q16_Part_5',\n                       'Q16_Part_6',\n                       'Q16_Part_7',\n                       'Q16_Part_8',\n                       'Q16_Part_9',\n                       'Q16_Part_10',\n                       'Q16_Part_11',\n                       'Q16_Part_12',\n                       'Q16_Part_13',\n                       'Q16_Part_14',\n                       'Q16_Part_15',\n                       'Q16_OTHER']\n\nq17_list_of_columns_2020 = ['Q17_Part_1',\n                       'Q17_Part_2',\n                       'Q17_Part_3',\n                       'Q17_Part_4',\n                       'Q17_Part_5',\n                       'Q17_Part_6',\n                       'Q17_Part_7',\n                       'Q17_Part_8',\n                       'Q17_Part_9',\n                       'Q17_Part_10',\n                       'Q17_Part_11',\n                       'Q17_OTHER']\n\nq18_list_of_columns_2020 = ['Q18_Part_1',\n                       'Q18_Part_2',\n                       'Q18_Part_3',\n                       'Q18_Part_4',\n                       'Q18_Part_5',\n                       'Q18_Part_6',\n                       'Q18_OTHER']\n\nq19_list_of_columns_2020 = ['Q19_Part_1',\n                       'Q19_Part_2',\n                       'Q19_Part_3',\n                       'Q19_Part_4',\n                       'Q19_Part_5',\n                       'Q19_OTHER']\n\nq23_list_of_columns_2020 = ['Q23_Part_1',\n                       'Q23_Part_2',\n                       'Q23_Part_3',\n                       'Q23_Part_4',\n                       'Q23_Part_5',\n                       'Q23_Part_6',\n                       'Q23_Part_7',\n                       'Q23_OTHER']\n\nq26a_list_of_columns_2020 = ['Q26_A_Part_1',\n                        'Q26_A_Part_2',\n                        'Q26_A_Part_3',\n                        'Q26_A_Part_4',\n                        'Q26_A_Part_5',\n                        'Q26_A_Part_6',\n                        'Q26_A_Part_7',\n                        'Q26_A_Part_8',\n                        'Q26_A_Part_9',\n                        'Q26_A_Part_10',\n                        'Q26_A_Part_11',\n                        'Q26_A_OTHER']\n\nq26b_list_of_columns_2020 = ['Q26_B_Part_1',\n                        'Q26_B_Part_2',\n                        'Q26_B_Part_3',\n                        'Q26_B_Part_4',\n                        'Q26_B_Part_5',\n                        'Q26_B_Part_6',\n                        'Q26_B_Part_7',\n                        'Q26_B_Part_8',\n                        'Q26_B_Part_9',\n                        'Q26_B_Part_10',\n                        'Q26_B_Part_11',\n                        'Q26_B_OTHER']\n\nq27a_list_of_columns_2020 = ['Q27_A_Part_1',\n                        'Q27_A_Part_2',\n                        'Q27_A_Part_3',\n                        'Q27_A_Part_4',\n                        'Q27_A_Part_5',\n                        'Q27_A_Part_6',\n                        'Q27_A_Part_7',\n                        'Q27_A_Part_8',\n                        'Q27_A_Part_9',\n                        'Q27_A_Part_10',\n                        'Q27_A_Part_11',\n                        'Q27_A_OTHER']\n\nq27b_dictionary_of_counts_2020 = ['Q27_B_Part_1',\n                             'Q27_B_Part_2',\n                             'Q27_B_Part_3',\n                             'Q27_B_Part_4',\n                             'Q27_B_Part_5',\n                             'Q27_B_Part_6',\n                             'Q27_B_Part_7',\n                             'Q27_B_Part_8',\n                             'Q27_B_Part_9',\n                             'Q27_B_Part_10',\n                             'Q27_B_Part_11',\n                             'Q27_B_OTHER']\n\nq28a_list_of_columns_2020 = ['Q28_A_Part_1',\n                        'Q28_A_Part_2',\n                        'Q28_A_Part_3',\n                        'Q28_A_Part_4',\n                        'Q28_A_Part_5',\n                        'Q28_A_Part_6',\n                        'Q28_A_Part_7',\n                        'Q28_A_Part_8',\n                        'Q28_A_Part_9',\n                        'Q28_A_Part_10',\n                        'Q28_A_OTHER']\n\nq28b_list_of_columns_2020 = ['Q28_B_Part_1',\n                        'Q28_B_Part_2',\n                        'Q28_B_Part_3',\n                        'Q28_B_Part_4',\n                        'Q28_B_Part_5',\n                        'Q28_B_Part_6',\n                        'Q28_B_Part_7',\n                        'Q28_B_Part_8',\n                        'Q28_B_Part_9',\n                        'Q28_B_Part_10',\n                        'Q28_B_OTHER']\n\nq29a_list_of_columns_2020 = ['Q29_A_Part_1',\n                        'Q29_A_Part_2',\n                        'Q29_A_Part_3',\n                        'Q29_A_Part_4',\n                        'Q29_A_Part_5',\n                        'Q29_A_Part_6',\n                        'Q29_A_Part_7',\n                        'Q29_A_Part_8',\n                        'Q29_A_Part_9',\n                        'Q29_A_Part_10',\n                        'Q29_A_Part_11',\n                        'Q29_A_Part_12',\n                        'Q29_A_Part_13',\n                        'Q29_A_Part_14',\n                        'Q29_A_Part_15',\n                        'Q29_A_Part_16',\n                        'Q29_A_Part_17',\n                        'Q29_A_OTHER']\n\nq29b_list_of_columns_2020 = ['Q29_B_Part_1',\n                        'Q29_B_Part_2',\n                        'Q29_B_Part_3',\n                        'Q29_B_Part_4',\n                        'Q29_B_Part_5',\n                        'Q29_B_Part_6',\n                        'Q29_B_Part_7',\n                        'Q29_B_Part_8',\n                        'Q29_B_Part_9',\n                        'Q29_B_Part_10',\n                        'Q29_B_Part_11',\n                        'Q29_B_Part_12',\n                        'Q29_B_Part_13',\n                        'Q29_B_Part_14',\n                        'Q29_B_Part_15',\n                        'Q29_B_Part_16',\n                        'Q29_B_Part_17',\n                        'Q29_B_OTHER']\n\nq31a_list_of_columns_2020 = ['Q31_A_Part_1',\n                        'Q31_A_Part_2',\n                        'Q31_A_Part_3',\n                        'Q31_A_Part_4',\n                        'Q31_A_Part_5',\n                        'Q31_A_Part_6',\n                        'Q31_A_Part_7',\n                        'Q31_A_Part_8',\n                        'Q31_A_Part_9',\n                        'Q31_A_Part_10',\n                        'Q31_A_Part_11',\n                        'Q31_A_Part_12',\n                        'Q31_A_Part_13',\n                        'Q31_A_Part_14',\n                        'Q31_A_OTHER']\n\nq31b_list_of_columns_2020 = ['Q31_B_Part_1',\n                        'Q31_B_Part_2',\n                        'Q31_B_Part_3',\n                        'Q31_B_Part_4',\n                        'Q31_B_Part_5',\n                        'Q31_B_Part_6',\n                        'Q31_B_Part_7',\n                        'Q31_B_Part_8',\n                        'Q31_B_Part_9',\n                        'Q31_B_Part_10',\n                        'Q31_B_Part_11',\n                        'Q31_B_Part_12',\n                        'Q31_B_Part_13',\n                        'Q31_B_Part_14',\n                        'Q31_B_OTHER']\n\nq33a_list_of_columns_2020 = ['Q33_A_Part_1',\n                        'Q33_A_Part_2',\n                        'Q33_A_Part_3',\n                        'Q33_A_Part_4',\n                        'Q33_A_Part_5',\n                        'Q33_A_Part_6',\n                        'Q33_A_Part_7',\n                        'Q33_A_OTHER']\n\nq33b_list_of_columns_2020 = ['Q33_B_Part_1',\n                        'Q33_B_Part_2',\n                        'Q33_B_Part_3',\n                        'Q33_B_Part_4',\n                        'Q33_B_Part_5',\n                        'Q33_B_Part_6',\n                        'Q33_B_Part_7',\n                        'Q33_B_OTHER']\n\nq34a_list_of_columns_2020 = ['Q34_A_Part_1',\n                        'Q34_A_Part_2',\n                        'Q34_A_Part_3',\n                        'Q34_A_Part_4',\n                        'Q34_A_Part_5',\n                        'Q34_A_Part_6',\n                        'Q34_A_Part_7',\n                        'Q34_A_Part_8',\n                        'Q34_A_Part_9',\n                        'Q34_A_Part_10',\n                        'Q34_A_Part_11',\n                        'Q34_A_OTHER']\n\nq34b_list_of_columns_2020 = ['Q34_B_Part_1',\n                        'Q34_B_Part_2',\n                        'Q34_B_Part_3',\n                        'Q34_B_Part_4',\n                        'Q34_B_Part_5',\n                        'Q34_B_Part_6',\n                        'Q34_B_Part_7',\n                        'Q34_B_Part_8',\n                        'Q34_B_Part_9',\n                        'Q34_B_Part_10',\n                        'Q34_B_Part_11',\n                        'Q34_B_OTHER']\n\n\nq35a_list_of_columns_2020 = ['Q35_A_Part_1',\n                        'Q35_A_Part_2',\n                        'Q35_A_Part_3',\n                        'Q35_A_Part_4',\n                        'Q35_A_Part_5',\n                        'Q35_A_Part_6',\n                        'Q35_A_Part_7',\n                        'Q35_A_Part_8',\n                        'Q35_A_Part_9',\n                        'Q35_A_Part_10',\n                        'Q35_A_OTHER']\n\nq35b_list_of_columns_2020 = ['Q35_B_Part_1',\n                        'Q35_B_Part_2',\n                        'Q35_B_Part_3',\n                        'Q35_B_Part_4',\n                        'Q35_B_Part_5',\n                        'Q35_B_Part_6',\n                        'Q35_B_Part_7',\n                        'Q35_B_Part_8',\n                        'Q35_B_Part_9',\n                        'Q35_B_Part_10',\n                        'Q35_B_OTHER']\n\nq36_list_of_columns_2020 = ['Q36_Part_1',\n                       'Q36_Part_2',\n                       'Q36_Part_3',\n                       'Q36_Part_4',\n                       'Q36_Part_5',\n                       'Q36_Part_6',\n                       'Q36_Part_7',\n                       'Q36_Part_8',\n                       'Q36_Part_9',\n                       'Q36_OTHER']\n\nq37_list_of_columns_2020 = ['Q37_Part_1',\n                       'Q37_Part_2',\n                       'Q37_Part_3',\n                       'Q37_Part_4',\n                       'Q37_Part_5',\n                       'Q37_Part_6',\n                       'Q37_Part_7',\n                       'Q37_Part_8',\n                       'Q37_Part_9',\n                       'Q37_Part_10',\n                       'Q37_Part_11',\n                       'Q37_OTHER']\n\nq39_list_of_columns_2020 = ['Q39_Part_1',\n                       'Q39_Part_2',\n                       'Q39_Part_3',\n                       'Q39_Part_4',\n                       'Q39_Part_5',\n                       'Q39_Part_6',\n                       'Q39_Part_7',\n                       'Q39_Part_8',\n                       'Q39_Part_9',\n                       'Q39_Part_10',\n                       'Q39_Part_11',\n                       'Q39_OTHER']\n\n# Questions where respondents can select more than one answer choice have been split into multiple columns.\n# These lists delineate every sub-column for every multiple-column question.\n\nq7_list_of_columns_2021 = ['Q7_Part_1',\n                      'Q7_Part_2',\n                      'Q7_Part_3',\n                      'Q7_Part_4',\n                      'Q7_Part_5',\n                      'Q7_Part_6',\n                      'Q7_Part_7',\n                      'Q7_Part_8',\n                      'Q7_Part_9',\n                      'Q7_Part_10',\n                      'Q7_Part_11',\n                      'Q7_Part_12',\n                      'Q7_OTHER']\n\nq9_list_of_columns_2021 = ['Q9_Part_1',\n                      'Q9_Part_2',\n                      'Q9_Part_3',\n                      'Q9_Part_4',\n                      'Q9_Part_5',\n                      'Q9_Part_6',\n                      'Q9_Part_7',\n                      'Q9_Part_8',\n                      'Q9_Part_9',\n                      'Q9_Part_10',\n                      'Q9_Part_11',\n                      'Q9_Part_12',\n                      'Q9_OTHER']\n\nq10_list_of_columns_2021 = ['Q10_Part_1',\n                       'Q10_Part_2',\n                       'Q10_Part_3',\n                       'Q10_Part_4',\n                       'Q10_Part_5',\n                       'Q10_Part_6',\n                       'Q10_Part_7',\n                       'Q10_Part_8',\n                       'Q10_Part_9',\n                       'Q10_Part_10',\n                       'Q10_Part_11',\n                       'Q10_Part_12',\n                       'Q10_Part_13',\n                       'Q10_Part_14',\n                       'Q10_Part_15',\n                       'Q10_Part_16',\n                       'Q10_OTHER']\n\nq12_list_of_columns_2021 = ['Q12_Part_1',\n                            'Q12_Part_2',\n                            'Q12_Part_3',\n                            'Q12_Part_4',\n                            'Q12_Part_5',\n                            'Q12_OTHER']\n\nq14_list_of_columns_2021 = ['Q14_Part_1',\n                            'Q14_Part_2',\n                            'Q14_Part_3',\n                            'Q14_Part_4',\n                            'Q14_Part_5',\n                            'Q14_Part_6',\n                            'Q14_Part_7',\n                            'Q14_Part_8',\n                            'Q14_Part_9',\n                            'Q14_Part_10',\n                            'Q14_Part_11',\n                            'Q14_OTHER']\n\nq16_list_of_columns_2021 = ['Q16_Part_1',\n                       'Q16_Part_2',\n                       'Q16_Part_3',\n                       'Q16_Part_4',\n                       'Q16_Part_5',\n                       'Q16_Part_6',\n                       'Q16_Part_7',\n                       'Q16_Part_8',\n                       'Q16_Part_9',\n                       'Q16_Part_10',\n                       'Q16_Part_11',\n                       'Q16_Part_12',\n                       'Q16_Part_13',\n                       'Q16_Part_14',\n                       'Q16_Part_15',\n                       'Q16_Part_16',\n                       'Q16_Part_17',\n                       'Q16_OTHER']\n\nq17_list_of_columns_2021 = ['Q17_Part_1',\n                       'Q17_Part_2',\n                       'Q17_Part_3',\n                       'Q17_Part_4',\n                       'Q17_Part_5',\n                       'Q17_Part_6',\n                       'Q17_Part_7',\n                       'Q17_Part_8',\n                       'Q17_Part_9',\n                       'Q17_Part_10',\n                       'Q17_Part_11',\n                       'Q17_OTHER']\n\nq18_list_of_columns_2021 = ['Q18_Part_1',\n                       'Q18_Part_2',\n                       'Q18_Part_3',\n                       'Q18_Part_4',\n                       'Q18_Part_5',\n                       'Q18_Part_6',\n                       'Q18_OTHER']\n\nq19_list_of_columns_2021 = ['Q19_Part_1',\n                       'Q19_Part_2',\n                       'Q19_Part_3',\n                       'Q19_Part_4',\n                       'Q19_Part_5',\n                       'Q19_OTHER']\n\nq24_list_of_columns_2021 = ['Q24_Part_1',\n                       'Q24_Part_2',\n                       'Q24_Part_3',\n                       'Q24_Part_4',\n                       'Q24_Part_5',\n                       'Q24_Part_6',\n                       'Q24_Part_7',\n                       'Q24_OTHER']\n\nq27a_list_of_columns_2021 = ['Q27_A_Part_1',\n                        'Q27_A_Part_2',\n                        'Q27_A_Part_3',\n                        'Q27_A_Part_4',\n                        'Q27_A_Part_5',\n                        'Q27_A_Part_6',\n                        'Q27_A_Part_7',\n                        'Q27_A_Part_8',\n                        'Q27_A_Part_9',\n                        'Q27_A_Part_10',\n                        'Q27_A_Part_11',\n                        'Q27_A_OTHER']\n\nq27b_list_of_columns_2021 = ['Q27_B_Part_1',\n                        'Q27_B_Part_2',\n                        'Q27_B_Part_3',\n                        'Q27_B_Part_4',\n                        'Q27_B_Part_5',\n                        'Q27_B_Part_6',\n                        'Q27_B_Part_7',\n                        'Q27_B_Part_8',\n                        'Q27_B_Part_9',\n                        'Q27_B_Part_10',\n                        'Q27_B_Part_11',\n                        'Q27_B_OTHER']\n\nq29a_list_of_columns_2021 = ['Q29_A_Part_1',\n                        'Q29_A_Part_2',\n                        'Q29_A_Part_3',\n                        'Q29_A_Part_4',\n                        'Q29_A_OTHER']\n\nq29b_list_of_columns_2021 = ['Q29_B_Part_1',\n                             'Q29_B_Part_2',\n                             'Q29_B_Part_3',\n                             'Q29_B_Part_4',\n                             'Q29_B_OTHER']\n\nq30a_list_of_columns_2021 = ['Q30_A_Part_1',\n                        'Q30_A_Part_2',\n                        'Q30_A_Part_3',\n                        'Q30_A_Part_4',\n                        'Q30_A_Part_5',\n                        'Q30_A_Part_6',\n                        'Q30_A_Part_7',\n                        'Q30_A_OTHER']\n\nq30b_list_of_columns_2021 = ['Q30_B_Part_1',\n                        'Q30_B_Part_2',\n                        'Q30_B_Part_3',\n                        'Q30_B_Part_4',\n                        'Q30_B_Part_5',\n                        'Q30_B_Part_6',\n                        'Q30_B_Part_7',\n                        'Q30_B_OTHER']\n\nq31a_list_of_columns_2021 = ['Q31_A_Part_1',\n                        'Q31_A_Part_2',\n                        'Q31_A_Part_3',\n                        'Q31_A_Part_4',\n                        'Q31_A_Part_5',\n                        'Q31_A_Part_6',\n                        'Q31_A_Part_7',\n                        'Q31_A_Part_8',\n                        'Q31_A_Part_9',\n                        'Q31_A_OTHER']\n\nq31b_list_of_columns_2021 = ['Q31_B_Part_1',\n                        'Q31_B_Part_2',\n                        'Q31_B_Part_3',\n                        'Q31_B_Part_4',\n                        'Q31_B_Part_5',\n                        'Q31_B_Part_6',\n                        'Q31_B_Part_7',\n                        'Q31_B_Part_8',\n                        'Q31_B_Part_9',\n                        'Q31_B_OTHER']\n\nq32a_list_of_columns_2021 = ['Q32_A_Part_1',\n                        'Q32_A_Part_2',\n                        'Q32_A_Part_3',\n                        'Q32_A_Part_4',\n                        'Q32_A_Part_5',\n                        'Q32_A_Part_6',\n                        'Q32_A_Part_7',\n                        'Q32_A_Part_8',\n                        'Q32_A_Part_9',\n                        'Q32_A_Part_10',\n                        'Q32_A_Part_11',\n                        'Q32_A_Part_12',\n                        'Q32_A_Part_13',\n                        'Q32_A_Part_14',\n                        'Q32_A_Part_15',\n                        'Q32_A_Part_16',\n                        'Q32_A_Part_17',\n                        'Q32_A_Part_18',\n                        'Q32_A_Part_19',\n                        'Q32_A_Part_20',\n                        'Q32_A_OTHER']\n\nq32b_list_of_columns_2021 = ['Q32_B_Part_1',\n                        'Q32_B_Part_2',\n                        'Q32_B_Part_3',\n                        'Q32_B_Part_4',\n                        'Q32_B_Part_5',\n                        'Q32_B_Part_6',\n                        'Q32_B_Part_7',\n                        'Q32_B_Part_8',\n                        'Q32_B_Part_9',\n                        'Q32_B_Part_10',\n                        'Q32_B_Part_11',\n                        'Q32_B_Part_12',\n                        'Q32_B_Part_13',\n                        'Q32_B_Part_14',\n                        'Q32_B_Part_15',\n                        'Q32_B_Part_16',\n                        'Q32_B_Part_17',\n                        'Q32_B_Part_18',\n                        'Q32_B_Part_19',\n                        'Q32_B_Part_20',\n                        'Q32_B_OTHER']\n\nq34a_list_of_columns_2021 = ['Q34_A_Part_1',\n                        'Q34_A_Part_2',\n                        'Q34_A_Part_3',\n                        'Q34_A_Part_4',\n                        'Q34_A_Part_5',\n                        'Q34_A_Part_6',\n                        'Q34_A_Part_7',\n                        'Q34_A_Part_8',\n                        'Q34_A_Part_9',\n                        'Q34_A_Part_10',\n                        'Q34_A_Part_11',\n                        'Q34_A_Part_12',\n                        'Q34_A_Part_13',\n                        'Q34_A_Part_14',\n                        'Q34_A_Part_15',\n                        'Q34_A_Part_16',\n                        'Q34_A_OTHER']\n\nq34b_list_of_columns_2021 = ['Q34_B_Part_1',\n                        'Q34_B_Part_2',\n                        'Q34_B_Part_3',\n                        'Q34_B_Part_4',\n                        'Q34_B_Part_5',\n                        'Q34_B_Part_6',\n                        'Q34_B_Part_7',\n                        'Q34_B_Part_8',\n                        'Q34_B_Part_9',\n                        'Q34_B_Part_10',\n                        'Q34_B_Part_11',\n                        'Q34_B_Part_12',\n                        'Q34_B_Part_13',\n                        'Q34_B_Part_14',\n                        'Q34_B_Part_15',\n                        'Q34_B_Part_16',\n                        'Q34_B_OTHER']\n\nq36a_list_of_columns_2021 = ['Q36_A_Part_1',\n                        'Q36_A_Part_2',\n                        'Q36_A_Part_3',\n                        'Q36_A_Part_4',\n                        'Q36_A_Part_5',\n                        'Q36_A_Part_6',\n                        'Q36_A_Part_7',\n                        'Q36_A_OTHER']\n\nq36b_list_of_columns_2021 = ['Q36_B_Part_1',\n                        'Q36_B_Part_2',\n                        'Q36_B_Part_3',\n                        'Q36_B_Part_4',\n                        'Q36_B_Part_5',\n                        'Q36_B_Part_6',\n                        'Q36_B_Part_7',\n                        'Q36_B_OTHER']\n\n\nq37a_list_of_columns_2021 = ['Q37_A_Part_1',\n                        'Q37_A_Part_2',\n                        'Q37_A_Part_3',\n                        'Q37_A_Part_4',\n                        'Q37_A_Part_5',\n                        'Q37_A_Part_6',\n                        'Q37_A_Part_7',\n                        'Q37_A_OTHER']\n\nq37b_list_of_columns_2021 = ['Q37_B_Part_1',\n                        'Q37_B_Part_2',\n                        'Q37_B_Part_3',\n                        'Q37_B_Part_4',\n                        'Q37_B_Part_5',\n                        'Q37_B_Part_6',\n                        'Q37_B_Part_7',\n                        'Q37_B_OTHER']\n\nq38a_list_of_columns_2021 = ['Q38_A_Part_1',\n                       'Q38_A_Part_2',\n                       'Q38_A_Part_3',\n                       'Q38_A_Part_4',\n                       'Q38_A_Part_5',\n                       'Q38_A_Part_6',\n                       'Q38_A_Part_7',\n                       'Q38_A_Part_8',\n                       'Q38_A_Part_9',\n                       'Q38_A_Part_10',\n                       'Q38_A_Part_11',\n                       'Q38_A_OTHER']\n\nq38b_list_of_columns_2021 = ['Q38_B_Part_1',\n                       'Q38_B_Part_2',\n                       'Q38_B_Part_3',\n                       'Q38_B_Part_4',\n                       'Q38_B_Part_5',\n                       'Q38_B_Part_6',\n                       'Q38_B_Part_7',\n                       'Q38_B_Part_8',\n                       'Q38_B_Part_9',\n                       'Q38_B_Part_10',\n                       'Q38_B_Part_11',\n                       'Q38_A_OTHER']\n\nq39_list_of_columns_2021 = ['Q37_Part_1',\n                       'Q37_Part_2',\n                       'Q37_Part_3',\n                       'Q37_Part_4',\n                       'Q37_Part_5',\n                       'Q37_Part_6',\n                       'Q37_Part_7',\n                       'Q37_Part_8',\n                       'Q37_Part_9',\n                       'Q37_OTHER']\n\nq39_list_of_columns_2021 = ['Q39_Part_1',\n                       'Q39_Part_2',\n                       'Q39_Part_3',\n                       'Q39_Part_4',\n                       'Q39_Part_5',\n                       'Q39_Part_6',\n                       'Q39_Part_7',\n                       'Q39_Part_8',\n                       'Q39_Part_9',\n                       'Q39_OTHER']\n\nq40_list_of_columns_2021 = ['Q40_Part_1',\n                       'Q40_Part_2',\n                       'Q40_Part_3',\n                       'Q40_Part_4',\n                       'Q40_Part_5',\n                       'Q40_Part_6',\n                       'Q40_Part_7',\n                       'Q40_Part_8',\n                       'Q40_Part_9',\n                       'Q40_Part_10',\n                       'Q40_Part_11',\n                       'Q40_OTHER']\n\nq42_list_of_columns_2021 = ['Q42_Part_1',\n                       'Q42_Part_2',\n                       'Q42_Part_3',\n                       'Q42_Part_4',\n                       'Q42_Part_5',\n                       'Q42_Part_6',\n                       'Q42_Part_7',\n                       'Q42_Part_8',\n                       'Q42_Part_9',\n                       'Q42_Part_10',\n                       'Q42_Part_11',\n                       'Q39_OTHER']","b0da9a2c":"#FILTER TO GET ONLY USA OR INIDA\nfilt_usa_21=responses_df_2021['Q3']=='United States of America'\nfilt_usa_20=responses_df_2020['Q3']=='United States of America'\nfilt_usa_19=responses_df_2019['Q3']=='United States of America'\nfilt_usa_18=responses_df_2018['Q3']=='United States of America'\n\nfilt_i_21=responses_df_2021['Q3']=='India'\nfilt_i_20=responses_df_2020['Q3']=='India'\nfilt_i_19=responses_df_2019['Q3']=='India'\nfilt_i_18=responses_df_2018['Q3']=='India'\n\n\n#FILTER TO GET ONLY STUDENTS IN USA OR STUDENTS IN INDIA\nfilt_usa_stud_21= (responses_df_2021['Q3']=='United States of America')  & (responses_df_2021['Q5']=='Student')\nfilt_usa_stud_20= (responses_df_2020['Q3']=='United States of America')  & (responses_df_2020['Q5']=='Student')\nfilt_usa_stud_19= (responses_df_2019['Q3']=='United States of America')  & (responses_df_2019['Q5']=='Student')\nfilt_usa_stud_18= (responses_df_2018['Q3']=='United States of America')  & (responses_df_2019['Q7']=='I am a student')\n\nfilt_i_stud_21 = (responses_df_2021['Q3']=='India') & (responses_df_2021['Q5']=='Student')\nfilt_i_stud_20 = (responses_df_2020['Q3']=='India') & (responses_df_2020['Q5']=='Student')\nfilt_i_stud_19 = (responses_df_2019['Q3']=='India') & (responses_df_2019['Q5']=='Student')\nfilt_i_stud_18 = (responses_df_2019['Q3']=='India') & (responses_df_2019['Q7']=='I am a student')\n\n#fILTERS TO GET CLOUD PLATFORM USERS AS A GROUP, GOOGLE , AWS AND ASSURE\n\nfilt_awa_21=responses_df_2021['Q27_A_Part_1']=='Amazon Web Services (AWS)'\nfilt_assure_21=responses_df_2021['Q27_A_Part_2']=='Microsoft Azure'\n","c5c36ad8":"def sort_dictionary_by_percent(dataframe,list_of_columns_for_a_single_question,dictionary_of_counts_for_a_single_question): \n    ''' \n    A helper function that can be used to sort a dictionary.   \n    It is an adaptation of a similar function\n    from https:\/\/www.kaggle.com\/sonmou\/what-topics-from-where-to-learn-data-science.\n    '''\n    dictionary = count_then_return_percent_for_multiple_column_questions(dataframe,\n                                                                list_of_columns_for_a_single_question,\n                                                                dictionary_of_counts_for_a_single_question)\n    dictionary = {v:k    for(k,v) in dictionary.items()}\n    list_tuples = sorted(dictionary.items(), reverse=False) \n    dictionary = {v:k for (k,v) in list_tuples}   \n    return dictionary","8bd6ec11":"responses_df_2021_backup = responses_df_2021.copy()\nresponses_df_2017['Country'].replace(['United States'], 'United States of America',inplace=True)\nresponses_df_2017['Country'].replace([\"People 's Republic of China\"], 'China',inplace=True)\nresponses_df_2017['Country'].replace([\"United Kingdom\"], 'United Kingdom of Great Britain and Northern Ireland',inplace=True)\n\nsubset_of_countries = ['India',\n                       'United States of America',\n                       'Brazil',\n                       'Russia',\n                       'United Kingdom of Great Britain and Northern Ireland',\n                       'France',\n                       'Nigeria',\n                       'Turkey',\n                       'Pakistan',\n                       'Japan']\n\nresponses_df_2017.Country[~responses_df_2017.Country.isin(subset_of_countries)] = \"Other\"\nresponses_df_2018.Q3[~responses_df_2018.Q3.isin(subset_of_countries)] = \"Other\"\nresponses_df_2019.Q3[~responses_df_2019.Q3.isin(subset_of_countries)] = \"Other\"\nresponses_df_2020.Q3[~responses_df_2020.Q3.isin(subset_of_countries)] = \"Other\"\nresponses_df_2021.Q3[~responses_df_2021.Q3.isin(subset_of_countries)] = \"Other\"\n\nsorted_percentages_2017 = count_then_return_percent(responses_df_2017,'Country').iloc[::-1]\nsorted_percentages_2018 = count_then_return_percent(responses_df_2018,'Q3').iloc[::-1]\nsorted_percentages_2019 = count_then_return_percent(responses_df_2019,'Q3').iloc[::-1]\nsorted_percentages_2020 = count_then_return_percent(responses_df_2020,'Q3').iloc[::-1]\nsorted_percentages_2021 = count_then_return_percent(responses_df_2021,'Q3').iloc[::-1]\n\ntitle_for_chart = 'Most Common Nationalities on Kaggle from 2017 to 2021'\ntitle_for_y_axis = '% of respondents'\n\nfig = go.Figure(data=[\n    go.Bar(name='2017 Kaggle Survey', x=pd.Series(sorted_percentages_2017.index), y=pd.Series(sorted_percentages_2017)),\n    go.Bar(name='2018 Kaggle Survey', x=pd.Series(sorted_percentages_2018.index), y=pd.Series(sorted_percentages_2018)),\n    go.Bar(name='2019 Kaggle Survey', x=pd.Series(sorted_percentages_2019.index), y=pd.Series(sorted_percentages_2019)),\n    go.Bar(name='2020 Kaggle Survey', x=pd.Series(sorted_percentages_2020.index), y=pd.Series(sorted_percentages_2020)),\n    go.Bar(name='2021 Kaggle Survey', x=pd.Series(sorted_percentages_2021.index), y=pd.Series(sorted_percentages_2021))\n           ])\nfig.update_layout(barmode='group') \nfig.update_layout(title=title_for_chart,yaxis=dict(title=title_for_y_axis))\nfig.show()\nresponses_df_2021 = responses_df_2021_backup.copy()","6aea8381":"df=responses_df_2021\ntop10_countries = responses_df_2021['Q3'].value_counts(normalize=True, ascending=False) #Count the number of countries and express it as a fraction\ntop10_countries = top10_countries.drop([\"Other\"], axis=0) #drop \"Other\"\ntop10_countries = top10_countries.mul(100) #multiply the values by 100 (i.e. percentage)\ntop10_countries = top10_countries.rename(\"percentage (%)\").reset_index()\ntop10_countries = top10_countries.rename(columns={\"index\":\"country\"})\ntop10_countries = top10_countries.head(10).round(decimals=1)\n\n\n\ntop10_countries[\"color\"] = \"blue\" #color the others gold\ntop10_countries.loc[top10_countries[\"country\"] == \"India\", [\"color\"]] = \"gold\" #color Nigeria green\ntop10_countries.loc[top10_countries[\"country\"] == \"United States of America\", [\"color\"]] = \"gold\" #color Nigeria green\n\nfig = px.bar(top10_countries, x=\"country\", y=\"percentage (%)\", text='percentage (%)', \n             title=\"Top 10 countries with the most Kagglers\")\nfig.update_traces(texttemplate='%{text:.2s}', textposition='outside', marker_color=top10_countries.color) \nfig.update_layout(uniformtext_minsize=8, uniformtext_mode='hide', plot_bgcolor = \"white\")\n\nfig.show()","efed752a":"responses_df_2021_backup = responses_df_2021.copy()\n\n\n####### BELOW THE CODE FOR USA\n\n\nresponses_df_2021_backup = responses_df_2021.copy()\n\nfilt_usa_21=responses_df_2021['Q3']=='United States of America'\nfilt_usa_20=responses_df_2020['Q3']=='United States of America'\nfilt_usa_19=responses_df_2019['Q3']=='United States of America'\nfilt_usa_18=responses_df_2018['Q3']=='United States of America'\n\nsubset_of_job_titles = ['Data Scientist','Student','Data Analyst','Business Analyst','Data Engineer','Software Engineer','Research Scientist']\n#responses_df_2017.CurrentJobTitleSelect[~responses_df_2017.CurrentJobTitleSelect.isin(subset_of_job_titles)] = \"Other\"\nresponses_df_2018.Q6[~responses_df_2018.Q6.isin(subset_of_job_titles)] = \"Other\"\nresponses_df_2019.Q5[~responses_df_2019.Q5.isin(subset_of_job_titles)] = \"Other\"\nresponses_df_2020.Q5[~responses_df_2020.Q5.isin(subset_of_job_titles)] = \"Other\"\nresponses_df_2021.Q5[~responses_df_2021.Q5.isin(subset_of_job_titles)] = \"Other\"\n\n#sorted_percentages_2017 = count_then_return_percent(responses_df_2017,'CurrentJobTitleSelect').iloc[::-1]\nsorted_percentages_2018 = responses_df_2018['Q6'].loc[filt_usa_18].value_counts()\nsorted_percentages_2019 = responses_df_2019['Q5'].loc[filt_usa_19].value_counts()\nsorted_percentages_2020 = responses_df_2020['Q5'].loc[filt_usa_20].value_counts()\nsorted_percentages_2021 = responses_df_2021['Q5'].loc[filt_usa_21].value_counts()\n\ntitle_for_chart = 'Most Common Job Titles on Kaggle from 2018 to 2021 (USA)'\ntitle_for_y_axis = '% of respondents'\n\nfig = go.Figure(data=[\n    #go.Bar(name='2017 Kaggle Survey', x=pd.Series(sorted_percentages_2017.index), y=pd.Series(sorted_percentages_2017)),\n    go.Bar(name='2018 Kaggle Survey', x=pd.Series(sorted_percentages_2018.index), y=pd.Series(sorted_percentages_2018)),\n    go.Bar(name='2019 Kaggle Survey', x=pd.Series(sorted_percentages_2019.index), y=pd.Series(sorted_percentages_2019)),\n    go.Bar(name='2020 Kaggle Survey', x=pd.Series(sorted_percentages_2020.index), y=pd.Series(sorted_percentages_2020)),\n    go.Bar(name='2021 Kaggle Survey', x=pd.Series(sorted_percentages_2021.index), y=pd.Series(sorted_percentages_2021))\n           ])\nfig.update_layout(barmode='group') \nfig.update_layout(title=title_for_chart,yaxis=dict(title=title_for_y_axis))\nfig.show()\n\nresponses_df_2021 = responses_df_2021_backup.copy()\n\n###########################################################   BELOW CODE FOR INIDA  ################################################################################\n\nfilt_i_21=responses_df_2021['Q3']=='India'\nfilt_i_20=responses_df_2020['Q3']=='India'\nfilt_i_19=responses_df_2019['Q3']=='India'\nfilt_i_18=responses_df_2018['Q3']=='India'\n\nsubset_of_job_titles = ['Data Scientist','Student','Data Analyst','Business Analyst','Data Engineer','Software Engineer','Research Scientist']\n#responses_df_2017.CurrentJobTitleSelect[~responses_df_2017.CurrentJobTitleSelect.isin(subset_of_job_titles)] = \"Other\"\nresponses_df_2018.Q6[~responses_df_2018.Q6.isin(subset_of_job_titles)] = \"Other\"\nresponses_df_2019.Q5[~responses_df_2019.Q5.isin(subset_of_job_titles)] = \"Other\"\nresponses_df_2020.Q5[~responses_df_2020.Q5.isin(subset_of_job_titles)] = \"Other\"\nresponses_df_2021.Q5[~responses_df_2021.Q5.isin(subset_of_job_titles)] = \"Other\"\n\n#sorted_percentages_2017 = count_then_return_percent(responses_df_2017,'CurrentJobTitleSelect').iloc[::-1]\nsorted_percentages_2018 = responses_df_2018['Q6'].loc[filt_i_18].value_counts()\nsorted_percentages_2019 = responses_df_2019['Q5'].loc[filt_i_19].value_counts()\nsorted_percentages_2020 = responses_df_2020['Q5'].loc[filt_i_20].value_counts()\nsorted_percentages_2021 = responses_df_2021['Q5'].loc[filt_i_21].value_counts()\n\ntitle_for_chart = 'Most Common Job Titles on Kaggle from 2018 to 2021 (INDIA)'\ntitle_for_y_axis = '% of respondents'\nfig = go.Figure(data=[\n    #go.Bar(name='2017 Kaggle Survey', x=pd.Series(sorted_percentages_2017.index), y=pd.Series(sorted_percentages_2017)),\n    go.Bar(name='2018 Kaggle Survey', x=pd.Series(sorted_percentages_2018.index), y=pd.Series(sorted_percentages_2018)),\n    go.Bar(name='2019 Kaggle Survey', x=pd.Series(sorted_percentages_2019.index), y=pd.Series(sorted_percentages_2019)),\n    go.Bar(name='2020 Kaggle Survey', x=pd.Series(sorted_percentages_2020.index), y=pd.Series(sorted_percentages_2020)),\n    go.Bar(name='2021 Kaggle Survey', x=pd.Series(sorted_percentages_2021.index), y=pd.Series(sorted_percentages_2021))\n           ])\nfig.update_layout(barmode='group') \nfig.update_layout(title=title_for_chart,yaxis=dict(title=title_for_y_axis))\nfig.show()\n\nresponses_df_2021 = responses_df_2021_backup.copy()\n","194efcb3":"responses_df_2021_backup = responses_df_2021.copy()\n\n\n####### BELOW THE CODE FOR USA\n\n\nresponses_df_2021_backup = responses_df_2021.copy()\n\nfilt_usa_21=responses_df_2021['Q3']=='United States of America'\nfilt_usa_20=responses_df_2020['Q3']=='United States of America'\nfilt_usa_19=responses_df_2019['Q3']=='United States of America'\nfilt_usa_18=responses_df_2018['Q3']=='United States of America'\n\nsubset_of_job_titles = ['Data Scientist','Student','Data Analyst','Business Analyst','Data Engineer','Software Engineer','Research Scientist']\n#responses_df_2017.CurrentJobTitleSelect[~responses_df_2017.CurrentJobTitleSelect.isin(subset_of_job_titles)] = \"Other\"\nresponses_df_2018.Q6[~responses_df_2018.Q6.isin(subset_of_job_titles)] = \"Other\"\nresponses_df_2019.Q5[~responses_df_2019.Q5.isin(subset_of_job_titles)] = \"Other\"\nresponses_df_2020.Q5[~responses_df_2020.Q5.isin(subset_of_job_titles)] = \"Other\"\nresponses_df_2021.Q5[~responses_df_2021.Q5.isin(subset_of_job_titles)] = \"Other\"\n\n#sorted_percentages_2017 = count_then_return_percent(responses_df_2017,'CurrentJobTitleSelect').iloc[::-1]\nsorted_percentages_2018 = responses_df_2018['Q6'].loc[filt_usa_18].value_counts()\nsorted_percentages_2019 = responses_df_2019['Q5'].loc[filt_usa_19].value_counts()\nsorted_percentages_2020 = responses_df_2020['Q5'].loc[filt_usa_20].value_counts()\nsorted_percentages_2021 = responses_df_2021['Q5'].loc[filt_usa_21].value_counts()\n\ntitle_for_chart = 'Most Common Job Titles on Kaggle from 2018 to 2021 (USA)'\ntitle_for_y_axis = '% of respondents'\n\nfig = go.Figure(data=[\n    #go.Bar(name='2017 Kaggle Survey', x=pd.Series(sorted_percentages_2017.index), y=pd.Series(sorted_percentages_2017)),\n    go.Bar(name='2018 Kaggle Survey', x=pd.Series(sorted_percentages_2018.index), y=pd.Series(sorted_percentages_2018)),\n    go.Bar(name='2019 Kaggle Survey', x=pd.Series(sorted_percentages_2019.index), y=pd.Series(sorted_percentages_2019)),\n    go.Bar(name='2020 Kaggle Survey', x=pd.Series(sorted_percentages_2020.index), y=pd.Series(sorted_percentages_2020)),\n    go.Bar(name='2021 Kaggle Survey', x=pd.Series(sorted_percentages_2021.index), y=pd.Series(sorted_percentages_2021))\n           ])\nfig.update_layout(barmode='group') \nfig.update_layout(title=title_for_chart,yaxis=dict(title=title_for_y_axis))\nfig.show()\n\nresponses_df_2021 = responses_df_2021_backup.copy()\n\n###########################################################   BELOW CODE FOR INIDA  ################################################################################\n\nfilt_i_21=responses_df_2021['Q3']=='India'\nfilt_i_20=responses_df_2020['Q3']=='India'\nfilt_i_19=responses_df_2019['Q3']=='India'\nfilt_i_18=responses_df_2018['Q3']=='India'\n\nsubset_of_job_titles = ['Data Scientist','Student','Data Analyst','Business Analyst','Data Engineer','Software Engineer','Research Scientist']\n#responses_df_2017.CurrentJobTitleSelect[~responses_df_2017.CurrentJobTitleSelect.isin(subset_of_job_titles)] = \"Other\"\nresponses_df_2018.Q6[~responses_df_2018.Q6.isin(subset_of_job_titles)] = \"Other\"\nresponses_df_2019.Q5[~responses_df_2019.Q5.isin(subset_of_job_titles)] = \"Other\"\nresponses_df_2020.Q5[~responses_df_2020.Q5.isin(subset_of_job_titles)] = \"Other\"\nresponses_df_2021.Q5[~responses_df_2021.Q5.isin(subset_of_job_titles)] = \"Other\"\n\n#sorted_percentages_2017 = count_then_return_percent(responses_df_2017,'CurrentJobTitleSelect').iloc[::-1]\nsorted_percentages_2018 = responses_df_2018['Q6'].loc[filt_i_18].value_counts()\nsorted_percentages_2019 = responses_df_2019['Q5'].loc[filt_i_19].value_counts()\nsorted_percentages_2020 = responses_df_2020['Q5'].loc[filt_i_20].value_counts()\nsorted_percentages_2021 = responses_df_2021['Q5'].loc[filt_i_21].value_counts()\n\ntitle_for_chart = 'Most Common Job Titles on Kaggle from 2018 to 2021 (INDIA)'\ntitle_for_y_axis = '% of respondents'\nfig = go.Figure(data=[\n    #go.Bar(name='2017 Kaggle Survey', x=pd.Series(sorted_percentages_2017.index), y=pd.Series(sorted_percentages_2017)),\n    go.Bar(name='2018 Kaggle Survey', x=pd.Series(sorted_percentages_2018.index), y=pd.Series(sorted_percentages_2018)),\n    go.Bar(name='2019 Kaggle Survey', x=pd.Series(sorted_percentages_2019.index), y=pd.Series(sorted_percentages_2019)),\n    go.Bar(name='2020 Kaggle Survey', x=pd.Series(sorted_percentages_2020.index), y=pd.Series(sorted_percentages_2020)),\n    go.Bar(name='2021 Kaggle Survey', x=pd.Series(sorted_percentages_2021.index), y=pd.Series(sorted_percentages_2021))\n           ])\nfig.update_layout(barmode='group') \nfig.update_layout(title=title_for_chart,yaxis=dict(title=title_for_y_axis))\nfig.show()\n\nresponses_df_2021 = responses_df_2021_backup.copy()","9a9fa706":"question_name = 'Q22'\nresponses_in_order = ['0','1-2','3-4','5-9','10-14','15-19','20+']\nsorted_percentages = count_then_return_percent(responses_df_2021.loc[filt_usa_21],question_name)[responses_in_order]\ntitle_for_chart = 'Size of data science team (USA)'\ny_axis_title = '% of respondents'\norientation_for_chart = 'h'\n\nplotly_bar_chart(response_counts=sorted_percentages,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) \n\n###################################### BELOW INDIA ####################################################\n\nquestion_name = 'Q22'\nresponses_in_order = ['0','1-2','3-4','5-9','10-14','15-19','20+']\nsorted_percentages = count_then_return_percent(responses_df_2021.loc[filt_i_21],question_name)[responses_in_order]\ntitle_for_chart = 'Size of data science team (India)'\ny_axis_title = '% of respondents'\norientation_for_chart = 'h'\n\nplotly_bar_chart(response_counts=sorted_percentages,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) ","f855995a":"question_name = 'Q20'\nsorted_percentages = count_then_return_percent(responses_df_2021.loc[filt_usa_21],question_name)[::-1]\ntitle_for_chart = 'Industry of employment in USA'\ny_axis_title = '% of respondents'\norientation_for_chart = 'h'\n\nplotly_bar_chart_with_x_axis_limit(response_counts=sorted_percentages,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart,\n                 limit_for_axis = 30) \n\n################################### below is usa ####################################################\n\nquestion_name = 'Q20'\nsorted_percentages = count_then_return_percent(responses_df_2021.loc[filt_i_21],question_name)[::-1]\ntitle_for_chart = 'Industry of employment in India'\ny_axis_title = '% of respondents'\norientation_for_chart = 'h'\n\nplotly_bar_chart_with_x_axis_limit(response_counts=sorted_percentages,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart,\n                 limit_for_axis = 30) ","0138b9d6":"q36_list_of_columns_2018 = ['Q36_Part_1',\n                            'Q36_Part_2',\n                            'Q36_Part_3',\n                            'Q36_Part_4',\n                            'Q36_Part_5',\n                            'Q36_Part_6',\n                            'Q36_Part_7',\n                            'Q36_Part_8',\n                            'Q36_Part_9',\n                            'Q36_Part_10',\n                            'Q36_Part_11',\n                            'Q36_Part_12',\n                            'Q36_OTHER_TEXT']\n\nq13_list_of_columns_2019 = ['Q13_Part_1',\n                            'Q13_Part_2',\n                            'Q13_Part_3',\n                            'Q13_Part_4',\n                            'Q13_Part_5',\n                            'Q13_Part_6',\n                            'Q13_Part_7',\n                            'Q13_Part_8',\n                            'Q13_Part_9',\n                            'Q13_Part_10',\n                            'Q13_Part_11',\n                            'Q13_Part_12',\n                            'Q13_OTHER_TEXT']\nq36_dictionary_of_counts_2018_simplified = {\n    'Coursera' : (responses_df_2018['Q36_Part_2'].count()),\n    'Kaggle Learn Courses' : (responses_df_2018['Q36_Part_6'].count()),\n    'Udacity' : (responses_df_2018['Q36_Part_1'].count()),\n    'Udemy' : (responses_df_2018['Q36_Part_9'].count()),\n    'University Courses' : (responses_df_2018['Q36_Part_11'].count())\n}\n\nq13_dictionary_of_counts_2019_simplified = {\n    'Coursera' : (responses_df_2019['Q13_Part_2'].count()),\n    'Kaggle Learn Courses' : (responses_df_2019['Q13_Part_6'].count()),\n    'Udacity' : (responses_df_2019['Q13_Part_1'].count()),\n    'Udemy' : (responses_df_2019['Q13_Part_8'].count()),\n    'University Courses' : (responses_df_2019['Q13_Part_10'].count())\n}\nq37_dictionary_of_counts_2020_simplified = {\n    'Coursera' : (responses_df_2020['Q37_Part_1'].count()),\n    'Kaggle Learn Courses' : (responses_df_2020['Q37_Part_3'].count()),\n    'Udacity' : (responses_df_2020['Q37_Part_6'].count()),\n    'Udemy' : (responses_df_2020['Q37_Part_7'].count()),\n    'University Courses' : (responses_df_2020['Q37_Part_10'].count())\n}\n\nq40_dictionary_of_counts_2021_simplified = {\n    'Coursera' : (responses_df_2021['Q40_Part_1'].count()),\n    'Kaggle Learn Courses' : (responses_df_2021['Q40_Part_3'].count()),\n    'Udacity' : (responses_df_2021['Q40_Part_6'].count()),\n    'Udemy' : (responses_df_2021['Q40_Part_7'].count()),\n    'University Courses' : (responses_df_2021['Q40_Part_10'].count())\n}\n\ndictionary_of_counts_2018 = sort_dictionary_by_percent(responses_df_2018,\n                                                  q36_list_of_columns_2018,\n                                                  q36_dictionary_of_counts_2018_simplified)\ndictionary_of_counts_2019 = sort_dictionary_by_percent(responses_df_2019,\n                                                  q13_list_of_columns_2019,\n                                                  q13_dictionary_of_counts_2019_simplified)\ndictionary_of_counts_2020 = sort_dictionary_by_percent(responses_df_2020,\n                                                  q37_list_of_columns_2020,\n                                                  q37_dictionary_of_counts_2020_simplified)\ndictionary_of_counts_2021 = sort_dictionary_by_percent(responses_df_2021,\n                                                  q40_list_of_columns_2021,\n                                                  q40_dictionary_of_counts_2021_simplified)\n\ntitle_for_chart = \"Most Popular Educational Platforms from 2018-2021\"\ntitle_for_y_axis = '% of respondents'\nfig = go.Figure(data=[\n    go.Bar(name='2018 Kaggle Survey', x=pd.Series(dictionary_of_counts_2018.keys()), y=pd.Series(dictionary_of_counts_2018.values())),\n    go.Bar(name='2019 Kaggle Survey', x=pd.Series(dictionary_of_counts_2019.keys()), y=pd.Series(dictionary_of_counts_2019.values())),\n    go.Bar(name='2020 Kaggle Survey', x=pd.Series(dictionary_of_counts_2020.keys()), y=pd.Series(dictionary_of_counts_2020.values())),\n    go.Bar(name='2021 Kaggle Survey', x=pd.Series(dictionary_of_counts_2021.keys()), y=pd.Series(dictionary_of_counts_2021.values()))\n           ])\nfig.update_layout(barmode='group') \nfig.update_layout(title=title_for_chart,yaxis=dict(title=title_for_y_axis))\nfig.show()\n","5b7e3be2":"q36_list_of_columns_2018 = ['Q36_Part_1',\n                            'Q36_Part_2',\n                            'Q36_Part_3',\n                            'Q36_Part_4',\n                            'Q36_Part_5',\n                            'Q36_Part_6',\n                            'Q36_Part_7',\n                            'Q36_Part_8',\n                            'Q36_Part_9',\n                            'Q36_Part_10',\n                            'Q36_Part_11',\n                            'Q36_Part_12',\n                            'Q36_OTHER_TEXT']\nq13_list_of_columns_2019 = ['Q13_Part_1',\n                            'Q13_Part_2',\n                            'Q13_Part_3',\n                            'Q13_Part_4',\n                            'Q13_Part_5',\n                            'Q13_Part_6',\n                            'Q13_Part_7',\n                            'Q13_Part_8',\n                            'Q13_Part_9',\n                            'Q13_Part_10',\n                            'Q13_Part_11',\n                            'Q13_Part_12',\n                            'Q13_OTHER_TEXT']\n\n# q36_dictionary_of_counts_2018_simplified = {\n#     'Coursera' : (responses_df_2018['Q36_Part_2'].count()),\n#     'Kaggle Learn Courses' : (responses_df_2018['Q36_Part_6'].count()),\n#     'Udacity' : (responses_df_2018['Q36_Part_1'].count()),\n#     'Udemy' : (responses_df_2018['Q36_Part_9'].count()),\n#     'University Courses' : (responses_df_2018['Q36_Part_11'].count())\n# }\n\nq13_dictionary_of_counts_2019_simplified = {\n    'Coursera' : (responses_df_2019.loc[filt_usa_19]['Q13_Part_2'].count()),\n    'Kaggle Learn Courses' : (responses_df_2019.loc[filt_usa_19]['Q13_Part_6'].count()),\n    'Udacity' : (responses_df_2019.loc[filt_usa_19]['Q13_Part_1'].count()),\n    'Udemy' : (responses_df_2019.loc[filt_usa_19]['Q13_Part_8'].count()),\n    'University Courses' : (responses_df_2019.loc[filt_usa_19]['Q13_Part_10'].count())\n}\n\nq37_dictionary_of_counts_2020_simplified = {\n    'Coursera' : (responses_df_2020.loc[filt_usa_20]['Q37_Part_1'].count()),\n    'Kaggle Learn Courses' : (responses_df_2020.loc[filt_usa_20]['Q37_Part_3'].count()),\n    'Udacity' : (responses_df_2020.loc[filt_usa_20]['Q37_Part_6'].count()),\n    'Udemy' : (responses_df_2020.loc[filt_usa_20]['Q37_Part_7'].count()),\n    'University Courses' : (responses_df_2020.loc[filt_usa_20]['Q37_Part_10'].count())\n}\n\nq40_dictionary_of_counts_2021_simplified = {\n    'Coursera' : (responses_df_2021.loc[filt_usa_21]['Q40_Part_1'].count()),\n    'Kaggle Learn Courses' : (responses_df_2021.loc[filt_usa_21]['Q40_Part_3'].count()),\n    'Udacity' : (responses_df_2021.loc[filt_usa_21]['Q40_Part_6'].count()),\n    'Udemy' : (responses_df_2021.loc[filt_usa_21]['Q40_Part_7'].count()),\n    'University Courses' : (responses_df_2021.loc[filt_usa_21]['Q40_Part_10'].count())\n}\n\n\ndictionary_of_counts_2018 = sort_dictionary_by_percent(responses_df_2018,\n                                                  q36_list_of_columns_2018,\n                                                  q36_dictionary_of_counts_2018_simplified)\ndictionary_of_counts_2019 = sort_dictionary_by_percent(responses_df_2019,\n                                                  q13_list_of_columns_2019,\n                                                  q13_dictionary_of_counts_2019_simplified)\ndictionary_of_counts_2020 = sort_dictionary_by_percent(responses_df_2020,\n                                                  q37_list_of_columns_2020,\n                                                  q37_dictionary_of_counts_2020_simplified)\ndictionary_of_counts_2021 = sort_dictionary_by_percent(responses_df_2021,\n                                                  q40_list_of_columns_2021,\n                                                  q40_dictionary_of_counts_2021_simplified)\n\ntitle_for_chart = \" Most Popular Educational Platforms from 2018-2021 (USA)\"\ntitle_for_y_axis = '% of respondents'\nfig = go.Figure(data=[\n    go.Bar(name='2018 Kaggle Survey', x=pd.Series(dictionary_of_counts_2018.keys()), y=pd.Series(dictionary_of_counts_2018.values())),\n    go.Bar(name='2019 Kaggle Survey', x=pd.Series(dictionary_of_counts_2019.keys()), y=pd.Series(dictionary_of_counts_2019.values())),\n    go.Bar(name='2020 Kaggle Survey', x=pd.Series(dictionary_of_counts_2020.keys()), y=pd.Series(dictionary_of_counts_2020.values())),\n    go.Bar(name='2021 Kaggle Survey', x=pd.Series(dictionary_of_counts_2021.keys()), y=pd.Series(dictionary_of_counts_2021.values()))\n           ])\nfig.update_layout(barmode='group') \nfig.update_layout(title=title_for_chart,yaxis=dict(title=title_for_y_axis))\nfig.show()\n\n\n###################################################### code for india ########################################################################################\nq13_dictionary_of_counts_2019_simplified = {\n    'Coursera' : (responses_df_2019.loc[filt_i_19]['Q13_Part_2'].count()),\n    'Kaggle Learn Courses' : (responses_df_2019.loc[filt_i_19]['Q13_Part_6'].count()),\n    'Udacity' : (responses_df_2019.loc[filt_i_19]['Q13_Part_1'].count()),\n    'Udemy' : (responses_df_2019.loc[filt_i_19]['Q13_Part_8'].count()),\n    'University Courses' : (responses_df_2019.loc[filt_i_19]['Q13_Part_10'].count())\n}\n\nq37_dictionary_of_counts_2020_simplified = {\n    'Coursera' : (responses_df_2020.loc[filt_i_20]['Q37_Part_1'].count()),\n    'Kaggle Learn Courses' : (responses_df_2020.loc[filt_i_20]['Q37_Part_3'].count()),\n    'Udacity' : (responses_df_2020.loc[filt_i_20]['Q37_Part_6'].count()),\n    'Udemy' : (responses_df_2020.loc[filt_i_20]['Q37_Part_7'].count()),\n    'University Courses' : (responses_df_2020.loc[filt_i_20]['Q37_Part_10'].count())\n}\n\nq40_dictionary_of_counts_2021_simplified = {\n    'Coursera' : (responses_df_2021.loc[filt_i_21]['Q40_Part_1'].count()),\n    'Kaggle Learn Courses' : (responses_df_2021.loc[filt_i_21]['Q40_Part_3'].count()),\n    'Udacity' : (responses_df_2021.loc[filt_i_21]['Q40_Part_6'].count()),\n    'Udemy' : (responses_df_2021.loc[filt_i_21]['Q40_Part_7'].count()),\n    'University Courses' : (responses_df_2021.loc[filt_i_21]['Q40_Part_10'].count())\n}\ndictionary_of_counts_2018 = sort_dictionary_by_percent(responses_df_2018,\n                                                  q36_list_of_columns_2018,\n                                                  q36_dictionary_of_counts_2018_simplified)\ndictionary_of_counts_2019 = sort_dictionary_by_percent(responses_df_2019,\n                                                  q13_list_of_columns_2019,\n                                                  q13_dictionary_of_counts_2019_simplified)\ndictionary_of_counts_2020 = sort_dictionary_by_percent(responses_df_2020,\n                                                  q37_list_of_columns_2020,\n                                                  q37_dictionary_of_counts_2020_simplified)\ndictionary_of_counts_2021 = sort_dictionary_by_percent(responses_df_2021,\n                                                  q40_list_of_columns_2021,\n                                                  q40_dictionary_of_counts_2021_simplified)\n\ntitle_for_chart = \"Most Popular Educational Platforms from 2018-2021 (INDIA)\"\ntitle_for_y_axis = '% of respondents'\n\nfig = go.Figure(data=[\n    go.Bar(name='2018 Kaggle Survey', x=pd.Series(dictionary_of_counts_2018.keys()), y=pd.Series(dictionary_of_counts_2018.values())),\n    go.Bar(name='2019 Kaggle Survey', x=pd.Series(dictionary_of_counts_2019.keys()), y=pd.Series(dictionary_of_counts_2019.values())),\n    go.Bar(name='2020 Kaggle Survey', x=pd.Series(dictionary_of_counts_2020.keys()), y=pd.Series(dictionary_of_counts_2020.values())),\n    go.Bar(name='2021 Kaggle Survey', x=pd.Series(dictionary_of_counts_2021.keys()), y=pd.Series(dictionary_of_counts_2021.values()))\n           ])\nfig.update_layout(barmode='group') \nfig.update_layout(title=title_for_chart,yaxis=dict(title=title_for_y_axis))\nfig.show()","b9f87c96":"q14_dictionary_of_counts_2018_simplified = {\n    'Matplotlib' : (responses_df_2018['Q21_Part_2'].count()),\n    'Seaborn': (responses_df_2018['Q21_Part_8'].count()),\n    'Plotly \/ Plotly Express' : (responses_df_2018['Q21_Part_6'].count()),\n    'Ggplot \/ ggplot2' : (responses_df_2018['Q21_Part_1'].count())\n}\n\nq14_dictionary_of_counts_2019_simplified = {\n    'Matplotlib' : (responses_df_2019['Q20_Part_2'].count()),\n    'Seaborn': (responses_df_2019['Q20_Part_8'].count()),\n    'Plotly \/ Plotly Express' : (responses_df_2019['Q20_Part_6'].count()),\n    'Ggplot \/ ggplot2' : (responses_df_2019['Q20_Part_1'].count())\n}\n\nq14_dictionary_of_counts_2020_simplified = {\n    'Matplotlib' : (responses_df_2020['Q14_Part_1'].count()),\n    'Seaborn': (responses_df_2020['Q14_Part_2'].count()),\n    'Plotly \/ Plotly Express' : (responses_df_2020['Q14_Part_3'].count()),\n    'Ggplot \/ ggplot2' : (responses_df_2020['Q14_Part_4'].count())\n}\n\nq14_dictionary_of_counts_2021_simplified = {\n    'Matplotlib' : (responses_df_2021['Q14_Part_1'].count()),\n    'Seaborn': (responses_df_2021['Q14_Part_2'].count()),\n    'Plotly \/ Plotly Express' : (responses_df_2021['Q14_Part_3'].count()),\n    'Ggplot \/ ggplot2' : (responses_df_2021['Q14_Part_4'].count())\n}\n\ndictionary_of_counts_2018 = sort_dictionary_by_percent(responses_df_2018,\n                                                  q14_list_of_columns_2018,\n                                                  q14_dictionary_of_counts_2018_simplified)\ndictionary_of_counts_2019 = sort_dictionary_by_percent(responses_df_2019,\n                                                  q14_list_of_columns_2019,\n                                                  q14_dictionary_of_counts_2019_simplified)\ndictionary_of_counts_2020 = sort_dictionary_by_percent(responses_df_2020,\n                                                  q14_list_of_columns_2020,\n                                                  q14_dictionary_of_counts_2020_simplified)\ndictionary_of_counts_2021 = sort_dictionary_by_percent(responses_df_2021,\n                                                  q14_list_of_columns_2021,\n                                                  q14_dictionary_of_counts_2021_simplified)\n\ntitle_for_chart = 'Most common data visualization tools from 2018-2021'\ntitle_for_y_axis = '% of respondents'\n\nfig = go.Figure(data=[\n    go.Bar(name='2018 Kaggle Survey', x=pd.Series(dictionary_of_counts_2018.keys()), y=pd.Series(dictionary_of_counts_2018.values())),\n    go.Bar(name='2019 Kaggle Survey', x=pd.Series(dictionary_of_counts_2019.keys()), y=pd.Series(dictionary_of_counts_2019.values())),\n    go.Bar(name='2020 Kaggle Survey', x=pd.Series(dictionary_of_counts_2020.keys()), y=pd.Series(dictionary_of_counts_2020.values())),\n    go.Bar(name='2021 Kaggle Survey', x=pd.Series(dictionary_of_counts_2021.keys()), y=pd.Series(dictionary_of_counts_2021.values()))\n           ])\nfig.update_layout(barmode='group') \nfig.update_layout(title=title_for_chart,yaxis=dict(title=title_for_y_axis))\nfig.show()","320f0adc":"responses_df_2021_backup = responses_df_2021.copy()\n\n\n####### BELOW THE CODE FOR USA\n\n\nresponses_df_2021_backup = responses_df_2021.copy()\n\nfilt_usa_21=responses_df_2021['Q3']=='United States of America'\nfilt_usa_20=responses_df_2020['Q3']=='United States of America'\nfilt_usa_19=responses_df_2019['Q3']=='United States of America'\nfilt_usa_18=responses_df_2018['Q3']=='United States of America'\n\nsubset_of_job_titles = ['Data Scientist','Student','Data Analyst','Business Analyst','Data Engineer','Software Engineer','Research Scientist']\n#responses_df_2017.CurrentJobTitleSelect[~responses_df_2017.CurrentJobTitleSelect.isin(subset_of_job_titles)] = \"Other\"\nresponses_df_2018.Q6[~responses_df_2018.Q6.isin(subset_of_job_titles)] = \"Other\"\nresponses_df_2019.Q5[~responses_df_2019.Q5.isin(subset_of_job_titles)] = \"Other\"\nresponses_df_2020.Q5[~responses_df_2020.Q5.isin(subset_of_job_titles)] = \"Other\"\nresponses_df_2021.Q5[~responses_df_2021.Q5.isin(subset_of_job_titles)] = \"Other\"\n\n#sorted_percentages_2017 = count_then_return_percent(responses_df_2017,'CurrentJobTitleSelect').iloc[::-1]\nsorted_percentages_2018 = responses_df_2018['Q6'].loc[filt_usa_18].value_counts()\nsorted_percentages_2019 = responses_df_2019['Q5'].loc[filt_usa_19].value_counts()\nsorted_percentages_2020 = responses_df_2020['Q5'].loc[filt_usa_20].value_counts()\nsorted_percentages_2021 = responses_df_2021['Q5'].loc[filt_usa_21].value_counts()\n\ntitle_for_chart = 'Most Common Job Titles on Kaggle from 2018 to 2021 (USA)'\ntitle_for_y_axis = '% of respondents'\n\nfig = go.Figure(data=[\n    #go.Bar(name='2017 Kaggle Survey', x=pd.Series(sorted_percentages_2017.index), y=pd.Series(sorted_percentages_2017)),\n    go.Bar(name='2018 Kaggle Survey', x=pd.Series(sorted_percentages_2018.index), y=pd.Series(sorted_percentages_2018)),\n    go.Bar(name='2019 Kaggle Survey', x=pd.Series(sorted_percentages_2019.index), y=pd.Series(sorted_percentages_2019)),\n    go.Bar(name='2020 Kaggle Survey', x=pd.Series(sorted_percentages_2020.index), y=pd.Series(sorted_percentages_2020)),\n    go.Bar(name='2021 Kaggle Survey', x=pd.Series(sorted_percentages_2021.index), y=pd.Series(sorted_percentages_2021))\n           ])\nfig.update_layout(barmode='group') \nfig.update_layout(title=title_for_chart,yaxis=dict(title=title_for_y_axis))\nfig.show()\n\nresponses_df_2021 = responses_df_2021_backup.copy()\n\n###########################################################   BELOW CODE FOR INIDA  ################################################################################\n\nfilt_i_21=responses_df_2021['Q3']=='India'\nfilt_i_20=responses_df_2020['Q3']=='India'\nfilt_i_19=responses_df_2019['Q3']=='India'\nfilt_i_18=responses_df_2018['Q3']=='India'\n\nsubset_of_job_titles = ['Data Scientist','Student','Data Analyst','Business Analyst','Data Engineer','Software Engineer','Research Scientist']\n#responses_df_2017.CurrentJobTitleSelect[~responses_df_2017.CurrentJobTitleSelect.isin(subset_of_job_titles)] = \"Other\"\nresponses_df_2018.Q6[~responses_df_2018.Q6.isin(subset_of_job_titles)] = \"Other\"\nresponses_df_2019.Q5[~responses_df_2019.Q5.isin(subset_of_job_titles)] = \"Other\"\nresponses_df_2020.Q5[~responses_df_2020.Q5.isin(subset_of_job_titles)] = \"Other\"\nresponses_df_2021.Q5[~responses_df_2021.Q5.isin(subset_of_job_titles)] = \"Other\"\n\n#sorted_percentages_2017 = count_then_return_percent(responses_df_2017,'CurrentJobTitleSelect').iloc[::-1]\nsorted_percentages_2018 = responses_df_2018['Q6'].loc[filt_i_18].value_counts()\nsorted_percentages_2019 = responses_df_2019['Q5'].loc[filt_i_19].value_counts()\nsorted_percentages_2020 = responses_df_2020['Q5'].loc[filt_i_20].value_counts()\nsorted_percentages_2021 = responses_df_2021['Q5'].loc[filt_i_21].value_counts()\n\ntitle_for_chart = 'Most Common Job Titles on Kaggle from 2018 to 2021 (INDIA)'\ntitle_for_y_axis = '% of respondents'\nfig = go.Figure(data=[\n    #go.Bar(name='2017 Kaggle Survey', x=pd.Series(sorted_percentages_2017.index), y=pd.Series(sorted_percentages_2017)),\n    go.Bar(name='2018 Kaggle Survey', x=pd.Series(sorted_percentages_2018.index), y=pd.Series(sorted_percentages_2018)),\n    go.Bar(name='2019 Kaggle Survey', x=pd.Series(sorted_percentages_2019.index), y=pd.Series(sorted_percentages_2019)),\n    go.Bar(name='2020 Kaggle Survey', x=pd.Series(sorted_percentages_2020.index), y=pd.Series(sorted_percentages_2020)),\n    go.Bar(name='2021 Kaggle Survey', x=pd.Series(sorted_percentages_2021.index), y=pd.Series(sorted_percentages_2021))\n           ])\nfig.update_layout(barmode='group') \nfig.update_layout(title=title_for_chart,yaxis=dict(title=title_for_y_axis))\nfig.show()\n\nresponses_df_2021 = responses_df_2021_backup.copy()\n","92489f77":"question_name = 'Q26'\nresponses_in_order = ['$0 ($USD)','$1-$99','$100-$999','$1000-$9,999','$10,000-$99,999','$100,000 or more ($USD)']\nsorted_percentages = count_then_return_percent(responses_df_2021,question_name)[responses_in_order]\ntitle_for_chart = 'Money spent on cloud computing products'\ny_axis_title = '% of respondents'\norientation_for_chart = 'h'\n\nplotly_bar_chart(response_counts=sorted_percentages,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) ","b627646d":"\nUSA_responses_df_2021 = responses_df_2021[responses_df_2021['Q3']=='United States of America'] \nquestion_name = 'Q26'\nresponses_in_order = ['$0 ($USD)','$1-$99','$100-$999','$1000-$9,999','$10,000-$99,999','$100,000 or more ($USD)']\nsorted_percentages = count_then_return_percent(USA_responses_df_2021,question_name)[responses_in_order]\ntitle_for_chart = 'Money spent on cloud computing products in the USA'\ny_axis_title = '% of respondents'\norientation_for_chart = 'h'\n\nplotly_bar_chart(response_counts=sorted_percentages,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) \n\n##########################below is the code for india################################################\n\nIndia_responses_df_2021 = responses_df_2021[responses_df_2021['Q3']=='India'] \nquestion_name = 'Q26'\nresponses_in_order = ['$0 ($USD)','$1-$99','$100-$999','$1000-$9,999','$10,000-$99,999','$100,000 or more ($USD)']\nsorted_percentages = count_then_return_percent(India_responses_df_2021,question_name)[responses_in_order]\ntitle_for_chart = 'Money spent on cloud computing products in India'\ny_axis_title = '% of respondents'\norientation_for_chart = 'h'\n\nplotly_bar_chart(response_counts=sorted_percentages,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) \n\n\n","bd163ada":"responses_df_2021_backup = responses_df_2021.copy()\nresponses_df_2019['Q11'].replace([\"$0 (USD)\"], \"$0 ($USD)\",inplace=True)\nresponses_df_2019['Q11'].replace([\"> $100,000 ($USD)\"], \"$100,000 or more ($USD)\",inplace=True)\n\nsorted_percentages_2019 = count_then_return_percent(responses_df_2019,'Q11').iloc[::-1][responses_in_order]\nsorted_percentages_2020 = count_then_return_percent(responses_df_2020,'Q25').iloc[::-1][responses_in_order]\nsorted_percentages_2021 = count_then_return_percent(responses_df_2021,'Q26').iloc[::-1][responses_in_order]\n\ntitle_for_chart = 'Money spent in the cloud from 2018 to 2021'\ntitle_for_y_axis = '% of respondents'\n\nfig = go.Figure(data=[\n    go.Bar(name='2019 Kaggle Survey', x=pd.Series(sorted_percentages_2019.index), y=pd.Series(sorted_percentages_2019)),\n    go.Bar(name='2020 Kaggle Survey', x=pd.Series(sorted_percentages_2020.index), y=pd.Series(sorted_percentages_2020)),\n    go.Bar(name='2021 Kaggle Survey', x=pd.Series(sorted_percentages_2021.index), y=pd.Series(sorted_percentages_2021))\n           ])\nfig.update_layout(barmode='group') \nfig.update_layout(title=title_for_chart,yaxis=dict(title=title_for_y_axis))\nfig.show()\n\nresponses_df_2021 = responses_df_2021_backup.copy()","c138cd54":"question_name = 'Q27-A'\ndictionary_of_counts = sort_dictionary_by_percent(responses_df_2021,\n                                                  q27a_list_of_columns_2021,\n                                                  q27a_dictionary_of_counts_2021)\ntitle_for_chart = 'Most Commonly Used Cloud Computing Platforms'\ntitle_for_y_axis = '% of respondents'\norientation_for_chart = 'h'\n  \nplotly_bar_chart(response_counts=dictionary_of_counts,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) ","02a8ead3":"\nq26a_dictionary_of_counts_2018 = {\n    'Amazon Web Services (AWS)' : (responses_df_2018['Q15_Part_2'].count()),\n    'Microsoft Azure': (responses_df_2018['Q15_Part_3'].count()),\n    'Google Cloud Platform (GCP)' : (responses_df_2018['Q15_Part_1'].count()),\n    'Alibaba Cloud' : (responses_df_2018['Q15_Part_5'].count()),\n    'None' : (responses_df_2018['Q15_Part_6'].count()),\n}\n\nq26a_dictionary_of_counts_2019 = {\n    'Amazon Web Services (AWS)' : (responses_df_2019['Q29_Part_2'].count()),\n    'Microsoft Azure': (responses_df_2019['Q29_Part_3'].count()),\n    'Google Cloud Platform (GCP)' : (responses_df_2019['Q29_Part_1'].count()),\n    'Alibaba Cloud' : (responses_df_2019['Q29_Part_5'].count()),\n    'None' : (responses_df_2019['Q29_Part_11'].count()),\n}\n\nq26a_dictionary_of_counts_2020 = {\n    'Amazon Web Services (AWS)' : (responses_df_2020['Q26_A_Part_1'].count()),\n    'Microsoft Azure': (responses_df_2020['Q26_A_Part_2'].count()),\n    'Google Cloud Platform (GCP)' : (responses_df_2020['Q26_A_Part_3'].count()),\n    'Alibaba Cloud' : (responses_df_2020['Q26_A_Part_9'].count()),\n    'None' : (responses_df_2020['Q26_A_Part_11'].count()),\n}\n\nq27a_dictionary_of_counts_2021 = {\n    'Amazon Web Services (AWS)' : (responses_df_2021['Q27_A_Part_1'].count()),\n    'Microsoft Azure': (responses_df_2021['Q27_A_Part_2'].count()),\n    'Google Cloud Platform (GCP)' : (responses_df_2021['Q27_A_Part_3'].count()),\n    'Alibaba Cloud' : (responses_df_2021['Q27_A_Part_9'].count()),\n    'None' : (responses_df_2021['Q27_A_Part_11'].count()),\n}\ndictionary_of_counts_2018 = sort_dictionary_by_percent(responses_df_2018,\n                                                  q26a_list_of_columns_2018,\n                                                  q26a_dictionary_of_counts_2018)\ndictionary_of_counts_2019 = sort_dictionary_by_percent(responses_df_2019,\n                                                  q26a_list_of_columns_2019,\n                                                  q26a_dictionary_of_counts_2019)\ndictionary_of_counts_2020 = sort_dictionary_by_percent(responses_df_2020,\n                                                  q26a_list_of_columns_2020,\n                                                  q26a_dictionary_of_counts_2020)\ndictionary_of_counts_2021 = sort_dictionary_by_percent(responses_df_2021,\n                                                  q27a_list_of_columns_2021,\n                                                  q27a_dictionary_of_counts_2021)\n\ntitle_for_chart = 'Most Popular Cloud Computing Platforms in 2018-2021'\ntitle_for_y_axis = '% of respondents'\n\nfig = go.Figure(data=[\n    go.Bar(name='2018 Kaggle Survey', x=pd.Series(dictionary_of_counts_2018.keys()), y=pd.Series(dictionary_of_counts_2018.values())),\n    go.Bar(name='2019 Kaggle Survey', x=pd.Series(dictionary_of_counts_2019.keys()), y=pd.Series(dictionary_of_counts_2019.values())),\n    go.Bar(name='2020 Kaggle Survey', x=pd.Series(dictionary_of_counts_2020.keys()), y=pd.Series(dictionary_of_counts_2020.values())),\n    go.Bar(name='2021 Kaggle Survey', x=pd.Series(dictionary_of_counts_2021.keys()), y=pd.Series(dictionary_of_counts_2021.values()))\n           ])\nfig.update_layout(barmode='group') \nfig.update_layout(title=title_for_chart,yaxis=dict(title=title_for_y_axis))\nfig.show()","37cc2e6b":"question_name = 'Q28'\nsorted_percentages = count_then_return_percent(responses_df_2021,question_name).iloc[::-1]\ntitle_for_chart = 'Best Developer Experience (for respondents that use multiple services)'\ntitle_for_y_axis = '% of respondents'\norientation_for_chart = 'h'\n  \nplotly_bar_chart_with_x_axis_limit(response_counts=sorted_percentages,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart,\n                 limit_for_axis = 40) ","5894f6b9":"question_name = 'Q29-A'\ndictionary_of_counts = sort_dictionary_by_percent(responses_df_2021,\n                                                  q29a_list_of_columns_2021,\n                                                  q29a_dictionary_of_counts_2021)\ntitle_for_chart = 'Cloud Computing Products (AWS Azure GCP customers only)'\ntitle_for_y_axis = '% of respondents'\norientation_for_chart = 'h'\n  \nplotly_bar_chart(response_counts=dictionary_of_counts,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) ","8949ec3e":"\nquestion_name = 'Q30-A'\ndictionary_of_counts = sort_dictionary_by_percent(responses_df_2021,\n                                                  q30a_list_of_columns_2021,\n                                                  q30a_dictionary_of_counts_2021)\ntitle_for_chart = 'Data Storage Products (AWS Azure GCP customers only)'\ntitle_for_y_axis = '% of respondents'\norientation_for_chart = 'h'\n  \nplotly_bar_chart(response_counts=dictionary_of_counts,\n                 title=title_for_chart,\n                 y_axis_title=title_for_y_axis,\n                 orientation=orientation_for_chart) ","c57792c7":"#  1. ONE OF THE REASON FOR THE DECLINE IN POPULARITY OF KAGGLE IN USA & SUGGESTION TO IMPROVE IT","dabfaa54":"\nFor this analysis only considered the first two countries (India and USA) , since it has the maximum number of participants, and in terms of Information Technology Culture both are on the same page.\nOne of the major reasons for the declining popularity in USA is the decline of student participation or fail to attract more students to kaggle community.","d32cc18c":"Matplotlib is the most common Data visualization tool among the Data scientists but kaggle still dont have a flash course in matplotlib.\nIncluding matplotlib in their learning platform have some chance to improve the propularity among the students and aspiring Data scientists.","2a977ea3":"### FILTERS","eb91e035":"# 2. CLOUD PLATFORMS USAGE COMPARISON INDIA AND USA","81f0cebe":"Below are the Analytics done based on the Data.\n\n1.One of the reason for the dip in popularity if Kaggle in USA since 2018\n\n    Comparisioin and suggestion to improve the popularity in USA based on the closest popular country (India).","dbe232ee":"It is vissible that the second most number (19.2%) of  professionals from India are aspiring Data Scientists (0 data scientists in their company) in compared to USA (11.1%).\nThis all points that the higher ratios of students or new learners contribute the incrase in the popularity of Kaggle in India.","32d996b7":"Ratio of aspiring Data scientist using kaggle is leas in USA compared to India whtich is 19%, so the involvement of students or aspiring scients are not get attracted to kaggle.\nThe experiened professionals might be in kaggle to participate in the competitions or sharpen their skills.\nBy analysing more we can see most popular educational platform is Coursera.The coursed conducted by the recognized Universities or well known personalities in Coursera can be a reason for the popularity of coursera against kaggle as a learning platform.\n\nEven though coursera is the most popular educationsl platform in USA and India but there is an consistant increase in depending kaggle  as an educational platform (PLOT-3) in India which is similar to the growth of kaggle popularity in India (PLOT-1).\n","ec0859ea":"From 2017 until 2021 the popularity of Kaggle is Declining in USA and in contrast in India it increased.\nStudents plays a major role in the popularity of such platforms. In case of India the massive popularity of Kaggle is due to the participatioin of StudentS.\n\n\nStudents are more dedicated than working professionals in such platforms if they get attracted.\n\nRatio of aspiring Data scientist using kaggle is less in USA(11%) compared to India whtich is 19%, It shows that new students or aspiring data scientists are not get attracted to kaggle. The tenured professionals might be in kaggle to participate in the competitions or sharpen their skills but dedicated tenured professionals are less compared to students or aspiring Data Scientists. ","37905c79":"In the field of educational platform , coursera is more popular than kaggle.\nThis might be the course afflicated or conducted by well known Universities, or the presence of well known Tutors like Andrew NG.\nKaggle should start more certified courses than simple assignment-based courses to attract more students","0a0f81ba":"# 2021 Kaggle Data Science & Machine Learning Survey"}}