{"cell_type":{"b7351b64":"code","db53b668":"code","4cc995f6":"code","5841be6c":"code","4239a31b":"code","ed78ca6a":"code","be5a5f8e":"code","0688a6fe":"code","1babf4ff":"code","595913f6":"code","f1a640f4":"code","81dc2594":"code","86b6865d":"code","592a17fe":"code","f0a854c6":"code","f58d4682":"code","18656b3d":"code","27dd6bac":"code","2d280022":"code","756dc452":"code","8d103916":"code","05824690":"code","d896bb39":"code","7e75a793":"code","9893f123":"code","970b974f":"markdown","00f9a9e5":"markdown","657c3daa":"markdown","9728deb5":"markdown","04ca551b":"markdown","1bdfb077":"markdown","685a33a8":"markdown","c4e6acbb":"markdown","d49c20c8":"markdown","cfe2ef2c":"markdown","ac809fcc":"markdown","4f123cce":"markdown","c4eb7e93":"markdown","4af105fc":"markdown","d89987cf":"markdown","d39e36d6":"markdown","4bc41624":"markdown","41271315":"markdown","8cd944c6":"markdown","edee4c37":"markdown","16db39ad":"markdown","22a22293":"markdown","6a2917d5":"markdown","7182343a":"markdown","f619ebfc":"markdown","80090df8":"markdown","aa5f7512":"markdown","2d23c7c1":"markdown","0e470406":"markdown","bbaee2ad":"markdown","9887f74b":"markdown"},"source":{"b7351b64":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\/\"))\n\n# Any results you write to the current directory are saved as output.\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.style.use('ggplot')","db53b668":"df_io = pd.read_csv('..\/input\/electricity-consumption\/train.csv', date_parser='datetime')\ndf_io.head()","4cc995f6":"df_io.describe().T","5841be6c":"df = (df_io\n      .set_index(pd.to_datetime(df_io.datetime))\n      .sort_index()\n      .rename(columns = {'var1':'dewpnt', 'var2':'peak_demand'})\n      .drop(columns = ['ID', 'datetime']))\ndf.isna().sum()","4239a31b":"fig = plt.figure(figsize=(18, 9))\nax = fig.gca()\nax.plot(df.electricity_consumption)\nax.set_title('Total City Electricity Consumption ')\nax.set_ylabel('Power (kWatt)')\nax.set_xlabel('Datetime')\nplt.show()   ## display figure plt","ed78ca6a":"_ = df['electricity_consumption'].plot.hist(figsize=(13, 7), bins=200, title='Distribution of electricity_consumption Load')\nplt.xlabel('Power (kWatt)')\nplt.show()","be5a5f8e":"# Creating new featheres from the dataset.\ndf = (df.assign(day_of_week = df.index.dayofweek,\n                year = df.index.year,\n                month = df.index.month,\n                day = df.index.day, \n                week = df.index.week,\n                week_day = df.index.weekday_name, \n                quarter = df.index.quarter,\n                hour = df.index.hour))","0688a6fe":"df.head()","1babf4ff":"_ = (df['electricity_consumption'].loc[ (df['electricity_consumption'].index >= '2016-12-01') &\n                                        (df['electricity_consumption'].index  < '2017-01-01') ] \n                                        .plot(figsize=(15, 5), title = 'December 2016'))\nplt.show()","595913f6":"# Summer consumption\n_ = (df['electricity_consumption'].loc[ (df['electricity_consumption'].index >= '2016-07-01') &\n                                        (df['electricity_consumption'].index  < '2016-08-01') ] \n                                        .plot(figsize=(15, 5), title = 'July 2016'))\nplt.show()","f1a640f4":"_ = df.pivot_table(index   = df['hour'], \n                   columns = 'week_day', \n                   values  = 'windspeed',\n                   aggfunc = 'mean').plot(figsize=(18,6),\n                   title   = 'windspeed - Daily Trends')\nplt.ylabel('Windspeed')\nplt.show()","81dc2594":"_ = df.pivot_table(index   = df['hour'], \n                   columns = 'week_day', \n                   values  = 'pressure',\n                   aggfunc = 'mean').plot(figsize=(18,6),\n                   title   = 'pressure - Daily Trends')\nplt.ylabel('Pressure')\nplt.show()","86b6865d":"_ = df.pivot_table(index   = df['hour'], \n                   columns = 'week_day', \n                   values  = 'temperature',\n                   aggfunc = 'mean').plot(figsize=(18,6),\n                   title   = 'temperature - Daily Trends')\nplt.ylabel('Temperature (Celsius)')\nplt.show()","592a17fe":"_ = df.pivot_table(index   = df['hour'], \n                   columns = 'week_day', \n                   values  = 'dewpnt',\n                   aggfunc = 'mean').plot(figsize=(18,6),\n                   title   = 'dew point - Daily Trends')\nplt.ylabel('Dew Point (Celsius)')\nplt.show()","f0a854c6":"_ = df[['electricity_consumption','hour']].plot(x = 'hour',\n                                                y ='electricity_consumption',\n                                                kind = 'scatter',\n                                                figsize = (17,6),\n                                                title = 'Consumption by Hour of Day')\nplt.ylabel('Power (kWatt)')\nplt.show()","f58d4682":"# %matplotlib notebook\n_ = df.pivot_table(index   = df['hour'], \n                   columns = 'week_day', \n                   values  = 'electricity_consumption',\n                   aggfunc = 'mean').plot(figsize=(18,6),\n                   title   = 'electricity_consumption - Daily Trends')\nplt.ylabel('Power (kWatt)')\nplt.show()","18656b3d":"fig, ax = plt.subplots(figsize=(15,5))\nsns.boxplot(df.loc[df['quarter']==1].hour, \n            df.loc[df['quarter']==1].electricity_consumption)\nax.set_title('Hourly Boxplot electricity_consumption Q1')\nplt.ylabel('Power (kWatt)')\n\nfig, ax = plt.subplots(figsize=(15,5))\nsns.boxplot(df.loc[df['quarter']==2].hour,\n            df.loc[df['quarter']==2].electricity_consumption)\nax.set_title('Hourly Boxplot electricity_consumption Q2')\nplt.ylabel('Power (kWatt)')\n\nfig, ax = plt.subplots(figsize=(15,5))\nsns.boxplot(df.loc[df['quarter']==3].hour, \n            df.loc[df['quarter']==3].electricity_consumption)\nax.set_title('Hourly Boxplot electricity_consumption Q3')\nplt.ylabel('Power (kWatt)')\n\nfig, ax = plt.subplots(figsize=(15,5))\nsns.boxplot(df.loc[df['quarter']==4].hour,\n            df.loc[df['quarter']==4].electricity_consumption)\nax.set_title('Hourly Boxplot electricity_consumption Q4')\nplt.ylabel('Power (kWatt)')\n\nplt.show()","27dd6bac":"_ = df.pivot_table(index   = df['month'], \n                   columns = 'year', \n                   values  = 'electricity_consumption',\n                   aggfunc = 'mean').plot(figsize = (18,6),\n                                          title   = 'electricity_consumption - Yearly Trends')\nplt.ylabel('Power (kWatt)')\nplt.show()\n# From july to aug we have the largest consumption.","2d280022":"fig, ax = plt.subplots(figsize=(15,5))\nsns.boxplot(df.month, \n            df.electricity_consumption)\nax.set_title('Monthly Boxplot electricity_consumption')\nplt.ylabel('Power (kWatt)')\n\nplt.show()","756dc452":"_ = df.pivot_table(index = df['month'], \n                   columns = 'year', \n                   values  = 'pressure',\n                   aggfunc = 'mean').plot(figsize = (18,6),\n                                          title   = 'pressure - Yearly Trends')\nplt.ylabel('Pressure')\nplt.show()","8d103916":"_ = df.pivot_table(index   = df['month'], \n                   columns = 'year', \n                   values  = 'windspeed',\n                   aggfunc = 'mean').plot(figsize = (18,6),\n                                          title   = 'windspeed - Yearly Trends')\nplt.ylabel('Windspeed')\nplt.show()","05824690":"_ = df.pivot_table(index   = df['month'], \n                   columns = 'year', \n                   values  = 'temperature',\n                   aggfunc = 'mean').plot(figsize = (18,6),\n                                          title   = 'temperature - Yearly Trends')\nplt.ylabel('Temperature (Celsius)')\nplt.show()","d896bb39":"_ = df.pivot_table(index   = df['month'], \n                   columns = 'year', \n                   values  = 'dewpnt',\n                   aggfunc = 'mean').plot(figsize = (18,6),\n                                          title   = 'dew point - Yearly Trends')\nplt.ylabel('Dew Point (Celsius)')\nplt.show()","7e75a793":"fig, ax = plt.subplots(figsize = (17,8))\ncorr = df.corr()\nax = sns.heatmap(corr, annot=True,\n            xticklabels = corr.columns.values,\n            yticklabels = corr.columns.values)\nplt.show()","9893f123":"from IPython.display import Image\nImage(\"..\/input\/tarif-2010\/tarif_2010.jpg\")","970b974f":"# **Heat map**","00f9a9e5":"## **Load pricing**\nWe plan in the future to create a load pricing based on the analysis we conducted. Tariff matrix reflects seasonality, day-of-week, high\/medium\/low tariff.\nMultiplying the load consumption with tariff matrix enables computation of consumption price. It also enables for customer to compare several tariff programs and to determine one best for him.","657c3daa":"The enhanced with novel features dataframe is displayed. It is effective at time series load-forecasting. It may be used as additional sub-features affecting electric consumption. \n","9728deb5":"\nWe extract  features of datetime index object. \nQuarter of the date: Jan-Mar = 1, Apr-Jun = 2, etc.\n","04ca551b":"# **Future development**","1bdfb077":"plot entire energy consumption from June\/2013 up to june 2017 as function of datetime. notice quasi periodicity of graph indicating possible\n1:1 mapping of consumption to rest of variables. plt is imported matplotlib.pyplot. figure function is the plot method. gca - get current axis","685a33a8":"**4. Setting the datetime column as a time_date index.**\n\n**5. Sort index.**\n\n**6. Drop ID and datetime columns from the dataframe. **\n\n**7. Rename var1 and var2 columns to dewpnt and peak_demand  respectively.**\n\n**8. Checking which columns has nan values.**","c4e6acbb":"## **Summer Energy Consumption:**","d49c20c8":"# ** Import libraries**","cfe2ef2c":"## **Temperature:**","ac809fcc":"### **Box Plot**:\nIn descriptive statistics, a ** box plot** or ** boxplot** is a method for graphically depicting groups of numerical data through their quartiles. Box plots may also have lines extending vertically from the boxes (whiskers) indicating variability outside the upper and lower quartiles.\n\n**The relation between box plot and normal distribution is:**\n![image.png](attachment:image.png)","4f123cce":"# **Preliminary**\n\n**1.  Load the raw data from the csv file.**\n\n**2. Check the first values of the raw data. **\n**3. We now have a dataframe including train.csv file contents**","c4eb7e93":"The above graphs shows dew point (temperature taking pressure into consideration) average over entire data (using mean) as function of hour within the day, for each day-of-week. This pivot_table generates a whole set of functions unobservable before that appear continuous \u2013 i.e. meaningful.  **Average dew_point(hour) is a periodic function that is day dependent.** The left most and rightmost corners nearly coincide.","4af105fc":"## **Wind Speed:**","d89987cf":"From the above diagrams we study the **load-duration pattern**. That specific electricity consumer (cluster) what is it\u2019s specific day behavior. This is also a pattern enabling **customer segmentation** through load-duration plot.","d39e36d6":"## **Dew Point:**","4bc41624":"# ** Energy consumption - EDA Project**\n\nThe objective of the project is to analyze the data set which contain energy consumption of a city and weather data: {temperature, due point temperature (var1), wind speed. The other parameter is day and time. All these factors are input variables affecting electric energy consumption. The date-time is reflecting seasonality and time of day. it is widely believed that there is 1:1 mapping between {weather, seasonality & time-of-day} to electric energy consumption, therefore energy consumption may be future forecasted through time-series regression machine learning. The seasonality\/day-of-week {Monday-Friday,Saturday,Sunday}\/time of day is named professionally Time-Of-Use, and affects electricity Tariff time. This is called professionally electriicity load forecasting. the current project performs only data analytics over the data. Of special interest is the load pricing. Dependent on Tariff rates: high, medium, low - and energy consumption the load price is computed. \nThe data is hourly and spanning for five years. So it's electricity-consumption=f(day and time, temperature, var1=due point, wind speed, var2). Var2 is the peak demand segmentation. it is anually split into: on-going continuous (A), 100 peak-demand anuall hours (B), and the rest of time (C). Project is intending to perform time-series load-forecasting. this paragraph however focus on preliminary analytics","41271315":" # **Daily Trends**\n \n Daily trends: We analyze herein the weather as function of daytime\n\nA **pivot table** is a table of statistics that summarizes the data of a more extensive table (such as from a database, spreadsheet, or business intelligence program). \n\nThis summary might include sums, averages, or other statistics, which the pivot table groups together in a meaningful way.\n","8cd944c6":"The above graphs shows pressure average over entire data (using mean) as function of hour within the day, for each day-of-week. \nThis pivot_table generates a whole set of functions unobservable before that appear continuous \u2013 i.e. meaningful.\n**Average pressure(hour) is a periodic function that is hardly day dependent.** The left most and rightmost corners nearly coincide.","edee4c37":"A scatter plot (frequency of occurrence, distribution) shows power distribution over hour, not as average. ","16db39ad":"The above graphs shows temperature average over entire data (using mean) as function of hour within the day, for each day-of-week. This pivot_table generates a whole set of functions unobservable before that appear continuous \u2013 i.e. meaningful. ** Average Temperature(hour) is a periodic function that is hardly day dependent.** The left most and rightmost corners nearly coincide.","22a22293":"## **Distribution of electricity load consumption: **","6a2917d5":"Histogram: distribution of density \u2013 for each power (kWatt) it\u2019s number of occurrences \u2013 after split into 200 bins.","7182343a":"**3. Get basic information about the dataset: what are the variables input and output**\n\n**4. Compute statistical basic data using describe method that returns: mean, deviation, max energy consumption,returns the 25th, 50th, and 75th percentiles.**\n\n**5. T method operating upon .describe is T - Transpose of matrix reflecting rows as columns and columns as rows.  **","f619ebfc":"Heat map reflect cross-correlation matrix of linear adaptation between each two factors. We see for example that dewpoint is with strong correlation to energy consumption.\n","80090df8":"## **Electricity Consumption:**","aa5f7512":" # **Yearly Trends**","2d23c7c1":"## **Pressure:**","0e470406":"## **Winter Energy Consumption:**","bbaee2ad":"Electricity consumption is not a weather parameter, rather it is a function of weather and historic load profile (history electricity consumption). The above graphs shows electricity consumption average over entire data (using mean) as function of hour within the day, for each day-of-week. This pivot_table generates a whole set of functions unobservable before that appear continuous \u2013 i.e. meaningful.  **Average electricity_consumption(hour) is a periodic function that is day dependent**. The left most and rightmost corners nearly coincide.","9887f74b":"The above graphs shows windspeed average over entire data (using mean) as function of hour within the day, for each day-of-week.** Average windspeed(hour) is a periodic function that is day dependent.** The left most and rightmost corners nearly coincide.\nThis pivot_table generates a whole set of functions unobservable before that appear continuous \u2013 i.e. meaningful. "}}