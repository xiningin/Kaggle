{"cell_type":{"c51dae5e":"code","59d5c41c":"code","70c5c0dd":"code","3d9d85a9":"code","60f6d2b4":"code","30d6f109":"code","0d0ca946":"code","1b06d8a7":"code","ba1b3c23":"code","6a5dfbd3":"code","e860e891":"code","28b63005":"code","6107ecb8":"code","be30b08b":"code","5ef75239":"code","9213fa0e":"code","eef8e4ce":"code","466f4b55":"code","94b2febc":"code","8dbb2208":"code","d9b33db2":"code","981ddcb5":"code","e7b03e3b":"code","2e3416b2":"markdown","6d973ec3":"markdown","797357b3":"markdown","67b8711a":"markdown","5f5d56f0":"markdown","a2674ce7":"markdown","c0503bce":"markdown","5eb46971":"markdown","8df73e9e":"markdown","06e15e14":"markdown","f9c31574":"markdown","b8b7f3dd":"markdown","199ca4be":"markdown"},"source":{"c51dae5e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","59d5c41c":"df=pd.read_csv('\/kaggle\/input\/paralmpic-2020\/Paralympic_Medal_Count.csv')","70c5c0dd":"df.head()","3d9d85a9":"df.tail()","60f6d2b4":"df.shape","30d6f109":"df.info()","0d0ca946":"df.dtypes","1b06d8a7":"# df.duplicated().any()\n# false will tell us that the data does not have any duplication in the dataframe.\n# However, I would like to print this value into a more understanding output. let's use IF ELSE method\nchkdup = df.duplicated().any() \n\nif chkdup == False:\n    print('There is no duplication of data in the DF')\nelse:\n    print('There is duplication of data in the DF')\n","ba1b3c23":"# Now we would like to check is there any null value in the data through each columns\ndf.isna().any()\n# note that if the value is False, that means there is no null value in the column. ","6a5dfbd3":"# Here I want to check what are the values in the series dataframe of Team\/NPC, maybe I could add some more column from this.\n\ndf[\"Team\/Npc\"].unique()","e860e891":"## lets classify these teams into a continent for further analysis purpose\nconti={\"People's Republic of China\":\"Asia\", 'Great Britain':'Europe',\n       'United States of America':'North America', 'RPC':'Europe and Asia', 'Netherlands':'Europe', 'Ukraine':'Europe',\n       'Brazil':'South America', 'Australia':'Oceania', 'Italy':'Europe', 'Azerbaijan':'Europe and Asia', 'Japan':'Asia', 'Germany':'Europe',\n       'Islamic Republic of Iran':'Asia', 'France':'Europe', 'Spain':'Europe', 'Uzbekistan':'Asia',\n       'Poland':'Europe', 'Hungary':'Europe', 'Switzerland':'Europe', 'Mexico':'North America', 'New Zealand':'Oceania',\n       'Israel':'Asia', 'Canada':'North America', 'India':'Asia', 'Thailand':'Asia', 'Slovakia':'Europe', 'Belarus':'Europe',\n       'Tunisia':'Africa', 'Algeria':'Africa', 'Morocco':'Africa', 'Belgium':'Europe', 'Ireland':'Europe', 'Nigeria':'Africa',\n       'South Africa':'Africa', 'Cuba':'North America', 'Jordan':'Asia', 'Colombia':'South America', 'Venezuela':'South America',\n       'Malaysia':'Asia', 'Denmark':'Europe', 'Republic of Korea':'Asia', 'Turkey':'Europe and Asia', 'Indonesia':'Asia',\n       'Czech Republic':'Europe', 'Chile':'South America', 'Serbia':'Europe', 'Norway':'Europe', 'Singapore':'Asia',\n       'Austria':'Europe', 'Sweden':'Europe', 'Greece':'Europe', 'Finland':'Europe', 'Kazakhstan':'Europe and Asia',\n       'United Arab Emirates':'Asia', 'Costa Rica':'North America', 'Ecuador':'South America', 'Cyprus':'Europe',\n       'Sri Lanka':'Asia', 'Ethiopia':'Africa', 'Mongolia':'Asia', 'Pakistan':'Asia', 'Peru':'South America',\n       'Argentina':'South America', 'Egypt':'Africa and Asia', 'Croatia':'Europe', 'Latvia':'Europe', 'Georgia':'Europe and Asia',\n       'Hong Kong, China':'Asia', 'Bulgaria':'Europe', 'Iraq':'Asia', 'Kuwait':'Asia', 'Namibia':'Africa',\n       'Romania':'Europe', 'Slovenia':'Europe', 'Vietnam':'Asia', 'Lithuania':'Europe', 'Portugal':'Europe',\n       'Bosnia and Herzegovina':'Europe', 'El Salvador':'North America', 'Kenya':'Africa', 'Saudi Arabia':'Asia',\n       'Montenegro':'Europe', 'Oman':'Asia', 'Qatar':'Asia', 'Chinese Taipei':'Asia', 'Uganda':'Africa'}\n## put this dictionary into another column (creating new column named; Continent)\ndf['Continent']=df[\"Team\/Npc\"].replace(conti)\ndf.head(3)","28b63005":"#just to rename column to look better.\ndf1=df.rename(columns={'silver':'Silver','bronze':'Bronze','total medals':'Total Medals','rank by total':'Rank by total medals'}, inplace = False)\ndf1.head(3)\n\n#from now on, I have to use df1 for updated dataframe","6107ecb8":"## import packages that can be use for data analysis and visualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")","be30b08b":"rank=df1.sort_values(by='Rank by total medals',ascending=True)\nrank.head(20)","5ef75239":"count = df1[['Gold','Silver','Bronze']].sum().reset_index().rename(columns={'index':'Medal',0:'Total obtained'})\nprint(count)","9213fa0e":"vari=['Team\/Npc','Rank by total medals','Total Medals']\nbyRank=df1.sort_values('Rank by total medals', ascending=True).reset_index().head(20)\nbyRank=byRank[vari].head(20)\n\nplt.figure(figsize = (15,8))\nbar2=sns.barplot(y='Team\/Npc',x='Total Medals', data=byRank)\nbar2.set_title('Team\/Npc against Total Medals')","eef8e4ce":"df1['Continent'].value_counts()","466f4b55":"plt.figure(figsize = (10,8))\nbar1=sns.countplot(x='Continent', data=df1,palette=['#6F8FAF'])\nbar1.set_title('Figure 2: Number of Team\/NPC in Continent',fontsize=15)\nbar1.set_xlabel('Continent',fontsize=12)\nbar1.set_ylabel('Number of Team\/Npc')\nbar1.tick_params(axis='x', rotation=45)\n","94b2febc":"dfcont=df1.groupby('Continent', as_index=False).agg({\"Total Medals\": \"sum\",\"Gold\":\"sum\",\"Silver\":\"sum\",\"Bronze\":\"sum\"})\ndfcont","8dbb2208":"plt.figure(figsize = (10,8))\nbar3=sns.barplot(x='Continent',y='Total Medals',data=dfcont,palette=['#6F8FAF'])\nbar3.set_title('Figure 3: Total medals obtained by each Continents',fontsize=15)\nbar3.tick_params(axis='x', rotation=45)","d9b33db2":"plt.figure(figsize=(16,7))\nxpos = np.arange(len(dfcont['Continent']))\nplt.xticks(xpos,dfcont['Continent'],rotation=90,fontweight='bold',fontsize=13)\nplt.bar(xpos-0.3,'Gold',data=dfcont,color='gold',width=0.3)\nplt.bar(xpos,'Silver',data=dfcont,color='#C0C0C0',width=0.3,label='Silver')\nplt.bar(xpos+0.3,'Bronze',data=dfcont,color='#C39B77',width=0.3,label='Bronze')\nplt.yticks(fontsize=12,color='black',fontweight='bold')\nplt.legend(labels=[\"Gold\",\"Silver\",\"Bronze\"])\nplt.show()","981ddcb5":"df1.corr()","e7b03e3b":"df1.describe()","2e3416b2":"let's see how many countries\/team from each continent","6d973ec3":"## First Steps in DATA ANALYST\n\nFrom here I would like to start off with the characteristics of the Dataframes (eg: shapes, variables, info, etc)","797357b3":"from this, we can see that only Team\/Npc variable\/column is a string type wheres other variables\/columns are an intergers.","67b8711a":"## Data Analysis\n\nNow that our data is clean, we can start do analysis with the data provided in the data frame.\n\nIt is time to import some packages provided by python. ","5f5d56f0":"Showing the first top 5 data in dataframe","a2674ce7":"Here I want to analyse the ranking of team in paralympics 2021.","c0503bce":"Based on both Figure 2 and Figure 3, we can see Europe continent has the highest value in both; team and total medal obtained. As Europe Team has the largest number of team, that would tell us that Europe will obtained highest TOTAL number of medals. eventhough People's Republic of China has ranked as no 1 in the list. However comparing with the continent, Europe still obtained highest number of medals. ","5eb46971":"Let's see how many column and rows in this dataframe. ","8df73e9e":"It is time to plot some data visualization to do further analysis. ","06e15e14":"## Let's do some data cleaning\ndoes this dataframe need cleaning or not? Does the data have null value? Does it have duplication? so let's do it here.","f9c31574":"showing the last 5 data in dataframe","b8b7f3dd":"we can also see the total of gold, silver & bronze medals obtained during the paralympic 2021","199ca4be":"Check for variables in dataframes. What are the type of variables in the dataframe. \nwe can use pd.info() or pd.dtypes"}}