{"cell_type":{"dabb4e62":"code","fbbfc1db":"code","fcef1769":"code","9ee28624":"code","a6337a9e":"code","a0b80cc5":"code","b9f69475":"code","8f1e60e4":"code","18853c5e":"code","25c75ed7":"code","ac95cd70":"code","cb148e23":"code","3157ef7c":"code","e45bb4b5":"code","305d818b":"code","d9a6d1cf":"code","f9c82705":"code","cab68307":"code","a5fc19a0":"code","a00e95ce":"code","e8e5a8e6":"code","445ec6db":"code","040b4d87":"code","27aadab0":"code","05b0cb32":"code","02f2cc93":"code","47235a93":"code","b15e5128":"code","a84e59db":"code","3c7e9c54":"code","87404d72":"code","106819a2":"code","4c531c09":"code","d3e929e3":"code","59ab6231":"code","1eec709a":"code","9ea74b7c":"code","e1d3ae44":"code","54bffb0f":"code","d12351e8":"code","c8ae5219":"code","f4b267e0":"code","4f342b21":"code","3b0fce65":"code","6ff4cee3":"code","6bcf9994":"code","13c9ccd5":"code","dc2f78d9":"code","5682dc39":"code","c97eef2d":"code","c5a74f04":"code","d5fe2cc2":"code","a84742a4":"code","533d4abd":"code","6ea2870a":"code","c29cd8ab":"code","7566ec49":"code","b6c5aae8":"code","695a747d":"code","a98bba3e":"markdown","85856a94":"markdown","35dc4481":"markdown","1290c78f":"markdown","c217f079":"markdown","5299eef3":"markdown","772ed5ae":"markdown","f661d9ef":"markdown","2017aa04":"markdown"},"source":{"dabb4e62":"\n# Import the libraries to work with\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# load the dataset in\nsales = pd.read_csv('..\/input\/sales-store-product-details\/Salesstore.csv')\n\n# Get an idea of what the dataset contains\nsales.head()","fbbfc1db":"# How big is the data set?\nsales.shape","fcef1769":"# What are the columns labeled as?\nsales.columns","9ee28624":"# Check the counts of each row for each column\nn = sales.nunique(axis=0)\n  \nprint(\"No.of.unique values in each column :\\n\",n)","a6337a9e":"# Check for any nulls\nsales.isnull().sum()","a0b80cc5":"# Find just numeric values in the set\nnumerics = sales.select_dtypes(include=np.number)\nprint(numerics.columns)","b9f69475":"# Describe what the numeric data shows us\nnumerics.describe()","8f1e60e4":"# Find the categorical data columns by excluding the numerics\ncategorical = sales.drop(columns=numerics.columns)\nprint(categorical.columns)","18853c5e":"# Check each of the categorical counts\n# Order Priority\nsns.set_theme(style=\"darkgrid\")\nax = sns.countplot(y=sales.Order_Priority, data=sales, order=sales.Order_Priority.value_counts().index)\n# annotate\nax.bar_label(ax.containers[0], label_type='edge')\n\n# pad the spacing between the number and the edge of the figure\nax.margins(y=0.1)","25c75ed7":"# Does not seem to be a major difference in priority from what I can see so far.","ac95cd70":"# Ship Mode\nax = sns.countplot(y=sales.Ship_Mode, data=sales, order=sales.Ship_Mode.value_counts().index)\n\n# annotate\nax.bar_label(ax.containers[0], label_type='edge')\n\n# pad the spacing between the number and the edge of the figure\nax.margins(y=0.1)","cb148e23":"# What percentage of each is recorded?\nprint(sales.Ship_Mode.value_counts('Regular Air'))","3157ef7c":"# Customer name may not be relevant here, so skipping over this.\n# Region\nax = sns.countplot(y=sales.Region, data=sales, order=sales.Region.value_counts().index)\n# annotate\nax.bar_label(ax.containers[0], label_type='edge')\n\n# pad the spacing between the number and the edge of the figure\nax.margins(y=0.1)","e45bb4b5":"# Customer Segment\nax = sns.countplot(y=sales.Customer_Segment, data=sales)\n\n# annotate\nax.bar_label(ax.containers[0], label_type='edge')\n\n# pad the spacing between the number and the edge of the figure\nax.margins(y=0.1)","305d818b":"# Product Category\n\nax = sns.countplot(y=sales.Product_Category, data=sales, order=sales.Product_Category.value_counts().index)\n\n# annotate\nax.bar_label(ax.containers[0], label_type='edge')\n\n# pad the spacing between the number and the edge of the figure\nax.margins(y=0.1)","d9a6d1cf":"# Product sub category\n# sns syntax didn't like the dash in the column name assignment, using simple one here\nsub = sales['Product_Sub-Category']\nax = sns.countplot(y=sub, data=sales, order=sub.value_counts().index)\n\n# annotate\nax.bar_label(ax.containers[0], label_type='edge')\n\n# pad the spacing between the number and the edge of the figure\nax.margins(y=0.1)","f9c82705":"# Product Names - too many to really delve into with a simple figure, may need to examine this further later.\n# Product Container\nax = sns.countplot(y=sales.Product_Container, data=sales, order=sales.Product_Container.value_counts().index)\n\n# annotate\nax.bar_label(ax.containers[0], label_type='edge')\n\n# pad the spacing between the number and the edge of the figure\nax.margins(y=0.1)","cab68307":"# Quantative exploration\n\n# Order quantity\nsales.Order_Quantity.describe()\n","a5fc19a0":"ax = sns.boxplot(data=sales.Order_Quantity)\nax = sns.stripplot(data=sales.Order_Quantity, y=sales.Order_Quantity, palette=\"Dark2\", linewidth=1)","a00e95ce":"# Sales\nsales.Sales.describe()","e8e5a8e6":"\nax = sns.boxplot(data=sales.Sales)\nax = sns.stripplot(data=sales.Sales, y=sales.Sales, palette=\"Dark2\", linewidth=1)","445ec6db":"# Profit\nsales.Profit.describe()","040b4d87":"\nax = sns.boxplot(data=sales.Profit)\nax = sns.stripplot(data=sales.Profit, y=sales.Profit, palette=\"Dark2\", linewidth=1)","27aadab0":"#Numeric Comparisons\n#Order Quantity vs. Sales\nax = sns.jointplot(data=sales, x=sales.Order_Quantity, y=sales.Sales, height=8, ratio=2, marginal_ticks=True, kind=\"reg\")","05b0cb32":"#Order Quantity vs Profit\nax = sns.jointplot(data=sales, x=sales.Order_Quantity, y=sales.Profit, height=8, ratio=2, marginal_ticks=True, kind=\"reg\")","02f2cc93":"# Sales vs. Profit\nax = sns.jointplot(data=sales, x=sales.Sales, y=sales.Profit, height=8, ratio=2, marginal_ticks=True, kind=\"reg\")","47235a93":"plotnum = numerics.drop([\"Order_ID\"], axis=1)\nax = sns.pairplot(plotnum)","b15e5128":"# Numeric vs. Categorical Comparisons\n# Order Quantity vs Order Priority\n\nax = sns.displot(\n    sales, y=sales.Order_Quantity, hue=sales.Order_Priority,\n    binwidth=4, height=8, facet_kws=dict(margin_titles=True), multiple=\"stack\")","a84e59db":"#Order Quantity vs. Ship Mode\nax = sns.displot(\n    sales, y=sales.Order_Quantity, hue=sales.Ship_Mode,\n    binwidth=4, height=8, facet_kws=dict(margin_titles=True))","3c7e9c54":"#Order Quantity vs. Region\n\nax = sns.displot(\n    sales, x=sales.Order_Quantity, hue=sales.Region,\n    binwidth=8, height=10, facet_kws=dict(margin_titles=True), multiple=\"dodge\", rug=True)","87404d72":"#Order Quantity vs. Customer Segment\n\nax = sns.displot(\n    sales, y=sales.Order_Quantity, hue=sales.Customer_Segment,\n    binwidth=5, height=10, facet_kws=dict(margin_titles=True), multiple=\"stack\")","106819a2":"#Order Quantity vs. Product Category\nax = sns.displot(\n    sales, x=sales.Order_Quantity, hue=sales.Product_Category,\n    binwidth=8, height=10, facet_kws=dict(margin_titles=True), multiple=\"dodge\")","4c531c09":"#Order Quantity vs. Product Sub Category\nsub = sales[\"Product_Sub-Category\"]\nax = sns.displot(\n    sales, y=sales.Order_Quantity, hue=sub,\n    binwidth=8, height=10, facet_kws=dict(margin_titles=True), multiple=\"dodge\", rug=True)","d3e929e3":"#Order Quantity vs. Product Container\nax = sns.relplot(x=sales.Product_Container, y=sales.Order_Quantity, data=sales, kind = 'line')","59ab6231":"#Sales vs. Order Priority\nax = sns.relplot(x=sales.Order_Priority, y=sales.Sales, data=sales, kind = 'line')","1eec709a":"#Sales vs. Ship Mode\nax = sns.relplot(x=sales.Ship_Mode, y=sales.Sales, data=sales, kind = 'line')","9ea74b7c":"#Sales Vs. Region\nax = sns.relplot(x=sales.Region, y=sales.Sales, data=sales, kind = 'line', height=4, aspect=2)","e1d3ae44":"#Sales Vs. Customer Segment\nax = sns.relplot(x=sales.Customer_Segment, y=sales.Sales, data=sales, kind = 'line')","54bffb0f":"#Sales Vs. Product Category\nax = sns.relplot(x=sales.Product_Category, y=sales.Sales, data=sales, kind = 'line')","d12351e8":"#Sales vs. Product Sub Category\nsub=sales['Product_Sub-Category']\nax = sns.jointplot(data=sales, x=sales.Sales, y=sub, kind=\"hist\")","c8ae5219":"#Sales Vs. Product Container\nax = sns.relplot(x=sales.Product_Container, y=sales.Sales, data=sales, kind = 'line')","f4b267e0":"#Profit vs. Order Priority\nax = sns.relplot(x=sales.Order_Priority, y=sales.Profit, data=sales, kind = 'line')","4f342b21":"#Profit vs. Ship Mode\nax = sns.relplot(x=sales.Ship_Mode, y=sales.Profit, data=sales, kind = 'line')","3b0fce65":"#Profit Vs. Region\n\nax = sns.relplot(x=sales.Region, y=sales.Profit, data=sales, kind = 'line', height=4, aspect=2)","6ff4cee3":"#Highest profits were seen from Northwest Territories","6bcf9994":"#Profit vs. Customer Segment\nax = sns.relplot(x=sales.Customer_Segment, y=sales.Profit, data=sales, kind = 'line')","13c9ccd5":"#Profit Vs. Product Category\nax = sns.relplot(x=sales.Product_Category, y=sales.Profit, data=sales, kind = 'line')","dc2f78d9":"#Profit Vs.Product Sub Category\nsub=sales['Product_Sub-Category']\nax = sns.jointplot(data=sales, x=sales.Profit, y=sub, kind=\"hist\")","5682dc39":"#Profit Vs. Product Container\nax = sns.relplot(x=sales.Product_Container, y=sales.Profit, data=sales, kind = 'line')","c97eef2d":"# 79% of the shipmode is Regular Air.\n#Pairwise Ship Mode\npairnums = sales.drop(columns=['Order_ID'])\nax = sns.pairplot(data=pairnums, kind=\"hist\", hue=\"Ship_Mode\", height=3, aspect=1.5)","c5a74f04":"#The majority of orders come from the West Region\n#Highest profits were seen from Northwest Territories\n#Pairwise Region\nax = sns.pairplot(data=pairnums, hue=\"Region\", height=3, aspect=1.5)","d5fe2cc2":"\n#Profit vs Region by Product Category \nax = sns.catplot(x ='Region', y ='Profit', data=sales, kind='bar', col=\"Product_Category\", col_wrap=2, height=5, aspect=1.5)","a84742a4":"#Pairwise by sub category\nax = sns.pairplot(data=pairnums, hue=\"Product_Sub-Category\", kind=\"hist\", height=3, aspect=1.5)","533d4abd":"#The majority of orders come from the West Region\n#Profit vs Region by Product Sub-Category \nax = sns.catplot(x ='Region', y ='Profit', data=sales, kind='violin', col=\"Product_Sub-Category\", col_wrap=2, height=5, aspect=1.5)","6ea2870a":"#Majority of Orders were from Corporate\n#Pairwise Customer Segment\nax = sns.pairplot(data=pairnums, hue=\"Customer_Segment\", kind=\"hist\", height=3, aspect=1.5)","c29cd8ab":"#Profit vs Region by Customer Segment\nax = sns.catplot(x ='Region', y ='Profit', data=sales, kind='violin', col=\"Customer_Segment\", col_wrap=2, height=5, aspect=1.5)","7566ec49":"#Majority of orders were for Office Supplies\n#Pairwise Product Categories\nax = sns.pairplot(data=pairnums, hue=\"Product_Category\", kind='hist')","b6c5aae8":"#Highest profits were seen from Northwest Territories\n#Northwest pairwise\nnorth = sales.loc[sales['Region'] == 'Northwest Territories'].drop([\"Order_ID\"], axis=1)\nax = sns.pairplot(data=north, kind=\"hist\")","695a747d":"#The majority of orders come from the West Region\n#West  pairwise\nwest = sales.loc[sales['Region'] == 'West'].drop([\"Order_ID\"], axis=1)\nax = sns.pairplot(data=west)","a98bba3e":"##Observations so far:\n* 79% of the shipmode is Regular Air.\n* The majority of orders come from the West Region\n* Majority of Orders were from Corporate\n* Majority of orders were for Office Supplies\n* Majority of sub categories were Binders and paper\n* Majority were small boxes\n* Highest profits were seen from Northwest Territories","85856a94":"###Majority of Orders were from Corporate","35dc4481":"###Majority of sub categories were Binders and paper","1290c78f":"###Majority of orders were for Office Supplies","c217f079":"###Corporate is the vast majority of sales, while small business is the least.","5299eef3":"###Most sold are Office Supplies, and least is furniture.","772ed5ae":"###The majority of orders come from the West Region","f661d9ef":"###79% of the shipmode is Regular Air.","2017aa04":"#Exploratory Analysis of Sales Data\n###Investigating comparisons through visualizations\n***\n\nThis dataset provides details of products sold at a chain of stores across various regions. \nThe dataset contains are 730 Observations with 13 characteristics in the dataset:\n\n* Order ID : A specific ID given to each product (This characteristic was not included in the majority of comparisons)\n* Order Priority : Shipping priority of the product\n* Order Quantity: Number of items sold\n* Sales: Amount recieved for the  purchase.\n* Ship Mode: Divided in two categories - Express Air and Regular Air\n* Profit: Profit earned from the sale\n* Customer Name: Name of the customer purchasing the products (This characteristic was not included in the majority of comparisons)\n* Region: Region to which the customer is assigned by location\n* Customer Segment: Divided as per the size of business\n* Product Category: Divided according to the usage of the product\n* Product Sub-Category: Divided according to the usage of the product\n* Product Name: Name of the product (This characteristic was not included in the majority of comparisons)\n* Product Container: Type of container in which the product is shipped\n\n"}}