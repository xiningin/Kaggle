{"cell_type":{"dc7f6b6c":"code","2e79fc10":"code","58dbedcc":"code","a1726100":"code","ec3c193b":"code","ac8584df":"code","0b838b95":"code","4d0ae9cf":"code","062255ab":"code","bc22c381":"code","612ba772":"code","8e41d0f6":"code","90880732":"code","b3142c5c":"code","1d39d92c":"code","4cae983d":"code","d53346f4":"code","22d3068a":"code","42b21ec5":"code","5359afc0":"markdown","84eda621":"markdown","80b7e210":"markdown","e17b9bc5":"markdown","f7d10905":"markdown","ff630a7f":"markdown","65ccdd05":"markdown","8a1cbe3b":"markdown","08d5c110":"markdown","aa757eff":"markdown","fd0344a0":"markdown","e5c23674":"markdown","67bb91b5":"markdown","6f3eec77":"markdown","ed6858c1":"markdown"},"source":{"dc7f6b6c":"#install packages required for the enviroment.\n!pip install chart_studio\n!pip install autoviz\n!pip install xlrd\n!pip install -q sklearn\n\n#import packages to the enviroment\nimport pandas as pd\nimport numpy as np\nimport chart_studio.plotly as py\nimport cufflinks as cf\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom autoviz.AutoViz_Class import AutoViz_Class\nimport h2o\nfrom h2o.automl import H2OAutoML\nimport pandas as pd\nh2o.init()\n\n\nimport tensorflow as tf\n\nfrom tensorflow import feature_column\nfrom tensorflow.keras import layers\nfrom sklearn.model_selection import train_test_split\n\n\n%matplotlib inline\n\n# Make Plotly work in your Jupyter Notebook\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)\n# Use Plotly locally\ncf.go_offline()\n\nprint(\"Packages installed in enviroment successfully\")","2e79fc10":"#load the dataset\ndf = pd.read_csv(\"..\/input\/corona-virus-report\/country_wise_latest.csv\")\n\nprint(\"'Dataset information'\")\nprint()\ndf.info()","58dbedcc":"#columns in the dataset\ndf.columns","a1726100":"#describe the dataset\ndf.describe()\n","ec3c193b":"#max number of confirmed, recovered, deaths and active.\nmaxConfirmed = df.loc[df[\"Confirmed\"].idxmax()]\nmaxRecovered = df.loc[df[\"Recovered\"].idxmax()]\nmaxDeaths = df.loc[df[\"Deaths\"].idxmax()]\nmaxActive = df.loc[df[\"Active\"].idxmax()]\n\nprint(\"-----------Max Confirmed number--------------\")\nprint(maxConfirmed)\nprint()\nprint(\"-----------Max Deaths number-----------------\")\nprint(maxDeaths)\nprint()\nprint(\"-----------Max Recovered number--------------\")\nprint(maxRecovered)\nprint()\nprint(\"-----------Max Active number-----------------\")\nprint(maxActive)","ac8584df":"\n#dislay confirmed in first 10 countries \ndf = df.sort_values(\"Confirmed\", ascending = False)\nfig = px.bar(df.head(10), y = \"Confirmed\", x = \"Country\/Region\",\n            text = \"Confirmed\", color = \"Country\/Region\")\n#total values bar with 2 precision values\nfig.update_traces(texttemplate = \"%{text:.2s}\", textposition = \"outside\")\n#set fontsize and uniformText\nfig.update_layout(uniformtext_minsize = 8)\n#rotate label 45 degrees\nfig.update_layout(xaxis_tickangle=-45)\nfig.update_layout(legend_title_text='confirmed (Covid-19)')\nfig.update_layout(title_text='Top 10 Confirmed cases in the world')\nfig","0b838b95":"#dislay deaths in first 10 countries \ndf = df.sort_values(\"Deaths\", ascending = False)\nfig = px.bar(df.head(10), y = \"Deaths\", x = \"Country\/Region\",\n            text = \"Deaths\", color = \"Country\/Region\")\n#total values bar with 2 precision values\nfig.update_traces(texttemplate = \"%{text:.2s}\", textposition = \"outside\")\n#set fontsize and uniformText\nfig.update_layout(uniformtext_minsize = 8)\n#rotate label 45 degrees\nfig.update_layout(xaxis_tickangle=-45)\nfig.update_layout(legend_title_text='Deaths (Covid-19)')\nfig.update_layout(title_text='Top 10 Death cases in the world')\nfig","4d0ae9cf":"#dislay Recovered in first 10 countries \ndf = df.sort_values(\"Recovered\", ascending = False)\nfig = px.bar(df.head(10), y = \"Recovered\", x = \"Country\/Region\",\n            text = \"Recovered\", color = \"Country\/Region\")\n#total values bar with 2 precision values\nfig.update_traces(texttemplate = \"%{text:.2s}\", textposition = \"outside\")\n#set fontsize and uniformText\nfig.update_layout(uniformtext_minsize = 8)\n#rotate label 45 degrees\nfig.update_layout(xaxis_tickangle=-45)\nfig.update_layout(legend_title_text='Recovered (Covid-19)')\nfig.update_layout(title_text='Top 10 Recovered cases in the world')\nfig","062255ab":"\n#Scatter matrix plot between the confirmed, deaths and recovery category.\nfig = px.scatter_matrix(df.head(10), dimensions=[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active\"], color = \"Country\/Region\")\nfig","bc22c381":"#scatter matrix of new cases, new deaths and new recovery.\nfig = px.scatter_matrix(df.head(10), dimensions = [\"New cases\",\"New deaths\",\"New recovered\"], color = \"Country\/Region\")\nfig","612ba772":"av = AutoViz_Class()\ndf = \"..\/input\/corona-virus-report\/country_wise_latest.csv\"\nsep = \",\"\ndraftAutoViz = av.AutoViz(\n            df,\n            sep = \",\",\n            depVar=\"\",\n            dfte = None,\n            header = 0,\n            verbose = 0,\n            lowess = False,\n            chart_format = \"svg\",\n            max_cols_analyzed=30,\n            max_rows_analyzed=1500000,\n            )\n","8e41d0f6":"df = pd.read_csv(\"..\/input\/corona-virus-report\/country_wise_latest.csv\")\n\ndf = df.sort_values(\"Confirmed\", ascending = False)\ndf","90880732":"#split dataset to train and test dataset\nx_train, y_train = train_test_split(df, test_size=0.2)\nx_test, y_test = train_test_split(df, test_size = 0.2)\nprint(len(x_train), \"x_train Dataset\")\nprint(len(y_train), \"y_train Dataset\")\nprint(len(x_test), \"x_test Dataset\")\nprint(len(y_test), \"y_test Dataset\")\n","b3142c5c":"x_train = np.array(x_train)\ny_train = np.array(y_train)\nx_test = np.array(x_test)\ny_test = np.array(y_test)\n\nx_train\n","1d39d92c":"df = h2o.import_file(\"..\/input\/corona-virus-report\/country_wise_latest.csv\")\n\ndf2 = df.sort(1, ascending=False)\ndf2\n","4cae983d":"\n\ntrain,test,valid = df2.split_frame(ratios=[.7, .15])\n\nx = train.columns\ny = \"Confirmed\"\nx.remove(y)\n\n\n\ntrain[y] = train[y].asfactor()\ntest[y] = test[y].asfactor()\n\naml = H2OAutoML(max_models=20, seed = 1)\naml.train(x=x,y=y,training_frame=train)\n","d53346f4":"lb = aml.leaderboard\nlb.head(rows=lb.nrows)","22d3068a":"test = test.drop(\"Confirmed\")\ntest\npredictions = aml.leader.predict(test)","42b21ec5":"predictions.describe()","5359afc0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\n","84eda621":"Automatic visualisation of the entire data to find hidden patterns or insight.","80b7e210":"    \n<h5>Now that we have installed and imported the packages that we will use for the enviroment. lets go ahead and load the dataset for inspection and analysis.<\\h5>","e17b9bc5":"**Lets visualise the top 10 confirmed countries in descending order**","f7d10905":"<h1>Covid-19 Data Analysis and Predcitions<\/h1>\n","ff630a7f":"<h3>install and import packages to the enviroment<\\h3>","65ccdd05":"**Top 10 recovered countries in the world**","8a1cbe3b":"<h4>Lets examine the top 5 countries with max confirmed numbers.<\\h4>","08d5c110":"<h2>Overview<\/h2>\n\n- in 2019 a newly virus called Coronavirus was first discovered in the city of Wuhuan, China.\n- Coronavirus(COVID-19) is an infectious disease caused by a mild to moderate respotory illness and mostly recovered without requiring treatement.\n- older people however, in particularly with medical history of cardiovascular diseases, diabetes, chronic respiratory disease and cancer are more likly to serious illness.\n- the virus was transmitable from one human to the other by droplets of saliva or discharge from the nose when an infected person coughs or sneezes","aa757eff":"<h2>Acknowledgements and data source<\/h2>\n\n- Science and Engineering department at John Hopkins University - [JHU_Covid-19_Dataset](https:\/\/github.com\/CSSEGISandData\/COVID-19)\n- Worldmeters - [Worldmeters](https:\/\/www.worldometers.info)","fd0344a0":"Scatter matrix of new cases, new deaths and new recovery.","e5c23674":"Scatter matrix plot between the confirmed, deaths, recovered and active cases","67bb91b5":"create a prediction","6f3eec77":"**Top 10 Deaths reported countries in the world**","ed6858c1":"<h3>Load Dataset and inspect<\\h4>\n"}}