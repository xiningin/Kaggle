{"cell_type":{"3262c60a":"code","ef0f4dec":"code","52b4814f":"code","0199cf82":"code","5ac33902":"code","7b307bdd":"code","c26a5120":"code","54f64d4b":"code","e51a6286":"code","4ee1b9fe":"code","5a8e35b8":"code","759ee703":"code","8545f1b6":"code","5f34118e":"code","52715d50":"code","14417aae":"code","f8ddd5b3":"code","4a910c65":"code","786136cc":"code","8c44440b":"code","6ae3db14":"code","1ef16d16":"code","1c90d2bb":"code","91049833":"code","28eaf3af":"code","ff9299a8":"code","3fb1c966":"code","8d76e9d2":"code","0a3a2d9c":"code","043136d6":"code","02b19a00":"code","b10fee85":"code","5830306e":"code","20d6501f":"code","69ceeef9":"code","f1080828":"code","5305893d":"code","a68ead5a":"code","df7afd24":"code","a2a5307f":"code","1386e13d":"code","d3694616":"code","70e18d49":"code","aa42080a":"code","80ad6c96":"code","fa649710":"code","a56c06e1":"markdown","7e7039ec":"markdown","13504b56":"markdown","ade180be":"markdown","e3403863":"markdown","654bd35c":"markdown","9ddc3635":"markdown","dfe5f7f0":"markdown"},"source":{"3262c60a":"import numpy as np\nimport pandas as pd\n\nimport random\nrandom.seed(28)\nnp.random.seed(28)\n\nimport matplotlib.pyplot as plt\n\n#from sklearn.model_selection import train_test_split\n\nimport lightgbm as lgb","ef0f4dec":"train = pd.read_csv(\"..\/input\/widsdatathon2021\/TrainingWiDS2021.csv\",index_col=0)\nsamplesubmission = pd.read_csv(\"..\/input\/widsdatathon2021\/SampleSubmissionWiDS2021.csv\")\ntest = pd.read_csv(\"..\/input\/widsdatathon2021\/UnlabeledWiDS2021.csv\",index_col=0)\ndictionary = pd.read_csv(\"..\/input\/widsdatathon2021\/DataDictionaryWiDS2021.csv\")\nsolution_template = pd.read_csv(\"..\/input\/widsdatathon2021\/SolutionTemplateWiDS2021.csv\")","52b4814f":"train","0199cf82":"test","5ac33902":"train_hospital=train[\"hospital_id\"].unique()\ntrain_hospital","7b307bdd":"test_hospital=test[\"hospital_id\"].unique()\ntest_hospital","c26a5120":"train_icu=train[\"icu_id\"].unique()\nnp.sort(train_icu)","54f64d4b":"test_icu=test[\"icu_id\"].unique()\nnp.sort(test_icu)","e51a6286":"for i in train_hospital:\n#    print(i)\n    icu_train=train[train[\"hospital_id\"]==i][\"icu_id\"].unique()\n    for k in icu_train:\n#        print(k)\n#        print(icu_no)\n        test.loc[test[\"icu_id\"]==k,\"hospital_id\"]=i","4ee1b9fe":"test[\"diabetes_mellitus\"]=np.nan ","5a8e35b8":"df=pd.concat([train,test])","759ee703":"df","8545f1b6":"agg = df['hospital_id'].value_counts().to_dict()\ndf['hospital_id_counts'] = (df['hospital_id'].map(agg)) #hospital id\u3054\u3068\u306e\u6848\u4ef6\u6570\n\n\ndf[\"icu_no\"]=np.nan\n\nfor i in df['hospital_id'].unique():\n#    print(i)\n    icu_no=len(df[df[\"hospital_id\"]==i][\"icu_id\"].unique())\n#    print(i,icu_no)\n    df.loc[df[\"hospital_id\"]==i,\"icu_no\"]=icu_no #hospital id\u3054\u3068\u306eicu\u6570\n","5f34118e":"df","52715d50":"df.describe()","14417aae":"df['apache_3j_diagnosis_split0']=np.where(df['apache_3j_diagnosis'].isna() , np.nan , df['apache_3j_diagnosis'].astype('str').str.split('.',n=1,expand=True)[0]  )\ndf['apache_3j_diagnosis_split1']=np.where(df['apache_3j_diagnosis'].isna() , np.nan , df['apache_3j_diagnosis'].astype('str'))","f8ddd5b3":"df['apache_2_diagnosis_split0']=np.where(df['apache_2_diagnosis'].isna() , np.nan , df['apache_2_diagnosis'].astype('str').str.split('.',n=1,expand=True)[0]  )\n#df['apache_2_diagnosis_split1']=np.where(df['apache_2_diagnosis'].isna() , np.nan , df['apache_2_diagnosis'].astype('str'))","4a910c65":"min_max_feats=[f[:-4] for f in df.columns if f[-4:]=='_min']\nfor col in min_max_feats:\n    df.loc[df[f'{col}_min'] > df[f'{col}_max'], [f'{col}_min', f'{col}_max']] = df.loc[df[f'{col}_min'] > df[f'{col}_max'], \n                                                                                       [f'{col}_max', f'{col}_min']].values","786136cc":"df['comorbidity_score'] = df['aids'].values * 23 + df['cirrhosis'] * 4  + df['hepatic_failure'] * 16 + df['immunosuppression'] * 10 + df['leukemia'] * 10 + df['lymphoma'] * 13 + df['solid_tumor_with_metastasis'] * 11\n\ndf['bmi_type'] = df.bmi.fillna(0).apply(lambda x: 5 * (round(int(x)\/5)))\ndf['height_type'] = df.height.fillna(0).apply(lambda x: 5 * (round(int(x)\/5)))\ndf['weight_type'] = df.weight.fillna(0).apply(lambda x: 5 * (round(int(x)\/5)))\ndf['age_type'] = df.age.fillna(0).apply(lambda x: 10 * (round(int(x)\/10)))\ndf['glucose_max_type'] = df.d1_glucose_max.fillna(0).apply(lambda x: 10 * (round(int(x)\/10)))\ndf['glucose_min_type'] = df.d1_glucose_min.fillna(0).apply(lambda x: 10 * (round(int(x)\/10)))","8c44440b":"#\u30b0\u30eb\u30b3\u30fc\u30b9\u5dee\u5206\n\ndf[\"glucose_diff_d1\"]=df[\"d1_glucose_max\"]-df[\"d1_glucose_min\"]\ndf[\"glucose_diff_h1\"]=df[\"h1_glucose_max\"]-df[\"h1_glucose_min\"]","6ae3db14":"df['abmi'] = df['age']\/df['bmi']\ndf['agi'] = df['weight']\/df['age']","1ef16d16":"#\u30a2\u30eb\u30d6\u30df\u30f3\/\u30af\u30ec\u30a2\u30c1\u30f3\n\ndf['alb_crea_ratio_max_d1'] = df['d1_albumin_max']\/df['d1_creatinine_max']\ndf['alb_crea_ratio_min_d1'] = df['d1_albumin_min']\/df['d1_creatinine_max']\n#df['alb_crea_ratio_max_h1'] = df['h1_albumin_max']\/df['h1_creatinine_max']\n#df['alb_crea_ratio_min_h1'] = df['h1_albumin_min']\/df['h1_creatinine_max']","1c90d2bb":"#\u500b\u4eba\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u306b\u95a2\u3059\u308b\u8b58\u5225\n\nIDENTIFYING_COLS = ['age_type', 'height_type',  'ethnicity', 'gender', 'bmi_type'] \ndf['profile'] = df[IDENTIFYING_COLS].apply(lambda x: hash(tuple(x)), axis = 1)","91049833":"# d1,h1\u306e\u30ea\u30b9\u30c8\u3092\u3064\u304f\u308b\nlab_col = [c for c in df.columns if((c.startswith(\"h1\")) | (c.startswith(\"d1\")))]\nlab_col_names = list(set(list(map(lambda i: i[ 3 : -4], lab_col))))\n\nprint(\"len lab_col\",len(lab_col))\nprint(\"len lab_col_names\",len(lab_col_names))\n\nprint(\"lab_col_names\\n\",lab_col_names)","28eaf3af":"#apache3j\u3001profile\u3001icu_id\u3001hospital_id\u3067\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3001d1 max,min\u306e\u30b0\u30eb\u30fc\u30d7\u5e73\u5747\u5024\u3092\u4f5c\u308b\n\ngroupers = ['apache_3j_diagnosis_split0','apache_3j_diagnosis_split1','profile',\"icu_id\",\"hospital_id\"]\n\nfor g in groupers:\n    for v in lab_col_names:\n        print(g,v)\n        df[f'mean_d1_{v}_{g}_max'] = df.groupby(g)[f\"d1_{v}_max\"].transform(np.mean)\n#        df[f'mean_diff_d1_{v}_{g}_max'] = df[f\"d1_{v}_max\"]-df[g].map(temp)\n        df[f'mean_d1_{v}_{g}_min']= df.groupby(g)[f\"d1_{v}_min\"].transform(np.mean)\n#        df[f'mean_d1_{v}_{g}_diff'] = df.groupby(g)[f\"d1_{v}_diff\"].transform(np.mean)\n#        df[f'mean_diff_d1_{v}_{g}_min'] =df[f\"d1_{v}_min\"]-df[g].map(temp)\n#        df[f'mean_h1_{v}_{g}_max'] = df.groupby(g)[f\"h1_{v}_max\"].transform(np.mean)\n#        df[f'mean_diff_d1_{v}_{g}_max'] = df[f\"d1_{v}_max\"]-df[g].map(temp)\n#        df[f'mean_h1_{v}_{g}_min']= df.groupby(g)[f\"h1_{v}_min\"].transform(np.mean)\n#        df[f'mean_diff_d1_{v}_{g}_min'] =df[f\"d1_{v}_min\"]-df[g].map(temp)\n","ff9299a8":"#\u30b0\u30eb\u30b3\u30fc\u30b9\u5dee\u5206\u3001glucose_apach\u3067\u3082\u540c\u69d8\u306b\u30b0\u30eb\u30fc\u30d7\u5e73\u5747\u5024\u3092\u4f5c\u308b\n\nlab_col=[\"glucose_diff_d1\",\"glucose_diff_h1\",\"glucose_apache\"\n#         'alb_crea_ratio_max_d1','alb_crea_ratio_min_d1','alb_crea_ratio_max_h1','alb_crea_ratio_min_h1'\n#\"h1_glucose_min\",\n#\"h1_glucose_max\",\n\n#\"h1_diasbp_max\",\n#\"h1_resprate_max\",\n]\n\nfor g in groupers:\n    for v in lab_col:\n        print(g,v)\n        df[f'mean_{v}'] = df.groupby(g)[v].transform(np.mean)","3fb1c966":"#\u30ab\u30c6\u30b4\u30ea\u30fc\u5909\u6570\u5316\n\ncategory_list=['elective_surgery',\n 'ethnicity',\n 'gender',\n 'hospital_admit_source',\n 'icu_admit_source',\n# 'icu_admit_type',\n 'icu_stay_type',\n 'icu_type',\n 'readmission_status',\n 'apache_3j_diagnosis_split0',\n 'apache_3j_diagnosis_split1',\n 'apache_2_diagnosis_split0',\n 'apache_post_operative',\n 'arf_apache',\n 'gcs_unable_apache',\n 'intubated_apache',\n 'ventilated_apache',\n 'aids',\n 'cirrhosis',\n 'hepatic_failure',\n 'immunosuppression',\n 'leukemia',\n 'lymphoma',\n 'solid_tumor_with_metastasis',\n \"hospital_id\",\"icu_id\",\n \"profile\"\n#              'apache_3j'\n              ]","8d76e9d2":"for col in category_list:\n    print(col)\n    df[col]=pd.factorize(df[col])[0]","0a3a2d9c":"for col in category_list:\n    print(col)\n    df[col] = df[col].astype('category')","043136d6":"df_train=df[~df[\"diabetes_mellitus\"].isnull()]\ndf_train","02b19a00":"df_test=df[df[\"diabetes_mellitus\"].isnull()]\ndf_test","b10fee85":"Y=df_train[\"diabetes_mellitus\"]","5830306e":"columns=list(df_train.columns)\ncolumns","20d6501f":"len(columns)","69ceeef9":"drop_col=['encounter_id','diabetes_mellitus',\"hospital_id\",\"icu_id\",\"profile\",\n'age_type','bmi_type',\"height_type\",\"weight_type\", \n'apache_3j_diagnosis_split0','apache_3j_diagnosis_split1','apache_2_diagnosis_split0']","f1080828":"X=df_train.drop(drop_col, axis=1)","5305893d":"columns=X.columns","a68ead5a":"X.shape","df7afd24":"Y.shape","a2a5307f":"class_cat_feats=['ethnicity',\n 'gender',\n 'hospital_admit_source',\n 'icu_admit_source',\n 'icu_stay_type',\n 'icu_type',\n# 'apache_3j_diagnosis_split0',\n# 'apache_3j_diagnosis_split1',\n# 'apache_2_diagnosis_split0',\n 'elective_surgery',\n 'apache_post_operative',\n 'arf_apache',\n 'gcs_unable_apache',\n 'intubated_apache',\n 'ventilated_apache',\n 'aids',\n 'cirrhosis',\n 'hepatic_failure',\n 'immunosuppression',\n 'leukemia',\n 'lymphoma',\n 'solid_tumor_with_metastasis',\n# 'apache_3j'\n# 'hospital_id',\n# 'icu_id',\n#                \"profile\",\n                ]","1386e13d":"params = {\n        'boosting_type': 'gbdt',\n        'objective': 'binary',\n        'metric': 'auc',\n        'learning_rate': 0.01,\n        'subsample': 1,\n        'colsample_bytree': 0.2,\n        'reg_alpha': 3,\n        'reg_lambda': 1,\n        'scale_pos_weight': 1,\n        'n_estimators': 30000,\n        'silent': -1,\n        'verbose': -1,\n        'max_depth': -1\n    }\n\ndtrain = lgb.Dataset(X, Y)\nevals = lgb.cv(params,\n             dtrain,\n             nfold=5,\n             stratified=True,\n             num_boost_round=20000,\n             early_stopping_rounds=200,\n             verbose_eval=10,\n             seed = 666,\n             show_stdv=True)\nmax(evals['auc-mean'])","d3694616":"n = int(1.1 * len(evals['auc-mean']))\nn","70e18d49":"target = Y\npreds = np.zeros([test.shape[0], 3])\nfor i in range(3):\n    \n    lgb_params = {\n        'boosting_type': 'gbdt',\n        'objective': 'binary',\n        'metric': 'auc',\n        'learning_rate': 0.01,\n        'subsample': 1,\n        'colsample_bytree': 0.2,\n        'reg_alpha': 3,\n        'reg_lambda': 1,\n        'scale_pos_weight': 1,\n        'n_estimators': n,\n        'silent': -1,\n        'verbose': -1,\n        'max_depth': -1,\n        'seed':i + 666,\n    }\n    \n    x_train = X\n    x_val = X\n    \n   \n    y_train = target\n    y_val = target\n    \n    clf = lgb.LGBMClassifier(**lgb_params)\n    clf.fit(\n        x_train, y_train,\n        eval_set=[(x_train, y_train), (x_val, y_val)],\n        verbose=100,\n        early_stopping_rounds=None\n    )\n    \n    preds[:, i] = clf.predict_proba(df_test[columns], num_iteration=clf.best_iteration_)[:, 1]\n\n","aa42080a":"y_preds = np.power(np.prod(preds, axis=1), 1\/3)","80ad6c96":"submit=pd.DataFrame()\nsubmit['encounter_id'] = df_test[\"encounter_id\"]\nsubmit['diabetes_mellitus'] = y_preds","fa649710":"submit.to_csv('submission.csv',index=False)","a56c06e1":"**train\u3068test\u306ehospital id\u3092\u78ba\u8a8d\uff08train test\u3067\u91cd\u8907\u306a\u3057\uff09**","7e7039ec":"train\u3068test\u3092\u7d50\u5408","13504b56":"**train\u3068test\u3067\u540c\u3058icu id\u3092\u6301\u3064hospital id\u3092\u5171\u901a\u306e\u3082\u306e\uff08train\u306ehospital id\uff09\u306b\u632f\u308a\u76f4\u3057**","ade180be":"max\u3088\u308amin\u306e\u307b\u3046\u304c\u5927\u304d\u3044\u5834\u5408\u306f\u5165\u308c\u66ff\u3048","e3403863":"hospital id\u3054\u3068\u306e\u6848\u4ef6\u6570\u3001icu\u306e\u6570","654bd35c":"\u7279\u5fb4\u91cf\u4f5c\u6210","9ddc3635":"**train\u3068test\u306eicu id\u3092\u78ba\u8a8d\uff08train test\u3067\u91cd\u8907\u3042\u308a\uff09**","dfe5f7f0":"hospital id\u3001icu id\u306e\u53d6\u308a\u6271\u3044\u3092\u4e2d\u5fc3\u306b\u3002\n\u30b7\u30f3\u30b0\u30eb\u30e2\u30c7\u30eb lgb"}}