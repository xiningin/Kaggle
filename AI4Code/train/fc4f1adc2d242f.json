{"cell_type":{"4a7e9b85":"code","cf22ff37":"code","ebd71890":"code","94902322":"code","6aae9b95":"code","f1a6b85c":"code","a8d3cac7":"code","e048413e":"markdown"},"source":{"4a7e9b85":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cf22ff37":"import tensorflow as tf","ebd71890":"from keras.preprocessing.image import ImageDataGenerator\n\ntrain_datagen = ImageDataGenerator(\n        rescale=1.\/255,\n        shear_range=0.2,\n        zoom_range=0.2,\n        horizontal_flip=True)\ntest_datagen = ImageDataGenerator(rescale=1.\/255)\n\ntrain_ds = train_datagen.flow_from_directory(\n    directory='..\/input\/chest-xray-pneumonia\/chest_xray\/train',\n    class_mode='binary',\n    batch_size=32,\n    target_size=(256, 256),\n)\ntest_ds = test_datagen.flow_from_directory(\n    directory='..\/input\/chest-xray-pneumonia\/chest_xray\/test',\n    class_mode='binary',\n    batch_size=32,\n    target_size=(256, 256),\n)\nval_ds = train_datagen.flow_from_directory(\n    directory='..\/input\/chest-xray-pneumonia\/chest_xray\/val',\n    class_mode='binary',\n    batch_size=32,\n    target_size=(256, 256),\n)","94902322":"from tensorflow import keras\nfrom tensorflow.keras import layers\n\nmodel = keras.Sequential()\nmodel.add(layers.Conv2D(filters=64, kernel_size=3, strides=1, padding='valid', activation='relu'))\nmodel.add(layers.MaxPool2D(pool_size=2, strides=2))\n\nmodel.add(layers.Conv2D(filters=64, kernel_size=3, strides=1, padding='valid', activation='relu'))\nmodel.add(layers.MaxPool2D(pool_size=2, strides=2))\n\nmodel.add(layers.Flatten())\n\nmodel.add(layers.Dense(128, activation='relu'))\nmodel.add(layers.Dense(1, activation='sigmoid'))\n\nmodel.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])","6aae9b95":"epochs=10\nbatch_size=32\nhistory = model.fit(x=train_ds, validation_data=val_ds, batch_size=batch_size, epochs=epochs)","f1a6b85c":"model.summary()","a8d3cac7":"results = model.evaluate(test_ds, batch_size=batch_size)","e048413e":"from keras.preprocessing.image import image_dataset_from_directory\ntrain_ds = image_dataset_from_directory(\n    directory='..\/input\/chest-xray-pneumonia\/chest_xray\/train',\n    labels='inferred',\n    label_mode='binary',\n    batch_size=32,\n    image_size=(256, 256),\n)\ntest_ds = image_dataset_from_directory(\n    directory='..\/input\/chest-xray-pneumonia\/chest_xray\/test',\n    labels='inferred',\n    label_mode='binary',\n    batch_size=32,\n    image_size=(256, 256),\n)\nval_ds = image_dataset_from_directory(\n    directory='..\/input\/chest-xray-pneumonia\/chest_xray\/val',\n    labels='inferred',\n    label_mode='binary',\n    batch_size=32,\n    image_size=(256, 256),\n)"}}