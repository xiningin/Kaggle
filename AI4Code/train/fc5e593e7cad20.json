{"cell_type":{"364ac62a":"code","dd2e2992":"code","d2b0396d":"code","56a5703c":"code","2a28abf8":"code","d679c7f4":"code","6fa78f3e":"code","50657580":"code","33ca7986":"code","fc645de6":"code","f771ae95":"code","429937ce":"code","295f0988":"code","99ac0f80":"code","66c8cf2b":"code","9576f01b":"code","c6fc3bde":"code","fca88178":"code","7ccacd9f":"code","2c4868e7":"code","b33fb82d":"code","571fb104":"code","85eec0ac":"code","2aab55a1":"code","c7c9af42":"code","4486be51":"code","aff9cac1":"code","6b32426b":"code","6756b7a3":"code","4948dd8c":"code","e53df59b":"code","8badf51a":"markdown","a5f37573":"markdown","f53c8c6b":"markdown","efaf37f7":"markdown","9d7cc47c":"markdown","9c008fb6":"markdown","e4237ae4":"markdown","69279228":"markdown","4d794a7b":"markdown","09618323":"markdown","b8c423b2":"markdown","d45a1e5d":"markdown","9fd4c282":"markdown","68f67f3f":"markdown","a3a01c88":"markdown","3e465f87":"markdown"},"source":{"364ac62a":"import pandas as pd\nimport numpy as np","dd2e2992":"from sklearn.datasets import load_boston\ndata_boston = load_boston()","d2b0396d":"df = pd.DataFrame(data_boston.data)\ndf.head()","56a5703c":"#\u0412\u044b\u0432\u0435\u0434\u0435\u043c \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445\nprint(data_boston.DESCR)","2a28abf8":"#\u041f\u043e\u0434\u0441\u0442\u0430\u0432\u0438\u043c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u0438\u0437 \u0430\u0442\u0442\u0440\u0438\u0431\u0443\u0442\u043e\u0432 \u0434\u0430\u043d\u043d\u044b\u0445\n\ndf.columns = data_boston.feature_names\ndf.head()","d679c7f4":"#\u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043a\u043e\u043b\u043e\u043d\u043a\u0443 \u0441\u0440\u0435\u0434\u043d\u0435\u0439 \u0446\u0435\u043d\u044b \u0434\u043e\u043c\u0430\n\ndf['MEDV'] = data_boston.target\ndf.head()","6fa78f3e":"#\u0412\u044b\u0432\u0435\u0434\u0435\u043c \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0435\ndf.info()","50657580":"#\u041f\u043e\u0441\u0447\u0438\u0442\u0430\u0435\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0443\u0441\u0442\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\ndf.isnull().sum()","33ca7986":"#\u0421\u0442\u0430\u0442\u0438\u0442\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u0445\ndf.describe()","fc645de6":"#\u0412\u044b\u0432\u0435\u0434\u0435\u043c \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\ncorr = df.corr()\ncorr","f771ae95":"import matplotlib.pyplot as plt\nimport seaborn as sns","429937ce":"#\u041f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u0433\u0440\u0430\u0444\u0438\u043a \u0440\u0430\u0441\u0431\u0440\u043e\u0441\u0430 \u0446\u0435\u043d \u043d\u0430 \u0434\u043e\u043c\u0430\nsns.displot(df['MEDV'], bins=40)\nplt.title('\u0420\u0430\u0437\u0431\u0440\u043e\u0441 \u0446\u0435\u043d \u043d\u0430 \u0434\u043e\u043c\u0430 \u0432 1000$')\nplt.xlabel('\u0421\u0440\u0435\u0434\u043d\u044f\u044f \u0446\u0435\u043d\u0430')\nplt.ylabel('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043e\u043c\u043e\u0432')","295f0988":"#\u041f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u043c\u0430\u0442\u0440\u0438\u0446\u0443 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\nplt.figure(figsize=(15,15))\nsns.heatmap(corr, cbar=True, square=True, annot=True, fmt='.2g', cmap='coolwarm')\nplt.title('\u041a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432')","99ac0f80":"#\u041a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043f\u043e \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u044e \u043a \u0446\u0435\u043d\u0435\ncorrmat = df.corr()\ncorrmat.sort_values(by=['MEDV'], ascending=False)[['MEDV']]","66c8cf2b":"#\u041e\u0442\u0434\u0435\u043b\u044f\u0435\u043c \u0446\u0435\u043b\u0435\u0432\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u043e\u0442 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\nX = df.drop(['MEDV'],axis=1)\nY = df['MEDV']","9576f01b":"#\u0420\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0430 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0435 \u0438 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0435 \u0432 \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0435 30 \u043d\u0430 70\nfrom sklearn.model_selection import train_test_split\n\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.3, random_state=8)","c6fc3bde":"!pip install xgboost","fca88178":"#\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438\nfrom sklearn.linear_model import ElasticNet, Lasso\nfrom sklearn.ensemble import RandomForestRegressor,  GradientBoostingRegressor\nfrom sklearn.kernel_ridge import KernelRidge\nfrom sklearn.preprocessing import RobustScaler\nfrom sklearn.base import BaseEstimator, TransformerMixin, RegressorMixin, clone\nfrom sklearn.model_selection import KFold, cross_val_score, train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom xgboost import XGBRegressor, XGBRFRegressor\nfrom sklearn.linear_model import Ridge","7ccacd9f":"#\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043d\u0430\u0448\u0438\u0445 \u0448\u0430\u0433\u043e\u0432\nn_folds = 5\n\n#\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0446\u0435\u043d\u043a\u0438\ndef rmse_cv(model):\n    kf = KFold(n_folds, shuffle=True, random_state=42).get_n_splits(X_train.values)\n    rmse= np.sqrt(-cross_val_score(model, X_train.values, Y_train, scoring=\"neg_mean_squared_error\", cv = kf))\n    return(rmse)","2c4868e7":"steps = [\n    ('scalar', StandardScaler()),\n    ('poly', PolynomialFeatures(degree=2)),\n    ('model', ElasticNet(alpha=0.0235, l1_ratio=.8, random_state=5))\n]\n\nelastic = Pipeline(steps)\nelastic_score = rmse_cv(elastic).mean()\nprint('ElasticNet Score: {}'.format(round(elastic_score, 5)))","b33fb82d":"steps = [\n    ('scalar', StandardScaler()),\n    ('poly', PolynomialFeatures(degree=2)),\n    ('model', KernelRidge(alpha=3.4, kernel='polynomial', gamma=0.3, degree=1, coef0=100))\n]\n\nkernel = Pipeline(steps)\nkernel_score = rmse_cv(kernel).mean()\nprint('KernelRidge Score: {}'.format(round(kernel_score, 5)))","571fb104":"steps = [\n    ('scalar', RobustScaler()),\n    ('model', GradientBoostingRegressor(n_estimators=300, learning_rate=0.05, max_depth=4, max_features='sqrt', min_samples_leaf=15, min_samples_split=10, loss='huber', random_state =5))\n] \n\nGBR = Pipeline(steps)\nGBR_score = rmse_cv(GBR).mean()\nprint('GradientBoostingRegressor Score: {}'.format(round(GBR_score, 5)))                                   ","85eec0ac":"steps = [\n    ('scalar', StandardScaler()),\n    ('model', XGBRegressor(n_estimators=500, max_depth=3, eta=0.1, subsample=0.3, colsample_bytree=0.7))\n] \n\nXGBR = Pipeline(steps)\nXGBR_score = rmse_cv(XGBR).mean()\nprint('XGBRegressor Score: {}'.format(round(XGBR_score, 5)))   ","2aab55a1":"steps = [\n    ('scalar', RobustScaler()),\n    ('model', XGBRFRegressor(n_estimators=300, max_depth=10, eta=0.1, subsample=0.7, colsample_bytree=0.8))\n] \n\nXGBRFR = Pipeline(steps)\nXGBRFR_score = rmse_cv(XGBRFR).mean()\nprint('XGBRFRegressor Score: {}'.format(round(XGBRFR_score, 5))) ","c7c9af42":"steps = [\n    ('scalar', StandardScaler()),\n    ('model', RandomForestRegressor(n_estimators = 45, random_state = 0, max_depth=8))\n] \n\nRFR = Pipeline(steps)\nRFR_score = rmse_cv(RFR).mean()\nprint('RandomForestRegressor Score: {}'.format(round(RFR_score, 5))) ","4486be51":"steps = [\n    ('scalar', StandardScaler()),\n    ('poly', PolynomialFeatures(degree=2)),\n    ('model', Lasso(alpha=0.028, fit_intercept=True, max_iter=3000))\n]\n\nlasso = Pipeline(steps)\nlasso_score = rmse_cv(lasso).mean()\nprint('Lasso score: {}'.format(round(lasso_score, 5)))","aff9cac1":"steps = [\n    ('scalar', StandardScaler()),\n    ('poly', PolynomialFeatures(degree=2)),\n    ('model', Ridge(alpha=10.09, fit_intercept=True))\n]\n\nridge = Pipeline(steps)\nridge_score = rmse_cv(ridge).mean()\nprint('Ridge score: {}'.format(round(ridge_score, 5)))","6b32426b":"models = [('ElasticNet', elastic_score),\n          ('KernelRidge', kernel_score),\n          ('GBRegressor', GBR_score),\n          ('XGBRegressor', XGBR_score),\n          ('XGBRFRegressor', XGBRFR_score),\n          ('RandomForestRegressor', RFR_score),\n          ('Lasso', lasso_score),\n          ('Ridge', ridge_score)]","6756b7a3":"#\u0412\u044b\u0432\u0435\u0434\u0435\u043c \u0441\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u043d\u0443\u044e \u043e\u0448\u0438\u0431\u043a\u0443 \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438\npredict = pd.DataFrame(data=models, columns=['Model', 'RMSE'])\npredict","4948dd8c":"class AveragingModels(BaseEstimator, RegressorMixin, TransformerMixin):\n    def __init__(self, models):\n        self.models = models\n\n    def fit(self, X, y):\n        self.models_ = [clone(x) for x in self.models]\n        \n        #\u041e\u0431\u0443\u0447\u0430\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u0438\n        for model in self.models_:\n            model.fit(X, y)\n\n        return self\n\n    def predict(self, X):\n        #\u041d\u0430\u0445\u043e\u0434\u0438\u043c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438\n        predictions = np.column_stack([\n            model.predict(X) for model in self.models_\n        ])\n        #\u0423\u0441\u0440\u0435\u0434\u043d\u044f\u0435\u043c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f\n        return np.mean(predictions, axis=1)   ","e53df59b":"averaged_models = AveragingModels(models = (XGBR, elastic))\n\nscore = rmse_cv(averaged_models).mean()\nprint('Averaged score: {}'.format(round(score, 5)))","8badf51a":"\u041d\u0430\u0445\u043e\u0434\u0438\u043c \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u044e \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0434\u043b\u044f \u043d\u0430\u0438\u043b\u0443\u0447\u0448\u0435\u0433\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430","a5f37573":"## \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435","f53c8c6b":"\u041f\u0443\u0441\u0442\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043d\u0435\u0442","efaf37f7":"\u041a\u0430\u043a \u043c\u043e\u0436\u043d\u043e \u0443\u0432\u0438\u0434\u0435\u0442\u044c, \u0432\u0441\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u043c\u0438 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 float","9d7cc47c":"#### \u041e\u0431\u0443\u0447\u0438\u043c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0434\u043b\u044f \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0433\u043e \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0432 \u0430\u043d\u0441\u0430\u043c\u0431\u043b\u0438, \u043d\u043e \u0432 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u043c \u0441\u0434\u0435\u043b\u0430\u0435\u043c \u0443\u043f\u043e\u0440 \u043d\u0430 \u0433\u0440\u0430\u0434\u0438\u0435\u043d\u0442\u043d\u044b\u0439 \u0431\u0443\u0441\u0442\u0438\u043d\u0433, \u043e\u043d \u0445\u043e\u0440\u043e\u0448\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u0447 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f.","9c008fb6":"\u0423\u0432\u0438\u0434\u0438\u043c, \u0447\u0442\u043e \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0446\u0435\u043d\u0435 \u0438\u043c\u0435\u044e\u0442 \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435, \u043d\u043e \u0442\u0430\u043a\u0436\u0435 \u0435\u0441\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u0432 \u0440\u0430\u0439\u043e\u043d\u0435 25-26 \u0438 50 \u0442\u044b\u0441\u044f\u0447 \u0434\u043e\u043b\u043b\u0430\u0440\u043e\u0432.","e4237ae4":"## \u041e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u0438 \u0432 \u0430\u043d\u0441\u0430\u043c\u0431\u043b\u044c, \u0447\u0442\u043e\u0431\u044b \u0443\u0441\u0440\u0435\u0434\u043d\u0438\u0442\u044c \u0438\u0445 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f","69279228":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f","4d794a7b":"# **\u0412\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445**","09618323":"\u041e\u0442\u0441\u044e\u0434\u0430 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0443\u0432\u0438\u0434\u0435\u0442\u044c, \u0447\u0442\u043e \u0441\u0440\u0435\u0434\u043d\u044f\u044f \u0446\u0435\u043d\u0430 \u0432\u0441\u0435\u0445 \u0434\u043e\u043c\u043e\u0432 \u0432 \u0411\u043e\u0441\u0442\u043e\u043d\u0435 - \u043f\u0440\u0438\u0431\u043b\u0438\u0437\u0438\u0442\u0435\u043b\u044c\u043d 22000, \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u0441\u0430\u043c\u044b\u0439 \u0434\u0435\u0448\u0435\u0432\u044b\u0439 \u0434\u043e\u043c \u0438\u043c\u0435\u0435\u0442 \u0446\u0435\u043d\u0443 5000, \u0430 \u0441\u0430\u043c\u044b\u0439 \u0434\u043e\u0440\u043e\u0433\u043e\u0439 50000 \u0434\u043e\u043b\u043b\u0430\u0440\u043e\u0432.","b8c423b2":"\u041a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0438 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0435 \u043e\u0442 -1 \u0434\u043e 1. \u0415\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0431\u043b\u0438\u0437\u043a\u043e \u043a 1, \u044d\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u043c\u0435\u0436\u0434\u0443 \u0434\u0432\u0443\u043c\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c\u0438 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0441\u0438\u043b\u044c\u043d\u0430\u044f \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044f. \u041a\u043e\u0433\u0434\u0430 \u043e\u043d \u0431\u043b\u0438\u0437\u043e\u043a \u043a -1, \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0438\u043c\u0435\u044e\u0442 \u0441\u0438\u043b\u044c\u043d\u0443\u044e \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u0443\u044e \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044e.\n#### \u0412\u044b\u0432\u043e\u0434:\n* \u041d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0441\u0438\u043b\u044c\u043d\u043e \u0432\u043b\u0438\u0435\u0442 \u043d\u0430 \u0446\u0435\u043d\u0443 \u0434\u043e\u043c\u0430 - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u043d\u0430\u0442(RM) \u0438 \u043f\u0440\u043e\u0446\u0435\u043d\u0442 \u043d\u0430\u0441\u0435\u043b\u0435\u043d\u0438\u044f \u0440\u0430\u0439\u043e\u043d\u0430(LSTAT)\n* \u0422\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u0435\u043c \u0443\u0432\u0438\u0434\u0438\u0442\u044c \u0441\u0438\u043b\u044c\u043d\u0443\u044e \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044e \u043c\u0435\u0436\u0434\u0443 \u0434\u0432\u0443\u043c\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438 - \u0438\u043d\u0434\u0435\u043a\u0441 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0441\u0442\u0438 \u043a \u0440\u0430\u0434\u0438\u0430\u043b\u044c\u043d\u044b\u043c \u043c\u0430\u0433\u0438\u0441\u0442\u0440\u0430\u043b\u044f\u043c (RAD) \u0438 \u043d\u0430\u043b\u043e\u0433 \u043d\u0430 \u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432\u043e (TAX); \u0434\u043e\u043b\u044f \u0430\u043a\u0440\u043e\u0432 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u0435\u0434\u043f\u0440\u0438\u044f\u0442\u0438\u0439 (INDUS) \u0438 \u043a\u043e\u043d\u0446\u0435\u0442\u0440\u0430\u0446\u0438\u044f \u043e\u043a\u0441\u0438\u0434\u0430 \u0430\u0437\u043e\u0442\u0430 (NOX) \u0438 \u043e\u0431\u0440\u0430\u0442\u043d\u0430\u044f \u043a \u043d\u0438\u043c \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0434\u043e \u0446\u0435\u043d\u0442\u0440\u043e\u0432 \u0437\u0430\u043d\u044f\u0442\u043e\u0441\u0442\u0438 (NOX) \n* \u0415\u0441\u043b\u0438 \u043e\u0431\u043e\u0431\u0449\u0438\u0442\u044c \u0442\u043e \u043f\u043e\u0447\u0442\u0438 \u0432\u0441\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0441\u0438\u043b\u044c\u043d\u043e \u043a\u043e\u0440\u0440\u0435\u043b\u0438\u0440\u0443\u044e\u0442 \u0434\u0440\u0443\u0433 \u0441 \u0434\u0440\u0443\u0433\u043e\u043c, \u0447\u0442\u043e \u0441\u043e\u0437\u0434\u0430\u0451\u0442 \u043c\u0443\u043b\u044c\u0442\u0438\u043a\u043e\u043b\u0438\u043d\u0435\u0430\u0440\u043d\u043e\u0441\u0442\u044c, \u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0438\u0442 \u043c\u044b \u043d\u0435 \u0441\u043c\u043e\u0436\u0435\u043c \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043b\u0438\u043d\u0435\u0439\u043d\u0443\u044e \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044e \u0434\u043b\u044f \u0442\u043e\u0447\u043d\u043e\u0433\u043e \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f","d45a1e5d":"# **\u0410\u043d\u0430\u043b\u0438\u0437 \u0434\u0430\u043d\u043d\u044b\u0445 \"Boston\" \u0438 \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u0438 \u0434\u043e\u043c\u043e\u0432**","9fd4c282":"#### \u041f\u0435\u0440\u0435\u0434 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u043e\u043c \u043a \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044e \u0438\u0437\u043c\u0435\u043d\u0438\u043c \u043c\u0435\u0442\u043e\u0434 \u043e\u0446\u0435\u043d\u043a\u0438 \u043c\u043e\u0434\u0435\u043b\u0435\u0439, \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u043c \u043c\u0435\u0442\u043e\u0434 \u043a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0435, \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u043e\u0442\u0440\u0430\u0449\u0435\u043d\u0438\u044f \u043f\u0435\u0440\u0435\u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f\n+ 1.\u0420\u0430\u0437\u0434\u0435\u043b\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0430 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0447\u0430\u0441\u0442\u0435\u0439\n+ 2.\u041f\u0435\u0440\u0432\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0431\u0443\u0434\u0435\u0442 \u044f\u0432\u043b\u044f\u0442\u044c\u0441\u044f \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439\n+ 3.\u041c\u043e\u0434\u0435\u043b\u044c \u043e\u0431\u0443\u0447\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u0432\u0441\u0435\u0445 \u0434\u0430\u043d\u043d\u044b\u0445, \u043a\u0440\u043e\u043c\u0435 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439\n+ 4.\u041f\u0435\u0440\u0432\u044b\u0435 \u0442\u0440\u0438 \u0448\u0430\u0433\u0430 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0442\u0441\u044f, \u043d\u043e \u043d\u0430 \u0432\u0442\u043e\u0440\u043e\u043c \u0431\u0435\u0440\u0451\u0442\u0441\u044f \u043d\u0435 \u043f\u0435\u0440\u0432\u0430\u044f, \u0430 \u0432\u0442\u043e\u0440\u0430\u044f, \u043d\u0430 \u0432\u0442\u043e\u0440\u043e\u043c - \u0442\u0440\u0435\u0442\u044c\u044f \u0438 \u0442\u0430\u043a \u0434\u0430\u043b\u0435\u0435\n+ 5.\u0423\u0441\u0440\u0435\u0434\u043d\u0438\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u043e\u0446\u0435\u043d\u043a\u0438","68f67f3f":"## \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445","a3a01c88":"* CRIM - \u0423\u0440\u043e\u0432\u0435\u043d\u044c \u043f\u0440\u0435\u0441\u0442\u0443\u043f\u043d\u043e\u0441\u0442\u0438 \u043d\u0430 \u0434\u0443\u0448\u0443 \u043d\u0430\u0441\u0435\u043b\u0435\u043d\u0438\u044f \u043f\u043e \u0433\u043e\u0440\u043e\u0434\u0430\u043c\n* ZN - \u0414\u043e\u043b\u044f \u0437\u0435\u043c\u043b\u0438 \u043f\u043e\u0434 \u0436\u0438\u043b\u0443\u044e \u0437\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0443 \u0437\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0430 \u043f\u043e\u0434 \u0443\u0447\u0430\u0441\u0442\u043a\u0438 \u043f\u043b\u043e\u0449\u0430\u0434\u044c\u044e \u0431\u043e\u043b\u0435\u0435 25 000 \u043a\u0432.\u043c\n* INDUS - \u0414\u043e\u043b\u044f \u0430\u043a\u0440\u043e\u0432 \u043d\u0435\u0442\u043e\u0440\u0433\u043e\u0432\u043e\u0433\u043e \u0431\u0438\u0437\u043d\u0435\u0441\u0430 \u043d\u0430 \u0433\u043e\u0440\u043e\u0434\n* CHAS - \u0424\u0438\u043a\u0442\u0438\u0432\u043d\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f Charles River (= 1, \u0435\u0441\u043b\u0438 \u0443\u0447\u0430\u0441\u0442\u043e\u043a \u0433\u0440\u0430\u043d\u0438\u0447\u0438\u0442 \u0441 \u0440\u0435\u043a\u043e\u0439; 0 \u0432 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435)\n* NOX - \u041a\u043e\u043d\u0446\u0435\u043d\u0442\u0440\u0430\u0446\u0438\u044f \u043e\u043a\u0441\u0438\u0434\u043e\u0432 \u0430\u0437\u043e\u0442\u0430 (\u0447\u0430\u0441\u0442\u0435\u0439 \u043d\u0430 10 \u043c\u0438\u043b\u043b\u0438\u043e\u043d\u043e\u0432)\n* RM - \u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u043d\u0430\u0442 \u0432 \u0436\u0438\u043b\u043e\u043c \u043f\u043e\u043c\u0435\u0449\u0435\u043d\u0438\u0438\n* AGE - \u0414\u043e\u043b\u044f \u043a\u0432\u0430\u0440\u0442\u0438\u0440, \u0437\u0430\u043d\u0438\u043c\u0430\u0435\u043c\u044b\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430\u043c\u0438, \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0445 \u0434\u043e 1940 \u0433\n* DIS - \u0412\u0437\u0432\u0435\u0448\u0438\u0432\u0430\u0435\u0442 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u0434\u043e \u043f\u044f\u0442\u0438 \u0446\u0435\u043d\u0442\u0440\u043e\u0432 \u0437\u0430\u043d\u044f\u0442\u043e\u0441\u0442\u0438 \u0411\u043e\u0441\u0442\u043e\u043d\u0430\n* RAD - \u0418\u043d\u0434\u0435\u043a\u0441 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0441\u0442\u0438 \u043a \u0440\u0430\u0434\u0438\u0430\u043b\u044c\u043d\u044b\u043c \u043c\u0430\u0433\u0438\u0441\u0442\u0440\u0430\u043b\u044f\u043c\n* TAX - \u041f\u043e\u043b\u043d\u0430\u044f \u0441\u0442\u0430\u0432\u043a\u0430 \u043d\u0430\u043b\u043e\u0433\u0430 \u043d\u0430 \u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432\u043e \u0437\u0430 10 000 \u0434\u043e\u043b\u043b\u0430\u0440\u043e\u0432 \u0421\u0428\u0410\n* PTRATIO - \u0421\u043e\u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0435 \u0443\u0447\u0435\u043d\u0438\u043a\u043e\u0432 \u0438 \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u0439 \u043f\u043e \u0433\u043e\u0440\u043e\u0434\u0430\u043c\n* B - 1000(Bk - 0.63)^2, \u0433\u0434\u0435 Bk - \u0434\u043e\u043b\u044f \u0447\u0435\u0440\u043d\u043e\u043a\u043e\u0436\u0438\u0445 \u043f\u043e \u0433\u043e\u0440\u043e\u0434\u0430\u043c\n* LSTAT - %\u0431\u043e\u043b\u0435\u0435 \u043d\u0438\u0437\u043a\u0438\u0439 \u0441\u0442\u0430\u0442\u0443\u0441 \u043d\u0430\u0441\u0435\u043b\u0435\u043d\u0438\u044f\n* MEDV - \u0421\u0440\u0435\u0434\u043d\u044f\u044f \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u0434\u043e\u043c\u043e\u0432, \u0437\u0430\u043d\u0438\u043c\u0430\u0435\u043c\u044b\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430\u043c\u0438, \u0432 1000 \u0434\u043e\u043b\u043b\u0430\u0440\u043e\u0432","3e465f87":"\u0422\u0430\u043a\u0436\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043f\u043e\u043c\u0438\u043c\u043e \u0433\u0438\u043f\u0435\u0440\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0441\u0430\u043c\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438, \u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439, \u043d\u0435 \u044f\u0432\u043b\u044f\u044e\u0449\u0438\u0445\u0441\u044f \u0431\u0443\u0441\u0442\u0438\u043d\u0433\u043e\u043c, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0435\u043c \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044e \u043d\u043e\u0432\u044b\u0445 \u043c\u0430\u0442\u0440\u0438\u0446 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432. \u042d\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u0438\u0442 \u043d\u0430\u043c\u043d\u043e\u0433\u043e \u043f\u043e\u0432\u044b\u0441\u0438\u0442\u044c \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u043e\u0434\u0435\u043b\u0438.\n"}}