{"cell_type":{"cb5e73ff":"code","bade15c0":"code","13d0f03b":"code","4b8a14cd":"code","e1bb0721":"code","6d556579":"code","a5c660ea":"code","75883cfd":"code","2ff16869":"code","ef167f92":"code","44034872":"code","cf1506c4":"code","6fb5c59b":"code","1d9fa694":"code","80ada61a":"code","1ea67682":"code","26cfd897":"code","ef4cb32f":"code","af801461":"code","1f557651":"code","212296b7":"markdown","1d949dcd":"markdown","2ad04cb1":"markdown","80d34944":"markdown","2e68bd0e":"markdown"},"source":{"cb5e73ff":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom matplotlib import rcParams\nfrom matplotlib.cm import rainbow\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings('ignore')","bade15c0":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier","13d0f03b":"df = pd.read_csv('..\/input\/heart-disease-dataset\/Heart Disease Dataset.csv')\ndf.head(5)","4b8a14cd":"df.info()","e1bb0721":"df.describe()","6d556579":"import seaborn as sns\n#get correlations of each features in dataset\ncorrmat = df.corr()\ntop_corr_features = corrmat.index\nplt.figure(figsize=(20,20))\n#plot heat map\ng=sns.heatmap(df[top_corr_features].corr(),annot=True,cmap=\"RdYlGn\")","a5c660ea":"#plt.figure(figsize=(10,10))\ndf.hist(figsize=(10,10))\n","75883cfd":"sns.set_style('whitegrid')\nsns.countplot(x='target',data=df,palette='RdBu_r')","2ff16869":"dataset = pd.get_dummies(df, columns = ['sex', 'cp', 'fbs', 'restecg', 'exang', 'slope', 'ca', 'thal'])","ef167f92":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nstandardScaler = StandardScaler()\n\ncolumns_to_scale = ['age', 'trestbps', 'chol', 'thalach', 'oldpeak']\ndataset[columns_to_scale] = standardScaler.fit_transform(dataset[columns_to_scale])","44034872":"dataset.head()","cf1506c4":"y = dataset['target']\nX = dataset.drop(['target'], axis = 1)","6fb5c59b":"from sklearn.model_selection import cross_val_score\nknn_scores = []\n\nfor k in range(1,21):\n    knn_classifier = KNeighborsClassifier(n_neighbors = k)\n    score=cross_val_score(knn_classifier,X,y,cv=10)\n    knn_scores.append(score.mean())","1d9fa694":"plt.figure(figsize=(15,15))\nplt.plot([k for k in range(1, 21)], knn_scores, color = 'red')\n\nfor i in range(1,21):\n    plt.text(i, knn_scores[i-1], (i, knn_scores[i-1]))\n\n\nplt.xticks([i for i in range(1, 21)])\nplt.xlabel('Number of Neighbors (K)')\nplt.ylabel('Scores')\n\nplt.title('K Neighbors Classifier scores for different K values')\n","80ada61a":"knn_classifier = KNeighborsClassifier(n_neighbors = 12)\nscore=cross_val_score(knn_classifier,X,y,cv=10)\n","1ea67682":"score.mean()","26cfd897":"from sklearn.ensemble import RandomForestClassifier","ef4cb32f":"randomforest_scores=[]\n#estimators= (i for i in range(1,20))\nfor n_est in range(1,20):\n    randomforest_classifier= RandomForestClassifier(n_estimators= n_est)\n    \n    score=cross_val_score(randomforest_classifier,X,y,cv=10)","af801461":"score.mean()","1f557651":"randomforest_scores.append(score.mean())","212296b7":"## Feature Selection","1d949dcd":"It's always a good practice to work with a dataset where the target classes are of approximately equal size. Thus, let's check for the same.","2ad04cb1":"## Random Forest Classifier","80d34944":"# Heart Disease Prediction\n\n","2e68bd0e":"### Data Processing\n\nAfter exploring the dataset, I observed that I need to convert some categorical variables into dummy variables and scale all the values before training the Machine Learning models.\nFirst, I'll use the `get_dummies` method to create dummy columns for categorical variables."}}