{"cell_type":{"a1668e3b":"code","8ccedcad":"code","16d33dd6":"code","aaa37542":"code","501d7fe2":"code","d82432b5":"code","466b204c":"code","aacfe097":"markdown","39844c47":"markdown","e5e9cdf7":"markdown"},"source":{"a1668e3b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8ccedcad":"train = pd.read_csv('\/kaggle\/input\/tabular-playground-series-aug-2021\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/tabular-playground-series-aug-2021\/test.csv')\nsample_sub = pd.read_csv('\/kaggle\/input\/tabular-playground-series-aug-2021\/sample_submission.csv')","16d33dd6":"pip install pycaret","aaa37542":"from pycaret.regression import *","501d7fe2":"def pycaret_model(train, target, test, n_select, fold, opt, include):\n  print('Setup Your Data....')\n  setup(data=train,\n        target=target,\n        ignore_features = ['id'],\n        #transform_target = True,\n        normalize = True,\n        #numeric_imputation = 'mean',\n        silent= True)\n  \n  print('Comparing Models....')\n  best = compare_models(sort=opt, n_select=n_select, fold = fold, include = include)\n\n  print('Blending Models....')\n  #blended = blend_models(estimator_list= best, fold=fold, optimize=opt)\n  pred_holdout = predict_model(best)\n\n  print('Finallizing Models....')\n  final_model = finalize_model(best)\n\n  print('Done...!!!')\n\n  pred_esb = predict_model(final_model, test)\n  re = pred_esb['Label']\n\n  return re","d82432b5":"%%time\nsample_sub['loss'] = pycaret_model(train, 'loss', test, 1, 2, 'RMSE', ['catboost'])","466b204c":"sample_sub.to_csv('68.sub -         -  - M.csv', index=False)","aacfe097":"# Thanks for Reading!","39844c47":"### Thanks for @junhyeok99 for amazing Pycaret Model, all credits for this Model  to @junhyeok99","e5e9cdf7":"# Bismillahir Rohmanir Rohiym!"}}