{"cell_type":{"c9b9bb0b":"code","e02898cb":"code","7a6df500":"code","0a07f480":"code","bab94168":"code","adfca4e4":"code","e3b516ec":"code","baa22f3c":"code","d8cf5308":"code","d8072e1f":"markdown","a811a756":"markdown","48b378b3":"markdown"},"source":{"c9b9bb0b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.preprocessing import MinMaxScaler, StandardScaler\nfrom sklearn.model_selection import train_test_split\nimport seaborn as sns\nfrom sklearn.metrics import confusion_matrix, classification_report, f1_score\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import cross_val_predict, GridSearchCV\nfrom imblearn.over_sampling import SMOTE, RandomOverSampler\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e02898cb":"df = pd.read_csv(os.path.join(dirname, filename))\ndf.columns","7a6df500":"df.dtypes","0a07f480":"sns.countplot(x = 'Outcome', data=df)","bab94168":"X = df.iloc[:, 0:-1]\ny = df.iloc[:, -1]\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, stratify=y, random_state=21)\n\nscaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","adfca4e4":"smote = SMOTE(sampling_strategy='minority')\nX_train_sm, y_train_sm = smote.fit_resample(X_train, y_train)\n\nrdsample = RandomOverSampler(sampling_strategy='minority')\nX_train_rd, y_train_rd = rdsample.fit_resample(X_train, y_train)","e3b516ec":"knn_cls = KNeighborsClassifier()\nknn_cls.fit(X_train, y_train)\ny_pred = knn_cls.predict(X_test)\nprint(classification_report(y_test, y_pred))","baa22f3c":"knn_cls = KNeighborsClassifier()\nknn_cls.fit(X_train_sm, y_train_sm)\ny_pred = knn_cls.predict(X_test)\nprint(classification_report(y_test, y_pred))","d8cf5308":"knn_cls = KNeighborsClassifier()\nknn_cls.fit(X_train_rd, y_train_rd)\ny_pred = knn_cls.predict(X_test)\nprint(classification_report(y_test, y_pred))","d8072e1f":"## scaling the x_train and x_test","a811a756":"## oversampling the date set with SMOTE and Random","48b378b3":"## Only numerical variables"}}