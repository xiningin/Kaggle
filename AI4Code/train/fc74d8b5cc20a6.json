{"cell_type":{"16378de5":"code","d2477775":"code","50a0bafc":"code","ca69ef9a":"code","3bc1c19f":"code","d3221acb":"code","46257a9c":"code","7758f093":"code","2f954eb1":"code","00f4b1f7":"code","ab9a0ced":"code","a89c464f":"code","5c30c610":"code","fab99ba7":"code","995fe485":"code","c4936ac0":"code","48b3837c":"code","07d38da9":"code","4d695c09":"code","dc4abf57":"code","7a14e155":"code","51b27f9c":"code","5fd13291":"code","3aab8ab3":"code","46436253":"code","92f2d449":"markdown","b5ae4a01":"markdown","48ee34b0":"markdown","4b55580e":"markdown","23053a54":"markdown","a91b82d1":"markdown","c6653612":"markdown","f52f0c5f":"markdown","a0567b8b":"markdown","324b284f":"markdown","c4382a4c":"markdown","55884dbe":"markdown","109f2c67":"markdown","c2459f56":"markdown","b118607f":"markdown","23f0dc11":"markdown","15d06dd9":"markdown","fda4f409":"markdown","065bd88a":"markdown","684444e0":"markdown","baec1f46":"markdown","9c208886":"markdown","3d236193":"markdown","63209346":"markdown","2921aedb":"markdown","578d1d8a":"markdown"},"source":{"16378de5":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","d2477775":"DataFrame=pd.read_csv('\/kaggle\/input\/montcoalert\/911.csv')","50a0bafc":"DataFrame.info()","ca69ef9a":"DataFrame.head(3) \n#First three rows of data","3bc1c19f":"DataFrame.tail(2)\n#Last two rows of data","d3221acb":"DataFrame['zip'].value_counts().head()","46257a9c":"DataFrame['twp'].value_counts().head(5)","7758f093":"DataFrame['title'].nunique()","2f954eb1":"DataFrame['Reason']=DataFrame['title'].apply(lambda title:title.split(':')[0])\n##title.split(':')[0] divide each string by : and takes the first word","00f4b1f7":"DataFrame['Reason'].value_counts()","ab9a0ced":"sns.countplot(x='Reason',data=DataFrame, palette='viridis')","a89c464f":"type(DataFrame['timeStamp'].iloc[0])","5c30c610":"DataFrame['timeStamp'] = pd.to_datetime(DataFrame['timeStamp'])","fab99ba7":"DataFrame['Hour']=DataFrame['timeStamp'].apply(lambda time:time.hour)\nDataFrame['Month']=DataFrame['timeStamp'].apply(lambda time:time.month)\nDataFrame['Day of Week']=DataFrame['timeStamp'].apply(lambda time:time.dayofweek)","995fe485":"dmap = {0:'Mon',1:'Tue',2:'Wed',3:'Thu',4:'Fri',5:'Sat',6:'Sun'}\nDataFrame['Day of Week'] = DataFrame['Day of Week'].map(dmap)","c4936ac0":"sns.countplot(x='Day of Week',data=DataFrame,hue='Reason',palette='viridis')\n\n# To relocate the legend\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","48b3837c":"sns.countplot(x='Month',data=DataFrame,hue='Reason',palette='viridis')\n\n# To relocate the legend\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","07d38da9":"DataFrame['Date']=DataFrame['timeStamp'].apply(lambda t: t.date())","4d695c09":"plt.figure(figsize=(20,12))\nDataFrame.groupby('Date').count()['twp'].plot()\nplt.tight_layout()","dc4abf57":"\nplt.figure(figsize=(20,12))\nDataFrame[DataFrame['Reason']=='Traffic'].groupby('Date').count()['twp'].plot()\nplt.title('Traffic')\nplt.tight_layout()","7a14e155":"plt.figure(figsize=(20,12))\nDataFrame[DataFrame['Reason']=='Fire'].groupby('Date').count()['twp'].plot()\nplt.title('Fire')\nplt.tight_layout()","51b27f9c":"plt.figure(figsize=(20,12))\nDataFrame[DataFrame['Reason']=='EMS'].groupby('Date').count()['twp'].plot()\nplt.title('EMS')\nplt.tight_layout()","5fd13291":"dayHour = DataFrame.groupby(by=['Day of Week','Hour']).count()['Reason'].unstack()\ndayHour.head()","3aab8ab3":"plt.figure(figsize=(12,6))\nsns.heatmap(dayHour,cmap='viridis')","46436253":"sns.clustermap(dayHour,cmap='viridis',\n    col_colors=None,\n    mask=None)","92f2d449":"Welcome in this kernel of visualizing 911 Calls data. We will use tools such as seaborn to perform the activity. But first, we will go through the data to understand it effectively.","b5ae4a01":"*1. What are the top 5 zipcodes for 911 Calls?*","48ee34b0":"Now let's move on to creating heatmaps with seaborn and our data. We'll first need to restructure the dataframe so that the columns become the Hours and the Index becomes the Day of the Week. ","4b55580e":"In the title column, there are Reasons\/Departments specified before code. They are EMS, Fire, and Traffic. We are going to use apply with a custom lambda Expression to create new column called Reason that contains this string value. \n\n*For example, if the title column value is EMS: BACK PAINS\/INJURY , the Reason column value would be EMS. *","23053a54":"** Now let us begin to focus on time information. What is the data type of the objects in the timeStamp column? **","a91b82d1":"Now let us create a new column called 'Date' that contains the date from the timeStamp column.","c6653612":"2. *What are the top 5 townships(twp) for 911 calls?*","f52f0c5f":"*What is the most common Reason for a 911 call based off of this new column?*","a0567b8b":"As always, let's ask ourselves some questions to understand our data","324b284f":"Let's have basic knoudlege about the data","c4382a4c":"*3. How many Unique title codes are in data?*","55884dbe":"Let's use seaborn's lmplot() to create a linear fit on the number of calls per month.","109f2c67":"Let's now use Seaborn to create countplot of 911 calls by Reason","c2459f56":"*You can see that there are low traffic calls on Sunday due to that people are home in weekend*","b118607f":"Plotting 911 calls by Date","23f0dc11":"# Getting to Know Basic Questions","15d06dd9":"Let's now create cluster map","fda4f409":"Let's do the same for Month","065bd88a":"# Creating new features","684444e0":"# Visualizing 911 Calls data\n","baec1f46":"*Let's get started by importing relevant libraries and importing data from kaggle*","9c208886":"That's all for 911 calls. As ownership, I used some ideas from from @Pierrana Data Course by Jose Portila, [Python for Data Science and Machine Learning](https:\/\/www.udemy.com\/course\/python-for-data-science-and-machine-learning-bootcamp\/)","3d236193":"Notice how the Day of Week is an integer 0-6. Use the .map() with this dictionary to map the actual string names to the day of the week:","63209346":" Now let us create this plot but create 3 separate plots with each plot representing a Reason for the 911 call","2921aedb":"Now use seaborn to create a countplot of the Day of Week column with the hue based off of the Reason column.","578d1d8a":"Since they are strings, let us use pd.to_datetime to convert the column from strings to DateTime objects. "}}