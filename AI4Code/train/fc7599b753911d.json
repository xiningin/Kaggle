{"cell_type":{"6a204df4":"code","1b9f5809":"code","83459ef6":"code","1989b1cb":"code","c42fa1c6":"code","1f70d952":"code","28006405":"code","91ab8878":"code","c614b19e":"code","4b158d81":"code","0bd40a3a":"code","17017015":"code","09579390":"code","29ce48b9":"code","7fa72f28":"code","57f21f7d":"code","e9ef6744":"code","20594e05":"code","95320a29":"code","b428071c":"code","4336972a":"code","e9c4923f":"code","ba356b37":"code","78f99947":"code","596edf71":"code","8ca7e023":"code","265198be":"code","5f26bc73":"code","23eb92b7":"markdown","155ddbbc":"markdown","055a70cc":"markdown","5ad58dfc":"markdown","4728cfbd":"markdown","799e7e74":"markdown","49b0bacc":"markdown","42370336":"markdown","c9aeb0d5":"markdown","47c6c0f9":"markdown","edb333b7":"markdown","f3f25c9f":"markdown","c09b74f7":"markdown","4090283f":"markdown"},"source":{"6a204df4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","1b9f5809":"# Loading the Data\niris = pd.read_csv('..\/input\/Iris.csv')","83459ef6":"#Checking the head of Dataset\niris.head(5)","1989b1cb":"#Checking the column info\niris.info()","c42fa1c6":"#to check the statisics for the iris dataset\niris.describe()","1f70d952":"iris.groupby('Species').min()","28006405":"iris.groupby('Species').max()","91ab8878":"#Checking is there is any null data in iris dataset\niris.isnull().any()\n# There is no missing Data.","c614b19e":"iris.groupby('Species').count()","4b158d81":"#using countplot to see number of each kind of iris species flower\nsns.countplot(x=iris['Species'])","0bd40a3a":"iris['PetalLengthCm'].hist(bins=20)","17017015":"iris.drop('Id',axis=1).hist(bins=20,figsize=(10,10))","09579390":"iris.groupby('Species').PetalLengthCm.plot.hist(alpha=0.4)\nplt.xlabel('PetalLengthCm')\nplt.suptitle('Histogram of PetalLengthCm for different Species')\nplt.legend(loc=(0.69,0.75))\nplt.grid()","29ce48b9":"iris.groupby('Species').PetalWidthCm.plot.hist(alpha=0.4)\nplt.xlabel('PetalWidthCm')\nplt.suptitle('Histogram of PetalWidthCm for different Species')\nplt.legend(loc=(0.69,0.75))\nplt.grid()","7fa72f28":"#Histogram using Matplotlib,Pandas and Seaborn.\nplt.hist(data=iris,x='PetalLengthCm',bins=20)#Matplotlib\niris['PetalLengthCm'].hist(bins=20)# Pandas\nsns.distplot(iris['PetalLengthCm'],bins=20) #Seaborn","57f21f7d":" #to see the relationship between 2 variables.\nsns.set_style('darkgrid')\nsns.scatterplot(data=iris,x='PetalLengthCm',y='PetalWidthCm',hue='Species')","e9ef6744":"sns.scatterplot(data=iris,x='PetalLengthCm',y='SepalLengthCm',hue='Species')","20594e05":"#Since this data is not that big and has only 4 features, we can use pairplot \n#and check the relationshipo between 2 variables grouped by Species column.\nsns.pairplot(data=iris.drop('Id',axis=1),hue='Species')","95320a29":"#Scatter Plot using Matplotlib,Pandas and Seaborn.\n#sns.scatterplot(data=iris,x='PetalLengthCm',y='SepalLengthCm',hue='Species')#Seaborn.Hue can be used only here.\n#plt.scatter(data=iris,x='PetalLengthCm',y='PetalWidthCm',c='green',marker='+')#matplotlib\n#iris.plot.scatter(x='SepalLengthCm',y='SepalWidthCm',c='red',marker='+',s=10)#pandas\n#iris.groupby('Species').plot.scatter(x='SepalLengthCm',y='SepalWidthCm',c='red',marker='+',s=10)#pandas\n#but this will result in 3 separate plots. Hence using seaborn hue is easier and more visually appealing\n# as it will plot the data on single axis.\n","b428071c":"iris.drop('Id',axis=1).corr()","4336972a":"#Plotting the correlation using HeatMap\nsns.heatmap(iris.drop('Id',axis=1).corr(),cmap='viridis',annot=True,)\nplt.suptitle('Heatmap')","e9c4923f":"sns.boxplot(data=iris,y='SepalLengthCm')","ba356b37":"sns.boxplot(data=iris,x='Species',y='SepalLengthCm')","78f99947":"sns.violinplot(data=iris,y='SepalWidthCm')","596edf71":"sns.violinplot(data=iris,x='Species',y='SepalLengthCm')","8ca7e023":"#Subplot\nfig,axes = plt.subplots(ncols=2,nrows=1)# Creating the grid\naxes[0].hist(iris['PetalLengthCm'])# Plotting on each axis\naxes[0].set_title('PetalLengthCm')# Setting the Title\naxes[1].scatter(iris['PetalLengthCm'],iris['PetalWidthCm'])# Plotting on each axis\naxes[1].set_title('ScatterPlot')# Setting the Title","265198be":"#Facet\ng=sns.FacetGrid(data=iris,col='Species')# this creates the blank grid based on level of categorical variable.\ng.map(plt.hist,'PetalLengthCm')# plotting using the grid created.\n# grid can also be created using 2 Categorical Variables and span over rows.","5f26bc73":"h=sns.FacetGrid(data=iris,col='Species')\nh.map(plt.scatter,'PetalLengthCm','PetalWidthCm',color='r')# for bivariate(2 variable) plotting","23eb92b7":"```\nSeaborn Facet Grid has more cosmetic effect and can be easily used to produce visibly appealing plots.\nFor more documentation on Seaborn:\nhttps:\/\/seaborn.pydata.org\/generated\/seaborn.FacetGrid.html\n```","155ddbbc":"```\nDataset iris has 6 Columns-\nId-> It is just for numbering, so we should ignore this Column in making observations\nSpecies -> This is Target or Response Column, which we would Predict or making predictions based on other feature columns.\nSepalLengthCm - Sepal Length for the iris flower\nSepalWidthCm - Sepal Width for the iris flower\nPetalLengthCm - Petal Length for the iris flower\nPetalWidthCm - Petal Width for the iris flower\n```","055a70cc":"```\nBox plots can also be used for looking at the distribution.\nThis provides more information than histogram.\nIt shows the distribution , Min value, Max Value, First and Third Quartile, Median, IQR(Inter Quartile Range) and outliers.\nIf needed to see the distribution along with any categorical variable,it is useful as well.\nAlso,Violin Plots are similar to Box Plots.\n\n```","5ad58dfc":"```\nTo check the Distribution of Data, we can use Histogram. This can be used to see if the data has normal or skewed Distribution.\nIf we need to check indivdual Column distribution, we can provide the column only\n```","4728cfbd":"```\nWe have noticed from the above correlation that Petal Length and Petal Width are most correlated features.Also, there is good correlation between petal Length and SepalLength.\n\n```","799e7e74":"```\ncorrelation value of 0 refers to  No Correlation.\n+1 refers to Positive correlation\n-1 refers to negative correlation.\n```","49b0bacc":"```\nIn This Kernel, we are doing the easy to understand Data Visualizations using Iris Data Set\nIris DataSet consists of 150 rows and is about the Iris Flower and its 3 Species or Varieties.\nThe purpose of Data Visualization is to understand the nature of Data and to observe any interesting facts or Patterns.\nWe can use Data Visualization to undersatnd:\nDistribution of Data\nRelation among Data\nCorrelation among Data\n\nTo do this , we can use Matplotlib, Pandas and Seaborn Library with Seaborn the more fancier one.\nWe can plot univariate(1 variable) or bivariate data(2 variable).\nWe can bring in the effect of Categorical variables in terms of Hue in the plots to be able to visualize the effect in single Plot.\n```","42370336":"```\nFurther to check the Correlation among these variables, we can use corr() function and use\nHeatmap to visualize the correlation.\n```","c9aeb0d5":"```Please upvote :)```","47c6c0f9":"```\nTo check the relationship among Features, we can use scatter plot.\nWe can check the separate scatterplot for different variables\nor we can use seaborn Pairplot to check the relationship of multiple variables at once.\nbut it is not advisable to use Pairplot in cases where there are large number of features.\nIn that case, a subset of features can be used for pairplot.\n```","edb333b7":"```\nTo bring in some motivation,Please upvote :)\n```","f3f25c9f":"```\nMulti-plot grid for plotting conditional relationships:\nWe can use Seaborn Facet Grid and Matplot lib Subplot to plot on mulitple grid on multiple axis derived by levels of Categorical data.\n```","c09b74f7":"```\nTo checxk for whole DataFrame , we can provide the Data Frame.\nBut When the number of columns are more or we need the distribution for specific column,\nThen its better to check the histogram of invidual Column\n```","4090283f":"```\nFor checking for the distribution of PetalLengthCm and PetalWidthCm for different species in iris Flower Dataset and using more cosmetic effects for better understanding, we can follow the below approach.\n\n```"}}