{"cell_type":{"e1693a3e":"code","a1fead9b":"code","76ded818":"code","57b2b801":"code","9ccd60fb":"code","8fd7891c":"code","1a49026c":"code","3fa948b7":"code","677cce06":"code","667b4c42":"code","8be84de6":"code","585be1af":"code","ccd3bc7f":"code","a1b00f24":"code","0a0d336f":"code","0c6fd684":"code","63b46da1":"code","5f1fed48":"code","993fffa9":"code","fbb61bf3":"code","88fb7e4d":"markdown","d8752d75":"markdown"},"source":{"e1693a3e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","a1fead9b":"#df=pd.read_csv(\"..\/input\/crude-oil-prices\/Crude Oil Prices Daily.xlsx\",encoding='utf-8')\n\nfrom pandas import ExcelWriter\nfrom pandas import ExcelFile\n\ndf = pd.read_excel('..\/input\/crude-oil-prices\/Crude Oil Prices Daily.xlsx')","76ded818":"df.head()","57b2b801":"df.info()","9ccd60fb":"df.describe()","8fd7891c":"plt.figure(figsize=(15,10))\ndf['Closing Value'].plot(kind='bar')\nplt.title('Variation of oil price over years')\nplt.ylabel('Price')\nplt.xticks(color = 'w',rotation=90)","1a49026c":"plt.figure(figsize=(15,10))\ndf['Closing Value'].plot(kind='line')\nplt.title('Variation of oil price over years')\nplt.ylabel('Price')\nplt.xticks(color = 'w')\n","3fa948b7":"df['year']=df['Date'].dt.year","677cce06":"df.head()","667b4c42":"x=df['year']\ny=df['Closing Value']\nplt.bar(x,y)\nplt.title('Variation of Price over years')\nplt.xlabel('Year')\nplt.ylabel('Price in $')","8be84de6":"df.tail()    # there are some null(NaN) values appearing the data","585be1af":"df['year'].isnull().sum()   ","ccd3bc7f":"df['Closing Value'].isnull().sum()","a1b00f24":"df.fillna(df['Closing Value'].mean(),inplace=True)","0a0d336f":"x=df['year'].values.reshape(-1,1)\ny=df['Closing Value'].values.reshape(-1,1)","0c6fd684":"from sklearn.model_selection import train_test_split\nxtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=0.2)","63b46da1":"from sklearn.linear_model import LinearRegression\nreg=LinearRegression()\nreg.fit(xtrain,ytrain)","5f1fed48":"score=reg.score(xtest,ytest)\nprint(score)","993fffa9":"from sklearn.metrics import accuracy_score    #Oil price in 2020\nypredict=reg.predict([[2020]])    \nprint(ypredict)","fbb61bf3":"plt_train=plt.scatter(xtrain,ytrain,color='grey')\nplt_test=plt.scatter(xtest,ytest,color='green')\nplt.plot(xtrain, reg.predict(xtrain), color='black', linewidth=7)\nplt.plot(xtest,reg.predict(xtest),  color='blue', linewidth=2)\nplt.title('Regression over distribution of data',fontsize=20)\nplt.xlabel(\"Year\")\nplt.ylabel(\"Oil Price\")\nplt.legend((plt_train, plt_test),(\"train data\", \"test data\"))\nplt.show()","88fb7e4d":"We have to preprocess the Closing value field by filling the values in place of Nan","d8752d75":"So no need for preprocessing in year fiel"}}