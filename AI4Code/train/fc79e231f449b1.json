{"cell_type":{"8389f56b":"code","6f904e27":"code","c652fb85":"code","f5335846":"code","82d1a386":"code","aa49783e":"code","69847d2a":"code","944c95df":"code","931d6d54":"code","3d0abfac":"code","61a2e62e":"code","2711b06c":"code","07908075":"code","120223aa":"code","2f45649f":"code","4a55a4d4":"code","ab02d45d":"code","dc05d4c1":"code","a43c1b24":"code","3462cf2a":"code","a308a601":"code","a4d94004":"markdown","0e82c981":"markdown","8da4d2e6":"markdown","a0e7a472":"markdown","bd889002":"markdown","b67ed212":"markdown","396a17e7":"markdown","711af25e":"markdown","c9a2bb17":"markdown","6fc033c9":"markdown","01636d9c":"markdown","389b78eb":"markdown","5e816382":"markdown","4239ad43":"markdown","29dc1e01":"markdown","051c17e5":"markdown"},"source":{"8389f56b":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","6f904e27":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans\nfrom sklearn.mixture import GaussianMixture\nfrom sklearn.manifold import TSNE","c652fb85":"from IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = 'all'","f5335846":"df = pd.read_csv(\"\/kaggle\/input\/advertising\/advertising.csv\")","82d1a386":"df.head()","aa49783e":"Sample_X= df[[\"Daily Time Spent on Site\",\"Age\",\"Area Income\",\"Daily Internet Usage\",\"Male\"]]\ntarget_y= df[\"Clicked on Ad\"]","69847d2a":"Sample_X.head()\ntarget_y.head()","944c95df":"ss= StandardScaler()\nss.fit(Sample_X)\nX = ss.transform(Sample_X)","931d6d54":"kmeans = KMeans(n_clusters=2,\n                    n_init =10,\n                    max_iter = 800)\nkmeans.fit(X)\n\ncentroids=kmeans.cluster_centers_\n\nfig = plt.figure()\nplt.scatter(X[:, 0], X[:, 1], c=kmeans.labels_, s=2)\nplt.scatter(centroids[:, 0], centroids[:, 1], marker='x', s=100, linewidths=150, color='red')\nplt.show()","3d0abfac":"kmean_pred = pd.DataFrame(kmeans.labels_,columns=[\"x\"])\nkmean_pred['y'] = target_y\n#kmean_pred.head()\nnp.sum(kmean_pred[\"x\"] == kmean_pred[\"y\"])\/len(kmean_pred[\"x\"]) * 100","61a2e62e":"gm = GaussianMixture(\n                     n_components = 2,\n                     n_init = 10,\n                     max_iter = 100)\ngm.fit(X)\n\nfig = plt.figure()\nplt.scatter(X[:, 0], X[:, 1], c=gm.predict(X),s=5)\nplt.scatter(gm.means_[:, 0], gm.means_[:, 1], marker='v', s=10, linewidths=5, color='red')\nplt.show()","2711b06c":"gmm_pred = pd.DataFrame(gm.predict(X),columns=[\"x\"])\ngmm_pred['y'] = target_y\nnp.sum(gmm_pred[\"x\"] == gmm_pred[\"y\"])\/len(gmm_pred[\"x\"]) * 100","07908075":"tsne = TSNE(n_components = 2)\ntsne_out = tsne.fit_transform(X)\nplt.scatter(tsne_out[:, 0], tsne_out[:, 1], marker='x', s=50, linewidths=5, c=gm.predict(X))","120223aa":"from sklearn.feature_extraction.text import TfidfVectorizer","2f45649f":"tfidf = TfidfVectorizer(stop_words = 'english')\ntrans_df = tfidf.fit_transform(df['Ad Topic Line'].values)\ntrans_columns = tfidf.get_feature_names()\ntrans_data = pd.DataFrame(trans_df.toarray(), columns = trans_columns                         )\ntrans_data.head()","4a55a4d4":"scaled_5cols = pd.DataFrame(X, columns=Sample_X.columns )\nfinal_df =  pd.concat([scaled_5cols,trans_data], axis =1)\nfinal_df.head()","ab02d45d":"kmeans = KMeans(n_clusters=2,\n                    n_init =10,\n                    max_iter = 800)\nkmeans.fit(final_df)\n\ncentroids=kmeans.cluster_centers_\n\nfig = plt.figure()\nplt.scatter(final_df.iloc[:, 0],final_df.iloc[:, 1], c=kmeans.labels_, s=2)\nplt.scatter(centroids[:, 0], centroids[:, 1], marker='x', s=100, linewidths=150, color='red')\nplt.show()","dc05d4c1":"kmean_pred = pd.DataFrame(kmeans.labels_,columns=[\"x\"])\nkmean_pred['y'] = target_y\nnp.sum(kmean_pred[\"x\"] == kmean_pred[\"y\"])\/len(kmean_pred[\"x\"]) * 100","a43c1b24":"gm = GaussianMixture(\n                     n_components = 2,\n                     n_init = 10,\n                     max_iter = 100)\ngm.fit(final_df)\n\nfig = plt.figure()\nplt.scatter(final_df.iloc[:, 0], final_df.iloc[:, 1], c=gm.predict(final_df),s=5)\nplt.scatter(gm.means_[:, 0], gm.means_[:, 1], marker='v', s=10, linewidths=5, color='red')\nplt.show()","3462cf2a":"gmm_pred = pd.DataFrame(gm.predict(final_df),columns=[\"x\"])\ngmm_pred['y'] = target_y\nnp.sum(gmm_pred[\"x\"] == gmm_pred[\"y\"])\/len(gmm_pred[\"x\"]) * 100","a308a601":"tsne = TSNE(n_components = 2)\ntsne_out = tsne.fit_transform(final_df)\nplt.scatter(tsne_out[:, 0], tsne_out[:, 1], marker='x', s=50, linewidths=5, c=gm.predict(final_df))","a4d94004":"Scaling the dataset Sample_X (selected sample 5 numeric columns)","0e82c981":"Verify the K means Clustering Results with target y dataset (Clicked on Ad)\n\nkmeans.labels_ is the Clustering Output of the KMeans Algorithm","8da4d2e6":"Verify the GMM Clustering Results with target y dataset (Clicked on Ad)\n\ngm.predict(final_df) is the Clustering Output of the GMM Algorithm","a0e7a472":"Thanks.","bd889002":"Here we take the Scaled dataset X (With 5 Numeric column) and merge the tfidf table output with that","b67ed212":"Apply TSNE Visualization to see the goodness of the Clustering on final dataset","396a17e7":"Apply Gaussian Mixture Model Algorithm with 2 Clusters","711af25e":"Applying GMM Clustering on final dataset","c9a2bb17":"### KMeans Clustering and GMM Clustertering on Advertising Dataset (With & Without Text Column)\n\n#### Created By : Ezhilarasan Kannaiyan","6fc033c9":"Apply TSNE Visualization to see the goodness of the Clustering \n\nTSNE will transform the entire Dataset into 2D and we apply the GMM output in the Visualization","01636d9c":"Verify the GMM Clustering Results with target y dataset (Clicked on Ad)\n\ngm.predict(X) is the Clustering Output of the GMM Algorithm","389b78eb":"Now we will use the Text Column \"Ad Topic Line\" and create tf idf table\n\nAnd include the results with the Dataset we already scaled (Sample 5 Numeric columns)","5e816382":"Verify the K means Clustering Results with target y dataset (Clicked on Ad)\n\nkmeans.labels_ is the Clustering Output of the KMeans Algorithm","4239ad43":"Applying KMeans on the final dataset which has Numeric columns and Text Column tfidf table output","29dc1e01":"Apply K Means Algorithm with 2 Clusters","051c17e5":"Taking 5 Sample Numeric Columns alone and try clustering techniques\n\nClicked on Ad is the target column with which we will compare our clustering results later"}}