{"cell_type":{"da3aeb9d":"code","96fc7110":"code","424a71f1":"code","08fcade0":"code","e71fdb8e":"code","e538e486":"code","40448bf9":"code","327e6408":"code","4a91523a":"code","3b5bc184":"code","b0f72613":"code","978ff27f":"code","bf4d52b1":"markdown","b34e1025":"markdown","2aa81631":"markdown","13a430c4":"markdown"},"source":{"da3aeb9d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","96fc7110":"import matplotlib.pyplot as plt\nimport datetime\n\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.model_selection import train_test_split\n\nfrom keras import models, layers","424a71f1":"nRowsRead = 1000 # specify 'None' if want to read whole file\ndf = pd.read_csv('..\/input\/cusersmarildownloadsgermancsv\/german.csv', delimiter=';', encoding = \"ISO-8859-2\", nrows = nRowsRead)\ndf.dataframeName = 'german.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')\ndf.head()","08fcade0":"df.shape","e71fdb8e":"scaler = MinMaxScaler()\ncreditability = scaler.fit_transform(np.array(df['Creditability']).reshape(-1,1))\ndf['Creditability'] = creditability","e538e486":"X_l = []\ny_l = []\nN = len(df)\nD = 50\nfor i in range(N-D-21):\n    X_l.append(df.iloc[i:i+D])\n    y_l.append(df.iloc[i+D])\n    \nX = np.array(X_l)\ny = np.array(y_l)\n\nprint(X.shape, y.shape)","40448bf9":"X_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.2, random_state= 100)","327e6408":"m_x = layers.Input(shape = X_train.shape[1:])\nm_h = layers.LSTM(10)(m_x)\nm_y = layers.Dense(1)(m_h)\nm = models.Model(m_x,m_y)\nm.compile('adam','mse')\nm.summary()","4a91523a":"history = m.fit(X_train, y_train, epochs=500, validation_data=(X_test, y_test),verbose=0)","3b5bc184":"plt.figure(figsize=(15,5))\nplt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.legend(['Train','Test'])\nplt.title(\"The model's evaluation\", fontsize=14)\nplt.xlabel('Epoch')\nplt.xlim(2,500)\nplt.ylabel('Loss')\nplt.show()","b0f72613":"pred = []\n\npr = m.predict(np.array(df[-50:]))\n\npred.append(pr[0])\n\nfor i in range(1,50):\n    pr = m.predict(np.concatenate((np.array(df[-50+i:]), pred[:]), axis=0))\n    pred.append(pr[0])\n\nfor i in range(0,250):\n    pr = m.predict(np.concatenate(pred[i:],axis=0).reshape(-1,1))\n    pred.append(pr[0])","978ff27f":"pred = pd.DataFrame(pred)\n\npred = pred.reset_index()\n\npred.columns = ['z','Creditability']\n\npred.drop(['z'],axis=1,inplace=True)\n\ndata = pd.concat([df.reset_index().drop('Timestamp',axis=1),pred],ignore_index=True)\n\nplt.figure(figsize=(17,7))\nplt.plot(data[-1300:-300])\nplt.title(\"Bitcoin predict\",fontsize=20)\nplt.text(13200,1,\"predict data\",fontsize=14)\nplt.text(13015,1,\"- 2020\/12\/31\",fontsize=14)\nplt.plot(data[-300:])\nplt.show()","bf4d52b1":"#Make LSTM model","b34e1025":"#Fit and Evaluate the model","2aa81631":"#Code by JeongBin Park https:\/\/www.kaggle.com\/jeongbinpark\/lstm-can-we-predict-the-bitcoin-price\/notebook?select=bitstampUSD_1-min_data_2012-01-01_to_2020-12-31.csv ","13a430c4":"#Sliding window\n\nWe predict 1 data by using 50 datas.\n\nIn the Original : X.shape : (12965, 50, 1)  and y.shape : (12965, 1).  It has only 1 column\n\nHere is X.shape: (929,50, 21)  and y.shape: (929, 21)\n\nNone, 50, 21  So N-D-21  The original was N-D-1)"}}