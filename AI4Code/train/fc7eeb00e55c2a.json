{"cell_type":{"1e12a817":"code","3ab8ebd3":"code","7291ebc9":"code","09bd7691":"code","70adb1b6":"code","0f203dbd":"code","14b09ba3":"code","3417b77c":"code","e4830add":"code","03ee1b69":"code","24d42ce9":"code","10d4468e":"code","54ed97f7":"code","65fd2ea4":"code","89da898a":"code","4423584b":"code","75dc7441":"code","93cb7311":"code","8467ba74":"code","542279dd":"code","817ced14":"code","0016a06d":"code","c26699f6":"code","2381653a":"code","e033363e":"code","5fb4f2c8":"code","e7a43b68":"code","7a92e5ed":"code","378bdf54":"code","306c7a62":"code","c42629bd":"code","a4310f0b":"code","965c7459":"code","9298632b":"code","7b9bf4d2":"code","a629cbd1":"code","1be4add3":"code","a8995ba9":"code","f1971c7a":"code","2e877e9b":"code","c003307a":"code","68987d89":"code","dd24a823":"code","356c0581":"markdown","0f078dd3":"markdown","a523f1cc":"markdown","a12fbe33":"markdown","e10439f0":"markdown","ddc4cbaf":"markdown","b2855a95":"markdown","53a5d7f7":"markdown","00b4864b":"markdown","329e45fa":"markdown","cacf370b":"markdown","e0f6b61a":"markdown","021ead16":"markdown","cd3ce2f4":"markdown","83c69ca0":"markdown","1704e765":"markdown","dc4e0624":"markdown","9f58f317":"markdown","c6cf2936":"markdown"},"source":{"1e12a817":"\nfrom sklearn.ensemble import RandomForestClassifier\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn import preprocessing\nimport os\nprint(os.listdir(\"..\/input\"))\n","3ab8ebd3":"%%time\nevent_type=pd.read_csv(\"..\/input\/event_type.csv\",error_bad_lines=False)\ntrain = pd.read_csv(\"..\/input\/train.csv\")\nseverity_type = pd.read_csv(\"..\/input\/severity_type.csv\")\nlog_feature = pd.read_csv(\"..\/input\/log_feature.csv\")\ntest = pd.read_csv(\"..\/input\/test.csv\")\nresource_type = pd.read_csv(\"..\/input\/resource_type.csv\",error_bad_lines=False)\nsample_submission = pd.read_csv(\"..\/input\/sample_submission.csv\")","7291ebc9":"print(\"test\",test.shape)\nprint(\"train\",train.shape)","09bd7691":"print('test',test.head())\nprint('train',train.head(4))\nprint('sample_submission',sample_submission.head())\nprint('event_type',event_type.shape,event_type.head(2))\nprint('severity_type',severity_type.shape,severity_type.head(2))\nprint('log_feature',log_feature.shape,log_feature.head(2))\nprint('resource_type',resource_type.shape,resource_type.head(2))","70adb1b6":"train.head()","0f203dbd":"event_type['id']=pd.to_numeric(event_type['id'],errors='coerce')\n#converting object datatype into numeric","14b09ba3":"event_type.dtypes","3417b77c":"train_eve_mer=train.merge(event_type.drop_duplicates(subset=['id']),on='id')","e4830add":"train_merge2=train_eve_mer.merge(severity_type.drop_duplicates(subset=['id']),how='left',on='id')","03ee1b69":"train_merge3=pd.merge(train_merge2,log_feature.drop_duplicates(subset=['id']),how='left',on='id')","24d42ce9":"train_merge4=pd.merge(train_merge3,resource_type.drop_duplicates(subset=['id']),how='left',on='id')","10d4468e":"train_merge4.head()","54ed97f7":"train_merge4.dtypes","65fd2ea4":"train_merge4.isnull().sum()","89da898a":"cat_col=list(set(train_merge4.columns)-set(train_merge4._get_numeric_data().columns))","4423584b":"for i in range(len(cat_col)):\n    train_merge4[cat_col[i]]=train_merge4[cat_col[i]].astype('category')\n\n    ","75dc7441":"le=preprocessing.LabelEncoder()\nfor i in range(len(cat_col)):\n    train_merge4[cat_col[i]]=le.fit_transform(train_merge4[cat_col[i]])","93cb7311":"train_merge4.drop(['id'],axis=1,inplace=True)","8467ba74":"target=train_merge4[['fault_severity']]","542279dd":"train_merge4.drop(['fault_severity'],axis=1,inplace=True)","817ced14":"rfc=RandomForestClassifier()","0016a06d":"rfc.fit(train_merge4,target)","c26699f6":"train_merge4.head()","2381653a":"test.head()","e033363e":"test.head()","5fb4f2c8":"test.shape","e7a43b68":"test_merge1=pd.merge(test,event_type.drop_duplicates(subset=['id']),how='left',on='id')","7a92e5ed":"test_merge2=pd.merge(test_merge1,severity_type.drop_duplicates(subset=['id']),how='left',on='id')","378bdf54":"test_merge3=pd.merge(test_merge2,log_feature.drop_duplicates(subset=['id']),how='left',on='id')","306c7a62":"test_merge4=pd.merge(test_merge3,resource_type.drop_duplicates(subset=['id']),how='left',on='id')","c42629bd":"test_merge4.head()","a4310f0b":"cat_col","965c7459":"test_merge4.dtypes","9298632b":"for i in range(len(cat_col)):\n    test_merge4[cat_col[i]]=test_merge4[cat_col[i]].astype('category')\n","7b9bf4d2":"le2=preprocessing.LabelEncoder()\nfor i in range(len(cat_col)):\n    test_merge4[cat_col[i]]=le2.fit_transform(test_merge4[cat_col[i]])","a629cbd1":"test_merge4.dtypes","1be4add3":"test_merge4.drop(['id'],axis=1,inplace=True)","a8995ba9":"train_merge4.columns","f1971c7a":"test_merge4.columns","2e877e9b":"predict_test=rfc.predict_proba(test_merge4)","c003307a":"pred_df=pd.DataFrame(predict_test,columns=['predict_0', 'predict_1', 'predict_2'])","68987d89":"submission=pd.concat([test[['id']],pred_df],axis=1)","dd24a823":"submission.to_csv('sub.csv',index=False,header=True)","356c0581":"# **Training Preprocessing**","0f078dd3":"### **Submission file generation**","a523f1cc":"### **Categorical conversion**","a12fbe33":"##Tried XGBOOST classifier ,throwing error\nfrom sklearn.model_selection import train_test_split\ntest_size = 0.33\nX_train, X_test, y_train, y_test = train_test_split(train_merge4, target, test_size=test_size, random_state=5)\n\nimport xgboost as xgb\ndtrain = xgb.DMatrix(data=X_train,label=y_train)\n\nparams = {'learning_rate':0.1,\n        'n_estimators':500,\n        'num_class':3,\n        'eval_metric':['mlogloss'],\n        'missing':-1,\n        'nthread':4}\n\nnum_round = 10000\nbst = xgb.train(params, dtrain, num_round)\n\ndtest = xgb.DMatrix(data=train_merge4,label=target)\n\nn_classes =3\npreds = bst.predict(dtest,n_classes)\n\npd.DataFrame(preds).head()\n\nbest_preds\n\nimport numpy as np\nbest_preds = np.asarray([np.argmax(line) for line in preds])\n#Calcul de pr\u00e9cision\nfrom sklearn.metrics import accuracy_score\nprint(accuracy_score(best_preds, target))","e10439f0":"### Input datasets heads","ddc4cbaf":"## ** Data conversion**","b2855a95":"#### **Droping unique column**","53a5d7f7":"## modeling\n","00b4864b":"### **Label encoding**","329e45fa":"### **Checking for missing values**","cacf370b":"### **Finding categorical columns**","e0f6b61a":"#### **Merged Training data**","021ead16":"### **Merging**","cd3ce2f4":"#### **Prediction **","83c69ca0":"### **Categorical conversion **","1704e765":"## ** Test data merging**","dc4e0624":"## **TEST data preparation**","9f58f317":"### Loading datasets","c6cf2936":"### **Label encoding**"}}