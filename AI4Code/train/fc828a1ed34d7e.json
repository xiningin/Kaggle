{"cell_type":{"49e12b29":"code","7bd888dd":"code","929a2e62":"code","3aae273e":"code","a4427ea7":"code","06cf952a":"code","59f5b5ff":"code","f7fa2d3c":"code","9b5047a9":"code","d7f66ead":"code","0c0636eb":"code","dc32e7e2":"code","7b7efb62":"code","1cdf2e33":"code","d649041f":"code","4bc92334":"code","17d87779":"code","6cc3d28c":"code","6edae830":"code","6168ed20":"code","b67bd876":"code","602b65d1":"code","aadb53c0":"code","b5f29d16":"code","0706efae":"code","49837d7e":"markdown","ea94d33d":"markdown","efae1bab":"markdown","71296090":"markdown","61479593":"markdown","e29bc759":"markdown"},"source":{"49e12b29":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7bd888dd":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","929a2e62":"df = pd.read_csv('..\/input\/supermarket-sales\/supermarket_sales - Sheet1.csv')","3aae273e":"df.head()","a4427ea7":"df.describe()","06cf952a":"df.info()","59f5b5ff":"df.isnull().sum()","f7fa2d3c":"df = df.drop(['Invoice ID','Date','Time'],axis = 1)","9b5047a9":"df = df.drop(['gross margin percentage'],axis =1)","d7f66ead":"df.head(5)","0c0636eb":"print(df.shape)\ndf['Gender'].value_counts()","dc32e7e2":"sns.countplot('Gender',data = df)","7b7efb62":"gender_dummies = pd.get_dummies(df['Gender'])\ngender_dummies.head()","1cdf2e33":"df = pd.concat([df, gender_dummies],axis = 1)\ndf.head()","d649041f":"plt.figure(figsize = (12,6))\nsns.barplot(x = 'Product line',y = 'Female',data = df)","4bc92334":"plt.figure(figsize = (12,6))\nsns.barplot(x = 'Product line',y = 'Male',data = df)","17d87779":"place_df = pd.DataFrame(df['City'].value_counts())\nplace_df","6cc3d28c":"sns.barplot(x = place_df.index , y = place_df['City'], palette = 'hot' )","6edae830":"payment_df = pd.DataFrame(df['Payment'].value_counts())\npayment_df","6168ed20":"plt.figure(figsize =(12,6))\nsns.barplot(x = df['Product line'], y = df['gross income'])","b67bd876":"xdata = [0,1,2,3,4,5,6,7,8,9,10]\nplt.figure(figsize = (12,6))\nsns.barplot(y = df['Product line'], x = df['Rating'])\nplt.xticks(xdata)","602b65d1":"plt.figure(figsize = (12,6))\nsns.barplot(x = df['Total'] , y = df['Product line'])","aadb53c0":"xdata = [0,1,2,3,4,5,6,7,8,9,10]\nplt.figure(figsize = (12,6))\nsns.distplot(df['Quantity'])\nplt.xticks(xdata)","b5f29d16":"sns.heatmap(df.corr())","0706efae":"Total No.of Males =499\nTotal No. of Female customer = 501\nAverage Highest selling Product Line in Females = Fashion & Accesories\nAverage Highest selling Product Line in Males = Health & Beauty\nAvarage Highest customer from = Yangoan\nLowest customer from = Nayptitaw\nPayment Option used the most = Ewallet\nPayment option used the least = Credit Card\nProduct Line with Highest average Gross Income = Home and Lifestyle\nProduct Line with Highest average Rating = Food & Beverages\nProduct Line with Highest average Total Bills = Home and Lifestyle\nAverage Highest Quantity sold = Between 9-10\n\n\n\n\n\n","49837d7e":"sns.barplot(x = payment_df.index , y = payment_df.Payment)","ea94d33d":"Plotting Different methods count","efae1bab":"Total Bill in each Product Line","71296090":"Gross Profit Analysis","61479593":"FINAL CONCLUSION","e29bc759":"Data Visualisation"}}