{"cell_type":{"dc69e1a3":"code","62e8110e":"code","453ff79c":"code","c3e6231e":"code","5c7ed1e3":"code","b891a07b":"code","024c9ef9":"code","fc236219":"code","6d387973":"code","21c429ae":"code","93fea6c5":"code","28193028":"code","167d24fa":"markdown"},"source":{"dc69e1a3":"!apt-get remove swig \n!apt-get install swig3.0 build-essential -y\n!ln -s \/usr\/bin\/swig3.0 \/usr\/bin\/swig\n!apt-get install build-essential\n!pip install --upgrade setuptools\n!pip install auto-sklearn\ntry:\n    import autosklearn.classification\nexcept:\n    pass","62e8110e":"!apt-get remove swig \n!apt-get install swig3.0 build-essential -y\n!ln -s \/usr\/bin\/swig3.0 \/usr\/bin\/swig\n!apt-get install build-essential\n!pip install --upgrade setuptools\n!pip install auto-sklearn\nimport autosklearn.classification","453ff79c":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport scipy as sc\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport gc\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nwarnings.simplefilter(action='ignore', category=FutureWarning)\nfrom tqdm import tqdm_notebook\nimport datetime\nimport time\nimport random\nfrom joblib import Parallel, delayed\n\n\nimport lightgbm as lgb\nfrom tensorflow import keras\nfrom gplearn.genetic import SymbolicRegressor\nfrom catboost import Pool, CatBoostRegressor\n\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.model_selection import GridSearchCV, KFold, RandomizedSearchCV\nfrom sklearn.feature_selection import RFECV, SelectFromModel\n\nfrom sklearn.linear_model import LinearRegression, Ridge\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.svm import NuSVR, SVR\nfrom sklearn.kernel_ridge import KernelRidge\nfrom sklearn.ensemble import AdaBoostRegressor\nfrom sklearn.ensemble import RandomForestRegressor, ExtraTreesRegressor","c3e6231e":"train_X_0 = pd.read_csv(\"..\/input\/lanl-master-s-features-creating-0\/train_X_features_865.csv\")\ntrain_X_1 = pd.read_csv(\"..\/input\/lanl-master-s-features-creating-1\/train_X_features_865.csv\")\ny_0 = pd.read_csv(\"..\/input\/lanl-master-s-features-creating-0\/train_y.csv\", index_col=False,  header=None)\ny_1 = pd.read_csv(\"..\/input\/lanl-master-s-features-creating-1\/train_y.csv\", index_col=False,  header=None)","5c7ed1e3":"train_X = pd.concat([train_X_0, train_X_1], axis=0)\ntrain_X = train_X.reset_index(drop=True)\nprint(train_X.shape)\ntrain_X.head()","b891a07b":"train_y = pd.concat([y_0, y_1], axis=0)\ntrain_y = train_y.reset_index(drop=True)\ntrain_y.columns = ['time_to_failure']\ntrain_y['time_to_failure'].shape","024c9ef9":"test_X = pd.read_csv(\"..\/input\/lanl-master-s-features-creating-0\/test_X_features_10.csv\")\ntest_X.drop('seg_id',inplace=True,axis=1)","fc236219":"scaler = StandardScaler()\ntrain_columns = train_X.columns\n\ntrain_X[train_columns] = scaler.fit_transform(train_X[train_columns])\ntest_X[train_columns] = scaler.transform(test_X[train_columns])","6d387973":"import autosklearn.regression\ncls = autosklearn.regression.AutoSklearnRegressor(ensemble_memory_limit=5000,ml_memory_limit=10000,time_left_for_this_task=10000,per_run_time_limit=1000,seed=123,resampling_strategy='cv',resampling_strategy_arguments={\"folds\": 5})\ncls.fit(train_X, train_y,metric=autosklearn.metrics.mean_absolute_error,dataset_name='LANL')\ncls.refit(train_X, train_y)","21c429ae":"cls.sprint_statistics()","93fea6c5":"cls.show_models()","28193028":"preds = cls.predict(test_X)\n\nsample_submission = pd.read_csv('..\/input\/LANL-Earthquake-Prediction\/sample_submission.csv')\nsample_submission['time_to_failure'] = preds.flatten()\nsample_submission.to_csv('submission.csv', index=False)","167d24fa":"# Auto-SKlearn"}}