{"cell_type":{"224c2b6f":"code","754890f0":"code","83e31024":"code","3fd206de":"code","b0be8ca9":"code","1b271446":"code","6162d832":"code","38d52cb9":"code","f39d883e":"code","93a1c22e":"code","a059bc54":"code","88bdf14f":"code","327f3e07":"code","9afe177d":"code","8af2acdc":"code","3761de03":"code","f7b9387c":"code","ded3bb70":"code","b84e32a5":"code","47abeb0f":"code","ec8fd361":"code","e802d1d0":"code","f9c4fe27":"code","f9873e04":"markdown","a0adb3a5":"markdown","f6975c4f":"markdown","931a8fb3":"markdown","de6ab142":"markdown","23fc39c6":"markdown","f5d0222f":"markdown","eb6ab39b":"markdown","b011c1b5":"markdown","bab61def":"markdown","09de1f89":"markdown","46b1878d":"markdown","c3391113":"markdown","79df7216":"markdown","90b0259e":"markdown","a292dbdc":"markdown"},"source":{"224c2b6f":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nsns.set()\n\ndata=pd.read_csv('..\/input\/cornell-car-rental-dataset\/CarRentalData.csv')\ndata.head()","754890f0":"data.info()","83e31024":"print(data.isnull().sum())","3fd206de":"data[\"fuelType\"].value_counts()","b0be8ca9":"data[\"location.country\"].value_counts()","1b271446":"data.drop(\"location.country\", axis=1, inplace=True)","6162d832":"data.describe()","38d52cb9":"# get number of categories value \nprint(\"Number of Categories in: \")\nfor ColName in data[['fuelType','location.city','location.state','vehicle.make','vehicle.model','vehicle.year']]:\n    print(\"{} = {}\".format(ColName,len(data[ColName].unique())))\n    ","f39d883e":"median=data[\"rating\"].median()\ndata[\"rating\"].fillna(median, inplace=True)","93a1c22e":"data.info()","a059bc54":"data1 = data.replace(np.nan, 'GASOLINE', regex=True)","88bdf14f":"data1 = data1.rename(columns={'location.latitude': 'latitude', 'location.longitude': 'longitude',\n                             'rate.daily': 'rate_daily','vehicle.year': 'vehicle_year'})\ndata1.head()\n","327f3e07":"import folium\nfrom folium.plugins import HeatMap\ncenter = [35.582889, -99.632773]  #data.describe(mean)\nm = folium.Map([data1.latitude.mean(), data1.longitude.mean()], zoom_start=4,center=center)\nfor index, row in data1.iterrows():\n    folium.CircleMarker([row['latitude'], row['longitude']],\n                        radius=row['renterTripsTaken']\/10,\n                        fill_color=\"#3db7e4\", \n                       ).add_to(m)\n    \npoints = data1[['latitude', 'longitude']].values\nm.add_children(HeatMap(points, radius=15)) # plot heatmap\nm.save('map.html')\nm","9afe177d":"f, ax = plt.subplots(figsize=(18, 7))\nsns.histplot(data=data1, x=\"rating\", binwidth=.01)\nax.set_ylim(0,300)\nax.set_xlim(2,5)\nplt.title('Rental Car Rating')\nplt.show()\nplt.savefig('Rental Car Rating.png', format='png')","8af2acdc":"f, ax = plt.subplots(figsize=(18, 7))\nsns.histplot(data=data1, x=\"vehicle_year\")\nax.set_xlim(1990,2021)\nplt.title('vehicle year')\nplt.show()\nplt.savefig('vehicle year.png', format='png')","3761de03":"labels=data1['fuelType'].value_counts().index\nvalues=data1['fuelType'].value_counts().values\n\n#visualization\nplt.figure(figsize=(7,7))\nplt.pie(values ,labels = labels ,autopct='%1.1f%%')\nplt.title('fuelType')\nplt.show()\nplt.savefig('Fuel Type.png', format='png')","f7b9387c":"labels=data1['vehicle.type'].value_counts().index\nvalues=data1['vehicle.type'].value_counts().values\n\n#visualization\nplt.figure(figsize=(7,7))\nplt.pie(values ,labels = labels ,autopct='%1.1f%%')\nplt.title('Vehicle Type')\nplt.show()\nplt.savefig('Vehicle Type.png', format='png')","ded3bb70":"labels=data1['vehicle.make'].value_counts().index\nf, ax = plt.subplots(figsize=(18, 7))\nsns.countplot(x='vehicle.make', data=data1,\n              order = labels,\n              #hue='vehicle.year'\n              palette=\"BuGn_r\"\n           )\nplt.xticks(rotation= 45,fontsize=7 )\nax.set_ylabel('count', fontsize=15, color='b')\nax.set_xlabel('make of the vehicle', fontsize=14, color='b')\n#plt.savefig('make of the vehicle.png', format='png')\nplt.savefig('myimage.svg', format='svg', dpi=1200)","b84e32a5":"labels=data1['location.state'].value_counts().index\nf, ax = plt.subplots(figsize=(18, 7))\nsns.countplot(x='location.state', data=data1,\n              order = labels,\n              #hue='vehicle.year'\n              palette=\"Set2\"\n           )\nplt.xticks(rotation= 45,fontsize=12 )\nax.set_ylabel('Car count', fontsize=15, color='r')\nax.set_xlabel('location.state', fontsize=14, color='r')\n#plt.savefig('make of the vehicle.png', format='png')\nplt.savefig('Car count per state', format='svg', dpi=1200)","47abeb0f":"import plotly_express as px\ndata_make_model = data1.groupby(['vehicle.make', 'vehicle.model']).size().reset_index()\ndata_make_model.rename(columns = {0:'model_count'}, inplace=True)\ndata_make_model['make_count'] = data_make_model['vehicle.make'].apply(\n    lambda x : data_make_model[data_make_model['vehicle.make'] == x]['model_count'].sum())\ndata_make_model.sort_values(by = 'make_count', ascending=False, inplace=True)\nfig =px.scatter(data_make_model[data_make_model['make_count'] >45],\n             x = 'vehicle.make', y='model_count', color = 'vehicle.model',width=1100, height=700,\n                title='Make and Model of Top Most Rented Cars')\nfig.show()\n","ec8fd361":"fig =px.scatter(data1,\n             x = 'vehicle.make', y='rate_daily', color = 'vehicle.model',width=1100, height=700,\n                title='Daily rate of cars')\nfig.show()\n","e802d1d0":"from IPython.display import IFrame\nIFrame('https:\/\/datastudio.google.com\/embed\/reporting\/6ddc4bc8-e881-4983-a37f-51e057485122\/page\/OFP8B', width='100%', height=900)","f9c4fe27":"from IPython.display import Image\nImage(\"..\/input\/car-rental-dashboard\/Car dashboard.JPG\")","f9873e04":"Each row represents one car. There are 15 attributes : fuel Type,rating ,renter Trips Taken, review Count ,City, Country,longitude, latitude, State, Owener id, rate daily, vehicle make, vehicle model , vehicle type,and vehicle year.\n\nThe info() method is useful to get a quick description of the data, in particular the total number of rows, and each attribute\u2019s type and number of non-null values","a0adb3a5":"Since the data is collected in USA, It is better to delete this column","f6975c4f":"It's clear that the majority of car's fueltype is gasoline. Let's go ahead and fill in the missing values with GASOLINE.","931a8fb3":"### Plotting the data on a map with Folium\nThe data can be presented on a map, showing where is the car parking , with points radius based on number of trips taken \n\n**Folium** is a Python library used for visualizing geospatial data. It is easy to use and yet a powerful library. Folium is a Python wrapper for Leaflet. js which is a leading open-source JavaScript library for plotting interactive maps","de6ab142":"**Discrete\/ Categorical Data:** discrete data is quantitative data that can be counted and has a finite number of possible values or data which may be divided into groups e.g. days in a week, number of months in a year, sex (Male\/Female\/Others), Grades (High\/Medium\/Low), etc.","23fc39c6":"#### Histogram of vehicle_year","f5d0222f":"California, Florida,and Texas are top three states by clear difference from the rest of the states . ","eb6ab39b":"#### Objective\n\nBased on the data from shared,i have built a Dashboard. The purpose of this dashboard is to understand the distribution of cars to all states and different cities based on the car model, year of manufacture, and daily rate,etc...\n\n#### Usage\n\nThe top part of the dashboard is to control the car model to be displayed, the year of manufacture, and the range of trips taken , additional to fuel Type and Vehcile type filters . The bottom part of the dashboard focuses on the relationship between the different models of cars and the daily rental value with a different value with the number of trips .\n\n#### How I made this?\n\nThe challenging part is not making the dashboard. Its the preparation of the data required to be feed into the dashboard! Once you you prepare the data making dashboard is just like another BI tool. \n\nFortunately, the only data prepartion here is **Concate** the `lang` and `long` columns itno one coulmn to display it on map.\n\n**From the Limits of Google Maps section of the Google Data Studio Google Maps reference page:\nGoogle Maps won't appear in embedded reports.** \n\nBut you can explore all the dashboard details here:\n\nStand-alone dashboard url:https:\/\/datastudio.google.com\/reporting\/6ddc4bc8-e881-4983-a37f-51e057485122","b011c1b5":"The count, **mean**, **min**, and **max** rows are self-explanatory. Note that the null values are ignored (so, for example, count of rating is `5350`, not `5850`).\nThe std row shows the standard deviation, which measures how dispersed the values are. The 25%, 50%, and 75% rows show the corresponding percentiles: a percentile indicates the value below which a given percentage of observations in a group of observations falls.\nFor example, 25% of the cars have a `rate.daily` lower than 45, while 50% are lower than 69 and 75% are lower than 110. These are often called the 25th percentile (or 1st quartile), the median, and the 75th percentile (or 3rd quartile).","bab61def":"#### Histogram of Rental Car Rating\n","09de1f89":"#### Inspiration\nSome of the answers this dataset can help unwind is:\n\nWhich car makes and models are popular and in which cities\n\nWhat is the typical fare of car rental in various major cities\n\nUsers can also explore if the ratings on the sites have any co-relation or do they appear suspicious as most are close to 5 ratings.","46b1878d":"> ## Dashboard","c3391113":"#### Take a Quick Look at the Data Structure\n\nLet\u2019s take a look at the top five rows using the DataFrame\u2019s head() method","79df7216":"Let\u2019s look at the other fields. The describe() method shows a summary of the\nnumerical attributes","90b0259e":"There are 5851 instances in the dataset, which means that it is fairly small by\nMachine Learning standards, but it\u2019s perfect to get started.\n\nNotice that the `fuelType` attribute has only 5776 non-null values, meaning that 75 car are missing\nthis feature. And `rating` attribute has only 5350 non-null values, meaning that 501 car are missing\nrating from customers\nWe will need to take care of this later.","a292dbdc":"\nWhen you looked at the top five rows, you\nprobably noticed that the values in the `fuelType` column were repetitive,\nwhich means that it is probably a categorical attribute.\nYou can find out what categories\nexist and how many districts belong to each category by using the\nvalue_counts() method:"}}