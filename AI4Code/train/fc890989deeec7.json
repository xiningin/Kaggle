{"cell_type":{"fc8c50ac":"code","0616da82":"code","1482a054":"code","86af634f":"code","807d3fad":"code","fca60c2c":"code","264d4912":"code","419f22c2":"code","ab3b3ce5":"code","3685a137":"code","ded9b12b":"code","31f30fe9":"code","365914ec":"code","deac08a0":"code","2bb5769b":"code","4730acf6":"code","63039c79":"code","2fbffd15":"code","0733678e":"code","8dc4c978":"code","0133dd28":"markdown","13728cfe":"markdown","ae1045fc":"markdown","6c5c394f":"markdown","56a95d28":"markdown","4e1874b5":"markdown","6876ff1a":"markdown","0c7faf38":"markdown","94d54cee":"markdown","6abda4d4":"markdown","01c1a165":"markdown","ec1cf55a":"markdown"},"source":{"fc8c50ac":"import numpy as numpy\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns; sns.set()","0616da82":"data = pd.read_csv(\"..\/input\/mushroom-classification\/mushrooms.csv\")\ndata.head()","1482a054":"data.isnull().sum()","86af634f":"plt.figure(figsize=(6,6))\nsns.countplot(data=data, x=\"class\", palette=[\"#DC0A00\",\"#196F3D\"])","807d3fad":"plt.figure(figsize=(10,5))\nsns.countplot(data=data, x=\"class\", palette=\"viridis\",hue=\"cap-shape\")","fca60c2c":"plt.figure(figsize=(10,5))\nsns.countplot(data=data, x=\"class\", palette=\"viridis\", hue=\"cap-color\")","264d4912":"plt.figure(figsize=(10,5))\nsns.countplot(data=data, x=\"class\", palette=\"viridis\", hue=\"habitat\")","419f22c2":"data.groupby(\"habitat\")[\"class\"].value_counts(normalize=True)[:,\"p\"]*100","ab3b3ce5":"data.dtypes","3685a137":"from sklearn.preprocessing import LabelEncoder\nlabelencoder = LabelEncoder()\nfor i in data.columns:\n    data[i] = labelencoder.fit_transform(data[i])","ded9b12b":"data.head()","31f30fe9":"X = data.drop(\"class\",axis=1)\ny = data[\"class\"]\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)","365914ec":"from sklearn.linear_model import LogisticRegression\nlr = LogisticRegression()\nlr.fit(X_train,y_train)","deac08a0":"lr.score(X_test,y_test)","2bb5769b":"from sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier()\nknn.fit(X_train,y_train)","4730acf6":"knn.score(X_test,y_test)","63039c79":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nrfc = RandomForestClassifier(random_state=0)\nrfc.fit(X_train, y_train)","2fbffd15":"rfc.score(X_test,y_test)","0733678e":"from sklearn.metrics import confusion_matrix\npred = rfc.predict(X_test)\ncm = pd.DataFrame(confusion_matrix(y_test, pred),columns=[\"Predicted Negative\", \"Predicted Positive\"], index=[\"Actual Negative\", \"Actual Positive\"])\nsns.heatmap(cm,annot=True, cmap='summer', fmt=\"d\")","8dc4c978":"from sklearn import tree\nfig = plt.figure(figsize=(25,20))\ntree.plot_tree(rfc.estimators_[7],\n               feature_names = data.columns,\n               class_names = [\"edible\", \"poisonous\"],\n               filled = True,\n               rounded=True,\n               fontsize=10)\nfig.savefig(\"tree.jpg\")","0133dd28":"# Model\n- Logistic Regression\n- K-Nearest Neighbors\n- Random Forest Classification\n","13728cfe":"## Cap Color\nbrown=n,buff=b,cinnamon=c,gray=g,green=r,pink=p,purple=u,red=e,white=w,yellow=y","ae1045fc":"# EDA","6c5c394f":"# Tree Visualization","56a95d28":"Percentages of being poisonuos for each habitat","4e1874b5":"![](https:\/\/i.pinimg.com\/originals\/9d\/de\/0f\/9dde0f62ce65e07aa70644a825933317.jpg)","6876ff1a":"All of the data are categorical, so we will make label encoding","0c7faf38":"## Cap Shape \nbell=b,conical=c,convex=x,flat=f, knobbed=k,sunken=s ","94d54cee":"# Preprocessing","6abda4d4":"## Poisonous vs Edible ","01c1a165":"## Habitat\ngrasses=g,leaves=l,meadows=m,paths=p,urban=u,waste=w,woods=d","ec1cf55a":"# Is it safe to eat or deadly poisonous?\nWe will make a model to predict the mushrooms is poisonous or edible.\nYou can find the data descriptions on [Mushroom Classification](https:\/\/www.kaggle.com\/uciml\/mushroom-classification)."}}