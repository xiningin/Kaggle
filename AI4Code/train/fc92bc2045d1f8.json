{"cell_type":{"92b08108":"code","6cc16610":"code","04629664":"code","6acca110":"code","201bc701":"code","5905e590":"code","741c571e":"code","a3f758da":"code","15b15260":"code","9122c2e9":"code","964607d0":"code","6e740719":"code","b3bbde62":"code","64d7c752":"code","a9acb1a1":"markdown"},"source":{"92b08108":"import pandas as pd\nimport numpy as np\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport random","6cc16610":"df = pd.read_csv(\"..\/input\/lish-moa\/train_features.csv\")\ndf.head()","04629664":"cols_feature = [c for c in df.columns if c not in [\"sig_id\", \"cp_type\", \"cp_time\", \"cp_dose\"]]","6acca110":"target = pd.read_csv(\"..\/input\/lish-moa\/train_targets_scored.csv\")\ntarget","201bc701":"cols_target = [c for c in target.columns if c not in [\"sig_id\"]]","5905e590":"df = pd.merge(df, target, on=\"sig_id\", how=\"inner\")","741c571e":"feature = random.sample(cols_feature, 1)[0]\ntarget = random.sample(cols_target, 1)[0]\nx = df[[\"sig_id\",feature, target]].sort_values(by=feature).reset_index(drop=True)\nx","a3f758da":"vc","15b15260":"vc = x[target].value_counts().to_dict()\nx[\"target_valuecnt\"] = x[target].map(vc)\nx","9122c2e9":"    \ndef show(features, targets):\n    col_num = min( len(features), len(targets))\n\n    title_size = 30\n    label_size = 30\n    fig, axes = plt.subplots(ncols=col_num, figsize=(36, 10), dpi=100, constrained_layout=True)\n\n    for i, (feature, target) in enumerate(zip(features, targets)):\n        x = df[[\"sig_id\",feature, target]].sort_values(by=feature).reset_index(drop=True)\n        vc = x[target].value_counts().to_dict()\n        x[\"target_valuecnt\"] = x[target].map(vc)\n        sns.kdeplot(x[feature].values, ax=axes[i])\n        \n        sns.scatterplot(data= x, x= feature, y=target, color=\"red\" , size=\"target_valuecnt\", ax=axes[i])\n\n        axes[i].set_xlabel('')\n        axes[i].set_ylabel('')\n        axes[i].tick_params(axis='x', labelsize=label_size)\n        axes[i].tick_params(axis='y', labelsize=label_size)\n        axes[i].set_title(f\"{feature} {target}\", size=title_size, pad=title_size)\n    plt.show()\n    \ndef random_show(n_rows=10, n_cols=2):\n    for i in range(n_rows):\n        features = random.sample(cols_feature, n_cols)\n        targets = random.sample(cols_target, n_cols)\n        show(features, targets)\n        \ndef show_feature(n_rows=10, n_cols=2):\n    features = random.sample(cols_feature, 1)*n_cols\n    for i in range(n_rows):\n        targets = random.sample(cols_target, n_cols)\n        show(features, targets)\n\ndef show_target(n_rows=10, n_cols=2):\n    targets = random.sample(cols_target, 1)*n_cols\n    for i in range(n_rows):\n        features = random.sample(cols_feature, n_cols)\n        show(features, targets)","964607d0":"random_show()","6e740719":"show_feature()","b3bbde62":"show_target()","64d7c752":"show_target()","a9acb1a1":"## feature selection is important"}}