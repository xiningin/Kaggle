{"cell_type":{"0b59c199":"code","42b79964":"code","381cef40":"code","07cc6bd6":"code","343802b6":"code","8c7119df":"code","fd93540a":"code","1a27a8c3":"code","0cd6deaa":"code","ad32f124":"code","caf720b2":"code","66437ee1":"markdown","bc8edddd":"markdown","d7dfc535":"markdown"},"source":{"0b59c199":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","42b79964":"#loading packages\nimport numpy as np \nimport pandas as pd \nimport glob\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno as msno","381cef40":"products_df = pd.read_csv(\"..\/input\/learnplatform-covid19-impact-on-digital-learning\/products_info.csv\")\nproducts_df.head()","07cc6bd6":"products_df.info()","343802b6":"districts_df = pd.read_csv(\"..\/input\/learnplatform-covid19-impact-on-digital-learning\/districts_info.csv\")\ndistricts_df.head()","8c7119df":"print(districts_df.shape)\nprint()\nprint(districts_df.info())\nprint(\"+\"*30)\ndistricts_df.isna().sum()#to find nan values present","fd93540a":"path = '..\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data' \nall_files = glob.glob(path + \"\/*.csv\")\n\nli = []\n\nfor filename in all_files:\n    df = pd.read_csv(filename, index_col=None, header=0)\n    district_id = filename.split(\"\/\")[4].split(\".\")[0]\n    df[\"district_id\"] = district_id\n    li.append(df)\n    \nengage_df = pd.concat(li)\nengage_df = engage_df.reset_index(drop=True)\nengage_df.head()","1a27a8c3":"print(engage_df.info())\nprint(\"+\"*30)\nengage_df.isna().sum()","0cd6deaa":"fig, axs = plt.subplots(3, figsize=(15,15))\n\nsns.barplot(ax=axs[0], x=products_df.columns, y=products_df.isnull().sum())\naxs[0].set_title('Missing Values for Products',fontsize=14)\n\nsns.barplot(ax=axs[1], x=districts_df.columns, y=districts_df.isnull().sum())\naxs[1].set_title('Missing Values for Districts',fontsize=14)\n\nsns.barplot(ax=axs[2], x=engage_df.columns, y=engage_df.isnull().sum())\naxs[2].set_title('Missing Values for Engagements',fontsize=14)\n\nplt.show()","ad32f124":"from pandas_profiling import ProfileReport \n\nprofile = ProfileReport(products_df, title='Pandas profiling report ' , html={'style':{'full_width':True}})\n\nprofile.to_notebook_iframe()","caf720b2":"from pandas_profiling import ProfileReport \n\nprofile = ProfileReport(districts_df, title='Pandas profiling report ' , html={'style':{'full_width':True}})\n\nprofile.to_notebook_iframe()","66437ee1":"from pandas_profiling import ProfileReport \n\nprofile = ProfileReport(engage_df, title='Pandas profiling report ' , html={'style':{'full_width':True}})\n\nprofile.to_notebook_iframe()","bc8edddd":"# Profile Report ","d7dfc535":"there are some missing values in Sector(s),Primary Essential Function"}}