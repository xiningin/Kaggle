{"cell_type":{"cf555da3":"code","acf72bcf":"code","8363c871":"code","d5508432":"code","1626fdca":"code","c5d03251":"code","18295edd":"code","a2e54c01":"code","37ee58f9":"code","ae4bc770":"code","43217515":"code","db03a1ac":"code","eec35c82":"code","a0c80a4d":"code","8e1f22e2":"code","040a529e":"code","e0516f38":"code","ff7d0c57":"code","6cff1c31":"markdown","3596e889":"markdown","2fe603f4":"markdown","21de04a4":"markdown","ec271341":"markdown","1604987a":"markdown","bea55587":"markdown","f87f9113":"markdown","d777ed17":"markdown","f0ef2de5":"markdown","7077f8af":"markdown"},"source":{"cf555da3":" !pip install xgboost==0.90","acf72bcf":" !pip install fastai==0.7.0","8363c871":"from fastai.imports import *\nfrom fastai.structured import *\nfrom xgboost import XGBClassifier\nfrom pandas_summary import DataFrameSummary\nfrom IPython.display import display\nimport xgboost as xgb\nfrom sklearn import metrics\nfrom sklearn.metrics import confusion_matrix","d5508432":"PATH = \"\/home\/shivangmathur\/Downloads\/\"","1626fdca":"df_raw = pd.read_csv('..\/input\/WA_Fn-UseC_-HR-Employee-Attrition.csv')","c5d03251":"def display_all(df):\n    with pd.option_context(\"display.max_rows\", 1000, \"display.max_columns\", 1000): \n        display(df)","18295edd":"display_all(df_raw.tail().T)","a2e54c01":"df_raw['DailyRateAge'] = df_raw['DailyRate']\/df_raw['Age']\ndf_raw['PerfomanceReward'] = df_raw['PercentSalaryHike']\/df_raw['PerformanceRating']\ndf_raw['Satisfaction'] = df_raw['EnvironmentSatisfaction']*df_raw['JobSatisfaction']","37ee58f9":"df_raw['Attrition'].value_counts()","ae4bc770":"df_raw.drop('EmployeeNumber',axis=1,inplace=True)","43217515":"train_cats(df_raw)","db03a1ac":"df, y, nas = proc_df(df_raw, 'Attrition',max_n_cat=30)","eec35c82":"def split_vals(a,n): return a[:n].copy(), a[n:].copy()\n\nn_test = 280  \nn_trn = len(df)-n_test\nraw_train, raw_test = split_vals(df_raw, n_trn)\nX_train, X_test = split_vals(df, n_trn)\ny_train, y_test = split_vals(y, n_trn)\nX_train.shape, y_train.shape, X_test.shape\n\n","a0c80a4d":"params = {\n    'booster': 'gbtree', \n    'objective': 'binary:hinge',#egression task\n    'subsample': 0.6,#% of data to grow trees and prevent overfitting\n    'colsample_bytree': 0.7, # 70% of features used\n    'eta': 0.01,'max_depth':8,'eval_metric': 'auc',\n    'seed': 42} # for reproducible results\n\ndtrain = xgb.DMatrix(X_train, y_train)\ndvalid = xgb.DMatrix(X_test,y_test)\n\n\nwatchlist = [(dtrain, 'train')]\n\nxgb_model = xgb.train(params, dtrain,91,evals= watchlist,verbose_eval=True)\n\n","8e1f22e2":"test = xgb.DMatrix(X_test, y_test)\npred_x = xgb_model.predict(test)","040a529e":"confusion_matrix(y_test, pred_x)","e0516f38":"metrics.roc_auc_score(y_test,pred_x)","ff7d0c57":"from matplotlib import pyplot\nfrom xgboost import plot_importance\nfig, ax = plt.subplots(figsize=(12,18))\nxgb.plot_importance(xgb_model, max_num_features=50, height=0.8, ax=ax)\npyplot.show()","6cff1c31":"#### Metrics Used : AUC Score","3596e889":"##### Importing Libraries and reading data","2fe603f4":"#### Feature Importance","21de04a4":"# HR Analytics [Kaggle dataset](https:\/\/www.kaggle.com\/pavansubhasht\/ibm-hr-analytics-attrition-dataset)","ec271341":"#### Getting predictions and evaluating results","1604987a":"#### Creating the model","bea55587":"#### Problem Statement : **Predict if there will be a Attrition or not**","f87f9113":"#### Creating more useful features","d777ed17":"##### Using train_cats and proc_df features of fastai","f0ef2de5":"#### Feature Engineering","7077f8af":"##### Splitting into train and test set"}}