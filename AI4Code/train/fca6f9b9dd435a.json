{"cell_type":{"bc5969e9":"code","a99ba1bb":"code","7bd204b5":"code","30ec024d":"code","3c81761e":"code","4feaa0b5":"code","469610ee":"code","d55d5dd4":"code","0a972071":"code","c8b228ad":"code","a8bc14df":"code","71401bdf":"code","3d63767b":"code","f0597e15":"markdown","d33f5446":"markdown","74363f9f":"markdown","3d7d5f06":"markdown","16e38373":"markdown","8f23b72d":"markdown","c42f62c1":"markdown","210c8965":"markdown","43a4758b":"markdown","61df32f2":"markdown","e598fa07":"markdown"},"source":{"bc5969e9":"import numpy as np \nimport pandas as pd\nimport plotly as py\nimport plotly.graph_objs as go\nimport plotly.express as px\nfrom plotly.offline import init_notebook_mode\ninit_notebook_mode(connected = True)\nimport seaborn as sns\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\npd.set_option('display.max_columns', None)","a99ba1bb":"wh = pd.read_csv('..\/input\/world-happiness-report-2021\/world-happiness-report.csv')\nwh2021 = pd.read_csv('..\/input\/world-happiness-report-2021\/world-happiness-report-2021.csv')","7bd204b5":"wh.head(3)","30ec024d":"wh.info()","3c81761e":"wh2021.head(3)","4feaa0b5":"wh2021.info()","469610ee":"fig = plt.figure(figsize = (16, 18))\n\nplt.subplot(321)\nsns.set_style(\"white\")\nplt.title('GDP per capita', size = 17, y = 1.03, fontname = 'serif')\nplt.grid(color = 'gray', linestyle = ':', axis = 'x', alpha = 0.8, zorder = 0,  dashes = (1,7))\na = sns.kdeplot(wh.query(\"year == 2008\")['Log GDP per capita'], color = '#347373', shade = True, label = '2008', alpha = 0.7)\nplt.axvline(wh.query(\"year == 2008\")['Log GDP per capita'].mean(), linestyle = '--', color = '#347373')\nsns.kdeplot(wh.query(\"year == 2020\")['Log GDP per capita'], color = '#2D3033', shade = True, label = '2020', alpha = 0.7)\nplt.axvline(wh.query(\"year == 2020\")['Log GDP per capita'].mean(), linestyle = '--', color = '#2D3033')\nplt.ylabel('')\nplt.xlabel('')\nplt.xticks(fontname = 'serif')\nplt.yticks([])\nplt.legend(['Mean', 'Mean', '2008', '2020'], bbox_to_anchor = (1.4, 1.2), ncol = 2, borderpad = 3, frameon = False, fontsize = 11)\n\nplt.subplot(322)\nplt.title('Social support', size = 17, y = 1.03, fontname = 'serif')\nplt.grid(color = 'gray', linestyle = ':', axis = 'x', alpha = 0.8, zorder = 0,  dashes = (1,7))\nb = sns.kdeplot(wh.query(\"year == 2008\")['Social support'], color = '#347373', shade = True, alpha = 0.7)\nplt.axvline(wh.query(\"year == 2008\")['Social support'].mean(), linestyle = '--', color = '#347373')\nsns.kdeplot(wh.query(\"year == 2020\")['Social support'], color = '#2D3033', shade = True, alpha = 0.7)\nplt.axvline(wh.query(\"year == 2020\")['Social support'].mean(), linestyle = '--', color = '#2D3033')\nplt.ylabel('')\nplt.xlabel('')\nplt.xticks(fontname = 'serif')\nplt.yticks([])\n\nplt.subplot(323)\nplt.title('Life expectancy', size = 17, y = 1.03, fontname = 'serif')\nplt.grid(color = 'gray', linestyle = ':', axis = 'x', alpha = 0.8, zorder = 0,  dashes = (1,7))\nt = sns.kdeplot(wh.query(\"year == 2008\")['Healthy life expectancy at birth'], color = '#347373', shade = True, alpha = 0.7)\nplt.axvline(wh.query(\"year == 2008\")['Healthy life expectancy at birth'].mean(), linestyle = '--', color = '#347373')\nsns.kdeplot(wh.query(\"year == 2020\")['Healthy life expectancy at birth'], color = '#2D3033', shade = True, alpha = 0.7)\nplt.axvline(wh.query(\"year == 2020\")['Healthy life expectancy at birth'].mean(), linestyle = '--', color = '#2D3033')\nplt.ylabel('')\nplt.xlabel('')\nplt.xticks(fontname = 'serif')\nplt.yticks([])\n\nplt.subplot(324)\nplt.title('Freedom', size = 17, y = 1.03, fontname = 'serif')\nplt.grid(color = 'gray', linestyle = ':', axis = 'x', alpha = 0.8, zorder = 0,  dashes = (1,7))\nd = sns.kdeplot(wh.query(\"year == 2008\")['Freedom to make life choices'], color = '#347373', shade = True, alpha = 0.7)\nplt.axvline(wh.query(\"year == 2008\")['Freedom to make life choices'].mean(), linestyle = '--', color = '#347373')\nsns.kdeplot(wh.query(\"year == 2020\")['Freedom to make life choices'], color = '#2D3033', shade = True, alpha = 0.7)\nplt.axvline(wh.query(\"year == 2020\")['Freedom to make life choices'].mean(), linestyle = '--', color = '#2D3033')\nplt.ylabel('')\nplt.xlabel('')\nplt.xticks(fontname = 'serif')\nplt.yticks([])\n\nplt.subplot(325)\nplt.title('Generosity', size = 17, y = 1.03, fontname = 'serif')\nplt.grid(color = 'gray', linestyle = ':', axis = 'x', alpha = 0.8, zorder = 0,  dashes = (1,7))\ne = sns.kdeplot(wh.query(\"year == 2008\")['Generosity'], color = '#347373', shade = True, alpha = 0.7)\nplt.axvline(wh.query(\"year == 2008\")['Generosity'].mean(), linestyle = '--', color = '#347373')\nsns.kdeplot(wh.query(\"year == 2020\")['Generosity'], color = '#2D3033', shade = True, alpha = 0.7)\nplt.axvline(wh.query(\"year == 2020\")['Generosity'].mean(), linestyle = '--', color = '#2D3033')\nplt.ylabel('')\nplt.xlabel('')\nplt.xticks(fontname = 'serif')\nplt.yticks([])\n\nplt.subplot(326)\nplt.title('Perceptions of corruption', size = 17, y = 1.03, fontname = 'serif')\nplt.grid(color = 'gray', linestyle = ':', axis = 'x', alpha = 0.8, zorder = 0,  dashes = (1,7))\nf = sns.kdeplot(wh.query(\"year == 2008\")['Perceptions of corruption'], color = '#347373', shade = True, alpha = 0.7)\nplt.axvline(wh.query(\"year == 2008\")['Perceptions of corruption'].mean(), linestyle = '--', color = '#347373')\nsns.kdeplot(wh.query(\"year == 2020\")['Perceptions of corruption'], color = '#2D3033', shade = True, alpha = 0.7)\nplt.axvline(wh.query(\"year == 2020\")['Perceptions of corruption'].mean(), linestyle = '--', color = '#2D3033')\nplt.ylabel('')\nplt.xlabel('')\nplt.xticks(fontname = 'serif')\nplt.yticks([])\n\nplt.figtext(0.2, 1.02, 'Global dynamics of all WHR metrics 2008-2020', fontsize = 30, fontname = 'serif')\nplt.figtext(0.01, 0.93, '+6.4%', fontsize = 18, fontname = 'serif')\nplt.figtext(0.93, 0.93, '+7.0%', fontsize = 18, fontname = 'serif')\nplt.figtext(0.01, 0.6, '+9.6%', fontsize = 18, fontname = 'serif')\nplt.figtext(0.92, 0.6, '+18.8%', fontsize = 18, fontname = 'serif')\nplt.figtext(0.01, 0.27, '-137.3%', fontsize = 18, fontname = 'serif')\nplt.figtext(0.94, 0.27, '-7.4%', fontsize = 18, fontname = 'serif')\n\nfor i in [a,b,t,d,e,f]:\n    for j in ['right', 'left', 'top']:\n        i.spines[j].set_visible(False)\n        i.spines['bottom'].set_linewidth(1.5)\n        \nfig.tight_layout(h_pad = 3)\n\nplt.show()","d55d5dd4":"gdp = pd.concat([wh.query(\"year == 2008 & `Log GDP per capita` == `Log GDP per capita`\").sort_values('Log GDP per capita').head(5), \\\n                 wh.query(\"year == 2008 & `Log GDP per capita` == `Log GDP per capita`\").sort_values('Log GDP per capita').tail(5)])\n\ngdp2 = pd.concat([wh.query(\"year == 2020 & `Log GDP per capita` == `Log GDP per capita`\").sort_values('Log GDP per capita').head(5), \\\n                  wh.query(\"year == 2020 & `Log GDP per capita` == `Log GDP per capita`\").sort_values('Log GDP per capita').tail(5)])\n\nss = pd.concat([wh.query(\"year == 2008 & `Social support` == `Social support`\").sort_values('Social support').head(5), \\\n                 wh.query(\"year == 2008 & `Social support` == `Social support`\").sort_values('Social support').tail(5)])\n\nss2 = pd.concat([wh.query(\"year == 2020 & `Social support` == `Social support`\").sort_values('Social support').head(5), \\\n                  wh.query(\"year == 2020 & `Social support` == `Social support`\").sort_values('Social support').tail(5)])\n\nle = pd.concat([wh.query(\"year == 2008 & `Healthy life expectancy at birth` == `Healthy life expectancy at birth`\").sort_values('Healthy life expectancy at birth').head(5), \\\n                 wh.query(\"year == 2008 & `Healthy life expectancy at birth` == `Healthy life expectancy at birth`\").sort_values('Healthy life expectancy at birth').tail(5)])\n\nle2 = pd.concat([wh.query(\"year == 2020 & `Healthy life expectancy at birth` == `Healthy life expectancy at birth`\").sort_values('Healthy life expectancy at birth').head(5), \\\n                  wh.query(\"year == 2020 & `Healthy life expectancy at birth` == `Healthy life expectancy at birth`\").sort_values('Healthy life expectancy at birth').tail(5)])\n\nfr = pd.concat([wh.query(\"year == 2008 & `Freedom to make life choices` == `Freedom to make life choices`\").sort_values('Freedom to make life choices').head(5), \\\n                 wh.query(\"year == 2008 & `Freedom to make life choices` == `Freedom to make life choices`\").sort_values('Freedom to make life choices').tail(5)])\n\nfr2 = pd.concat([wh.query(\"year == 2020 & `Freedom to make life choices` == `Freedom to make life choices`\").sort_values('Freedom to make life choices').head(5), \\\n                  wh.query(\"year == 2020 & `Freedom to make life choices` == `Freedom to make life choices`\").sort_values('Freedom to make life choices').tail(5)])\n\ngen = pd.concat([wh.query(\"year == 2008 & Generosity == Generosity\").sort_values('Generosity').head(5), \\\n                 wh.query(\"year == 2008 & Generosity == Generosity\").sort_values('Generosity').tail(5)])\n\ngen2 = pd.concat([wh.query(\"year == 2020 & Generosity == Generosity\").sort_values('Generosity').head(5), \\\n                  wh.query(\"year == 2020 & Generosity == Generosity\").sort_values('Generosity').tail(5)])\n\ncor = pd.concat([wh.query(\"year == 2008 & `Perceptions of corruption` == `Perceptions of corruption`\").sort_values('Perceptions of corruption').head(5), \\\n                 wh.query(\"year == 2008 & `Perceptions of corruption` == `Perceptions of corruption`\").sort_values('Perceptions of corruption').tail(5)])\n\ncor2 = pd.concat([wh.query(\"year == 2020 & `Perceptions of corruption` == `Perceptions of corruption`\").sort_values('Perceptions of corruption').head(5), \\\n                  wh.query(\"year == 2020 & `Perceptions of corruption` == `Perceptions of corruption`\").sort_values('Perceptions of corruption').tail(5)])","0a972071":"fig = plt.figure(figsize = (15, 40))\n\nplt.subplot(621)\nsns.set_style(\"white\")\nclrs = ['#347373' if x > 9 else '#8c8c89' for x in gdp['Log GDP per capita']]\na = sns.barplot(data = gdp, x = 'Log GDP per capita', y = 'Country name', palette = clrs)\nplt.axhline(4.5, 0, 1, color = '#AA4B41')\nplt.xticks([])\nplt.yticks(fontname = 'serif')\nplt.ylabel('')\nplt.xlabel('')\nfor p in a.patches:\n    width = p.get_width()\n    plt.text(0.6 + p.get_width(), p.get_y() + 0.6*p.get_height(), f'{width: .2f}',\n             ha = 'center', va = 'center', fontname = 'serif')\n    \nplt.subplot(622)\nclrs = ['#347373' if x > 9 else '#8c8c89' for x in gdp2['Log GDP per capita']]\nb = sns.barplot(data = gdp2, x = 'Log GDP per capita', y = 'Country name', palette = clrs)\nplt.axhline(4.5, 0, 1, color = '#AA4B41')\nplt.xticks([])\nplt.yticks(fontname = 'serif')\nplt.ylabel('')\nplt.xlabel('')\nfor p in b.patches:\n    width = p.get_width()\n    plt.text(0.6 + p.get_width(), p.get_y() + 0.6*p.get_height(), f'{width: .2f}',\n             ha = 'center', va = 'center', fontname = 'serif')\n    \nplt.subplot(623)\nclrs = ['#347373' if x > 0.5 else '#8c8c89' for x in ss['Social support']]\nc = sns.barplot(data = ss, x = 'Social support', y = 'Country name', palette = clrs)\nplt.axhline(4.5, 0, 1, color = '#AA4B41')\nplt.xticks([])\nplt.yticks(fontname = 'serif')\nplt.ylabel('')\nplt.xlabel('')\nfor p in c.patches:\n    width = p.get_width()\n    plt.text(0.05 + p.get_width(), p.get_y() + 0.6*p.get_height(), f'{width: .2f}',\n             ha = 'center', va = 'center', fontname = 'serif')\n    \nplt.subplot(624)\nclrs = ['#347373' if x > 0.7 else '#8c8c89' for x in ss2['Social support']]\nd = sns.barplot(data = ss2, x = 'Social support', y = 'Country name', palette = clrs)\nplt.axhline(4.5, 0, 1, color = '#AA4B41')\nplt.xticks([])\nplt.yticks(fontname = 'serif')\nplt.ylabel('')\nplt.xlabel('')\nfor p in d.patches:\n    width = p.get_width()\n    plt.text(0.05 + p.get_width(), p.get_y() + 0.6*p.get_height(), f'{width: .2f}',\n             ha = 'center', va = 'center', fontname = 'serif')    \n    \nplt.subplot(625)\nclrs = ['#347373' if x > 50 else '#8c8c89' for x in le['Healthy life expectancy at birth']]\ne = sns.barplot(data = le, x = 'Healthy life expectancy at birth', y = 'Country name', palette = clrs)\nplt.axhline(4.5, 0, 1, color = '#AA4B41')\nplt.xticks([])\nplt.yticks(fontname = 'serif')\nplt.ylabel('')\nplt.xlabel('')\nfor p in e.patches:\n    width = p.get_width()\n    plt.text(4 + p.get_width(), p.get_y() + 0.6*p.get_height(), f'{width: .2f}',\n             ha = 'center', va = 'center', fontname = 'serif')\n    \nplt.subplot(626)\nclrs = ['#347373' if x > 60 else '#8c8c89' for x in le2['Healthy life expectancy at birth']]\nf = sns.barplot(data = le2, x = 'Healthy life expectancy at birth', y = 'Country name', palette = clrs)\nplt.axhline(4.5, 0, 1, color = '#AA4B41')\nplt.xticks([])\nplt.yticks(fontname = 'serif')\nplt.ylabel('')\nplt.xlabel('')\nfor p in f.patches:\n    width = p.get_width()\n    plt.text(4 + p.get_width(), p.get_y() + 0.6*p.get_height(), f'{width: .2f}',\n             ha = 'center', va = 'center', fontname = 'serif')\n    \nplt.subplot(627)\nclrs = ['#347373' if x > 0.5 else '#8c8c89' for x in fr['Freedom to make life choices']]\ng = sns.barplot(data = fr, x = 'Freedom to make life choices', y = 'Country name', palette = clrs)\nplt.axhline(4.5, 0, 1, color = '#AA4B41')\nplt.xticks([])\nplt.yticks(fontname = 'serif')\nplt.ylabel('')\nplt.xlabel('')\nfor p in g.patches:\n    width = p.get_width()\n    plt.text(0.04 + p.get_width(), p.get_y() + 0.6*p.get_height(), f'{width: .2f}',\n             ha = 'center', va = 'center', fontname = 'serif')\n    \nplt.subplot(628)\nclrs = ['#347373' if x > 0.7 else '#8c8c89' for x in fr2['Freedom to make life choices']]\nh = sns.barplot(data = fr2, x = 'Freedom to make life choices', y = 'Country name', palette = clrs)\nplt.axhline(4.5, 0, 1, color = '#AA4B41')\nplt.xticks([])\nplt.yticks(fontname = 'serif')\nplt.ylabel('')\nplt.xlabel('')\nfor p in h.patches:\n    width = p.get_width()\n    plt.text(0.04 + p.get_width(), p.get_y() + 0.6*p.get_height(), f'{width: .2f}',\n             ha = 'center', va = 'center', fontname = 'serif')\n    \nplt.subplot(629)\nclrs = ['#347373' if x > 0 else '#8c8c89' for x in gen['Generosity']]\ni = sns.barplot(data = gen, x = 'Generosity', y = 'Country name', palette = clrs)\nplt.axhline(4.5, 0, 1, color = '#AA4B41')\nplt.xticks([])\nplt.yticks(fontname = 'serif')\nplt.ylabel('')\nplt.xlabel('')\nfor p in i.patches:\n    width = p.get_width()\n    plt.text(0.035 + p.get_width(), p.get_y() + 0.6*p.get_height(), f'{width: .2f}',\n             ha = 'center', va = 'center', fontname = 'serif')\n    \nplt.subplot(6,2,10)\nclrs = ['#347373' if x > 0 else '#8c8c89' for x in gen2['Generosity']]\nj = sns.barplot(data = gen2, x = 'Generosity', y = 'Country name', palette = clrs)\nplt.axhline(4.5, 0, 1, color = '#AA4B41')\nplt.xticks([])\nplt.yticks(fontname = 'serif')\nplt.ylabel('')\nplt.xlabel('')\nfor p in j.patches:\n    width = p.get_width()\n    plt.text(0.035 + p.get_width(), p.get_y() + 0.6*p.get_height(), f'{width: .2f}',\n             ha = 'center', va = 'center', fontname = 'serif')\n    \nplt.subplot(6,2,11)\nclrs = ['#347373' if x < 0.4 else '#8c8c89' for x in cor['Perceptions of corruption']]\nk = sns.barplot(data = cor, x = 'Perceptions of corruption', y = 'Country name', palette = clrs)\nplt.axhline(4.5, 0, 1, color = '#AA4B41')\nplt.xticks([])\nplt.yticks(fontname = 'serif')\nplt.ylabel('')\nplt.xlabel('')\nfor p in k.patches:\n    width = p.get_width()\n    plt.text(0.04 + p.get_width(), p.get_y() + 0.6*p.get_height(), f'{width: .2f}',\n             ha = 'center', va = 'center', fontname = 'serif')\n    \nplt.subplot(6,2,12)\nclrs = ['#347373' if x < 0.4 else '#8c8c89' for x in cor2['Perceptions of corruption']]\nl = sns.barplot(data = cor2, x = 'Perceptions of corruption', y = 'Country name', palette = clrs)\nplt.axhline(4.5, 0, 1, color = '#AA4B41')\nplt.xticks([])\nplt.yticks(fontname = 'serif')\nplt.ylabel('')\nplt.xlabel('')\nfor p in l.patches:\n    width = p.get_width()\n    plt.text(0.04 + p.get_width(), p.get_y() + 0.6*p.get_height(), f'{width: .2f}',\n             ha = 'center', va = 'center', fontname = 'serif')\n    \nfor q in [a,b,c,d,e,f,g,h,i,j,k,l]:\n    q.tick_params(labelsize = 12)\n    q.spines['left'].set_linewidth(1.5)\n    for w in ['right', 'top', 'bottom']:\n        q.spines[w].set_visible(False)\n        \n        \nplt.figtext(0.25, 1.02, '2008', fontsize = 28, fontname = 'serif')\nplt.figtext(0.73, 1.02, '2020', fontsize = 28, fontname = 'serif')  \nplt.figtext(0.45, 0.995, 'GDP per capita', fontsize = 25, fontname = 'serif')\nplt.figtext(0.45, 0.825, 'Social support', fontsize = 25, fontname = 'serif') \nplt.figtext(0.45, 0.66, 'Life expectancy', fontsize = 25, fontname = 'serif')  \nplt.figtext(0.49, 0.49, 'Freedom', fontsize = 25, fontname = 'serif')  \nplt.figtext(0.49, 0.32, 'Generosity', fontsize = 25, fontname = 'serif')  \nplt.figtext(0.4, 0.155, 'Perceptions of corruption', fontsize = 25, fontname = 'serif')\nplt.figtext(0.16, 1.06, 'Best', color = '#347373', fontsize = 38, fontname = 'serif')\nplt.figtext(0.25, 1.06, 'and', fontsize = 38, fontname = 'serif')\nplt.figtext(0.327, 1.06, 'worst', color = '#8c8c89', fontsize = 38, fontname = 'serif')\nplt.figtext(0.44, 1.06, 'countries by every metric', fontsize = 38, fontname = 'serif')\n    \nfig.tight_layout(pad = 5, h_pad = 15)\n\nplt.show()","c8b228ad":"happy_reg = wh2021.groupby('Regional indicator').agg({'Ladder score': 'mean'}).sort_values('Ladder score').reset_index()\nhappy_coun = pd.concat([wh2021.sort_values('Ladder score').head(5), wh2021.sort_values('Ladder score').tail(5)])\n\nfig = plt.figure(figsize = (12, 15))\n\nplt.subplot(211)\nsns.set_style(\"white\")\nplt.title('The happiness of regions', fontname = 'serif', fontsize = 25, y = 1.05)\nclrs = ['#347373' if x > 5.5 else '#8c8c89' for x in happy_reg['Ladder score']]\na = sns.barplot(data = happy_reg, x = 'Ladder score', y = 'Regional indicator', palette = clrs)\nplt.axhline(4.5, 0, 1, color = '#AA4B41')\nplt.xticks([])\nplt.yticks(fontname = 'serif')\nplt.ylabel('')\nplt.xlabel('')\nfor p in a.patches:\n    width = p.get_width()\n    plt.text(0.2 + p.get_width(), p.get_y() + 0.6*p.get_height(), f'{width: .2f}',\n             ha = 'center', va = 'center', fontname = 'serif', fontsize = 12)\n    \nplt.subplot(212)\nplt.title('The happiest and unhappiest countries', fontname = 'serif', fontsize = 25, y = 1.05)\nclrs = ['#347373' if x > 4 else '#8c8c89' for x in happy_coun['Ladder score']]\nb = sns.barplot(data = happy_coun, x = 'Ladder score', y = 'Country name', palette = clrs)\nplt.axhline(4.525, 0, 1, color = '#AA4B41')\nplt.xticks([])\nplt.yticks(fontname = 'serif')\nplt.ylabel('')\nplt.xlabel('')\nfor p in b.patches:\n    width = p.get_width()\n    plt.text(0.2 + p.get_width(), p.get_y() + 0.6*p.get_height(), f'{width: .2f}',\n             ha = 'center', va = 'center', fontname = 'serif', fontsize = 12)\n\nfor i in [a,b]:\n    i.tick_params(labelsize = 14)\n    i.spines['left'].set_linewidth(1.5)\n    for j in ['right', 'top', 'bottom']:\n        i.spines[j].set_visible(False)\n        \nfig.tight_layout(h_pad = 10)\n\nplt.show()","a8bc14df":"wh['Regional indicator'] = 'u'\nfor i in range(len(wh)):\n    for j in range(len(wh2021)):\n        if wh.iloc[i,0] == wh2021.iloc[j,0]:\n            wh.iloc[i,11] = wh2021.iloc[j,1]\n\nhappy_reg_2021 = wh2021.groupby('Regional indicator').agg({'Ladder score': 'mean'}).reset_index()\nhappy_reg_2021['year'] = 2021\n\nhappy_reg_dynamics = wh.query(\"`Regional indicator` != 'u'\").groupby('Regional indicator').agg({'Life Ladder': 'mean'}).rename(columns = {'Life Ladder': 'Ladder score'}).reset_index()\nhappy_reg_dynamics['year'] = 2008\nhappy_reg_dynamics = pd.concat([happy_reg_dynamics, happy_reg_2021], ignore_index = True)","71401bdf":"regions = happy_reg_2021['Regional indicator'].to_list()\n\nfig, ax = plt.subplots(1, figsize = (15,15))\nfor i in regions:\n    reg = happy_reg_dynamics[happy_reg_dynamics['Regional indicator'] == i]\n    reg.index = range(2)\n    color = '#347373' if reg.iloc[1,1] > reg.iloc[0,1] else '#8c8c89'\n    plt.plot(reg['year'], reg['Ladder score'], marker = 'o', markersize = 7, linewidth = 3, color = color)\n    plt.text(reg['year'].values[0]-0.4, reg['Ladder score'].values[0]-0.015, i, ha = 'right', fontname = 'serif', fontsize = 12)\n    plt.text(reg['year'].values[1]+1.8, reg['Ladder score'].values[1]-0.015, str(round((reg.iloc[1,1]*100\/reg.iloc[0,1]) - 100, 1)) + '%'\n             , ha='right', fontname = 'serif', fontsize = 12, color = color)\n       \nax.vlines(x = 2008, ymin = 4, ymax = 7.5, color = 'black', alpha = 0.5, linewidth = 2, linestyles = ':')\nax.vlines(x = 2021, ymin = 4, ymax = 7.5, color = 'black', alpha = 0.5, linewidth = 2, linestyles = ':')   \n\nfor i in ['right', 'left', 'bottom', 'top']:\n    ax.spines[i].set_visible(False)\n\nplt.xlim(1998.5,2030.5)\nplt.yticks(fontsize = 12, fontname = 'serif')\nplt.xticks([2008, 2021], fontsize = 20, fontname = 'serif')\n\nplt.grid(color = 'gray', linestyle = ':', axis = 'y', alpha = 0.7, zorder = 0,  dashes = (1,7))\n\nplt.figtext(0.23, 0.91, 'Dynamics of the ladder score by regions', color = 'black', fontsize = 28, fontname = 'serif')\n\nplt.show()","3d63767b":"fig = plt.figure(figsize = (16, 16))\n\nplt.subplot(321)\nsns.set_style(\"white\")\nplt.title('GDP per capita', size = 17, y = 1.03, fontname = 'serif')\nplt.grid(color = 'gray', linestyle = ':', axis = 'x', alpha = 0.8, zorder = 0,  dashes = (1,7))\na = sns.lineplot(data = wh.query(\"`Country name` == 'United States' & year >= 2010\"), x = 'year', y = 'Log GDP per capita', color = '#347373', linewidth = 3)\nsns.scatterplot(data = wh.query(\"`Country name` == 'United States' & year >= 2010\"), x = 'year', y = 'Log GDP per capita', color = '#347373', s = 60)\nsns.lineplot(data = wh.query(\"`Country name` == 'Russia' & year >= 2010\"), x = 'year', y = 'Log GDP per capita', color = '#8c8c89', linewidth = 3)\nsns.scatterplot(data = wh.query(\"`Country name` == 'Russia' & year >= 2010\"), x = 'year', y = 'Log GDP per capita', color = '#8c8c89', s = 60)\nplt.legend(['USA', 'Russia'], bbox_to_anchor = (1, 1.2), ncol = 1, borderpad = 3, frameon = False, fontsize = 15)\nplt.xticks(range(2010, 2021, 1), fontname = 'serif')\nplt.yticks(fontname = 'serif')\nplt.ylabel('')\nplt.xlabel('')\n\n\nplt.subplot(322)\nplt.title('Social support', size = 17, y = 1.03, fontname = 'serif')\nplt.grid(color = 'gray', linestyle = ':', axis = 'x', alpha = 0.8, zorder = 0,  dashes = (1,7))\nb = sns.lineplot(data = wh.query(\"`Country name` == 'United States' & year >= 2010\"), x = 'year', y = 'Social support', color = '#347373', linewidth = 3)\nsns.scatterplot(data = wh.query(\"`Country name` == 'United States' & year >= 2010\"), x = 'year', y = 'Social support', color = '#347373', s = 60)\nsns.lineplot(data = wh.query(\"`Country name` == 'Russia' & year >= 2010\"), x = 'year', y = 'Social support', color = '#8c8c89', linewidth = 3)\nsns.scatterplot(data = wh.query(\"`Country name` == 'Russia' & year >= 2010\"), x = 'year', y = 'Social support', color = '#8c8c89', s = 60)\nplt.xticks(range(2010, 2021, 1), fontname = 'serif')\nplt.yticks(fontname = 'serif')\nplt.ylabel('')\nplt.xlabel('')\n\nplt.subplot(323)\nplt.title('Life expectancy', size = 17, y = 1.03, fontname = 'serif')\nplt.grid(color = 'gray', linestyle = ':', axis = 'x', alpha = 0.8, zorder = 0,  dashes = (1,7))\nc = sns.lineplot(data = wh.query(\"`Country name` == 'United States' & year >= 2010\"), x = 'year', y = 'Healthy life expectancy at birth', color = '#347373', linewidth = 3)\nsns.scatterplot(data = wh.query(\"`Country name` == 'United States' & year >= 2010\"), x = 'year', y = 'Healthy life expectancy at birth', color = '#347373', s = 60)\nsns.lineplot(data = wh.query(\"`Country name` == 'Russia' & year >= 2010\"), x = 'year', y = 'Healthy life expectancy at birth', color = '#8c8c89', linewidth = 3)\nsns.scatterplot(data = wh.query(\"`Country name` == 'Russia' & year >= 2010\"), x = 'year', y = 'Healthy life expectancy at birth', color = '#8c8c89', s = 60)\nplt.xticks(range(2010, 2021, 1), fontname = 'serif')\nplt.yticks(fontname = 'serif')\nplt.ylabel('')\nplt.xlabel('')\n\nplt.subplot(324)\nplt.title('Generosity', size = 17, y = 1.03, fontname = 'serif')\nplt.grid(color = 'gray', linestyle = ':', axis = 'x', alpha = 0.8, zorder = 0,  dashes = (1,7))\nd = sns.lineplot(data = wh.query(\"`Country name` == 'United States' & year >= 2010\"), x = 'year', y = 'Generosity', color = '#347373', linewidth = 3)\nsns.scatterplot(data = wh.query(\"`Country name` == 'United States' & year >= 2010\"), x = 'year', y = 'Generosity', color = '#347373', s = 60)\nsns.lineplot(data = wh.query(\"`Country name` == 'Russia' & year >= 2010\"), x = 'year', y = 'Generosity', color = '#8c8c89', linewidth = 3)\nsns.scatterplot(data = wh.query(\"`Country name` == 'Russia' & year >= 2010\"), x = 'year', y = 'Generosity', color = '#8c8c89', s = 60)\nplt.xticks(range(2010, 2021, 1), fontname = 'serif')\nplt.yticks(fontname = 'serif')\nplt.ylabel('')\nplt.xlabel('')\n\nplt.subplot(325)\nplt.title('Freedom', size = 17, y = 1.03, fontname = 'serif')\nplt.grid(color = 'gray', linestyle = ':', axis = 'x', alpha = 0.8, zorder = 0,  dashes = (1,7))\ne = sns.lineplot(data = wh.query(\"`Country name` == 'United States' & year >= 2010\"), x = 'year', y = 'Freedom to make life choices', color = '#347373', linewidth = 3)\nsns.scatterplot(data = wh.query(\"`Country name` == 'United States' & year >= 2010\"), x = 'year', y = 'Freedom to make life choices', color = '#347373', s = 60)\nsns.lineplot(data = wh.query(\"`Country name` == 'Russia' & year >= 2010\"), x = 'year', y = 'Freedom to make life choices', color = '#8c8c89', linewidth = 3)\nsns.scatterplot(data = wh.query(\"`Country name` == 'Russia' & year >= 2010\"), x = 'year', y = 'Freedom to make life choices', color = '#8c8c89', s = 60)\nplt.xticks(range(2010, 2021, 1), fontname = 'serif')\nplt.yticks(fontname = 'serif')\nplt.ylabel('')\nplt.xlabel('')\n\nplt.subplot(326)\nplt.title('Perceptions of corruption', size = 17, y = 1.03, fontname = 'serif')\nplt.grid(color = 'gray', linestyle = ':', axis = 'x', alpha = 0.8, zorder = 0,  dashes = (1,7))\nf = sns.lineplot(data = wh.query(\"`Country name` == 'United States' & year >= 2010\"), x = 'year', y = 'Perceptions of corruption', color = '#347373', linewidth = 3)\nsns.scatterplot(data = wh.query(\"`Country name` == 'United States' & year >= 2010\"), x = 'year', y = 'Perceptions of corruption', color = '#347373', s = 60)\nsns.lineplot(data = wh.query(\"`Country name` == 'Russia' & year >= 2010\"), x = 'year', y = 'Perceptions of corruption', color = '#8c8c89', linewidth = 3)\nsns.scatterplot(data = wh.query(\"`Country name` == 'Russia' & year >= 2010\"), x = 'year', y = 'Perceptions of corruption', color = '#8c8c89', s = 60)\nplt.xticks(range(2010, 2021, 1), fontname = 'serif')\nplt.yticks(fontname = 'serif')\nplt.ylabel('')\nplt.xlabel('')\n\nfor i in [a,b,c,d,e,f]:\n    for j in ['right', 'top']:\n        i.spines[j].set_visible(False)\n    for k in ['left', 'bottom']:\n        i.spines[k].set_linewidth(1.5)\n        \nfor i in [a,b,c,d,e,f]:\n    i.tick_params(labelsize = 11)\n    \nplt.figtext(0.33, 1, 'WHR metrics RUSSIA vs USA', fontsize = 30, fontname = 'serif')\nplt.figtext(0.355, 0.89, '+0.9%', fontsize = 18, fontname = 'serif', color = '#347373')\nplt.figtext(0.355, 0.73, '+0.7%', fontsize = 18, fontname = 'serif', color = '#8c8c89')\nplt.figtext(0.9, 0.92, '+1.2%', fontsize = 18, fontname = 'serif', color = '#347373')\nplt.figtext(0.91, 0.72, '-2.4%', fontsize = 18, fontname = 'serif', color = '#8c8c89')\nplt.figtext(0.36, 0.6, '-0.9%', fontsize = 18, fontname = 'serif', color = '#347373')\nplt.figtext(0.36, 0.46, '+6.7%', fontsize = 18, fontname = 'serif', color = '#8c8c89')\nplt.figtext(0.91, 0.56, '-86.1%', fontsize = 18, fontname = 'serif', color = '#347373')\nplt.figtext(0.91, 0.42, '+76.0%', fontsize = 18, fontname = 'serif', color = '#8c8c89')\nplt.figtext(0.36, 0.28, '+2.7%', fontsize = 18, fontname = 'serif', color = '#347373')\nplt.figtext(0.35, 0.16, '+16.5%', fontsize = 18, fontname = 'serif', color = '#8c8c89')\nplt.figtext(0.93, 0.09, '-1.7%', fontsize = 18, fontname = 'serif', color = '#347373')\nplt.figtext(0.92, 0.22, '-12.2%', fontsize = 18, fontname = 'serif', color = '#8c8c89')\n\nfig.tight_layout(pad = 3)\n\nplt.show()","f0597e15":"****\n**What wants to note:**\n\nI very much hope and believe in the independence of data collection by sociological organizations and others, because for me, a person living in Russia, it is ridiculous to observe a perfect direct dependence between years and average life expectancy. \n\nIt is strangely how generous Russia is becoming while the United States is not. \n\nThe feeling of freedom is a relative concept. In Russia, the remnants of the USSR have not disappeared, and in the United States, the FBI can get all the information about a person with one click. Of course, we are all free in our actions, as the Russian revolutionary Mikhail Bakunin said: \"Your freedom ends where the freedom of another begins.\" However, do not forget that we are under strong control and with the development of technology it will only become harder to hide something (even if it is within the law).\n\nOf course I am happy with the decrease in people's perception of corruption. I don't know what the real situation is with corruption in USA, but in Russia it is still a huge problem.\n****","d33f5446":"****\n**The World Happiness Report** is a publication of the United Nations Sustainable Development Solutions Network. It contains articles and rankings of national happiness, based on respondent ratings of their own lives, which the report also correlates with various (quality of) life factors.\n\nIn July 2011, the UN General Assembly adopted resolution 65\/309 Happiness: Towards a Holistic Definition of Development inviting member countries to measure the happiness of their people and to use the data to help guide public policy. On April 2, 2012, this was followed by the first UN High Level Meeting called Wellbeing and Happiness: Defining a New Economic Paradigm, which was chaired by UN Secretary General Ban Ki-moon and Prime Minister Jigmi Thinley of Bhutan, a nation that adopted gross national happiness instead of gross domestic product as their main development indicator.\n\nThe first World Happiness Report was released on April 1, 2012 as a foundational text for the UN High Level Meeting: Well-being and Happiness: Defining a New Economic Paradigm, drawing international attention. The first report outlined the state of world happiness, causes of happiness and misery, and policy implications highlighted by case studies. In 2013, the second World Happiness Report was issued, and in 2015 the third. Since 2016, it has been issued on an annual basis on the 20th of March, to coincide with the UN's International Day of Happiness.\n****","74363f9f":"# The happiest and unhappiest regions and countries in 2021","3d7d5f06":"# End","16e38373":"****\n**Why this situation has developed?**\n\nCurrently, Africa presents almost the entire palette of threats that humanity faces at the beginning of the XXI century: inter-State and civil wars, inter-ethnic clashes, famine, drug production and export, epidemics of deadly diseases, including AIDS (the highest level in the world), acute socio-demographic problems, uncontrolled refugee flows.\n\nThe main problem that worries the South Asian states is unemployment and the low standard of living of a significant part of the population. A strong overpopulation is also big problem. In addition to these ailments, the countries of South Asia suffer from hunger and lack of clean drinking water.\n****","8f23b72d":"****\n**GDP.**\nGDP growth is the main indicator of any country's economic growth. Over 12 years, the average growth rate was 6.4%.\n**Social support.**\nSocial suport - activities carried out by social protection organizations in order to implement social policy, aimed at providing assistance to certain categories of citizens in accordance with legislative and legal acts. Social support also includes people's relationships and their willingness to help each other. There is an increase in the average indicator by 7%.\n**Life expectancy.**\nLife expectancy is a controversial metric, since it is affected by too many factors, many of which are independent of the state, however, with the development of science and medicine, the average life expectancy of the world population has increased by 9.6%.\n**Freedom to make life choices.**\nIt is not surprising that the growth of the freedom of action indicator in the world increased by 18.8%. With the advent and development of the Internet, it is not so easy for the state to play its own game. Of course, there are still countries in which the rule \"everything that is not allowed is prohibited\" works, however, in most countries is the rule \"everything that is not prohibited is allowed\".\n**Generosity.**\nIt is strange, but the generosity of people around the world has decreased.\n**Perceptions of corruption.**\nA decrease of poeple's perceptions of corruption is a good sign. In addition, this indicator is not only an indicator of how people feel about corruption, but also how often they encounter it.\n****","c42f62c1":"# Global dynamics of all WHR metrics from 2008 to 2020","210c8965":"# Basic information","43a4758b":"![](https:\/\/psv4.userapi.com\/c536236\/u178734482\/docs\/d7\/590f63e7aabc\/world-happiness-report.png?extra=V9IyMJJLR8pTYasG1IlT1yMGYxLRG5cKDUwoWbPOqgHwTJzoulkHryHnL-Ur6DVVNoDJqV2LRna5tMkwW1K0TfeXlc2vCdq_iz3P3Buw3REsiRsiehoFBoMJU14T4VlXMsLyD7QYhlI79bKU3KmN_qcc)","61df32f2":"# Best and worst countries by every metric 2008-2020","e598fa07":"# Dynamics of all WHR metrics from 2010 to 2020 in Russia and USA"}}