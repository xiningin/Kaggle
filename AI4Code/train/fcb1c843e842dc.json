{"cell_type":{"e83ff656":"code","d6548f2e":"code","429bfaa5":"code","42999cfc":"code","d08f81a4":"code","3b6e8825":"code","64b4437e":"code","485d0385":"code","e571f7a2":"code","fe2b1e36":"code","3c513cfe":"code","cacde552":"code","49f30723":"code","47698452":"code","ef7d0e99":"markdown","59ce7133":"markdown","e2ef2c78":"markdown","11333334":"markdown"},"source":{"e83ff656":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nfrom tensorflow import keras\nfrom keras import Sequential\nfrom tensorflow.keras.layers import Flatten, Dense\n","d6548f2e":"data = keras.datasets.mnist","429bfaa5":"(train_images, train_labels), (test_images, test_labels) = data.load_data()","42999cfc":"train_images.shape, train_labels.shape, test_images.shape, test_labels.shape","d08f81a4":"plt.imshow(train_images[0])","3b6e8825":"train_images = train_images \/ 255.0\ntest_images  = test_images  \/ 255.0","64b4437e":"model = Sequential()\nmodel.add(Flatten(input_shape = (28,28)))\nmodel.add(Dense(128, activation = 'relu'))\nmodel.add(Dense(10 , activation = 'softmax'))","485d0385":"model.compile(\n                  optimizer = 'adam',\n                  loss      = 'sparse_categorical_crossentropy',\n                  metrics   = ['accuracy']\n             )","e571f7a2":"model.fit(train_images, train_labels, epochs = 10, validation_data = (test_images, test_labels))","fe2b1e36":"prediction = model.predict(test_images)","3c513cfe":"prediction[0]","cacde552":"np.argmax(prediction[0])","49f30723":"test_labels[0]","47698452":"plt.figure(figsize=(10,10))\nfor i in range(25):\n    plt.subplot(5,10,i+1)\n    plt.xticks([])\n    plt.yticks([])\n    plt.grid(False)\n    plt.imshow(test_images[i])\n    plt.title(test_labels[i])\n    plt.xlabel(np.argmax(prediction[i]))\nplt.show()","ef7d0e99":"Splitting Data into training and testing.","59ce7133":"### **Building Model**","e2ef2c78":"### **Data Preprocessing**\n\n*Normalizing Data*","11333334":"### **Importing MNIST Dataset from keras**"}}