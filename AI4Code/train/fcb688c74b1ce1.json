{"cell_type":{"49984f50":"code","d225c772":"code","e5ce489e":"code","fbec61ef":"code","d1f44f11":"code","49069fd9":"code","52523778":"code","385b2ca9":"code","4ce958c4":"code","ed54cf00":"code","537c96e7":"code","a8b8fc22":"code","c9ed88ea":"code","b59cc486":"code","5b431fdc":"code","5f0ff09e":"code","06dd7839":"code","d3efb607":"code","aad2b9f1":"code","0c81b3fd":"code","e21eb412":"code","427094dd":"code","6f4e9e54":"code","e5e2d225":"code","2f631139":"code","2e416251":"code","f72406fd":"code","305a45c6":"code","720dec99":"code","5b21edce":"code","0e501cf0":"code","fc67bc48":"code","d74bbbe3":"code","38fc0e9a":"code","0f80d0f6":"code","7ef4be33":"code","e58dd469":"code","d75df3ce":"markdown","77889869":"markdown","4c34b01e":"markdown","a53f00ef":"markdown","b19b3e57":"markdown","28bbfc79":"markdown","dcac4231":"markdown"},"source":{"49984f50":"import cv2 \nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","d225c772":"img_rainy = plt.imread(\"..\/input\/changed-views\/test1.jpg\")\nimg_original = plt.imread(\"..\/input\/original\/bulk-cargo-ship-under-port-crane-picture-id625376386 - Copy.jpg\")\nimg_foggy = plt.imread(\"..\/input\/changed-views\/test6.jpg\")\nimg_broken = plt.imread(\"..\/input\/changed-views\/test2.jpg\")","e5ce489e":"print(\"The shape of the original image \", img_original.shape)\nprint(\"The shape of the rainy image \", img_rainy.shape)\nprint(\"The shape of the foggy image \", img_foggy.shape)\nprint(\"The shape of the broken image \", img_broken.shape)","fbec61ef":"train = [\"..\/input\/changed-views\/test1.jpg\",\"..\/input\/original\/bulk-cargo-ship-under-port-crane-picture-id625376386 - Copy.jpg\",\"..\/input\/changed-views\/test6.jpg\",\"..\/input\/changed-views\/test2.jpg\"]\nfor i in range(4):\n    # define subplot\n\n    plt.subplot(2, 2, 1 + i)\n    # turn off axis\n    plt.axis('off')\n    # plot raw pixel data\n    plt.imshow(plt.imread(train[i]), cmap='gray_r')\n    \nplt.show()","d1f44f11":"import numpy as np\nfrom skimage.io import imread, imshow\nfrom skimage.filters import prewitt_h,prewitt_v\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n#reading the image \nimage = imread('..\/input\/original\/bulk-cargo-ship-under-port-crane-picture-id625376386 - Copy.jpg',as_gray=True)\n\n#calculating horizontal edges using prewitt kernel\nedges_prewitt_horizontal = prewitt_h(image)\n#calculating vertical edges using prewitt kernel\nedges_prewitt_vertical = prewitt_v(image)\n\nimshow(edges_prewitt_vertical, cmap='gray')","49069fd9":"image = imread('..\/input\/changed-views\/test1.jpg',as_gray=True)\n#calculating horizontal edges using prewitt kernel\nedges_prewitt_horizontal = prewitt_h(image)\n#calculating vertical edges using prewitt kernel\nedges_prewitt_vertical = prewitt_v(image)\n\nimshow(edges_prewitt_vertical, cmap='gray')","52523778":"image = imread('..\/input\/changed-views\/test6.jpg',as_gray=True)\n#calculating horizontal edges using prewitt kernel\nedges_prewitt_horizontal = prewitt_h(image)\n#calculating vertical edges using prewitt kernel\nedges_prewitt_vertical = prewitt_v(image)\n\nimshow(edges_prewitt_vertical, cmap='gray')","385b2ca9":"image = imread('..\/input\/changed-views\/test2.jpg',as_gray=True)\n#calculating horizontal edges using prewitt kernel\nedges_prewitt_horizontal = prewitt_h(image)\n#calculating vertical edges using prewitt kernel\nedges_prewitt_vertical = prewitt_v(image)\n\nimshow(edges_prewitt_vertical, cmap='gray')\n","4ce958c4":"blue,green,red = cv2.split(img_original)\n# Plotting the images\nfig = plt.figure(figsize = (15, 7.2)) \nfig.add_subplot(131)\nplt.title(\"Blue Channel\")\nplt.imshow(blue)\nfig.add_subplot(132)\nplt.title(\"Green Channel\")\nplt.imshow(green)\nfig.add_subplot(133)\nplt.title(\"Red Channel\")\nplt.imshow(red)\nplt.show()","ed54cf00":"blue_temp_df = pd.DataFrame(data = blue)\/255\ngreen_temp_df = pd.DataFrame(data = green)\/255\nred_temp_df = pd.DataFrame(data = red)\/255\nblue_temp_df","537c96e7":"from sklearn.decomposition import PCA\n#original Image pd.DataFrame\npca_b = PCA(n_components=50)\npca_b.fit(blue_temp_df)\ntrans_pca_b = pca_b.transform(blue_temp_df)\npca_g = PCA(n_components=50)\npca_g.fit(green_temp_df )\ntrans_pca_g = pca_g.transform(green_temp_df )\npca_r = PCA(n_components=50)\npca_r.fit(red_temp_df)\ntrans_pca_r = pca_r.transform(red_temp_df)","a8b8fc22":"print(trans_pca_b.shape)\nprint(trans_pca_r.shape)\nprint(trans_pca_g.shape)","c9ed88ea":"print(f\"Blue Channel : {sum(pca_b.explained_variance_ratio_)}\")\nprint(f\"Green Channel: {sum(pca_g.explained_variance_ratio_)}\")\nprint(f\"Red Channel  : {sum(pca_r.explained_variance_ratio_)}\")","b59cc486":"fig = plt.figure(figsize = (15, 7.2)) \nfig.add_subplot(131)\nplt.title(\"Blue Channel\")\nplt.ylabel('Variation explained')\nplt.xlabel('Eigen Value')\nplt.bar(list(range(1,51)),pca_b.explained_variance_ratio_)\nfig.add_subplot(132)\nplt.title(\"Green Channel\")\nplt.ylabel('Variation explained')\nplt.xlabel('Eigen Value')\nplt.bar(list(range(1,51)),pca_g.explained_variance_ratio_)\nfig.add_subplot(133)\nplt.title(\"Red Channel\")\nplt.ylabel('Variation explained')\nplt.xlabel('Eigen Value')\nplt.bar(list(range(1,51)),pca_r.explained_variance_ratio_)\nplt.show()","5b431fdc":"vectorized_img = img_original.reshape((-1,3))\nvectorized_img= np.float32(vectorized_img)","5f0ff09e":"feat_cols = ['pixel'+str(i) for i in range(vectorized_img.shape[1])]\ndf_original = pd.DataFrame(vectorized_img,columns=feat_cols)\ndf_original.head()","06dd7839":"pca_original = PCA(n_components=2)\nprincipalComponents_original = pca_original.fit_transform(df_original.iloc[:,:-1])","d3efb607":"principal_original_Df = pd.DataFrame(data = principalComponents_original\n             , columns = ['principal component 1', 'principal component 2'])\nprincipal_original_Df","aad2b9f1":"b_arr = pca_b.inverse_transform(trans_pca_b)\ng_arr = pca_g.inverse_transform(trans_pca_g)\nr_arr = pca_r.inverse_transform(trans_pca_r)\nprint(b_arr.shape, g_arr.shape, r_arr.shape)","0c81b3fd":"img_reduced= (cv2.merge((b_arr, g_arr, r_arr)))\nprint(img_reduced.shape)","e21eb412":"fig = plt.figure(figsize = (10, 7.2)) \nfig.add_subplot(121)\nplt.title(\"Original Image\")\nplt.imshow(img_original)\nfig.add_subplot(122)\nplt.title(\"Pricipal Components of the Image\")\nplt.imshow(img_reduced)\nplt.show()","427094dd":"img_reduced\n         ","6f4e9e54":"image","e5e2d225":"img_original.shape","2f631139":"vectorized_img = img_original.reshape((-1,3))\nvectorized_img.shape","2e416251":"vectorized_img= np.float32(vectorized_img)\nvectorized_img","f72406fd":"criteria = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 10, 1.0)\nK = 3\nattempts=10\nret,label,center=cv2.kmeans(vectorized_img,K,None,criteria,attempts,cv2.KMEANS_PP_CENTERS)","305a45c6":"center = np.uint8(center)\ncenter","720dec99":"#Next, we have to access the labels to regenerate the clustered image\nres = center[label.flatten()]\nresult_image = res.reshape((img_original.shape))","5b21edce":"plt.figure(figsize=(15,10))\nplt.imshow(result_image)","0e501cf0":"plt.figure(figsize=(15,12))\nplt.subplot(1,2,1)\nplt.imshow(img_original)\nplt.title('Original Image')\nplt.subplot(1,2,2)\nplt.imshow(result_image)\nplt.title('Segmented Image when K = %i' % K)\nplt.show()","fc67bc48":"K = 5\nattempts=10\nret,label,center=cv2.kmeans(vectorized_img,K,None,criteria,attempts,cv2.KMEANS_PP_CENTERS)","d74bbbe3":"center = np.uint8(center)\ncenter","38fc0e9a":"res = center[label.flatten()]\nresult_image = res.reshape((img_original.shape))","0f80d0f6":"plt.figure(figsize=(15,12))\nplt.subplot(1,2,1)\nplt.imshow(img_original)\nplt.title('Original Image')\nplt.subplot(1,2,2)\nplt.imshow(result_image)\nplt.title('Segmented Image when K = %i' % K)\nplt.show()","7ef4be33":"K = 20\nattempts=10\nret,label,center=cv2.kmeans(vectorized_img,K,None,criteria,attempts,cv2.KMEANS_PP_CENTERS)\ncenter = np.uint8(center)\nres = center[label.flatten()]\nresult_image = res.reshape((img_original.shape))\nplt.figure(figsize=(15,12))\nplt.subplot(1,2,1)\nplt.imshow(img_original)\nplt.title('Original Image')\nplt.subplot(1,2,2)\nplt.imshow(result_image)\nplt.title('Segmented Image when K = %i' % K)\nplt.show()","e58dd469":"center","d75df3ce":"## Reconstruct the image and visualize","77889869":"## 2. Image Segmentation","4c34b01e":"Edges of the Broken Image","a53f00ef":"<font color=\"red\">\nExtracting Edge Features","b19b3e57":"1.1.Edges of the Rainy Images","28bbfc79":"1.1.Edges of the original Images","dcac4231":"Edges of the Foggy Image"}}