{"cell_type":{"78b96d93":"code","2abf5037":"code","b7459513":"code","6c027ce4":"code","b5717217":"code","21e4f261":"code","3fc86cb3":"code","e57ee2e9":"code","3fce43ab":"code","2f970c8d":"code","8f7b71ec":"code","3deeccda":"code","384b8004":"code","44ce2328":"code","4414dd82":"code","fa425777":"markdown","ae4a04b8":"markdown","a78b86ef":"markdown","bbabd8a4":"markdown","0a015846":"markdown","73c82a31":"markdown","0aeccce5":"markdown","6a342feb":"markdown","7af715dd":"markdown"},"source":{"78b96d93":"pip install -U lightautoml","2abf5037":"# Standard python libraries\nimport os\nimport time\nimport re\n\n# Installed libraries\nimport numpy as np\nimport pandas as pd\nfrom sklearn.metrics import log_loss\nfrom sklearn.model_selection import train_test_split\n\n# Imports from our package\nfrom lightautoml.automl.presets.tabular_presets import TabularAutoML, TabularUtilizedAutoML\nfrom lightautoml.tasks import Task","b7459513":"N_THREADS = 4 # threads cnt for lgbm and linear models\nN_FOLDS = 5 # folds cnt for AutoML\nRANDOM_STATE = 42 # fixed random state for various reasons\nTEST_SIZE = 0.2 # Test size for metric check\nTIMEOUT = 3 * 3600 # Time in seconds for automl run\nTARGET_NAME = 'target'","6c027ce4":"%%time\n\ntrain_data = pd.read_csv('..\/input\/tabular-playground-series-may-2021\/train.csv')\ntrain_data[TARGET_NAME] = train_data[TARGET_NAME].str.slice(start=6).astype(int) - 1\ntrain_data.head()","b5717217":"test_data = pd.read_csv('..\/input\/tabular-playground-series-may-2021\/test.csv')\ntest_data.head()","21e4f261":"submission = pd.read_csv('..\/input\/tabular-playground-series-may-2021\/sample_submission.csv')\nsubmission.head()","3fc86cb3":"def create_gr_feats(data):\n    # If you find new features, please add here!\n    pass\n    \n\nall_df = pd.concat([train_data, test_data]).reset_index(drop = True)\ncreate_gr_feats(all_df)\ntrain_data, test_data = all_df[:len(train_data)], all_df[len(train_data):]\nprint(train_data.shape, test_data.shape)","e57ee2e9":"train_data.head()","3fce43ab":"%%time\n\ntask = Task('multiclass',)","2f970c8d":"%%time\n\nroles = {\n    'target': TARGET_NAME,\n    'drop': ['id'],\n}","8f7b71ec":"%%time \n\nautoml = TabularUtilizedAutoML(task = task, \n                               timeout = TIMEOUT,\n                               cpu_limit = N_THREADS,\n                               reader_params = {'n_jobs': N_THREADS},\n                               configs_list=[\n                                   '..\/input\/lightautoml-configs\/conf_0_sel_type_0.yml',\n                                   '..\/input\/lightautoml-configs\/conf_1_sel_type_1.yml'\n                               ])\noof_pred = automl.fit_predict(train_data, roles = roles)\nprint('oof_pred:\\n{}\\nShape = {}'.format(oof_pred[:10], oof_pred.shape))","3deeccda":"%%time\n\n# Fast feature importances calculation\nfast_fi = automl.get_feature_scores('fast', silent = False)\nfast_fi.set_index('Feature')['Importance'].plot.bar(figsize = (20, 10), grid = True)","384b8004":"%%time\n\ntest_pred = automl.predict(test_data)\nprint('Prediction for test data:\\n{}\\nShape = {}'.format(test_pred[:10], test_pred.shape))\n\nprint('Check scores...')\nprint('OOF score: {}'.format(log_loss(train_data[TARGET_NAME].values, oof_pred.data)))","44ce2328":"submission.iloc[:, 1:] = test_pred.data\nsubmission.to_csv('lightautoml_2lvl_3hours_2configs.csv', index = False)","4414dd82":"submission","fa425777":"# ========= AutoML preset usage =========\n\n\n## Step 1. Create Task","ae4a04b8":"# Step 0.3. Data load ","a78b86ef":"## Step 4. Predict for test data and check OOF score","bbabd8a4":"## Step 2. Setup columns roles","0a015846":"# Step 0.1. Import necessary libraries ","73c82a31":"## Step 3. Train on full data ","0aeccce5":"## Step 5. Prepare submission","6a342feb":"# Step 0.5. Add new features","7af715dd":"# Step 0.2. Parameters "}}