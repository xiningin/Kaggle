{"cell_type":{"13895ef4":"code","374a7a7a":"code","1baafb7f":"code","a143c40a":"code","7b98617e":"code","55351c26":"code","73c79bb3":"code","114457e0":"code","457e2eb5":"code","a0c3e9f0":"code","a82d66b3":"code","ad84020c":"code","41ccb007":"code","edcfd42b":"code","fd7addf2":"code","c42949f0":"code","a6009741":"code","1e1661e5":"code","d262a705":"code","6f018784":"code","9e0d2a7f":"code","ff5587c5":"code","942d55ec":"code","6ca1c796":"code","3c1278a0":"code","5b8e469c":"code","c89ea4df":"code","14aa87b8":"markdown","c559159e":"markdown","9571563a":"markdown","76e7f1a7":"markdown"},"source":{"13895ef4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","374a7a7a":"import matplotlib.pyplot as plt\nimport matplotlib.style\nimport matplotlib as mpl\nimport random\n\nmpl.style.use('ggplot')","1baafb7f":"train = pd.read_csv(os.path.join(dirname, 'train.csv'))\ntest = pd.read_csv(os.path.join(dirname, 'test.csv'))","a143c40a":"from pandas_profiling import ProfileReport\nprofile = ProfileReport(train, title=\"Profiling Report\")\n","7b98617e":"profile.to_notebook_iframe()","55351c26":"train.groupby('income')['age'].plot.hist(alpha=.8, bins=range(10,100, 1), title=\"Income with age\")\n\nplt.legend()","73c79bb3":"train.groupby(['sex','income']).count().iloc[:,0].unstack().plot.bar(stacked=True, title='Income by Sex')","114457e0":"train['workclass'].replace([\"Federal-gov\", \"Local-gov\", \"State-gov\"], \"Government\", inplace=True)\ntrain['workclass'].replace([\"Self-emp-inc\", \"Self-emp-not-inc\"], \"Self-Employed\", inplace=True)\ntrain['workclass'].replace([\"Never-worked\", \"Without-pay\"], \"Other\", inplace=True)\ntrain['workclass'].replace([\"?\"], \"Other\/Unkown\", inplace=True)\n","457e2eb5":"train['workclass'].value_counts()","a0c3e9f0":"train.groupby(['workclass','income']).count().iloc[:,0].unstack().plot.bar(stacked=True, title='Income by workclass')","a82d66b3":"train['occupation'].value_counts()","ad84020c":"train['occupation'].replace([\"Adm-clerical\", \"Exec-managerial\"], \"White-Collar\", inplace=True)\ntrain['occupation'].replace([\"Craft-repair\", \"Farming-fishing\", \"Handlers-cleaners\", \"Machine-op-inspct\", \"Transport-moving\"], \"Blue-Collar\", inplace=True)\ntrain['occupation'].replace([\"Other-service\", \"Priv-house-serv\", \"Protective-serv\", \"Tech-support\"], \"Service\", inplace=True)\ntrain['occupation'].replace([\"Prof-specialty\"], \"Professional\", inplace=True)\ntrain['occupation'].replace([\"?\", \"Armed-Forces\"], \"Other\/Unknown\", inplace=True)\n","41ccb007":"train['occupation'].value_counts()","edcfd42b":"train.groupby(['occupation','income']).count().iloc[:,0].unstack().plot.bar(stacked=True, title='Income by occupation')","fd7addf2":"train.groupby(['education_num','income']).count().iloc[:,0].unstack().plot.bar(stacked=True, title='Income level with Years of Education')","c42949f0":"train['education'].replace(['11th', '9th', '7th-8th', '5th-6th', '10th', '1st-4th', 'Preschool', '12th'],' School', inplace = True)","a6009741":"train.groupby(['education','income']).count().iloc[:,0].unstack().plot.bar(stacked=True, title='Income by Education')","1e1661e5":"train['marital_status'].value_counts()","d262a705":"train['marital_status'].replace([\"Married-AF-spouse\", \"Married-civ-spouse\", \"Married-spouse-absent\"], \"Married\", inplace=True)","6f018784":"train.groupby(['marital_status','income']).count().iloc[:,0].unstack().plot.bar(stacked=True, title='Income level with Martital Status')","9e0d2a7f":"train[['income','capital_gain']].pivot(columns='income').plot.hist(stacked=True, alpha=.8)","ff5587c5":"train[['income','capital_loss']].pivot(columns='income').plot.hist(stacked=True, alpha=.8)","942d55ec":"train['race'].value_counts()","6ca1c796":"train.groupby(['race','income']).count().iloc[:,0].unstack().plot.bar(stacked=True, title='Income level by Race')","3c1278a0":"train.relationship.value_counts()","5b8e469c":"train.groupby(['relationship','income']).count().iloc[:,0].unstack().plot.bar(stacked=True, title='Income level by Relationship')","c89ea4df":"train.native_country.value_counts()","14aa87b8":"# Libraries & Functions","c559159e":"# Info\n\n    id\n    age : \ub098\uc774\n    workclass : \uace0\uc6a9 \ud615\ud0dc\n    fnlwgt : \uc0ac\ub78c \ub300\ud45c\uc131\uc744 \ub098\ud0c0\ub0b4\ub294 \uac00\uc911\uce58 (final weight\uc758 \uc57d\uc790)\n    education : \uad50\uc721 \uc218\uc900\n    education_num : \uad50\uc721 \uc218\uc900 \uc218\uce58\n    marital_status: \uacb0\ud63c \uc0c1\ud0dc\n    occupation : \uc5c5\uc885\n    relationship : \uac00\uc871 \uad00\uacc4\n    race : \uc778\uc885\n    sex : \uc131\ubcc4\n    capital_gain : \uc591\ub3c4 \uc18c\ub4dd\n    capital_loss : \uc591\ub3c4 \uc190\uc2e4\n    hours_per_week : \uc8fc\ub2f9 \uadfc\ubb34 \uc2dc\uac04\n    native_country : \uad6d\uc801\n    income : \uc218\uc775 (\uc608\uce21\ud574\uc57c \ud558\ub294 \uac12)\n        >50K : 1\n        <=50K : 0","9571563a":"# EDA & Feature Engineering","76e7f1a7":"# Reference\n- https:\/\/rstudio-pubs-static.s3.amazonaws.com\/235617_51e06fa6c43b47d1b6daca2523b2f9e4.html"}}