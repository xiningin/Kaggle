{"cell_type":{"c48d20d7":"code","d296da38":"code","e9671a3f":"code","269f68ea":"code","1baa8300":"code","ee58a146":"code","6079a1ca":"code","fd0bd83e":"code","93cbd56b":"code","4ca9c3b6":"code","556ed6b8":"code","53d39ed7":"code","254b63a1":"code","b5fabeef":"code","5d312e9c":"code","282df1eb":"code","5a297d40":"code","bc6a37b9":"code","6d38556d":"code","f5d651f7":"code","7b5f357b":"code","037c86eb":"code","d9cf2bb4":"code","ee5d0f2e":"code","ee000d5f":"code","29465644":"code","9baff42d":"code","10fc2bd5":"code","070baba5":"code","834469d4":"code","17ab3ed7":"markdown","77f7461b":"markdown","463dc745":"markdown","fa5ed47d":"markdown","5917b4fd":"markdown","de482595":"markdown","1d9f8ff3":"markdown","5e5bca5a":"markdown","0893388f":"markdown","fed27ddb":"markdown","1cab5413":"markdown","e611ae25":"markdown","43529439":"markdown"},"source":{"c48d20d7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d296da38":"import pandas as pd\nimport plotly.express as px\nimport numpy as np\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff","e9671a3f":"dataset = pd.read_csv('\/kaggle\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv', header=1)\ndataset","269f68ea":"table = dataset.loc[:,['What is your age (# years)?',\n                       'What is the highest level of formal education that you have attained or plan to attain within the next 2 years?']]\n\noutlier =pd.pivot_table(table, index=['What is your age (# years)?'],\n               columns=['What is the highest level of formal education that you have attained or plan to attain within the next 2 years?'],\n               aggfunc='size')\n\nfig = ff.create_annotated_heatmap(outlier.to_numpy(),x=list(outlier.columns), y=list(outlier.index),colorscale='Viridis')\nfig.update_layout(height=600, width=1000)\nfig.show()","1baa8300":"outlier = dataset[dataset['What is your age (# years)?'].isin(['18-21','22-24'])]\noutlier = outlier[outlier['What is the highest level of formal education that you have attained or plan to attain within the next 2 years?'] == 'Doctoral degree']","ee58a146":"outlier_list1 = list(outlier.index)","6079a1ca":"table = dataset.loc[:,['What is your age (# years)?',\n                       'For how many years have you been writing code and\/or programming?']]\n\noutlier =pd.pivot_table(table, index=['What is your age (# years)?'],\n               columns=['For how many years have you been writing code and\/or programming?'],\n               aggfunc='size')\n\noutlier\nfig = ff.create_annotated_heatmap(outlier.to_numpy(),x=list(outlier.columns), y=list(outlier.index),colorscale='Viridis')\nfig.update_layout(height=600, width=1000)\nfig.show()","fd0bd83e":"sub_outlier1 = dataset[dataset['What is your age (# years)?'].isin(['18-21', '22-24'])][dataset['For how many years have you been writing code and\/or programming?'].isin(['10-20 years', '20+ years'])]\nsub_outlier2 = dataset[dataset['What is your age (# years)?'].isin(['18-21'])][dataset['For how many years have you been writing code and\/or programming?'].isin(['5-10 years'])]\nsub_outlier3 = dataset[dataset['What is your age (# years)?'].isin(['25-29'])][dataset['For how many years have you been writing code and\/or programming?'].isin(['20+ years'])]\n\noutlier = pd.concat([sub_outlier1, sub_outlier2, sub_outlier3])","93cbd56b":"outlier_list2 = list(outlier.index)","4ca9c3b6":"table = dataset.loc[:,['Select the title most similar to your current role (or most recent title if retired): - Selected Choice',\n                       'For how many years have you been writing code and\/or programming?']]\n\noutlier =pd.pivot_table(table, index=['Select the title most similar to your current role (or most recent title if retired): - Selected Choice'],\n               columns=['For how many years have you been writing code and\/or programming?'],\n               aggfunc='size')\n\noutlier\nfig = ff.create_annotated_heatmap(outlier.to_numpy(),x=list(outlier.columns), y=list(outlier.index),colorscale='Viridis')\nfig.update_layout(height=600, width=1000)\nfig.show()","556ed6b8":"outlier = dataset[dataset['Select the title most similar to your current role (or most recent title if retired): - Selected Choice'].isin(['Statistician',\n                                                                    'Software Engineer',\n                                                                    'Data Scientist',\n                                                                    'Data Engineer',\n                                                                    'DBA\/Database Engineer',\n                                                                    'Machine Learning Engineer'])][dataset['For how many years have you been writing code and\/or programming?'].isin(['I have never written code'])]\n","53d39ed7":"outlier_list3 = list(outlier.index)","254b63a1":"outlier_list = list(np.unique(list(outlier_list1) + list(outlier_list2) + list(outlier_list3)))\n","b5fabeef":"# removing outlier\n\nnew_dataset = dataset.drop(outlier_list)\nnew_dataset","5d312e9c":"# list of job involve in modelisation\njob = ['Data Scientist', 'Data Engineer', 'Machine Learning Engineer']\n\ndata = new_dataset[new_dataset['Select the title most similar to your current role (or most recent title if retired): - Selected Choice'].isin(job)]\ndata","282df1eb":"exp = data.groupby(['Select the title most similar to your current role (or most recent title if retired): - Selected Choice',\n                       'For how many years have you been writing code and\/or programming?']).size()\nexp = pd.DataFrame(exp.reset_index())\nexp = exp.rename(columns={0:'Count'})\nexp","5a297d40":"fig = px.bar(exp, x=\"For how many years have you been writing code and\/or programming?\",\n             y='Count',\n             color='Select the title most similar to your current role (or most recent title if retired): - Selected Choice',\n             title=\"AGES and GENDER\")\nfig.update_layout(height=600, width=1000, title_text=\"What programming language would you recommend an aspiring data scientist to learn first?\")\n\nfig.show()","bc6a37b9":"recomandation = data.groupby('What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice').agg({'What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice':'count'})\n\ndic = {}\nfor i in data['For how many years have you been writing code and\/or programming?'].unique():\n    \n    df = data[data['For how many years have you been writing code and\/or programming?'] == i]\n    rec = df.groupby('What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice').agg({'What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice':'count'})\n    \n    dic[i] = rec\n    \n","6d38556d":"from plotly.subplots import make_subplots\nimport plotly.graph_objects as go\n\nfig = make_subplots(\n    rows=3, cols=3,\n    specs=[[{\"colspan\":3}, None,None],\n           [{},{},{}],\n           [{}, {}, {}]])\n\nfig.add_trace(go.Bar(y=recomandation['What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice'],\n                     x=recomandation.index,\n                     name=\"Global view\"),\n              row=1, col=1)\n\n#fig.add_trace(go.Bar(x=[1, 2], y=[1, 2], name=\"(2,2)\"), row=2, col=2)\n\nfig.add_trace(go.Bar(y=dic.get('< 1 years')['What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice'],\n                     x=dic.get('< 1 years').index,\n                     name=\"Less than 1 year\"),\n              row=2, col=1)\n\nfig.add_trace(go.Bar(y=dic.get('1-2 years')['What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice'],\n                     x=dic.get('1-2 years').index,\n                     name=\"Between 1 and 2 years\"),\n              row=2, col=2)\n\nfig.add_trace(go.Bar(y=dic.get('3-5 years')['What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice'],\n                     x=dic.get('3-5 years').index,\n                     name=\"Between 3 and 5 years\"),\n              row=2, col=3)\n\n\nfig.add_trace(go.Bar(y=dic.get('5-10 years')['What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice'],\n                     x=dic.get('5-10 years').index,\n                     name=\"Between 5 and 10 years\"),\n              row=3, col=1)\n\n\nfig.add_trace(go.Bar(y=dic.get('10-20 years')['What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice'],\n                     x=dic.get('10-20 years').index,\n                     name=\"Between 10 and 20 years\"),\n              row=3, col=2)\n\nfig.add_trace(go.Bar(y=dic.get('20+ years')['What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice'],\n                     x=dic.get('20+ years').index,\n                     name=\"More than 20 years\"),\n              row=3, col=3)\n\nfig.update_layout(height=800, width=1000, title_text=\"What programming language would you recommend an aspiring data scientist to learn first?\")\nfig.show()","f5d651f7":"def plotting_pie(quiz):\n    dic = {}\n    for i in data['For how many years have you been writing code and\/or programming?'].unique():\n\n        df = data[data['For how many years have you been writing code and\/or programming?'] == i]\n\n        tab = []\n        for j in df.columns:\n            if quiz.lower() in j.lower():\n\n                tab.append([j.split('e - ')[1], np.shape(df)[0] - df[j].isnull().sum()])\n\n        Tab = pd.DataFrame(tab, columns=['label','value'])\n        Tab = Tab[Tab['label'].isin(['None','No \/ None']) ==False]\n\n        dic[i] = Tab\n\n    #general structure\n    code = []\n    for i in data.columns:\n      if quiz.lower() in i.lower():\n        code.append([i.split('e - ')[1], np.shape(data)[0] - data[i].isnull().sum()])\n\n    code = pd.DataFrame(code, columns=['label', 'value'])\n    code = code[code['label'].isin(['None','No \/ None']) == False]\n\n    dic['general'] = code\n\n    #figure constructtion\n    fig = make_subplots(\n        rows=3, cols=3,\n        specs=[[{\"colspan\":3, 'type':'domain'}, None,None],\n               [{'type':'domain'},{'type':'domain'},{'type':'domain'}],\n               [{'type':'domain'}, {'type':'domain'}, {'type':'domain'}]]    )\n\n    fig.add_trace(go.Pie(values=dic.get('general')['value'].values,\n                         labels=dic.get('general')['label'].values,\n                         title=\"Global view\"\n                        ),\n                  row=1, col=1)\n\n\n    fig.add_trace(go.Pie(labels=dic.get('< 1 years')['label'].values,\n                         values=dic.get('< 1 years')['value'].values,\n                         title=\"Less than 1 year\"\n                        ),\n                  row=2, col=1)\n\n    fig.add_trace(go.Pie(labels=dic.get('1-2 years')['label'],\n                         values=dic.get('1-2 years')['value'],\n                         title=\"Between 1 and 2 years\"),\n                  row=2, col=2)\n\n    fig.add_trace(go.Pie(labels=dic.get('3-5 years')['label'],\n                         values=dic.get('3-5 years')['value'],\n                         title=\"Between 3 and 5 years\"),\n                  row=2, col=3)\n\n\n    fig.add_trace(go.Pie(labels=dic.get('5-10 years')['label'],\n                         values=dic.get('5-10 years')['value'],\n                         title=\"Between 5 and 10 years\"),\n                  row=3, col=1)\n\n\n    fig.add_trace(go.Pie(labels=dic.get('10-20 years')['label'],\n                         values=dic.get('10-20 years')['value'],\n                         title=\"Between 10 and 20 years\"),\n                  row=3, col=2)\n\n    fig.add_trace(go.Pie(labels=dic.get('20+ years')['label'],\n                         values=dic.get('20+ years')['value'],\n                         title=\"More than 20 years\"),\n                  row=3, col=3)\n\n    fig.update_layout(height=1100, width=1100, title_text=quiz)\n    return fig.show()","7b5f357b":"def plotting_spider(quiz, r):\n    dic = {}\n    for i in data['For how many years have you been writing code and\/or programming?'].unique():\n\n        df = data[data['For how many years have you been writing code and\/or programming?'] == i]\n\n        tab = []\n        for j in df.columns:\n            if quiz.lower() in j.lower():\n\n                tab.append([j.split('e - ')[1], (np.shape(df)[0] - df[j].isnull().sum())\/np.shape(df)[0]])\n\n        Tab = pd.DataFrame(tab, columns=['label','value'])\n        Tab = Tab[Tab['label'].isin(['None','No \/ None']) ==False]\n\n        dic[i] = Tab\n\n    #general structure\n    code = []\n    for i in data.columns:\n      if quiz.lower() in i.lower():\n        code.append([i.split('e - ')[1], (np.shape(data)[0] - data[i].isnull().sum())\/np.shape(df)[0]])\n\n    code = pd.DataFrame(code, columns=['label', 'value'])\n    code = code[code['label'].isin(['None','No \/ None']) == False]\n\n    dic['general'] = code\n\n    \n\n    fig = go.Figure()\n\n    fig.add_trace(go.Scatterpolar(\n          r=dic.get('general')['value'].values,\n          theta=dic.get('general')['label'].values,\n          #fill='toself',\n          name='Global view'\n    ))\n\n    fig.add_trace(go.Scatterpolar(\n          r=dic.get('< 1 years')['value'].values,\n          theta=dic.get('< 1 years')['label'].values,\n          #fill='toself',\n          name=\"Less than 1 year\"\n    ))\n\n    fig.add_trace(go.Scatterpolar(\n          r=dic.get('1-2 years')['value'].values,\n          theta=dic.get('1-2 years')['label'].values,\n          #fill='toself',\n          name=\"Between 1 and 2 years\"\n    ))\n\n\n    fig.add_trace(go.Scatterpolar(\n          r=dic.get('3-5 years')['value'].values,\n          theta=dic.get('3-5 years')['label'].values,\n          #fill='toself',\n          name=\"Between 3 and 5 years\"\n    ))\n\n    fig.add_trace(go.Scatterpolar(\n          r=dic.get('5-10 years')['value'].values,\n          theta=dic.get('5-10 years')['label'].values,\n          #fill='toself',\n          name=\"Between 5 and 10 years\"\n    ))\n\n    fig.add_trace(go.Scatterpolar(\n          r=dic.get('10-20 years')['value'].values,\n          theta=dic.get('10-20 years')['label'].values,\n          #fill='toself',\n          name=\"Between 10 and 20 years\"\n    ))\n\n    fig.add_trace(go.Scatterpolar(\n          r=dic.get('20+ years')['value'].values,\n          theta=dic.get('20+ years')['label'].values,\n          #fill='toself',\n          name=\"More than 20 years\"\n    ))\n\n\n    fig.update_layout(\n      polar=dict(\n        radialaxis=dict(\n          visible=True,\n          range=[0, r]\n        )),\n      showlegend=True,\n        height=1000, width=1000\n    )\n    \n\n    return fig.show()","037c86eb":"plotting_pie(\"What programming languages do you use on a regular basis?\")","d9cf2bb4":"def plotting_bar(quiz):\n    dic = {}\n    for i in data['For how many years have you been writing code and\/or programming?'].unique():\n\n        df = data[data['For how many years have you been writing code and\/or programming?'] == i]\n\n        tab = []\n        for j in df.columns:\n            if quiz.lower() in j.lower():\n\n                tab.append([j.split('e - ')[1], np.shape(df)[0] - df[j].isnull().sum()])\n\n        Tab = pd.DataFrame(tab, columns=['label','value'])\n        Tab = Tab[Tab['label'].isin(['None','No \/ None']) == False]\n\n        dic[i] = Tab\n\n    #general structure\n    code = []\n    for i in data.columns:\n      if quiz.lower() in i.lower():\n        code.append([i.split('e - ')[1], np.shape(data)[0] - data[i].isnull().sum()])\n\n    code = pd.DataFrame(code, columns=['label', 'value'])\n    code = code[code['label'].isin(['None','No \/ None']) == False]\n\n    dic['general'] = code\n\n    #figure constructtion\n    fig = make_subplots(\n        rows=3, cols=3,\n        specs=[[{\"colspan\":3, \"type\": \"xy\"}, None,None],\n               [{\"type\": \"xy\"},{\"type\": \"xy\"},{\"type\": \"xy\"}],\n               [{\"type\": \"xy\"}, {\"type\": \"xy\"}, {\"type\": \"xy\"}]]    )\n\n    fig.add_trace(go.Bar(y=dic.get('general')['value'].values,\n                         x=dic.get('general')['label'].values,\n                         name=\"Global view\"\n                        ),\n                  row=1, col=1)\n\n\n    fig.add_trace(go.Bar(x=dic.get('< 1 years')['label'].values,\n                         y=dic.get('< 1 years')['value'].values,\n                         name=\"Less than 1 year\"\n                        ),\n                  row=2, col=1)\n\n    fig.add_trace(go.Bar(x=dic.get('1-2 years')['label'],\n                         y=dic.get('1-2 years')['value'],\n                         name=\"Between 1 and 2 years\"),\n                  row=2, col=2)\n\n    fig.add_trace(go.Bar(x=dic.get('3-5 years')['label'],\n                         y=dic.get('3-5 years')['value'],\n                         name=\"Between 3 and 5 years\"),\n                  row=2, col=3)\n\n\n    fig.add_trace(go.Bar(x=dic.get('5-10 years')['label'],\n                         y=dic.get('5-10 years')['value'],\n                         name=\"Between 5 and 10 years\"),\n                  row=3, col=1)\n\n\n    fig.add_trace(go.Bar(x=dic.get('10-20 years')['label'],\n                         y=dic.get('10-20 years')['value'],\n                         name=\"Between 10 and 20 years\"),\n                  row=3, col=2)\n\n    fig.add_trace(go.Bar(x=dic.get('20+ years')['label'],\n                         y=dic.get('20+ years')['value'],\n                         name=\"More than 20 years\"),\n                  row=3, col=3)\n\n    fig.update_layout(height=1000, width=1000, title_text=quiz)\n    return fig.show()","ee5d0f2e":"plotting_bar(\"Which of the following ML algorithms do you use on a regular basis?\")","ee000d5f":"plotting_spider(\"Which of the following ML algorithms do you use on a regular basis?\", 0.8)","29465644":"plotting_pie(\"Which categories of computer vision methods do you use on a regular basis?\")","9baff42d":"plotting_spider(\"Which categories of computer vision methods do you use on a regular basis?\", 0.5)","10fc2bd5":"plotting_bar(\"Which of the following natural language processing (NLP) methods do you use on a regular basis?\")","070baba5":"plotting_spider(\"Which of the following natural language processing (NLP) methods do you use on a regular basis?\", 0.3)","834469d4":"plotting_pie(\"Do you use any automated machine learning tools (or partial AutoML tools) on a regular basis?\")","17ab3ed7":"<div class=\"alert alert-block alert-info\", style=\"font-size:110%\">\n    <h2><u>3-1 Python, SQL, R in the TOP 3.BASH in the fourth place? <\/u><\/h2>\n\n<h3>ANALYSIS: <\/h3>\n <p>\nPython is the learder programming language in Data Sciences, this study can be taken as a extract argument to hightlight the first place of Python.\n\nThe graph below show in all situation that python is the must used language in Data Sciences.\nIt is easy to firtsly see the importance of python in the **Novice view** (Python represents more than 40%) and this percentage tend to reduce with experience and raise the percentage of R.\n\n\nMoreover, i would like to talk about the **4th position**, for **Novice**, the choice is quite scattered between Matlab, C++ and Java and **Expert** are unanimous for choosing Bash which even not excisting for **Novice**.\n\n\nwhat is the advantages of Bash ?\n\n <\/p>   \n    \n\n    \n<h3>List of conclusion:<\/h3>\n    \n*   Python, SQL, R always in the Top 3\n*   Python is dominant for Novice and reduce with experience\n*   R in more used by expert\n*   Expert are unanimous for BASH in the fourth place\n*   Novice are scatted in the fourth place\n\n<\/div>\n<\/center>","77f7461b":"<div class=\"alert alert-block alert-info\", style=\"font-size:110%\">\n    <h2><u>3-5 Automate Machin Learning: Different Workflow?? <\/u><\/h2>\n\n<h3>ANALYSIS: <\/h3>\n <p>\nThere are several automated machin learning tools that can have a significant impact in your modelisation. \n     Nevertheless, it is a big paintfull to use all of them in a single project, in fact you can overfit and be lost by results interpretation.\n     So datascientist tend to have some preference, some prefere working on tuning parameters in their favourites algorythms and others prefer using automatic model select and focus on variable selection for instance.\n     So it is important to understand which kind of AutoML are most known depending on profils\n <\/p>   \n    \n\n    \n<h3>List of conclusion:<\/h3>\n    \n*   Both profil has differents approaches in Automated machine Learning\n*   The Novice work mosrly with Data Augmentation and Expert with Automated hypermarameter tuning\n*   Automated model selection is appreciated in both side\n\n\n<\/div>\n<\/center>","463dc745":"\n\n<div class=\"alert alert-block alert-info\", style=\"font-size:110%\">\n    <h2>\n        <u>1-2 Age and Programing Experience<\/u> \ud83d\udcbb\n    <\/h2>\n\n<h3>INTRODUCTION: <\/h3>\n <p>\nOther Outlier are identify by analysis the crosstable between the Age and experience in programming.<br>\nSome profil have age between 18-21 years old and more than 20 years of programing experience.That mean means they start computing even before they were born \ud83d\ude02\ud83d\ude02\ud83d\ude02.<br>\nThis is an example of outlier that can be found in the figure below.\n    <\/p>   \n    \n\n<h3>ANALYSIS:<\/h3>\n<p>\nIn france for instance,you start programing at university (18yo)as longer as you are in a Computer sciences branch. Even others scientist branch are not rich of programing course.<br>\nSome outlier are geek that start coding on their own and by passion\n    <\/p>\n    \n<h3>List of outliers:<\/h3>\n    \n*   18-21 = 20+ years \n*   18-21 = 10-20 years\n*   18-21 = 5-10 years\n*   22-24 = 20+ years \n*   22-24 = 10-20 years\n*   25-29 = 20+ years\n\n<\/div>\n<\/center>","fa5ed47d":"![](https:\/\/www.researchgate.net\/profile\/Hans-Christian_Jetter\/publication\/315472236\/figure\/fig4\/AS:712159097004032@1546803368335\/Novice-vs-Expert-Axis.png)\n","5917b4fd":"<div class=\"alert alert-block alert-info\", style=\"font-size:110%\">\n\n<center><H1> Machine Learning Novice vs Expert View<\/H1><\/center>\n\n\n<H2> Introduction <\/H2>\n    \n<p>  \n    It is always a surprise to realise that Artificial Intelligent start in 1956, the term Artificial Intelligent was coined at a conference at Dartmouth College, in Hanover, New Hampshire.<br>\n    Due to computer power (memory,....) the activities were growing slowing decade after decade and just a few community was interested on it.<br> Nowadays, Artificial Intelligente is a worldwide subject that interest any sectors, it is already use in many industrial sectors surch as medical diagnostic, image processing,.....\n    <br> Everybody feel concern about data revolution and more and more people are learning Data sciences.<br><br>\n   As AI and ML are now involving many generation and many people with different experiences and vision\n<\/p>\n    \n<H2> Problematique<\/H2>\n    \n<p>\n    My problematique is based on analysis the differents techniques use by differents generation of data sciences<br>\n    <b>Beginner:<\/b> people between less than 1 years to 5 years of computing in data sciences domaine<br>\n    <b>Expert:<\/b> people with more than 5 years of programming in data sciences\n    \n    \n<\/p>\n    \n    \n<H2>Methodology<\/H2>\n    \n <p>\n      <ul>\n          <li>Dataset: The dataset use is the 2020 survey<\/li>\n          <li>Processing: Remove outlier and select usefull data for my study<\/li>\n          <li>Analysis the different techniques in ML, computer vision and NLP<\/li>\n      <\/ul> \n<\/p>\n\n<H2>Relevant conclusion<\/H2>\n    \n <p>\n      <ul>\n          <li>More than 15y experienced datascientist are late with new technology<\/li>\n          <li>Middle experienced datascientists have the most skilled technically<\/li>\n          <li>Novice and Expert have different workflow on machin learning pipeline<\/li>\n      <\/ul>","de482595":"\n\n<div class=\"alert alert-block alert-info\", style=\"font-size:110%\">\n    <h2><u> 1-1 Age and Diploma <\/u>\ud83c\udf93<\/h2>\n\n<h3>INTRODUCTION: <\/h3>\n <p>\nDepending on the country education system, the duration for obtaining a diploma can vary<br>\nIn Europe, most of country respect [Bologna process](https:\/\/www.unipage.net\/en\/degrees_academic) which establishes the bachelor education at 3 years, master 2 years and 3 years for the doctorat.<br>\nOthers countries may respect others duration rule for graduation\n    <\/p>   \n    \n\n<h3>ANALYSIS:<\/h3>\n<p>\nIn the figure Below we saw some profil get graduated by a doctorat at 18-21 years which means that they got an hight school diploma at 1O-13 years old.<br>\nAltoughThese situations are not possible but that remain a worldwide exception. \n    <\/p>\n    \n<h3>List of outlier in this situation:<\/h3>\n    \n*   18-21 = Doctorat\n*   22-24 = Doctorat\n\n<\/div>\n<\/center>","1d9f8ff3":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:#2a86c2;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<center>\n<H1> 1- Outlier Identification<\/H1>\n    <\/center>\n\n<h4><u>Methodology<\/u><\/h4>\n<p>\nThis chapter is optional, it is only for removing some survey filled with en <br>\nSome people fill suvey with carelessness and it can spoil the analysis, so for my future analysis i felt important to cancel there outlier<br>I will briefly explaine the methodoly but you can check on my previous notebook dediate to it\n    <\/p>\n    <h4><u>Partial conclusion<\/u><\/h4>\n<p>\nThe illustration develloped in this section also highlight some partial conclusion surch:\n<ul>\n    <li>Kaggle a dynamic platform: Kaggle is a dynamics platform due because it is hight populated by young people(18-25><\/li>\n    <li>Diploma: Bachelor and Master are the 2 most present diploma<\/li>\n    <li>Kaggle a learning platform: This survey show that not experiented people (less 2 years of programming) are the most present in Kaggle. In fact, in Kaggle there a modules dediate to learning and student can also devellope their experence through real competition and exchanging with expert<\/li>\n    <\/ul>\n <\/p>\n<\/div>","5e5bca5a":"\n\n<div class=\"alert alert-block alert-info\", style=\"font-size:110%\">\n    <h2><u>1-3 Programing Experience and Job <\/u>\ud83d\udcbc<\/h2>\n\n<h3>ANALYSIS: <\/h3>\n <p>\nIn Data sciences, not all profil are use code in their dayly routine.<br>\nSome job such as Data Analyst and Business Analyst don't require programming experience, everything can be done by using visualisation tool, PowerBI, Excel, SAP, Google Analytics, .........<br>\nNevertheless,  some positions like Software Engineer, Data scientist, Machin Learning Engineer require experience in computing that they acquire in their education, internship and experience. So it is hard to see some profil with less than 1 year of experience or has never written a code\n    <\/p>   \n    \n\n    \n<h3>List of outliers:<\/h3>\n    \n*   18-21 = 20+ years \n*   18-21 = 10-20 years\n*   18-21 = 5-10 years\n*   22-24 = 20+ years \n*   22-24 = 10-20 years\n*   25-29 = 20+ years\n\n<\/div>\n<\/center>","0893388f":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:#2a86c2;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<center>\n<H1> 2- Data Selection<\/H1>\n    <\/center>\n    <h4><u>Methodology<\/u><\/h4>  \n<p>\nAs my study will be focused on technical tools ( computer vision, nlp,...) and experience in Artificial Intelligent, it is important to selection profil that is in the scope of my study.<br>\n    For instance, a software engineer with engineer with 20 years of experience doesnt mean that he has also 20 years of experience in data sciences, he his probably a beginner and will select tools according to his knowledge<br>\n    So for my study i will be selecting datascience profil with various experience\n    <\/p>\n    <h4><u>Profil selected<\/u><\/h4>\n<p>\n<ul>\n    <li>Machine Learning Engineer<\/li>\n    <li>Data sciences<\/li>\n    <li>Data Engineer<\/li>\n    <\/ul>\n <\/p>\n<\/div>","fed27ddb":"<div class=\"alert alert-block alert-info\", style=\"font-size:110%\">\n    <h2><u>3-3 Computer Vision : The war of generation?? <\/u><\/h2>\n\n<h3>ANALYSIS: <\/h3>\n <p>\n\nFirst of all, we can remark in the first graph  that Novice and Expert doesn't hacve the same ranking although all profil set in the first place Image classification (VGG, ResNet.....).<br>\n     The main difference is in the second place, Novice prefert Object detection instead of General purpose Image for Expert.<br>\n     Nevertheless, these 3 algorythmes are in always in the top 3<br> <br>\n     \nThe second graph shows hightlight something curious. Less than 1 years of experience and more than 20 years don't know so much about computer vision. The density is dominated by the middle experience (3 to 10 years) of experience.<br> The  question is why the knewledge is keep in the middle generation ?\n     With a bit of reasearch, i just realise that most of the computer vision tools are recent, (Yoloo in 2015, U-net in 2015, Nasnet in 2017 ....). So the oldest and the newest generation doesn't know about these properly, however the middle generation of datasciences are more informed about these methode\n     \n <\/p>   \n    \n\n    \n<h3>List of conclusion:<\/h3>\n    \n*   Differents ranking with experience\n*   Newest and oldest generation of datasciences doesn't use frequenly computer vision methodes\n*   The middle generation are more aware and informed about computer vision algorythmes ( tools of their generation )\n\n\n<\/div>\n<\/center>","1cab5413":"<div class=\"alert alert-block alert-info\", style=\"font-size:110%\">\n    <h2><u>3-4 Natural Language Processing : Same situation than computer vision?? <\/u><\/h2>\n\n<h3>ANALYSIS: <\/h3>\n <p>\n\nThe NLP domaine behave like the computer vision domaine, with different ranking.\n     The knowledge are also dominated by the middle generation\n     \n <\/p>   \n    \n\n    \n<h3>List of conclusion:<\/h3>\n    \n*   Differents ranking with experience\n*   Newest and oldest generation of datasciences doesn't use frequenly NLP methodes\n*   The middle generation are more aware and informed about NLP algorythmes ( tools of their generation )\n\n\n<\/div>\n<\/center>","e611ae25":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:#2a86c2;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<center>\n<H1> 3- Expert vs Novice Technical comparaison<\/H1>\n    <\/center>\n    <h4><u>Methodology<\/u><\/h4>  \n<p>\nThis section will be focused on the comparaison of technical tools ( computer vision, machine learning.....) between Novice and Expert. The comparaison will be based on the frequency of the population that use the tools.<br>\n    We will also analysis vizualy if these 2 clusters behave in the same way.\n    <\/p>\n    <h4><u>Summary plan<\/u><\/h4>\n<p>\n<ul>\n    <li>Programming Language<\/li>\n    <li>Machin Learning tools<\/li>\n    <li>Computer Vision<\/li>\n    <li>Natural Language Processing<\/li>\n    <\/ul>\n <\/p>\n<\/div>","43529439":"<div class=\"alert alert-block alert-info\", style=\"font-size:110%\">\n    <h2><u>3-2 Unanimity for Machin Learning <\/u><\/h2>\n\n<h3>ANALYSIS: <\/h3>\n <p>\n\nAccording to the first graph,Linear\/Logistic Regression, Decision trees\/Random forest, Boosting and CNN are the foundamentals tools in Data sciences. The ranking is unchanged with experience. For learning Data sciences these tools are strater pack.<br> The second graph, we remark that by experience the use of others algorythmes inclease (the ranking is quite respected in the graph).<br>\n     Expert take advantages by using others methodsn (more than 20 years are in the top of Bayesian approches, Generative adversarial Networks and Evoluative approaches.\n     \n <\/p>   \n    \n\n    \n<h3>List of conclusion:<\/h3>\n    \n*   In basis, it is good to know Linear\/Logistic regression, Trees based model, Boosting model and CNN\n*   Expert tend to know all machin learning models ( Evolutive approaches, Generative adversarial, Bayesian approaches)\n*   Knownelge of models grow with experience\n\n\n<\/div>\n<\/center>"}}