{"cell_type":{"a6451ebc":"code","e42ff7aa":"code","32ac84e9":"code","5636f3bb":"markdown","84deab2a":"markdown","2ed91796":"markdown","cd65586a":"markdown","7bb100bc":"markdown","6c29ff67":"markdown","7b53efbc":"markdown"},"source":{"a6451ebc":"%%bash\npip install --no-index --find-links ..\/input\/torchsummary torchsummary","e42ff7aa":"from torchsummary import summary","32ac84e9":"import torch\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass Net(nn.Module):\n    def __init__(self):\n        super(Net, self).__init__()\n        self.conv1 = nn.Conv2d(1, 10, kernel_size=5)\n        self.conv2 = nn.Conv2d(10, 20, kernel_size=5)\n        self.conv2_drop = nn.Dropout2d()\n        self.fc1 = nn.Linear(320, 50)\n        self.fc2 = nn.Linear(50, 10)\n\n    def forward(self, x):\n        x = F.relu(F.max_pool2d(self.conv1(x), 2))\n        x = F.relu(F.max_pool2d(self.conv2_drop(self.conv2(x)), 2))\n        x = x.view(-1, 320)\n        x = F.relu(self.fc1(x))\n        x = F.dropout(x, training=self.training)\n        x = self.fc2(x)\n        return F.log_softmax(x, dim=1)\n\ndevice = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\") # PyTorch v0.4.0\nmodel = Net().to(device)\n\nsummary(model, (1, 28, 28))","5636f3bb":"# Use","84deab2a":"#### This Notebook serves as the starter Notebook of the [torchsummary-1.5.1-wheel](https:\/\/www.kaggle.com\/truthr\/torchsummary) Dataset. For a detailed guide on how to install and use Python packages in Notebooks without internet access, please go through this Notebook- [Install Python Packages Without Internet Access](https:\/\/www.kaggle.com\/truthr\/install-python-packages-without-internet-access)","2ed91796":"Code from [here](https:\/\/github.com\/sksq96\/pytorch-summary).","cd65586a":"#### This Notebook has been run without internet.","7bb100bc":"# Import","6c29ff67":"# Starter Notebook for torchsummary-1.5.1-wheel","7b53efbc":"# Install"}}