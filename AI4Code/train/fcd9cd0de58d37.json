{"cell_type":{"80f5a9bd":"code","9c9aad0d":"code","05b2c19c":"code","7b9e8e88":"code","280ee65c":"code","2bc828e2":"code","805330ac":"code","f40e680b":"code","9a3b1c3c":"code","94faba92":"code","715f8117":"code","e03110c9":"code","9820cf8e":"code","2cb2d185":"code","da32b9b6":"code","4dde3aae":"markdown","eab6ce37":"markdown"},"source":{"80f5a9bd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","9c9aad0d":"data = pd.read_csv('\/kaggle\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv')","05b2c19c":"data.info()","7b9e8e88":"data.corr()","280ee65c":"#correlation map\nf,ax = plt.subplots(figsize=(16,16))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f', ax=ax)\nplt.show()","2bc828e2":"data.head(10)","805330ac":"data.columns","f40e680b":"# Line Plot\n# color = color, label = label, linewidth = width of line, alpha = opacity, grid = grid, linestyle = sytle of line\ndata.Deaths.plot(kind = 'line', color = 'b',label = 'Deaths',linewidth=3,alpha = 0.9,grid = True,linestyle = ':')\ndata.Confirmed.plot(color = 'r',label = 'Confirmed',linewidth=2, alpha = 0.6,grid = True,linestyle = '-.')\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.title('Line Plot')            # title = title of plot\nplt.show()","9a3b1c3c":"# Scatter Plot \n# x = Confirmed, y = Deaths\ndata.plot(kind='scatter', x='Confirmed', y='Deaths',alpha = 0.5,color = 'red')\nplt.xlabel('Confirmed')              # label = name of label\nplt.ylabel('Deaths')\nplt.title('Confirmed Deaths Scatter Plot')            # title = title of plot\nplt.show()","94faba92":"# Histogram\n# bins = number of bar in figure\ndata.Confirmed.plot(kind = 'hist',bins =10,figsize = (8,8))\nplt.show()","715f8117":"# clf() = cleans it up again you can start a fresh\ndata.Confirmed.plot(kind = 'hist',bins = 10)\nplt.clf()\n# We cannot see plot due to clf()","e03110c9":"# 1 - Filtering Pandas data frame\nx = data['Deaths']>10000     \ndata[x]","9820cf8e":"# For pandas we can achieve index and value\nfor index,value in data[['Country\/Region']][0:10].iterrows():\n    print(index,\" : \",value)","2cb2d185":"# For example lets look frequency of Covid-19 types\nprint(data['Country\/Region'].value_counts(dropna =False)) \n","da32b9b6":"# For example max HP is 255 or min defense is 5\ndata.describe() #ignore null entries","4dde3aae":"### MATPLOTLIB\n\nMatplot is a python library that help us to plot data. The easiest and basic plots are line, scatter and histogram plots.\n\n* Line plot is better when x axis is time.\n\n* Scatter is better when there is correlation between two variables\n\n* Histogram is better when we need to see distribution of numerical data.\n\n* Customization: Colors,labels,thickness of line, title, opacity, grid, figsize, ticks of axis and linestyle","eab6ce37":"# DATA SCIENTIST\n**In this tutorial, I only explain you what you need to be a data scientist neither more nor less.**\n\nData scientist need to have these skills:\n\n1. Basic Tools: Like python, R or SQL. You do not need to know everything. What you only need is to learn how to use **python**\n1. Basic Statistics: Like mean, median or standart deviation. If you know basic statistics, you can use **python** easily. \n1. Data Munging: Working with messy and difficult data. Like a inconsistent date and string formatting. As you guess, **python** helps us.\n1. Data Visualization: Title is actually explanatory. We will visualize the data with **python** like matplot and seaborn libraries.\n1. Machine Learning: You do not need to understand math behind the machine learning technique. You only need is understanding basics of machine learning and learning how to implement it while using **python**.\n\n### As a summary we will learn python to be data scientist !!!"}}