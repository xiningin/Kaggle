{"cell_type":{"1d6f5302":"code","99385623":"code","007e6f92":"code","954d5b90":"code","997ba513":"code","e1d55635":"code","9adb94db":"code","d8f6cccc":"code","45e5c951":"code","e1f906d3":"code","9704efa9":"code","54c39700":"code","5e0176cf":"code","3eda638a":"code","6900a369":"code","14b5d086":"code","4984d64a":"code","c204e181":"code","4bc51dfa":"code","46dee0ed":"code","25a6626a":"code","da47f783":"code","f616dfee":"code","48c6d1b8":"code","94e4f321":"code","a1181e06":"code","048dc6fa":"code","ccf54d45":"code","41d99ed4":"code","d7fdeac1":"code","151ecf23":"code","ec7f582d":"code","c0f0a8cd":"code","3ac3a299":"markdown","fd9042d9":"markdown","688f9881":"markdown","a95c713c":"markdown","1b46b3b4":"markdown","7b1771de":"markdown","30ab08f2":"markdown","71cc2da4":"markdown","82e880f0":"markdown","68de225f":"markdown","625d7609":"markdown","2fc29fa6":"markdown","be8773ad":"markdown","df888d1b":"markdown","1c9c4ac8":"markdown","a7af5f6d":"markdown","eab3ec2f":"markdown","fc940291":"markdown","36c213a8":"markdown","d94aad2e":"markdown","c54bcb20":"markdown","fc5ab4a7":"markdown","3e84de58":"markdown","baedad79":"markdown","35744b12":"markdown","94f9ca5e":"markdown","6bfc5a9f":"markdown","8f5fff70":"markdown"},"source":{"1d6f5302":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in a\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport dateparser\nfrom ipywidgets import widgets\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","99385623":"complaints = pd.read_csv(\"..\/input\/Consumer_Complaints.csv\").set_index(\"Complaint ID\")","007e6f92":"complaints.head()","954d5b90":"complaints.columns","997ba513":"complaints.isna().sum()","e1d55635":"xnan_cols = ['Consumer Complaint', 'Company Public Response',\n            'Tags', 'Consumer consent provided?', 'Unnamed: 18']\ncomplaints = complaints.drop(xnan_cols, axis =1)\n","9adb94db":"complaints['year'] = complaints['Date received'].map(lambda x: x.split(\"-\")[-1] if \"-\" in x else x.split(\"\/\")[-1])\ncomplaints['month'] = complaints['Date received'].map(lambda x: x.split(\"-\")[0] if \"-\" in x else x.split(\"\/\")[0])","d8f6cccc":"complaints.year.head()","45e5c951":"complaints.year.unique()","e1f906d3":"sns.countplot(x='year', data = complaints[complaints[\"year\"]!='2018'])","9704efa9":"sns.countplot(x=\"month\", data=complaints)","54c39700":"mapping_old2new = {\n    \"Auto\": \"Auto debt\",\n    \"Credit card\": \"Credit card debt\",\n    \"Federal student loan\": \"Federal student loan debt\",\n    \"Medical\": \"Medical debt\",\n    \"Mortgage\": \"Mortgage debt\",\n    \"Non-federal student loan\": \"Private student loan debt\",\n    \"Other (i.e. phone, health club, etc.)\": \"Other debt\",\n    \"Payday loan\": \"Payday loan debt\",\n    \"Non-federal student loan\": \"Private student loan\",\n    \"Federal student loan servicing\": \"Federal student loan\",\n    \"Credit repair\": \"Credit repair services\",\n    \"Credit reporting\": \"Credit reporting\",\n    \"Conventional adjustable mortgage (ARM)\": \"Conventional home mortgage\",\n    \"Conventional fixed mortgage\": \"Conventional home mortgage\",\n    \"Home equity loan or line of credit\": \"Home equity loan or line of credit (HELOC)\",\n    \"Other\": \"Other type of mortgage\",\n    \"Other mortgage\": \"Other type of mortgage\",\n    \"Second mortgage\":\"Other type of mortgage\",\n    \"Credit card\": \"General-purpose credit card or charge card\",\n    \"General purpose card\": \"General-purpose prepaid card\",\n    \"Gift or merchant card\": \"Gift card\",\n    \"Electronic Benefit Transfer \/ EBT card\": \"Government benefit card\",\n    \"Government benefit payment card\": \"Government benefit card\",\n    \"ID prepaid card\": \"Student prepaid card\",\n    \"Other special purpose card\":  \"Other prepaid card\",\n    \"Store credit card\": \"Other prepaid card\",\n    \"Transit card\": \"Other prepaid card\",\n    \"(CD) Certificate of deposit\": \"CD (Certificate of Deposit)\",\n    \"Other bank product\/service\": \"Other banking product or service\",\n    \"Cashing a check without an account\": \"Other banking product or service\",\n    \"Vehicle lease\": \"Lease\",\n    \"Vehicle loan\": \"Loan\",\n    \"Check cashing\": \"Check cashing service\",\n    \"Mobile wallet\": \"Mobile or digital wallet\",\n    \"Traveler\u2019s\/Cashier\u2019s checks\": \"Traveler's check or cashier's check\"\n}\nprod2sub = {\n    \"Auto debt\": \"Debt collection\",\n    \"Credit card debt\": \"Debt collection\",\n    \"Federal student loan debt\": \"Debt collection\",\n    \"I do not know\": \"Debt collection\",\n    \"Medical debt\": \"Debt collection\",\n    \"Mortgage debt\": \"Debt collection\",\n    \"Private student loan debt\": \"Debt collection\",\n    \"Other debt\": \"Debt collection\",\n    \"Payday loan debt\": \"Debt collection\",\n    \"Credit repair services\": \"Credit reporting, credit repair services, or other personal consumer reports\",\n    \"Credit reporting\": \"Credit reporting, credit repair services, or other personal consumer reports\",\n    \"Other personal consumer report\": \"Credit reporting, credit repair services, or other personal consumer reports\",\n    \"Conventional home mortgage\": \"Mortgage\",\n    \"FHA mortgage\": \"Mortgage\",\n    \"Home equity loan or line of credit (HELOC)\": \"Mortgage\",\n    \"Other type of mortgage\": \"Mortgage\",\n    \"Reverse mortgage\": \"Mortgage\",\n    \"VA mortgage\": \"Mortgage\",\n    \"General-purpose credit card or charge card\": \"Credit card or prepaid card\",\n    \"General-purpose prepaid card\": \"Credit card or prepaid card\",\n    \"Gift card\": \"Credit card or prepaid card\",\n    \"Government benefit card\": \"Credit card or prepaid card\",\n    \"Student prepaid card\": \"Credit card or prepaid card\",\n    \"Payroll card\": \"Credit card or prepaid card\",\n    \"Other prepaid card\": \"Credit card or prepaid card\",\n    \"CD (Certificate of Deposit)\": \"Checking or savings account\",\n    \"Checking account\": \"Checking or savings account\",\n    \"Other banking product or service\": \"Checking or savings account\",\n    \"Savings account\": \"Checking or savings account\",\n    \"Lease\": \"Vehicle loan or lease\",\n    \"Loan\": \"Vehicle loan or lease\",\n    \"Federal student loan\": \"Student loan\",\n    \"Private student loan\": \"Student loan\",\n    \"Installment loan\": \"Payday loan, title loan, or personal loan\",\n    \"Pawn loan\": \"Payday loan, title loan, or personal loan\",\n    \"Payday loan\": \"Payday loan, title loan, or personal loan\",\n    \"Personal line of credit\": \"Payday loan, title loan, or personal loan\",\n    \"Title loan\": \"Payday loan, title loan, or personal loan\",\n    \"Check cashing service\": \"Money transfer, virtual currency, or money service\",\n    \"Debt settlement\": \"Money transfer, virtual currency, or money service\",\n    \"Domestic (US) money transfer\": \"Money transfer, virtual currency, or money service\",\n    \"Foreign currency exchange\": \"Money transfer, virtual currency, or money service\",\n    \"International money transfer\": \"Money transfer, virtual currency, or money service\",\n    \"Mobile or digital wallet\": \"Money transfer, virtual currency, or money service\",\n    \"Money order\": \"Money transfer, virtual currency, or money service\",\n    \"Refund anticipation check\": \"Money transfer, virtual currency, or money service\",\n    \"Traveler's check or cashier's check\": \"Money transfer, virtual currency, or money service\",\n    \"Virtual currency\": \"Money transfer, virtual currency, or money service\"\n}","5e0176cf":"def get_subprods(x):\n    \n    if x['Sub-product'] in mapping_old2new:\n        if x['Sub-product']==\"Other\":\n            if x['Product']=='Mortage':\n                return(\"Other type of mortgage\")\n            else:\n                return(\"Other debt\")\n        else:\n            return(mapping_old2new[x['Sub-product']])\n    else:\n        return(x['Sub-product'])\n\ncomplaints['Sub-product'] = complaints[['Product','Sub-product']].apply(lambda x: \n                                                                       get_subprods(x), axis =1)","3eda638a":"prodmap = {\n    \"Payday loan\": \"Payday loan, title loan, or personal loan\",\n    \"Credit reporting\": \"Credit reporting, credit repair services, or other personal consumer reports\",\n    \"Credit card\": \"Credit card or prepaid card\"\n}\ndef get_product(x):\n    \n    if not isinstance(x['Sub-product'], str):\n        if x['Product'] in prodmap:\n            return(prodmap[x['Product']])\n        else:\n            return(x['Product'])\n    else:\n        return(prod2sub[x['Sub-product']])\n    \ncomplaints['Product'] = complaints[['Product','Sub-product']].apply(lambda x: get_product(x), axis =1)","6900a369":"products = complaints.Product.unique()\nprint(len(products), products)","14b5d086":"plt.figure(figsize = (25,8))\nplt.xticks(rotation=50, fontsize=15, ha=\"right\")\nplt.yticks(fontsize=15)\ng = sns.countplot(x='Product', data = complaints,  order = complaints[\"Product\"].value_counts().index)\ng.set_xlabel(\"Product\", fontsize=25)\ng.set_ylabel(\"Count\", fontsize=25)","4984d64a":"from ipywidgets import widgets, interact, interactive\nw = widgets.ToggleButtons(\n    options=complaints.Product.value_counts().index,\n    description='Product:',\n    disabled=False,\n    button_style='', # 'success', 'info', 'warning', 'danger' or ''\n#     icons=['check'] * 3\n)\n\n@interact(product = w)\ndef plot_subproduct(product=w):\n    plt.figure(figsize = (10,5))\n    plt.xticks(rotation=50, fontsize=15, ha=\"right\")\n    plt.yticks(fontsize=15)\n    g = sns.countplot(x='Sub-product', data = complaints[complaints.Product==product], \n                                order=complaints[complaints.Product==product][\"Sub-product\"].value_counts().index)\n    g.set_xlabel(\"Sub-products({product})\".format(product=product), fontsize=25)\n    g.set_ylabel(\"Count\", fontsize=25)","c204e181":"from ipywidgets import widgets, interact, interactive\n\nw = widgets.ToggleButtons(\n    options=['Mortgage', 'Credit reporting, credit repair services, or other personal consumer reports',\n                             'Debt collection'],\n    description='Product:',\n    disabled=False,\n    button_style='', # 'success', 'info', 'warning', 'danger' or ''\n#     icons=['check'] * 3\n)\nz = widgets.ToggleButtons(\n    options= complaints[complaints.Product==\"Mortgage\"]['Sub-product'].unique(),\n    description='Sub-Product:',\n    disabled=False,\n    button_style='', # 'success', 'info', 'warning', 'danger' or ''\n#     icons=['check'] * 3\n)\n\ndef op_update_product(*args):\n    z.options = [x for x in complaints[complaints.Product == w.value ]['Sub-product'].unique() \n                         if isinstance(x, str)]\n\nw.observe(op_update_product, 'value')\n\n@interact(product = w, subproduct=z)\ndef plot_issue(product=\"Mortgage\", subproduct=\"VA mortgage\"):\n    #op_update_product()\n    num_vals = len(complaints[(complaints.Product == product) & \n                                                   (complaints['Sub-product'] == subproduct)]['Issue'].value_counts().index)\n    xdim=10\n    if num_vals<6:\n        xdim=8\n    elif num_vals<12:\n        xdim = 15\n    else:\n        xdim=20\n        \n    plt.figure(figsize = (xdim,6))\n    plt.xticks(rotation=50, fontsize=15, ha=\"right\")\n    plt.yticks(fontsize=15)\n    g = sns.countplot(x='Issue', data = complaints[(complaints.Product == product) & \n                                                   (complaints['Sub-product'] == subproduct)], \n                      order = complaints[(complaints.Product == product) & \n                                                   (complaints['Sub-product'] == subproduct)]['Issue'].value_counts().index)\n    g.set_xlabel(\"Issues related to {Product}\".format(Product=product), fontsize=25)\n    g.set_ylabel(\"Count\", fontsize=25)\n\n","4bc51dfa":"companies = complaints.groupby('Company').Company.count().sort_values(ascending=False)\nprint(len(companies))\ncompanies.head()","46dee0ed":"# top 15 companies with largest number of complaints.\nplt.figure(figsize = (25,8))\nplt.xticks(rotation=50, fontsize=15, ha=\"right\")\nplt.yticks(fontsize=15)\ng = sns.barplot(companies.index[0:15], companies.values[0:15])\ng.set_xlabel(\"Worst 15 Companies with largest number of complaints\", fontsize=25)\ng.set_ylabel(\"Count\", fontsize=25)\n","25a6626a":"c = widgets.ToggleButtons(\n    options= companies.index[0:6],\n    description='Product:',\n    disabled=False,\n    button_style='', # 'success', 'info', 'warning', 'danger' or ''\n#     icons=['check'] * 3\n)\n\n@interact(company = c)\ndef plot_companies(company=\"EQUIFAX, INC.\"):\n    issue_company = (complaints[complaints['Company']==company].groupby(\"Issue\").\n                                Issue.count().sort_values(ascending=False)[0:10])\n    plt.figure(figsize = (15,8))\n    plt.xticks(rotation=50, fontsize=15, ha=\"right\")\n    plt.yticks(fontsize=15)\n    g = sns.barplot( issue_company.index, issue_company.values)\n    g.set_xlabel(\"Issues with {company}\".format(company=company), fontsize=25)\n    g.set_ylabel(\"Count\", fontsize=25)\n","da47f783":"# what was the company response\nplt.figure(figsize = (15,6))\nplt.xticks(rotation=\"50\", ha=\"right\", size = 10)\ng = sns.countplot(x =\"Company Response to Consumer\", data = complaints, \n                  order = complaints['Company Response to Consumer'].value_counts().index)\ng.set_xlabel(\"Response to Consumer complaint\", fontsize=25)\ng.set_ylabel(\"Count\", fontsize=25)","f616dfee":"c = widgets.ToggleButtons(\n    options= companies.index[0:6],\n    description='Product:',\n    disabled=False,\n    button_style='', # 'success', 'info', 'warning', 'danger' or ''\n#     icons=['check'] * 3\n)\n@interact(company = c)\ndef plot_response(company = \"EQUIFAX, INC.\"):\n    plt.figure(figsize = (15,6))\n    plt.xticks(rotation=\"50\", ha=\"right\", size = 10)\n    g = sns.countplot(x =\"Company Response to Consumer\", \n                      data = complaints[complaints.Company==company],\n                      order = complaints[complaints.Company==company][\"Company Response to Consumer\"].value_counts().index)\n    g.set_xlabel(\"{company} response to Consumer complaint\".format(company = company), fontsize=25)\n    g.set_ylabel(\"Count\", fontsize=25)","48c6d1b8":"!wget http:\/\/www2.census.gov\/geo\/tiger\/GENZ2017\/shp\/cb_2017_us_state_500k.zip -O state.zip\n!unzip state.zip","94e4f321":"import geopandas as gpd","a1181e06":"states_2_rm = [\"AK\", \"PR\", \"GU\", \"MP\", \"VI\", \"AS\",\"HI\"]\nmap_df = gpd.read_file('cb_2017_us_state_500k.shp')\n\n#select only continuous us states\nmap_df = map_df[~map_df['STUSPS'].isin(states_2_rm)]\n","048dc6fa":"#plot of the us state boundary map\nfig, ax = plt.subplots(1, figsize=(15, 8))\nmap_df.plot(ax=ax)\nv=map_df.apply(lambda x: ax.annotate(s=x.NAME, xy=x.geometry.centroid.coords[0], ha='center'),axis=1)","ccf54d45":"# top 20 states with most number of complaints\ngp_state = complaints.groupby('State')\nplt.figure(figsize = (15,8))\nplt.xticks(rotation=\"50\", ha=\"right\", size = 10)\nstate_count = gp_state.State.count().sort_values(ascending=False)\nsns.barplot(state_count.index[0:20], state_count.values[0:20])","41d99ed4":"merged_df = map_df.merge(pd.Series.to_frame(gp_state.State.count()), \n                         left_on=\"STUSPS\", right_index=True, how=\"left\")","d7fdeac1":"fig, ax = plt.subplots(1, figsize=(15, 8))\nsm = plt.cm.ScalarMappable(cmap=\"Blues\", norm=plt.Normalize(vmin=0.0, vmax=143662))\nsm._A = []\nmerged_df.plot(column = \"State\", ax = ax, cmap=\"Blues\", linewidth=1.0, edgecolor='black')\nfig.colorbar(sm)","151ecf23":"# let's check distribution of  top 4 products across states\nimport matplotlib as mpl\nfrom mpl_toolkits.axes_grid1 import make_axes_locatable\n\nfig, ax  = plt.subplots(4, figsize=(10, 25), sharex=True, sharey=True)\ndef prod2state( ax, product=\"Mortgage\"):\n    gp_state = complaints[complaints.Product==product].groupby('State').State.count()\n    vmin = gp_state.min()\n    vmax = gp_state.max()\n    merged_df = map_df.merge(pd.Series.to_frame(gp_state), \n                         left_on=\"STUSPS\", right_index=True, how=\"left\")\n    sm = plt.cm.ScalarMappable(cmap=\"Blues\", norm=plt.Normalize(vmin = vmin, vmax = vmax))\n    sm._A = []\n    merged_df.plot(column = \"State\", ax = ax, cmap=\"Blues\", linewidth=1.0, edgecolor='black')\n    divider = make_axes_locatable(ax)\n    cax = divider.append_axes(\"right\", size=\"5%\", pad=0.05)\n    fig.colorbar(sm, cax=cax)\n    ax.set_title(product)\n\n#fig.tight_layout(w_pad=10)\nprod2state(ax[0], 'Mortgage')\nprod2state(ax[1], \"Debt collection\")\nprod2state(ax[2], 'Credit reporting, credit repair services, or other personal consumer reports')\nprod2state(ax[3], 'Credit card or prepaid card')","ec7f582d":"companies.index[0:6]","c0f0a8cd":"fig, ax  = plt.subplots(6, figsize=(10, 35), sharex=True, sharey=True)\ndef prod2state( ax, company):\n    gp_state = complaints[complaints.Company==company].groupby('State').State.count()\n    vmin = gp_state.min()\n    vmax = gp_state.max()\n    merged_df = map_df.merge(pd.Series.to_frame(gp_state), \n                         left_on=\"STUSPS\", right_index=True, how=\"left\")\n    sm = plt.cm.ScalarMappable(cmap=\"Blues\", norm=plt.Normalize(vmin = vmin, vmax = vmax))\n    sm._A = []\n    merged_df.plot(column = \"State\", ax = ax, cmap=\"Blues\", linewidth=1.0, edgecolor='black')\n    divider = make_axes_locatable(ax)\n    cax = divider.append_axes(\"right\", size=\"5%\", pad=0.05)\n    fig.colorbar(sm, cax=cax)\n    ax.set_title(company)\nprod2state(ax[0], 'EQUIFAX, INC.')\nprod2state(ax[1], \"BANK OF AMERICA, NATIONAL ASSOCIATION\")\nprod2state(ax[2], 'Experian Information Solutions Inc.')\nprod2state(ax[3], 'TRANSUNION INTERMEDIATE HOLDINGS, INC.')\nprod2state(ax[4], 'WELLS FARGO & COMPANY')\nprod2state(ax[5], 'JPMORGAN CHASE & CO.')","3ac3a299":"Let's create a few variables from the date variable for analysis.  Does the number of complaints increases every year? Is there a particular month when consumers are more likely to file a complaint?","fd9042d9":"The CFCB has updated its application form and rearranged and merged some of the products and sub-products. We need to replace the old values with the new ones before starting analysis to make sure it's consistent. [This doc](https:\/\/files.consumerfinance.gov\/f\/documents\/201704_cfpb_Summary_of_Product_and_Sub-product_Changes.pdf) explains the mapping from old to new.","688f9881":"Product variable categories and their sub-products  as listed by CFCB:  \n1. Checking or savings account:  \n          Sub Products:  CD, Checking account, Savings account, Other banking Product or service\n2 . Credit card or prepaid card:  \n            Sub Products:  General purpose credit card or charge card,  Store credit card, General-purpose predpaid card, Government benfeit card, Payroll card, Gift card, Student   prepaid card  \n3. Credit reporting, credit repair services, or other personal consumer reports:  \n            Sub Products:  Credit repair services, Credit reporting, Other personal consumer reports  \n4. Debt collection:\n            Sub Products: Auto debt, Credit card debt, Federal sudent loan debt, I do not know, Mortgage debt, Medical debt, Private student loan debt,  Payday loan debt, other loan debt\n5. Money transfer, virtual currency, or money service:\n            Sub Products: Check cashing service, Debt settlement, Domestic money transfer, Foriegn currency exchange, International money trasfer, Mobile or digital wallet, Money order,  Refund anticipation check, Traveller's check or cashier check, Virtual currency\n6. Mortgage:\n                Sub Products:  Conventional home mortgage, FHA mortgage, Home equity loan or line of credit, Other type of mortgage, Reverse mortgage\n7. Payday loan, title loan, or personal loan:\n            Sub Products: Installment Loan , Pawn loan, Payday loan, Personal line of credit, Title loan\n8. Student loan:\n            Sub Products: Federal Student Loans, Private Student Loan\n9. Vehicle loan or lease:\n             Sub Products: Lease, Loan","a95c713c":"We need to download the shapefiles of US states. Run the command below to download shapefiles and unzip them.\nAlso, we will be removing shape data for non-contiguous states to get a better view of contiguous states.","1b46b3b4":"Number of complaints in each month does not differ much.","7b1771de":"### Worst 15  companies ranked by number of consumer complaints","30ab08f2":"Our spatial analysis tell us that a large part of complaints come from few states which are economically better than other states. The  consumers from other states like montana, wyoming , north dakota  don't have many complaints. why? Is it possible that banking services are better is these states? Or people from these states are not aware of the CFPB platform?","71cc2da4":"Let's explore the variable **Product**.","82e880f0":"There is steady increase in number of complaints over the years. This can be attributed to two likely reasons:\n1. More and more consumers are getting aware of CFCB platform and using it to resolve their complaints.\n2. The number of consumers availing these products has increased.","68de225f":"**Distribution of complaints by year(-2018)**","625d7609":"### Companies against whom these complaints have been filed:\nLet's check the companies against whom consumers have filed these complaints.","2fc29fa6":"Let's check the issues related to top 3 products","be8773ad":"**Mortgage** & **Credit card or prepaid card**: Complaints related to mortgages and credit or prepaid card follow same spatial distribution as total number of complaints California, Florida, Texas and then new york. \n**Credit reporting** & **Debt collection**: The number of complaints from texas and florida are close to number of complaints from florida.","df888d1b":"#### How many complainants belong to a state?","1c9c4ac8":"### Sub-products of Mortgage:\nConventional fixed mortgage  and Other mortgage are the subproducts which require more attention from the banks. \n\n### Sub-products of Credit reporting:\nIt seems that credit reporting( bad report, misuse of report e.t.c) is massive issue for credit rating agencies and unions.\n\n### Sub-products of Debt collection:\nOther debt( phone debt, health club e.t.c ) and I do not know  are the major issues for relevant parties.","a7af5f6d":"We see that consumer mostly complain about the mortgage,  credit reporting and debt collection. Let's see the sub-products and issues related to these products.","eab3ec2f":"Most of complaints are closed with explanation without any monetory or non-monetary relief. So, if you have a monetary dispute good luck getting that money back.","fc940291":"We see a large number of NaN values in many columns. Before we proceed further and process these NaN values let's have a look at how these variables are related( [check this](https:\/\/cfpb.github.io\/api\/ccdb\/fields.html) ).  \n**Sub-product**: Every product doesn't have a subproduct for ex. vehicle loan . So naturally we will have some NaN values in sub-product.  \n**Issue**: Issue depends on both product and sub-product. Different products and sub-products have different issues.  \n**Sub-Issue**:  Sub-issue depends on product, sub-product and issue. Hence, it is likely  that it will have more NaN values.  \n**Customer complaint**: We have large number of nan values in this column. The best possible explaination of this is that customer has not given or retracted his consent on making complaint public( CFCB provides this option).  \n**Company  response**: This is an optional column like customer complaint.  \n\n","36c213a8":"**Distribution of Complaints by Product**","d94aad2e":"All credit reporting institutions (equifax, transunion, experian) have similar distributions. It is consistent with the spatial distribution of credit reporting complaints in the cell above.  The retail banking institutions(wells fargo, jp morgan & chase) see most of complaints from a single state california.","c54bcb20":"### Let's check the products and issues related to each of worst 6 companies","fc5ab4a7":"### Geospatial Analysis of complaints and consumers\nSo far, we have explored products, issues, companies and their relations.  Let's use spatial analysis to get more information about the complaints. For ex.\n1. To which state most complainants belong?\n2. Do consumers from a particular state complain more about an issue?\n3. Are the services of a company more likely to be poor or better in a paritcular state?\n","3e84de58":"### Companies response to Consumer\nWhat are responses given by companies to consumers? Does a company is more likely to respond in a paritcular way?","baedad79":"### Distribution of products across states","35744b12":"California, Florida, Texas and New York are the states which have most number of complainants.","94f9ca5e":"**Consumer financial protection bureau**:  CFPB works to hold financial institutions accountable in matters related to financial products. CFPB contacts the relevant party on the behalf of consumer after a consumer files a complaint with it against the party.  Also, it analyzes the database of complaints  and takes relevant  actions to deter financial institutions from indulging in abusive, misinformed and fraudulent practices.   \nWe will be exploring the CFPB complaints database to glean some useful insights.\n\n** This kernel uses some ipywidgets for interactive graphs. Fork the notebook to see those graph working**","6bfc5a9f":"Spatial distribution of complaints by worst 6 companies in number of complaints","8f5fff70":"For companies like Equifax, Experian and transunion(all are credit rating agencies) primary issues are incorrect information on credit report or some other kind of report. The retail bankers like Wells Fargo, JP morgan & chase and Bank of america have high number of complaints in mortgage servicing and processing."}}