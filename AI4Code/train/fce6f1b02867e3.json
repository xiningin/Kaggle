{"cell_type":{"ae27a2e5":"code","b8c9c02e":"code","814e5fa6":"code","7f08fb34":"code","94bac9e1":"code","9599e412":"code","096a91a0":"code","fedf2b3b":"code","a277e84f":"code","7763f9e7":"code","0b06bfca":"code","09a4b7be":"code","4f703987":"code","0a9cc110":"code","97f8f880":"code","248264db":"code","90f5689b":"code","db8b43a4":"code","486166d7":"code","9aab5ad6":"code","5c607e88":"markdown","5f3b7873":"markdown","fda6fd6a":"markdown","3b8a24cc":"markdown","3c7851a1":"markdown","d133341f":"markdown","bf277ddd":"markdown"},"source":{"ae27a2e5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b8c9c02e":"data=pd.read_csv('..\/input\/early-stage-diabetes-risk-prediction-dataset\/diabetes_data_upload.csv')","814e5fa6":"# shows top 5 rows\ndata.head()","7f08fb34":"# shows 5 rows from bottom\ndata.tail()","94bac9e1":"# shows 4 rows from bottom, by giving argument in tail function\ndata.tail(4)","9599e412":"#shows columns name and their types\ndata.info()","096a91a0":"#shows columns name in the form of list\ndata.columns","fedf2b3b":"# shape of dataset\ndata.shape","a277e84f":"#read the values of only one column named as \"Age\"\ndata.Age","7763f9e7":"#read the values of multiple columns\ndata[['Age','Gender']]","0b06bfca":"#read the value by index\ndata.iloc[0]","09a4b7be":"#read the value by range of the index\ndata.iloc[0:6]","4f703987":"#read the value by range of the index\ndata.iloc[0:6,0:2]","0a9cc110":"#read the value by indivisual index\ndata.iloc[[0,2,6,8],[0,2]]","97f8f880":"# retrieve the datapoints that have the Age = 50 and Gender=Female\ndata.loc[(data.Age==50) &(data.Gender==\"Female\")]","248264db":"# retrieve the class of the diabetes that have the Age = 50 and Gender=Female\ndata.loc[(data.Age==50) &(data.Gender==\"Female\")]['class']","90f5689b":"# scaler value will assign to all the rows or we have to assign n size vector\/list to the new column\ndata['new']=0\ndata.new","db8b43a4":"# inplace=True will change the current dataset otherwise we have to assign it to other dataframe.\ndata.drop(columns=\"new\",inplace = True)\ndata.columns","486166d7":"data.rename(columns = {\"Age\":\"age\",\"Gender\":\"gender\"},inplace=True)","9aab5ad6":"data.columns","5c607e88":"## Drop the column","5f3b7873":"## Add new column to dataset","fda6fd6a":"## Replace the values","3b8a24cc":"## Rename the column name","3c7851a1":"## loc retrieve data points using the label of rows\/columns and accept boolean arguments.","d133341f":"## iloc retrieve the data points using the index values of rows\/columns and doesnot accept boolean arguments","bf277ddd":"# ****Here we try to learn about pandas basic operations over the early stage diabetes detection dataset****\n\n## reading the csv dataset"}}