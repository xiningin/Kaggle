{"cell_type":{"4ddf4ce5":"code","01292f45":"code","ed6608b4":"code","4936c677":"code","79c629a8":"code","c0d81036":"code","2772c79f":"code","d83c7dc5":"code","f35f4b6f":"code","a4340f1d":"code","2e59ddf0":"code","e4299e2d":"code","ca0b52af":"code","f1e73f31":"code","32e510f5":"code","2ac0fae3":"code","74ccf349":"code","088a6f00":"code","33de95f6":"code","34a3b7ae":"code","4b952350":"code","6ef8be69":"code","d3142733":"code","15beb0ae":"code","044b9de1":"code","b632b065":"markdown","edd3c90e":"markdown"},"source":{"4ddf4ce5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","01292f45":"df=pd.read_csv(\"..\/input\/knn-data1\/KNN_Project_Data\")","ed6608b4":"df.head()","4936c677":"\nimport matplotlib.pyplot as plt\nfrom matplotlib.ticker import NullFormatter\nimport matplotlib.ticker as ticker\nfrom sklearn import preprocessing\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.neighbors import KNeighborsClassifier","79c629a8":"df.columns","c0d81036":"df['TARGET CLASS'].value_counts()","2772c79f":"df.hist(column='XVPM',bins=30)\nplt.tight_layout()","d83c7dc5":"sns.pairplot(data=df,hue='TARGET CLASS')","f35f4b6f":"X=df.drop('TARGET CLASS',axis=1)","a4340f1d":"y=df['TARGET CLASS']","2e59ddf0":"X=StandardScaler().fit(X).transform(X.astype(float))","e4299e2d":"X","ca0b52af":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=0)\nprint('size of train set',X_train.shape,y_train.shape)\nprint('size of test set',X_test.shape,y_test.shape)","f1e73f31":"k=4\nmodel=KNeighborsClassifier(n_neighbors=k)","32e510f5":"model.fit(X_train,y_train)\npred=model.predict(X_test)","2ac0fae3":"pred","74ccf349":"from sklearn.metrics import accuracy_score,confusion_matrix,f1_score,classification_report","088a6f00":"print(\"out sample accuracy\",accuracy_score(pred,y_test))\nprint(\"in sample accuracy\",accuracy_score(y_train,model.predict(X_train)))","33de95f6":"confusion_matrix(pred,y_test)","34a3b7ae":"f1_score(pred,y_test)","4b952350":"\nk_val=40\nmean_acc=np.zeros((k_val-1))\nfor n in range(1,k_val):\n    model1=KNeighborsClassifier(n_neighbors=n)\n    model1.fit(X_train,y_train)\n    pred=model1.predict(X_test)\n    mean_acc[n-1]=accuracy_score(pred,y_test)\n\n\nmean_acc    ","6ef8be69":"p=np.arange(1,k_val)\nplt.style.use('ggplot')\nwith plt.style.context('dark_background'):\n    plt.figure(figsize=(12,8))\n    plt.plot(p,mean_acc,'r-o')\n    plt.legend(('Accuracy ', '+\/- 3xstd'))\n    plt.ylabel('Accuracy ')\n    plt.xlabel('Number of Nabors (K)')\n    plt.tight_layout()\nplt.show()","d3142733":"print(\"best accuracy is\",mean_acc.max(),'for k value=',mean_acc.argmax())","15beb0ae":"model1=KNeighborsClassifier(n_neighbors=11)\nmodel1.fit(X_train,y_train)\npred=model1.predict(X_test)\n","044b9de1":"print(classification_report(pred,y_test))","b632b065":"# import all useful libraries","edd3c90e":"### LOADING THE DATASET"}}