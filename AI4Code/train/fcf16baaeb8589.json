{"cell_type":{"e1b6d336":"code","6d08bef3":"code","13a25d4a":"code","f86a874a":"code","4f551667":"code","2decbe3b":"code","8591518a":"code","87cb8d04":"code","7cf23fae":"code","ff4ac230":"code","56daf749":"code","dc4ddb84":"code","2118cf76":"code","72417495":"code","f39c792c":"code","171c28fd":"code","0a026755":"code","06dce368":"code","6f0934ed":"code","03e51ac9":"code","bef24ee8":"code","647158d9":"code","15d23880":"code","c95b5c0d":"code","3b13a96d":"code","d488acc4":"markdown","fd2fa0ca":"markdown","2c477991":"markdown","697401b5":"markdown","ac3b5121":"markdown","4a58453c":"markdown","48b9cef3":"markdown","a485f1c3":"markdown","d068cf80":"markdown","0b7df8ba":"markdown"},"source":{"e1b6d336":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Import all required libraries for machine learning\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import roc_auc_score,roc_curve,accuracy_score,confusion_matrix\nfrom sklearn.model_selection import train_test_split\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","6d08bef3":"train = pd.read_json(\"..\/input\/train.json\")\ntest = pd.read_json(\"..\/input\/test.json\")","13a25d4a":"train.head(2)\n# test.head(2)","f86a874a":"print(train.shape)\nprint(test.shape)","4f551667":"train_df = pd.DataFrame()","2decbe3b":"test_df = pd.DataFrame()","8591518a":"for frame in train.audio_embedding:\n    tmp = pd.DataFrame(np.array(frame).reshape(1,-1))\n    train_df = train_df.append(tmp)","87cb8d04":"for frame in test.audio_embedding:\n    tmp = pd.DataFrame(np.array(frame).reshape(1,-1))\n    test_df = test_df.append(tmp)","7cf23fae":"for k in train_df:\n    train_df[k].fillna(train_df[k].mean(),inplace=True)","ff4ac230":"for k in train_df:\n    test_df[k].fillna(test_df[k].mean(),inplace=True)","56daf749":"X_train,X_test,y_train,y_test = train_test_split(train_df,train.is_turkey,test_size=.2)","dc4ddb84":"lr = LogisticRegression()","2118cf76":"lr.fit(X_train,y_train)","72417495":"y_pred = lr.predict(X_test)\ny_pred","f39c792c":"accuracy_score(y_test,y_pred)*100","171c28fd":"conf_mat = confusion_matrix(y_test,y_pred)\nconf_mat","0a026755":"label = [\"Turkey\",\"Not_Turkey\"]\nsns.heatmap(conf_mat,annot=True,fmt=\"d\",xticklabels=label,yticklabels=label)","06dce368":"logit_roc_auc = roc_auc_score(y_test, lr.predict(X_test))\nfpr, tpr, thresholds = roc_curve(y_test, lr.predict_proba(X_test)[:,1])\nplt.figure(figsize=(8,4))\nplt.plot(fpr, tpr, label='Logistic Regression (area = %0.2f)' % logit_roc_auc)\nplt.plot([0, 1], [0, 1],'r--')\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('Receiver operating characteristic')\nplt.legend(loc=\"lower right\")\nplt.savefig('LogisticRegression_ROC')\nplt.show()","6f0934ed":"y_pred2 = lr.predict(test_df.iloc[:-1,])\ny_pred2","03e51ac9":"y_pred2[y_pred2==0].size","bef24ee8":"y_pred2[y_pred2==1].size","647158d9":"submit = pd.read_csv(\"..\/input\/sample_submission.csv\")","15d23880":"submit.is_turkey[1:] = y_pred2","c95b5c0d":"submit.to_csv('submission.csv', index=False)","3b13a96d":"pd.read_csv(\"submission.csv\")","d488acc4":"\n# Fill NaN with mean value for Test dataset","fd2fa0ca":"# Evaluate Train model with Logistic Regression","2c477991":"# Create an Empty DataFrame and add the audio data in flat array format for each row","697401b5":"# Accuracy of the model is ","ac3b5121":"# Total Non-Turkey vice","4a58453c":"# ROC curve for trained mmodel","48b9cef3":"# Writing prediction to the file","a485f1c3":"# Total Turkey voice","d068cf80":"# Fill NaN with mean value for Train dataset","0b7df8ba":"# Predict the Turkey voice 0|1 wuth given data set"}}