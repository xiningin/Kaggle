{"cell_type":{"2acb8440":"code","5686b04e":"code","5ea1d3cb":"code","00cc1faa":"code","24398781":"code","c032bd08":"code","4f4787b6":"code","84e36a37":"code","39a1ab97":"code","b28f95b1":"code","73254098":"code","cbd2a7d3":"code","4ba33396":"code","7d983d1b":"code","8f0fa20b":"code","ca492e64":"code","2ee136be":"code","6051461a":"code","2b0002ab":"code","df31e629":"code","88e356bd":"code","21b2c8b8":"code","5e2a958a":"code","733a9c22":"code","5c998813":"code","ae738cd9":"code","c5a153a0":"markdown","0a50732e":"markdown","6d812b77":"markdown","3d0ceb71":"markdown","4286c3d8":"markdown","bee14f6e":"markdown"},"source":{"2acb8440":"import keras as kr\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\n%matplotlib inline\n\nimport warnings","5686b04e":"train = pd.read_csv('..\/input\/digit-recognizer\/train.csv')","5ea1d3cb":"test = pd.read_csv('..\/input\/digit-recognizer\/test.csv') ","00cc1faa":"train.shape","24398781":"test.shape","c032bd08":"y_train = train['label']","4f4787b6":"x_train = train.drop(['label'], axis=1)","84e36a37":"x_train.shape","39a1ab97":"len(y_train.unique()) #0-9 ","b28f95b1":"x_train = x_train.astype('float32')\ntest = test.astype('float32')","73254098":"x_train \/= 255\ntest \/= 255","cbd2a7d3":"plt.imshow(x_train.values.reshape(len(x_train), 28, 28)[9], cmap=\"Greys\")\nplt.colorbar()","4ba33396":"y_train = kr.utils.to_categorical(y_train) #converting labels to categorized form int form","7d983d1b":"y_train.shape","8f0fa20b":"x_train = x_train.values.reshape(-1, 28, 28, 1)  #Reshaping to 28x28 grayscale image\ntest = test.values.reshape(-1, 28, 28, 1)","ca492e64":"x_train.shape","2ee136be":"test.shape","6051461a":"from keras.models import Sequential\nfrom keras.layers import Conv2D, MaxPooling2D, Dense, Flatten \nfrom keras import layers","2b0002ab":"model = Sequential()\nmodel.add(layers.Conv2D(filters=32, kernel_size=(5,5), padding='same', activation='relu', input_shape=(28, 28, 1)))\nmodel.add(layers.MaxPool2D(strides=2))\nmodel.add(layers.Conv2D(filters=48, kernel_size=(5,5), padding='valid', activation='relu'))\nmodel.add(layers.MaxPool2D(strides=2))\nmodel.add(layers.Flatten())\nmodel.add(layers.Dense(256, activation='relu'))\nmodel.add(layers.Dense(84, activation='relu'))\nmodel.add(layers.Dense(36, activation='relu'))\nmodel.add(layers.Dense(10, activation='softmax'))","df31e629":"model.compile(loss='categorical_crossentropy', optimizer='rmsprop', metrics = ['accuracy'])\n","88e356bd":"model.fit(x_train, y_train, epochs=25, batch_size=256)","21b2c8b8":"output = model.predict(test)","5e2a958a":"output = np.argmax(output, axis = 1)","733a9c22":"output = pd.Series(output, name=\"Label\")","5c998813":"submission = pd.concat([pd.Series(range(1,28001), name = \"ImageId\"), output], axis = 1)","ae738cd9":"submission.to_csv(\"submission_05.csv\", index=False)","c5a153a0":"# IMPORT LIBRARIES AND DATASET","0a50732e":"# Building Model","6d812b77":"# Submission","3d0ceb71":"#NORMALIZATION","4286c3d8":"# Prediction","bee14f6e":"# Training"}}