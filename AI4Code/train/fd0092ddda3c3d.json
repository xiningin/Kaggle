{"cell_type":{"4b12cdb0":"code","84f25449":"code","6694c1a5":"code","3d243208":"code","1687f0a9":"code","a73b08bb":"code","ebcfdbb9":"code","0dc3eb6e":"code","19e1ac19":"code","87af1c53":"markdown","454527a8":"markdown","ed0bc27d":"markdown","b266ecef":"markdown","993fc041":"markdown","af336ad9":"markdown","3587b3fd":"markdown","ca27143f":"markdown","60c4f117":"markdown","73a937e1":"markdown"},"source":{"4b12cdb0":"import pandas as pd","84f25449":"dataset = pd.read_csv('..\/input\/tmdb-movies-dataset\/tmdb_movies_data.csv')\ndataset = pd.DataFrame(dataset)\nprint(dataset.info())","6694c1a5":"dataset.drop([\"id\", \"homepage\", \"keywords\", \"overview\", \"production_companies\", \"tagline\", \"imdb_id\", \"popularity\", \"director\", \"vote_count\", \"vote_average\", \"budget_adj\", \"revenue_adj\", \"release_year\"], axis = 1, inplace = True)\ndataset.drop_duplicates(inplace=True)\ndataset.drop(dataset[dataset['budget'] == 0].index, inplace = True) \ndataset.drop(dataset[dataset['revenue'] == 0].index, inplace = True) \ndataset.insert(0, 'New_ID', range(0, len(dataset)))\nprint(dataset.info())","3d243208":"print(\"Dates beofre processing them\\n\", dataset['release_date'].head(5))\ndataset['release_date'] = pd.to_datetime(dataset['release_date'])\nprint(\"Dates after processing them\\n\", dataset['release_date'].head(5))","1687f0a9":"def sort(column, n_num, keep_type_max, keep_type_min, keep_all): ############# column = dataset['column'] ### n_num, keep_type_max, keep_type_min, keep_all = nLargest or nSmallest parameters\n    dataset_sort = dataset.copy()\n    if(keep_all == \"no\"): \n        dataset_sort = dataset_sort.drop_duplicates(subset = column, keep=\"first\")\n    maximum = dataset_sort.loc[dataset_sort[column].nlargest(n_num, keep = keep_type_max).idxmin()]\n    id_max = dataset_sort.loc[lambda dataset_sort: dataset_sort[column] == maximum[column]]\n    \n    minimum = dataset_sort.loc[dataset_sort[column].nsmallest(n_num, keep = keep_type_min).idxmax()]\n    id_min = dataset_sort.loc[lambda dataset_sort: dataset_sort[column] == minimum[column]]\n    return id_max['original_title'], id_min['original_title']\n\nmaximum, minimum = sort('budget', 3, \"all\", \"all\", \"no\")\nprint(str(\"The third most budget movies in dataset are :- \\n\" + str(maximum) + \"\\n\\nThe third least budget movies in dataset are :- \\n\" + str(minimum) + \"\\n\\n############################################################\\n\"))","a73b08bb":"def average(start, end, column_use, column_want, text): ############# steat, end = limits for average ### column_use, column_want = dataset['column'] ### text = the working variable for average is text or number\n    identity_for_year = dataset.loc[lambda dataset: ((dataset[column_use] > start) & (dataset[column_use] < end))]\n    sum = 0\n    for temp in identity_for_year[column_want]:\n        if (text == \"text\"):\n            pieces = len(temp.split())\n            sum = sum + pieces\n        if (text == \"number\"):\n            sum = sum + temp\n    average_count = sum\/len(identity_for_year)\n    return average_count\n\ncount = average(pd.datetime(1999,12,31), pd.datetime(2007,1,1), 'release_date', 'original_title', \"text\")         \nprint(str(\"Average Word count in movie titles in 2000 - 2006 is approx :- \\n\" + str(round(count, 1)) + \" Words\\n\\n############################################################\\n\"))","ebcfdbb9":"def tit_for_tat(data1, column2, data1_column):\n    dataset_temp = dataset.copy()\n    dataset_temp[data1_column] = dataset_temp[data1_column].str.contains(data1)\n    dataset_temp.drop(dataset_temp[dataset_temp[data1_column] == False].index, inplace = True)\n    dataset_temp.drop([\"New_ID\", \"budget\", \"revenue\", \"original_title\", \"runtime\", \"release_date\"], axis = 1, inplace = True)\n    dataset_temp.insert(0, 'New_ID', range(0, len(dataset_temp)))\n    \n    set_genre = set()\n    for temp_genre in dataset_temp[column2].str.split('|').values:\n        if isinstance(temp_genre, float): continue\n        set_genre = set_genre.union(temp_genre)\n        \n    genre_count = dict()\n    for s in set_genre: genre_count[s] = 0\n    for temp_genre in dataset_temp[column2].str.split('|'):        \n        if type(temp_genre) == float and pd.isnull(temp_genre): continue        \n        for s in [s for s in temp_genre if s in set_genre]: \n            if pd.notnull(s): genre_count[s] += 1\n    genre_occurences = []\n    for k,v in genre_count.items():\n        genre_occurences.append([k,v])\n    genre_occurences.sort(key = lambda x:x[1], reverse = True)\n    return genre_occurences, genre_count\n\ncount, count1 = tit_for_tat(\"Vin Diesel\", 'genres', 'cast')\nprint(str(\"The most common genre of movies performed by Vin Diesel is :- \\n\" + str(count[:1]) + \"\\n\\n\"))\ncount, count1 = tit_for_tat(\"Emma Watson\", 'genres', 'cast')\nprint(str(\"The most common genre of movies performed by Emma Watson is :- \\n\" + str(count[:1]) + \"\\n\\n############################################################\\n\"))","0dc3eb6e":"maximum, minimum = sort('revenue', 1, \"all\", \"all\", \"yes\") ######################################## Using the fumction \"sort\" from question 1\nprint(str(\"The most revenue movies in dataset is :- \\n\" + str(maximum) + \"\\n\\nThe least revenue movies in dataset is :- \\n\" + str(minimum) + \"\\n\\n############################################################\\n\"))","19e1ac19":"count = average(pd.datetime(2005, 12, 31), pd.datetime(2007, 1, 1), 'release_date', 'runtime', \"number\") ######################################## Using the fumction \"average\" from question 2\nprint(str(\"Average runtime of movies in 2006 is approx :- \\n\" + str(round(count, 2)) + \" Minutes\\n\"))","87af1c53":"# Questions ansered in this code are\n\n## 1) Which are the movies with the third-lowest and third-highest budget?\n## 2) What is the average number of words in movie titles between the year 2000-2005?\n## 3) What is the most common Genre for Vin Diesel & Emma Watson movies?\n## 4) Which are the movies with most and least earned revenue?\n## 5) What is the average runtime of movies in the year 2006?","454527a8":"here you can see there are  many columns we will not get much information from, so a cleaning will be performed!!","ed0bc27d":"now it's time to solve our questions.\n# Which are the movies with the third-lowest and third-highest budget?","b266ecef":"# What is the average number of words in movie titles between the year 2000-2005?","993fc041":"Now the dataset is much clean and can be used properly to get oour ansers!","af336ad9":"Importing the dataset","3587b3fd":"# What is the average runtime of movies in the year 2006?","ca27143f":"Importing the liberaries to work with","60c4f117":"# What is the most common Genre for Vin Diesel & Emma Watson movies?","73a937e1":"# Which are the movies with most and least earned revenue?"}}