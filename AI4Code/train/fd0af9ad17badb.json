{"cell_type":{"8d61ddff":"code","7e4c81be":"code","9aa67f01":"code","aa70eca3":"code","93eb6561":"code","0cd9bdd2":"code","0ce77ad3":"code","deab4059":"code","f2ff2241":"code","a91ffad3":"code","6d16942c":"code","d8fd87ee":"code","666c2199":"code","0577c76e":"code","c5d6a1ec":"code","3daebe50":"markdown","5bde9d24":"markdown","92e55e48":"markdown"},"source":{"8d61ddff":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport imageio\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\nfrom PIL import Image, ImageDraw\nfrom ast import literal_eval\nimport os","7e4c81be":"PATH = '\/kaggle\/input\/global-wheat-detection\/'","9aa67f01":"train_df = pd.read_csv(PATH+'train.csv')\ntrain_images = pd.Series(os.listdir(PATH + '\/train\/')).sort_values(ascending=True).reset_index(drop=True)\ntest_images = pd.Series(os.listdir(PATH + '\/test')).sort_values(ascending=True).reset_index(drop=True)\nsample_submission = pd.read_csv(f'{PATH}\/sample_submission.csv')","aa70eca3":"train_df.head()","93eb6561":"#unique image ids\nprint(train_df[\"image_id\"].nunique())","0cd9bdd2":"x = train_df['source'].value_counts()","0ce77ad3":"x.plot(kind='bar')","deab4059":"sample_submission.head()","f2ff2241":"fig, ax = plt.subplots(nrows=2, ncols=4, figsize=(16, 8))\nk=0\nfor i, row in enumerate(ax):\n    for j, col in enumerate(row):\n        img = mpimg.imread(PATH + '\/train\/' + train_images[k])\n        col.imshow(img)\n        col.set_title(train_images[k])\n        k=k+1\nplt.suptitle('Samples from train Images', fontsize=14)\nplt.show()","a91ffad3":"fig, ax = plt.subplots(nrows=2, ncols=4, figsize=(16, 8))\nk=0\nfor i, row in enumerate(ax):\n    for j, col in enumerate(row):\n        img = mpimg.imread(PATH + '\/test\/' + test_images[k])\n        col.imshow(img)\n        col.set_title(test_images[k])\n        k=k+1\nplt.suptitle('Samples from Test Images', fontsize=14)\nplt.show()","6d16942c":"for folder in os.listdir(PATH):\n    try:\n        print(f\"Folder {folder} contains {len(os.listdir(PATH + '\/' + folder))} images.\")\n    except:\n        print(f'{folder}')","d8fd87ee":"display_train_image = train_df.loc[train_df['image_id'] == 'b6ab77fd7']","666c2199":"display_train_image.head()","0577c76e":"image_id = 'train\/b6ab77fd7'\nimage_path = os.path.join(PATH + image_id + \".jpg\")\nimage = Image.open(image_path)\n\nboxes = [literal_eval(box) for box in train_df.loc[train_df['image_id'] == 'b6ab77fd7']['bbox']]\n\nprint(boxes)","c5d6a1ec":"# visualize them\ndraw = ImageDraw.Draw(image)\nfor box in boxes:    \n    draw.rectangle([box[0], box[1], box[0] + box[2], box[1] + box[3]], width=3)\n\nplt.figure(figsize = (15,15))\nplt.imshow(image)\nplt.show()","3daebe50":"### display different sources","5bde9d24":"# Display Images","92e55e48":"# let's Apply BBox on single Image ID"}}