{"cell_type":{"0993d089":"code","63268937":"code","7f019a89":"code","d0966c64":"code","9e1ff735":"code","19d101a0":"code","bf753676":"code","c49b11cc":"code","c81c06b5":"code","8fd19af2":"code","71fab433":"code","09e7fa72":"code","43ac2a78":"code","d26bbaf9":"code","73b8cf5a":"code","30029ccc":"code","8428fba3":"code","75073d6e":"code","977aa4e0":"code","4e3709fc":"code","f70a44ac":"code","f7144802":"code","8abadea1":"code","5fd1ca05":"code","9489978a":"code","aae23e71":"code","d8ca3dbe":"code","0c20974b":"code","0353315f":"code","01081088":"code","15b98eb7":"code","a29b5c67":"code","e4a06c1d":"code","21611d73":"code","4e0a4720":"code","3ed49ee8":"code","1c5b68e4":"code","929a9ad8":"code","078eb7f9":"code","4239f505":"code","a8f5da69":"code","c3632014":"code","42b4da9d":"markdown","7c9bb056":"markdown","ce87dd91":"markdown","53a3b919":"markdown"},"source":{"0993d089":"# Import Python packages\n\nimport os\nimport numpy as np \nimport pandas as pd\npd.set_option('display.max_columns', 5000)\nimport seaborn as sns\nimport plotly.graph_objs as go\nimport warnings \nwarnings.filterwarnings(\"ignore\")\nfrom plotly.offline import init_notebook_mode, iplot \ninit_notebook_mode(connected=True)\n\n# Define Helper Functions\n\ndef loadCSV(base_dir,file_name):\n    \"\"\"Loads a CSV file into a Pandas DataFrame\"\"\"\n    file_path = os.path.join(base_dir,file_name)\n    df = pd.read_csv(file_path)\n    return df\n\n# Load Data\n\nbase_dir = '\/kaggle\/input\/kaggle-survey-2019\/'\nsurvey_schema = loadCSV(base_dir,'survey_schema.csv')\nmultiple_choice = loadCSV(base_dir,'multiple_choice_responses.csv')\nresponses_only = multiple_choice[1:]\nresponse_counts = survey_schema[1:2]\nresponse_counts.drop(['2019 Kaggle Machine Learning and Data Science Survey'], inplace=True, axis=1)\nquestion_numbers = ['Q1','Q2','Q3','Q4','Q5','Q6','Q7','Q8','Q9','Q10','Q11','Q12',\n                 'Q13','Q14','Q15','Q16','Q17','Q18','Q19','Q20','Q21','Q22','Q23',\n                 'Q24','Q25','Q26','Q27','Q28','Q29','Q30','Q31','Q32','Q33','Q34']\nresponse_counts = response_counts.reindex(question_numbers,axis=1)","63268937":"def return_count(data,question_part):\n    \"\"\"Counts occurences of each value in a given column\"\"\"\n    counts = data[question_part].value_counts()\n    counts_df = pd.DataFrame(counts)\n    return counts_df\n\ndef return_percentage(data,question_part):\n    \"\"\"Calculates percent of each value in a given column\"\"\"\n    counts = data[question_part].value_counts()\n    total = int(response_counts[question_number])\n    percentage = (counts*100)\/total\n    value = [percentage]\n    question = [data[question_part]][0]\n    percentage_df = pd.DataFrame(data=value).T     \n    return percentage_df\n\ndef return_percentage_multiple_choice_multiple_choice_selection(data,question_part,response_counts,question_number):\n    \"\"\"Calculates percent of each value in a given column for multiple choice multiple selection questions\"\"\"\n    counts = data[question_part].value_counts()\n    total = int(response_counts[question_number])\n    percentage = (counts*100)\/total\n    value = [percentage]\n    question = [data[question_part]][0]\n    percentage_df = pd.DataFrame(data=value).T \n    return percentage_df\n\ndef plot_multiple_choice(question_number,data,data_with_question_on_top,\n                         title,y_axis_title,percent_instead_of_count):\n    \"\"\"Plot multiple choice questions sorted by total percent of responses\"\"\"\n    print(question_number,':',data_with_question_on_top[question_number][0])\n    if percent_instead_of_count == True:\n        df = return_percentage(data, question_number)\n    else:\n        df = return_count(data, question_number)\n    trace1 = go.Bar(\n                    x = df.index,\n                    y = df[question_number][0:10],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df.index)\n    data = [trace1]\n    layout = go.Layout(barmode = \"group\",title=title, \n                       yaxis= dict(title=y_axis_title),showlegend=False)\n    fig = go.Figure(data = data, layout = layout)\n    iplot(fig)\n      \ndef plot_unsorted_multiple_choice(question_number,data,data_with_question_on_top,title,y_axis_title,\n                                  sorting_order_list,percent_instead_of_count):\n    \"\"\"Plot multiple choice questions sorted in the order that you prefer\"\"\"\n    print(question_number,':',data_with_question_on_top[question_number][0])\n    if percent_instead_of_count == True:\n        df = return_percentage(data, question_number)\n    else:\n        df = return_count(data, question_number)\n    trace1 = go.Bar(\n                    x = df.index,\n                    y = df[question_number],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df.index)\n    data = [trace1]\n    layout = go.Layout(barmode = \"group\",title=title, \n                       xaxis=dict(type='category',categoryorder='array',categoryarray=sorting_order_list), \n                       yaxis= dict(title=y_axis_title),showlegend=False)\n    fig = go.Figure(data = data, layout = layout)\n    iplot(fig)    \n\ndef plot_multiple_choice_5_multiple_selections(data,data_with_question_on_top,title,y_axis_title,question_number,\n                                               question_part_1,question_part_2,question_part_3,question_part_4,question_part_5,\n                                               percent_instead_of_count = True):\n    \"\"\"Plot multiple selection multiple choice question with 5 options\"\"\"\n    print(question_number,':',data_with_question_on_top[question_part_1][0])\n    \n    if percent_instead_of_count == True:\n        df1 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_1, response_counts, question_number)\n        df2 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_2, response_counts, question_number)\n        df3 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_3, response_counts, question_number)\n        df4 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_4, response_counts, question_number)\n        df5 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_5, response_counts, question_number)\n    else:\n        df1 = return_count(data, question_part_1)\n        df2 = return_count(data, question_part_2)\n        df3 = return_count(data, question_part_3)\n        df4 = return_count(data, question_part_4)\n        df5 = return_count(data, question_part_5)\n\n    trace1 = go.Bar(\n                    x = df1.index,\n                    y = df1[question_part_1],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df1.index)\n    trace2 = go.Bar(\n                    x = df2.index,\n                    y = df2[question_part_2],\n                   name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df2.index)    \n    trace3 = go.Bar(\n                    x = df3.index,\n                    y = df3[question_part_3],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df3.index)   \n    trace4 = go.Bar(\n                    x = df4.index,\n                    y = df4[question_part_4],\n                   name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df4.index)   \n    trace5 = go.Bar(\n                    x = df5.index,\n                    y = df5[question_part_5],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df5.index)   \n    data = [trace1,trace2,trace3,trace4,trace5]\n    layout = go.Layout(barmode = \"group\",title=title, yaxis= dict(title=y_axis_title),showlegend=False)\n    fig = go.Figure(data = data, layout = layout)\n    iplot(fig)\n\ndef plot_multiple_choice_6_multiple_selections(data,data_with_question_on_top,title,y_axis_title,\n                                               question_number,question_part_1,question_part_2,question_part_3,\n                                               question_part_4,question_part_5,question_part_6,\n                                               percent_instead_of_count):\n    \"\"\"Plot multiple selection multiple choice question with 7 options\"\"\"\n    print(question_number,':',data_with_question_on_top[question_part_1][0])\n    if percent_instead_of_count == True:\n        df1 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_1, response_counts, question_number)\n        df2 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_2, response_counts, question_number)\n        df3 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_3, response_counts, question_number)\n        df4 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_4, response_counts, question_number)\n        df5 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_5, response_counts, question_number)\n        df6 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_6, response_counts, question_number)\n    else:\n        df1 = return_count(data, question_part_1)\n        df2 = return_count(data, question_part_2)\n        df3 = return_count(data, question_part_3)\n        df4 = return_count(data, question_part_4)\n        df5 = return_count(data, question_part_5)\n        df6 = return_count(data, question_part_6)\n    trace1 = go.Bar(\n                    x = df1.index,\n                    y = df1[question_part_1],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df1.index)\n    trace2 = go.Bar(\n                    x = df2.index,\n                    y = df2[question_part_2],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df2.index)    \n    trace3 = go.Bar(\n                    x = df3.index,\n                    y = df3[question_part_3],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df3.index)   \n    trace4 = go.Bar(\n                    x = df4.index,\n                    y = df4[question_part_4],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df4.index)   \n    trace5 = go.Bar(\n                    x = df5.index,\n                    y = df5[question_part_5],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df5.index)       \n    trace6 = go.Bar(\n                    x = df6.index,\n                    y = df6[question_part_6],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df6.index)     \n    data = [trace1,trace2,trace3,trace4,trace5,trace6]\n    layout = go.Layout(barmode = \"group\",title=title, yaxis= dict(title=y_axis_title),showlegend=False)\n    fig = go.Figure(data = data, layout = layout)\n    iplot(fig)    \n    \ndef plot_multiple_choice_7_multiple_selections(data,data_with_question_on_top,title,y_axis_title,\n                                               question_number,question_part_1,question_part_2,question_part_3,\n                                               question_part_4,question_part_5,question_part_6,question_part_7,\n                                               percent_instead_of_count):\n    \"\"\"Plot multiple selection multiple choice question with 7 options\"\"\"\n    print(question_number,':',data_with_question_on_top[question_part_1][0])\n    if percent_instead_of_count == True:\n        df1 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_1, response_counts, question_number)\n        df2 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_2, response_counts, question_number)\n        df3 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_3, response_counts, question_number)\n        df4 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_4, response_counts, question_number)\n        df5 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_5, response_counts, question_number)\n        df6 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_6, response_counts, question_number)\n        df7 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_7, response_counts, question_number)\n    else:\n        df1 = return_count(data, question_part_1)\n        df2 = return_count(data, question_part_2)\n        df3 = return_count(data, question_part_3)\n        df4 = return_count(data, question_part_4)\n        df5 = return_count(data, question_part_5)\n        df6 = return_count(data, question_part_6)\n        df7 = return_count(data, question_part_7)\n    trace1 = go.Bar(\n                    x = df1.index,\n                    y = df1[question_part_1],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df1.index)\n    trace2 = go.Bar(\n                    x = df2.index,\n                    y = df2[question_part_2],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df2.index)    \n    trace3 = go.Bar(\n                    x = df3.index,\n                    y = df3[question_part_3],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df3.index)   \n    trace4 = go.Bar(\n                    x = df4.index,\n                    y = df4[question_part_4],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df4.index)   \n    trace5 = go.Bar(\n                    x = df5.index,\n                    y = df5[question_part_5],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df5.index)       \n    trace6 = go.Bar(\n                    x = df6.index,\n                    y = df6[question_part_6],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df6.index)     \n    trace7 = go.Bar(\n                    x = df7.index,\n                    y = df7[question_part_7],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df7.index)   \n    data = [trace1,trace2,trace3,trace4,trace5,trace6,trace7]\n    layout = go.Layout(barmode = \"group\",title=title, yaxis= dict(title=y_axis_title),showlegend=False)\n    fig = go.Figure(data = data, layout = layout)\n    iplot(fig)\n\ndef plot_multiple_choice_8_multiple_selections(data,data_with_question_on_top,title,y_axis_title,question_number,\n                                               question_part_1,question_part_2,question_part_3,question_part_4,\n                                               question_part_5,question_part_6,question_part_7,question_part_8,\n                                               percent_instead_of_count):\n    \"\"\"Plot multiple selection multiple choice question with 8 options\"\"\"    \n    print(question_number,':',data_with_question_on_top[question_part_1][0])\n    if percent_instead_of_count == True:\n        df1 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_1, response_counts, question_number)\n        df2 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_2, response_counts, question_number)\n        df3 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_3, response_counts, question_number)\n        df4 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_4, response_counts, question_number)\n        df5 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_5, response_counts, question_number)\n        df6 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_6, response_counts, question_number)\n        df7 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_7, response_counts, question_number)\n        df8 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_8, response_counts, question_number)\n    else:\n        df1 = return_count(data, question_part_1)\n        df2 = return_count(data, question_part_2)\n        df3 = return_count(data, question_part_3)\n        df4 = return_count(data, question_part_4)\n        df5 = return_count(data, question_part_5)\n        df6 = return_count(data, question_part_6)\n        df7 = return_count(data, question_part_7)\n        df8 = return_count(data, question_part_8)\n    trace1 = go.Bar(\n                    x = df1.index,\n                    y = df1[question_part_1],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df1.index)\n    trace2 = go.Bar(\n                    x = df2.index,\n                    y = df2[question_part_2],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df2.index)    \n    trace3 = go.Bar(\n                    x = df3.index,\n                    y = df3[question_part_3],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df3.index)   \n    trace4 = go.Bar(\n                    x = df4.index,\n                    y = df4[question_part_4],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df4.index)   \n    trace5 = go.Bar(\n                    x = df5.index,\n                    y = df5[question_part_5],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df5.index)       \n    trace6 = go.Bar(\n                    x = df6.index,\n                    y = df6[question_part_6],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df6.index)     \n    trace7 = go.Bar(\n                    x = df7.index,\n                    y = df7[question_part_7],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df7.index)\n    trace8 = go.Bar(\n                    x = df8.index,\n                    y = df8[question_part_8],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df8.index)   \n    data = [trace1,trace2,trace3,trace4,trace5,trace6,trace7,trace8]\n    layout = go.Layout(barmode = \"group\",title=title, yaxis= dict(title=y_axis_title),showlegend=False)\n    fig = go.Figure(data = data, layout = layout)\n    iplot(fig)\n     \n    \n\ndef plot_multiple_choice_12_multiple_selections(data,data_with_question_on_top,title,y_axis_title,question_number,\n                                                question_part_1,question_part_2,question_part_3,question_part_4,\n                                                question_part_5,question_part_6,question_part_7,question_part_8,\n                                                question_part_9,question_part_10,question_part_11,\n                                                question_part_12,percent_instead_of_count):\n    \"\"\"Plot multiple selection multiple choice question with 10 options\"\"\"    \n    print(question_number,':',data_with_question_on_top[question_part_1][0])\n    if percent_instead_of_count == True:\n        df1 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_1, response_counts, question_number)\n        df2 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_2, response_counts, question_number)\n        df3 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_3, response_counts, question_number)\n        df4 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_4, response_counts, question_number)\n        df5 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_5, response_counts, question_number)\n        df6 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_6, response_counts, question_number)\n        df7 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_7, response_counts, question_number)\n        df8 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_8, response_counts, question_number)\n        df9 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_9, response_counts, question_number)\n        df10 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_10, response_counts, question_number)\n        df11 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_11, response_counts, question_number)\n        df12 = return_percentage_multiple_choice_multiple_choice_selection(data, question_part_12, response_counts, question_number)\n    else:\n        df1 = return_count(data, question_part_1)\n        df2 = return_count(data, question_part_2)\n        df3 = return_count(data, question_part_3)\n        df4 = return_count(data, question_part_4)\n        df5 = return_count(data, question_part_5)\n        df6 = return_count(data, question_part_6)\n        df7 = return_count(data, question_part_7)\n        df8 = return_count(data, question_part_8)\n        df9 = return_count(data, question_part_9)\n        df10 = return_count(data, question_part_10)\n        df11 = return_count(data, question_part_11)\n        df12 = return_count(data, question_part_12)\n    trace1 = go.Bar(\n                    x = df1.index,\n                    y = df1[question_part_1],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df1.index)\n    trace2 = go.Bar(\n                    x = df2.index,\n                    y = df2[question_part_2],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df2.index)    \n    trace3 = go.Bar(\n                    x = df3.index,\n                    y = df3[question_part_3],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df3.index)   \n    trace4 = go.Bar(\n                    x = df4.index,\n                    y = df4[question_part_4],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df4.index)   \n    trace5 = go.Bar(\n                    x = df5.index,\n                    y = df5[question_part_5],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df5.index)       \n    trace6 = go.Bar(\n                    x = df6.index,\n                    y = df6[question_part_6],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df6.index)     \n    trace7 = go.Bar(\n                    x = df7.index,\n                    y = df7[question_part_7],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df7.index)\n    trace8 = go.Bar(\n                    x = df8.index,\n                    y = df8[question_part_8],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df8.index)   \n    trace9 = go.Bar(\n                    x = df9.index,\n                    y = df9[question_part_9],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df9.index)   \n    trace10 = go.Bar(\n                    x = df10.index,\n                    y = df10[question_part_10],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df10.index)   \n    trace11 = go.Bar(\n                    x = df11.index,\n                    y = df11[question_part_11],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df11.index)   \n    trace12 = go.Bar(\n                    x = df12.index,\n                    y = df12[question_part_12],\n                    name = \"Kaggle Survey 2019\",\n                    marker = dict(color = 'blue',\n                                 line=dict(color='black',width=1.5)),\n                    text = df12.index)   \n    \n    data = [trace1,trace2,trace3,trace4,trace5,trace6,trace7,trace8,trace9,trace10,trace11,trace12]\n    layout = go.Layout(barmode = \"group\",title=title, yaxis= dict(title=y_axis_title),showlegend=False)\n    fig = go.Figure(data = data, layout = layout)\n    iplot(fig)    \n    \n# Another plotting function\n# This function was adapted from https:\/\/www.kaggle.com\/artgor\/russia-usa-india-and-other-countries\n\ndef plot_country_one_var(df_choice, var='', title_name=''):\n    data = []\n    for j, c in enumerate(df_choice['Q3_In which country do you currently reside?'].unique()):\n        grouped = df_choice.loc[df_choice['Q3_In which country do you currently reside?'] == c,\n                                var].value_counts().sort_index()\n        grouped = grouped \/ grouped.sum()\n        if var == 'Q10_What is your current yearly compensation (approximate $USD)?':\n            map_dict = {\"$0-999\": 0,\n                        \"1,000-1,999\": 1,\n                        \"2,000-2,999\": 2,\n                        \"3,000-3,999\": 3,\n                        \"4,000-4,999\": 4,\n                        \"5,000-7,499\": 5,\n                        \"7,500-9,999\": 6,\n                        \"10,000-14,999\": 7,\n                        \"15,000-19,999\": 8,\n                        \"20,000-24,999\": 9,\n                        \"25,000-29,999\": 10,\n                        \"30,000-39,999\": 11,\n                        \"40,000-49,999\": 12,\n                        \"50,000-59,999\": 13,\n                        \"60,000-69,999\": 14,\n                        \"70,000-79,999\": 15,\n                        \"80,000-89,999\": 16,\n                        \"90,000-99,999\": 17,\n                        \"100,000-124,999\": 18,\n                        \"125,000-149,999\": 19,\n                        \"150,000-199,999\": 20,\n                        \"200,000-249,999\": 21,\n                        \"250,000-299,999\": 22,\n                        \"300,000-500,000\": 23,\n                        \"> $500,000\": 24}\n            grouped = grouped.reset_index()\n            grouped.columns = ['salary', 'counts']\n            grouped['sorting'] = grouped['salary'].apply(lambda x: map_dict[x])\n            grouped = grouped.sort_values('sorting', ascending=True)\n            trace = go.Bar(\n                x=grouped['salary'],\n                y=grouped['counts'],\n                name=c,\n                marker=dict(color=j),\n                showlegend=True\n            )\n            data.append(trace)\n        else:\n            trace = go.Bar(\n                x=grouped.index,\n                y=grouped.values,\n                name=c,\n                marker=dict(color=j),\n                showlegend=True\n            )\n            data.append(trace)    \n    fig = go.Figure(data=data)\n    fig['layout'].update(title=f'{title_name} Grouped by Country', barmode='group');\n    return fig\n\n\ndef plot_map(country_count):\n    data = [ dict(\n            type = 'choropleth',\n            locations = country_count['code'],\n            z = country_count['people'],\n            text = country_count['country'],\n            colorscale = 'Viridis',\n            autocolorscale = False,\n            reversescale = True,\n            marker = dict(\n                line = dict (\n                    color = 'rgb(180,180,180)',\n                    width = 0.5\n                ) ),\n            colorbar = dict(\n                autotick = False,\n                title = 'Responders'),\n          ) ]\n\n    layout = dict(\n        title = 'Number of Responses Per Country',\n        annotations = [dict(\n            x=0,\n            y=0.05,\n            xref='paper',\n            yref='paper',\n            text='<a href=\"https:\/\/www.kaggle.com\/artgor\/russia-usa-india-and-other-countries\/\">\\\n                This map is an adapation of work shared by @artgor during the 2018 Kaggle DS & ML Challenge<\/a>',\n            showarrow = False)],\n        geo = dict(\n            showframe = False,\n            showcoastlines = False,\n            projection = dict(\n                type = 'Mercator'\n            )\n        )\n    )\n    fig = dict(data=data, layout=layout )\n    iplot(fig, validate=False, filename='d3-world-map' )\n","7f019a89":"# Create Choropleth Map\n\n# Adapted from https:\/\/www.kaggle.com\/artgor\/russia-usa-india-and-other-countries\/\nDIR = '\/kaggle\/input\/kaggle-survey-2019\/'\ndf_choice = pd.read_csv(DIR + 'multiple_choice_responses.csv', low_memory=False, header=[0,1])\ndf_choice.columns = ['_'.join(col) for col in df_choice.columns]\ncountry_count = df_choice['Q3_In which country do you currently reside?'].value_counts().reset_index()\ncountry_count.columns = ['country', 'people']\ncountry_count.loc[country_count['country'] == 'United States of America', 'country'] = 'United States'\ncountry_count.loc[country_count['country'] == 'United Kingdom of Great Britain and Northern Ireland', 'country'] = 'United Kingdom'\ncountry_count.loc[country_count['country'] == 'South Korea', 'country'] = '\"Korea, South\"'\ncountry_count.loc[country_count['country'] == 'Viet Nam', 'country'] = 'Vietnam'\ncountry_count.loc[country_count['country'] == 'Iran, Islamic Republic of...', 'country'] = 'Iran'\ncountry_count.loc[country_count['country'] == 'Hong Kong (S.A.R.)', 'country'] = 'Hong Kong'\ncountry_count.loc[country_count['country'] == 'Republic of Korea', 'country'] = '\"Korea, North\"'\ncountry_code = pd.read_csv('https:\/\/raw.githubusercontent.com\/plotly\/datasets\/master\/2014_world_gdp_with_codes.csv')\ncountry_code.columns = [i.lower() for i in country_code.columns]\ncountry_count = pd.merge(country_count, country_code, on='country')\nplot_map(country_count)","d0966c64":"# Count Responses\n\nprint('Total Number of Responses: ',responses_only.shape[0])\nresponses_only2 = pd.DataFrame(pd.to_numeric(responses_only['Time from Start to Finish (seconds)'], errors='coerce'))\nresponses_only2 = responses_only2[responses_only2['Time from Start to Finish (seconds)'] > 299]  \nprint('Total Number of Respondents That Took More Than 5 Minutes: ',responses_only2.shape[0])","9e1ff735":"in_order = ['18-21','22-24','25-29','30-34','35-39','40-44','45-49','50-54','55-59','60-69']\ndata = responses_only\ndata_with_question_on_top = multiple_choice\ny_axis_title='Percent of Respondents'\nquestion_number = 'Q1'\ntitle='Percent of Respondents per Age'\nplot_unsorted_multiple_choice(question_number,data,data_with_question_on_top,title,y_axis_title,in_order,percent_instead_of_count=True)","19d101a0":"question_number = 'Q2'\ntitle='Percent of Respondents per Gender'\nplot_multiple_choice(question_number,data,data_with_question_on_top,title,y_axis_title,percent_instead_of_count=True)","bf753676":"print('Countries with fewer than 50 respondents were grouped into category \"other\".  This reduced the number of countries from 171 to 59.')\nquestion_number = 'Q3'\ntitle='Percent of Respondents per Country'\nplot_multiple_choice(question_number,data,data_with_question_on_top, title,y_axis_title,percent_instead_of_count=True)","c49b11cc":"data = responses_only\ndata_with_question_on_top = multiple_choice\ny_axis_title='Percent of Respondents'\nin_order = [\"No formal education past high school\",\"Some college\/university study without earning a bachelor\u2019s degree\",\n            \"Bachelor\u2019s degree\",\"Master\u2019s degree\",\"Doctoral degree\", \"Professional degree\",\"I prefer not to answer\"]\nquestion_number = 'Q4'\ntitle='Percent of Respondents per Education Level'\nplot_unsorted_multiple_choice(question_number,data,data_with_question_on_top,title,y_axis_title,in_order,percent_instead_of_count=True)","c81c06b5":"question_number = 'Q5'\ntitle='Percent of Respondents per Job Title'\nplot_multiple_choice(question_number,data,data_with_question_on_top,title,y_axis_title,percent_instead_of_count=True)","8fd19af2":"question_number = 'Q6'\ntitle='Percent of Respondents per Employer Size'\nin_order = [\"0-49 employees\",\"50-249 employees\",\"250-999 employees\",\"1000-9,999 employees\",\"> 10,000 employees\"]\nplot_unsorted_multiple_choice(question_number,data,data_with_question_on_top,title,y_axis_title,in_order,percent_instead_of_count=True)","71fab433":"df_choice['Q3_orig'] = df_choice['Q3_In which country do you currently reside?']\ndf_choice.loc[df_choice['Q3_In which country do you currently reside?'].isin(['United States of America', 'Russia', 'India','Germany','Japan','Brazil']) == False,\n              'Q3_In which country do you currently reside?'] = 'Other'\nvar_name = dict([('Q29', 'cloud computing service'),('Q28', 'ML framework')])\ncols2 = ['Q29','Q28']\nprint('Q6 : What is the size of the company where you are employed?\\n')\nprint('The plot below was adapted from work shared by @artgor during the 2018 Kaggle DS & ML Challenge (see link at top of kernel)')\nfig = plot_country_one_var(df_choice=df_choice, var='Q5_Select the title most similar to your current role (or most recent title if retired): - Selected Choice', title_name='Job Title')\niplot(fig);","09e7fa72":"question_number = 'Q7'\ntitle='Percent of Respondents per Team Size'\nin_order = [\"0\",\"1-2\",\"3-4\",\"5-9\",\"10-14\",\"15-19\",\"20+\"]\nplot_unsorted_multiple_choice(question_number,data,data_with_question_on_top,title,y_axis_title,in_order,percent_instead_of_count=True)","43ac2a78":"question_number = 'Q8'\ntitle='Percent of Respondents per ML Adoption Level'\nin_order = ['No (we do not use ML methods)',\n            'We are exploring ML methods (and may one day put a model into production)',\n            'We use ML methods for generating insights (but do not put working models into production)',\n            'We recently started using ML methods (i.e., models in production for less than 2 years)',\n            'We have well established ML methods (i.e., models in production for more than 2 years)',       \n            'I do not know']     \nplot_unsorted_multiple_choice(question_number,data,data_with_question_on_top,title,y_axis_title,in_order,percent_instead_of_count=True)","d26bbaf9":"question_number = 'Q9'\ntitle='Percent of Respondents per Job Responsibility'\nplot_multiple_choice_8_multiple_selections(data,data_with_question_on_top,title,y_axis_title,question_number,\n                                           question_part_1 = 'Q9_Part_1',\n                                           question_part_2 = 'Q9_Part_3', \n                                           question_part_3 = 'Q9_Part_5', \n                                           question_part_4 = 'Q9_Part_2', \n                                           question_part_5 = 'Q9_Part_4', \n                                           question_part_6 = 'Q9_Part_6',\n                                           question_part_7 = 'Q9_Part_7',\n                                           question_part_8 = 'Q9_Part_8',\n                                           percent_instead_of_count=True)","73b8cf5a":"in_order = ['$0-999',\n                        '1,000-1,999',\n                        '2,000-2,999',\n                        '3,000-3,999',\n                        '4,000-4,999',\n                        '5,000-7,499',\n                        '7,500-9,999',\n                        '10,000-14,999',\n                        '15,000-19,999',\n                        '20,000-24,999',\n                        '25,000-29,999',\n                        '30,000-39,999',\n                        '40,000-49,999',\n                        '50,000-59,999',\n                        '60,000-69,999',\n                        '70,000-79,999',\n                        '80,000-89,999',\n                        '90,000-99,999',\n                        '100,000-124,999',\n                        '125,000-149,999',\n                        '150,000-199,999',\n                        '200,000-249,999',\n                        '250,000-299,999',\n                        '300,000-500,000',\n                        '> $500,000']\n\nquestion_number = 'Q10'\ntitle='Percent of Respondents per Salary Range'\nplot_unsorted_multiple_choice(question_number,data,data_with_question_on_top,title,y_axis_title,in_order,percent_instead_of_count=True)","30029ccc":"print('Q10 : What is your current yearly compensation (approximate $USD)?\\n')\nprint('The plot below was adapted from work shared by @artgor during the 2018 Kaggle DS & ML Challenge (see link at top of kernel)')\nfig = plot_country_one_var(df_choice=df_choice, var='Q10_What is your current yearly compensation (approximate $USD)?', title_name='Salary')\niplot(fig);","8428fba3":"question_number = 'Q11'\ntitle='Percent of Respondents per Money Spent'\nin_order = [\"$0 (USD)\",\"$1-$99\",\"$100-$999\",\"$1000-$9,999\",\n            \"$10,000-$99,999\",\"> $100,000 ($USD)\"]\nplot_unsorted_multiple_choice(question_number,data,data_with_question_on_top,title,y_axis_title,in_order,percent_instead_of_count=True)","75073d6e":"question_number = 'Q12'\ntitle='Percent of Respondents per ML Media Source'\nplot_multiple_choice_12_multiple_selections(data,data_with_question_on_top,title,y_axis_title,question_number,\n                                            question_part_1 = 'Q12_Part_4',\n                                            question_part_2 = 'Q12_Part_8',\n                                            question_part_3 = 'Q12_Part_6',\n                                            question_part_4 = 'Q12_Part_9',\n                                            question_part_5 = 'Q12_Part_5',\n                                            question_part_6 = 'Q12_Part_1',\n                                            question_part_7 = 'Q12_Part_3',\n                                            question_part_8 = 'Q12_Part_10',\n                                            question_part_9 = 'Q12_Part_7',\n                                            question_part_10 = 'Q12_Part_2',\n                                            question_part_11 = 'Q12_Part_11',\n                                            question_part_12 = 'Q12_Part_12',\n                                            percent_instead_of_count=True)                                            ","977aa4e0":"question_number = 'Q13'\ntitle='Percent of Respondents per Learning Platform'\nplot_multiple_choice_12_multiple_selections(data,data_with_question_on_top,title,y_axis_title,question_number,\n                                           question_part_1 = 'Q13_Part_2',\n                                            question_part_2 = 'Q13_Part_6',\n                                            question_part_3 = 'Q13_Part_8',\n                                            question_part_4 = 'Q13_Part_10',\n                                            question_part_5 = 'Q13_Part_4',\n                                            question_part_6 = 'Q13_Part_3',\n                                            question_part_7 = 'Q13_Part_1',\n                                            question_part_8 = 'Q13_Part_7',\n                                            question_part_9 = 'Q13_Part_9',\n                                            question_part_10 = 'Q13_Part_5',\n                                            question_part_11 = 'Q13_Part_11',\n                                            question_part_12 = 'Q13_Part_12',\n                                            percent_instead_of_count=True)","4e3709fc":"question_number = 'Q14'\ntitle='Percent of Respondents per Most Common Analytics Tool'\nin_order = [\"Basic statistical software (Microsoft Excel, Google Sheets, etc.)\",\n       \"Advanced statistical software (SPSS, SAS, etc.)\",\n       \"Business intelligence software (Salesforce, Tableau, Spotfire, etc.)\",\n       \"Local development environments (RStudio, JupyterLab, etc.)\",\n       \"Cloud-based data software & APIs (AWS, GCP, Azure, etc.)\", \"Other\"]\nplot_unsorted_multiple_choice(question_number,data,data_with_question_on_top,title,y_axis_title,in_order,percent_instead_of_count=True)","f70a44ac":"question_number = 'Q15'\ntitle='Percent of Respondents per Years Writing Code to Analyze Data'\nin_order = ['I have never written code','< 1 years','1-2 years','3-5 years','5-10 years','10-20 years','20+ years']\nplot_unsorted_multiple_choice(question_number,data,data_with_question_on_top,title,y_axis_title,in_order,percent_instead_of_count=True)","f7144802":"question_number = 'Q16'\ntitle='Percent of Respondents per IDE'\nplot_multiple_choice_12_multiple_selections(data,data_with_question_on_top,title,y_axis_title,question_number,\n                                           question_part_1 = 'Q16_Part_1',\n                                            question_part_2 = 'Q16_Part_6',\n                                            question_part_3 = 'Q16_Part_2',\n                                            question_part_4 = 'Q16_Part_3',\n                                            question_part_5 = 'Q16_Part_9',\n                                            question_part_6 = 'Q16_Part_7',\n                                            question_part_7 = 'Q16_Part_10', \n                                            question_part_8 = 'Q16_Part_8',\n                                            question_part_9 = 'Q16_Part_5', \n                                            question_part_10 = 'Q16_Part_4',\n                                            question_part_11 = 'Q16_Part_11',\n                                            question_part_12 = 'Q16_Part_12',\n                                            percent_instead_of_count=True)","8abadea1":"question_number = 'Q17'\ntitle='Percent of Respondents per Hosted Notebook Product'\nplot_multiple_choice_12_multiple_selections(data,data_with_question_on_top,title,y_axis_title,question_number,\n                                            question_part_1 = 'Q17_Part_1',\n                                            question_part_2 = 'Q17_Part_2',\n                                            question_part_3 = 'Q17_Part_7',\n                                            question_part_4 = 'Q17_Part_4',\n                                            question_part_5 = 'Q17_Part_3',\n                                            question_part_6 = 'Q17_Part_10',\n                                            question_part_7 = 'Q17_Part_8',\n                                            question_part_8 = 'Q17_Part_5',\n                                            question_part_9 = 'Q17_Part_6',\n                                            question_part_10 = 'Q17_Part_9',\n                                            question_part_11 = 'Q17_Part_11',\n                                            question_part_12 = 'Q17_Part_12',\n                                            percent_instead_of_count=True)","5fd1ca05":"question_number = 'Q18'\ntitle='Percent of Respondents per Programming Language'\nplot_multiple_choice_12_multiple_selections(data,data_with_question_on_top,title,y_axis_title,question_number,\n                                           question_part_1 = 'Q18_Part_1',\n                                            question_part_2 = 'Q18_Part_3',\n                                            question_part_3 = 'Q18_Part_2',\n                                            question_part_4 = 'Q18_Part_6',\n                                            question_part_5 = 'Q18_Part_5',\n                                            question_part_6 = 'Q18_Part_7', \n                                            question_part_7 = 'Q18_Part_9',\n                                            question_part_8 = 'Q18_Part_4',\n                                            question_part_9 = 'Q18_Part_10', \n                                            question_part_10 = 'Q18_Part_8',\n                                            question_part_11 = 'Q18_Part_11',\n                                            question_part_12 = 'Q18_Part_12',\n                                            percent_instead_of_count=True)","9489978a":"question_number = 'Q19'\ntitle='Percent of Respondents per Recommended Language to Learn First'\nplot_multiple_choice(question_number,data,data_with_question_on_top,title,y_axis_title,percent_instead_of_count=True)","aae23e71":"question_number = 'Q20'\ntitle='Percent of Respondents per Data Visualization Library'\nplot_multiple_choice_12_multiple_selections(data,data_with_question_on_top,title,y_axis_title,question_number,\n                                           question_part_1 = 'Q20_Part_2',\n                                            question_part_2 = 'Q20_Part_8',\n                                            question_part_3 = 'Q20_Part_1',\n                                            question_part_4 = 'Q20_Part_6',\n                                            question_part_5 = 'Q20_Part_4',\n                                            question_part_6 = 'Q20_Part_5',\n                                            question_part_7 = 'Q20_Part_7',\n                                            question_part_8 = 'Q20_Part_9',\n                                            question_part_9 = 'Q20_Part_10',\n                                            question_part_10 = 'Q20_Part_3',\n                                            question_part_11 = 'Q20_Part_11',\n                                            question_part_12 = 'Q20_Part_12',\n                                            percent_instead_of_count=True)","d8ca3dbe":"question_number = 'Q21'\ntitle='Percent of Respondents per Specialized Hardware'\nplot_multiple_choice_5_multiple_selections(data,data_with_question_on_top,title,y_axis_title,question_number,\n                                           question_part_1 = 'Q21_Part_1',\n                                           question_part_2 = 'Q21_Part_2',\n                                           question_part_3 = 'Q21_Part_3',\n                                           question_part_4 = 'Q21_Part_4',\n                                           question_part_5 = 'Q21_Part_5',\n                                           percent_instead_of_count=True)","0c20974b":"question_number = 'Q22'\ntitle='Percent of Respondents per TPU usage'\nplot_multiple_choice(question_number,data,data_with_question_on_top,title,y_axis_title,percent_instead_of_count=True)","0353315f":"question_number = 'Q23'\ntitle='Percent of Respondents per Years Using Machine Learning Methods'\nplot_multiple_choice(question_number,data,data_with_question_on_top,title,y_axis_title,percent_instead_of_count=True)","01081088":"question_number = 'Q24'\ntitle='Percent of Respondents per Machine Learning Algorithm'\nplot_multiple_choice_12_multiple_selections(data,data_with_question_on_top,title,y_axis_title,question_number,\n                                           question_part_1 = 'Q24_Part_1',\n                                            question_part_2 = 'Q24_Part_2',\n                                            question_part_3 = 'Q24_Part_3',\n                                            question_part_4 = 'Q24_Part_7',\n                                            question_part_5 = 'Q24_Part_4',\n                                            question_part_6 = 'Q24_Part_9',\n                                            question_part_7 = 'Q24_Part_6', \n                                            question_part_8 = 'Q24_Part_8', \n                                            question_part_9 = 'Q24_Part_10', \n                                            question_part_10 = 'Q24_Part_5', \n                                            question_part_11 = 'Q24_Part_11',\n                                            question_part_12 = 'Q24_Part_12',\n                                            percent_instead_of_count=True)","15b98eb7":"question_number = 'Q25'\ntitle='Percent of Respondents per AutoML Type'\nplot_multiple_choice_8_multiple_selections(data,data_with_question_on_top,title,y_axis_title,question_number,\n                                          question_part_1 = 'Q25_Part_1',\n                                           question_part_2 = 'Q25_Part_2',\n                                           question_part_3 = 'Q25_Part_3',\n                                           question_part_4 = 'Q25_Part_4',\n                                           question_part_5 = 'Q25_Part_5',\n                                           question_part_6 = 'Q25_Part_6',\n                                           question_part_7 = 'Q25_Part_7',\n                                           question_part_8 = 'Q25_Part_8',\n                                           percent_instead_of_count=True)","a29b5c67":"question_number = 'Q26'\ntitle='Percent of Respondents per Computer Vision Method'\nplot_multiple_choice_7_multiple_selections(data,data_with_question_on_top,title,y_axis_title,question_number,\n                                          question_part_1 = 'Q26_Part_4',\n                                           question_part_2 = 'Q26_Part_1',\n                                           question_part_3 = 'Q26_Part_2',\n                                           question_part_4 = 'Q26_Part_3',\n                                           question_part_5 = 'Q26_Part_6',\n                                           question_part_6 = 'Q26_Part_5',\n                                           question_part_7 = 'Q26_Part_7',\n                                           percent_instead_of_count=True)","e4a06c1d":"question_number = 'Q27'\ntitle='Percent of Respondents per NLP Method'\nplot_multiple_choice_6_multiple_selections(data,data_with_question_on_top,title,y_axis_title,question_number,\n                                          question_part_1 = 'Q27_Part_1',\n                                           question_part_2 = 'Q27_Part_2',\n                                           question_part_3 = 'Q27_Part_4',\n                                           question_part_4 = 'Q27_Part_3',\n                                           question_part_5 = 'Q27_Part_5',\n                                           question_part_6 = 'Q27_Part_6',\n                                           percent_instead_of_count=True)","21611d73":"question_number = 'Q28'\ntitle='Percent of Respondents per Machine Learning Framework'\nplot_multiple_choice_12_multiple_selections(data,data_with_question_on_top,title,y_axis_title,question_number,\n                                           question_part_1 = 'Q28_Part_1',\n                                            question_part_2 = 'Q28_Part_2',\n                                            question_part_3 = 'Q28_Part_3',\n                                            question_part_4 = 'Q28_Part_4',\n                                            question_part_5 = 'Q28_Part_5',\n                                            question_part_6 = 'Q28_Part_6',\n                                            question_part_7 = 'Q28_Part_8',\n                                            question_part_8 = 'Q28_Part_7',\n                                            question_part_9 = 'Q28_Part_10',\n                                            question_part_10 = 'Q28_Part_9',\n                                            question_part_11 = 'Q28_Part_11',\n                                            question_part_12 = 'Q28_Part_12',\n                                            percent_instead_of_count=True)","4e0a4720":"question_number = 'Q29'\ntitle='Percent of Respondents per Cloud Computing Service'\nplot_multiple_choice_12_multiple_selections(data,data_with_question_on_top,title,y_axis_title,question_number,\n                                          question_part_1 = 'Q29_Part_2',\n                                           question_part_2 = 'Q29_Part_1',\n                                           question_part_3 = 'Q29_Part_3',\n                                           question_part_4 = 'Q29_Part_4',\n                                           question_part_5 = 'Q29_Part_9', \n                                           question_part_6 = 'Q29_Part_7', \n                                           question_part_7 = 'Q29_Part_6', \n                                            question_part_8 = 'Q29_Part_5',\n                                            question_part_9 = 'Q29_Part_8', \n                                            question_part_10 = 'Q29_Part_10',\n                                            question_part_11 = 'Q29_Part_11',\n                                           question_part_12 = 'Q29_Part_12',\n                                            percent_instead_of_count=True)","3ed49ee8":"question_number = 'Q30'\ntitle='Percent of Respondents per Cloud Computing Product'\nplot_multiple_choice_12_multiple_selections(data,data_with_question_on_top,title,y_axis_title,question_number,\n                                           question_part_1 = 'Q30_Part_1',\n                                            question_part_2 = 'Q30_Part_2',\n                                            question_part_3 = 'Q30_Part_3',\n                                            question_part_4 = 'Q30_Part_4',\n                                            question_part_5 = 'Q30_Part_6',\n                                            question_part_6 = 'Q30_Part_5',\n                                            question_part_7 = 'Q30_Part_8',\n                                            question_part_8 = 'Q30_Part_10',\n                                            question_part_9 = 'Q30_Part_7',\n                                            question_part_10 = 'Q30_Part_9',\n                                            question_part_11 = 'Q30_Part_11',\n                                            question_part_12 = 'Q30_Part_12',\n                                            percent_instead_of_count=True)","1c5b68e4":"question_number = 'Q31'\ntitle='Percent of Respondents per Big Data \/ Analytics Product'\nplot_multiple_choice_12_multiple_selections(data,data_with_question_on_top,title,y_axis_title,question_number,\n                                           question_part_1 = 'Q31_Part_1',\n                                            question_part_2 = 'Q31_Part_3',\n                                            question_part_3 = 'Q31_Part_2',\n                                            question_part_4 = 'Q31_Part_7', \n                                            question_part_5 = 'Q31_Part_4', \n                                            question_part_6 = 'Q31_Part_6', \n                                            question_part_7 = 'Q31_Part_10', \n                                            question_part_8 = 'Q31_Part_8', \n                                            question_part_9 = 'Q31_Part_5', \n                                            question_part_10 = 'Q31_Part_9', \n                                            question_part_11 = 'Q31_Part_11',\n                                            question_part_12 = 'Q31_Part_12',\n                                            percent_instead_of_count=True)","929a9ad8":"question_number = 'Q32'\ntitle='Percent of Respondents per Machine Learning Product'\nplot_multiple_choice_12_multiple_selections(data,data_with_question_on_top,title,y_axis_title,question_number,\n                                           question_part_1 = 'Q32_Part_4', \n                                            question_part_2 = 'Q32_Part_3', \n                                            question_part_3 = 'Q32_Part_10', \n                                            question_part_4 = 'Q32_Part_1', \n                                            question_part_5 = 'Q32_Part_6', \n                                            question_part_6 = 'Q32_Part_2', \n                                            question_part_7 = 'Q32_Part_7', \n                                            question_part_8 = 'Q32_Part_5', \n                                            question_part_9 = 'Q32_Part_9',\n                                            question_part_10 = 'Q32_Part_8',\n                                            question_part_11 = 'Q32_Part_11',\n                                            question_part_12 = 'Q32_Part_12',\n                                            percent_instead_of_count=True)","078eb7f9":"question_number = 'Q33'\ntitle='Percent of Respondents per AutoML Tool'\nplot_multiple_choice_12_multiple_selections(data,data_with_question_on_top,title,y_axis_title,question_number,\n                                           question_part_1 = 'Q33_Part_7', \n                                            question_part_2 = 'Q33_Part_1', \n                                            question_part_3 = 'Q33_Part_6', \n                                            question_part_4 = 'Q33_Part_8', \n                                            question_part_5 = 'Q33_Part_2', \n                                            question_part_6 = 'Q33_Part_3', \n                                            question_part_7 = 'Q33_Part_5', \n                                            question_part_8 = 'Q33_Part_4', \n                                            question_part_9 = 'Q33_Part_10', \n                                            question_part_10 = 'Q33_Part_9',\n                                            question_part_11 = 'Q33_Part_11',\n                                            question_part_12 = 'Q33_Part_12',\n                                            percent_instead_of_count=True)","4239f505":"questionNumber = 'Q34'\ntitle='Percent of Respondents per Relational Database Product'\nplot_multiple_choice_12_multiple_selections(data,data_with_question_on_top,title,y_axis_title,questionNumber,\n                                           question_part_1 = 'Q34_Part_1',\n                                            question_part_2 = 'Q34_Part_2',\n                                            question_part_3 = 'Q34_Part_4',\n                                            question_part_4 = 'Q34_Part_3',\n                                            question_part_5 = 'Q34_Part_5',\n                                            question_part_6 = 'Q34_Part_7',\n                                            question_part_7 = 'Q34_Part_6',\n                                            question_part_8 = 'Q34_Part_10',\n                                            question_part_9 = 'Q34_Part_9',\n                                            question_part_10 = 'Q34_Part_8',\n                                            question_part_11 = 'Q34_Part_11',\n                                            question_part_12 = 'Q34_Part_12',\n                                            percent_instead_of_count=True)","a8f5da69":"survey_schema2 = survey_schema[1:2]\nsurvey_schema2.drop(['2019 Kaggle Machine Learning and Data Science Survey'], inplace=True, axis=1)\ncorrect_order = ['Q1','Q2','Q3','Q4','Q5','Q6','Q7','Q8','Q9','Q10','Q11','Q12',\n                 'Q13','Q14','Q15','Q16','Q17','Q18','Q19','Q20','Q21','Q22','Q23',\n                 'Q24','Q25','Q26','Q27','Q28','Q29','Q30','Q31','Q32','Q33','Q34']\nsurvey_schema2 = survey_schema2.reindex(correct_order,axis=1).T\nsurvey_schema2['Question'] = survey_schema2.index\ndf = survey_schema2\ntrace1 = go.Scatter(\n                    x = df.Question,\n                    y = df[1],\n                    mode = \"lines+markers\",\n                    name = \"gettingStarted\",\n                    marker = dict(color = 'blue'),)\ndata = [trace1]\nlayout = dict(title = 'Percent of Responses per Question',\n              xaxis= dict(title= 'Question Percent',ticklen= 5,zeroline= False),\n              yaxis= dict(title= 'Percent of Responses',ticklen= 5,zeroline= False),\n              legend=dict(orientation= \"h\",x=0, y= 1.13),width=800,height=400,\n              annotations=[\n        dict(\n            x=4,\n            y=22000,\n            xref='x',\n            yref='y',\n            text='Employed',\n            showarrow=True,\n            arrowhead=1,\n            ax=0,\n            ay=-40),\n         dict(\n                x=8,\n                y=17000,\n                xref='x',\n                yref='y',\n                text='Employed to Code',\n                showarrow=True,\n                arrowhead=1,\n                ax=0,\n                ay=-40),\n         dict(\n                x=25,\n                y=20000,\n                xref='x',\n                yref='y',\n                text='Use CNN, GAN, RNN, Transformers',\n                showarrow=True,\n                arrowhead=1,\n                ax=0,\n                ay=-40),\n         dict(\n                x=27,\n                y=15000,\n                xref='x',\n                yref='y',\n                text='Use ML methods',\n                showarrow=True,\n                arrowhead=1,\n                ax=0,\n                ay=-40),\n         dict(\n                x=29,\n                y=12000,\n                xref='x',\n                yref='y',\n                text='Spend Money on ML Products',\n                showarrow=True,\n                arrowhead=1,\n                ax=0,\n                ay=-40)                \n             ])\nfig = dict(data = data, layout = layout)\niplot(fig)","c3632014":"responses_only = multiple_choice[1:]\ncolumns_to_keep2 = ['Time from Start to Finish (seconds)']\nresponses_only_duration = responses_only[columns_to_keep2]\nresponses_only_duration = pd.DataFrame(pd.to_numeric(responses_only_duration['Time from Start to Finish (seconds)'], errors='coerce')\/60)\nresponses_only_duration.columns = ['Time from Start to Finish (minutes)']\nresponses_only_duration = responses_only_duration['Time from Start to Finish (minutes)']\nsns.distplot(responses_only_duration,bins=5000).set(xlim=(0, 60))\nprint('Most respondents took approximately 10 minutes to complete the survey')","42b4da9d":"**A Quick EDA of All 34 Questions:**","7c9bb056":"**2019 Kaggle Machine Learning and Data Science Survey**\n* The 2019 Kaggle Machine Learning and Data Science Survey finished with 19,717 responses.\n\n  * The 2017 Kaggle ML&DS Survey had 16,717 surveys started and 11,700 surveys completed.\n  * The 2018 Kaggle ML&DS Survey had 23,859 surveys started and 14,600 surveys completed.\n  * The 2019 Kaggle ML&DS Survey had 19,717 surveys started and 14,700 surveys completed.\n  \n\n* The 2019 Kaggle Machine Learning and Data Science Survey finished with 19,717 responses.  Most survey respondents took around 10 minutes to complete the survey and 15,686 respondents spent more than 5 minutes answering questions.  14,700 respondents completed the survey by answering every question that was assigned to them.  Respondents with the most experience were asked the most questions and 6,974 respondents were asked (and answered) all 34 questions.  \n* Note that the answer choices were shown in a random order but the last option was typically \"other\" with the option to write-in text.\n* The questions and responses are available in multiple_choice_responses.csv and the text responses for the \"other\" categories are in other_text_responses.csv (shuffled).  The suvey_schema.csv file describes which respondents received which questions and the questions_only.csv file lists all of the questions.\n* Countries with fewer than 50 respondents were grouped into the category \"other countries\" and suspicious responses and spam responses were filtered out.","ce87dd91":"# 2019 Kaggle Data Science and Machine Learning Survey","53a3b919":"**2019 Kaggle Machine Learning and Data Science Survey**\n\n\n* The 2019 Kaggle Machine Learning and Data Science Survey finished with 19,717 responses.\n* Countries with fewer than 50 responses were grouped into the category \"other\" and are not present on the map below."}}