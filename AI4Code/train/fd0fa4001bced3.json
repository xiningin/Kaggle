{"cell_type":{"2c48257b":"code","d6b233dd":"code","e58a0e0a":"code","c8ac29a2":"code","7c542286":"code","cec4bfb2":"code","bf4b68f2":"code","f7bc4a93":"code","b50225e6":"code","58884542":"code","542eeb56":"code","750023a5":"code","08e33795":"code","4204ff2e":"code","1f46984d":"markdown","e95c271f":"markdown","da6f0e54":"markdown","3d5a192f":"markdown"},"source":{"2c48257b":"import tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nfrom tensorflow.keras.datasets import cifar10\n\nimport os\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# ignore information messgaes from tensorflow, but we will receieve error messages\nos.environ['TFF_CPP_MIN_LOG_LEVEL'] = '2'\n\n%matplotlib inline","d6b233dd":"## X_train -> train images\n## Y_train -> train labels\n## X_test  -> test images\n## Y_test  -> test labels\n\n(X_train, Y_train), (X_test, Y_test) = cifar10.load_data()\nprint(X_train.shape, Y_train.shape)\nprint(X_test.shape, Y_test.shape)","e58a0e0a":"class_names = ['airplane', 'automobile', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck']","c8ac29a2":"plt.figure(figsize=(20,8))\nfor i in range(50):\n    plt.subplot(5, 10, i+1)\n    plt.imshow(X_train[i])\n    plt.xticks([])\n    plt.yticks([])\n    plt.xlabel(class_names[Y_train[i][0]])\n    \nplt.show()","7c542286":"X_train, X_test = X_train \/ 255.0, X_test \/ 255.0","cec4bfb2":"model = keras.Sequential([\n    ## input layer\n    keras.Input(shape=(32,32,3)),\n    \n    ## hidden layers\n    layers.Conv2D(filters=32, kernel_size=(5,5), activation='relu'), # input->(32,32) output->(28,28)\n    layers.MaxPooling2D(pool_size=(2,2)),\n    layers.Conv2D(filters=64, kernel_size=(3,3), activation='relu'),\n    layers.MaxPooling2D(pool_size=(2,2)),\n    layers.Conv2D(filters=64, kernel_size=(3,3), activation='relu'),\n    layers.MaxPooling2D(pool_size=(2,2)),\n    \n    layers.Flatten(),\n    layers.Dense(64, activation='relu'),\n    \n    ## output layer\n    layers.Dense(10, activation='softmax')\n])\nmodel.summary()","bf4b68f2":"model.compile(\n    optimizer='adam', \n    loss='sparse_categorical_crossentropy', \n    metrics=['accuracy']\n)","f7bc4a93":"h = model.fit(x=X_train, y=Y_train, epochs=5, validation_split=0.2, batch_size=32)","b50225e6":"plt.figure(figsize=(15,5))\nplt.subplot(1,2,1)\nplt.plot(h.history['accuracy'], 'o-', label='train accuracy')\nplt.plot(h.history['val_accuracy'], 'o-', label = 'validation accuracy')\nplt.xlabel('Epoch')\nplt.ylabel('Accuracy')\nplt.grid(True)\nplt.legend(loc='lower right')\n\nplt.subplot(1,2,2)\nplt.plot(h.history['loss'], 'o-', label='train loss')\nplt.plot(h.history['val_loss'], 'o-', label='validation loss')\nplt.xlabel('Epoch')\nplt.ylabel('Loss')\nplt.grid(True)\nplt.legend(loc='upper right')\n\nplt.show()","58884542":"test_loss, test_acc = model.evaluate(X_test, Y_test)\nprint('\\nTest Accuracy:', test_acc)\nprint('\\nTest Loss:', test_loss)","542eeb56":"predictions = model.predict(X_test)","750023a5":"predictions[0]","08e33795":"np.argmax(predictions[0])","4204ff2e":"rows = 5\ncols = 5\n\nplt.figure(figsize=(20,10))\nfor i in range(25):\n    \n    plt.subplot(rows, 2*cols, 2*i+1)\n    plt.imshow(X_test[i])\n    plt.xticks([])\n    plt.yticks([])\n    plt.ylabel(class_names[Y_test[i][0]])\n    if Y_test[i][0] == np.argmax(predictions[i]):\n        plt.xlabel(class_names[np.argmax(predictions[i])], color='g')\n    else:\n        plt.xlabel(class_names[np.argmax(predictions[i])], color='r')\n        \n    \n    plt.subplot(rows, 2*cols, 2*i+2)\n    plt.bar(range(10), predictions[i])\n    plt.yticks([])\n    plt.xticks(range(0,10))\n    plt.ylim([0,1])\n    plt.xlim([0,10])\n    \nplt.show()\n","1f46984d":"# Convolution Neural Network","e95c271f":"### Convolution\n\nThe primary purpose for a convolutional layer is to detect features such as edges, lines, blobs of color, and other visual elements. The filters can detect these features. The more filters that we give to a convolutional layer, the more features it can detect.\n\n##### Filter\n\nA filter is a square-shaped object that scans over the image. A grid can represent the individual pixels of a grid. You can think of the convolutional layer as a smaller grid that sweeps left to right over each row of the image. \n\n##### Padding\n##### Pooling\n","da6f0e54":"### CIFAR-10 DATASET\nMNIST","3d5a192f":"The Convolutional Neural Network gained popularity through its use with image data, and is currently the state of the art for detecting what an image is, or what is contained in the image."}}