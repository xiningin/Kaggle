{"cell_type":{"b62c9e31":"code","f6990ecb":"code","d85a44f2":"code","8cfcc13f":"code","cd49ccea":"code","61782cf1":"code","3284ecb9":"code","000db395":"code","2639c833":"code","8d20b4bc":"code","21a7c157":"code","4c11af60":"markdown","875ce654":"markdown"},"source":{"b62c9e31":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np \nimport tensorflow as tf\nfrom tensorflow import keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Flatten\nfrom keras.layers import Conv2D, MaxPooling2D\n# from keras.utils import to_categorical\nfrom sklearn.preprocessing import LabelEncoder\nfrom keras.utils import np_utils\nimport matplotlib.pyplot as plt\nfrom keras.models import load_model\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f6990ecb":"data =  tf.keras.datasets.cifar10.load_data()\n","d85a44f2":"(x_train, y_train), (x_test, y_test) = data\n","8cfcc13f":"assert x_train.shape == (50000, 32, 32, 3)\nassert x_test.shape == (10000, 32, 32, 3)\nassert y_train.shape == (50000, 1)\nassert y_test.shape == (10000, 1)","cd49ccea":"x_train = x_train\/255\nx_test = x_test\/255","61782cf1":"y_train=np_utils.to_categorical(y_train)\nprint(y_train.shape)\ny_test=np_utils.to_categorical(y_test)\nprint(y_test.shape)","3284ecb9":"from tensorflow.compat.v1 import ConfigProto\nfrom tensorflow.compat.v1 import InteractiveSession\nconfig = ConfigProto()\nconfig.gpu_options.allow_growth = True\nsession = InteractiveSession(config=config)","000db395":"model = Sequential()\n\nmodel.add(Conv2D(32, kernel_size=(3, 3), activation='relu', input_shape=(32, 32, 3)))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\n\nmodel.add(Conv2D(64, kernel_size=(3, 3), activation='relu', input_shape=(32, 32, 3)))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\n\nmodel.add(Flatten())\n\n\nmodel.add(Dense(64, activation='relu'))\n\n\nmodel.add(Dense(10, activation='softmax'))\n\nmodel.summary()","2639c833":"model.compile(loss='categorical_crossentropy',optimizer='Adam',metrics=['accuracy'])","8d20b4bc":"model.fit(x_train, y_train, epochs=30, validation_split=0.2)\n","21a7c157":"model.evaluate(x_test,y_test)\n","4c11af60":"x_train = x_train\/255\nx_test = x_test\/255","875ce654":"Normalization:"}}