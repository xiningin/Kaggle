{"cell_type":{"436ace05":"code","8e994045":"code","11e47afa":"code","de461e1f":"code","e7d1d3db":"code","bf10adcd":"code","b75465ce":"code","e76238ab":"code","c866b0cd":"code","26c92634":"code","1adbb74f":"code","4f5cf9ce":"code","930b0947":"code","a6911a33":"code","6b609bc6":"code","f20a0da8":"code","1e5c0df6":"code","b895df75":"code","e3ad963a":"code","49f6f262":"code","1665fd29":"code","42f014b6":"code","78fc9fca":"code","2baeb593":"code","a3629cb0":"code","17668db9":"code","dfa97050":"code","c92014c8":"code","2b38e2dd":"code","05fdcb8d":"code","4b9643aa":"code","d8681b10":"code","84c0d15a":"code","edb122ce":"code","ec84316f":"code","d7614f0d":"markdown","79172a4f":"markdown","2fe97849":"markdown","425593d9":"markdown","e188ea18":"markdown","79f1ddcb":"markdown","02091bcd":"markdown","65f07f08":"markdown","51388395":"markdown","8977dcc8":"markdown","34cf2152":"markdown"},"source":{"436ace05":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8e994045":"import matplotlib.pyplot as plt\nimport seaborn as sb\n","11e47afa":"heart=pd.read_csv(\"\/kaggle\/input\/heart-attack-analysis-prediction-dataset\/heart.csv\")\nheart.head()","de461e1f":"print(\"Total number of rows and columns\",heart.shape)","e7d1d3db":"heart.isnull().sum()","bf10adcd":"heart.describe()","b75465ce":"corr=heart.corr()\ncorr","e76238ab":"plt.figure(figsize=(15,10))\nsb.heatmap(corr, annot=True,linewidth=5)\nplt.show()","c866b0cd":"fig , ax =plt.subplots(2,2)\nplt.subplots_adjust(left=0,right=2,bottom=1,top=2,wspace=0.2,hspace=0.4)\nax[0,0].set_title(\"Number of major vessels\")\nax[0,0].bar(heart[\"age\"],heart[\"caa\"])\n\nax[0,1].set_title(\"Resting blood pressure\")\nax[0,1].bar(heart[\"age\"],heart[\"trtbps\"])\n\nax[1,0].set_title(\"cholestoral \")\nax[1,0].bar(heart[\"age\"],heart[\"chol\"])\n\nax[1,1].set_title(\"oldpeak\")\nax[1,1].bar(heart[\"age\"],heart[\"oldpeak\"])\nplt.show()","26c92634":"plt.figure()\nplt.title(\"sex vs thall\")\nsb.barplot(x=\"sex\",y=\"thall\",data=heart)\nplt.show()","1adbb74f":"fig, (ax1,ax2) =plt.subplots(1,2)\nplt.subplots_adjust(left=0,right=2,bottom=1,top=2,wspace=0.1,hspace=0.1)\nax1.set_title(\"exercise induced angina (1 = yes; 0 = no) vs oldpeak\")\nax1.bar(heart[\"exng\"],heart[\"oldpeak\"])\n\nax2.set_title(\"exercise induced angina (1 = yes; 0 = no) vs thall\")\nax2.bar(heart[\"exng\"],heart[\"thall\"])\n","4f5cf9ce":"plt.figure()\nplt.title(\"slp vs thalachh\")\nsb.barplot(x=\"slp\",y=\"thalachh\",data=heart)\nplt.show()","930b0947":"unique_age=sorted(heart[\"age\"].unique())\nprint(unique_age)","a6911a33":"list20_40=[]\nlist41_50=[]\nlist51_60=[]\nlist61_70=[]\nlist71=[]\nfor i in heart[\"age\"]:\n    if i <=40:\n        list20_40.append(i)\n    elif 40 <i<=50:\n        list41_50.append(i)\n    elif 50 <i<=60:\n        list51_60.append(i)\n    elif 60 <i<=70:\n        list61_70.append(i)\n    else:\n        list71.append(i)","6b609bc6":"list20_40=len(list20_40)\n#print(list20_40)\nlist41_50=len(list41_50)\n#print(list41_50)\nlist51_60=len(list51_60)\n#print(list51_60)      \nlist61_70=len(list61_70)\n#print(list61_70)      \nlist71=len(list71)\n#print(list71)","f20a0da8":"age_count=[list20_40,list41_50,list51_60,list61_70,list71]\n#print(age_count)\nlabel_age=[\"20-40\",\"41-50\",\"51-60\",\"61-70\",\"71\"]","1e5c0df6":"heart[\"cp\"].unique()","b895df75":"list0=[]\nlist1=[]\nlist2=[]\nlist3=[]\n#list4=[]\nfor i in heart[\"cp\"]:\n    if i == 0:\n        list0.append(i)\n    elif i== 1:\n        list1.append(i)\n    elif i==2:\n        list2.append(i)\n    else:\n        list3.append(i)\n\nlist0=len(list0)\nlist1=len(list1)\nlist2=len(list2)\nlist3=len(list3)\ncp_list=[list0,list1,list2,list3]\nlabel_cp=[\"asymptomatic\",\"typical angina\",\"atypical angina\",\"non-anginal pain\"]","e3ad963a":"heart[\"fbs\"].unique()","49f6f262":"list_0=[]\nlist_1=[]\nfor i in heart[\"fbs\"]:\n    if i == 0:\n        list_0.append(i)\n    else:\n        list_1.append(i)\n\nlist_0=len(list_0)\nlist_1=len(list_1)\nfbs_list=[list_0,list_1]\nlabel_fbs=[\"0\",\"1\"]","1665fd29":"heart[\"restecg\"].unique()","42f014b6":"li0=[]\nli1=[]\nli2=[]\nfor i in heart[\"restecg\"]:\n    if i==0:\n        li0.append(i)\n    elif i==1:\n        li1.append(i)\n    else:\n        li2.append(i)\nli0=len(li0)\nli1=len(li1)\nli2=len(li2)\nrestecg_list=[li0,li1,li2]\nlabel_restecg=[\"normal\",\"having ST-T wave abnormality\",\"showing probable\"]","78fc9fca":"heart[\"exng\"].unique()","2baeb593":"l0=[]\nl1=[]\nfor i in heart[\"exng\"]:\n    if i==0:\n        l0.append(i)\n    else:\n        l1.append(i)\nl0=len(l0)\nl1=len(l1)\nexng_list=[l0,l1]\nlabel_exng=[\"no\",\"yes\"]","a3629cb0":"heart[\"caa\"].unique()","17668db9":"lis0=[]\nlis1=[]\nlis2=[]\nlis3=[]\nlis4=[]\nfor i in heart[\"caa\"]:\n    if i ==0:\n        lis0.append(i)\n    elif i==1:\n        lis1.append(i)\n    elif i==2:\n        lis2.append(i)\n    elif i==3:\n        lis3.append(i)\n    else:\n        lis4.append(i)\nlis0=len(lis0)\nlis1=len(lis1)\nlis2=len(lis2)\nlis3=len(lis3)\nlis4=len(lis4)\ncaa_list=[lis0,lis1,lis2,lis3,lis4]\nlabel_caa=[\"0\",\"1\",\"2\",\"3\",\"4\"]","dfa97050":"fig,ax=plt.subplots(2,3)\nplt.subplots_adjust(left=0,right=2,bottom=2,top=4,wspace=0.4,hspace=0.4)\n\nax[0,0].set_title(\"Age of the patient\")\nax[0,0].pie(age_count,labels=label_age,autopct='%1.2f%%')\n\nax[0,1].set_title(\"Chest Pain type chest pain type\")\nax[0,1].pie(cp_list,labels=label_cp,autopct='%1.2f%%')\n\nax[1,0].set_title(\"fasting blood sugar > 120 mg\/dl (1 = true; 0 = false)\")\nax[1,0].pie(fbs_list,labels=label_fbs,autopct='%1.2f%%')\n\nax[1,1].set_title(\"resting electrocardiographic results\")\nax[1,1].pie(restecg_list,labels=label_restecg,autopct='%1.2f%%')\n\nax[0,2].set_title(\" exercise induced angina (1 = yes; 0 = no)\")\nax[0,2].pie(exng_list,labels=label_exng,autopct='%1.2f%%')\n\nax[1,2].set_title(\"number of major vessels (0-3)\")\nax[1,2].pie(caa_list,labels=label_caa,autopct='%1.2f%%')","c92014c8":"train=heart.iloc[:,:-1]\nprint(train.shape)","2b38e2dd":"test=heart.iloc[:,-1:]\nprint(test.shape)","05fdcb8d":"x_train,x_test,y_train,y_test=train_test_split(train,test,test_size=0.3,random_state=100)","4b9643aa":"print(\"The size of x_train is :\",x_train.shape)\nprint(\"The size of x_test is :\",x_test.shape)\nprint(\"The size of y_train is : \",y_train.shape)\nprint(\"The size of y_test is : \",y_test.shape)","d8681b10":"scaler=StandardScaler()\nx_train=scaler.fit_transform(x_train)\nx_test=scaler.fit_transform(x_test)","84c0d15a":"lr=LogisticRegression()\nlr.fit(x_train,y_train)\ny_pred=lr.predict(x_test)","edb122ce":"y_pred","ec84316f":"accuracy_score(y_pred,y_test)","d7614f0d":"# Corelation between columns ","79172a4f":"# Accuracy check","2fe97849":"# Visualizing\n- exng vs oldpeak\n- exng vs thall","425593d9":"# Performing Logistic Regression and prediction","e188ea18":"# Splitting data","79f1ddcb":"# Performing Standard Scaling ","02091bcd":"# Checking statistical values","65f07f08":"# visualizing certain columns \n- age vs caa\n- age vs trtbps\n- age vs chol\n- age vs oldpeak","51388395":"# Checking Null values in dataset\n- No null values present ","8977dcc8":"# visualizing \n- slp vs thalachh","34cf2152":"# Pie chart\n- Age :Age of the patient \n- cp :Chest Pain type chest pain type\n    - Value 1: typical angina\n    - Value 2: atypical angina\n    - Value 3: non-anginal pain\n    - Value 4: asymptomatic\n- fbs : (fasting blood sugar > 120 mg\/dl) (1 = true; 0 = false)\n- restecg : resting electrocardiographic results\n    - Value 0: normal\n    - Value 1: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV)\n    - Value 2: showing probable or definite left ventricular hypertrophy by Estes' criteria\n- exng :exercise induced angina (1 = yes; 0 = no)\n- caa : number of major vessels (0-3)"}}