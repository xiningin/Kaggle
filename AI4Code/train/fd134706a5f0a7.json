{"cell_type":{"17f24710":"code","77bd41a9":"code","583e476d":"code","6cdbc3a2":"code","f19aa6e2":"code","6b418422":"code","b9ee02ae":"code","661b4bf5":"code","66588a57":"code","475e1beb":"code","3204db57":"code","b2d4ea1d":"code","51d7351f":"code","dd4ab8c2":"code","a01a50bc":"code","db5b5f1e":"code","759cb628":"code","e4ec49bb":"code","575bfe6e":"code","6ccbd2f5":"markdown","cc30674e":"markdown","d07888d4":"markdown"},"source":{"17f24710":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","77bd41a9":"import numpy as np\nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport tensorflow as tf","583e476d":"main_dir = '..\/input\/heart-attack-analysis-prediction-dataset\/'\ndf = pd.read_csv(os.path.join(main_dir,'heart.csv'))\ndf.head()","6cdbc3a2":"df.isnull().sum()","f19aa6e2":"df.describe()","6b418422":"g = sns.countplot(x = 'output',data = df)","b9ee02ae":"plt.figure(figsize=(18,10))\ncol = ['sex', 'cp', 'fbs', 'restecg','exng', 'slp', 'caa', 'thall',]\nc = 1\nfor i in col:\n    if c < 9:\n        plt.subplot(2,4,c)\n        sns.countplot(x = i,data =dataset,hue = 'output')\n        plt.xlabel(i)\n    c += 1\n    plt.tight_layout()","661b4bf5":"dataset = df.copy()\nage_avg = dataset['age'].mean()\nage_std = dataset['age'].std()\nage_null_count = dataset['age'].isnull().sum()\n    \nage_null_random_list = np.random.randint(age_avg - age_std, age_avg + age_std, size=age_null_count)\ndataset['age'][np.isnan(dataset['age'])] = age_null_random_list\ndataset['age'] = dataset['age'].astype(int)\n    \ndataset['CategoricalAge'] = pd.cut(dataset['age'], 5)\n\nprint (dataset[['CategoricalAge', 'output']].groupby(['CategoricalAge'], as_index=False).mean())","66588a57":"dataset.loc[ dataset['age'] <= 29, 'age'] = 0\ndataset.loc[(dataset['age'] > 29) & (dataset['age'] <= 39), 'age'] = 1\ndataset.loc[(dataset['age'] > 39) & (dataset['age'] <= 48), 'age'] = 2\ndataset.loc[(dataset['age'] > 48) & (dataset['age'] <= 58), 'age'] = 3\ndataset.loc[(dataset['age'] > 58) & (dataset['age'] <= 67), 'age'] = 4\ndataset.loc[ dataset['age'] > 77, 'age']= 5\n\ndataset.head()","475e1beb":"dataset = dataset.drop(['CategoricalAge'],1)","3204db57":"plt.figure(figsize=(12,10))\nsns.heatmap(dataset.corr() ,annot = True)","b2d4ea1d":"from numpy.random import seed\nseed(0)\ntf.random.set_seed(0)","51d7351f":"X = dataset.drop('output', axis=1)\ny = dataset['output']","dd4ab8c2":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)","a01a50bc":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.fit_transform(X_test)","db5b5f1e":"from keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.optimizers import Adam, RMSprop, SGD","759cb628":"model = Sequential([\n    Dense(32,activation='relu'),\n    Dense(32, activation='relu'),\n    Dense(16, activation='relu'),\n    Dense(1, activation = 'sigmoid')\n])\n\nmodel.compile(optimizer = Adam(lr=0.001), loss = 'binary_crossentropy', metrics = ['acc'])\n\nhistory = model.fit(X_train, y_train, batch_size = 32, epochs = 50)","e4ec49bb":"fig, ax = plt.subplots(2,1)\nax[0].plot(history.history['loss'], color='b', label=\"Training loss\")\nlegend = ax[0].legend(loc='best',shadow=True)\nax[1].plot(history.history['acc'], color='b', label=\"Training accuracy\")\nlegend = ax[1].legend(loc='best',shadow=True)","575bfe6e":"from sklearn.metrics import confusion_matrix,accuracy_score\ny_pred = model.predict(X_test)\ny_pred  = y_pred > 0.5\ncm = confusion_matrix(y_pred,y_test)\nacc = accuracy_score(y_pred,y_test)\n\nsns.heatmap(cm,annot = True)\nplt.title('CONFUSION MATRIX')\nprint('Accuracy - {0:.2f}%'.format(acc*100))","6ccbd2f5":"### Visualization based on Sex","cc30674e":"### Converting Age from Numerical to Categorical ","d07888d4":"### Age Range vs Risk"}}