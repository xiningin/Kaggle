{"cell_type":{"9b12106e":"code","b7261a7b":"code","40194915":"code","49369d3f":"code","87a64be8":"code","f39eb2eb":"code","1cca06fe":"code","6f972dd8":"code","17b43db4":"code","d08d5e75":"code","a2dfc12c":"code","f4bcd415":"code","2e09e3c5":"code","074bdc47":"code","783504a9":"code","741f0912":"code","1f3cf0bf":"code","c5b9f193":"markdown","ef1a01ea":"markdown","fed8811b":"markdown","62da75ad":"markdown","b05d17e4":"markdown","2abc98db":"markdown","8989a413":"markdown","d4055a2e":"markdown","96a088d7":"markdown","059fdd42":"markdown","0b69f27c":"markdown","dc07f3aa":"markdown","cf327031":"markdown","77c1d29b":"markdown","7900d363":"markdown"},"source":{"9b12106e":"import numpy as np\nimport pandas as pd \n\nimport re","b7261a7b":"train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntrain.head()","40194915":"def getSearchedIndex(df,col,searchWord):\n    selRowIndex = []\n    rowLen = len(train)\n    for i in range(rowLen):\n        if re.search(searchWord,df[col][i]):\n            selRowIndex.append(i)\n        \n    return selRowIndex\n    ","49369d3f":"selIndex = getSearchedIndex(train,\"Name\",\"Mrs.\")\n        \nprint(selIndex)","87a64be8":"train.loc[selIndex,:]","f39eb2eb":"data = \"100+200=300\"\nregex = \"\\d\"\nresult = re.findall(regex, data)\nresult","1cca06fe":"data = \"100+200=300\"\nregex = \"\\d+\"\nresult = re.findall(regex, data)\nresult","6f972dd8":"data = \"100+200=300 2021.11.11\"\nregex = \"\\d{3}\"\nresult = re.findall(regex, data)\nresult","17b43db4":"data = \"a=b+c\"\nregex = \"\\w+\"\nresult = re.findall(regex, data) # returns each word as a list\nprint(result)","d08d5e75":"data = \"a=b+c\"\nregex = \"([a-z])\"\nresult = re.findall(regex, data) # returns each word as a list\nprint(result)","a2dfc12c":"data = \"a=b+c\"\nregex = \"([^a-z])\"\nresult = re.findall(regex, data) # returns each word as a list\nprint(result)","f4bcd415":"data = \"3=2+1\"\nregex = \"([0-9])\"\nresult = re.findall(regex, data) # returns each word as a list\nprint(result)","2e09e3c5":"data = \"3=2+1\"\nregex = \"([^0-9])\"\nresult = re.findall(regex, data) # returns each word as a list\nprint(result)","074bdc47":"data = \"food foodmarket\"\nregex = \"([a-z]{4})\"\nresult = re.findall(regex, data) # returns each word as a list\nprint(result)","783504a9":"data = \"food foodmarket\"\nregex = \"(\\\\b[a-z]{4}\\\\b)\"\nresult = re.findall(regex, data) # returns each word as a list\nprint(result)","741f0912":"data = \"food foodmarket foodmarkets\"\nregex = \"(f[a-z]+t)\"\nresult = re.findall(regex, data) # returns each word as a list\nprint(result)","1f3cf0bf":"data = \"food foodmarket foodmarkets\"\nregex = \"(\\\\bf[a-z]+t\\\\b)\"\nresult = re.findall(regex, data) # returns each word as a list\nprint(result)","c5b9f193":"# 2.3 alphabet only\n### [a-z]  - lowercase letter only\n### [A-Z]  - uppercase letter only \n### [a-z][A-Z] - lower and upper letter ","ef1a01ea":"\/w : alphabet ,number ,underscore      ==.   [A-Za-z0-9_]","fed8811b":"below case is correct.","62da75ad":"# 2.2 word only (string + number + underscore)\n### find string,number,underscore ( \\w+ )    [ +  is one and more  ]","b05d17e4":"# 1.re.search","2abc98db":"# 2.5. from 0 to 9 only\n### [0-9]","8989a413":"# 2.7 between spaces \n##### \\\\\\\\b - space \n","d4055a2e":"# 2.6. except number [^0-9]","96a088d7":"# 2.1 number only \n##### \\d    - 1 number \n#####  \\d+  - 1 and more number  (+ : one and more)\n##### \\d{n} - n place number  ({n} : fixed place)","059fdd42":"# 2.8. start end regulation","0b69f27c":"## 2.4. Except alphabet \n\n##### ^ - not \n##### [^a-z]  - not [a-z]\n##### [^A-Z]  - not [A-Z]\n##### [^a-z][^A-Z]  - not [a-z] and not [A-Z]","dc07f3aa":"### (f[a-z]+t)  \n##### 1.startwith 'f' \n##### 2.ends with 't' \n##### 3.[a-z]+ alphabet only count no limit","cf327031":"# 2.re.findall","77c1d29b":"below case is more correct. add space check (\\\\\\\\b ~ \\\\\\\\b)","7900d363":"below case is not right. I want to not select foodmarket. "}}