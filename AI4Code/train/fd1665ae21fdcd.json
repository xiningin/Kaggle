{"cell_type":{"73c11da9":"code","763d5140":"code","0f922e63":"code","16fd1eb5":"code","1c479781":"code","d777cdfe":"code","76712fc8":"code","55bde50c":"code","00d326cb":"code","559a1e4b":"code","f9d76819":"code","cedf49e8":"code","f5a3295d":"code","61dadfa3":"code","f53df01a":"code","22cad43d":"code","8d1f6c58":"code","c9965b24":"code","939f7982":"code","cd178fe6":"code","a72cc0f2":"code","0478bb76":"code","92968465":"code","b6aeb78d":"code","0a134413":"code","56291eb5":"code","9f6d57c1":"code","341030b0":"code","07e40be6":"code","2a0b3c84":"code","1dd0fd72":"code","0c99fd2c":"code","09c3c069":"code","6792f2d3":"code","50e566ac":"code","7dc36e9a":"code","8a1a62c4":"code","fcca2f92":"code","000e20ee":"code","5f004ee3":"code","a464f29a":"code","1e5e9072":"code","8fd25bcf":"code","fa07c5d5":"code","d80bf249":"code","1b3ee90f":"code","9e822b4e":"code","bea0e94b":"code","f2365a51":"code","95cb6262":"code","c7dc4981":"code","db936909":"code","12ceaf5a":"code","d1bfc9ab":"code","16da3da9":"code","f3b885f9":"code","4379a95b":"code","5192739d":"code","106472bf":"code","bb9fdfe2":"code","b499dab1":"code","9a1d2154":"code","54fe33b4":"code","f027a5ba":"code","629d631c":"code","af2fbe1e":"code","e3326d7a":"markdown","79f9ee1c":"markdown","b9b78221":"markdown","0950f43f":"markdown","a1fc4476":"markdown","90bc692f":"markdown","90c80198":"markdown","7c32c9c6":"markdown","22f5b9e0":"markdown","22f8e60a":"markdown","1a842951":"markdown","34c76f7a":"markdown","596e24d5":"markdown"},"source":{"73c11da9":"import pandas as pd\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\ndf = pd.read_csv(\"..\/input\/eergy-efficiency-dataset\/ENB2012_data.csv\")\ndf.columns = [\"Relative_Compactness\", \"Surface_Area\", \"Wall_Area\", \"Roof_Area\", \"Overall_Height\",\"Orientation\", \"Glazing_Area\", \"Glazing_Area_Distribution\", \n              \"Heating_Load\",\"Cooling_Load\"] #Rename columns\ndf.head()","763d5140":"df.info() # Memory usage and data types","0f922e63":"df.describe() #Summary statistics","16fd1eb5":"import seaborn as sns\nimport matplotlib.pyplot as plt\nfig, ax = plt.subplots(figsize=(10,10))\nsns.heatmap(df.corr(),square=True,cmap=\"Blues\", linecolor='w',annot=True, ax=ax) ","1c479781":"sns.pairplot(df)","d777cdfe":"X = df.drop([\"Heating_Load\",\"Cooling_Load\"], axis=1) #dependent variables\ny = df[[\"Heating_Load\"]] #independent variable","76712fc8":"X.head()","55bde50c":"y.head()","00d326cb":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state = 1) # Train test split","559a1e4b":"from sklearn.linear_model import LinearRegression\nimport numpy as np\nfrom sklearn.metrics import mean_squared_error\nlm = LinearRegression()\nmodel = lm.fit(X_train, y_train)","f9d76819":"#train error\nnp.sqrt(mean_squared_error(y_train, model.predict(X_train)))","cedf49e8":"#test error\nnp.sqrt(mean_squared_error(y_test, model.predict(X_test)))","f5a3295d":"from sklearn.model_selection import cross_val_score\ncross_val_score(model, X_train, y_train, cv = 10, scoring = \"neg_mean_squared_error\") ##k-fold cross validation\n##k-fold cross validation mse\nnp.mean(-cross_val_score(model, X_train, y_train, cv = 10, scoring = \"neg_mean_squared_error\")) #actual performance of our model","61dadfa3":"##k-fold cross validation rmse\nnp.sqrt(np.mean(-cross_val_score(model, X_train, y_train, cv = 10, scoring = \"neg_mean_squared_error\")))","f53df01a":"model.score(X,y)","22cad43d":"from sklearn.linear_model import Ridge\nfrom sklearn.metrics import r2_score\nfrom sklearn import model_selection\nfrom sklearn.linear_model import RidgeCV","8d1f6c58":"X = df.drop([\"Heating_Load\",\"Cooling_Load\"], axis=1) #dependent variables\ny = df[[\"Heating_Load\"]] #independent variable\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 42) # Train test split","c9965b24":"ridge_model = Ridge(alpha = 5).fit(X_train, y_train)\nridge_model","939f7982":"ridge_model.intercept_","cd178fe6":"ridge_model.coef_","a72cc0f2":"ridge_model = Ridge().fit(X_train, y_train)","0478bb76":"y_pred = ridge_model.predict(X_train)\n#train error\nRMSE = np.sqrt(mean_squared_error(y_train, y_pred))\nRMSE","92968465":"np.sqrt(np.mean(-cross_val_score(ridge_model, X_train, y_train, cv = 10, scoring = \"neg_mean_squared_error\")))","b6aeb78d":"#test error\ny_pred = ridge_model.predict(X_test)\nRMSE = np.sqrt(mean_squared_error(y_test, y_pred))\nRMSE","0a134413":"ridge_model.score(X,y)","56291eb5":"from sklearn.linear_model import Lasso\nfrom sklearn.linear_model import LassoCV","9f6d57c1":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)","341030b0":"lasso_model = Lasso().fit(X_train, y_train)\nlasso_model","07e40be6":"lasso_model.intercept_","2a0b3c84":"lasso_model.coef_","1dd0fd72":"y_pred = lasso_model.predict(X_test)\nnp.sqrt(mean_squared_error(y_test, y_pred))","0c99fd2c":"r2_score(y_test, y_pred)","09c3c069":"from sklearn.linear_model import ElasticNet\nfrom sklearn.linear_model import ElasticNetCV","6792f2d3":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)","50e566ac":"enet_model = ElasticNet().fit(X_train, y_train)","7dc36e9a":"enet_model.coef_","8a1a62c4":"enet_model.intercept_","fcca2f92":"y_pred = enet_model.predict(X_test)\nnp.sqrt(mean_squared_error(y_test, y_pred))","000e20ee":"r2_score(y_test, y_pred)","5f004ee3":"X = df.drop([\"Heating_Load\",\"Cooling_Load\"], axis=1) #dependent variables\ny = df[[\"Cooling_Load\"]] #independent variable","a464f29a":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state = 1) # Train test split","1e5e9072":"lm = LinearRegression()\nmodel = lm.fit(X_train, y_train)","8fd25bcf":"model.intercept_","fa07c5d5":"model.coef_","d80bf249":"#train error\nnp.sqrt(mean_squared_error(y_train, model.predict(X_train)))","1b3ee90f":"#test error\nnp.sqrt(mean_squared_error(y_test, model.predict(X_test)))","9e822b4e":"cross_val_score(model, X_train, y_train, cv = 10, scoring = \"neg_mean_squared_error\") ##k-fold cross validation\n##k-fold cross validation mse\nnp.mean(-cross_val_score(model, X_train, y_train, cv = 10, scoring = \"neg_mean_squared_error\")) #actual performance of our model","bea0e94b":"##k-fold cross validation rmse\nnp.sqrt(np.mean(-cross_val_score(model, X_train, y_train, cv = 10, scoring = \"neg_mean_squared_error\")))","f2365a51":"model.score(X,y)","95cb6262":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 42) # Train test split\nridge_model = Ridge(alpha = 5).fit(X_train, y_train)\nridge_model","c7dc4981":"ridge_model.intercept_","db936909":"ridge_model.coef_","12ceaf5a":"ridge_model = Ridge().fit(X_train, y_train)\ny_pred = ridge_model.predict(X_train)\n#train error\nRMSE = np.sqrt(mean_squared_error(y_train, y_pred))\nRMSE","d1bfc9ab":"np.sqrt(np.mean(-cross_val_score(ridge_model, X_train, y_train, cv = 10, scoring = \"neg_mean_squared_error\")))","16da3da9":"#test error\ny_pred = ridge_model.predict(X_test)\nRMSE = np.sqrt(mean_squared_error(y_test, y_pred))\nRMSE","f3b885f9":"ridge_model.score(X,y)","4379a95b":"lasso_model = Lasso().fit(X_train, y_train)\nlasso_model","5192739d":"lasso_model.intercept_","106472bf":"lasso_model.coef_","bb9fdfe2":"y_pred = lasso_model.predict(X_test)\nnp.sqrt(mean_squared_error(y_test, y_pred))","b499dab1":"r2_score(y_test, y_pred)","9a1d2154":"enet_model = ElasticNet().fit(X_train, y_train)","54fe33b4":"enet_model.intercept_","f027a5ba":"enet_model.coef_","629d631c":"y_pred = enet_model.predict(X_test)\nnp.sqrt(mean_squared_error(y_test, y_pred))","af2fbe1e":"r2_score(y_test, y_pred)","e3326d7a":"1. Load the dataset.","79f9ee1c":"**Multiple regression**","b9b78221":"**Lasso Regression**","0950f43f":"**Ridge Regression**","a1fc4476":"**ElasticNet Regression**","90bc692f":"# **Building Energy Load Estimation With Linear Regression Models**\n\n### In this study, it was tried to estimate the heat and cooling load of the buildings using linear regression models.","90c80198":"**Lasso Regression**","7c32c9c6":"**Multiple regression**","22f5b9e0":"**Conclusion**\n\nThe following is the table when we look at the Test Error RMSE value in estimating both Heating Load and Cooling Load variables:\n\n*   Multiple regression: 3.20, 3.64\n*   Ridge Regression: 3.08, 3.24\n*   Lasso Regression: 4.71, 4.61 \n*   ElasticNet Regression: 4.56, 4.45\n\nWe can say that our model established with the Ridge Regression method is better.\n\n\n","22f8e60a":"**Ridge Regression**","1a842951":"3. Now we will estimate the Cooling Load.","34c76f7a":"2. We separate the dependent and independent variables into X and Y. We will first estimate the Heating Load.","596e24d5":"**ElasticNet Regression**"}}