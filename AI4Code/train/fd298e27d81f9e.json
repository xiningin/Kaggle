{"cell_type":{"d9626756":"code","3bd1da2d":"code","4284a223":"code","c24ca067":"code","e9758fd8":"code","bd648ca5":"code","c7a80170":"code","8858a16f":"markdown","db6766ca":"markdown","e156adb8":"markdown","31576752":"markdown","beb118eb":"markdown","b60728d5":"markdown","a2f48586":"markdown","3c5311c3":"markdown","ff9a7db4":"markdown","efd55bba":"markdown","c60ee141":"markdown","15c4d8c2":"markdown","b47fd57e":"markdown","21a18372":"markdown"},"source":{"d9626756":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","3bd1da2d":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nfrom sklearn.model_selection import train_test_split ","4284a223":"df=pd.read_csv(\"\/kaggle\/input\/breast-cancer-wisconsin-data\/data.csv\")\nprint(df.shape)\ndf.head(5)","c24ca067":"# Selecting from Third to Thirty Second Column\nX= df.iloc[:,2:32]\n# Selecting second Columnn\ny=df.iloc[:,1]","e9758fd8":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)\nfrom sklearn.linear_model import LogisticRegression\n#create an instance and fit the model \nlogmodel = LogisticRegression(max_iter=5000)\nlogmodel.fit(X_train, y_train)","bd648ca5":"from sklearn.metrics import accuracy_score\nnc=np.arange(0.1,0.9,0.1)\nacc=np.empty(8)\ni=0\nfor k in np.nditer(nc):\n    y_predp = (logmodel.predict_proba(X_test)[:,1] >= k).astype(bool)\n    y_pred=np.full(y_pred.size,'B')\n    y_pred[y_predp]='M'\n    acc[i]=accuracy_score(y_test, y_pred)\n    i = i + 1\nacc","c7a80170":"x=pd.Series(acc,index=nc)\nx.plot()\n# Add title and axis names\nplt.title('Class 1 Probability vs Accuracy')\nplt.xlabel('Class 1 Probability')\nplt.ylabel('Accuracy')\nplt.show() ","8858a16f":"![image.png](attachment:image.png)","db6766ca":"# Fitting the logistic regression model <a id=2.2><\/a>","e156adb8":"# Important Parameters","31576752":"# Importing and Inspecting the Data","beb118eb":"![image.png](attachment:image.png)","b60728d5":"# Contents\n\n* [<font size=4>Getting Started<\/font>](#1)\n    * [Importing the Libraries](#1.1)\n    * [Importing and Inspecting the Data](#1.2)\n   \n   \n* [<font size=4>Fitting the model<\/font>](#2)\n    * [Setting up the input and the output variable](#2.1)\n    * [Fitting The logisitc Regression Model](#2.2)\n    * [Evaluating the Model](#2.3)","a2f48586":"# Evaluating logistic regression model <a id=2.3><\/a>","3c5311c3":"# Importing the Libraries <a id=\"1.1\"><\/a>","ff9a7db4":"* solver{\u2018newton-cg\u2019, \u2018lbfgs\u2019, \u2018liblinear\u2019, \u2018sag\u2019, \u2018saga\u2019}, default=\u2019lbfgs\u2019\n* max_iterint, default=100 \n* multi_class{\u2018auto\u2019, \u2018ovr\u2019, \u2018multinomial\u2019}, default=\u2019auto\u2019\n* penalty{\u2018l1\u2019, \u2018l2\u2019, \u2018elasticnet\u2019, \u2018none\u2019}, default=\u2019l2\u2019","efd55bba":"Classifier comparison\nhttps:\/\/scikit-learn.org\/stable\/auto_examples\/classification\/plot_classifier_comparison.html","c60ee141":"# Fitting the model <a id=\"2\"><\/a>\nIn this section we first set up the input and output variable.   Build Logistic Regression model, play around with diffrent values of the probability","15c4d8c2":"# Setting up the input and output variable <a id=\"2.1\"><\/a>","b47fd57e":"# Good Read for Classfier Comparison","21a18372":"# Getting Started <a id=\"1\"><\/a>\nHere we describe importing the library, impoting the datset and some basic checks on the dataset"}}