{"cell_type":{"55767053":"code","a208cc54":"code","0125cbff":"code","8e0fbc91":"code","04f7aaa0":"code","3597c20d":"code","e19ef116":"code","264ccb59":"code","307416f5":"code","9b46c00d":"code","bde565df":"code","69d7f616":"code","2aee7b38":"code","a4d1c60f":"code","3a170c9a":"code","a9d2b3cb":"code","c4f0343c":"code","8b07456c":"code","f9f14d3c":"code","1e200c5a":"code","b069507f":"code","c7f578af":"code","8fa65100":"markdown","6ad907a1":"markdown"},"source":{"55767053":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a208cc54":"import wandb\nfrom wandb.keras import WandbCallback","0125cbff":"wandb.init()\nconfig=wandb.config","8e0fbc91":"#config.repeated_predictions=False\n#config.look_back=20","04f7aaa0":"config.epochs=3\nconfig.batch_size=60\nconfig.optimizer='rmsprop'","3597c20d":"data=pd.read_csv('\/kaggle\/input\/heartbeat\/mitbih_train.csv')\ndata.head()","e19ef116":"data.shape","264ccb59":"data_train=data[:int(data.shape[0]*0.8)]\ndata_train.shape","307416f5":"data_test=data[int(data.shape[0]*0.8):]\ndata_test.shape","9b46c00d":"train_x=data.iloc[:,:186]\ntrain_x.shape","bde565df":"train_y=data.iloc[:,187]\ntrain_y.shape","69d7f616":"data_test=pd.read_csv('\/kaggle\/input\/heartbeat\/mitbih_test.csv')\ndata_test.head()","2aee7b38":"test_x=data_test.iloc[:,:186]\ntest_x.shape","a4d1c60f":"test_y=data_test.iloc[:,187]\ntest_y.shape","3a170c9a":"import keras\ntrain_y=keras.utils.to_categorical(train_y,num_classes=5)\ntest_y=keras.utils.to_categorical(test_y,num_classes=5)","a9d2b3cb":"train_x=np.array(train_x)\ntrain_y=np.array(train_y)\ntest_x=np.array(test_x)\ntest_y=np.array(test_y)","c4f0343c":"from keras.models import Sequential\nfrom keras.layers import SimpleRNN,Embedding,Dense,LSTM,GRU","8b07456c":"#model=Sequential()\n#model.add(Embedding(10000,32))\n#model.add(SimpleRNN(32,activation='sigmoid'))\n#model.add(Dense(5,activation='softmax'))\n\n#model.compile(optimizer=config.optimizer,loss='binary_crossentropy',metrics=['acc'])","f9f14d3c":"#model.fit(train_x,train_y,epochs=config.epochs,batch_size=config.batch_size,callbacks=[WandbCallback()])","1e200c5a":"#using rnn model\n#from sklearn.metrics import confusion_matrix\n#from sklearn.metrics import accuracy_score\n#pred=model.predict(test_x)\n#accuracy=model.evaluate(test_x,test_y)\n#print(\"accuracy is {}\".format(accuracy[1]))\n#print(confusion_matrix(pred,test_y))","b069507f":"model1=Sequential()\nmodel1.add(Embedding(10000,32))\nmodel1.add(LSTM(32,activation='sigmoid'))\nmodel1.add(Dense(5,activation='softmax'))\n\nmodel1.compile(optimizer=config.optimizer,loss='binary_crossentropy',metrics=['acc'])\nmodel1.fit(train_x,train_y,epochs=config.epochs,batch_size=config.batch_size,callbacks=[WandbCallback()])","c7f578af":"#using lstm model\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score\npred=model1.predict(test_x)\naccuracy=model1.evaluate(test_x,test_y)\nprint(\"accuracy is {}\".format(accuracy[1]))\n#print(confusion_matrix(pred,test_y))","8fa65100":"Creating LSTM Model","6ad907a1":"Creating RNN Model"}}