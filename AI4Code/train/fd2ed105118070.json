{"cell_type":{"741f2ea1":"code","15248659":"code","4f506da7":"code","4019ef54":"code","5f50d104":"code","91735111":"code","6c1caea2":"code","d7c30c72":"code","f11d8991":"code","304fb361":"code","51e29162":"code","97a973bf":"code","65723484":"code","f3cdd86d":"code","48a00f4b":"code","8a3219f0":"code","185b0e2f":"code","7a421634":"code","815e8405":"markdown","ce9050ee":"markdown","03a6b154":"markdown","78cd5524":"markdown","591b7a91":"markdown","da15d254":"markdown","3cd47d70":"markdown","c241962a":"markdown","ec874bec":"markdown","52f31480":"markdown","ad85c97a":"markdown","4a8e30df":"markdown","23cde911":"markdown","8143d6ef":"markdown","4c17980a":"markdown","188bd61c":"markdown","9a9691ac":"markdown","94c673f9":"markdown"},"source":{"741f2ea1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","15248659":"data = pd.read_csv('..\/input\/health-care-data-set-on-heart-attack-possibility\/heart.csv')\ndata.head()\n# Here is our data set","4f506da7":"data.isnull().sum()\n# This is beautiful, there is no missing value","4019ef54":"import seaborn as sns\nimport matplotlib.pyplot as plt\nplt.subplots(figsize=(15,10))\nsns.heatmap(data.corr(),annot=False,linewidths=1);","5f50d104":"sns.boxplot(data['thalach'],palette='plasma_r');\n# I want to believe that this outlier will not affect us much.","91735111":"sns.boxplot(data['slope'],palette='Set3');\n# Just fine","6c1caea2":"sns.boxplot(data['cp'],palette='terrain');\n# Done","d7c30c72":"import pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split,cross_val_predict,cross_val_score,GridSearchCV\nfrom sklearn.metrics import accuracy_score\n\n# Here are the libraries we need","f11d8991":"y = data['target']\nx = data.drop(['target'],axis=1)\n# Y is our target variable\n# X contains arguments","304fb361":"x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.30,random_state=42)\n# Train and test separation.","51e29162":"from sklearn.preprocessing import StandardScaler\n# Here is the necessary library.","97a973bf":"Scaler = StandardScaler() # We create a scaling object.\nScaler.fit(x_train) # We fit this to x_train.\nx_train_scaled = Scaler.transform(x_train)\nx_test_scaled = Scaler.transform(x_test)\n# We have now standardized the sets to be used.","65723484":"from sklearn.neural_network import MLPClassifier # Our artificial neural network library.\nMLPC = MLPClassifier().fit(x_train_scaled,y_train) # We use x_train_scaled.\ny_prediction = MLPC.predict(x_test_scaled) # We test with standardized x test.\nprint(y_prediction[:10]) # Estimated y values","f3cdd86d":"NewData = pd.DataFrame({'Real_Y_Values':y_test,\n                       'Prediction_Y_Values':y_prediction})\nNewData.head()\n# Actual and predicted y values.","48a00f4b":"accuracy_score(y_test,y_prediction)\n# Pretty good test success but not over.","8a3219f0":"MLPC_params = {\n    'alpha':[0.1,0.01,0.02,0.005,0.0001,0.00001],\n    'hidden_layer_sizes':[(10,10,10),\n                         (100,100,100),\n                         (100,100),\n                         (3,5),\n                         (5,3)],\n    'solver':['lbfgs','adam','sgd'],\n    'activation':['relu','logistic']\n}\nMLPC = MLPClassifier() # Clean models\nMLPC_cv_model = GridSearchCV(MLPC,MLPC_params,cv=10,n_jobs=-1,verbose=2)\nMLPC_cv_model.fit(x_train_scaled,y_train)\n# If you don't know this method, gridsearch cv python --> investigate","185b0e2f":"print('Best parameter for you <3:' + str(MLPC_cv_model.best_params_))","7a421634":"MLPC_tuned = MLPClassifier(activation=MLPC_cv_model.best_params_['activation'],\n                            alpha=MLPC_cv_model.best_params_['alpha'],\n                            hidden_layer_sizes=MLPC_cv_model.best_params_['hidden_layer_sizes'],\n                            solver=MLPC_cv_model.best_params_['solver'])\nMLPC_tuned.fit(x_train_scaled,y_train)\ny_pred_tuned = MLPC_tuned.predict(x_test_scaled)\naccuracy_score(y_test,y_pred_tuned)","815e8405":"<a id=\"3\"><\/a> <br>\n<center><h1 style=\"color:#5F9EA0;\">Outlier<\/h1><\/center>\n\n<p>&#160;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<p><p>&#160;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<p>\n\n<center><b>We need to check contradictory situations,but before that, it is useful to look at the correlation between variables.<\/b><\/center>","ce9050ee":"<center><h2 style=\"color:#FF7F50;\">Now we need to do a scaling process for the model to work better.<\/h2><\/center>","03a6b154":"<a id=\"1\"><\/a> <br>\n<h1 style=\"color:#5F9EA0;\"><center>Load Dataset<\/center><h1>","78cd5524":"<center><h2 style=\"color:#FF7F50;\">Let's take our guesswork success.<\/h2><\/center>","591b7a91":"<center><h2 style=\"color:#8A2BE2;\">Thalach : Contradictory observation<\/h2><\/center>","da15d254":"<a id=\"2\"><\/a> <br>\n<center><h1 style=\"color:#5F9EA0;\">Missing Value Check<\/h1><\/center>","3cd47d70":"<center><h3 style=\"color:#DC143C;\">We have no missing values, contradictory observations are not a problem,I think we can now build a beautiful model of artificial neural networks<\/h3><\/center>","c241962a":"<center><h2 style=\"color:#228B22;\">Yes, we are building a new model according to this parameter.<\/h2><\/center>","ec874bec":"<h3><center>Thalach,Slope,CP,I think these affect our output.<\/center><\/h3>\n\n\n\n<center>Now let's take the contradiction of the 3 variables that affect us.First, let's start with the Thalach variable<\/center>\n\n\n\n\n\n","52f31480":"<center><h1 style=\"color:#D55250;\">Heart Attack Prediction<\/h1><\/center>\n\n<center><img src=\"https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcQXU_kDN_Je2BndsIYFucc2t_pQ3b4w3wvr0Q&usqp=CAU\" width=500><\/center>\n\n\n<p>&#160;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<p>\n    <p>&#160;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<p>\n        <p>&#160;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<p>\n            <p>&#160;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<p>\n\n\n<center><h3 style=\"color:#DC143C;\">Hello today I will deal with the heart attack data set with artificial neural networks<\/h3><\/center>\n          <p>&#160;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<p>\n              <p>&#160;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<p>\n               \n                \n                \n<center><h4 style=\"color:#DC143C;\">A heart attack can be a problem for people of all ages and groups<\/h4><\/center>\n                  <p>&#160;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<p>\n<center><h4 style=\"color:#DC143C;\">Today we will be interested in building a beautiful model<\/h4><\/center>\n                      <p>&#160;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<p>\n\n<center><h4 style=\"color:#DC143C;\">I'm thinking of making a presentation as beautiful as I can<\/h4><\/center>\n                          <p>&#160;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<p>\n                              <p>&#160;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<p>\n                          \n                          \n                          \n<center><h2 style=\"color:#8B0000;\">Content<\/h2><\/center>\n\n[<center>Load Dataset<\/center>](#1)\n\n[<center>Missing Value Check<\/center>](#2) \n                                  \n[<center>Outlier<\/center>](#3)\n                                  \n[<center>Artifical Neural Networks<\/center>](#4)\n                                  \n[<center>Model Optimization<\/center>](#5) ","ad85c97a":"<center><h2 style=\"color:#228B22;\">This is funny, we would have expected more. in fact, the event here is more than increasing success. Verify success.<\/h2><\/center>\n<p>&#160;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<p>\n    <p>&#160;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<p>\n<center><h1 style=\"color:#C71585;\">Thank you for reading, please do not forget to comment!.<\/h1><\/center>\n        <p>&#160;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<p>\n<center><img src=\"https:\/\/media.tenor.com\/images\/5c87d1dde8f109016a2df6077a8a326e\/tenor.png\" width=300><\/center>","4a8e30df":"<center><h2 style=\"color:#FF7F50;\">We need to separate our data set.<\/h2><\/center>","23cde911":"<a id=\"5\"><\/a> <br>\n<center><h1 style=\"color:#5F9EA0;\">Model Optimization<\/h1><\/center>\n<p>&#160;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<p>\n    <p>&#160;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<p>\n\n\n<center><h3>We can optimize the parameters of our model.We will make model corrections.We can further increase the correct estimate rate we have.<\/h3><\/center>\n        <p>&#160;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<p>\n            <p>&#160;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<p>\n        \n<center><img src=\"data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAABWVBMVEX\/\/\/\/i7vkUOF89risAp+EAN2Tk8Pvq9v\/n8\/0ANGIApOAAMFoAIlEAKlbj7\/np9P8AJVMALl8Aod8AJ1sAMWAAK1cMNFz1+f0AH1cAHlAAIlg\/tCbq8voPKmIAKlzc3+RqgJmMnbMAFVPO2+fF0+EAGlWzwNClscDo6u0AGE7Z5vK7ytlhdpCep7a4v8kzkzovTG4kqAAdP2V6jaPEytJGX3294PRgvehbdZPS191zgpcYRFs8qywmRmqCyOyc1PAAZJNOt+aElak4WHvG5\/amr7zt9+t0wWovhkE5ozFQZH+s2KeRqb4AQm4NUHuX0O8Aib\/N6MpauE0sfkUqd0gmbUzW6eoWPV2JyoE9TGl6x+xJqdaaxeABdqhglrhYu+gAD1KtybUAWkTA4rya0ZMgWlNUuUdjul6+3s6JyI1zwHIZR1qu17s2mTcugkMcT1ceVVYxUWhjnnYyfwIxAAAgAElEQVR4nNVd+X8ayZUXbdHdqIFuBN0clhEIBIhDg0HIQmPsEVh2BuNxZmaTzDqHJ8lknGR3s8f\/\/8PW1VfVq+5Gxse8\/Xwya0Bd9a13v3pVvbf3EahcLh8hyiNKpVL4P\/if6NOPMfiHJYSMgJITAvtLBVo+0iOhhQlx9FNPeCtCnNsCncfOXwjKu6H7xaAsH70HOpc+X5A7gfcZg9wdPAbyUwMKU\/l9dE9G+c+Hkbtmn0+fByM\/HL7PA+OHxffpMX54fJ8W48fB9+kwfjx8nwZjebsJqph0n8i\/t3vEx\/UdW\/i\/vKqbmpbq99udTrc72mw2o26302n3+ylNM3V1iyd9RIwJBZRga3Wa0\/VqkstmrRwi28b\/m7Oy2dxktZ42Oy2CM9kDP5aoJhLQvG6qre50ZmUt23AcRxEJfWrY6PvZtNtSTT0RMz8KG+MZqKqm2eoOJ1bOgJAJSI2cNWl0W6aZQDU\/PBtjGYiZN5guqjkjATifjFx1MR0kYeUHZmMcA1VN7TQUKxHvRF5aSqOja3GM\/KBsjF5gVdfaUwge0bichcwLI8vKgdqJQU7bWozlyX8wfNESqmqp7liAh5Usp4yR1dx0Bu12C1O7PehskIUdKzlRVRHIcTcVw8gPJKmREqpqramRczhwWWM97Q6I5zOZm88z528SLznoTtdGloPp5IxpKxrjB4EYBVA1B+tsyLQg1o2vsX0kwGR\/RqG2utdjK2yZjOy6bUZh\/ADKGKGCqobwBbiABM0aInRx+uT9va5h72KFRNzJrgdRfNy1MkaoIMI3qwanRi1i0jjFR6ljKxx8UHUWiXGnkioHiPRvGOSfnV13UuYW0aZPedVMddZZO8jHYZQ+7hCiHKDen1aNAPsmzf623AsS4mS\/OQkw0qhO++aHhygFqGpdw8dnZGcdNTomyefVIzV6ryavq51ZwGoZRlfOxh1BlAI0WzNfQI3qELnq6Mkf9Z++fvL6aT+68J9HgcPQlwwnO2tJ2bgTiDIvoerNAD6rEePBkIG\/vDmgdHMZE\/0h7W5YAYxNqefYgdeQzUVrzSzf6kVaBEL5\/KPDg31KB4ePYrYViQXzLbS1krLxvSFKRFQ1N749yM7aseFyvr\/v4iMY9\/tx5lbV2rOsb8Ok2viegioDmBp6g+cmncjogyG8CQJEEG\/iHYqqdSY5bxmHqQ8BUQLQbE0Mb3GXaoLN3qM3YYAI4psEtRBdXXqiYkxkkvoeECUAta43rJVAQBHln\/EAEcRnCcICLKquuju5rrZriJJBp1WPgc0k+CAWJmQiHq7prWd1KtGH3QJUh+6i5sYtyaKGKa9qAj5MWrLgTmuNXW20hpI85W4AweHV\/sr2VjQ+PlNxRbE12IAIN4MWriTGP0T3pMZe9cGf3ynTAGVI92yMY3fiJBRFmalBc6jksq9AhK+yOWXYHKRiI1lkVN3kGtkb0LDdwS1KALq1FXsMjxSE19qsnayNkj7nGxDhN+gbw84aV5tWHEi9NWai4zg7ggiaUb3t5qhShWDwTLPdHGfJwhu5bE6CEH1jECOZHTfbZqRX9dXfMdogxG0NKgzQlZXqNEpCVZQCrbI25lCuOmmM2n0VRKj226PGpIqrNI6dXaHEK\/KhrjI6ORjidgAhK4MAuvHFJsKG6uZgWEXwUDalDLt9DQmgevQI8BaPjpAd0rR+d6jgbMmxq8OBGSH62iYbCXErawMpod5yRbTakQPUte4Kz9ewjOlAddOp\/NNDAeHhU\/adrqmDqYFTCSO76mhyjFrH5aIB6uIWqggpoeoaGcfqSNM1Xe8ukH92cvYQF699oTu6EaK2G38ZVbQUnaGNdMCxFl1ditHsMOfvKC1IoJOrIgSwv2AczA1kAJFRH2N8pJYRnoEYtvFBm8rqF441lrshbcAUxZmAfvE9ZFRVZ0akmrNsB80QSZoumsUjTk4PnwqjqKbeWZEnyINdz9gZM8i\/JJRTSEa1IXNH1kACUE818OysmUSTji4PfDYeHMBZvq51ZpiP2UZKNsyAOQ17CBmDZHIKAZxarpEJiCjpZaaxpap1FcRkayG3FGofJfkHBN7hIzj2ohgXaCxbYRlvXiX90\/4PTNfcWFMI4h1l1Oyyp2Z9K5o\/Sl0+efPozdNnaHydZMSGsZFbCVKIev3oZv\/m0evIUpSub3ABD2W8OvqTZ0\/RGE8uU\/5fmB3mNKpdwCAkkFNARtUW0++q7wfV1BtWVjq8uTwaYAZWh\/2YXBgzRHfZLiezP0QraiiDo8ubQzbKGz\/D15oMYg4yqPFyKo6uqhOHl4uQVh3+vuqgCcVG4okJGWX0PKf6+0NQc12dcSZA6Bjr9wEWakNqRu0rTyqOXnOW0SFCtTvS+8Osw43x2oNorg25tYljovgXZpcKhTP2Vky95EOUX0cUpu9EyHT9mg+CLr3x1TGVqmwXWNZogKKZUVuWKPVCCHbwdLcA0bhPxVA2MClmGXKAUY42NuJI5sxhfsJbrqMn4uD7u5RRTLo4xMETjwE68xnGDJDT7VhoNikLcwHvcyQOjkQoroitm0GKS+vzgiJg8uenTSkXraboMqKYKM6r5SqhPyVwcJQLRQNMbZohGkQXsaB8K7iMqu6qIuAytmGhxmTUavvPgTRkf\/8mupGhVSjWQ3TaiJTroxtgjKC2q22Lyek2TBR+6tpRqxlYcVAN9\/cjpVRbF9IcnXaiBDUPDRFQROz4Lak9lXkMMdrv05zQCemz+nprhGqqwgNMF6ZRTIQRvg4uCpMvxxDtqYyJwjDalGYUVkjW7yClaruGMJWKLtXxvyAz6M8xTkp9P2ZPRTlNysIWNcm5ZWgu+WeQpYms0evdIoK07ro0QjKbmcg36GWWJpw1a0tqT6uisYGZKIzCwjVnwpn27b2FvkSQil1\/rFeZdLouTaFS8d4CkxswG0DwloyFgyxLmTiFAU1NtKG5KqXTtQt\/sBn+d3tLUxMyNJh0lkhlxSdBTBSnxTR5La6QyMLoqE3DPKv0\/MGmhKdRpkYFynPCj1jA5QAqLQIUkgp1QLWwCizQHzgmHrz1VjdvakKar\/aRacm8CoyG9bKwFBDqgQ7ao7f8IH8Qfq+22RwHwhxFhyFImbaWCbmamvwxPPa+13ig96\/qCz7RUAc1bDsDo83xB1ecqVH1bmPqVULz+f0wxD9OxH1u11SIcibmieLyZAFPQR\/bsJ2vghnwTcoD2EoX0pnKVThZ1DDL6svAaL1TzNTwQuj9WaVQL3qlrnzqJpgBf+XYDXGxmccANDHWzmg0yzTEp+K43himHrlVjH2\/MKi3ShnizdN+2KmaahsbmqAp3dvD\/rE4SPllR5QQFtGv0PL41byjp\/tuFeNRCnGryts8vNp0miITeVsjLk5W4muQjCLxJQ1Oj25u3j65zHu\/QBzM0IAlU2H737rWXr6q4alX5sHxsDFN19KNAdtX01NXNfanPhdTav7yydubm0ekjQr7LUFOXZ8NBOAxdkabyliIA50qngQt9AXKZnorQ7hAUBZXfT2v653VaYGiPgkNeE3i1Eyhstioel7VBmkvcM3UAjVZUrEktSssOrZYQWSaCHwTtjW8kKopGpGK8o31E3KxHgcLqwWZbKnQ1TaUfQTxVWjAixOX28X0RtenFfLPeqlAuQiFOxgLPB9saxyBvWExFWbbzUkcDdZPINYlADGawnhvb3hK5\/6qSGFkCrXTIWe+R8VanX1bXKyK5P85be6tcciaqUNbB\/m+Aekbs\/mW6F2jhXTlgOEMCSOsDbDESEQzDCByd5R1FEGplrk+B\/KZi+mrChVNKtf1NNbUmRyiubHAGRFz6qwixVQQUppeOgvRJ48d4FO8ZULUrb6iD+xRrmDIJ1cXIjpG88Zp3dW+0wb9jHKxBEHUJ44zFqdEd8UsQYCDYiqsFk2bbIFZetdSLNFmI4DFIEBEy1PC0tq0txdF5WWdYCwUz92PKMQiABGzS5RGc0MnuxQkK0JI9Qk1wYK+aYiFQNlA7Wc4gIg\/9Vr9pBGNjwzeOCkUKrPAD1cEYgEowCDlcca8NKp96tgmwpL4YioIKY3ZnSv+YVgLs8D+mtnEQllahefeHcXjw3R8PTwPfUAglkTFouMLIsRsTVYoi\/hiKnCKBgqiOKJ0A9BohLCBTUYpEZ4kROOBlJiRYSYKMsRsjXEtcNd7IPdFnmaWoovBvgfSQqSeOCCpj3aKsA4sJQYj+ETmvJ2JNKzh1VCl+6xiPIN9rijtZOQVntPp8W4AEpkvArVeYiHgeWGZE3IoVxF5NTSnsJCq\/aqSA8dF4SEupmUWOwE4PyFqCC9lM6dUeQPoiqlQvXMVkRd3jZaTs7yQ6sgs25LiirkhcjrdAcAyiRSK8EBqP6fkNvzSp6q0MM8z100ShYeQ3xuCJTVXDhCJu8tyhY3Nidy7J6YhtqQVWYkDWUFnxcuRdkV4IjCXKSKvhiwmFVcK2xmxXMAo38epYab03mc8uljeC8LyerOAbI2+oVMWloXOhldD5iuEjEtf2o4ir3HqHTq19wTYq5GAVtaYjyRJcWy+wsMSDFHCqCLyakjjPDH61BaOAZSX\/e8bWLxOz2VzP+5er+onJyfF1XVXbnQXxBXKunZSxA46CyEUWcBxNFVE\/sMW7CvwOmWlQpoie88ZKRN7zclpsVBiyVTxdCGJdy5w4lVvymQ0Rcu4gny5MYpwTgVCyEyvINN60wabH3wyZxjhEMI3PGHJoJfI10\/AmBzXrNKFqGFwpdtu8pOjtkMMR\/AzBUOztMHsHkV\/RiNqq4EGNqdzcdrLir+35gOt15riT8vYF9Z5IxdeSGRN13whkiqioKDE1PAI3ZxZ8Dk2YKtCCImQrkUGLmiumCkVa7XSq0ytVmSAiyuRjVNcPM7IDQ3lly34aguum2KEgik1wPoFDuVEfxMco4NZWBPmfMHy\/WLmatNOqbqaancbGVrfKNUE\/1nG5qoYxcQ88teC12JbEAZkTDnddP09bzXNpq1Monb8NByaFhoCQJIJp2vjDT51gOeFe59T3VesNCNAbGImCsYyNNJEsfngkUWaAg+wMeX+nIXdgkBqV4Y8oMF\/18JW8JRnIbGN6VJhEz5voOr6hlpWAWIZ\/0UlymgjwylU+1xTI\/ydiJCFB8JPTXyyKkJ2TLxFWOK1sMeKG8BxZbNPc\/k6HwXhXLMQZdPQFB0FUCIwqgEQUlPKNxthLwlsDgT+Dm+gCWpF\/HfxCjxKoWpXUGVgb16JsTUkfGxxTdT9HGxMAVNKci1H4Vok8RqBZdIUuwoK79Rn+Cx\/iSHUryQ9b6p+hbkoOA2yVgP5fTxq3xZkLJ9SHHCnrCwiJEZJSETMkeWMgRKUrmlqq7NpkKyctzN4hwnxSHoYRiXWSbC\/yzrZ9G\/38X0h0N6yuXCsETcZmvKJJWwRoboQHUv+KH\/5p6++udL43l6ztWms0sVanVqNGheTDrHfi9quV8leVf1aFNM0cp6lxVWz01L5BcofaVfffPWnZ\/nQbJgbX4hpPucO1b4hOIujy7f7dCfvTT\/0c7N5Ui9k\/CjlNGw0eifEtUXFQdoGy\/EJx0S3mpwp1IuV+jpcOT3qv6G7lvtvg+3wzF0ImnQkIqThj+9v8vm3\/jHzg9eB36vt02CkWTpdhie6jPVsWOAyYgnruhh4brpQC8bZR68P\/EPvb\/1D79hfQyVeESHdN\/TTX+6Y+WGgQ0\/fuOEYWuqT9FU3PM+9SSYmOkmxThu+vlNen6DIzhOOeqD+cvQo2MBwsO\/vPtPKt5B1iAh5v8IfMz\/0W4P0DTaF9eLianl+LOb2x6dxESYeLwUW6cpzlExmKrU6MWCB9us34Q4N\/9C7zOUfCUEbzZ28H4q9SX5jCUFYb8rqFqQPSlqNcEnDDr4Ip829i9GwFEQotqB4XZ\/uxPnCd55HqHdCSwG2JoURSsvApGcmRkiZqBekNbpeJYgQaCNym7Fc4eMzRBEhY3ab3lsFHhx8ekS+U7VohOvYvicyMxIq8HGNR8dBhHmgZ9BlItsQFMI2GcJcp0VJXLT9\/bfsu1azEIUQu7pKVL5FZ6ZidU1HI9TokgpNRIToJWI6zYEBhNyADKHCbo9LQwgPztjFcnY6CuEJnnlsC39eJQlhFMLSbNChBM7mD\/S7ri0Jvbl\/M7fCyPkKeua+e8eBE4cwXYo\/pKDiwsaJ7CHHZLfAopQFZ\/NNlnxJ5y0kjgJCnSG0qpjOYITZKqVCLMJC\/LUJKnYI0QjT7oqDs\/kqeJ2dLZg2maW56BECuzwPeoxGkZaGFDVi3CGWUpJ\/RPPQIGTnYB7a9GtlK0uTZRUzDUJ44w5P2tWkCFfJbCnetcqMoxD6KQvUGn3I\/PF8O1vqIoSeefAkhPBWNrn4HlKCsFOEyjswQqh1113vucyWyqSU\/R3ggQ69xkYatUARm\/9tXExjTiNdDm7T9BGmRJE6eMq+u5DxUGgspgi9MEpAePAohAElcpXCuDG6EMqIPZLmxSkiSS4qwD5G76I7naWL4cQaCEDcr85Z1Ma3bEsib9tbVMHWHGjeeOc1P5GrndYaHC9XmXgxJc21gsOfT1fFU5ResF5OH6EmRMmX7lcjWxJ5S\/JDP9V7wh10fBaYSSF0EoZrzqOVz1fRYqrh2K7OJZYXPxZKgedWAnE5dxLi0LMJe8uk+SFFaATGDJ4XPTgIAtzrrU68lcZebescXx9gUT7hhHTl40O552moRPks0Jy8f\/ja\/2JpSBBydRpWxXCCTdnP9lmSj5JqbS9MKJGbeokcnwThPYg01NvkjZbCdbUSx3tSwGIljMnVkqtQam+92ewHl5uV9XmEQK1tRfdHQ0999uaGrJjsGDFK5NZATZ\/ampX8AC3d\/OftzDlpNlkMmxIrnSdSdfMmJE57dF9X6GeSVRMVg3\/2POtYEnwBNNyHTdKgcSU7TqlNwQaOodAVzlPWyfKbeGV4QwlvPnGfsJpVljf+vaxSjWwIwlafLydSjSo2QC6qFKBgSMtkGzKqJe64qljC\/OANJaCq79ashI1OxclJwxdMozq0b1GR7lu4vetCjYZECtKUGNOt5Sj8Zxd8jVCKkNU7RDRDw7jmPwuBOYGWfk6sRqm04U7+qtpgQlzNiVCiWWTihPTaMIS99NscWKbBCPlSFGvcENCMcs4kaljSbgfsH5KW9Uxx0SX7h3lyEa1pDma0d\/1EgHJREWvLHE2cnBDmXVPl4iN9bBuFPeAzwV0QQpHtWeS4ZGrAHnCB7QGXGngPGFGrM12wjWGgNwWrbnT3WPkMUCJqIM+gPWDYXShnwoPtQLQK0gJuxSiPWXBXKNZO668yxUqRHcGop0XbdY7XqRLZeosiUFv4kPIFcBYAQtYSJQy+jlFEGqby8QmmURHqxSidTgGZyMg6VnyC1HAuaYoiI3CfudU2wdTcxiniHm7G4GNMQr0G0E+zhpzPOdzuECLIqt9KGtv2AIRs50LkF\/I4VaBZxqdjEovAqV55tDh1I9hMoVhJT2HnOiJbIZH6PkfzEJZA0otHEfLGlO6mKiK\/Fo4NMcgjHGOmf5TO7vi8sXpVOTkpjhu30pXq\/ZgGm3ICtLQdsVOX9m0rfDZKw0zBmNK9RjGCGdmOEzFyg\/aFRk0uAZGN8cinOI4tyMkxbaEVGoZob6LQ9kWjGlHW0WNEK+3ROfbt9WgbkYTGpeigbQ6Fj1QNhXY3t9GbV0R2GkwUlZUjt6a9IhRj3oHo5r+0+IYsqSOGdGvJSTv2NfdpynQkHhGtVE6mZivxFOUdiTQAFmUaX84B0sW8odDf62Z7kiZh0b+jYEIWfTcjp7UdkVtCTiSLdWsBodW55PiE26svKCJr7hd1CkkIfOCABNjRCUFyKmPfKRP4CaQpQ8kZH28peEXss10O4UnY1oDd+GuyG53smFM8ncsF4gJMU9l8Ja36e8C5p6FETFF8K4bkmLArlG9zbk14wUI3FHi0gibAhFToh\/LPPfGKyAI3Q7SmF5K4hvjCQhhibzRKeDThgpOLEdjv5o4vChE9WC+eTPTPrgl9USl6jl8MjvbGMBN7oROkhLo\/FosnSUzPeaZSSQeXbXQKp8aIVoWC6Ed67JIZoREusMDcNymTiqmYZ+6dZ2FNPKZtlh7XyzOSMtUzcefZzse1DDm\/7wMkW4Z8+xGi59\/++S+\/+cufn\/Ofj6jEiQ2bgd8IRyxpbR\/KJZAigOb0uBCEeO7mS5licSkvYPVG6RrLOWruKVLKwdPwyjz\/6w\/fPUR0HxH633c\/fRvASW+pEZtng+eAxbPc7JisyC4U2VugTzwm+VGdyHCDlihYnltZjSCQve66Vgyki7SezDgYBPj8p58RqntBQjDfvWQgaQ3KEa8sClkBQUxpbApEbkitHaGYSiG6XJynyeHlUt09j18qnr7iY+nu+LTIiveFGuv5buAD0jzAb7\/j0Ln08OELgpFGbGKVLXxthCCm7PQw4HuQT5REp\/MaPZFfZNdG9PaadZdJGc5wdN07FdL1WqPcoWDr42mNA\/jtzw9BeAzku+csrQBOZYfvVBDFlNoaCMsyp5zBIdWcCCcVUGYpRhl2moQrpS5c7taWWP\/Y+f1MIQzw+YsofATjT9cFOGLj7+Dhv3avpzkD4pSJIytnzF27UffN\/8WwRj4NNyOcECtUmXmcpef3CUBPoF\/G4cMaee9vdTCt4C+oEe+nYfsXABMvzhSbflwWdjfIPL37ESiVLzBfQyVQvD2fWZwHl29eosz2K6ixDGQYv38AXeAh3IUlMNG9Rwtg4jSnVM\/3Lt8eItoPb0jNa4VSvc47a3LVV1Cyz6F2vSsk5BmPg8\/vwQYGgPhfGeCiKGHWQmcPu1wStCoLx\/6jv6n4KMidXmMlFgn569pI+7BYue8WKiXXPz1Pig\/T1+I9D+JGoHhzBGPiGeDLjqvBK3AP9uOu0T7n74nCOwBQuuwJzLfJJNSln\/MREZtLPEL3SDcQf+\/t\/Z7rF4i5gXle4e76Ig3SEXH58+0A3rv3HR+UAg8VbI3LRCCYF19uFJ1FlHEzd8D+4i1CODtiAJMC80T5\/jvu5kPosSITabQguoa80Lhz8CYSIeFZzV8Fel2b\/OffJcT3\/d++djE+\/EdIFcHHihcntkmBR7H4\/ADo2zmMZiLWu+L5sUuk5Q84Qcrop4Ru4jcPMoUvPIh\/D55ZgB8sMpGWpIQ8Ebrd8xJ+JqMlaZOtuET+Jd3ISmhlEEA0twcexHsBdyB5ssDEfN+9qzf0O\/D+0keSh1Lqhs6I0NBFmlQlk9H7\/\/YAv0NBefArBvG+L6eyO2jFG+fx3VPE7YfyJfgO2kiEZDsiRMI5N4+SxGoUoDO5RWH3g38xiA9\/68qpdB7iNbLundIhOQUR7kufSuj6tBCi+o9SIU3k6glAo7d3UXWUB9+zP3lnRrNwD7rPu+3e5\/2eCPfOp40gLaXV8UQsdAHi\/BdB\/DcK0TU2EdMALvRmd5\/nAhEJeGN5tJRuQdtwENPcQhB\/QyH+04xhIcRE9zUEZ77fL0MIn0Y8dRv6a5KMCQO0XcU5th2l\/hcCkWpi5POBdyMwOQ12IQkvb4qP2xLTi6Qc9E1xb4J1kXzzUo19EYuA0Ht3QEAVAXfx+x0B3ItnIckHc0FfMzSUApXT78zYl+lA7yjx3gji\/Upk4qvoNo3EFC+kBKAdAphTMl8+vkfFNP5FM+IJkDy7e16xPGtT5q74xVfgTnaxd7j3Q5yvuP+vB1yBbI0A\/gcFeO\/hf5qxQwBM1F1VPPMcvxZ+f\/HrRU5xzq538Jbsn4NoHv\/qv3jABGBIRNe2Uvpv7+sfEowBve\/JfS9fIJHyDgfTVt3pmaPYRmTzYhIK5YWPv3zgOfMAQCfEwVkQIFLEJKOICFEIzt7rEvAZ+Tf7uE5zeENj7gvMRmsRc9dXWUtpUZwOBt2Pf5dRPE8XAGgF1WFlK4X\/CfzkfhKE0DutdPZiufDemvbsWd6f77Jq4LfCRajj05sDtCQHN3LfGTA0j7\/MKIajFP7mz\/\/+rzAHAwOUx0boB0gRhX0biMB35zHH70S0RfXw29Cd6kzCx6f7rM0e\/UeC8eJf3mwxB3PDCULw34+lABc8wHsPv02CEH7\/ofuCR6Co4dGcvt1vcQtIYugU9iFQEyjfLk5+FeSg1UBMspXM7772AQYbenoY\/1\/CipoQIfR+QN19xRJUt\/HpfIz5mMtd86zmjpkLEOfXuZxT\/yIIkPjftaU4GWxSBQ72FC9aCyD8ayKE8HtI2+77sc8i20wvZlXySlEllD4Ix8wPg4I6X5KXrRonXwQAshjiukqyXAww1JLVQ0JV\/w3vTZIiBN8law6y7qtWozd2j6\/P8CtF7erEvwNajNXddKt8fj3B7551cmfXxz8ERZTR6AxB\/P6LByFLvtczHM7QbocQfB9wAGJMjFYejekLc62zyfXtcVlkIWFi+fj2enJm0VfljnFfAwlp7v9PKVRqP0dcLBTC6nFs+WnhHfRwT\/JOZ9N9RaZiRfZHkiksCWfIW4+NfwdYuL\/\/7wZ52zHhNtsK\/4kg\/NJRckFNmOMHhTg4lwDcAqHkvdxt\/w3g8ffNHo\/WFnkvt+KACAl+O2ut\/U3wl2TSX9Q5Ze8t7JANn2Pd\/B4KYZP5w0iI7muPnWx0Wzuji9HasaTvVrec9ShkmWlMcx9DrIaeP1QCvyOVi3+BMfrD5ABha5PS+2MW3ShnSROm3nwDVXYONnNh547FpfeJXZEt4cVZoIbI0c\/bIAStTUpNzVzHaC+S3owMHgk\/5E\/6YWITvS8Iqk\/nVTnAey+2QghaGxSjNlimgRxwwvutyyAPoRD8hQdRxsXzs1ChO0z3X26FUAbRe8k5sqnjZGwEruw4eAv98OV9D2IBhHiLANZlALcyNBEQU9rAcJXROUvUNQv7Q4D8BJFwscpDJEVuKcBkyVMSiHp\/7XpGlPcmMaqAlMI\/9JN8ootcGw6Kb5ySkPj7f\/LT1ghlEOFK7wgAAAOWSURBVFWtWfVuOKlG5YSMhCryoWSzKlDyFrm4rCpOQQ5weyHFJHslntYeuzYVieowVh35Q+9PJL8L1jF4LmKAztdSfAlrGIkhqurUDVNRiFMdxrVAhyBKAYarbWHXf51F+VIUwORhd5gkgooktT32tFExzoYxsnrp96fsR+ynhopRQadxbcUAvPf4bgDlEJFr3FiGj1Fav3Dp6VuE7mD\/bfQeR6hk6rv+IQL4u0iAd2VhFMSU1m+c+Vf8ONlJ3GtJypGltj3cVPu\/oWm7XEQAM797LMFG6W5aGAcxr7Vnvjoi31FdQ28+SjrO+bpq18NZEXH91sz2KvdSFt7FkPokhYhf9T4OYnSs3PBOIMvnwxwplBTCski46MQDvIMvDFHEjVY6hxGn9uvb7d5XgnLJM1ennS\/Dcye6GCxsg\/TuPQHKvQbBqHdmWSOAUXFy1clQfpAyRPPb4aSaCywRXyJEXHwQB\/D++8loLET8FsCGFZwlqV9kz1bXtxc9mcyWexe317OzbM4I\/2Hu9P+4Tbavv4Bx+TK6A4BR9obqY7+5CDOSwrSqxmK2XI7OLy7m8+Pj4\/n84uJ8tFzOFkbV4sBhEc8umv2jf2zXurdFeSaaoq+XU3Vt0MhZPEiM0zHsnEVuKqzi\/7GsnG04PDaiwRZ96aO5FcSdAYyRVMJItTs0LIExSchBfzfsquweFDNZ4xChXeigR9GSShmZ6lwrWRtikRydY2eV604qcDe9+feEXcIPf94lwL14NtJLvtub9YS3IFLe5bKT9aatadz1J799l4SN7+0HRYplI0OptrrXs2rWgjVOodppZauz625L1YB7iFT1peS4TADf492pYIDi2UgnqJua1ho0p7OVgs1LDpFt2\/g\/2Ogoq9m0OWhpmqnLLpg38\/+MxHh\/28pTcoq9s5PDmer32x383vjmtIn\/02n3+6kobO5fm7+VY3z48IPh20soqkGcCCkmE\/0fJvxBsr80f\/uPnwGQDx++u3uylIySieoOCK3F3\/\/xDh87vM9E8+HDey9e7tiAflqMpFXt+V9f\/vDPFy9e\/POHl99+DHQfE2NMK94vHuOnxffhMX56fJg+HMbPAx+mcnL\/mJzyO2gE3CXtmpGfD\/t8Ku8O5NFnxj6fdgLy84VHqXyULBqDSf3c4TEq829NSkT5Xwg6l8pH20js0S8MnUfleG4izv1CwQWpjJAiyufJ65nwf\/A\/yx8H2v8DFLRC421LiCcAAAAASUVORK5CYII=\" width = 200><\/center>\n","8143d6ef":"<center><h2>It's very simple,we will search the parameters of the model to a function, and I hope it's not the best we'll have improved.<\/h2><\/center>\n  <p>&#160;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<p>\n\n                \n\n\n<center><b style=\"color:#DC143C;\">I will try the following parameters.<\/b><\/center>\n<center><b style=\"color:#DC143C;\">Try everything for more success.<\/b><\/center>","4c17980a":"<center><h2 style=\"color:#8A2BE2;\">CP : Contradictory Observation <\/h2><\/center>","188bd61c":"<a id=\"4\"><\/a> <br>\n<center><h1 style=\"color:#5F9EA0;\">Artificial Neural Networks<\/h1><\/center>\n<p>&#160;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<p>\n    <p>&#160;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<p>\n\n<center><img src=\"https:\/\/miro.medium.com\/max\/1100\/1*YgJ6SYO7byjfCmt5uV0PmA.png\" width=600><\/center>","9a9691ac":"<center><h2 style=\"color:#8A2BE2;\">Slope : Contradictory Observation <\/h2><\/center>","94c673f9":"<center><h2 style=\"color:#228B22;\">Yes search is complete, took some time but no problem.<\/h2><\/center>\n\n\n<center><b style=\"color:#32CD32;\">Now let's see the best parameters for us.<\/b><\/center>"}}