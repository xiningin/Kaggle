{"cell_type":{"c59eaf00":"code","4d74d257":"code","1504cd59":"code","d19138d7":"code","e2b0d14d":"code","abdfcea3":"code","77e1d873":"code","6d4ecf8a":"code","3cdf940e":"code","00327556":"code","1932c9da":"code","d534d45d":"code","0d2601c4":"code","7364d2cf":"code","2720826e":"code","88089381":"code","f3cd9182":"code","a4b5f0cb":"markdown","521074b5":"markdown","6fa13d4a":"markdown","8eff2e51":"markdown","4d22534a":"markdown","d26f6241":"markdown","b7816948":"markdown","d474de74":"markdown","d2f3897f":"markdown"},"source":{"c59eaf00":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objs as go\nfrom plotly.subplots import make_subplots\nimport os","4d74d257":"for dirname, _, filenames in os.walk('..\/input\/tabular-playground-series-jan-2022'):\n    for filename in filenames:\n        #print(os.path.join( filename))\n        if (filename.find('train') != -1):\n            train=pd.read_csv(os.path.join(dirname, filename))\n            train.info()\n            \n        elif (filename.find('test') != -1):\n            test=pd.read_csv(os.path.join(dirname, filename))\n            test.info()\n            print(\"=\"*50)\n        else:\n            submission=pd.read_csv(os.path.join(dirname, filename))","1504cd59":"print(\"Check for Null values in Train csv\",train.isnull().sum())\nprint(\"=\"*50)\nprint(\"Check for Null values in Test csv\",test.isnull().sum())\nprint(\"=\"*50)","d19138d7":"train.describe()","e2b0d14d":"# add store information\nfig = go.Figure(data=[go.Table(header=dict(values=['KPI', 'Value']),\n                 cells=dict(values=[['Number of Countries', 'Number of stores','Number of Different Products', \n                                     'Window Start Date', 'Window End Date',\n                                    '#Rows in training set', '#Date Points in Train Dataset'], \n                                    [train['country'].nunique(), train['store'].nunique() ,train['product'].nunique(), \n                                     train['date'].min(), train['date'].max(),\n                                    train.shape[0], train['date'].nunique()]]))\n                     ])\n\nfig.update_layout({\"title\": f'BASIC KPIS of TRAIN DATA'}, height=500, width=500)\nfig.show()","abdfcea3":"\ntrain_aux = train[['date', 'num_sold', 'store']].groupby('date').mean()\ntrain_aux = train_aux.reset_index()\nfig = go.Figure(data=go.Scatter(x=train_aux['date'], \n                                y=train_aux['num_sold'],\n                                marker_color='red', text=\"sales\"))\nfig.update_layout({\"title\": f'Avg Sales by date for all stores and products',\n                   \"xaxis\": {\"title\":\"Date\"},\n                   \"yaxis\": {\"title\":\"Avg Unit Sold\"},\n                   \"showlegend\": False})\nfig.show()","77e1d873":"train_aux=train[['date', 'num_sold', 'store']].groupby(['date','store']).mean().reset_index()\nfig = px.scatter(train_aux, x=\"date\", y=\"num_sold\", color='store', \n                           color_continuous_scale=\"earth\",\n                 size='num_sold',  size_max=30)\n\nfig.update_layout({\"title\": f'Correlation between store and Sales (total avg sales and promotion on each day)',\n                   \"xaxis\": {\"title\":\"date\"},\n                   \"yaxis\": {\"title\":\"Sales\"},\n                   \"showlegend\": False})\nfig.show()","6d4ecf8a":"train_aux=train[['date', 'num_sold', 'country','store']].groupby(['date','store','country']).mean().reset_index()\ntrain_aux['store-country']=train_aux['store']+\" in \"+train_aux['country']\ntrain_aux['year'] = pd.to_datetime(train_aux['date']).dt.year\ntrain_aux.head()\n","3cdf940e":"fig=plt.figure(figsize=(10,8))\nfor store,color in zip(train_aux['store-country'].unique(),['red','orange','brown','green','yellow','black']):\n    sns.lineplot(data = train_aux[train_aux['store-country'] == store],x='year',y='num_sold', linewidth = 1.5, label=str(store))\n    \nplt.tight_layout()","00327556":"sns.lmplot(x='year',y='num_sold',data=train_aux,row='country',col='store')","1932c9da":"# extract date features\ntrain['year'] = pd.to_datetime(train['date']).dt.year\ntrain['month_name'] = pd.to_datetime(train['date']).dt.month_name()\ntrain['month'] = pd.to_datetime(train['date']).dt.month\ntrain['day'] = pd.to_datetime(train['date']).dt.day\ntrain['day_of_week_name'] = pd.to_datetime(train['date']).dt.day_name()\ntrain['day_of_week'] = pd.to_datetime(train['date']).dt.day_of_week\n","d534d45d":"by_feature_num_sold_df=train.groupby(['year','store']).median()['num_sold'].reset_index()\npx.bar(by_feature_num_sold_df,x='year', y='num_sold',color='store')","0d2601c4":"by_feature_num_sold_df=train.groupby(['month','month_name','store']).median()['num_sold'].reset_index()\nby_feature_num_sold_df = by_feature_num_sold_df.sort_values('month', ascending=True)\npx.bar(by_feature_num_sold_df,x='month_name', y='num_sold',color='store')","7364d2cf":"by_feature_num_sold_df=train.groupby(['day_of_week','day_of_week_name','store']).median()['num_sold'].reset_index()\nby_feature_num_sold_df = by_feature_num_sold_df.sort_values('day_of_week', ascending=True)\npx.bar(by_feature_num_sold_df,x='day_of_week_name', y='num_sold',color='store')","2720826e":"by_feature_num_sold_df=train.groupby(['day','store']).median()['num_sold'].reset_index()\nby_feature_num_sold_df = by_feature_num_sold_df.sort_values('day', ascending=True)\npx.bar(by_feature_num_sold_df,x='day', y='num_sold',color='store')","88089381":"by_feature_num_sold_df=train.groupby(['store','product']).median()[['num_sold']].reset_index()\npx.bar(by_feature_num_sold_df,x='product', y='num_sold',color='store')","f3cd9182":"by_feature_num_sold_df=train.groupby(['year','store','product']).median()[['num_sold']].reset_index()\nsns.lmplot(x='year',y='num_sold',data=by_feature_num_sold_df,row='product',col='store')","a4b5f0cb":"There could be some outliers in num_sold field.","521074b5":"In all the countries KaggleRama has contributed more in sales than Kagglemart. Further rate of increase in sales for KaggleRama is higher than KaggleMart.","6fa13d4a":"#### KPI Variables","8eff2e51":"#### Store vs Avg. Sales","4d22534a":"#### TIME SERIES CHART : AVG SALES ON EACH DAY","d26f6241":"Increasing Trend in Sales across Years.\n\nThere is a dip in sales post May which improves at Year end. This is steady trend across years.","b7816948":"KaggleRama is contributing much more than KaggleMart in sales of all the products across years.","d474de74":"Across the Years KaggleRama is producing more sales than Kaggle Rama. \n\n#### Country vs Avg. Sales","d2f3897f":"Sale is continuously increasing from 2015 to 2018, for KaggleRama increment rate is more than KaggleMart.\n\nPeak of the Sale is in January & December, after January sale dips gradually to touch the minimum in Jule, from August Sale increases again to reach to peak value in December.\n\nSale starts to increase from Thursday in a week and in Weekend Sale is highest. In all the cases KaggleRama sale is higher than KaggleMart.\n\nSale does not change much in a month, it is more or less same with some minor hikes.\n\n#### Analysis of Sales in Stores w.r.t types of Products"}}