{"cell_type":{"743ae12b":"code","b62a2195":"code","c6e7451a":"code","8b373442":"code","f2417e45":"code","3466d20b":"code","46bf5a3b":"code","5a24c421":"code","9bbe414f":"code","b251c057":"code","a5ab4aaf":"code","58dfe4a3":"code","b1debf96":"code","b2b2e5db":"code","aa4d7c87":"code","bf685053":"code","a3c35330":"code","9d879c92":"code","9557c54f":"code","cd503d16":"code","f0f430ed":"markdown","221f8900":"markdown","a0d344c0":"markdown","37d9fb7e":"markdown","e7b72fdf":"markdown","386330c7":"markdown","41851527":"markdown","84f6c7a3":"markdown","ecba1826":"markdown","3fbbd413":"markdown","1193083f":"markdown","b7a6feea":"markdown","3f7f3dba":"markdown","0a5e2f73":"markdown","4778fdef":"markdown","70b5f06f":"markdown","2da1a8a5":"markdown","7eca0917":"markdown"},"source":{"743ae12b":"from sklearn.datasets import load_breast_cancer\nfrom sklearn.model_selection import train_test_split\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns \nimport matplotlib.pyplot as plt\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.decomposition import PCA\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn.metrics import accuracy_score","b62a2195":"data = pd.read_csv('\/kaggle\/input\/breast-cancer-wisconsin-data\/data.csv')\ndata.head()","c6e7451a":"data.info()","8b373442":"data.describe()","f2417e45":"data['target'] = data['diagnosis'].apply(lambda value : 1 if value == 'B' else 0 )\ndata['target'] ","3466d20b":"data.drop(['id','diagnosis','Unnamed: 32'],inplace=True, axis=1)\ndata.head()","46bf5a3b":"col = data.columns       # .columns gives columns names in data \nprint(col)","5a24c421":"ax = sns.countplot(data.target,label=\"Count\")\nB, M = data.target.value_counts()\nprint('Number of Benign: ',B)\nprint('Number of Malignant : ',M)","9bbe414f":"print(data.columns)","b251c057":"featureMeans = list(data.columns[:10])\nfeatureMeans","a5ab4aaf":"correlationData = data[featureMeans].corr()\nsns.pairplot(data[featureMeans].corr(), diag_kind='kde', size=2);","58dfe4a3":"plt.figure(figsize=(10,10))\nsns.heatmap(data[featureMeans].corr(), annot=True, square=True, cmap='coolwarm')\nplt.show()","b1debf96":"bins = 12\nplt.figure(figsize=(15,15))\nfor idx,atr in enumerate(featureMeans):\n    plt.subplot(5, 2, idx+1)\n    sns.distplot(data[data['target']==1][atr], bins=bins, color='green', label='M')\n    sns.distplot(data[data['target']==0][atr], bins=bins, color='red', label='B')\n    plt.legend(loc='upper right')\nplt.tight_layout()\nplt.show()","b2b2e5db":"from sklearn.decomposition import PCA\n\nimport matplotlib.pyplot as plt\n\npca = PCA(n_components=2)\nX_r = pca.fit_transform(data.loc[:,featureMeans])\n\ncolors = ['navy', 'turquoise']\nfor color, i, target_name in zip(colors, [0, 1], data.loc[:, 'target']):\n    plt.scatter(X_r[data.loc[:, 'target'] == i, 0], X_r[data.loc[:, 'target'] == i, 1], color=color, alpha=.8, label=target_name)\nplt.legend(loc='best', shadow=False, scatterpoints=1)\nplt.title('PCA')\nplt.plot()","aa4d7c87":"X = data.loc[:,featureMeans]\ny = data.loc[:, 'target']","bf685053":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.95, random_state = 42)","a3c35330":"pipeline = Pipeline([('scaler', StandardScaler()), ('clf', KNeighborsClassifier(n_neighbors = 5))])\nscores = cross_val_score(pipeline, X, y, cv=5) \n\nprint('Acur\u00e1cia - %.2f +- %.2f' % (scores.mean() * 100, scores.std() * 100))","9d879c92":"data_gs, data_cv, target_gs, target_cv = train_test_split(X, y, test_size=0.95, random_state=42)","9557c54f":"pipeline = Pipeline([('scaler', StandardScaler()), ('clf', KNeighborsClassifier())])\nparameters = {'clf__n_neighbors': [3,4,5,6,7], 'clf__p': [1, 2, 5]}\nclf = GridSearchCV(pipeline, \n                    parameters,\n                    scoring='accuracy',\n                    cv=5)\nclf.fit(data_gs, target_gs)\nscores = cross_val_score(clf.best_estimator_, data_cv, target_cv, cv=5)\n\nprint(clf.best_params_)\nprint('Accuracy - %.2f +- %.2f' % (scores.mean() * 100, scores.std() * 100))","cd503d16":"clf = clf.best_estimator_\nkf = StratifiedKFold(n_splits = 5)\nacc = []\nfor train_index, test_index in kf.split(data_cv, target_cv):\n    X_train,X_test = data_cv.iloc[train_index],data_cv.iloc[test_index]\n    y_train,y_test = target_cv.iloc[train_index],target_cv.iloc[test_index]\n    \n    scaler = StandardScaler()\n    X_train = scaler.fit_transform(X_train)\n    X_test = scaler.transform(X_test)\n    \n    clf.fit(X_train,y_train)\n    y_pred = clf.predict(X_test)\n    acc.append(accuracy_score(y_pred,y_test))\n\nacc = np.array(acc)\nprint('Accuracy - %.2f +- %.2f' % (acc.mean() * 100, acc.std() * 100))","f0f430ed":"## Clean Dataset","221f8900":"## Read dataset","a0d344c0":"* mean\n* standard error \n* worst (mean of the three largest values) \n\nOf these features were computed for each image, resulting in 30 features. \n\nAll feature values are recoded with four significant digits.\n\nMissing attribute values: none","37d9fb7e":"# Breast Cancer Dataset","e7b72fdf":"### Cross validation\n\n5 cicle with 20% of test data","386330c7":"This database is also available through the UW CS ftp server:\nftp ftp.cs.wisc.edu\ncd math-prog\/cpo-dataset\/machine-learn\/WDBC\/\n\nAlso can be found on UCI Machine Learning Repository: https:\/\/archive.ics.uci.edu\/ml\/datasets\/Breast+Cancer+Wisconsin+%28Diagnostic%29","41851527":"### K Fold","84f6c7a3":"### Grid Search","ecba1826":"## Data Preprocessing","3fbbd413":"## Models","1193083f":"## Data Analysis","b7a6feea":"**Cross validation**: 94.20 +- 1.20\n\n\n\n**Grid Search**: {'clf__n_neighbors': 3, 'clf__p': 1} 92.42 +- 1.90\n\n\n\n**KFold**: 92.42 +- 1.90\n","3f7f3dba":"## Data Visualization","0a5e2f73":"## Conclusion","4778fdef":"* K values between 3 and 7 \n* p  values of 1 (Manhattan), 2 (Euclidean), and 5 (Minkowski).","70b5f06f":"## imports","2da1a8a5":"### Our dataset already contains the mean values of all the columns","7eca0917":"Future work: Use PCA method, carefully supervised by receiver operating characteristic (ROC) curve analysis"}}