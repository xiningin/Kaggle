{"cell_type":{"97dda40b":"code","47d91b47":"code","bb2672df":"code","dc848f74":"code","338f27d3":"code","dd392106":"code","bd63f2e5":"code","129d6ae1":"code","8a7949a4":"code","7ec0ee61":"code","e4ab54ed":"code","0ac90003":"code","876ab772":"code","0c399865":"code","6f4607de":"code","2071e9d4":"code","416fd780":"code","059bd7d6":"code","121fc1a4":"code","40e93e55":"code","13b546ee":"code","9477a42a":"code","26ce5297":"code","b5410a13":"code","071aef67":"code","a4888ca1":"code","b9b21c12":"code","7eaeac95":"code","ee0389da":"code","8834446b":"code","478e7ee0":"code","41d7fa96":"code","1d0e6d2c":"code","f2f07edf":"code","a27a049c":"code","7b05b062":"code","af19fdff":"code","407a49dd":"code","db1e33ec":"code","b8bdbac3":"code","51312b09":"code","c055ad3e":"markdown","19a700f1":"markdown","8b2068ea":"markdown","1387ab6e":"markdown","aec5bbdd":"markdown","95d68045":"markdown","9df50de1":"markdown","96e1110e":"markdown","13f093a2":"markdown","0044c7d1":"markdown","3acf5251":"markdown","7e225c22":"markdown","28d76078":"markdown","80a50c95":"markdown","b2a28226":"markdown","304eb2f3":"markdown","a75e340b":"markdown"},"source":{"97dda40b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","47d91b47":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style(\"darkgrid\")\n","bb2672df":"%%HTML\n<style type=\"text\/css\">\ntable.dataframe td, table.dataframe th {\n    border: 1px  black solid !important;\n  color: black !important;\n}\n<\/style>","dc848f74":"order_detailsDF = pd.read_csv('\/kaggle\/input\/ecommerce-data\/Order Details.csv')\norderListDF = pd.read_csv('\/kaggle\/input\/ecommerce-data\/List of Orders.csv')\nsalesTargetDF = pd.read_csv('\/kaggle\/input\/ecommerce-data\/Sales target.csv')","338f27d3":"order_detailsDF.head()","dd392106":"orderListDF.head()","bd63f2e5":"salesTargetDF.head()","129d6ae1":"print(order_detailsDF.shape)\nprint(orderListDF.shape)\nprint(salesTargetDF.shape)","8a7949a4":"order_detailsDF.info()\norderListDF.info()\nsalesTargetDF.info()","7ec0ee61":"print(order_detailsDF.isnull().sum())\nprint(orderListDF.isnull().sum())\nprint(salesTargetDF.isnull().sum())","e4ab54ed":"order_detailsDF.head(5)","0ac90003":"order_detailsDF.describe(include=[\"object\", \"bool\"])","876ab772":"# Sorting by the top 10 highest amount spent on an item","0c399865":"order_detailsDF.sort_values(by='Amount', ascending=False).head(10)","6f4607de":"# Sorting by the top 10 highly profitted orders\norder_detailsDF.sort_values(by='Profit', ascending=False).head(10)","2071e9d4":"#List of unique values in Category\norder_detailsDF['Category'].nunique()","416fd780":"#List of unique values in Sub - Category\norder_detailsDF['Sub-Category'].nunique()","059bd7d6":"print(\"Furniture: \",order_detailsDF[order_detailsDF[\"Category\"] == 'Furniture']['Amount'].mean())\nprint(\"Electronics: \",order_detailsDF[order_detailsDF[\"Category\"] == 'Electronics']['Amount'].mean())\nprint(\"Clothing: \",order_detailsDF[order_detailsDF[\"Category\"] == 'Clothing']['Amount'].mean())","121fc1a4":"grouper = order_detailsDF.groupby(['Category'])\ngrouper['Amount'].sum().reset_index()","40e93e55":"grouper2 = order_detailsDF.groupby(['Sub-Category'])\ngrouper2['Amount'].sum().reset_index()","13b546ee":"#Counting the unique number of Order ID's\ncount = order_detailsDF['Order ID'].value_counts().count()\ncount\n# 500 Unique orders are present in total.","9477a42a":"# Unique Sub categories: \ncount_sub = order_detailsDF['Sub-Category'].value_counts().count()\ncount_sub\n# 17 unique Sub categories are present in total","26ce5297":"# Countplot w.r.t 'Categories'\nax = sns.countplot(y='Category',data=order_detailsDF, palette='Set1')\n# for p in ax.patches:\n#         ax.annotate('%{:.1f}'.format(p.get_height()), (p.get_x()+0.1, p.get_height()+50))","b5410a13":"orderListDF.head(3)","071aef67":"new_df = pd.merge(order_detailsDF, orderListDF, on='Order ID', how='left')","a4888ca1":"new_df.head()","b9b21c12":"grouper3 = new_df.groupby(['CustomerName','State'])['Amount'].sum().reset_index()\ngrouper3","7eaeac95":"# Sorting by the top 10 \naa = grouper3.sort_values(by='Amount', ascending=False).head(10)\naa","ee0389da":"import plotly.express as px\nfig = px.bar(aa, x='CustomerName', y='Amount', color='CustomerName', barmode='relative', hover_data=['State'])\nfig.show()","8834446b":"px.histogram(new_df,x='State',color='Category', text_auto=True)","478e7ee0":"\ncategory_grouper = new_df.groupby(['State'])['Category'].count().reset_index()\ncategory_grouper","41d7fa96":"# Top 10 states with most number of purchased items\/ orders\ntop_10_states = category_grouper.sort_values(by='Category', ascending=False).head(10)","1d0e6d2c":"fig2 = px.bar(top_10_states, x='State', y='Category', color='State', barmode='relative', hover_data=['State'])\nfig2.show()","f2f07edf":"#Creating a new column called Region \nNorth = [\"Jammu And Kashmir\", \"Punjab\",\"Himachal Pradesh\", \"Delhi\",\"Uttarakhand\",\"Haryana\",\"Uttar Pradesh\",\"Chandigarh\"]\nSouth = [\"Kerala\",\"Tamil Nadu\", \"Andhra Pradesh\",\"Karnataka\"]\nWest = [\"Maharashtra\", \"Gujarat\",\"Goa\",\"Rajasthan\"]\nEast = [\"Nagaland\",\"Sikkim\",\"West Bengal\",\"Bihar\"]\nCentral = [\"Madhya Pradesh\"]","a27a049c":"orderListDF.State.unique()","7b05b062":"# Function for region\nx=\"\"\ndef region(x):\n    if x in East:\n        return \"East\"\n    if x in South:\n        return \"South\"\n    if x in West:\n        return \"West\"\n    if x in North:\n        return \"North\"\n    if x in Central:\n        return \"Central\"\nnew_df['Region'] = new_df['State'].apply(region)","af19fdff":"new_df.tail()","407a49dd":"import plotly.express as px\npx.pie(new_df, values='Amount', names='Region',color_discrete_sequence=px.colors.sequential.RdBu)\n","db1e33ec":"new_df.rename(columns = {'Sub-Category':'SubCategory'}, inplace = True)","b8bdbac3":"from wordcloud import WordCloud, STOPWORDS\nimport pandas as pd\nimport matplotlib.pyplot as plt","51312b09":"comment_words = '' \ntext = \" \".join(scat for scat in new_df.SubCategory)\n# lower max_font_size, change the maximum number of word and lighten the background:\nwordcloud = WordCloud(max_font_size=50, max_words=100,background_color=\"white\").generate(text)\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","c055ad3e":"# Pie chart to plot which Region has the most number of Orders","19a700f1":"# List of orders.csv","8b2068ea":"# Total amount spent by each customer.","1387ab6e":"# Customers who have spent the most amount","aec5bbdd":"# Plot on customers who have spent the most amount","95d68045":"Can't really perform much with this dataset, so we take a look at the rest of the datasets and try to join them and do more analysis\n","9df50de1":"# Countplot wrt Category","96e1110e":"West has the most number of orders, followed by Central and North India. South has the least.","13f093a2":"Order ID seems to be a common column and is present in both order_details and list of orders csv. So we perform a left join and start doing more analysis\n","0044c7d1":"# Grouping by States with respect to Total number of orders","3acf5251":"# Adding a new column called Region and differentiating the states accordingly","7e225c22":"# Order details.csv","28d76078":"# Average amount spent on each Categories","80a50c95":"# Creating a word cloud for the Sub category","b2a28226":"# Countplot on number of items sold with respect to each state and category","304eb2f3":"# Grouping by category to find the total amount spent on each category and sub-Category.\n","a75e340b":"# Top 10 states with most number of purchased items\/ orders"}}