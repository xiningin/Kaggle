{"cell_type":{"ca153ef4":"code","7a37e570":"code","f075d5bd":"code","3e2bb642":"code","fe054b72":"code","00fe2ca3":"code","8200bdbc":"code","0e5eec1c":"code","c6591894":"code","3eaf7188":"code","c31ea9d0":"code","e937a0c3":"code","429f974f":"code","92001208":"code","f50da3dd":"code","8341c82b":"code","1eb047c5":"code","acd09498":"code","080a6670":"code","840737a4":"code","38cf53f0":"code","355e90bb":"code","ed3dde41":"code","a7cf23de":"code","1320c8c8":"code","cb957105":"code","31343729":"markdown","9f949632":"markdown","b423f221":"markdown","d78c309f":"markdown","5b2e3588":"markdown","ce11e6df":"markdown","80c9581b":"markdown","5281aaf2":"markdown","e081c9d1":"markdown","2bcfa263":"markdown","45a66270":"markdown","03b9021b":"markdown","e6fa7441":"markdown","ad418a72":"markdown","cce27ecf":"markdown","62867e40":"markdown","be16a56b":"markdown","0f5a34f0":"markdown","a5b13498":"markdown","c327bc54":"markdown","f26b5f9a":"markdown","1d78b170":"markdown","5fa6734d":"markdown"},"source":{"ca153ef4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7a37e570":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pycountry\nimport plotly.express as px\nimport plotly.graph_objs as go","f075d5bd":"df = pd.read_csv('\/kaggle\/input\/forbes-billionaires-of-2021\/Billionaire.csv', index_col='Rank')","3e2bb642":"df.head()","fe054b72":"df.shape","00fe2ca3":"df.info()","8200bdbc":"df.describe()","0e5eec1c":"df['Industry'].value_counts()","c6591894":"df.isna().sum()","3eaf7188":"df['NetWorth'] = df['NetWorth'].str.replace('$', '', regex=True)\ndf['NetWorth'] = df['NetWorth'].str.replace('B', '', regex=True)","c31ea9d0":"df['NetWorth'] = df['NetWorth'].astype(float)","e937a0c3":"df.head()","429f974f":"df.describe()","92001208":"df_tech = df.loc[df['Industry'] == 'Technology'].copy()\ndf_tech","f50da3dd":"df_money = df.loc[df['Industry'] == 'Finance & Investments'].copy()\ndf_money","8341c82b":"df_man = df.loc[df['Industry'] == 'Manufacturing'].copy()\ndf_man","1eb047c5":"plt.figure(figsize=(10, 6))\nplt.barh(df['Name'].head(10), df['NetWorth'].head(10), color='limegreen')\nplt.title('The top 10 billionaires in the world as of 2021', weight='bold')\nplt.xlabel('NetWorth (in billions)')\nplt.ylabel('Billionaires')\nplt.show()","acd09498":"df['Country'].value_counts()[:5].plot(kind='barh', cmap='Pastel1', figsize=(9,6))\nplt.title('The top 5 countries with the most billionaires', weight='bold')\nplt.xlabel('Number of Billionaires')\nplt.ylabel('Countries')\nplt.show()","080a6670":"df['Industry'].value_counts()[:5].plot(kind='barh', cmap='Pastel2', figsize=(9,6))\nplt.title('The top 5 industries that produce billionaires', weight='bold')\nplt.xlabel('Number of Billionaires')\nplt.ylabel('Industries')\nplt.show()","840737a4":"df_map = df.drop_duplicates().groupby('Country').count().copy()\n\ndf_map = df_map['Name'].copy()\n\ndf_map = df_map.sort_values(ascending=False)\n\ndf_map = pd.DataFrame(df_map)\n\ndf_map.rename(columns = {'Name':'Billionaires'}, inplace = True)","38cf53f0":"df_map.head()","355e90bb":"for Country in df_map.index:\n    code = [value.alpha_3 for value in pycountry.countries if (value.name==Country)] #retrieves iso-alpha codes\n    if len(code)==0: #if iso alpha code doesn't match country\n        df_map.loc[Country,\"Sign\"]= None\n        df_map.loc[Country,\"Country Name\"]= Country\n    else: #if iso alpha code does match country\n        df_map.loc[Country,\"Sign\"]= code[0]\n        df_map.loc[Country,\"Country Name\"]= Country","ed3dde41":"df_map[df_map.isna().any(axis=1)]","a7cf23de":"filler = pd.DataFrame(index=df_map.index[df_map.isnull().any(axis=1)], data=['RUS', 'TAI', 'SOU', 'VIE', 'VEN', 'TAN', 'SKT', 'ESW \/ SWA'], columns=['Sign'])\ndf_map.fillna(filler, inplace=True)","1320c8c8":"def continent_graph(continent=\"world\",title=\"\"):\n    fig = px.choropleth(df_map, locations='Sign',\n                       color='Billionaires',\n                        hover_name='Country Name', \n                        color_continuous_scale=\"agsunset\",\n                        color_continuous_midpoint= 300,\n                       scope = str(continent))\n    layout = go.Layout(\n        title=go.layout.Title(\n            text= f\"<b>{title}<\/b>\",\n            x=0.5\n        ),\n        showlegend=False,\n        font=dict(size=13),\n       width = 750,\n        height = 350,\n        margin=dict(l=0,r=0,b=0,t=30)\n   )\n    fig.update_layout(layout)\n    fig.show()","cb957105":"continent_graph(continent='world', title='Worldwide Billionaires')","31343729":"**Data Wrangling**","9f949632":"Import necessary modules","b423f221":"What industries produce the most billionaires?","d78c309f":"2755 Billionaires ","5b2e3588":"NaN values in df_map","ce11e6df":"*Manufacturing billionaires*","80c9581b":"## **Exploratory Data Analysis \/ Data Preprocesesing**","5281aaf2":"Who are the top 5 billionaires in 2021?","e081c9d1":"*Finance and Investments Billionaires*","2bcfa263":"# **Exploratory Data Analysis \/ Data Preprocessing**\n> ## **Data Visualization**\n***","45a66270":"I'm not going to drop the rows that contain NaN because I'd rather have more data on billionaries (missing some ages) than less ","03b9021b":"Create df_map - dataframe needed to visualize the world's billionaires","e6fa7441":"Manually impute iso-alpha missing values with first 3 letters of country name","ad418a72":"**Data Familiarization**","cce27ecf":"The top industries that produce billionaires ","62867e40":"### **Data Visualization**","be16a56b":"**DataFrame Creation\/Aggregation**","0f5a34f0":"*Technology billionaires*","a5b13498":"From the code below, we now know that the average billionaire is worth ~ $4.75 B ","c327bc54":"Add the iso-alpha 3 digit country codes column and the full Country Name column","f26b5f9a":"What are the countries with the most billionaires?","1d78b170":"**Note:** I took inspiration from the following notebook: https:\/\/www.kaggle.com\/tahmidurrahmantabin\/forbes-billionaires-2021","5fa6734d":"Thanks for reading my notebook. Feel free to upvote this notebook and leave comments!"}}