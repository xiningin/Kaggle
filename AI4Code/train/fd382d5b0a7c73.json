{"cell_type":{"137287fd":"code","f3315e75":"code","2de35f7a":"code","4b0e6016":"code","03a0ac8c":"code","39669f27":"code","acfdafea":"code","0a9b12f8":"code","97f75f1c":"code","f6ece2b3":"code","00b3c300":"code","e967c329":"code","10ba95f1":"code","deef856d":"code","de569fee":"code","24e2ae5e":"code","71445aa8":"code","bb3ca72d":"markdown","d8de05f8":"markdown","bfc725bc":"markdown","a452037a":"markdown","e6578b43":"markdown","d09dea13":"markdown","0885abeb":"markdown","c1b3a9f1":"markdown","b068dea4":"markdown","afe65a88":"markdown","c7195890":"markdown","9b79ee7d":"markdown","eb82ef08":"markdown"},"source":{"137287fd":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","f3315e75":"suppliers = pd.read_csv(\"\/kaggle\/input\/prozorro-public-procurement-dataset\/Suppliers.csv\")\nprocure_df = pd.read_csv(\"\/kaggle\/input\/prozorro-public-procurement-dataset\/Competitive_procurements.csv\")","2de35f7a":"## getting to know shape and columns of data\nprint(\"-----------------------------------------------\")\nprint(\"column names in both data frames\")\nprint(\"-----------------------------------------------\")\nprint(procure_df.columns,suppliers.columns)\nprint(\"-----------------------------------------------\")\n\n## checking level of data for suppliers df as mentioned in description that it is at lot_id and date level\nprint(f\"\"\"\nCompetitive_procurements_shape : {procure_df.shape}\nsupplier_shape : {suppliers.shape}\nsupplier lot_id shape : {suppliers[['lot_announce_date','lot_id']].drop_duplicates().shape}\n    \"\"\")","4b0e6016":"## checking for missing values\nplt.figure(figsize=(15,4))\nplt.subplots_adjust(wspace=0.5)\nplt.subplot(1,2,1)\n(procure_df.isnull().sum()*100\/procure_df.shape[0]).plot(kind='barh')\nplt.title(\"Competitive_procurements\")\nplt.xlabel(\"%Misssing\")\nplt.grid()\n\nplt.subplot(1,2,2)\n(suppliers.isnull().sum()*100\/suppliers.shape[0]).plot(kind='barh')\nplt.title(\"Suppliers\")\nplt.xlabel(\"%Misssing\")\nplt.grid()","03a0ac8c":"## are all competative procruments presents in suppliers df ?\nsupplier_compet = suppliers[suppliers['lot_competitiveness']==1].lot_id.unique()\ncompetative = procure_df.lot_id.unique()\nprint(f\"\"\"\nsupplier lot_ids : {len(set(supplier_compet))}\ncompetitive lot_ids : {len(set(competative))}\ncommon lot_ids : {len(set(supplier_compet) & set(competative))}\n\"\"\")","39669f27":"## how #procurements follow across years ? \n## what is the proportion in two categories of competitive and no-competitive ?\n\nplt.figure(figsize=(15,4))\nplt.subplot(1,2,1)\nsuppliers.groupby(['lot_announce_year']).lot_id.nunique().plot(kind='bar')\nplt.ylabel(\"#lot_id unique\")\nplt.subplot(1,2,2)\nplot_df = pd.DataFrame(suppliers.groupby(['lot_announce_year','lot_competitiveness']).lot_id.nunique()).reset_index()\nsns.barplot(x='lot_announce_year',y='lot_id',hue='lot_competitiveness',data=plot_df)\n\nprint(\"\"\"\n1. Total #procurements are increasing but \n2. #competitive procurements are not showing significant change in terms of quantity\n\"\"\")","acfdafea":"## is there any relation of #procurements in accordance with month\n\nsuppliers['lot_announce_date'] = pd.to_datetime(suppliers['lot_announce_date'] )\nsuppliers['lot_announce_month'] = suppliers['lot_announce_date'].dt.month\n\nplt.figure(figsize=(15,4))\nplt.subplots_adjust(hspace=0.5)\nplt.subplot(2,2,1)\nsuppliers.groupby(['lot_announce_month']).lot_id.nunique().plot(kind='bar')\nplt.ylabel(\"#lot_id unique\")\nplt.subplot(2,2,2)\nplot_df = pd.DataFrame(suppliers.groupby(['lot_announce_month','lot_competitiveness']).lot_id.nunique()).reset_index()\nsns.barplot(x='lot_announce_month',y='lot_id',hue='lot_competitiveness',data=plot_df)\nplt.subplot(2,2,3)\nplot_df = pd.DataFrame(suppliers.groupby(['lot_announce_month','lot_announce_year']).lot_id.nunique()).reset_index()\nsns.lineplot(x='lot_announce_month',y='lot_id',hue='lot_announce_year',data=plot_df)\nplt.grid()","0a9b12f8":"## distribution of lot_procur_type \n\nplt.figure(figsize=(15,4))\nplt.subplot(1,2,1)\nsuppliers.groupby(['lot_procur_type']).lot_id.nunique().plot(kind='barh')\nplt.ylabel(\"#lot_id unique\")\nplt.subplot(1,2,2)\nplot_df = pd.DataFrame(suppliers.groupby(['lot_announce_year','lot_procur_type']).lot_id.nunique()).reset_index()\nsns.barplot(x='lot_announce_year',y='lot_id',hue='lot_procur_type',data=plot_df)\n","97f75f1c":"def lot_cpv_decompose(col):\n    unique_lot_cpv = {val: idx for idx,val in enumerate(suppliers[col].unique())}\n    lot_cpv_df = pd.DataFrame(unique_lot_cpv,index=[0]).T.reset_index()\n    lot_cpv_df.columns=[col,f'{col}_id']\n    lot_cpv_df[f'{col}_0'] = lot_cpv_df[col].apply(lambda x: x.split(\"_\")[0])\n    lot_cpv_df[f'{col}_1'] = lot_cpv_df[col].apply(lambda x: x.split(\"_\")[1])\n    lot_cpv_df[f'{col}_00'] = lot_cpv_df[col].apply(lambda x: x.split(\"_\")[0].split(\"-\")[0])\n    lot_cpv_df[f'{col}_01'] = lot_cpv_df[col].apply(lambda x: 99 if len(x.split(\"_\")[0].split(\"-\"))<2 \n                                                                else x.split(\"_\")[0].split(\"-\")[1])\n    return lot_cpv_df,unique_lot_cpv","f6ece2b3":"lot_cpv_df,lot_cpv_dict = lot_cpv_decompose(\"lot_cpv\")\nlot_cpv_4_df,lot_cpv_4_dict = lot_cpv_decompose(\"lot_cpv_4_digs\")\nlot_cpv_2_df,lot_cpv_2_dict = lot_cpv_decompose(\"lot_cpv_2_digs\")\n\nsuppliers['lot_cpv_id'] = suppliers.lot_cpv.apply(lambda x : lot_cpv_dict[x])\nsuppliers['lot_cpv_4_digs_id'] = suppliers.lot_cpv_4_digs.apply(lambda x : lot_cpv_4_dict[x])\nsuppliers['lot_cpv_2_digs_id'] = suppliers.lot_cpv_2_digs.apply(lambda x : lot_cpv_2_dict[x])","00b3c300":"plot_df = pd.DataFrame(suppliers.groupby(['lot_cpv_id']).lot_id.nunique()).reset_index()\nplot_df.columns = ['lot_cpv_id','#lot_id']\nplot_df = pd.merge(plot_df,lot_cpv_df,on=['lot_cpv_id'])\nplot_df['lot_cpv_id'] = plot_df['lot_cpv_id'].astype(str)\n\nplt.barh(\"lot_cpv_1\",\"#lot_id\",data=plot_df.sort_values(by=['#lot_id'],ascending=False).head(20))\nplt.xticks(rotation=90)\nplt.title(\"lot_cpv_1\")","e967c329":"plot_df = pd.DataFrame(suppliers.groupby(['lot_cpv_4_digs_id']).lot_id.nunique()).reset_index()\nplot_df.columns = ['lot_cpv_4_digs_id','#lot_id']\nplot_df = pd.merge(plot_df,lot_cpv_4_df,on=['lot_cpv_4_digs_id'])\nplot_df['lot_cpv_4_digs_id'] = plot_df['lot_cpv_4_digs_id'].astype(str)\n\nplt.barh(\"lot_cpv_4_digs_1\",\"#lot_id\",data=plot_df.sort_values(by=['#lot_id'],ascending=False).head(20))\nplt.xticks(rotation=90)\nplt.title(\"lot_cpv_4_1\")","10ba95f1":"plot_df = pd.DataFrame(suppliers.groupby(['lot_cpv_2_digs_id']).lot_id.nunique()).reset_index()\nplot_df.columns = ['lot_cpv_2_digs_id','#lot_id']\nplot_df = pd.merge(plot_df,lot_cpv_2_df,on=['lot_cpv_2_digs_id'])\nplot_df['lot_cpv_2_digs_id'] = plot_df['lot_cpv_2_digs_id'].astype(str)\n\nplt.barh(\"lot_cpv_2_digs_1\",\"#lot_id\",data=plot_df.sort_values(by=['#lot_id'],ascending=False).head(20))\nplt.xticks(rotation=90)\nplt.title(\"lot_cpv_2_1\")","deef856d":"from collections import Counter\nfrom nltk.corpus import stopwords\nstop_words = stopwords.words('english')\nstopwords_dict = Counter(stop_words)\n\nfor i in lot_cpv_df['lot_cpv_01'].unique():\n    plt.figure(figsize=(15,5))\n    plt.subplots_adjust(wspace=0.4)\n    word_ls = [i.split(\" \") for i in lot_cpv_df[lot_cpv_df['lot_cpv_01']==i]['lot_cpv_1'].to_list()]\n    word_ls = [j for i in word_ls for j in i ]\n    word_ls = [word for word in word_ls if word not in stopwords_dict]\n    counts = Counter(word_ls)\n    most_ = counts.most_common(10)\n    plt.subplot(1,3,1)\n    plt.barh([i[0] for i in most_],[i[1] for i in most_])\n    plt.title(f\"lot_cpv_df {i}\")\n\n    word_ls = [i.split(\" \") for i in lot_cpv_2_df[lot_cpv_2_df['lot_cpv_2_digs_01']==i]['lot_cpv_2_digs_1'].to_list()]\n    word_ls = [j for i in word_ls for j in i ]\n    word_ls = [word for word in word_ls if word not in stopwords_dict]\n    counts = Counter(word_ls)\n    most_ = counts.most_common(10)\n    plt.subplot(1,3,2)\n    plt.barh([i[0] for i in most_],[i[1] for i in most_])\n    plt.title(f\"lot_cpv_2_df {i}\")\n\n\n    word_ls = [i.split(\" \") for i in lot_cpv_4_df[lot_cpv_4_df['lot_cpv_4_digs_01']==i]['lot_cpv_4_digs_1'].to_list()]\n    word_ls = [j for i in word_ls for j in i ]\n    word_ls = [word for word in word_ls if word not in stopwords_dict]\n    counts = Counter(word_ls)\n    most_ = counts.most_common(10)\n    plt.subplot(1,3,3)\n    plt.barh([i[0] for i in most_],[i[1] for i in most_])\n    plt.title(f\"lot_cpv_4_df {i}\")","de569fee":"plot_df = pd.DataFrame(suppliers.groupby(['organizer_code']).lot_id.nunique()).reset_index()\nplot_df.columns = ['organizer_code','#lot_id']\nplot_df.sort_values(by=['#lot_id'],ascending=False,inplace=True)\nplot_df['organizer_code'] = plot_df['organizer_code'].astype(str)\nplt.figure(figsize=(10,5))\nplt.subplots_adjust(wspace=0.5)\nplt.subplot(1,2,1)\nplt.barh(\"organizer_code\",\"#lot_id\",data = plot_df.head(10))\nplt.title(\"organizer_code\")\n\nplot_df = pd.DataFrame(suppliers.groupby(['supplier_code']).lot_id.nunique()).reset_index()\nplot_df.columns = ['supplier_code','#lot_id']\nplot_df.sort_values(by=['#lot_id'],ascending=False,inplace=True)\nplot_df['supplier_code'] = plot_df['supplier_code'].astype(str)\nplt.subplot(1,2,2)\nplt.barh(\"supplier_code\",\"#lot_id\",data = plot_df.head(10))\nplt.title(\"supplier_code\")","24e2ae5e":"plot_df = pd.DataFrame(suppliers.groupby(['organizer_code','lot_procur_type']).lot_id.nunique()).reset_index()\nplot_df.columns = ['organizer_code','lot_procur_type','#lot_id']\nplot_df.sort_values(by=['lot_procur_type','#lot_id'],ascending=False,inplace=True)\nplot_df['organizer_code'] = plot_df['organizer_code'].astype(str)\n\nplt.figure(figsize=(10,10))\nplt.subplots_adjust(wspace=0.5,hspace=0.5)\ncnt = 1\nfor typ in plot_df.lot_procur_type.unique():\n    plt.subplot(4,2,cnt)\n    cnt+=1\n    plt.barh(\"organizer_code\",\"#lot_id\",data = plot_df[plot_df.lot_procur_type==typ].head(10))\n    plt.title(typ)\n","71445aa8":"plot_df = pd.DataFrame(suppliers.groupby(['supplier_code','lot_procur_type']).lot_id.nunique()).reset_index()\nplot_df.columns = ['supplier_code','lot_procur_type','#lot_id']\nplot_df.sort_values(by=['lot_procur_type','#lot_id'],ascending=False,inplace=True)\nplot_df['supplier_code'] = plot_df['supplier_code'].astype(str)\n\nplt.figure(figsize=(10,10))\nplt.subplots_adjust(wspace=0.5,hspace=0.5)\ncnt = 1\nfor typ in plot_df.lot_procur_type.unique():\n    plt.subplot(4,2,cnt)\n    cnt+=1\n    plt.barh(\"supplier_code\",\"#lot_id\",data = plot_df[plot_df.lot_procur_type==typ].head(10))\n    plt.title(typ)\n","bb3ca72d":"### what are various types of procurement are like type of goods?","d8de05f8":"I will be updating the notebook with more analysis.It is working notebook.\n","bfc725bc":"### let's dig into organisers and participants","a452037a":"1. looks like 34022 organizer is kind of monopoly in Above Threshold UA Defense\n2. In negotiations 2 organisers are dominating the market \n3. In Above Threshold EU 3 organizers are dominating\n4. Reporting also has two major organisers having maximum market share\n5. Remaining ones on right side plots are uniform market shares\n","e6578b43":"#### no luck with checking on most prominent words to pull out the meaning of supplies","d09dea13":"1. At the end of the year there is sharp increment in #procurements , may be govt. tries to meet the requirements by the end of the year.\n2. Again there is unsignificant change in competitive procurements","0885abeb":"1. Only one peculiar thing here supplier 39273420 is holding major market in Negotiation and Above Threshold UA category\n2. Apart from Above Threshold US Defense , there is high percentage of market share hold by 2-3 suppliers","c1b3a9f1":"1. Most of the procurements are for Overhaul & Refurbishment Work , Electricity and other building completion work - In short construction supplies\n2. Second highest is Office equipments and supplies\n3. Petroleum and Pharmaceutical supplies","b068dea4":"1. Here also priority is construction and then pharmaceutical supplies","afe65a88":"Organizer 3366078 and supplier 32490244 has made to the highest position because most of the contract in his\/her quota is Reporting ones which we will see below","c7195890":"##### Looking for wholistic number distribution for different supplies","9b79ee7d":"1. Reporting procurements are highest in number\n2. there is growth in #Above Threshold UA ","eb82ef08":"1. Most procurments are for construction work"}}