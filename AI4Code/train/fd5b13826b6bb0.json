{"cell_type":{"0a362e5c":"code","59a29395":"code","6e8c5aef":"code","d8839634":"code","99fb3dc4":"code","af1939e7":"code","02da7ca0":"markdown"},"source":{"0a362e5c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt # visualization library\n\nimport plotly.plotly as py # visualization library\nfrom plotly.offline import init_notebook_mode, iplot # plotly offline mode\ninit_notebook_mode(connected=True) \nimport plotly.graph_objs as go # plotly graphical object\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nimport os\nprint(os.listdir(\"..\/input\"))\nimport warnings            \nwarnings.filterwarnings(\"ignore\") # if there is a warning after some codes, this will avoid us to see them.\nplt.style.use('ggplot') # style of plots. ggplot is one of the most used style, I also like it.\n# Any results you write to the current directory are saved as output.","59a29395":"aerial = pd.read_csv('..\/input\/operations.csv')","6e8c5aef":"aerial.head()","d8839634":"aerial.columns","99fb3dc4":"# ATTACK\naerial[\"color\"] = \"rgb(0,0,0)\"\naerial.color[aerial.Country == \"USA\"] = \"rgb(0,116,217)\"\naerial.color[aerial.Country == \"GREAT BRITAIN\"] = \"rgb(255,65,54)\"\naerial.color[aerial.Country == \"NEW ZEALAND\"] = \"rgb(133,20,75)\"\naerial.color[aerial.Country == \"SOUTH AFRICA\"] = \"rgb(255,133,27)\"\n\ndata = [dict(\n    type='scattergeo',\n    lon = aerial['Takeoff Longitude'],\n    lat = aerial['Takeoff Latitude'],\n    hoverinfo = 'text',\n    text = \"Country: \" + aerial.Country + \" Takeoff Location: \"+aerial[\"Takeoff Location\"]+\" Takeoff Base: \" + aerial['Takeoff Base'],\n    mode = 'markers',\n    marker=dict(\n        sizemode = 'area',\n        sizeref = 1,\n        size= 10 ,\n        line = dict(width=1,color = \"white\"),\n        color = aerial[\"color\"],\n        opacity = 0.7),\n)]\nlayout = dict(\n    title = 'Countries Take Off Bases ',\n    hovermode='closest',\n    geo = dict(showframe=False, showland=True, showcoastlines=True, showcountries=True,\n               countrywidth=1, projection=dict(type='mercator'),\n              landcolor = 'rgb(217, 217, 217)',\n              subunitwidth=1,\n              showlakes = True,\n              lakecolor = 'rgb(255, 255, 255)',\n              countrycolor=\"rgb(5, 5, 5)\")\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)\nplt.savefig('map_plot.png')\nplt.show()","af1939e7":"# Bombing paths\nairports = [ dict(\n        type = 'scattergeo',\n        lon = aerial['Takeoff Longitude'],\n        lat = aerial['Takeoff Latitude'],\n        hoverinfo = 'text',\n        text = \"Country: \" + aerial.Country + \" Takeoff Location: \"+aerial[\"Takeoff Location\"]+\" Takeoff Base: \" + aerial['Takeoff Base'],\n        mode = 'markers',\n        marker = dict( \n            size=5, \n            color = aerial[\"color\"],\n            line = dict(\n                width=1,\n                color = \"white\"\n            )\n        ))]\ntargets = [ dict(\n        type = 'scattergeo',\n        lon = aerial['Target Longitude'],\n        lat = aerial['Target Latitude'],\n        hoverinfo = 'text',\n        text = \"Target Country: \"+aerial[\"Target Country\"]+\" Target City: \"+aerial[\"Target City\"],\n        mode = 'markers',\n        marker = dict( \n            size=1, \n            color = \"red\",\n            line = dict(\n                width=0.5,\n                color = \"red\"\n            )\n        ))]\n\nflight_paths = []\nfor i in range( len( aerial['Target Longitude'] ) ):\n    flight_paths.append(\n        dict(\n            type = 'scattergeo',\n            lon = [ aerial.iloc[i,9], aerial.iloc[i,16] ],\n            lat = [ aerial.iloc[i,8], aerial.iloc[i,15] ],\n            mode = 'lines',\n            line = dict(\n                width = 0.7,\n                color = 'black',\n            ),\n            opacity = 0.6,\n        )\n    )\n    \nlayout = dict(\n    title = 'Bombing Paths from Attacker Country to Target ',\n    hovermode='closest',\n    geo = dict(showframe=False, showland=True, showcoastlines=True, showcountries=True,\n               countrywidth=1, projection=dict(type='Mercator'),\n              landcolor = 'rgb(217, 217, 217)',\n              subunitwidth=1,\n              showlakes = True,\n              lakecolor = 'rgb(255, 255, 255)',\n              countrycolor=\"rgb(5, 5, 5)\")\n)\n\ndata = [flight_paths, airports, targets]    \nfig = dict( data=data, layout=layout )\niplot(fig)","02da7ca0":"**MAP**\n\nthis using also paths"}}