{"cell_type":{"1080c76c":"code","35627368":"code","fc59c23e":"code","1c87a66c":"code","f8ebc705":"code","31a0a376":"code","cd64b323":"code","106f9f81":"code","0c5e3a15":"code","19b8d931":"markdown"},"source":{"1080c76c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","35627368":"from pandas_profiling import ProfileReport","fc59c23e":"cv_data = pd.read_csv('..\/input\/covid-world-vaccination-progress\/country_vaccinations.csv')\ncv_data.head()","1c87a66c":"ProfileReport(cv_data)","f8ebc705":"cv_data_cols = cv_data.columns\nfor col in cv_data_cols:\n    print(col)","31a0a376":"cv_data['country'] = cv_data['country'].astype(str)\ncv_data['iso_code'] = cv_data['iso_code'].astype(str)\ncv_data['date'] = pd.to_datetime(cv_data['date'], format=\"%Y\/%m\/%d\")\ncv_data['vaccines'] = cv_data['vaccines'].astype(str)\ncv_data['source_name'] = cv_data['source_name'].astype(str)\ncv_data['source_website'] = cv_data['source_website'].astype(str)\ncv_data.head()","cd64b323":"cv_data[cv_data['iso_code'] == 'CAN'].head()","106f9f81":"cols = ['total_vaccinations','people_vaccinated','people_fully_vaccinated', 'daily_vaccinations_raw', 'daily_vaccinations', 'total_vaccinations_per_hundred', 'people_vaccinated_per_hundred', 'people_fully_vaccinated_per_hundred', 'daily_vaccinations_per_million']\ndf = cv_data.copy()\ndf.update(df.groupby('country')[cols].ffill().fillna(0))\ndf.head()","0c5e3a15":"df[df['iso_code'] == 'CAN'].head()","19b8d931":"#country, iso_code, date, vaccine, source_name & source_website type should change as they are non-numeric"}}