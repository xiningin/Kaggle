{"cell_type":{"6fc64fd4":"code","99d7074e":"code","07cc3720":"code","e7b78344":"code","a7b10fc8":"code","0363be07":"code","4ead8712":"code","4b12f011":"code","938357f9":"code","9056a65f":"code","25837882":"code","a2958113":"code","1a8cc451":"code","abbffb19":"code","d35df6d9":"code","be45e5e1":"code","d58c65f9":"code","dbcfb1ad":"code","2ccdcebf":"code","4dbfd79a":"code","4b3c1848":"code","d005c5ea":"code","ab2c6c79":"code","4b400dbb":"code","d55067a0":"code","66f9c9da":"code","3861482b":"code","3592f1d5":"markdown"},"source":{"6fc64fd4":"import bq_helper\nimport numpy as np\nimport pandas as pd\nimport plotly as py\nimport plotly.express as px\nimport plotly.graph_objs as go\nfrom bq_helper import BigQueryHelper\nfrom pandas_profiling import ProfileReport\nfrom plotly.offline import init_notebook_mode, iplot","99d7074e":"ils = bq_helper.BigQueryHelper(\n    active_project=\"bigquery-public-data\", dataset_name=\"iowa_liquor_sales\"\n)","07cc3720":"BigQueryHelper(\"bigquery-public-data\", \"iowa_liquor_sales\").list_tables()","e7b78344":"query = \"\"\"SELECT *\nFROM `bigquery-public-data.iowa_liquor_sales.sales` LIMIT 1;\"\"\"\nils.query_to_pandas_safe(query, max_gb_scanned=10).columns","a7b10fc8":"%%time\nquery = \"\"\"SELECT *\nFROM `bigquery-public-data.iowa_liquor_sales.sales`\nWHERE RAND() < 0.1;\"\"\"\ndf = ils.query_to_pandas_safe(query, max_gb_scanned=10)","0363be07":"df.head()","4ead8712":"%%time\nprofile = ProfileReport(df, title=\"Pandas Profiling Report\", minimal=False)\nprofile.to_widgets()","4b12f011":"profile.to_file(\"output.html\")","938357f9":"df.shape","9056a65f":"df.describe()","25837882":"null_df = pd.DataFrame(df.isnull().sum()).reset_index().rename(columns={0:'count'})\nnull_df[\"percent\"] = null_df[\"count\"] \/ int(len(df)) * 100\nnull_df","a2958113":"df = df.dropna()\ndf.shape","1a8cc451":"(1845971-2052164)\/2052164","abbffb19":"df.date = pd.to_datetime(df.date)","d35df6d9":"# plot per category\n\ndf_plot = (\n    df.groupby([\"category_name\"])[\"sale_dollars\"]\n    .sum()\n    .reset_index()\n    .sort_values(\"sale_dollars\", ascending=False)\n)\nfig = px.bar(\n    df_plot[:10], x=\"category_name\", y=\"sale_dollars\", color=\"category_name\"\n)\nfig.update_layout(\n    title=\"Sales of liquor per category\",\n    xaxis_title=\" Category Name\",\n    yaxis_title=\"Sales in dollars\",\n    plot_bgcolor=\"rgba(0,0,0,0)\",\n)\nfig.show()","be45e5e1":"# plot per city\n\ndf_plot = (\n    df.groupby([\"city\"])[\"sale_dollars\"]\n    .sum()\n    .reset_index()\n    .sort_values(\"sale_dollars\", ascending=False)\n)\nfig = px.bar(df_plot[:10], x=\"city\", y=\"sale_dollars\", color=\"city\")\nfig.update_layout(\n    title=\"Sales of liquor per city\",\n    xaxis_title=\" City Name\",\n    yaxis_title=\"Sales in dollars\",\n    plot_bgcolor=\"rgba(0,0,0,0)\",\n)\nfig.show()","d58c65f9":"df_plot = df.groupby([\"date\"])[\"sale_dollars\"].sum().reset_index()\ndf_plot.date = pd.to_datetime(df_plot.date)\ndf_plot_sc = go.Scatter(x=df_plot[\"date\"], y=df_plot[\"sale_dollars\"])\nlayout = go.Layout(\n    title=\"Daily sales\",\n    xaxis=dict(title=\"Date\"),\n    yaxis=dict(title=\"Sales\"),\n    plot_bgcolor=\"rgba(0,0,0,0)\",\n)\nfig = go.Figure(data=[df_plot_sc], layout=layout)\niplot(fig)","dbcfb1ad":"df_plot = (\n    df.groupby(pd.Grouper(freq=\"MS\", key=\"date\"))[\"sale_dollars\"]\n    .sum()\n    .reset_index()\n    .sort_values(\"date\")\n)\ndf_plot_sc = go.Scatter(x=df_plot[\"date\"], y=df_plot[\"sale_dollars\"])\nlayout = go.Layout(\n    title=\"Monthly sales\",\n    xaxis=dict(title=\"Month\"),\n    yaxis=dict(title=\"Sales\"),\n    plot_bgcolor=\"rgba(0,0,0,0)\",\n)\nfig = go.Figure(data=[df_plot_sc], layout=layout)\niplot(fig)","2ccdcebf":"df[\"day_of_week\"] = df.date.dt.day_of_week\ndf_plot = (\n    df.groupby([\"day_of_week\"])[\"bottles_sold\"]\n    .count()\n    .reset_index()\n    .sort_values(\"day_of_week\")\n)\nfig = px.bar(df_plot, x=\"day_of_week\", y=\"bottles_sold\")\nfig.update_layout(\n    title=\"Sales of liquor by day_of_week\",\n    xaxis_title=\"The day of the week with Monday=0, Sunday=6\",\n    yaxis_title=\"Bottles sold\",\n    plot_bgcolor=\"rgba(0,0,0,0)\",\n)\nfig.show()","4dbfd79a":"df.vendor_number.nunique()","4b3c1848":"df[\"year\"] = df.date.dt.year\ndf_plot = (\n    df.groupby([\"year\",\"vendor_name\"])[\"bottles_sold\"]\n    .sum()\n    .reset_index()\n    .sort_values([\"year\", \"bottles_sold\"], ascending = [True, False])\n)\ndf_plot","d005c5ea":"fig = go.Figure()\ndf_plot = df_plot[df_plot.year.gt(2016)]\nfor c in df_plot[\"vendor_name\"].unique():\n    dfp = df_plot[df_plot[\"vendor_name\"] == c].pivot(\n        index=\"year\", columns=\"vendor_name\", values=\"bottles_sold\"\n    )\n    fig.add_traces(go.Scatter(x=dfp.index, y=dfp[c], mode=\"lines\", name=c))\nfig.show()","ab2c6c79":"# Forecasting with Prophet","4b400dbb":"from fbprophet import Prophet\n\ndf_v = df.groupby(pd.Grouper(freq=\"MS\", key=\"date\"))[\"sale_dollars\"].sum().reset_index()\n\ndf_v = df_v.rename(columns = {'date': 'ds', 'sale_dollars': 'y'})\ndf_v_model = Prophet(interval_width = 0.95)\ndf_v_model.fit(df_v)\n\ndf_v_forecast = df_v_model.make_future_dataframe(periods=36, freq = 'MS')\ndf_v_forecast = df_v_model.predict(df_v_forecast)","d55067a0":"import matplotlib.pyplot as plt\n\nplt.figure(figsize=(18,6))\ndf_v_model.plot(df_v_forecast, xlabel = 'Date', ylabel = 'Sales')\nplt.title('Sales Forecasts')","66f9c9da":"df_v = df.groupby(pd.Grouper(freq=\"MS\", key=\"date\"))[\"bottles_sold\"].sum().reset_index()\n\ndf_v = df_v.rename(columns = {'date': 'ds', 'bottles_sold': 'y'})\ndf_v = df_v[df_v.ds.gt(\"2018-01-01\")]\ndf_v = df_v.rename(columns = {'date': 'ds', 'bottles_sold': 'y'})\ndf_v_model = Prophet(interval_width = 0.95)\ndf_v_model.fit(df_v)\n\ndf_v_forecast = df_v_model.make_future_dataframe(periods=18, freq = 'MS')\ndf_v_forecast = df_v_model.predict(df_v_forecast)","3861482b":"plt.figure(figsize=(18,6))\ndf_v_model.plot(df_v_forecast, xlabel = 'Date', ylabel = 'bottles_sold')\nplt.title('bottles_sold Forecasts')","3592f1d5":"| Field name | Description |\n|-|-|\n| invoice_and_item_number | Concatenated invoice and line number associated with the liquor order. This provides a unique identifier for the individual liquor products included in the store order. |\n| date | Date of order |\n| store_number | Unique number assigned to the store who ordered the liquor. |\n| store_name | Name of store who ordered the liquor. |\n| address | Address of store who ordered the liquor. |\n| city | City where the store who ordered the liquor is located |\n| zip_code | Zip code where the store who ordered the liquor is located |\n| store_location | Location of store who ordered the liquor. The Address, City, State and Zip Code are geocoded to provide geographic coordinates. Accuracy of geocoding is dependent on how well the address is interpreted and the completeness of the reference data used. |\n| county_number | Iowa county number for the county where store who ordered the liquor is located |\n| county | County where the store who ordered the liquor is located |\n| category | Category code associated with the liquor ordered |\n| category_name | Category of the liquor ordered. |\n| vendor_number | The vendor number of the company for the brand of liquor ordered |\n| vendor_name | The vendor name of the company for the brand of liquor ordered |\n| item_number | Item number for the individual liquor product ordered. |\n| item_description | Description of the individual liquor product ordered. |\n| pack | The number of bottles in a case for the liquor ordered |\n| bottle_volume_ml | Volume of each liquor bottle ordered in milliliters. |\n| state_bottle_cost | The amount that Alcoholic Beverages Division paid for each bottle of liquor ordered |\n| state_bottle_retail | The amount the store paid for each bottle of liquor ordered |\n| bottles_sold | The number of bottles of liquor ordered by the store |\n| sale_dollars | Total cost of liquor order (number of bottles multiplied by the state bottle retail) |\n| volume_sold_liters | Total volume of liquor ordered in liters. (i.e. (Bottle Volume (ml) x Bottles Sold)\/1,000) |\n| volume_sold_gallons | Total volume of liquor ordered in gallons. (i.e. (Bottle Volume (ml) x Bottles Sold)\/3785.411784) |"}}