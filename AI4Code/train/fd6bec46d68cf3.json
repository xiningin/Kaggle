{"cell_type":{"cfd8c315":"code","b1030f6f":"code","72e1f2c4":"code","6f158ec4":"code","37c40d92":"code","422b9099":"code","647bdbf3":"code","477509ee":"code","d67476c0":"code","cbe38318":"code","19b7e76d":"code","136933bd":"code","5f0b791b":"code","828802b8":"code","f61a03a5":"code","a0409b82":"code","fab79f24":"code","23e529cf":"code","278036d4":"code","732521e3":"code","5cd5b130":"code","aa6b529d":"code","ff318f16":"code","5062efb9":"code","3b0b528e":"code","6925c450":"code","09471cbf":"code","ecc5a80e":"code","22592e42":"code","64c963d2":"code","5156332f":"code","38ef040d":"code","45658def":"code","3962518e":"code","16cab0e3":"code","4d200290":"code","c2f72fe1":"code","bbc8c07d":"code","d588ae59":"markdown","0845fb99":"markdown","34b4b903":"markdown","af205bea":"markdown","5b87b748":"markdown","bf0cdb05":"markdown","c18a7fed":"markdown","795c9be5":"markdown","80d46100":"markdown","7801f86a":"markdown","420132e8":"markdown","10dc1285":"markdown","ef16f260":"markdown","af02bdad":"markdown"},"source":{"cfd8c315":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b1030f6f":"import numpy as np \nimport pandas as pd\nimport calendar\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport squarify\nimport gc\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n\nsns.set_style('white')\n\npd.options.display.float_format = '{:,.2f}'.format","72e1f2c4":"def pintar_altas_bajas_mensuales (dataset, variable):\n    fig = plt.figure(figsize = (10, 8))\n    altas_=dataset[dataset['dif_'+variable] == 1].groupby(['pk_partition'])['dif_'+variable].count()\n    bajas_=dataset[dataset['dif_'+variable] == -1].groupby(['pk_partition'])['dif_'+variable].count()\n    # No tenemos informacion de esto parfa el primer mes\n    #totales_=dataset[dataset['pk_partition'] > '2018-02-01'].groupby(['pk_partition'])['dif_'+variable].sum() \n    totales_=dataset.groupby(['pk_partition'])['dif_'+variable].sum()\n    # Pintamos:\n    locs, labels = plt.xticks()\n    plt.setp(labels,rotation=45)\n    plt.plot(altas_, color = \"green\", label = \"Altas mensuales\")\n    plt.plot(bajas_, color = \"red\", label = \"Bajas mensuales\")\n    plt.plot(totales_, color = \"blue\", label = \"Total mensuales\")\n    plt.title(\"Ventas mensuales de: \"+variable)\n    plt.legend()","6f158ec4":"df_sorted = pd.read_pickle('\/kaggle\/input\/easymoney\/EasyMoney_base.pkl',compression='zip')","37c40d92":"#df_sorted.fillna(0,inplace=True)","422b9099":"# Easymoney product list\nproductos_easymoney=['loans',\n 'mortgage',\n 'funds',\n 'securities',\n 'long_term_deposit',\n 'em_account_pp',\n 'credit_card',\n 'payroll',\n 'pension_plan',\n 'payroll_account',\n 'emc_account',\n 'debit_card',\n 'em_account_p',\n 'em_acount']","647bdbf3":"pintar_altas_bajas_mensuales(df_sorted,'em_acount')","477509ee":"pintar_altas_bajas_mensuales(df_sorted,'emc_account')","d67476c0":"pintar_altas_bajas_mensuales(df_sorted,'em_account_p')","cbe38318":"pintar_altas_bajas_mensuales(df_sorted,'debit_card')","19b7e76d":"pintar_altas_bajas_mensuales(df_sorted,'credit_card')","136933bd":"dif_productos_easymoney=['dif_loans',\n 'dif_mortgage',\n 'dif_funds',\n 'dif_securities',\n 'dif_long_term_deposit',\n 'dif_em_account_pp',\n 'dif_credit_card',\n 'dif_payroll',\n 'dif_pension_plan',\n 'dif_payroll_account',\n 'dif_emc_account',\n 'dif_debit_card',\n 'dif_em_account_p',\n 'dif_em_acount']","5f0b791b":"df_altas=df_sorted.pivot_table(index='pk_partition',\n                      values=dif_productos_easymoney, aggfunc=[np.sum])","828802b8":"df_altas.columns=['credit_card','debit_card',\n                            'em_account_p',\n                            'em_account_pp',\n                             'em_acount',\n                            'emc_account',\n                            'funds',\n                            'loans',\n                            'long_term_deposit',\n                            'mortgage',\n                            'payroll',\n                            'payroll_account',\n                            'pension_plan',\n                            'securities']","f61a03a5":"df_altas.reset_index(drop=False,inplace=True)","a0409b82":"df_altas","fab79f24":"df_altas=df_altas.melt(id_vars=['pk_partition'],\n              value_vars=df_altas.columns[1:],\n              var_name='Product',\n              value_name='Count')","23e529cf":"df_altas","278036d4":"df_altas.sort_values(by=['pk_partition','Product'],ascending=[True,False],inplace=True)","732521e3":"evolucion_horizontal = px.bar(df_altas, \n                              x=\"pk_partition\", y=\"Count\", color='Product', orientation='v', \n                              height=600,title='Altas por producto', \n                              color_discrete_sequence = px.colors.cyclical.mygbm)\nevolucion_horizontal.show()","5cd5b130":"df_altas=df_sorted[df_sorted['isNewClient']==1].pivot_table(index='pk_partition',\n                      values=dif_productos_easymoney, aggfunc=[np.sum])","aa6b529d":"df_altas.columns=['credit_card','debit_card',\n                            'em_account_p',\n                            'em_account_pp',\n                             'em_acount',\n                            'emc_account',\n                            'funds',\n                            'loans',\n                            'long_term_deposit',\n                            'mortgage',\n                            'payroll',\n                            'payroll_account',\n                            'pension_plan',\n                            'securities']","ff318f16":"df_altas.reset_index(drop=False,inplace=True)","5062efb9":"df_altas=df_altas.melt(id_vars=['pk_partition'],\n              value_vars=df_altas.columns[1:],\n              var_name='Product',\n              value_name='Count')","3b0b528e":"df_altas.sort_values(by=['pk_partition','Product'],ascending=[True,False],inplace=True)","6925c450":"evolucion_horizontal = px.bar(df_altas, \n                              x=\"pk_partition\", y=\"Count\", color='Product', orientation='v', \n                              height=600,title='Altas por producto', \n                              color_discrete_sequence = px.colors.cyclical.mygbm)\nevolucion_horizontal.show()","09471cbf":"df_altas=df_sorted[df_sorted['isNewClient']==0].pivot_table(index='pk_partition',\n                      values=dif_productos_easymoney, aggfunc=[np.sum])","ecc5a80e":"df_altas.columns=['credit_card','debit_card',\n                            'em_account_p',\n                            'em_account_pp',\n                             'em_acount',\n                            'emc_account',\n                            'funds',\n                            'loans',\n                            'long_term_deposit',\n                            'mortgage',\n                            'payroll',\n                            'payroll_account',\n                            'pension_plan',\n                            'securities']","22592e42":"df_altas.reset_index(drop=False,inplace=True)","64c963d2":"df_altas=df_altas.melt(id_vars=['pk_partition'],\n              value_vars=df_altas.columns[1:],\n              var_name='Product',\n              value_name='Count')","5156332f":"df_altas.sort_values(by=['pk_partition','Product'],ascending=[True,False],inplace=True)","38ef040d":"evolucion_horizontal = px.bar(df_altas, \n                              x=\"pk_partition\", y=\"Count\", color='Product', orientation='v', \n                              height=600,title='Altas por producto', \n                              color_discrete_sequence = px.colors.cyclical.mygbm)\nevolucion_horizontal.show()","45658def":"df_altas=df_sorted[df_sorted['isActive']==1].pivot_table(index='pk_partition',\n                      values=dif_productos_easymoney, aggfunc=[np.sum])","3962518e":"df_altas.columns=['credit_card','debit_card',\n                            'em_account_p',\n                            'em_account_pp',\n                             'em_acount',\n                            'emc_account',\n                            'funds',\n                            'loans',\n                            'long_term_deposit',\n                            'mortgage',\n                            'payroll',\n                            'payroll_account',\n                            'pension_plan',\n                            'securities']","16cab0e3":"df_altas.reset_index(drop=False,inplace=True)","4d200290":"df_altas=df_altas.melt(id_vars=['pk_partition'],\n              value_vars=df_altas.columns[1:],\n              var_name='Product',\n              value_name='Count')","c2f72fe1":"df_altas.sort_values(by=['pk_partition','Product'],ascending=[True,False],inplace=True)","bbc8c07d":"evolucion_horizontal = px.bar(df_altas, \n                              x=\"pk_partition\", y=\"Count\", color='Product', orientation='v', \n                              height=600,title='Altas por producto', \n                              color_discrete_sequence = px.colors.cyclical.mygbm)\nevolucion_horizontal.show()","d588ae59":"Change the name of the columns","0845fb99":"We are going to create a pivot table with the sum() for each product by months","34b4b903":"# We are going to paint monthly highs \/ lows for each product","af205bea":"Melt the dataset for resuming all the dif columns in only two: product and count","5b87b748":"> # Load  Dataset","bf0cdb05":"# We will paint monthly sales for all products, but only active clients","c18a7fed":"Create a new index:","795c9be5":"# We will paint monthly sales for all products, but only old clients","80d46100":"We load the dataset as we left it in the previous notebook: Easymoney First Steps II","7801f86a":"This is the EasyMoney products list","420132e8":"# We will paint monthly sales for all products","10dc1285":"sort the new dataset:","ef16f260":"# We will paint monthly sales for all products, but only new clients","af02bdad":"we will piant the  sales of EasyMoney products by months"}}