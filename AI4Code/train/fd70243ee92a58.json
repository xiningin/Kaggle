{"cell_type":{"fa9f34e1":"code","1f1db1f3":"code","61548781":"code","5b6c03b8":"code","2732d493":"code","3047ad87":"code","908c86df":"code","2e39ebf3":"code","1f3eb5c8":"code","a51061b6":"code","6d3ce50d":"code","83c06cf0":"code","0adaf22e":"code","eb170c0e":"code","eed7a656":"code","2d74065a":"code","64756169":"code","137e6eb7":"code","6cac9f77":"code","cfb0a7ae":"code","473a0729":"code","418178fb":"code","5366ab15":"code","8e0b5d4d":"code","5ce80664":"code","b55e7a75":"code","9781597c":"code","a7858f55":"code","656cc094":"code","e06780b7":"code","202492bc":"code","7d27add4":"code","b0d9715f":"code","be3c89f8":"code","46e75b95":"code","4d2a9072":"code","5514ca3a":"code","4b576f58":"code","ed5b2fea":"code","75e4c7b3":"code","813d2a55":"code","59880b64":"code","13d78d4e":"code","7a9cd0dc":"code","827e6e9f":"markdown","88f8f58b":"markdown","8db16f4c":"markdown","035da213":"markdown","0ba8232b":"markdown","b186cd73":"markdown","3071d3a4":"markdown","08e3ff25":"markdown","70d4fb66":"markdown","80855cbb":"markdown","cfc4e420":"markdown","a1162552":"markdown","9f178e66":"markdown","04c7a4bc":"markdown","3c322902":"markdown","675d4ec9":"markdown","40723ba2":"markdown","6dabce55":"markdown","b7733c18":"markdown"},"source":{"fa9f34e1":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport glob\nimport os\nimport re\nfrom matplotlib import style\nfrom datetime import datetime\nfrom PIL import Image\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\n\n%matplotlib inline\n\nstyle.use('fivethirtyeight')","1f1db1f3":"opening_date = []\nannual_salary = []\njob_title = []\nfile_list = []\nclass_code = []\nduties  = []\ndriver_license = []\nfull_time_part_time =[]\nexperience_year =[]\n\ndir_path = \"..\/input\/cityofla\/CityofLA\/Job Bulletins\"\nfor file_name in os.listdir(dir_path):\n    with open(dir_path+'\/'+file_name, 'r',encoding = \"ISO-8859-1\") as f:\n        contents = f.read()\n        pattern = re.compile(r'open?[\\s]*date?[\\s]*:?[\\s]*[\\d-]*',re.I)\n        match = pattern.findall(contents)\n        file_list.append(file_name)\n        #Get Opening Date\n        try:\n            match[0] = match[0].replace('Open Date: ','')\n            match[0] = match[0].replace('Open date: ','')\n            match[0] = match[0].strip()\n            try:\n                match[0] = datetime.strptime(match[0], '%m-%d-%y')\n                opening_date.append(match[0])\n            except :\n                opening_date.append(match[0])\n        except IndexError:\n            opening_date.append(np.nan)\n        #get annual salary\n        annual_pattern = re.compile(r'annual?[\\s]*salary?[\\s]*?[$][\\d,\\stoand$;]*[\\d]', re.I)\n        annual_salary_match = annual_pattern.findall(contents)\n        try:\n            annual_salary_string = re.findall(r'\\$[\\d$,\\s;toand]*', annual_salary_match[0])\n            try:\n                annual_salary.append(annual_salary_string[0])\n            except:\n                annual_salary.append(np.nan)\n            #annual_salary.append(re.sub('ANNUAL SALARY\\s+',' ',annual_salary_match[0]))\n            #annual_salary.append(annual_salary_match[0].encode('ascii', \"ignore\"))\n        except IndexError:\n            annual_salary.append(np.nan)\n        \n        #Job Title\n        jobtitle_pattern = re.compile(r'[A-Z\\d\\s-]*');\n        jobtitle_match = jobtitle_pattern.findall(contents)\n        try:\n            job_title.append(re.sub('\\s+',' ', jobtitle_match[0][:-1]))\n        except IndexError:\n            job_title.append(np.nan)\n        #Class Code \n        classcode_pattern = re.compile(r'Class[\\s]*Code?[\\s]*?:?[\\s]*[\\d]*')\n        classcode_match = classcode_pattern.findall(contents)\n        try:\n            class_code.append(classcode_match[0].replace('Class Code: ',''))\n        except IndexError:\n            class_code.append(np.nan)\n        #Get Duties\n        duties_pattern = re.compile(r'DUTIES?[\\s\\w\\d;.\/]*', re.I)\n        duties_match = duties_pattern.findall(contents)\n        try:\n            duties.append(duties_match[0])\n        except IndexError:\n            duties.append(np.nan)\n        #Driver's License\n        driver_license_pattern = re.compile(r'driver\\'s license is required', re.I)\n        driver_license_match = driver_license_pattern.findall(contents)\n        try:\n            driver_license.append(driver_license_match[0])\n        except IndexError:\n            driver_license.append('P')\n        #Full time part time job\n        job_type_pattern = re.compile(r'full[\\s\\W]*time[\\s\\W]*paid', re.I)\n        job_type_match = job_type_pattern.findall(contents)\n        try:\n            full_time_part_time.append(job_type_match[0])\n        except IndexError:\n            full_time_part_time.append('PART-TIME')\n            \n        #Experience\n        experience_pattern = re.compile(r'(one|two|three|four|five|six|seven|eight|nine)[\\s]years[\\s]*of[\\s]*(full|part)-time[\\s]*paid[\\s]*experience', re.I)\n        experience_match = experience_pattern.findall(contents)\n        \n        try:\n            experience_year.append(experience_match[0][0].title())\n        except IndexError:\n            experience_year.append('0')","61548781":"job_bulletins = pd.DataFrame({'file_name':file_list, 'job_title':job_title,'class_code':class_code,'opening_date':opening_date,'annual_salary':annual_salary,'job_duties':duties,'driver_license':driver_license,\n                              'full_time_part_time':full_time_part_time,'experience_year':experience_year})","5b6c03b8":"len(job_bulletins.index)","2732d493":"job_bulletins.head(5)","3047ad87":"job_bulletins.dtypes","908c86df":"job_bulletins['class_code'] =pd.to_numeric(job_bulletins['class_code'],errors='coerce').fillna(0).astype(int)","2e39ebf3":"job_bulletins.dtypes","1f3eb5c8":"job_bulletins.loc[job_bulletins['annual_salary'].isnull() == True, ]","a51061b6":"job_bulletins.loc[job_bulletins['class_code']  == 0 , ]","6d3ce50d":"job_bulletins.loc[job_bulletins['opening_date'].isnull() == True, ]","83c06cf0":"job_bulletins.loc[job_bulletins['job_duties'].isnull() == True, ]","0adaf22e":"pd.value_counts(job_bulletins['driver_license'])","eb170c0e":"job_bulletins.loc[job_bulletins['full_time_part_time'] !=\"PART-TIME\",'full_time_part_time'] = 'FULL-TIME' ","eed7a656":"job_bulletins.loc[job_bulletins['driver_license'] !='P','driver_license'] = 'R'","2d74065a":"pd.value_counts(job_bulletins['driver_license'])","64756169":"pd.value_counts(job_bulletins['driver_license']).plot(kind = 'bar', rot=0)\nplt.show()","137e6eb7":"pd.set_option('display.max_colwidth', -1)\n#print(job_bulletins['annual_salary'])\n\ndef isnan(value):\n  try:\n      import math\n      return math.isnan(float(value))\n  except:\n      return False\n\ndef annual_salary_split(annual_salary):\n    max_salary = []\n    min_salary = []\n    annual_salary_split_pattern = re.compile(r'[\\dto,$\\s]*')    \n    for salary_text  in annual_salary:\n        if isnan(salary_text) == False:\n            annual_salary_split__match = annual_salary_split_pattern.findall(salary_text)\n            split_max_salary = []\n            split_min_salary = []\n            for annual_salary_text in annual_salary_split__match:        \n                if bool(re.search(r'\\d', annual_salary_text)) == True:\n                    annual_salary_text = re.sub(r'[,$]','', annual_salary_text)\n                    salary_amount_pattern = re.compile(r'[\\d]+')\n                    #print(annual_salary_text)\n                    salary_amount_match = salary_amount_pattern.findall(annual_salary_text)\n                    print(salary_amount_match)\n                    try:\n                        split_min_salary.append(salary_amount_match[0])\n                    except IndexError:\n                        split_min_salary.append('0')\n                    try:\n                        split_max_salary.append(salary_amount_match[1])\n                    except IndexError:\n                        split_max_salary.append('0')\n            try:\n                min_salary.append(max(split_min_salary))\n            except IndexError:\n                min_salary.append('0')\n\n            try:\n                max_salary.append(max(split_max_salary))\n            except IndexError:\n                max_salary.append('0')\n        else:\n            #print(salary_text)\n            min_salary.append('0')\n            max_salary.append('0')\n            \n    return min_salary, max_salary\n    #print(annual_salary[0])\n    \n\nmin_salary=[]\nmax_salary=[]\n \nmin_salary, max_salary = annual_salary_split(job_bulletins['annual_salary'])\n\njob_bulletins['min_salary'] = min_salary\njob_bulletins['max_salary'] = max_salary","6cac9f77":"job_bulletins.head(5)","cfb0a7ae":"pd.value_counts(job_bulletins['full_time_part_time'])","473a0729":"pd.value_counts(job_bulletins['full_time_part_time']).plot(kind = 'bar', rot=0)\nplt.show()","418178fb":"job_bulletins.head(5)","5366ab15":"job_bulletins['max_salary'] =pd.to_numeric(job_bulletins['max_salary'],errors='coerce').fillna(0)\njob_bulletins['min_salary'] =pd.to_numeric(job_bulletins['min_salary'],errors='coerce').fillna(0)\njob_bulletins.dtypes","8e0b5d4d":"job_bulletins['max_salary'].mean()","5ce80664":"job_bulletins['min_salary'].mean()","b55e7a75":"plt.hist(job_bulletins['min_salary'], bins=20)\nplt.show()","9781597c":"job_bulletins.loc[job_bulletins['max_salary'] == 0,]","a7858f55":"job_bulletins.loc[job_bulletins['max_salary'] == 0,].index","656cc094":"for i in job_bulletins.loc[job_bulletins['max_salary'] == 0,].index:\n    job_bulletins.loc[i,'max_salary']  = job_bulletins.loc[i,'min_salary'] ","e06780b7":"job_bulletins['max_salary'].max()","202492bc":"job_bulletins['min_salary'].max()","7d27add4":"job_bulletins.dtypes","b0d9715f":"plt.hist(job_bulletins['max_salary'], bins=20)\nplt.show()","be3c89f8":"pd.value_counts(job_bulletins['experience_year'])","46e75b95":"pd.value_counts(job_bulletins['experience_year']).plot(kind = 'bar', rot=45)\nplt.show()","4d2a9072":"job_bulletins['opening_date'] = pd.to_datetime(job_bulletins['opening_date'])","5514ca3a":"pd.value_counts(job_bulletins['opening_date'].dt.to_period('Y'))","4b576f58":"pd.value_counts(job_bulletins['opening_date'].dt.to_period('Y')).plot(kind = 'bar', rot=45)\nplt.show()","ed5b2fea":"pd.value_counts(job_bulletins['opening_date'].dt.strftime('%b')).plot(kind = 'bar', rot=45)\nplt.show()","75e4c7b3":"pd.value_counts(job_bulletins['opening_date'].dt.strftime('%a')).plot(kind = 'bar', rot=45)\nplt.show()","813d2a55":"all_job_title = \" \".join(jtitle for jtitle in job_bulletins.job_title)","59880b64":"print(\"There are {} job titile words in the combinationof all job title\".format(len(all_job_title)))","13d78d4e":"#Generate a wordcloud image\nwordcloud = WordCloud(background_color=\"white\").generate(all_job_title);\nplt.figure()\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.show()","7a9cd0dc":"job_bulletins.to_csv('Job_Bulletinsjob_bulletins_df.csv')","827e6e9f":"**Data type in every column.**","88f8f58b":"## Min Salary","8db16f4c":"## Create pandas DataFrame","035da213":"I am still working.I will more update. \n### Notify my mistake. Thank you","0ba8232b":"## Reading the job bulletin file.","b186cd73":"## Full-time & Part-Time","3071d3a4":"## Experience Year","08e3ff25":"Currently I have got following data field. \n<ul>\n    <li> File Name <\/li>\n    <li> Job Title <\/li>\n    <li> Class Code <\/li>\n    <li> Opening Date <\/li>\n    <li> Annual Salary <\/li>\n    <li> Job Duties <\/li>\n    <li> Driver License <\/li>\n    <li> Full Time PART TIME <\/li>\n    <li> Min Salary <\/li>\n    <li> Max Salary<\/li>\n<\/ul>\n\n## If not displaying full notebook\n\nBack in firefox, zoom was at 100%. if I change the zoom to 60% and refresh, it works! Then I reset the zoom back to 100% and it still works. So much for the web being \"stateless\"!\n\nAs I said it works fine in Edge, and I just checked, it works fine in Chrome. Next step, close Firefox and reopen and see if it still works in Firefox after having changed and reset zoom.\n\nETA: close and reopen firefox and it still works.\n\nIn summary the \"fix\" was change zoom, refresh, change zoom back, refresh. Some strange intermittent problem I guess.","70d4fb66":"## Max Salary","80855cbb":"Total application where driver's license required and not required.<br\/>\n**Required flag = R <br\/>\nNot required flag = P**","cfc4e420":"## Data exploration and data analysis","a1162552":"## Data Sheet save in CSV file ","9f178e66":"## Function for extracting min and max salary","04c7a4bc":"Opening date null value","3c322902":"Find class code 0 values","675d4ec9":"## Job oppurtunities","40723ba2":"**Class code convert in integer data type.**","6dabce55":"## Driver license required","b7733c18":"** Annual salary null values **"}}