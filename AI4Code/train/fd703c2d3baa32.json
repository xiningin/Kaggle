{"cell_type":{"2c31f750":"code","db736ce3":"code","0716e396":"code","27a52133":"code","b9e13b3f":"code","7e8488a2":"code","896bb185":"code","25ac3483":"code","6937b932":"code","87ec43df":"code","98cdf2ce":"code","34e149b0":"code","79a86ec0":"code","929cb560":"code","41f78f6e":"code","7588aa4c":"code","f3e2d27d":"code","fc8b9187":"code","3bc89525":"code","4ea5ed16":"code","8e2f2718":"code","8cafcaca":"code","b44a7bcf":"markdown","6ed0e456":"markdown","05b9f6b4":"markdown","3e219152":"markdown","33030334":"markdown","95c7aad1":"markdown","b193e32e":"markdown","922f3337":"markdown","93aff05a":"markdown","997866ba":"markdown","8b8b3481":"markdown","bdba1197":"markdown","53aadede":"markdown","23ae2e59":"markdown","c034a50f":"markdown","10d8c284":"markdown","27cbf73f":"markdown","b9dba32c":"markdown","94771e1b":"markdown","aad6c396":"markdown"},"source":{"2c31f750":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport sklearn\nfrom sklearn.decomposition import PCA as PCA\nfrom sklearn.metrics import silhouette_samples\nimport matplotlib.pyplot as plt\nfrom matplotlib import cm\nimport warnings\nwarnings.filterwarnings('ignore')","db736ce3":"data = pd.read_csv('..\/input\/Mall_Customers.csv')","0716e396":"print('shape = ', data.shape)\nprint(data.columns)","27a52133":"data_model = data.drop(['CustomerID'], axis=1)\ndata_model['Gender'] = data_model['Gender'].factorize()[0]\ndata.head()","b9e13b3f":"sns.pairplot(data[['Gender', 'Age', 'Annual Income (k$)',\n       'Spending Score (1-100)']]);","7e8488a2":"g = sns.PairGrid(data[['Gender', 'Age', 'Annual Income (k$)',\n       'Spending Score (1-100)']])\ng.map_diag(sns.kdeplot)\ng.map_offdiag(sns.kdeplot, n_levels=8);","896bb185":"fig = plt.figure(figsize=(15,15))\nax1 = fig.add_subplot(3,3,1)\nsns.barplot(y='Age',x='Gender', data=data);\nax2 = fig.add_subplot(3,3,2)\nsns.barplot(y='Annual Income (k$)',x='Gender', data=data);\nax3 = fig.add_subplot(3,3,3)\nsns.barplot(y='Spending Score (1-100)',x='Gender', data=data);","25ac3483":"pca = PCA(n_components=2)\npca.fit(data_model)\nXpca = pca.transform(data_model)\nsns.set()\nplt.figure(figsize=(8,8))\nplt.scatter(Xpca[:,0],Xpca[:,1], c='Red')\nplt.show()","6937b932":"from sklearn.manifold import TSNE\ntsn = TSNE()\nres_tsne = tsn.fit_transform(data_model)\nplt.figure(figsize=(8,8))\nplt.scatter(res_tsne[:,0],res_tsne[:,1]);","87ec43df":"from sklearn.cluster import AgglomerativeClustering as AggClus","98cdf2ce":"clus_mod = AggClus(n_clusters=6)\nassign = clus_mod.fit_predict(data_model)\nplt.figure(figsize=(8,8))\nsns.set(style='darkgrid',palette='muted')\ncmap = sns.cubehelix_palette(dark=.3, light=.8, as_cmap=True)\nsns.scatterplot(x=res_tsne[:,0],y=res_tsne[:,1],s=100, hue=assign, palette='Set1');","34e149b0":"from scipy.cluster.hierarchy import dendrogram, ward\nsns.set(style='white')\nplt.figure(figsize=(10,7))\nlink = ward(res_tsne)\ndendrogram(link)\nax = plt.gca()\nbounds = ax.get_xbound()\nax.plot(bounds, [30,30],'--', c='k')\nax.plot(bounds,'--', c='k')\nplt.show()","79a86ec0":"clus_mod = AggClus(n_clusters=6)\nassign = clus_mod.fit_predict(data_model)\nplt.figure(figsize=(8,8))\nsns.set(style='darkgrid',palette='muted')\ncmap = sns.cubehelix_palette(dark=.3, light=.8, as_cmap=True)\nsns.scatterplot(x=res_tsne[:,0],y=res_tsne[:,1],s=100, hue=assign, palette='copper');","929cb560":"data_model['predict'] = pd.DataFrame(assign)","41f78f6e":"data_model.head(3)","7588aa4c":"fig = plt.figure(figsize=(20,20))\nax1 = fig.add_subplot(3,3,1)\nsns.countplot(data['Gender'],hue=data_model['predict']);\nax2 = fig.add_subplot(3,3,2)\nsns.scatterplot(x=res_tsne[:,0],y=res_tsne[:,1],s=100, hue=data['Gender'], palette='copper');\nax3 = fig.add_subplot(3,3,3)\nsns.scatterplot(x=res_tsne[:,0],y=res_tsne[:,1],s=100, hue=data['Age'], palette='copper');","f3e2d27d":"fig = plt.figure(figsize=(20,20))\nax1 = fig.add_subplot(3,3,1)\nsns.scatterplot(x=res_tsne[:,0],y=res_tsne[:,1],s=100, hue=data['Spending Score (1-100)'], palette='copper');\nax2 = fig.add_subplot(3,3,2)\nsns.scatterplot(x=res_tsne[:,0],y=res_tsne[:,1],s=100, hue=data['Annual Income (k$)'], palette='copper');","fc8b9187":"model = pd.DataFrame()\nmodel['age'] = data_model['Age'].groupby(data_model['predict']).median()\nmodel['annual income'] = data_model['Annual Income (k$)'].groupby(data_model['predict']).median()\nmodel['spending score'] = data_model['Spending Score (1-100)'].groupby(data_model['predict']).median()\nmodel.reset_index(inplace=True)","3bc89525":"cluster_labels=np.unique(assign)\nn_clusters = len(np.unique(assign))\nsilhouette_vals = silhouette_samples(res_tsne, assign, metric='euclidean')\ny_ax_lower, y_ax_upper = 0, 0\nyticks = []\nplt.figure(figsize=(10,8))\nfor i , c in enumerate(cluster_labels):\n        c_silhouette_vals = silhouette_vals[assign==c]\n        c_silhouette_vals.sort()\n        y_ax_upper += len(c_silhouette_vals)\n        color = cm.jet(float(i) \/ n_clusters)\n        plt.barh(range(y_ax_lower,y_ax_upper),\n                c_silhouette_vals,height=1.0,edgecolor='none',color=color)\n        yticks.append((y_ax_lower+y_ax_upper) \/ 2)\n        y_ax_lower += len(c_silhouette_vals)\nsilhouette_avg = np.mean(silhouette_vals)\n\nplt.axvline(silhouette_avg,color=\"red\",linestyle= \"--\")\nplt.yticks(yticks , cluster_labels + 1)\nplt.ylabel ('Cluster')\nplt.xlabel('Silhouette coefficient')","4ea5ed16":"def clust_sill(num):\n    fig = plt.figure(figsize=(25,20))\n    ax1 = fig.add_subplot(3,3,1)\n\n    clus_mod = AggClus(n_clusters=num)\n    assign = clus_mod.fit_predict(data_model)\n    sns.set(style='darkgrid',palette='muted')\n    cmap = sns.cubehelix_palette(dark=.3, light=.8, as_cmap=True)\n    sns.scatterplot(x=res_tsne[:,0],y=res_tsne[:,1],s=100, hue=assign, palette='copper');\n    cluster_labels=np.unique(assign)\n    n_clusters = len(np.unique(assign))\n    silhouette_vals = silhouette_samples(res_tsne, assign, metric='euclidean')\n\n    y_ax_lower, y_ax_upper = 0, 0\n    yticks = []\n    ax2 = fig.add_subplot(3,3,2)\n    for i , c in enumerate(cluster_labels):\n        c_silhouette_vals = silhouette_vals[assign==c]\n        c_silhouette_vals.sort()\n        y_ax_upper += len(c_silhouette_vals)\n        color = cm.jet(float(i) \/ n_clusters)\n        plt.barh(range(y_ax_lower,y_ax_upper),\n                c_silhouette_vals,height=1.0,edgecolor='none',color=color)\n        yticks.append((y_ax_lower+y_ax_upper) \/ 2)\n        y_ax_lower += len(c_silhouette_vals)\n    silhouette_avg = np.mean(silhouette_vals)\n    \n    plt.title(str(num)+ ' Clusters')\n    plt.axvline(silhouette_avg,color=\"red\",linestyle= \"--\")\n    plt.yticks(yticks , cluster_labels + 1)\n    plt.ylabel ('Cluster')\n    plt.xlabel('Silhouette coefficient')\nclust_sill(3)\nclust_sill(4)\nclust_sill(5)\nclust_sill(7)","8e2f2718":"model","8cafcaca":"fig = plt.figure(figsize=(20,20))\nax1 = fig.add_subplot(3,3,1)\nsns.boxplot(y='Age',x='predict',data=data_model);\nax2 = fig.add_subplot(3,3,2)\nsns.boxplot(y='Annual Income (k$)',x='predict',data=data_model);\nax3 = fig.add_subplot(3,3,3)\nsns.boxplot(y='Spending Score (1-100)',x='predict',data=data_model);","b44a7bcf":"Frankly, this clustering schedule doesn't look perfect. But we can compare it with another variants:","6ed0e456":"Thank you for reading! I hope this kernel was helpful for you.","05b9f6b4":"## Visual analysis and Agglomerate clustering","3e219152":"Consider clusters distributions. With boxplot graphics we can see that groups are very different.","33030334":"Okay, now I will see what data got into clusters.","95c7aad1":"This method gives us structure with one strongly remote cluster. But now we can't clearly talk how many clusters need model? After PCA - 5 clusters and after tsne? 5 or 6? Apply some cluster methods and find this out. <br>","b193e32e":"Here we can see that except gender (I already mentioned this) other features gives significant results.","922f3337":"Good news, gender feature is balace with all another features! It's really interesting. So the model will be more objective. Perhaps, gender feature can be don't useable, but we have so few features. And I can't drop it out of analysis.","93aff05a":"After PCA we can apply k-means, because groups are roughly homogeneous and uniform. But the same can not be said about tsne data.","997866ba":"In this task we have very rare chance of a two-dimensional data view. We use this to build a silhouette graphics. This graphic show clustering quality.","8b8b3481":"You may notice that my choice of 6 clusters seems optimal in this dataset.","bdba1197":"Now analyze cathegorical columns - gender with other features.","53aadede":"Columns description:<br>\nCustomerID - Unique ID assigned to the customer<br>\nGender - Gender of the customer<br>\nAge - Age of the customer<br>\nAnnual Income (k$) - Annual Income of the customee<br>\nSpending Score (1-100) - Score assigned by the mall based on customer behavior and spending nature<br>","23ae2e59":"We can see that algorithm well caught relation between  Annual Income and Spending Score. Before clustering try another interesting method - tsne:","c034a50f":"What we can see? Annual Income with Spending Score forms together an interesting picture, look at it later. Age and Annual Income distribution don't seems like normal. They are both shifted to left. Spending Score, at first glance, has too large tails to be normal. But remember, that these conclusions based on histograms, and they can change very high by switch number of bins. So, plot in addition kdeplot from seaborn:","10d8c284":"It seems that optimal are 6 clusters. Of course, nothing can be said sure for clustering. You can say that there are 3, 4, 5 or 7 clusters. There is no ready solution, as often happens in data analysis. So, rewrite code:","27cbf73f":"So, drop non-informative ordinal data - CustomerID and consider pairplot for all columns:","b9dba32c":"Is it optimal clusters number? Consider dendrogramm:","94771e1b":"Here you can see characteristics (median) of every cluster:","aad6c396":"Let's start to visualize. Firstly with PCA: "}}