{"cell_type":{"3847e12b":"code","1846bf2c":"code","c7e592ea":"code","ec8603ff":"code","c0709ecc":"code","8fc0082c":"code","c6320882":"code","05c62be0":"code","3bc4086c":"code","fe89fefe":"code","cffe8f04":"code","391e6d14":"code","4bd51d3b":"code","54ed4d07":"markdown","5e9e899b":"markdown","6b2ef0aa":"markdown","c840c966":"markdown","385bbcf6":"markdown","791c55dc":"markdown","092f671b":"markdown"},"source":{"3847e12b":"import numpy as np\nimport pandas as pd\n\nfrom matplotlib import pyplot as plt\nfrom sklearn import datasets, linear_model","1846bf2c":"f = open(\"..\/input\/cassava-lb\/Private_LB.log\",'r')\nf = list(map(float,f.read().split()))\narray = np.array(f)\n\nplt.hlines(1,-0.05,1.05,color='k')\nplt.xlim(-0.1,1.1)\nplt.ylim(0.5,1.5)\n\ny = np.ones(np.shape(array))\ny2 = np.ones((2))\nplt.plot(array,y,'|', ms=30)\nplt.plot([0,1],y2,'r|', ms=60)\nplt.axis('off')\nplt.show()","c7e592ea":"df = pd.read_csv(\"..\/input\/cassava-lb\/Private_Public.log\", names=[\"data\"],encoding='utf-8')\ndf2 = pd.DataFrame(columns=['private', 'public'])\ndf.head(10)","ec8603ff":"for i in range(0,len(df),2):\n    try:\n        df2 = df2.append({'private':float(df[\"data\"][i].replace('\\u200b','')),'public':float(df[\"data\"][i+1].replace('\\u200b',''))},ignore_index=True)\n    except:\n        break\nprint(len(df2))","c0709ecc":"df2 = df2[df2['private']>0.8]\nlength = len(df2)\nprint(length)","8fc0082c":"df2.head(10)","c6320882":"private = df2['private'].to_numpy().reshape(length,1)\npublic = df2['public'].to_numpy().reshape(length,1)","05c62be0":"regr = linear_model.LinearRegression()\nregr.fit(public, private)","3bc4086c":"# plot it as in the example at http:\/\/scikit-learn.org\/\nplt.scatter(public, private,  color='black')\nplt.plot(public, regr.predict(public), color='blue', linewidth=3)\nplt.title(\"Public - Private\")\nplt.xlabel(\"Public\")\nplt.ylabel(\"Private\")\nplt.show()\nprint(regr.coef_)","fe89fefe":"df2 = df2[df2['private']>0.87]\nlength = len(df2)\nprint(length)","cffe8f04":"private = df2['private'].to_numpy().reshape(length,1)\npublic = df2['public'].to_numpy().reshape(length,1)","391e6d14":"regr = linear_model.LinearRegression()\nregr.fit(public, private)","4bd51d3b":"# plot it as in the example at http:\/\/scikit-learn.org\/\nplt.scatter(public, private,  color='black')\nplt.plot(public, regr.predict(public), color='blue', linewidth=3)\nplt.title(\"Public - Private\")\nplt.xlabel(\"Public\")\nplt.ylabel(\"Private\")\nplt.show()\nprint(regr.coef_)","54ed4d07":"# Let's draw the Public - Private graph","5e9e899b":"### Let's just sample the private scores above 0.8","6b2ef0aa":"### What about choose the private scores above 0.87?","c840c966":"### The blue verticle lines indicate all the private scores in Private Leader Board.\n### The red lines indicate the places of 0 and 1","385bbcf6":"\n# Browsing the Private Scores","791c55dc":"# Exploratory Data Analysis\n\n1. Browsing the Private Scores\n2. Regression with our team's personal private-public scores","092f671b":"### We submitted 204 times and only 187 submissions are not failed ones."}}