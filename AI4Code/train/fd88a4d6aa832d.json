{"cell_type":{"fc287d4a":"code","bb10befd":"code","d5c3185d":"code","795e063b":"code","e342da50":"code","40f05fe2":"code","5408111c":"code","8b38bbab":"code","6cf275b4":"code","68a4cbbe":"code","cbe5dfd7":"code","817c131e":"code","b491b8d3":"code","e2a535d3":"code","a68cc924":"code","e384fea1":"code","64b37c66":"code","a5542d0d":"code","5de02f82":"code","5622ea5c":"markdown","d9cfb559":"markdown","3dc13bcf":"markdown","167d9174":"markdown","cf5d36a2":"markdown","3be97cbd":"markdown","efe25ca6":"markdown"},"source":{"fc287d4a":"import numpy as np \nimport pandas as pd\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\nimport matplotlib.pyplot as plt","bb10befd":"data = pd.read_csv(\"\/kaggle\/input\/divorce-predictors-data-set-csv\/divorce-csv.csv\")","d5c3185d":"data.head()","795e063b":"data.describe()","e342da50":"fig = px.imshow(data.corr())\nfig.show()","40f05fe2":"fig = make_subplots(rows=20, cols=3)\n\nfor i, col in enumerate(data.columns):\n    fig.add_trace(go.Histogram(x=data[col], name=col), row=(i\/\/3)+1, col=(i%3)+1)\n    \nfig.update_layout(height=2400,)\n    \nfig.show()","5408111c":"def make_box_plots(data):\n    fig = make_subplots(\n        rows = 20,\n        cols = 3,\n        subplot_titles = data.columns\n    )\n\n    i = 1\n    j = 1\n\n    for col in data.columns:\n        fig.append_trace(go.Box(y=data[:][col]), i, j)\n        if j < 3:\n            j += 1\n        else:\n            j = 1\n            i += 1\n    fig.update_layout(\n        autosize=False,\n        width=1200,\n        height=2400,\n        margin=dict(\n            l=50,\n            r=50,\n            b=100,\n            t=100,\n            pad=4\n        ),\n        paper_bgcolor=\"LightSteelBlue\",\n    )\n    fig.show()\nmake_box_plots(data)","8b38bbab":"from sklearn.linear_model import Perceptron","6cf275b4":"X = data.copy().drop('Class', axis=1)\nX","68a4cbbe":"y = data['Class']\ny","cbe5dfd7":"from sklearn.model_selection import train_test_split","817c131e":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=42)","b491b8d3":"model = Perceptron()\nmodel.fit(X_train, y_train)","e2a535d3":"y_test_predict = model.predict(X_test)","a68cc924":"y_test_predict","e384fea1":"from sklearn.metrics import confusion_matrix","64b37c66":"cm = confusion_matrix(y_test, y_test_predict)\ncm","a5542d0d":"import seaborn as sns\nfigure = plt.figure(figsize=(8, 8))\nsns.heatmap(cm, annot=True,cmap=plt.cm.Blues)\nplt.tight_layout()\nplt.ylabel('True label')\nplt.xlabel('Predicted label')\nplt.show()","5de02f82":"model.score(X_test, y_test)","5622ea5c":"## 4. Muestre sus resultados con una matriz de confusi\u00f3n y un reporte (4pts)","d9cfb559":"# [Ir a Parte A](https:\/\/www.kaggle.com\/acuamarco\/ia02-mrodriguez-1-a)","3dc13bcf":"## 2. Utilice gr\u00e1ficos, histogramas, correlaci\u00f3n, ... (3 pts)","167d9174":"# [Ir a Parte A](https:\/\/www.kaggle.com\/acuamarco\/ia02-mrodriguez-1-a)","cf5d36a2":"## 3. Implemente y Ajuste un Perceptron con Scikitlearn (3 pts)","3be97cbd":"# B. Scikitlearn","efe25ca6":"## 1. Realice un an\u00e1lisis de los datos de entrada"}}