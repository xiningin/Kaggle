{"cell_type":{"2b463169":"code","2ffbc970":"code","0c4bdce7":"code","fd68fcf4":"code","b37e6a39":"code","03d8fbaa":"code","ff24aef9":"code","4f55c77a":"code","600059a2":"code","63cfd20e":"code","16d7f108":"code","e470665e":"code","aa6e7671":"code","3aef08af":"code","a9fdb35e":"code","8ff60b9b":"code","4d6788ff":"code","5d602010":"code","918a7d75":"code","c0d06fee":"code","8a778902":"code","867da0f9":"code","ed6ba58f":"code","1a940953":"code","8bce7baf":"code","8632734a":"code","bf19adb9":"code","e1118eaa":"markdown","ff4ed617":"markdown","0afad3af":"markdown","35b409a9":"markdown","28de3ea1":"markdown","1251d1e8":"markdown","4c2871aa":"markdown","6143a13a":"markdown","8ce1007e":"markdown","b3f8b6c5":"markdown","8694cf76":"markdown","0c47181e":"markdown","36fa95a5":"markdown","3c660fd8":"markdown","ee5d3b10":"markdown","0c809c6c":"markdown","fc6bf63d":"markdown","62ed68a5":"markdown","a6be71c7":"markdown","deaeda08":"markdown","29c631bd":"markdown"},"source":{"2b463169":"import numpy as np\nimport pandas as pd\nfrom matplotlib import pyplot as plt\npd.set_option(\"display.precision\", 2)","2ffbc970":"data = pd.read_csv('..\/input\/titanic_train.csv', index_col='PassengerId')","0c4bdce7":"data.head(5)","fd68fcf4":"data.describe()","b37e6a39":"data[(data['Embarked'] == 'C') & (data.Fare > 200)].head()","03d8fbaa":"data[(data['Embarked'] == 'C') & \n     (data['Fare'] > 200)].sort_values(by='Fare',\n                               ascending=False).head()","ff24aef9":"def age_category(age):\n    '''\n    < 30 -> 1\n    >= 30, <55 -> 2\n    >= 55 -> 3\n    '''\n    if age < 30:\n        return 1\n    elif age < 55:\n        return 2\n    else:\n        return 3","4f55c77a":"age_categories = [age_category(age) for age in data.Age]\ndata['Age_category'] = age_categories","600059a2":"data['Age_category'] = data['Age'].apply(age_category)","63cfd20e":"(data['Sex'] == 'male').sum(), (data['Sex'] == 'female').sum()","16d7f108":"data['Sex'].value_counts()","e470665e":"pd.crosstab(data['Pclass'], data['Sex'], margins=True)","aa6e7671":"data['Pclass'].hist(label='all')\ndata[data['Sex'] == 'male']['Pclass'].hist(color=\"green\", \n                                           label='male')\ndata[data['Sex'] == 'female']['Pclass'].hist(color=\"yellow\", \n                                             label='female')\nplt.title('Distribution by class and gender.')\nplt.xlabel('Pclass')\nplt.ylabel('Frequency')\nplt.legend(loc='upper left');","3aef08af":"print(\"Median fare: \", round(data['Fare'].median(), 2))\nprint(\"Fare std: \", round(data['Fare'].std(), 2))","a9fdb35e":"data[data['Survived'] == 1]['Age'].hist(color=\"green\", \n                                         label='Survived', alpha=.5,\n                                       density=True)\ndata[data['Survived'] == 0]['Age'].hist(color=\"red\", \n                                         label='Died', alpha=.5,\n                                       density=True)\nplt.title('Age for survived and died')\nplt.xlabel('Years')\nplt.ylabel('Frequency')\nplt.legend();","8ff60b9b":"#!conda install seaborn\nimport seaborn as sns\nsns.set()","4d6788ff":"sns.boxplot(data['Survived'], data['Age']);","5d602010":"data.groupby('Survived')['Age'].mean()","918a7d75":"young_survived = data.loc[data['Age'] < 30, 'Survived']\nold_survived = data.loc[data['Age'] > 60, 'Survived']\n\nprint(\"Shares of survived people: \\n\\t  among young {}%, \\n\\t  among old {}%.\".format(\n    round(100 * young_survived.mean(), 1), \n        round(100 * old_survived.mean(), 1)))","c0d06fee":"male_survived = data[data['Sex'] == 'male']['Survived']\nfemale_survived = data[data['Sex'] == 'female']['Survived']\n\n\nprint(\"Shares of survived people: \\n\\t among women {}%, \\n\\t among men {}%\".format(\n    round(100 * female_survived.mean(), 1), round(100 * male_survived.mean(), 1)))","8a778902":"data['Name'].head()","867da0f9":"data.loc[1, 'Name'].split(',')[1].split()[1]","ed6ba58f":"first_names = data.loc[data['Sex'] == 'male', 'Name'].apply(lambda \n                                                            full_name: \n                full_name.split(',')[1].split()[1])\nfirst_names.value_counts().head()","1a940953":"for cl in data['Pclass'].unique():\n    for sex in data['Sex'].unique():\n        print(\"Average age for {0} and class {1}: {2}\".format(sex, cl, \n            round(data[(data['Sex'] == sex)\n                         & (data['Pclass'] == cl)]['Age'].mean(),2)))","8bce7baf":"for (cl, sex), sub_df in data.groupby(['Pclass', 'Sex']):\n    print(\"Average age for {0} and class {1}: {2}\".format(sex, cl,\n                                    round(sub_df['Age'].mean(), 2)))","8632734a":"pd.crosstab(data['Pclass'], data['Sex'], \n            values=data['Age'], aggfunc=np.mean)","bf19adb9":"sns.boxplot(data['Pclass'], data['Age']);","e1118eaa":"And even nicer:","ff4ed617":"**8. How is average age for men\/women dependent on `Pclass`? Choose all correct statements:**\n- **<font color='green'>On average, men of 1 class are older than 40<\/font>**\n- On average, women of 1 class are older than 40\n- **<font color='green'>Men of all classes are on average older than women of the same class<\/font>**\n- **<font color='green'> On average, passengers ofthe first class are older than those of the 2nd class who are older than passengers of the 3rd class<\/font>**","0afad3af":"**7. What's the most popular first name among male passengers?**\n- Charles\n- Thomas\n- **<font color='green'>William<\/font>**\n- John","35b409a9":"**3. What are median and standard deviation of `Fare`?. Round to two decimals.**\n- **<font color='green'>median is  14.45, standard deviation is 49.69<\/font>**\n- median is 15.1, standard deviation is 12.15\n- median is 13.15, standard deviation is 35.3\n- median is  17.43, standard deviation is 39.1","28de3ea1":"**4. Is that true that the mean age of survived people is higher than that of passengers who eventually died?**\n- Yes\n- **<font color='green'>No<\/font>**\n","1251d1e8":"**1. How many men\/women were there onboard?**\n- 412 men and 479 women\n- 314 men \u0438 577 women\n- 479 men \u0438 412 women\n- **<font color='green'>577 men \u0438 314 women<\/font>**","4c2871aa":"Nicer:","6143a13a":"Can't see the difference through eye-balling only. Let's calculate.","8ce1007e":"**Easier:**","b3f8b6c5":"We can plot a picture as well, though it's not necessary here. ","8694cf76":"**2. Print the distribution of the `Pclass` feature. Then the same, but for men and women separately. How many men from second class were there onboard?**\n- 104\n- **<font color='green'>108<\/font>**\n- 112\n- 125","0c47181e":"**Let's select those passengers who embarked in Cherbourg (Embarked=C) and paid > 200 pounds for their ticker (fare > 200).**\n\nMake sure you understand how actually this construction works.","36fa95a5":"**5. Is that true that passengers younger than 30 y.o. survived more frequently than those older than 60 y.o.? What are shares of survived people among young and old people?**\n- 22.7% among young and 40.6% among old\n- **<font color='green'>40.6% among young and 22.7% among old<\/font>**\n- 35.3% among young and 27.4% among old\n- 27.4% among young and  35.3% among old","3c660fd8":"# <center> Topic 1. Exploratory data analysis with Pandas\n## <center>Practice. Analyzing \"Titanic\" passengers. Solution\n\n**Fill in the missing code (\"Your code here\") and choose answers in a [web-form](https:\/\/docs.google.com\/forms\/d\/16EfhpDGPrREry0gfDQdRPjoiQX9IumaL2mPR0rcj19k\/edit).**","ee5d3b10":"![](http:\/\/)**Read data into a Pandas DataFrame**","0c809c6c":"**Another way is to do it with `apply`.**","fc6bf63d":"**Let's create a new feature.**","62ed68a5":"**We can sort these people by Fare in descending order.**","a6be71c7":"**6. Is that true that women survived more frequently than men? What are shares of survived people among men and women?**\n- 30.2% among men and 46.2% among women\n- 35.7% among men and 74.2% among women\n- 21.1% among men and 46.2% among women\n- **<font color='green'>18.9% among men and 74.2% among women<\/font>**","deaeda08":"<center>\n<img src=\"https:\/\/habrastorage.org\/files\/fd4\/502\/43d\/fd450243dd604b81b9713213a247aa20.jpg\" \/>\n    \n## [mlcourse.ai](https:\/\/mlcourse.ai) \u2013 Open Machine Learning Course \n\nAuthor: [Yury Kashnitskiy](https:\/\/yorko.github.io). This material is subject to the terms and conditions of the [Creative Commons CC BY-NC-SA 4.0](https:\/\/creativecommons.org\/licenses\/by-nc-sa\/4.0\/) license. Free use is permitted for any non-commercial purpose.","29c631bd":"**First 5 rows**"}}