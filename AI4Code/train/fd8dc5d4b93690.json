{"cell_type":{"f3464977":"code","1a1c616b":"code","cd7e5011":"code","6ebe6201":"code","d9057323":"code","d2a1763b":"code","1956b64e":"code","3d66a7f4":"code","a0cf8039":"code","393b51ae":"code","047c57b0":"code","aa39877a":"code","842e5d3b":"code","6fd14dcb":"code","69177084":"code","afe4ff30":"code","10888c05":"code","d0b70cb1":"code","96c2c035":"code","26a6a391":"code","65ac47a5":"code","3aec0c2b":"code","3db4c606":"code","f076cc54":"code","647b67cd":"markdown","af5f9fd1":"markdown","402a634f":"markdown","8777342a":"markdown","c0c9927d":"markdown","3de48fdb":"markdown","abb7e002":"markdown"},"source":{"f3464977":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom scipy.stats import zscore\nfrom sklearn.cluster import KMeans\nimport matplotlib.pyplot as plt","1a1c616b":"sns.set(style = 'ticks',color_codes=True)","cd7e5011":"df2 = pd.read_csv('..\/input\/matplotlib-datasets\/iris_dataset.csv')","6ebe6201":"df2","d9057323":"df2.drop('species',axis = 1,inplace = True)","d2a1763b":"df_scaled = df2.apply(zscore)","1956b64e":"sns.pairplot(df_scaled,diag_kind='kde')","3d66a7f4":"clusters_range = range(1,15)\ninertia = []\nfor num_clust in clusters_range:\n  model = KMeans(n_clusters = num_clust,random_state = 2)\n  model.fit(df_scaled)\n  inertia.append(model.inertia_)","a0cf8039":"plt.plot(clusters_range,inertia,marker = 'o')","393b51ae":"kmeans = KMeans(n_clusters=3,random_state=2)\nkmeans.fit(df_scaled)\ndf2['class'] = kmeans.labels_\ndf2","047c57b0":"df2['class'].value_counts()","aa39877a":"sns.pairplot(df2,hue = 'class')","842e5d3b":"from sklearn.cluster import AgglomerativeClustering","6fd14dcb":"agc = AgglomerativeClustering(n_clusters=3)\nagc.fit(df_scaled)","69177084":"df_scaled['agc_class'] = agc.labels_","afe4ff30":"df_scaled['agc_class'].value_counts()","10888c05":"df_scaled","d0b70cb1":"grps = df_scaled.groupby('agc_class')","96c2c035":"grp0 = grps.get_group(0)\ngrp1 = grps.get_group(1)\ngrp2 = grps.get_group(2)","26a6a391":"c0 = np.array([grp0['petal_length'].mean(),grp0['petal_width'].mean(),grp0['sepal_length'].mean(),grp0['sepal_width'].mean()])\nc1 = np.array([grp1['petal_length'].mean(),grp1['petal_width'].mean(),grp1['sepal_length'].mean(),grp1['sepal_width'].mean()])\nc2 = np.array([grp2['petal_length'].mean(),grp2['petal_width'].mean(),grp2['sepal_length'].mean(),grp2['sepal_width'].mean()])","65ac47a5":"df_scaled.columns","3aec0c2b":"inertia_0 = np.sum(((grp0['petal_length'] - c0[0])**2) + ((grp0['petal_width'] - c0[1])**2) + ((grp0['sepal_length'] - c0[2])**2) + ((grp0['sepal_width'] - c0[3])**2))\ninertia_1 = np.sum(((grp1['petal_length'] - c1[0])**2) + ((grp1['petal_width'] - c1[1])**2) + ((grp1['sepal_length'] - c1[2])**2) + ((grp1['sepal_width'] - c1[3])**2))\ninertia_2 = np.sum(((grp2['petal_length'] - c2[0])**2) + ((grp2['petal_width'] - c2[1])**2) + ((grp2['sepal_length'] - c2[2])**2) + ((grp2['sepal_width'] - c2[3])**2))\ntotal_inertia = inertia_0 + inertia_1 + inertia_2\ntotal_inertia","3db4c606":"df_scaled.drop('agc_class',axis = 1,inplace = True)","f076cc54":"from scipy.cluster.hierarchy import dendrogram,linkage\nplt.figure(figsize=(10,5))\nplt.xlabel('sample index')\nplt.ylabel('distance')\nz = linkage(df_scaled,method='ward')\ndendrogram(z,leaf_rotation=90,p = 5,color_threshold=10,leaf_font_size=10,truncate_mode='level')\nplt.tight_layout()","647b67cd":"***Please UpVote if you like the work!!!***","af5f9fd1":"# Agglomerative Clustering on Iris Dataset","402a634f":"As we can see, at k = 3, the inertia values starts reducing at a constant rate. So we select k = 3 and build our kmeans model.","8777342a":"# KMeans on Iris Dataset","c0c9927d":"The total inertia for agglomerative clustering at k = 3 is 150.12 whereas for kmeans clustering its 140.96\n\nHence we can conclude that for iris dataset kmeans is better clustering option as compared to agglomerative clustering as inertia is low for kmeans.","3de48fdb":"***Please UpVote if you like the work!!!***","abb7e002":"The total inertia for kmeans at k = 3 is 140.96"}}