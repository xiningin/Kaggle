{"cell_type":{"30b8bb58":"code","fd5ec81f":"code","27fcd3dd":"code","744f1a9d":"code","ab2eaeca":"code","b1d7a3ba":"code","e81145da":"code","c7e21da9":"code","2cbfe3f1":"code","ae643810":"code","ff3fa68a":"code","133a6819":"code","50361ada":"code","7916443a":"code","a71af6f2":"code","e240eef9":"code","fba9c586":"code","3e06a33c":"code","5a25d4e1":"code","49054973":"code","b67b68cf":"code","3c84cbb8":"code","2e85323b":"code","dcecf0ea":"code","e7efd15d":"code","7c1a758f":"code","4e70b071":"markdown","4762790d":"markdown","5347d792":"markdown","6375e2bd":"markdown","372138ba":"markdown","718d48ee":"markdown","3a4f170e":"markdown","1f390a53":"markdown","a2c0ff84":"markdown","f8cff99f":"markdown"},"source":{"30b8bb58":"import numpy as np\nimport pandas as pd\n# plotting stuff\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\ncolorMap = sns.light_palette(\"blue\", as_cmap=True)\nimport datatable as dt\n# misc\nimport missingno as msno\n# system\nimport warnings\nwarnings.filterwarnings('ignore')\n# garbage collector to keep RAM in check\nimport gc  \nimport matplotlib.gridspec as gridspec\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","fd5ec81f":"!wc -l ..\/input\/pakistans-largest-ecommerce-dataset\/*.csv","27fcd3dd":"df = dt.fread('\/kaggle\/input\/pakistans-largest-ecommerce-dataset\/Pakistan Largest Ecommerce Dataset.csv').to_pandas()\ndf.head(10)","744f1a9d":"df.info()","ab2eaeca":"# Number of rows and columns in the Data set\ndf.shape","b1d7a3ba":"# check the rows have null values in dataset\ndf[pd.isnull(df).any(axis=1)]","e81145da":"df[df.duplicated(['item_id'])].head(5)","c7e21da9":"print(\"Unique Status : \")\nprint(df['status'].unique())\nprint(\"Unique Status Value Count: \")\nprint(df['status'].value_counts())","2cbfe3f1":"df.loc[df['status'] == \"\",'status'] = \"unknown\"","ae643810":"#print(df[df['status'] == \"\"][\"status\"].value_counts())","ff3fa68a":"px.histogram(df, x = 'status', width = 800, height = 500, title = 'Frequency of Order Status')","133a6819":"fig = px.histogram(df, x=\"status\", color=\"category_name_1\")\nfig.update_layout(title_text='Order status with Respect to category name',\n                   xaxis_title_text='Order Status', \n    yaxis_title_text='Count')\nfig.show()","50361ada":"n = df.groupby(['status'])['grand_total'].sum().reset_index()\nfig = px.bar(n, y='grand_total', x='status', text='grand_total',color =\"status\")\nfig.update_traces(texttemplate='%{text:.2s}', textposition='outside')\nfig.update_layout(uniformtext_minsize=8, uniformtext_mode='hide')\nfig.show()\n","7916443a":"n = df.groupby(['created_at' ,'status'])['grand_total'].sum().reset_index()\npx.box(n, y=\"grand_total\", color = \"status\")","a71af6f2":"df.loc[df['category_name_1'] == \"\",'category_name_1'] = \"unknown\"","e240eef9":"px.histogram(df, x = 'category_name_1', width = 800, height = 500, title = 'Frequency of category name')","fba9c586":"n = df.groupby(['category_name_1'])['grand_total'].sum().reset_index()\nfig = px.bar(n, y='grand_total', x='category_name_1', text='grand_total',color='category_name_1')\nfig.update_traces(texttemplate='%{text:.2s}', textposition='outside')\nfig.update_layout(uniformtext_minsize=8, uniformtext_mode='hide')\nfig.show()\n","3e06a33c":"n = df.groupby(['created_at' ,'category_name_1'])['grand_total'].sum().reset_index()\npx.box(n, y=\"grand_total\", color = \"category_name_1\")","5a25d4e1":"px.histogram(df, x = 'payment_method', width = 800, height = 500, title = 'Frequency of payment method')","49054973":"n = df.groupby(['payment_method'])['grand_total'].sum().reset_index()\nfig = px.bar(n, y='grand_total', x='payment_method', text='grand_total',color =\"payment_method\")\nfig.update_traces(texttemplate='%{text:.2s}', textposition='outside')\nfig.update_layout(uniformtext_minsize=8, uniformtext_mode='hide')\nfig.show()\n","b67b68cf":"fig = px.histogram(df, x=\"status\", color=\"payment_method\")\nfig.update_layout(title_text='Order status with Respect to payment_method',\n                   xaxis_title_text='Order Status',     yaxis_title_text='Count')\nfig.show()\n\n\n","3c84cbb8":"n = df.groupby(['Year' ,'status'])['grand_total'].sum().reset_index()\nfig = px.bar(n, x=\"Year\", y=\"grand_total\", color=\"status\", title=\"Graand Total w.r.t status and year\")\nfig.show()","2e85323b":"n = df.groupby(['Year' ,'payment_method'])['grand_total'].sum().reset_index()\nfig = px.bar(n, x=\"Year\", y=\"grand_total\", color=\"payment_method\", title=\"Graand Total w.r.t payment_method and year\")\nfig.show()","dcecf0ea":"fig = go.Figure(px.funnel_area(names=df[\"status\"],values=df[\"grand_total\"]))\nfig.show()","e7efd15d":"label = ['Year',\n         '2016','2017','2018',\n         'Status', 'Status', 'Status',\n         'canceled', 'closed', 'cod', 'complete', 'exchange', 'fraud', 'holded', 'order_refunded', 'paid', 'payment_review', 'pending', 'pending_paypal', 'processing', 'received', 'refund',\n         'canceled', 'closed', 'cod', 'complete', 'exchange', 'fraud', 'holded', 'order_refunded', 'paid', 'payment_review', 'pending', 'pending_paypal', 'processing', 'received', 'refund',\n         'canceled', 'closed', 'cod', 'complete', 'exchange', 'fraud', 'holded', 'order_refunded', 'paid', 'payment_review', 'pending', 'pending_paypal', 'processing', 'received', 'refund'\n         ]\n\n\nsource = [0, 0, 0, 1, 2, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n         6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,] \n\ntarget = [1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,\n         37,38,39,40,41,42,43,44,45,46,47,48,49,50,51]\n\nvalue  = [1, 1, 1, 1, 1, 1, 39264,212,0,74610,4,7,6,14053,0,0,0,0,0,2885,2868,94981,186,1621,123489,0,3,0,32541,599,0,0,7,0,34119,3370,\n         66896,96,1234,35585,0,0,25,12911,560,57,48,0,33,40281,1790] \n","7c1a758f":"# data to dict, dict to sankey\nlink = dict(source = source, target = target, value = value)\nnode = dict(label = label, pad=50, thickness=5)\ndata = go.Sankey(link = link, node=node)\n# plot\nfig = go.Figure(data)\nfig.show()","4e70b071":"**There is big number 464066 of order status unknown.**","4762790d":"# Data Overview","5347d792":"# Payment Method","6375e2bd":"**This is first version of EDA. Other modeling Work in progress and if you like my work do \"up vote\"**","372138ba":"There are too many NaN values","718d48ee":"# Category Name","3a4f170e":"\n**Please upvote if you find this notebook helpful! \ud83d\ude0a Thank you! I would also be very happy to receive feedback on my work.**","1f390a53":"#      Kindly hold on it will take few seconds to load full Notebook","a2c0ff84":"\n\n# Data Description\n\nThis is the largest retail e-commerce orders dataset from Pakistan. It contains half a million transaction records from March 2016 to August 2018. The data was collected from various e-commerce merchants as part of a research study.\n\nGeography: Pakistan\n\nTime period: 03\/2016 \u2013 08\/2018\n\nUnit of analysis: E-Commerce Orders\n\nDataset: The dataset contains detailed information of half a million e-commerce orders in Pakistan from March 2016 to August 2018. It contains item details, shipping method, payment method like credit card, Easy-Paisa, Jazz-Cash, cash-on-delivery, product categories like fashion, mobile, electronics, appliance etc., date of order, SKU, price, quantity, total and customer ID. This is the most detailed dataset about e-commerce in Pakistan that you can find in the Public domain.\n\nVariables: The dataset contains Item ID, Order Status (Completed, Cancelled, Refund), Date of Order, SKU, Price, Quantity, Grand Total, Category, Payment Method and Customer ID.\nSize: 101 MB\nFile Type: CSV","f8cff99f":"# Order Status"}}