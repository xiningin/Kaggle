{"cell_type":{"8afa32e7":"code","806023f0":"code","6f6e2e68":"code","9f2663f9":"code","b0541072":"code","8444718f":"code","9a50f283":"code","dcc0f283":"code","9118674e":"code","b965b647":"code","275c4210":"code","dd4bbda2":"code","203b564a":"code","ef6bf25a":"code","34de9656":"code","8e9442d8":"code","82e936f8":"code","1e5849a4":"code","8e0ee714":"code","dacd2400":"code","78965437":"code","c3d07d69":"code","5481aa46":"code","41238657":"code","faf4a115":"code","e3f67c2d":"code","44a6a0ff":"code","042f9eac":"code","c302fd4e":"code","7829c9d3":"code","15ff2852":"code","8608fa94":"code","50dd3574":"code","80f1588a":"code","f38b0c81":"code","623964b6":"code","c1573ff6":"code","c41a7721":"code","d5f54e9c":"code","0d6dbc1b":"code","19c9ff4e":"markdown","767cad21":"markdown","4df0e2d4":"markdown","c104d226":"markdown"},"source":{"8afa32e7":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt # this is used for the plot the graph \nimport seaborn as sns # used for plot interactive graph.\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom pylab import rcParams\n# figure size in inches\n%matplotlib inline\nimport plotly.graph_objs as go\nimport plotly\nplotly.offline.init_notebook_mode()","806023f0":"df = pd.read_csv('..\/input\/india-data-worldbank\/india_data.csv',index_col=0)\ndf_area = pd.read_csv('..\/input\/area-data\/land_area.csv',index_col=0)\ndf_population = pd.read_csv('..\/input\/worldpopulation\/world_population.csv',index_col=0)\ndf_pop_india = pd.read_csv('..\/input\/indiapopulation\/population_india.csv',index_col=0)\ndf_land_usage = pd.read_csv('..\/input\/india-land-usage\/india_land_usage.csv',index_col=0)","6f6e2e68":"df_area.head()","9f2663f9":"rcParams['figure.figsize'] = 20, 12\nx = df_area[\"2018\"].sort_values(ascending=False)\ny = x[x > x.mean()]\nax = plt.barh(y.index , y\/1000000,alpha=0.7,label=\"Countries with Area\")\nhighlight = 'India'\npos = y.index.get_loc(highlight)\nax.patches[pos].set_facecolor('#aa3333')\nplt.xlabel('Land area (x million sq. km) ')\nplt.ylabel('Country Name')\nplt.style.use('fivethirtyeight')\nplt.xticks(rotation = 90)\nplt.grid(True)\nplt.legend()\nplt.tight_layout()\nplt.show()\n","b0541072":"x = df_area[\"2018\"].sort_values(ascending=False)\ndata = dict(type = 'choropleth',\n            locations = x.index,\n            locationmode = 'country names',\n            colorscale= 'Portland',\n            text= x.index,\n            z=x,\n            colorbar = {'title':'Area - Million Sq. Km.', 'len':200,'lenmode':'pixels' })\nlayout = dict(geo = {'scope':'world'},title=\"Area\")\ncol_map = go.Figure(data = [data],layout = layout)\ncol_map.show()","8444718f":"df_population.head()","9a50f283":"rcParams['figure.figsize'] = 16, 8\ndfinworld = df_population[(df_population.index==\"World\") |(df_population.index==\"India\") | (df_population.index==\"China\")].T\ndfinworld1 = dfinworld.drop([\"Country Code\",\"Indicator Name\"])\ndfinworld1[\"RoW\"] = dfinworld1[\"World\"] - dfinworld1[\"India\"]\nplt.plot(dfinworld1[\"RoW\"],linestyle='solid',marker='o',label=\"Rest of World Population\")\nplt.plot(dfinworld1[\"India\"],linestyle='solid',marker='o',label=\"Indian Population\")\nplt.plot(dfinworld1[\"World\"],linestyle='dashed',marker='.',label=\"World Population\")\nplt.plot(dfinworld1[\"China\"],linestyle='dashed',marker='.',label=\"China Population\")\nplt.xlabel('Year', fontsize=20)\nplt.ylabel('Population', fontsize=20)\nplt.title('Population growth in India compared by the World', fontsize=20)\nplt.xticks(rotation = 90)\nplt.style.use('fivethirtyeight')\nplt.grid(True)\nplt.legend()\nplt.tight_layout()","dcc0f283":"rcParams['figure.figsize'] = 20, 12\nx = df_population[df_population.index != \"World\"][\"2018\"].sort_values(ascending=False)\nz = x[x > x.mean()]\nax = plt.barh(z.index , z,alpha=0.7,label=\"Population of Countries\")\nhighlight = 'India'\npos = z.index.get_loc(highlight)\nax.patches[pos].set_facecolor('#aa3333')\nplt.xlabel('Population (x million) ')\nplt.ylabel('Country Name')\nplt.style.use('fivethirtyeight')\nplt.xticks(rotation = 90)\nplt.grid(True)\nplt.legend()\nplt.tight_layout()\nplt.show()","9118674e":"x = df_population[\"2018\"]\ny = (x\/x.max())*100\nz = y[y.index != \"World\"].sort_values(ascending=False)\n#Plotting on the WorldMap using plotly\ndata = dict(type = 'choropleth',\n            locations = z.index,\n            locationmode = 'country names',\n            colorscale= 'Portland',\n            text= z.index,\n            z=z,\n            colorbar = {'title':'Population %', 'len':200,'lenmode':'pixels' })\nlayout = dict(geo = {'scope':'world'},title=\"Population around the world\")\ncol_map = go.Figure(data = [data],layout = layout)\ncol_map.show()","b965b647":"df_land_usage1  = df_land_usage.T\ndf_land_usage2 = df_land_usage1.fillna(method='bfill')\ncols = ['Agricultural_land_percent','Forest_area_percent', 'Terrestrial_protected_areas_percent']\nfor col in cols:\n    plt.plot(df_land_usage2[col],linestyle='solid',marker='o',label=col)\nplt.legend()\nplt.title(\"Land Usage Growth\")\nplt.xlabel('Year')  \nplt.ylabel('%age of Area')\nplt.xticks(rotation = 90)\nplt.legend()\nplt.show()  ","275c4210":"df1 = df_population[\"2018\"]\ndf2 = df_area[\"2018\"]","dd4bbda2":"df1.head()","203b564a":"df2.head()","ef6bf25a":"dfn1 = pd.merge(left=df1, right=df2, left_on='Country Name', right_on='Country Name')","34de9656":"dfn1.rename(columns={'2018_x': 'population','2018_y':'area'}, inplace=True)","8e9442d8":"dfn1.head()","82e936f8":"dfn1[\"density\"] = dfn1[\"population\"]\/dfn1[\"area\"]","1e5849a4":"df_pop  = df_pop_india.T","8e0ee714":"df_pop.isna().sum()","dacd2400":"df_pop.fillna(method='ffill', inplace=True)","78965437":"df_pop.head()","c3d07d69":"rcParams['figure.figsize'] = 16, 8\nwidth = 0.25 \nplt.plot(df_pop[\"Population, total\"],linestyle='solid',marker='o',label=\"Population, total\")\nx_indexes = np.arange(len(df_pop.index))\nplt.bar(x_indexes-width,df_pop[\"Population, male\"],  width+0.10, label=\"Population, male\")\nplt.bar(df_pop.index,df_pop[\"Population, female\"],width+0.10, label=\"Population, female\")\nplt.xlabel('Year', fontsize=20)\nplt.ylabel('Population', fontsize=20)\nplt.title('Population growth in India\/ Gender Wise', fontsize=20)\nplt.xticks(rotation = 90)\nplt.style.use('fivethirtyeight')\nplt.grid(True)\nplt.legend()\nplt.tight_layout()","5481aa46":"df_pop.head()","41238657":"cols = df_pop.columns\nfor col in cols:\n    if ((\"ages\" in col) & (\"total\" in col)) :\n        plt.plot(df_pop[col],linestyle='solid',marker='o',label=col)\nplt.xlabel('Year', fontsize=20)\nplt.ylabel('Population', fontsize=20)\nplt.title('Age distribution variation of Population - All Gender', fontsize=20)\nplt.xticks(rotation = 90)\nplt.style.use('fivethirtyeight')\nplt.grid(True)\nplt.legend()\nplt.tight_layout()\n","faf4a115":"cats = ['Population ages 00-04, female (% of female population)',\n'Population ages 00-04, male (% of male population)',\n'Population ages 05-09, female (% of female population)',\n'Population ages 05-09, male (% of male population)',\n'Population ages 10-14, female (% of female population)',\n'Population ages 10-14, male (% of male population)',\n'Population ages 15-19, female (% of female population)',\n'Population ages 15-19, male (% of male population)',\n'Population ages 20-24, female (% of female population)',\n'Population ages 20-24, male (% of male population)',\n'Population ages 25-29, female (% of female population)',\n'Population ages 25-29, male (% of male population)',\n'Population ages 30-34, female (% of female population)',\n'Population ages 30-34, male (% of male population)',\n'Population ages 35-39, female (% of female population)',\n'Population ages 35-39, male (% of male population)',\n'Population ages 40-44, female (% of female population)',\n'Population ages 40-44, male (% of male population)',\n'Population ages 45-49, female (% of female population)',\n'Population ages 45-49, male (% of male population)',\n'Population ages 50-54, female (% of female population)',\n'Population ages 50-54, male (% of male population)',\n'Population ages 55-59, female (% of female population)',\n'Population ages 55-59, male (% of male population)',\n'Population ages 60-64, female (% of female population)',\n'Population ages 60-64, male (% of male population)',\n'Population ages 65-69, female (% of female population)',\n'Population ages 65-69, male (% of male population)',\n'Population ages 70-74, female (% of female population)',\n'Population ages 70-74, male (% of male population)',\n'Population ages 75-79, female (% of female population)',\n'Population ages 75-79, male (% of male population)',\n'Population ages 80 and above, female (% of female population)',\n'Population ages 80 and above, male (% of male population)']","e3f67c2d":"df_ages = df_pop[cats]","44a6a0ff":"df_ages","042f9eac":"df_ages1 = df_ages.rename(columns=lambda x: x.split(',')[1].split(\" \")[1] +\" age \" + x.split(',')[0].split(\" \")[-1])","c302fd4e":"df_ages2 = df_ages1.T[\"2018\"]","7829c9d3":"df_ages3 = df_ages2.to_frame()","15ff2852":"df_ages3[\"x\"] = df_ages3.index","8608fa94":"df_ages3[\"gender\"] = df_ages3[\"x\"].apply(lambda x:x.split(\" \")[0])","50dd3574":"df_ages3[\"age-group\"] = df_ages3[\"x\"].apply(lambda x:x.split(\" \")[-1])","80f1588a":"df_ages4 = df_ages3.drop([\"x\"],axis=\"columns\")","f38b0c81":"df_ages4.rename(columns={\"2018\":\"percent\"},inplace=True)","623964b6":"x = df_ages4[df_ages4.gender == \"male\"]\ny = df_ages4[df_ages4.gender == \"female\"]\nlabels = x[\"age-group\"]\nplt.bar(labels, x.percent, color=\"#6c3376\" , label = \"Males\")\nplt.bar(labels, y.percent, bottom=x.percent, color=\"#f3e151\" , label = \"Females\")\nplt.xlabel('Age Group')  \nplt.ylabel('%age of population')\nplt.legend()\nplt.show()  \n","c1573ff6":"def get_age_low(x):\n    if(x == \"above\"):\n        return float(80)\n    else:\n        return float(x.split(\"-\")[0])\ndf_ages4[\"low_age\"] = df_ages4[\"age-group\"].apply(lambda x:get_age_low(x))","c41a7721":"def annotate_age_type(x):\n    if x <= 5:\n        return \"toddlers\"\n    elif (x > 5) & (x <= 10):\n        return \"kids\"\n    elif (x > 10) & (x <= 19):\n        return \"teenager\"\n    elif (x > 19) & (x <= 35):\n        return \"young\"\n    elif (x > 35) & (x <= 55):\n        return \"middle\"\n    elif (x > 55) & (x <= 70):\n        return \"old\"\n    else:\n        return \"too old\"\ndf_ages4[\"age_type\"] = df_ages4[\"low_age\"].apply(lambda x:annotate_age_type(x))","d5f54e9c":"x = df_ages4[df_ages4.gender == \"male\"]\ny = df_ages4[df_ages4.gender == \"female\"]\nlabels = x[\"age_type\"]\nplt.bar(labels, x.percent, color=\"#6c3376\" , label = \"Males\")\nplt.bar(labels, y.percent, bottom=x.percent, color=\"#f3e151\" , label = \"Females\")\nplt.xlabel('Age Group')  \nplt.ylabel('%age of population')\nplt.legend()\nplt.show()  ","0d6dbc1b":"x = dfn1[\"density\"].sort_values(ascending=False)\nz = x[x > x.mean()]\nax = plt.barh(z.index , z,alpha=0.7,label=\"Population Density\")\nhighlight = 'India'\npos = z.index.get_loc(highlight)\nax.patches[pos].set_facecolor('#aa3333')\nplt.xlabel('Number of People\/ Sq. Km.')\nplt.ylabel('Country Name')\nplt.style.use('fivethirtyeight')\nplt.xticks(rotation = 90)\nplt.grid(True)\nplt.legend()\nplt.tight_layout()\nplt.show()","19c9ff4e":"# Population Density","767cad21":"# Population","4df0e2d4":"# India - The country visualized\n\nSource - Data from WorldBank and other inputs available on Kaggle. \n\nDisclaimer - This notebook is only for learning purpose and is updated regularly.\n\n[1. Area](http:\/\/)\n\n","c104d226":"# Area"}}