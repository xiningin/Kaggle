{"cell_type":{"f7486420":"code","232a2b46":"code","76ce7159":"code","0a7427e9":"code","3e96936b":"code","9a9e0314":"code","d3fba047":"code","c38ec143":"code","fe4725d5":"code","00b8aa2c":"code","54183f9a":"code","9adbe2b7":"code","5523ffed":"code","2f9de637":"code","e4ae7f27":"code","b922636f":"code","9abdccd2":"code","78daa6e3":"code","c7558c97":"code","10cdeed1":"code","add4268b":"code","25d7da91":"code","7fd5979b":"code","1795f755":"code","928094b7":"code","3fbea78f":"code","0b1ffee2":"code","729b7606":"code","f0b0712d":"code","65f6ec37":"code","8ec074ec":"code","a1bb4c38":"code","2c4154f7":"code","d1696cca":"code","4be8c8db":"code","08604caa":"code","143e54ac":"code","1c8ce05c":"code","f90358d1":"code","85f77f37":"code","9b0c8868":"code","988929ac":"code","4110f605":"code","f6b9ccd4":"code","f53d18c6":"code","cc1c3314":"code","28656e02":"code","0938278d":"code","fd002308":"code","9d95182c":"code","6cde1410":"code","10c0170a":"code","94a3bf93":"code","d0c2574d":"code","d224aaaf":"code","1ba52d53":"code","eef8e478":"code","560d367a":"code","78e36ae0":"code","fa452aa7":"code","08ab9e0d":"code","57bdfe8b":"code","b60bb652":"code","4103fb0f":"code","07922c5a":"code","a4bbe72c":"code","92d25287":"code","be56bb66":"code","ce36bd18":"code","28c79c8a":"code","2af34270":"code","df7176b8":"code","b8688f84":"code","c82d18be":"markdown","29ae5155":"markdown"},"source":{"f7486420":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.cluster import KMeans\nimport matplotlib.pyplot as plt\nimport seaborn as sb\nimport plotly.express as px\nfrom plotly.offline import plot, iplot, init_notebook_mode\nimport plotly.graph_objs as go\ninit_notebook_mode(connected=True)\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","232a2b46":"df=pd.read_csv('..\/input\/customer-personality-analysis\/marketing_campaign.csv',header=0,sep='\\t')\nDF=df.copy()","76ce7159":"DF.info()","0a7427e9":"DF.head()","3e96936b":"DF['Age']=2021-DF['Year_Birth']\nDF['Age'].head()","9a9e0314":"DF['Education'].value_counts()","d3fba047":"DF['Education']=DF['Education'].replace(['2n Cycle','Graduation','Master','PhD','Basic'],[2,3,4,5,1])","c38ec143":"DF['Education'].value_counts()","fe4725d5":"DF['Marital_Status'].value_counts()","00b8aa2c":"DF['Marital_Status']=DF['Marital_Status'].replace(['Alone','Absurd','YOLO'],['Single','Single','Single'])","54183f9a":"df.head()","9adbe2b7":"df['LifeTime with company']=2021-pd.to_datetime(df['Dt_Customer']).dt.year\ndf['LifeTime with company']","5523ffed":"DF.info()","2f9de637":"DF['Z_CostContact'].value_counts()","e4ae7f27":"DF.drop('Z_CostContact',axis=1,inplace=True)","b922636f":"DF['Z_Revenue'].value_counts()","9abdccd2":"DF.drop('Z_Revenue',axis=1,inplace=True)","78daa6e3":"DF['Complain'].value_counts()","c7558c97":"DF['Income']=DF['Income'].replace(np.nan,DF['Income'].mean())","10cdeed1":"DF['Dt_Customer']=pd.to_datetime(DF['Dt_Customer'])\nDF['CustomerLifeTime']=2021-DF['Dt_Customer'].dt.year","add4268b":"#DF=DF.drop(index=2233)\n#Cluster2=DF.query('ID==9432')\n#Cluster2","25d7da91":"X=DF.iloc[:,1:] \nX.drop(['Year_Birth','Marital_Status','Dt_Customer'],axis=1,inplace=True)","7fd5979b":"X.info()","1795f755":"(X['Education']).dtypes","928094b7":"X=DF.iloc[:,1:] \nX.drop(['Year_Birth','Marital_Status','Dt_Customer'],axis=1,inplace=True)\nkmeans = KMeans(n_clusters=4, random_state=0).fit(X)\nkmeans.labels_\nDF['cluster']=pd.Series(kmeans.labels_)","3fbea78f":"DF['cluster'].value_counts()","0b1ffee2":"pd.isna(DF['cluster'])","729b7606":"Cluster2=DF.query('cluster==2')\nCluster2","f0b0712d":"DF.groupby(\"cluster\").mean().to_csv('clusters.csv')","65f6ec37":"DF['cluster']","8ec074ec":"DF['cluster']=DF['cluster'].replace([0.0,1.0,3.0,2.0],['Group A','Group B','Group C','Outlier'])","a1bb4c38":"DF.groupby(\"cluster\").mean()","2c4154f7":"DF.info()","d1696cca":"Group_A=DF.query('cluster==\"Group A\"')\nGroup_B=DF.query('cluster==\"Group B\"')\nGroup_C=DF.query('cluster==\"Group C\"')","4be8c8db":"fig,axi=plt.subplots(1,3,figsize=(16,6))\naxi[0].hist(Group_A['Age'])\naxi[0].set_title(\"Group A\")\naxi[1].hist(Group_B['Age'])\naxi[1].set_title(\"Group B\")\naxi[2].hist(Group_C['Age'])\naxi[2].set_title(\"Group C\")\nfig.suptitle(\"Age distrbution of Each group\")\nplt.show()","08604caa":"#DF.drop(DF['cluster']==\"Outlier\")\nDF=DF[DF['cluster']!=\"Outlier\"]","143e54ac":"SortedbyGroup=DF.groupby('cluster').mean()","1c8ce05c":"def Bar(X,Y,title,xlabel,ylabel):\n    plt.bar(X,Y)\n    plt.title(title)\n    plt.ylabel(xlabel)\n    plt.xlabel(ylabel)\n    plt.show()","f90358d1":"Bar(SortedbyGroup.index,SortedbyGroup['Income'].values,\"The mean income of each group\",\"Income\",\"Groups\")","85f77f37":"import seaborn as sb \ncount=DF.groupby(['cluster','Marital_Status']).size()\ncount=count.reset_index(name='count')\ncount=count.pivot(index='cluster',columns='Marital_Status',values='count')\ncount","9b0c8868":"DF.cluster.value_counts()","988929ac":"plt.figure(figsize=(12,6))\nsb.countplot(data=DF,x='cluster',hue='Marital_Status')\nplt.title(\"Thr Marital starus of each group\")\nplt.xlabel(\"Group\")\nplt.ylabel(\"Count of each Marital Status\")\nplt.show()","4110f605":"DF['Education']=DF['Education'].replace([2,3,4,5,1],['2n Cycle','Graduation','Master','PhD','Basic'])","f6b9ccd4":"DF['cluster'].value_counts()","f53d18c6":"plt.figure(figsize=(12,6))\nsb.countplot(data=DF,x='cluster',hue='Education')\nplt.title(\"Thr Education of each group\")\nplt.xlabel(\"Group\")\nplt.ylabel(\"Count of each Marital Status\")\nplt.show()","cc1c3314":"DF.info()","28656e02":"plt.figure(figsize=(12,6))\nsb.countplot(data=DF,x='cluster',hue='Kidhome')\nplt.title(\"The kidhome of each group\")\nplt.xlabel(\"Group\")\nplt.ylabel(\"Count of each kidhome\")\nplt.show()","0938278d":"plt.figure(figsize=(12,6))\nsb.countplot(data=DF,x='cluster',hue='Teenhome')\nplt.title(\"The Teenhome of each group\")\nplt.xlabel(\"Group\")\nplt.ylabel(\"Count of each Teenhome\")\nplt.show()","fd002308":"DF.groupby('cluster').mean()['Recency']","9d95182c":"plt.bar(DF.groupby('cluster').mean()['Recency'].index,DF.groupby('cluster').mean()['Recency'])","6cde1410":"plt.bar(DF.groupby('cluster').mean()['MntWines'].index,DF.groupby('cluster').mean()['MntWines'])\nplt.title(\"Mean amount spent on wine in last 2 years for each group\")\nplt.xlabel(\"Group\")\nplt.ylabel(\"Mean\")\nplt.show()","10c0170a":"plt.bar(DF.groupby('cluster').mean()['MntFruits'].index,DF.groupby('cluster').mean()['MntFruits'])\nplt.title(\"Mean amount spent on fruits in last 2 years for each group\")\nplt.xlabel(\"Group\")\nplt.ylabel(\"Mean\")\nplt.show()","94a3bf93":"plt.bar(DF.groupby('cluster').mean()['MntMeatProducts'].index,DF.groupby('cluster').mean()['MntMeatProducts'])\nplt.title(\"Mean amount spent on meat products in last 2 years for each group\")\nplt.xlabel(\"Group\")\nplt.ylabel(\"Mean\")\nplt.show()","d0c2574d":"plt.bar(DF.groupby('cluster').mean()['MntFishProducts'].index,DF.groupby('cluster').mean()['MntFishProducts'])\nplt.title(\"Mean amount spent on fish products in last 2 years for each group\")\nplt.xlabel(\"Group\")\nplt.ylabel(\"Mean\")\nplt.show()","d224aaaf":"plt.bar(DF.groupby('cluster').mean()['MntSweetProducts'].index,DF.groupby('cluster').mean()['MntSweetProducts'])\nplt.title(\"Mean amount spent on Sweet Products in last 2 years for each group\")\nplt.xlabel(\"Group\")\nplt.ylabel(\"Mean\")\nplt.show()","1ba52d53":"plt.bar(DF.groupby('cluster').mean()['MntGoldProds'].index,DF.groupby('cluster').mean()['MntGoldProds'])\nplt.title(\"Mean amount spent on Gold Products in last 2 years for each group\")\nplt.xlabel(\"Group\")\nplt.ylabel(\"Mean\")\nplt.show()","eef8e478":"plt.bar(DF.groupby('cluster').mean()['NumDealsPurchases'].index,DF.groupby('cluster').mean()['NumDealsPurchases'])\nplt.title(\"Mean Nummber of Deals Purchases\")\nplt.xlabel(\"Group\")\nplt.ylabel(\"Mean\")\nplt.show()","560d367a":"fig=px.bar(DF,x='cluster',y='NumDealsPurchases')\nfig.show()\nplt.title(\"Mean amount spent on Sweet Products in last 2 years for each group\")\nplt.xlabel(\"Group\")\nplt.ylabel(\"Mean\")\nplt.show()","78e36ae0":"fig=px.bar(DF,x='cluster',y='NumDealsPurchases')\nfig.show()\nplt.title(\"Mean amount spent on Sweet Products in last 2 years for each group\")\nplt.xlabel(\"Group\")\nplt.ylabel(\"Mean\")\nplt.show()","fa452aa7":"plt.bar(DF.groupby('cluster').mean()['AcceptedCmp1'].index,DF.groupby('cluster').mean()['AcceptedCmp1'])\nplt.title(\"Mean Accepted Cmpagine 1\")\nplt.xlabel(\"Group\")\nplt.ylabel(\"Mean\")\nplt.show()","08ab9e0d":"plt.bar(DF.groupby('cluster').mean()['AcceptedCmp2'].index,DF.groupby('cluster').mean()['AcceptedCmp2'])\nplt.title(\"Mean Accepted Cmpagine 2\")\nplt.xlabel(\"Group\")\nplt.ylabel(\"Mean\")\nplt.show()","57bdfe8b":"plt.bar(DF.groupby('cluster').mean()['AcceptedCmp3'].index,DF.groupby('cluster').mean()['AcceptedCmp3'])\nplt.title(\"Mean Accepted Cmpagine 3\")\nplt.xlabel(\"Group\")\nplt.ylabel(\"Mean\")\nplt.show()","b60bb652":"plt.bar(DF.groupby('cluster').mean()['AcceptedCmp4'].index,DF.groupby('cluster').mean()['AcceptedCmp4'])\nplt.title(\"Mean Accepted Cmpagine 4\")\nplt.xlabel(\"Group\")\nplt.ylabel(\"Mean\")\nplt.show()","4103fb0f":"plt.bar(DF.groupby('cluster').mean()['AcceptedCmp5'].index,DF.groupby('cluster').mean()['AcceptedCmp5'])\nplt.title(\"Mean Accepted Cmpagine 5\")\nplt.xlabel(\"Group\")\nplt.ylabel(\"Mean\")\nplt.show()","07922c5a":"plt.bar(DF.groupby('cluster').mean()['Response'].index,DF.groupby('cluster').mean()['Response'])\nplt.title(\"Mean Accepted  response in the last campaign\")\nplt.xlabel(\"Group\")\nplt.ylabel(\"Mean\")\nplt.show()","a4bbe72c":"plt.bar(DF.groupby('cluster').mean()['NumWebPurchases'].index,DF.groupby('cluster').mean()['NumWebPurchases'])\nplt.title(\"Mean Num Web Purchases\")\nplt.xlabel(\"Group\")\nplt.ylabel(\"Mean\")\nplt.show()","92d25287":"plt.bar(DF.groupby('cluster').mean()['NumCatalogPurchases'].index,DF.groupby('cluster').mean()['NumCatalogPurchases'])\nplt.title(\"Mean Num Catalog Purchases\")\nplt.xlabel(\"Group\")\nplt.ylabel(\"Mean\")\nplt.show()","be56bb66":"plt.bar(DF.groupby('cluster').mean()['NumStorePurchases'].index,DF.groupby('cluster').mean()['NumStorePurchases'])\nplt.title(\"Mean Num Store Purchases\")\nplt.xlabel(\"Group\")\nplt.ylabel(\"Mean\")\nplt.show()","ce36bd18":"plt.bar(DF.groupby('cluster').mean()['NumWebVisitsMonth'].index,DF.groupby('cluster').mean()['NumWebVisitsMonth'])\nplt.title(\"Mean Num Web Visits Month\")\nplt.xlabel(\"Group\")\nplt.ylabel(\"Mean\")\nplt.show()","28c79c8a":"DF['CustomerLifeTime'].value_counts()","2af34270":"DF.info()","df7176b8":"DF['CustomerLifeTime']","b8688f84":"plt.figure(figsize=(12,6))\nsb.countplot(data=DF,x='cluster',hue='CustomerLifeTime')\nplt.show()","c82d18be":"It sounds that cluster 2 is outlier we have to remove this ","29ae5155":"## Visualization "}}