{"cell_type":{"da452503":"code","6473123f":"code","c800913e":"code","0063f025":"code","e9bbc3c4":"code","f0a99a5b":"code","02cf6316":"code","1eef8362":"code","c3ede4f0":"code","ca0847e4":"code","e91b797d":"code","7db1ffee":"code","33665219":"code","7ab29ee6":"code","10c6721e":"code","33f3dad2":"code","53a5eb65":"code","83e91a6d":"code","ad027ab0":"code","d1ce0f9f":"code","1c4e1223":"code","fb4c4035":"code","e33b9edf":"code","c1bff804":"code","069b1127":"code","07f2cb62":"code","ec82a535":"markdown","ca18ee24":"markdown","ea8cc9dc":"markdown","caa79ad8":"markdown","237c7cda":"markdown","4d7fe7de":"markdown","ea896bde":"markdown","bbb32a69":"markdown","57ae74c8":"markdown","dd5a6868":"markdown","2c19db62":"markdown","202eefa0":"markdown","c2329483":"markdown","a08513a7":"markdown","b3068f95":"markdown","51ea07c9":"markdown","e2efdef2":"markdown","e07fb26e":"markdown","32545540":"markdown","db12d9f9":"markdown"},"source":{"da452503":"#importing library like pandas numpy for data manipulations\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno as msno                                              # for visualizing missing values\nimport plotly.express as px\nimport plotly.graph_objects as go                                     # for geo_location visulaizations\n","6473123f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c800913e":"#first of all we start with loading our data in df variable \ndf=pd.read_csv('\/kaggle\/input\/covid-world-vaccination-progress\/country_vaccinations.csv')\ndf.sample(3)                                                              #printing 3 random rows to check about data","0063f025":"#lets get a quick info \nprint('shape of data is:',df.shape)\ndf.info()","e9bbc3c4":"# creating heatmap to visualize null values\nmsno.matrix(df)","f0a99a5b":"# counting missing values\ndf.isnull().sum()","02cf6316":"# we will have to first handle missing values to handle missing values we will drop all the columns having \n# missing values greater than 50 %\nfor i in df.columns:\n    if df[i].isnull().sum() > (0.5 *1764):\n        df.drop(i,axis=1,inplace=True)\nprint('now we are left with only-',df.shape)\nprint(df.isnull().sum())\n","1eef8362":"# first of all lets check about correlation in our data\nfig,ax=plt.subplots(figsize=(10,6))\nsns.heatmap(df.corr(),annot=True,cmap=\"Blues\")\nplt.title('Correlation Between different Features')","c3ede4f0":"fig, ax = plt.subplots(2,2,figsize=(15,10))\n#fig 1\nsns.scatterplot(df['total_vaccinations'], df['people_vaccinated'],ax=ax[0][0],color='#39ac73')\nax[0,0].set_title('relation Between total_vaccinations and people_vaccinated ')\n#fig 2\nsns.scatterplot(df['daily_vaccinations_raw'], df['daily_vaccinations'], color='#3385ff',ax=ax[0][1])\nax[0][1].set_title('relation Between daily_vaccinations_raw and daily_vaccinations ')\n#fig 3\nsns.scatterplot(df['total_vaccinations_per_hundred'], df['people_vaccinated_per_hundred'], color='#ff5c33',ax=ax[1][0])\nax[1][0].set_title(' total_vaccinations_per_hundred and people_vaccinated_per_hundred ')\n#fig 4\nsns.scatterplot( df['daily_vaccinations'],df['daily_vaccinations_per_million'], color='#cccc00',ax=ax[1][1])\nax[1][1].set_title(' daily_vaccinations and daily_vaccinations_per_million ')\nplt.show()\n","ca0847e4":"df.columns","e91b797d":"#we will drop all the columns which are highly correlated and retain only one of them\ndf.drop(columns=['people_vaccinated','daily_vaccinations_raw','daily_vaccinations_raw'],inplace=True)","7db1ffee":"\n#allright we are now only left with some useful values\nprint(df.shape)\ndf.isnull().sum()","33665219":"# now lets perform some data Analysis\nsum_df=df.groupby('country').sum().sort_values(by='total_vaccinations',ascending=False)\nfig,ax=plt.subplots(figsize=(15,7))\nplt.title('Total No of Vaccination done By country')\nplt.xticks(rotation=90)\nsns.barplot(x=sum_df.index,y=sum_df['total_vaccinations'],palette='summer')","7ab29ee6":"#lets plot total vaccination by country\ndata=df[['country','total_vaccinations','vaccines','iso_code']].groupby(by=['country','iso_code','vaccines']).sum().reset_index()\npx.scatter_geo(data,locations='iso_code', size='total_vaccinations',color='country', title='Country by People Vaccinated')\n","10c6721e":"# now lets perform some data Analysis\nmean_df=df.groupby('country').mean().sort_values(by='daily_vaccinations_per_million',ascending=False)\nfig,ax=plt.subplots(figsize=(15,7))\nplt.title('Average No of vaccination done per million population By country')\nplt.xticks(rotation=90)\nsns.barplot(x=mean_df.index,y=mean_df['daily_vaccinations_per_million'],palette='icefire')","33f3dad2":"by_company=df.groupby('vaccines').sum().sort_values(by='total_vaccinations',ascending=False)\nfig,ax=plt.subplots(figsize=(8,5))\nplt.title('Total No of Vaccines manufactured By companies')\nplt.xticks(rotation=90)\nsns.barplot(x=by_company.index,y=by_company['total_vaccinations'],palette='pink')","53a5eb65":"#now we will see that how many vaccines are vaccinated each day\ndf['date']=pd.to_datetime(df['date'])\ndt=df.groupby('date').sum()","83e91a6d":"#lets visualize our total vaccination by day\nfig,ax=plt.subplots(figsize=(15,5))\nplt.title('Total No of Vaccines vaccinated everyday')\nsns.lineplot(x=dt.index,y=dt['total_vaccinations'],color='#db9c53',label='total_vaccinations')\nsns.lineplot(x=dt.index,y=dt['daily_vaccinations'],color='#3f5e5b',label='daily_vaccinations')\n","ad027ab0":"#lets visualize our total vaccination by per 100\nfig,ax=plt.subplots(figsize=(15,5))\nplt.title('Total No of Vaccines per hundreds')\nsns.lineplot(x=dt.index,y=dt['total_vaccinations_per_hundred'],color='#db9c53',label='total_vaccinations_per_hundred')\nsns.lineplot(x=dt.index,y=dt['people_vaccinated_per_hundred'],color='#3f5e5b',label='people_vaccinated_per_hundred')\n","d1ce0f9f":"#now we have added one more columns that is difference of date\ndt['date_diff']=dt['total_vaccinations']\ncount=0\nfor index, row in dt.iterrows():\n    row['date_diff']=count\n    count+=1\n","1c4e1223":"#creating model\nfrom sklearn.linear_model import LinearRegression\nmodel=LinearRegression()\n","fb4c4035":"# lets create our x and Y variable\nx=dt[['date_diff']]\ny=dt['total_vaccinations']\nmodel.fit(x,y)","e33b9edf":"print(model.coef_)\nprint(model.intercept_)","c1bff804":"#lets predict after 1 year how many vaccines will be made i.e 365 days so our x value will be 365\npr=model.predict(x)\n","069b1127":"#lets visualize our total vaccination by day\nfig,ax=plt.subplots(figsize=(15,5))\nplt.title('Best Fit Line')\nplt.scatter(x=dt['date_diff'],y=dt['total_vaccinations'])\nplt.plot(x,pr)","07f2cb62":"# lets predict for after 100 days\n\nprint(int(model.predict([[100]])))","ec82a535":"Now we are getting some useful information from the data lets clarify some points.\n* Total vaccination and people vaccinated have correlation of 1 which means they are fully correleted.\n* daily vaccination and daily vaccination raw have correlation of 96 % and 94 % correlated with total vaccines.\n* similarly Total_cvaccines_per_hundreds and people vaccinated per hundreds are 98% correlated.\n### ***So what we can conclude from These points is we can retain only one columns lets say in total vaccinations v\/s people vaccinated we can retain only one columns and drop another columns.***","ca18ee24":"We can conclude some points\n* as we can see from above graph that United States is having the highest no of vaccination.\n* followed by UK,England,China,Russia\n\nBut for Us important thing is analyzing vaccination done per million population","ea8cc9dc":"\n<h1><font color='#195e5e'>Introduction<\/font><\/h1>\nIt will likely take at least a year for a Covid-19 vaccine to be approved and made available to patients; something which Pharma Tech readers acknowledged when voting in our latest poll. Looking to a future where there are likely to be more and more serious outbreaks and pandemics, how can the pharma industry prepare and speed up vaccine development?\n\nAs we already know that **Covid-19** have affected our life and our economy. Although some of the countries have created their vaccines for corona virus but still it takes a long time to get all the people vaccinated. so In this dataset we will predict or analyze which country are more progressing in vaccines drive and what time it will take for vaccines to come.\n\n***SO what are You waiting for Lets get started***","caa79ad8":"<h2><font color='#339966'> Step-2 Gathering Data<\/font><\/h2>","237c7cda":"<h2><font color='#339966'> Now we are done with this dataset and we have Gathered various useful information <\/font><\/h2>","4d7fe7de":"From above we can see that Top companies in production of vaccines.","ea896bde":"<h2><font color='#339966'> Step-7 Creating basic model<\/font><\/h2>","bbb32a69":"<h2><font color='#339966'> Step-6 Data Analysis<\/font><\/h2>","57ae74c8":"NOW everything is going on proper way no we will create linear regressor to predict the Total no of vaccines at any future day.","dd5a6868":"<h2><font color='#339966'> Step-4 Data Preprocessing<\/font><\/h2>\nIn this step we will process our data to make more meaning full analysis","2c19db62":"Filling missing values is one of the complex task in data science. before filling values we have to analyze our data and for that statistics will help us.\nSo what are we waiting for? lets dive into statistics.","202eefa0":"\n\n<h2><font color='#195e5e'>Introduction To Data<\/font><\/h2>\n\n * **Country ** - this is the country for which the vaccination information is provided\n * Country ISO Code - ISO code for the country;\n* **Date **- date for the data entry; for some of the dates we have only the daily vaccinations, for others, only the (cumulative) total;\n* Total number of vaccinations - this is the absolute number of total immunizations in the country;\n* Total number of people vaccinated - a person, depending on the immunization scheme, will receive one or more (typically 2) vaccines; at a   certain moment, the number of vaccination might be larger than the number of people;\n* Total number of people fully vaccinated - this is the number of people that received the entire set of immunization according to the immunization scheme (typically 2); at a certain moment in time, there might be a certain number of people that received one vaccine and another number (smaller) of people that received all vaccines in the scheme;\n* Daily vaccinations (raw) - for a certain data entry, the number of vaccination for that date\/country;\n* Daily vaccinations - for a certain data entry, the number of vaccination for that date\/country;\n* Total vaccinations per hundred - ratio (in percent) between vaccination number and total population up to the date in the country;\n* Total number of people vaccinated per hundred - ratio (in percent) between population immunized and total population up to the date in the country;\n* Total number of people fully vaccinated per hundred - ratio (in percent) between population fully immunized and total population up to the date in the country;\n* Number of vaccinations per day - number of daily vaccination for that day and country;\n* Daily vaccinations per million - ratio (in ppm) between vaccination number and total population for the current date in the country;\n* Vaccines used in the country - total number of vaccines used in the country (up to date);\n* Source name - source of the information (national authority, international organization, local organization etc.);\n* Source website - website of the source of information;","c2329483":"<h2><font color='#339966'> Step-3 Basic Info of Data<\/font><\/h2>\nLets get some basic info about data like:\n* what is the shape of data\n* about missing values\n* categorical as well as numerical data","a08513a7":"\n<h1><font color='#195e5e'><center>Predicting Vaccination Done in Future<\/center><\/font><\/h1>\n","b3068f95":"<h2><font color='#339gss'> If you like this notebook please give it a like to mativate me. For any feedback or suggestions mention me in the comment section Thank You<\/font><\/h2>","51ea07c9":"<h2><font color='#339966'> Step-1 Some Useful Imports<\/font><\/h2>","e2efdef2":"From the above graph we can conclude:\n* Gibraitar,Israel,UAE,seychelles have vaccinated largest per million population\n* while indonesia,India,Kuwait,Chillie have lesser vaccination per million population","e07fb26e":"![](https:\/\/www.pharmaceutical-technology.com\/wp-content\/uploads\/sites\/10\/2020\/03\/Covid-19-Vaccine-development-e1599531596297.jpg)","32545540":"* As from the above code we can see that there are 1764 enteries and 13 features in our dataset.\n* Out of which, 6 coumns are categorical.\n* And 9 are of numeric types\n* There are lots of missing values associated with our data\n\n***Lets look for missing values  more clearly.***","db12d9f9":"<h2><font color='#339966'> Step-5 Dealing with  Missing values<\/font><\/h2>\nIn this step we will keep only those columns which are important and only one of the two same correlated columns\n\n"}}