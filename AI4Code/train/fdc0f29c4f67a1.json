{"cell_type":{"350aa798":"code","091d8a07":"code","2d8abfe3":"code","ad136512":"code","796dd509":"code","e218fbf5":"code","db0617c3":"code","3fb3c866":"code","d6a6f582":"code","b7d26edf":"code","5073e202":"code","560bc7a6":"code","66439b6e":"code","afc8f959":"code","65536631":"code","737679c8":"code","453a2a47":"code","32a03f7a":"code","94b27a0c":"code","2965b7ab":"code","b7b873fc":"code","71b248b5":"code","84ca66ca":"code","f925ef2c":"code","7222b54b":"code","70e3ab51":"code","2387caa9":"code","291c1177":"code","834d5106":"code","ca86802f":"code","5ed36240":"code","a6bd53f1":"code","c567d5dc":"code","65e1074c":"code","62703af3":"code","95bc7025":"code","f846225d":"code","4e0c45cb":"code","efd0cd7f":"code","e4414f1c":"code","ae511627":"code","72bb08b0":"code","e1c39c59":"markdown","ffeb6d42":"markdown","02f0ff1a":"markdown","264f802c":"markdown","a6c216ba":"markdown","0db0d03b":"markdown","c6d92b87":"markdown","15b16b58":"markdown","ce6360a6":"markdown","359971e9":"markdown","cbc3288c":"markdown","31602b6b":"markdown","0d3cd526":"markdown","69058231":"markdown","f4d8c832":"markdown","517dc85b":"markdown","ef46f2c4":"markdown","d434af1c":"markdown","a51d8470":"markdown","f8428040":"markdown","7f5f3b48":"markdown","8a89f8d5":"markdown","bfa720e3":"markdown","66664d8a":"markdown","c9d91dec":"markdown","5fbcf3ab":"markdown","6dbb88dc":"markdown","c1f9b985":"markdown","85c1c0b9":"markdown","249f2dad":"markdown"},"source":{"350aa798":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt \nprint('Modules are imported.')\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","091d8a07":"corona_dataset_csv = pd.read_csv(\"\/kaggle\/input\/covid19-dataset-by-john-hopkins-university\/covid19_Confirmed_dataset.csv\")\ncorona_dataset_csv.head(10)","2d8abfe3":"corona_dataset_csv.shape","ad136512":"corona_dataset_csv.drop([\"Lat\",\"Long\"],axis=1,inplace=True)","796dd509":"corona_dataset_csv.head(10)","e218fbf5":"corona_dataset_aggregated = corona_dataset_csv.groupby(\"Country\/Region\").sum()","db0617c3":"corona_dataset_aggregated.head()","3fb3c866":"corona_dataset_aggregated.shape","d6a6f582":"corona_dataset_aggregated.loc[\"India\"].plot()\ncorona_dataset_aggregated.loc[\"Italy\"].plot()\ncorona_dataset_aggregated.loc[\"Spain\"].plot()\nplt.legend()","b7d26edf":"corona_dataset_aggregated.loc[\"China\"].plot()\ncorona_dataset_aggregated.loc[\"Italy\"].plot()\ncorona_dataset_aggregated.loc[\"Spain\"].plot()\nplt.legend()","5073e202":"corona_dataset_aggregated.loc[\"China\"].plot()\ncorona_dataset_aggregated.loc[\"Italy\"].plot()\ncorona_dataset_aggregated.loc[\"India\"].plot()\nplt.legend()","560bc7a6":"corona_dataset_aggregated.loc[\"China\"].plot()","66439b6e":"corona_dataset_aggregated.loc[\"China\"][:3].plot()","afc8f959":"corona_dataset_aggregated.loc[\"China\"].diff().plot()","65536631":"corona_dataset_aggregated.loc[\"China\"].diff().max()","737679c8":"corona_dataset_aggregated.loc[\"Italy\"].diff().max()","453a2a47":"corona_dataset_aggregated.loc[\"Spain\"].diff().max()","32a03f7a":"countries = list(corona_dataset_aggregated.index)\nmax_infection_rates = []\nfor c in countries :\n    max_infection_rates.append(corona_dataset_aggregated.loc[c].diff().max())\ncorona_dataset_aggregated[\"max_infection_rates\"] = max_infection_rates","94b27a0c":"corona_dataset_aggregated.head()","2965b7ab":"corona_data = pd.DataFrame(corona_dataset_aggregated[\"max_infection_rates\"])","b7b873fc":"corona_data.head()","71b248b5":"happines_report_csv = pd.read_csv(\"..\/input\/covid19-dataset-by-john-hopkins-university\/worldwide_happiness_report.csv\")","84ca66ca":"happines_report_csv.head()","f925ef2c":"useless_cols = [\"Overall rank\",\"Score\",\"Generosity\",\"Perceptions of corruption\"]","7222b54b":"happines_report_csv.drop(useless_cols,axis=1,inplace=True)\nhappines_report_csv.head()","70e3ab51":"happines_report_csv.set_index(\"Country or region\",inplace=True)","2387caa9":"happines_report_csv.head()","291c1177":"corona_data.head()","834d5106":"corona_data.shape","ca86802f":"happines_report_csv.head()","5ed36240":"happines_report_csv.shape","a6bd53f1":"data = corona_data.join(happines_report_csv,how=\"inner\")","c567d5dc":"data.corr()","65e1074c":"data.head()","62703af3":"x = data[\"GDP per capita\"]\ny = data[\"max_infection_rates\"]\nsns.scatterplot(x, np.log(y))","95bc7025":"sns.regplot(x, np.log(y))","f846225d":"x = data[\"Social support\"]\ny = data[\"max_infection_rates\"]\nsns.scatterplot(x, np.log(y))","4e0c45cb":"sns.regplot(x, np.log(y))","efd0cd7f":"x = data[\"Healthy life expectancy\"]\ny = data[\"max_infection_rates\"]\nsns.scatterplot(x, np.log(y))","e4414f1c":"sns.regplot(x, np.log(y))","ae511627":"x = data[\"Freedom to make life choices\"]\ny = data[\"max_infection_rates\"]\nsns.scatterplot(x, np.log(y))","72bb08b0":"sns.regplot(x, np.log(y))","e1c39c59":"visualization always helps for better understanding of our data.","ffeb6d42":"Plotting Healthy life expectancy vs maximum Infection rate","02f0ff1a":" importing the dataset","264f802c":" now let's join two dataset have prepared","a6c216ba":"#  Visualizing data related to a country","0db0d03b":"Visualizing data related to a country China","c6d92b87":"Plotting Social support vs maximum Infection rate","15b16b58":"caculating the first derivative of the curve","ce6360a6":" Plotting GDP vs maximum Infection rate","359971e9":"wolrd happiness report Dataset:","cbc3288c":"# find maximum infection rate for all of the countries.","31602b6b":"In this project, I had done how to preprocess and merge datasets to calculate needed measures and prepare them for an Analysis. I had worked with the COVID19 dataset, published by John Hopkins University, which consists of the data related to the cumulative number of confirmed cases, per day, in each Country. Also, have another dataset consist of various life factors, scored by the people living in each country around the globe. I had merged these two datasets to see if there is any relationship between the spread of the virus in a country and how happy people are, living in that country.","0d3cd526":"Aggregating the rows by the country","69058231":"![image.png](attachment:image.png)","f4d8c832":"# COVID19-Data Analysis","517dc85b":"Corona Dataset:","ef46f2c4":"# find maxmimum infection rate for China","d434af1c":"Delete the useless columns","a51d8470":"Plotting Freedom to make life choices vs maximum Infection rate","f8428040":"# Visualization of the results","7f5f3b48":"# ->Importing the WorldHappinessReport.csv dataset\n\n# ->selecting needed columns for our analysis\n\n# ->join the datasets\n\n# ->calculate the correlations as the result of our analysis","8a89f8d5":"we need to find a good measure reperestend as a number, describing the spread of the virus in a country.","bfa720e3":"let's drop the useless columns","66664d8a":"changing the indices of the dataframe","c9d91dec":"create a new dataframe with only needed column","5fbcf3ab":"# Calculating a good measure","6dbb88dc":"correlation matrix","c1f9b985":"Let's check the shape of the dataframe","85c1c0b9":"importing covid19 dataset","249f2dad":"our Analysis is not finished unless we visualize the results in terms figures and graphs so that everyone can understand what you get out of our analysis\n"}}