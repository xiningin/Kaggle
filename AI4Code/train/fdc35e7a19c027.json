{"cell_type":{"df377e26":"code","5d8ee42e":"code","32caf290":"code","9ea633f6":"code","7f0954f7":"code","87ccfba4":"code","538d3743":"code","75ff1777":"code","c2ae7ac3":"code","0ac9c48a":"code","fd7f1b1e":"code","0feb6ac5":"code","3973fbcf":"code","871ba74a":"code","41d4a7c0":"code","0d200436":"code","92689815":"code","4d592a06":"code","910f8bd8":"code","49402c0c":"code","ed30a47b":"code","5db3f0eb":"code","dfa432e0":"code","84c071cd":"code","a4999596":"code","241b8fa1":"markdown","30ee5903":"markdown","065a4a8e":"markdown","2148a4c1":"markdown","00369a9c":"markdown","8f53ec28":"markdown","ac753511":"markdown","11b5771b":"markdown","04ea585a":"markdown","19c0f046":"markdown","2f60190b":"markdown","d851bc10":"markdown","7ddbb04c":"markdown","4241d075":"markdown","0166e02f":"markdown","660ac8b9":"markdown"},"source":{"df377e26":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()","5d8ee42e":"df = pd.read_csv('..\/input\/auto-insurance-in-sweden\/swedish_insurance.csv')\ndf.head()","32caf290":"df.rename(columns={\"X\": \"Claims\", \"Y\": \"Payment\"}, inplace = True)\ndf.head()","9ea633f6":"df.shape","7f0954f7":"df.info()","87ccfba4":"df.describe()","538d3743":"df.corr()","75ff1777":"sns.heatmap(df.corr(), center = 0, annot =True, cmap='coolwarm');","c2ae7ac3":"plt.scatter(df.Claims, df.Payment);\nplt.xlabel('Claims');\nplt.ylabel('Payment');","0ac9c48a":"# Splitting to Feature and Label and Converting into numpy array\n\nX = df.iloc[:,0].values\ny = df.iloc[:,1].values","fd7f1b1e":"def Mean (data):\n    return sum(data)\/ len(data)","0feb6ac5":"def Variance(data):\n    return Mean ((data - Mean(data))** 2)","3973fbcf":"def Covariance(x ,y):\n    return sum ( (x - Mean(x)) * (y - Mean(y)) ) \/ (len(x)-1)","871ba74a":"def Coeff_Regression(x,y):\n    b1 = Covariance(x,y) \/ Variance(x)\n    b0 = Mean(y) - b1 * Mean(x)\n    return b0 , b1","41d4a7c0":"def MSE (actual, predicted):\n    return Mean ((actual - predicted)**2)","0d200436":"b0 , b1 = Coeff_Regression(X,y)\ny_pred = b0 + X * b1","92689815":"plt.scatter(X,y);\nplt.plot(X,y_pred);","4d592a06":"MSE(y,y_pred)","910f8bd8":"from sklearn.linear_model import LinearRegression\nlin_reg = LinearRegression()\nX = X.reshape(-1,1)\nlin_reg.fit(X,y)","49402c0c":"y_pred2 = lin_reg.predict(X)\nplt.scatter(X,y);\nplt.plot(X,y_pred2);","ed30a47b":"MSE(y,y_pred2)","5db3f0eb":"df = df[df['Claims']<100]\nX = df.iloc[:,0].values\ny = df.iloc[:,1].values\n\nb0 , b1 = Coeff_Regression(X,y)\ny_pred = b0 + X * b1\n\nplt.scatter(X,y);\nplt.plot(X,y_pred);","dfa432e0":"MSE(y,y_pred)","84c071cd":"from sklearn.linear_model import LinearRegression\nlin_reg = LinearRegression()\nX = X.reshape(-1,1)\nlin_reg.fit(X,y)\n\ny_pred2 = lin_reg.predict(X)\nplt.scatter(X,y);\nplt.plot(X,y_pred2);","a4999596":"MSE(y,y_pred2)","241b8fa1":"# Mean Squared Error\n![image.png](attachment:image.png)","30ee5903":"#  From Correlation and Visualization, there is a linear relation between Claims and Payment","065a4a8e":"# Auto Insurance in Sweden\nSUMMARY\n\nX = number of claims\n\nY = total payment for all the claims in thousands of Swedish Kronor for geographical zones in Sweden","2148a4c1":"# Reading Data","00369a9c":"# Using LinearRegression from Sklearn","8f53ec28":"Try to remove possible outliers:\n","ac753511":"# Exploring Data","11b5771b":"# Importing Libraries","04ea585a":"**We try to implement Simple Linear Regression from scratch in Python and compare it to Sklearn!**","19c0f046":"# Covariance Formula\n![image.png](attachment:image.png)","2f60190b":"# Linear Regression Coefficients\n![image.png](attachment:image.png)","d851bc10":"# Variance Formula\n![image.png](attachment:image.png)","7ddbb04c":"# Sklearn results are very close to our results","4241d075":"# Building Everything from Scratch","0166e02f":"# Mean Formula\n![image.png](attachment:image.png)","660ac8b9":"# Also, Sklearn results are very close to our results"}}