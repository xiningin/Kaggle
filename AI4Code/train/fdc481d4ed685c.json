{"cell_type":{"1d5e7e29":"code","c4f27752":"code","0a03bcad":"code","e64f5b75":"code","41919454":"code","09ad9c7a":"code","321e9718":"markdown","5b266ff4":"markdown","dccb5e3a":"markdown"},"source":{"1d5e7e29":"\nimport pandas as pd\nfrom sklearn.tree import DecisionTreeRegressor\n\n# Path of the file to read\niowa_file_path = '..\/input\/home-data-for-ml-course\/train.csv'\n\nhome_data = pd.read_csv(iowa_file_path)\ny = home_data.SalePrice\nfeature_columns = ['LotArea', 'YearBuilt', '1stFlrSF', '2ndFlrSF', 'FullBath', 'BedroomAbvGr', 'TotRmsAbvGrd']\nX = home_data[feature_columns]\n\n# Specify Model\niowa_model = DecisionTreeRegressor()\n# Fit Model\niowa_model.fit(X, y)\n\nprint(\"First in-sample predictions:\", iowa_model.predict(X.head()))\nprint(\"Actual target values for those homes:\", y.head().tolist())\n\n# Set up code checking\nfrom learntools.core import binder\nbinder.bind(globals())\nfrom learntools.machine_learning.ex4 import *\nprint(\"Complete\")","c4f27752":"from sklearn.model_selection import train_test_split\n\ntrain_X, val_X, train_y, val_y = train_test_split(X,y, random_state=1)\n","0a03bcad":"# You imported DecisionTreeRegressor in your last exercise\n# and that code has been copied to the setup code above. So, no need to\n# import it again\n\n# Specify the model\niowa_model = DecisionTreeRegressor(random_state=1)\n\n# Fit iowa_model with the training data.\niowa_model.fit(train_X,train_y)\n","e64f5b75":"# Predict with all validation observations\nval_predictions = iowa_model.predict(val_X)\n","41919454":"# print the top few validation predictions\nprint(val_predictions)\n# print the top few actual prices from validation data\nprint(val_y)","09ad9c7a":"from sklearn.metrics import mean_absolute_error\nval_mae = mean_absolute_error(val_y, val_predictions)\n\n\nprint(val_mae)\n","321e9718":"Checking the Mean absolute error (MAE) of your error!","5b266ff4":"## To Test How Good your Model Functions","dccb5e3a":"Inspect your predictions and actual values from validation data."}}