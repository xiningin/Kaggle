{"cell_type":{"06b265c2":"code","0f184ba3":"code","5881157c":"code","d4a4a89e":"code","e9247f98":"code","9ac2e610":"code","57106ef9":"code","b3a4f81b":"code","5c3acf7b":"code","77a6a8a2":"code","78cd5b68":"code","a199b85f":"code","23165886":"code","8ef3ae72":"markdown","c721ba2f":"markdown","24251fd2":"markdown","e3423166":"markdown","2a3c483a":"markdown"},"source":{"06b265c2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\nfrom sklearn.linear_model import LinearRegression\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split","0f184ba3":"auto = pd.read_csv('..\/input\/autompg-dataset\/auto-mpg.csv')\nauto.head()","5881157c":"auto.shape","d4a4a89e":"auto = auto.drop('car name', axis = 1)\nauto.head()","e9247f98":"auto['origin'] = auto['origin'].replace({1: 'america', 2: 'europe', 3: 'asia'})\nauto.head()","9ac2e610":"auto = pd.get_dummies(auto, columns = ['origin'])\nauto.head()","57106ef9":"auto.describe()","b3a4f81b":"auto.dtypes","5c3acf7b":"hp_is_digit = pd.DataFrame(auto.horsepower.str.isdigit())\nauto[hp_is_digit['horsepower'] == False]","77a6a8a2":"auto = auto.replace('?', np.nan)\nauto[hp_is_digit['horsepower'] == False]","78cd5b68":"auto.median()","a199b85f":"median_filler = lambda x: x.fillna(x.median())\nauto = auto.apply(median_filler, axis = 0)\nauto['horsepower'] = auto['horsepower'].astype('float64')","23165886":"auto_attr = auto.iloc[:, 0:7]\nsns.pairplot(auto_attr, diag_kind = 'kde');","8ef3ae72":"Car Name cannot be used in predicting the dependent variable (mpg), so I drop it:","c721ba2f":"Given the origin categories, I can now create dummy variables:","24251fd2":"I replace the categorical values with the actual categories:","e3423166":"Replace the missing values with the median value","2a3c483a":"horsepower is represented as an object when we needed a numerical field"}}