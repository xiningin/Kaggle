{"cell_type":{"843e1fc5":"code","7e488bb1":"code","8fd7ecba":"code","c5a2618f":"code","571a2609":"code","68bfee79":"code","30ea695c":"code","b5a29b57":"code","ce84559a":"code","de751043":"code","87305372":"code","f4edee29":"code","773cd9a8":"code","91f7d023":"code","9bd2ce18":"code","32e9e478":"code","a3012d71":"code","0ef7a02a":"code","24d15f17":"code","739e7154":"code","1ba0eb7e":"code","5364ea94":"code","13aa0ecf":"code","b77d7709":"code","fc20fe69":"code","64c0642b":"code","40def438":"code","7e10f91f":"code","f26450ac":"code","7a5f5168":"code","6d83abbc":"code","a50d3428":"code","c8bd6149":"markdown","5d8ed432":"markdown","ec88b9fb":"markdown","f08491b6":"markdown","a100024f":"markdown","b453c7e6":"markdown","f1cd82c5":"markdown","9dc53a5f":"markdown","20cbcd0b":"markdown","98ff57a6":"markdown","2b3d2e59":"markdown","632fad38":"markdown","2a41f4b3":"markdown","751a907d":"markdown"},"source":{"843e1fc5":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set(context='notebook', style='white', palette='colorblind')","7e488bb1":"df = pd.read_csv('..\/input\/uci-auto-mpg-dataset\/mpg.csv')","8fd7ecba":"df.sample(2)","c5a2618f":"df.info()","571a2609":"df.isna().sum().plot(kind='bar')\nplt.title('Columns with missing values')","68bfee79":"df.corr()['horsepower'].sort_values()","30ea695c":"df[df.horsepower.isna()].sort_values(by='model_year')","b5a29b57":"df.groupby(['origin','model_year','fuel_type']).median().loc['usa', 71, 'diesel']","ce84559a":"# from above\ndf.loc[(df.model_year==71) & (df.name=='ford pinto'), 'horsepower'] = 153","de751043":"# similarly, for other 5 values\ndf.loc[(df.model_year==74) & (df.name=='ford maverick'), 'horsepower'] = 100\ndf.loc[(df.model_year==80) & (df.name=='renault lecar deluxe'), 'horsepower'] = 67\ndf.loc[(df.model_year==80) & (df.name=='ford mustang cobra'), 'horsepower'] = 90\ndf.loc[(df.model_year==81) & (df.name=='renault 18i'), 'horsepower'] = 81\ndf.loc[(df.model_year==82) & (df.name=='amc concord dl'), 'horsepower'] = 85.5","87305372":"# numerical subset\ndfnum=df.select_dtypes(include=np.number)\ndfnum.drop(columns=['cylinders', 'model_year'], inplace=True) # these two will be later treated as categorical features\n\n# categorical subset\ndfcat = pd.concat([df.select_dtypes(exclude=np.number), df[['cylinders', 'model_year']]], axis=1)","f4edee29":"dfnum.sample(2)","773cd9a8":"fig, axs = plt.subplots(nrows=1, ncols=5, figsize=(15, 4), sharey=False)\ni = 0\n\nfor col in axs:\n    col.title.set_text(dfnum.columns[i])\n    sns.boxplot(data=dfnum.iloc[:,i], ax=col)\n    i+=1","91f7d023":"from sklearn.preprocessing import RobustScaler\n\nrs = RobustScaler()\ndfnum_scaled = pd.DataFrame(rs.fit_transform(dfnum), columns=dfnum.columns)","9bd2ce18":"fig, (ax1, ax2) = plt.subplots(ncols=2, figsize=(14, 4))\n\nfor col in dfnum_scaled.columns:\n    sns.kdeplot(dfnum_scaled[col], ax=ax2)\n    \nfor col in dfnum.columns:\n    sns.kdeplot(dfnum[col], ax=ax1)\n\nax2.title.set_text('After Standardization')\nax1.title.set_text('Before Standardization')","32e9e478":"del dfcat['origin'] # deleting target feature","a3012d71":"dfcat.sample(2)","0ef7a02a":"dfcat.info()","24d15f17":"dfcat['cylinder_cat'] = pd.Categorical(dfcat.cylinders.values, categories=list(dfcat.cylinders.unique()), ordered=False)\ndfcat['model_year_cat'] = pd.Categorical(dfcat.model_year.values, categories=list(dfcat.model_year.unique()), ordered=True)","739e7154":"del dfcat['cylinders']\ndel dfcat['model_year']\ndel dfcat['name']","1ba0eb7e":"dfcat.info()","5364ea94":"dfcat_dummy = pd.get_dummies(dfcat, drop_first=True)","13aa0ecf":"dfcat_dummy.sample(2)","b77d7709":"df_total = pd.concat([dfnum_scaled, dfcat_dummy], axis=1)","fc20fe69":"from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier, VotingClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\n\nfrom sklearn.model_selection import StratifiedKFold, GridSearchCV, learning_curve, cross_val_score","64c0642b":"kfold = StratifiedKFold(n_splits=8)","40def438":"X, y = df_total, df.origin.map({'usa':1, 'japan':0, 'europe':0})","7e10f91f":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=0)","f26450ac":"import xgboost as xgb\nxg_cl = xgb.XGBClassifier(objective='binary:logistic', n_estimators=10, seed=123)\n\nxg_cl.fit(X_train,y_train) \npreds = xg_cl.predict(X_test)\n\naccuracy = float(np.sum(preds==y_test))\/y_test.shape[0] \nprint(\"accuracy: %f\" % (accuracy)) ","7a5f5168":"from sklearn.model_selection import GridSearchCV \nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.metrics import accuracy_score \n\nRFC = RandomForestClassifier()\n\nrf_param_grid = {\"max_depth\": [None],\n              \"max_features\": [3,\"sqrt\", \"log2\"],\n              \"min_samples_split\": [n for n in range(1, 9)],\n              \"min_samples_leaf\": [5, 7],\n              \"bootstrap\": [False, True],\n              \"n_estimators\" :[200, 500],\n              \"criterion\": [\"gini\", \"entropy\"]}\n\ngs_rf = GridSearchCV(RFC, param_grid = rf_param_grid, cv=kfold, scoring=\"roc_auc\", n_jobs= 4, verbose = 1)\n\ngs_rf.fit(X_train, y_train)\n\nrf_best = gs_rf.best_estimator_\nrf_best.fit(X_train, y_train)","6d83abbc":"y_pred = rf_best.predict(X_test)\nacc = accuracy_score(y_test, y_pred)\nprint(\"Test set accuracy: {:.2f}\".format(acc))","a50d3428":"y_pred_proba = rf_best.predict_proba(X_test)[:,1] \ntest_roc_auc = roc_auc_score(y_test, y_pred_proba)\n\nprint('Test set ROC AUC score: {:.3f}'.format(test_roc_auc)) ","c8bd6149":"### Data Wrangling - Categorical Dataset","5d8ed432":"**Grouping by 'origin', 'model_year' and 'fuel_type' and calculating median values to fill NaN**","ec88b9fb":"### Data Wrangling - Numerical Dataset","f08491b6":"# Numerical & Categorical Subsets","a100024f":"# Before\/After Robust Standardizing","b453c7e6":"**Using Swarm Plots**\n\n* univariate distributions\n\n* to avoid bining bias in histograms\n* different number of bins in histograms can create completely different looking histograms. Hence, introducing bias\n\n* generally easier to understand than strip plots because they spread out the points to avoid overlap","f1cd82c5":"**6 rows with missing values in 'horsepower'**","9dc53a5f":"### Dealing with missing values in 'horsepower'","20cbcd0b":"### Outliers in the numerical subset ","98ff57a6":"**XGBoost**","2b3d2e59":"**Random Forest**","632fad38":"### Using RobustScaler to standardize columns because of the presence of outliers","2a41f4b3":"# Predicting cars manufactured in USA","751a907d":"# Training "}}