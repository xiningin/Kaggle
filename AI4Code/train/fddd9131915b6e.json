{"cell_type":{"73c200c6":"code","9abd56a7":"code","af13b8eb":"code","716a9033":"code","5a320b90":"code","d89cdd72":"code","202ced40":"code","4f081a0d":"code","a4f85593":"code","be9caa31":"code","5cc5ee2b":"code","9a930fca":"code","316aa085":"code","94134291":"markdown"},"source":{"73c200c6":"# Import Required Libraries\nimport os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.optimizers import RMSprop, Adam, SGD\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Conv2D, MaxPool2D, Flatten, Dense, Dropout\nfrom tensorflow.keras import Model\nfrom tensorflow.keras.utils import plot_model\nfrom tensorflow.keras.applications.inception_v3 import InceptionV3","9abd56a7":"print(os.listdir('..\/input\/intel-image-classification'))","af13b8eb":"train_dir = os.path.join('..\/input\/intel-image-classification\/seg_train\/seg_train')\ntest_dir = os.path.join('..\/input\/intel-image-classification\/seg_test\/seg_test')","716a9033":"print(os.listdir(train_dir))","5a320b90":"print(os.listdir(test_dir))","d89cdd72":"datagen = ImageDataGenerator(\n    rescale = 1.\/255,\n    horizontal_flip = True,\n    vertical_flip = True,\n    shear_range = 0.2,\n    zoom_range = 0.2,\n    rotation_range = 40,\n    width_shift_range = 0.2,\n    height_shift_range = 0.2,\n    #fill_mode = 'nearest',\n    validation_split=0.2\n)","202ced40":"train_data_gen = datagen.flow_from_directory(os.path.join(train_dir),\n                                              target_size=(150, 150),\n                                             batch_size = 32,\n                                             class_mode='categorical',\n                                             subset='training')\ntest_data_gen = datagen.flow_from_directory(os.path.join(test_dir),\n                                              target_size=(150, 150),\n                                             batch_size = 32,\n                                             class_mode='categorical',\n                                             subset='validation')","4f081a0d":"plt.imshow(train_data_gen[0][0][10]);","a4f85593":"import tensorflow as tf\nmodel = Sequential([\n    Conv2D(32, (3, 3), activation = 'relu', input_shape = (150, 150, 3)), \n    MaxPool2D(2,2),\n    Conv2D(32, (3, 3), activation = 'relu'),\n    MaxPool2D(2,2),\n    Conv2D(64, (3, 3), activation = 'relu'),\n    MaxPool2D(2,2),\n    Dropout(0.1),\n    Conv2D(64, (3, 3), activation = 'relu'),\n    MaxPool2D(2,2),\n    Dropout(0.2),\n    Conv2D(128, (3, 3), activation = 'relu'),\n    MaxPool2D(2,2),\n    Dropout(0.1),\n    Flatten(),\n    Dense(128, activation='relu'),\n    Dense(6, activation='softmax')\n])","be9caa31":"model.summary()","5cc5ee2b":"plot_model(model)","9a930fca":"model.compile(optimizer='adam',loss='categorical_crossentropy',metrics= ['accuracy'])","316aa085":"history = model.fit(train_data_gen,validation_data = test_data_gen,\n                    epochs=100,steps_per_epoch = 20,verbose=2,\n                    validation_steps=3)","94134291":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session"}}