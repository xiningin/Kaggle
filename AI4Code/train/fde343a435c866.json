{"cell_type":{"86ef713d":"code","ab73a235":"code","b7c52d45":"code","75395a83":"code","073cdb6a":"code","eb047f32":"code","80633884":"code","b9a8a274":"code","0db8e081":"code","c00bb6ec":"code","1d4912a9":"code","2b58bb10":"code","f422ee64":"code","0173fa17":"markdown","6aa6554b":"markdown"},"source":{"86ef713d":"# import fastai\nfrom fastai.vision.all import *\n# Load the data\npath = untar_data(URLs.PASCAL_2007)\n\n# Hide it\nPath.BASE_PATH = path\n\npath.ls()","ab73a235":"# Take a look at the data\ndata = pd.read_csv(path\/'train.csv')\ndata.head()","b7c52d45":"dblock = DataBlock()\ndsets = dblock.datasets(data)\nlen(dsets.train), len(dsets.valid)","75395a83":"x, y = dsets.train[0]\nx,y","073cdb6a":"def get_x(r): return path\/'train'\/r['fname']\ndef get_y(r): return r['labels'].split(' ')\n\ndef splitter(data):\n  train = data.index[~data['is_valid']].tolist()\n  valid = data.index[data['is_valid']].tolist()\n  return train, valid\n\n# Creating the datablock\ndblock = DataBlock(blocks=[ImageBlock, MultiCategoryBlock],\n                   splitter = splitter,\n                   get_x= get_x, \n                   get_y = get_y,\n                   item_tfms = RandomResizedCrop(128, min_scale=0.35))\ndsets = dblock.datasets(data)\ndsets.train[0]\ndls = dblock.dataloaders(data)","eb047f32":"# Showing images from batch on screen\ndls.show_batch(nrows=1, ncols=1)","80633884":"# Creating the model\nlearn = cnn_learner(dls, resnet18)","b9a8a274":"x,y = to_cpu(dls.train.one_batch())\nactivs = learn.model(x)\nactivs.shape","0db8e081":"def binary_cross_entropy(inputs, targets):\n    inputs = inputs.sigmoid()\n    return torch.where(targets==1, 1-inputs, inputs).log().mean()","c00bb6ec":"def accuracy_multi(inp, target, thresh=0.5, sigmoid=True):\n    if sigmoid: inp = inp.sigmoid()\n    return ((inp>thresh)==target.bool()).float().mean()","1d4912a9":"# Training the model\nlearn = cnn_learner(dls, resnet50, metrics=partial(accuracy_multi, thresh=0.3))\nlearn.fine_tune(3, base_lr=3e-3, freeze_epochs=4)","2b58bb10":"preds,targs = learn.get_preds()","f422ee64":"xs = torch.linspace(0.05, 0.95, 29)\naccs = [accuracy_multi(preds, targs, thresh=i, sigmoid=False) for i in xs]\nplt.plot(xs, accs)","0173fa17":"# **Multi Cateogry classificiation using FastAI**","6aa6554b":"# The following code is, if you want to find the optimal threshold."}}