{"cell_type":{"97e0e398":"code","15caa3f4":"code","f95105ec":"code","dbf98039":"code","68d47fe8":"code","a7d72441":"code","86cbe804":"code","328caaeb":"code","8359693e":"code","c8be1d0a":"code","e951a74c":"code","98736bb2":"code","be3de0f3":"code","9d45ca28":"code","cba1d9ba":"code","171b67bc":"code","103e7b1f":"code","af174ec2":"code","3cb19a28":"code","e5fd11d9":"code","f6a92982":"code","6d8c52f4":"code","270cd13e":"code","32f9065a":"code","fde62a70":"code","28299d6b":"code","1ff1b48c":"code","f95750ea":"code","942cfe09":"code","45ef6b1b":"code","2026ce32":"code","1b4dc841":"code","924860a6":"code","d211458d":"code","4c4b2b90":"code","3ca117c2":"code","be883120":"code","f18476da":"code","9533e731":"code","42b26db7":"code","40317ca4":"code","dbdc9525":"code","5213f7d5":"code","7114a3d3":"code","9d7640dc":"code","06b3cabc":"code","c1e56101":"code","f160ef80":"code","268d4d33":"code","6d2cbb2b":"code","3d4ebcc7":"code","e171b681":"code","501ae7d6":"code","019abee3":"code","09cd3401":"code","d6a6bd57":"code","a8046023":"markdown","d15464c4":"markdown","06d52a0c":"markdown","7e5aafd2":"markdown","7c13fac9":"markdown","0b9644cb":"markdown","4ea2f808":"markdown","013b83ea":"markdown","7dfa2036":"markdown","ae416951":"markdown","6d39444a":"markdown","baae7b3b":"markdown","dbc0f78a":"markdown","f6a7a03e":"markdown","217c30c0":"markdown","4cb0cd92":"markdown","24832cb1":"markdown","9514760f":"markdown","bf18e799":"markdown","e8aba6c8":"markdown","2dbeb411":"markdown","7415ab33":"markdown","5fda2995":"markdown","3205f375":"markdown","85381480":"markdown","dce6c5fa":"markdown"},"source":{"97e0e398":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt","15caa3f4":"sales = pd.read_csv('..\/input\/supermarket-sales\/supermarket_sales - Sheet1.csv')","f95105ec":"sales.head()","dbf98039":"sales.shape # To check number of rows and columns","68d47fe8":"sales.columns","a7d72441":"sales = sales.set_index('Invoice ID')","86cbe804":"sales.head()","328caaeb":"sales.info()","8359693e":"sales['date'] = pd.to_datetime(sales['Date'])","c8be1d0a":"sales['date']","e951a74c":"type(sales['date'])","98736bb2":"sales['day'] = (sales['date']).dt.day\nsales['month'] = (sales['date']).dt.month\nsales['year'] = (sales['date']).dt.year","be3de0f3":"sales['Time'] = pd.to_datetime(sales['Time'])","9d45ca28":"sales['Hour'] = (sales['Time']).dt.hour    #type(sales['Time'])","cba1d9ba":"sales['Hour'].nunique()  #gives us the number of unique hours ","171b67bc":"sales['Hour'].unique()","103e7b1f":"categorical_columns = [cname for cname in sales.columns if sales[cname].dtype == \"object\"]","af174ec2":"categorical_columns","3cb19a28":"print(\"# unique values in Branch: {0}\".format(len(sales['Branch'].unique().tolist())))\nprint(\"# unique values in City: {0}\".format(len(sales['City'].unique().tolist())))\nprint(\"# unique values in Customer Type: {0}\".format(len(sales['Customer type'].unique().tolist())))\nprint(\"# unique values in Gender: {0}\".format(len(sales['Gender'].unique().tolist())))\nprint(\"# unique values in Product Line: {0}\".format(len(sales['Product line'].unique().tolist())))\nprint(\"# unique values in Payment: {0}\".format(len(sales['Payment'].unique().tolist())))","e5fd11d9":"sales.head()","f6a92982":"sales = sales.drop('Tax 5%', axis =1)\nsales = sales.drop('day', axis =1)\nsales = sales.drop('gross margin percentage', axis =1)","6d8c52f4":"sales.head()","270cd13e":"sales.describe()  # Statistical Summary","32f9065a":"sales['City'].value_counts(ascending = True)","fde62a70":"sales['Product line'].value_counts(ascending = True)\n","28299d6b":"df_revenue_by_city = sales.groupby('City').agg([np.sum, np.median, np.mean])\ndf_revenue_by_city[['gross income']].T","1ff1b48c":"df_revenue_by_city[['gross income', 'Unit price', 'Quantity']]\n","f95750ea":"df_revenue_by_gender = sales.groupby('Gender').agg([np.median,np.mean, sum])\ndf_revenue_by_gender.T","942cfe09":"df_revenue_by_membre = sales.groupby('Customer type').agg([np.median, sum])\ndf_revenue_by_membre.T","45ef6b1b":"sales.corr()\n","2026ce32":"np.round(sales.corr(),2) #Round a number to only two decimals\n","1b4dc841":"sns.pairplot(sales[[\"gross income\", \"Quantity\", \"Unit price\", \"Rating\"]], diag_kind=\"kde\")","924860a6":"plt.figure(dpi=125)\nsns.heatmap(np.round(sales.corr(),2),annot=True)\nplt.show()","d211458d":"# Plotting Histogram for all\nsales.hist(figsize=(15,15))\nplt.show()","4c4b2b90":"sns.countplot(x=\"Branch\", data =sales).set_title(\"Branch Count\") ","3ca117c2":"# Time to find most used Payment Method\n\nsns.countplot(x=\"Payment\", data =sales).set_title(\"Payment Channel\") \n","be883120":"plt.figure(dpi=125)\nsns.countplot(y = \"Product line\",  hue = \"Payment\", data =sales).set_title('Payment per Product line ')","f18476da":"# Payment Channel by Branch\nsns.countplot(x=\"Payment\", hue = \"Branch\", data =sales).set_title(\"Payment Channel by Branch\") \n","9533e731":"sns.countplot(x=\"Gender\", data =sales).set_title(\"Gender_Count\")\n","42b26db7":"sns.boxplot(x=\"Branch\", y = \"Rating\" ,data =sales).set_title(\"Ratings by Branch\") \n","40317ca4":"genderCount  = sns.lineplot(x=\"Hour\",  y = 'Quantity',data =sales).set_title(\"Product Sales per Hour\")\n","dbdc9525":"genderCount  = sns.relplot(x=\"Hour\",  y = 'Quantity', col= 'month' , row= 'Branch', kind=\"line\", hue=\"Gender\", style=\"Gender\", data =sales)","5213f7d5":"CustomerCount  = sns.relplot(x=\"Hour\",  y = 'Quantity', col= 'month' , row= 'Branch', kind=\"line\", hue=\"Customer type\", style=\"Customer type\", data =sales)","7114a3d3":"sns.relplot(x=\"Hour\",  y = 'Total', col= 'month' , row= 'Branch', estimator = None, kind=\"line\", data =sales)\n","9d7640dc":"sales['Rating'].unique()\n","06b3cabc":"sns.lineplot(x=\"Total\", y = \"Rating\", data =sales)\n","c1e56101":"sns.boxenplot(y = 'Product line', x = 'Quantity', data=sales )","f160ef80":"sns.countplot(y = 'Product line', data=sales, order = sales['Product line'].value_counts().index)\n","268d4d33":"sns.boxenplot(y = 'Product line', x = 'Total', data=sales )\n","6d2cbb2b":"sns.boxenplot(y = 'Product line', x = 'Rating', data=sales )\n","3d4ebcc7":"sns.boxenplot(y = 'Product line', x = 'Rating', data=sales )\n","e171b681":"sns.catplot(x='Product line',y='Unit price',hue='Gender',data=sales, kind = 'bar', aspect = 3 )\nsns.catplot(x='Product line',y='Total',hue='Gender',data=sales, kind = 'bar', aspect = 3 )\nsns.catplot(x='Product line',y='Quantity',hue='Gender',data=sales, kind = 'bar', aspect = 3 )","501ae7d6":"sns.catplot(x='Product line',y='Unit price',hue='City',kind='swarm',data=sales,aspect=2)\n","019abee3":"plt.figure(dpi=125)\nsns.countplot(y ='Product line', hue = \"City\", data = sales) ","09cd3401":"sns.catplot(x='Product line',y='Unit price',hue='Customer type',data=sales, kind = 'bar', aspect = 3 )","d6a6bd57":"sns.catplot(x='Product line',y='Unit price',kind='point',data=sales,aspect=2)\nplt.title('Product line per Unit price')\nsns.catplot(x='Product line',y='Quantity',kind='point',data=sales,aspect=2)\nplt.title('Product line per Quantity')\n","a8046023":"# Product Sales per Hour \n","d15464c4":"# Distribution of branch's sales quantity per hour  in a monthly fashion in function Customer type (membre\/normal)\n","06d52a0c":"# Ratings by Branch\n","7e5aafd2":"**A is the most busy branch**","7c13fac9":"Most of the item were sold around 14:00 hrs local time\n","0b9644cb":"**There is no difference between Normals customer and Member customer.**","4ea2f808":"* Naypyitaw is a good place to sell Fashion accessoires and Food & Beverages.\n* Yangon is a good place to sell Electronic accesoires.","013b83ea":"Let's see the unique rating of sales ","7dfa2036":"* Females custommers are most frequent on Fashion accesoires and Sports & travel.\n* Males customers are most frequent on Health and beauty.","ae416951":"**The 'Date' datatype is an object, we need to change it to datetime**","6d39444a":"# Data Visualization\n","baae7b3b":"# Distribution of branch's sales quantity per hour  in a monthly fashion in function Gender type (Female\/male)\n \n\n","dbc0f78a":"**Food and Beverages have the highest average rating while sports and travel the lowest**","f6a7a03e":"**Electronic accessoires has the low Unit price, on the other hand it has the high quantity of products purchased by customer\n=> Customers want to buy the cheap products like Electronic accessoires , Health & Beaty and Home & Lifestyle.**","217c30c0":"**Most of the customers pay through the Ewallet and Cash Payment.**","4cb0cd92":"From the above image shows the top product line item type sold in the given dataset:\n* Fashion Accessories is the highest.\n* Health andbeauty is the lowest.","24832cb1":"# FINAL COMPLETE BUSINESS REPORT\n# 1. The city chosen for expansion should be Naypyitaw. \n# 2. Open the store in Naypyitaw with a full-backed inventory of goods in product categories - Food and Beverages, Fashion Assesories and Electronics. \n# 3. The company should improve service in Electronics domain.\n# 4. Increase service in cash payment modes.","9514760f":"**From the above visual, Health and Beauty,Electronic accessories, Homem and lifestyle, Sports and travel have a better average quantity sales that food and beverages as well as Fashion accessories.**","bf18e799":"Let's see the unique hours of sales in this dataset","e8aba6c8":"Let's look at the various products' performance.\n\n","2dbeb411":"**Let's find Coorelation between all columns**","7415ab33":"# Distribution of each branch's sales quantity by the hour in a monthly fashion","5fda2995":"**Naypyitaw is the city which possed the high gross income.**","3205f375":"**Let's find the number of unique values in columns with object datatype**","85381480":"Branch B has the lowest rating among all the branches\n","dce6c5fa":"# Product Analysis\n"}}