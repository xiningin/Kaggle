{"cell_type":{"70436d8c":"code","bdbad02e":"code","3d9c6611":"code","0082781f":"code","6f673e71":"code","418abb69":"code","b9881011":"code","3b785209":"code","a373fb93":"code","c29e1bd8":"code","d380f300":"markdown","e1ab54de":"markdown","c57ed194":"markdown","951b27e3":"markdown","f3b9e594":"markdown","8aaccfef":"markdown","b45797ef":"markdown","eaff02fb":"markdown","8ce880f1":"markdown","8bf7b000":"markdown","c29ddc95":"markdown","79060b04":"markdown","33237ddd":"markdown"},"source":{"70436d8c":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\n\n# for hierarchical clusterization\nfrom scipy.cluster.hierarchy import dendrogram, linkage  \nfrom scipy.spatial.distance import  pdist\nfrom matplotlib import pyplot as plt\nfrom sklearn.preprocessing import MinMaxScaler\n\n# system\nfrom datetime import datetime\nimport os\nsns.set()\nprint(os.listdir(\"..\/input\"))\n","bdbad02e":"# inspired by [...]\ns1=pd.read_csv('..\/input\/s1v8-nanashi-90-lines-solution-0901-fast\/s1-v8.csv')['target']#[1]\ns2=pd.read_csv('..\/input\/santander-magic-lgb-0-901\/submission.csv')['target']#[2]\ns3=pd.read_csv('..\/input\/s3v32-ashish-gupta-eda-pca-scaler-lgbm\/s3-v32.csv')['target']#[3]\ns4=pd.read_csv('..\/input\/eda-pca-simple-lgbm-on-kfold-technique\/submission26.csv')['target']#[4]\ns5=pd.read_csv('..\/input\/lgb-2-leaves-augment\/lgb_submission.csv')['target']#[5]\ns6=pd.read_csv('..\/input\/lightgbm-with-data-augmentation\/2019-04-01_07_56_sub.csv')['target']#[6]\ns7=pd.read_csv('..\/input\/s7v19-subham-sharma-what-is-next-in-santander\/s7-v19.csv')['target']#[7]\ns8=pd.read_csv('..\/input\/s8v5-joshua-reed-santander-customer-transaction\/s8-v5.csv')['target']#[8]\ns9=pd.read_csv('..\/input\/s9v16-gauravtambi-lgbm-augmentation\/s9-v16.csv')['target']#[9]\ns10=pd.read_csv('..\/input\/best-parameters-lb-0-900\/submission.csv')['target']#[10]\n\nsubmission = pd.read_csv('..\/input\/santander-customer-transaction-prediction\/sample_submission.csv')\n\nsolutions_set = pd.DataFrame({'s1': s1, 's2': s2, 's3': s3, 's4': s4, 's5': s5, 's6': s6,\n                              's7': s7, 's8': s8, 's9': s9, 's10': s10})","3d9c6611":"# Scaling\nscaler = MinMaxScaler()  \nsolutions_set_scaled = scaler.fit_transform(solutions_set)\nsolutions_set_scaled = pd.DataFrame(solutions_set_scaled, columns = solutions_set.columns)","0082781f":"# transpose and convert solutions set to numpy\nnp_solutions_set = solutions_set_scaled.T.values\n# calculate the distances\nsolutions_set_dist = pdist(np_solutions_set)\n# hierarchical clusterization\nlinked = linkage(solutions_set_dist, 'ward')\n\n# dendrogram\nfig = plt.figure(figsize=(8, 5))\ndendrogram(linked, labels = solutions_set_scaled.columns)\nplt.title('0.901-solutions clusters')\nplt.show()","6f673e71":"# kendall correlation between the submissions\n# since we use AUC (the order is important), and distribution of the probability is not Normal, Kendal correlation is more appropriate\nplt.figure(figsize=(10, 6))\nkendall = solutions_set.corr(method = 'kendall')\nsns.heatmap(kendall, annot = True, fmt = \".3f\")\nplt.title('Kendall correlation of the 0.901-solutions')","418abb69":"sns.scatterplot(x = 's7', y = 's5', data = solutions_set_scaled)\nplt.title('Submisions of s7 and s5')","b9881011":"sns.scatterplot(x = 's7', y = 's6', data = solutions_set_scaled)\nplt.title('Submisions of s7 and s6')","3b785209":"sns.scatterplot(x = 's6', y = 's5', data = solutions_set_scaled)\nplt.title('Submisions of s6 and s5')","a373fb93":"# get scaled submissions s1, s2 ... s7\nfor s in solutions_set_scaled.columns:\n    s = solutions_set_scaled[s]\n    \ncluster1 = s7\ncluster2 = 1\/2*(s1 + s5 + s8 + s10)\ncluster3 = 1\/4*(s2 + s3 + s4 + s6 + s9)\n\nsubmission['target'] = 0.1*cluster1 + 0.8*cluster2 + 0.1*cluster3","c29e1bd8":"filename=\"blended_submission_{:%Y-%m-%d_%H_%M}.csv\".format(datetime.now())\nsubmission.to_csv(filename, index=False)","d380f300":"As we can see there are 3 clusters of solutions, as previously: \n    1. blue: s7 (see [7])\n    2. green: s1, s5, s8, s10 (see [1], [5], [8], [10])\n    3. red: s3, s6, s2, s4, s9 (see [3], [6], [2], [4], [9])\n\nSolutions s8 [8] and s10 [10] joined the green cluster. Solution s9 [9] joined the red cluster.\n\nSolutions in red cluster are very close to each other.","e1ab54de":"As we can see clusterization combined the most correlated solutions","c57ed194":"# Submission","951b27e3":"**The purpose:** \n\n`To show a hierarchical clusterization approach to blend solutions. You can use this methodic to achieve a higher score of your own models.`\n\n**What's new:**\n* v7: 3 new 0.901-solution are added (see [8], [9], [10]).\n* v7: all the 0.901-solutions are updated*\n* v7: new clusters weights\n* v6: Clusterization approach and scatter plots for solutions are added.\n\n**Interesting results:**\n* Solutions still can be grouped only into 3 clusters\n* Solution **[5]** still remains the most weighted\/valubale for the scoring.\n\n\\* if the current version of a source kernel doesn't have 0.901 score than the previous version is used (for example, s6-v1.csv dataset is used instead of the original kernel))\n\n\\* Previous version #6 of this kernel is [here](https:\/\/www.kaggle.com\/darbin\/clustering-blender-of-0-901-solutions?scriptVersionId=12339637)\n","f3b9e594":"We will use scaled submissions (transformed so that they have the same min and max values).\nTaking into consideration that we have 3 clusters and that cluster #2 (which includes solution s5 [5]) has higher AUC (0.9016) comparatively to clusters #1 (0.9010) and #3 (0.9011), let's suggest the following weights and formula:","8aaccfef":"# Solutions clusters","b45797ef":"Let's take that s7 represents **solutions cluster** #1 (blue), s5 - cluster #2 (green), and s6 - cluster #3 (red)","eaff02fb":"Additional information about the clusters:\n    1. solution s7 - has AUC ~0.9010, speed ~4987 sec.\n    2. solution s5 - has AUC ~0.9016, speed ~22080 sec.\n    3. solution s6 - has AUC ~0.9011, speed ~27813 sec.","8ce880f1":"As the graphs show, there are no outliers.","8bf7b000":"# Preprocessing","c29ddc95":"# Scatter plots for solutions clusters","79060b04":"# Blending","33237ddd":"# Inspired by:\n\n[0] [Nanashi (#150), \"Simple blend (my best score)\"](https:\/\/www.kaggle.com\/jesucristo\/simple-blend-my-best-score)\n\n[1] [Nanashi (#150), \"90 lines solution 0.901 #Fast\": V8](https:\/\/www.kaggle.com\/jesucristo\/90-lines-solution-0-901-fast?scriptVersionId=11837989). Dataset: s1-v8\n\n[2] [Nanashi (#150), \"Santander Magic LGB 0.901\": V21](https:\/\/www.kaggle.com\/jesucristo\/santander-magic-lgb-0-901?scriptVersionId=11960403). Dataset: original (current version of kernel)\n\n[3] [Ashish Gupta (#271), \"EDA, PCA + LGBM : Santander Transactions\": V32](https:\/\/www.kaggle.com\/roydatascience\/eda-pca-lgbm-santander-transactions?scriptVersionId=11798375). Dataset: s3-v32\n\n[4] [Ashish Gupta (#271), \"EDA, PCA + Simple LGBM on KFold Technique\"](https:\/\/www.kaggle.com\/roydatascience\/eda-pca-simple-lgbm-on-kfold-technique). Dataset: original (current version of kernel)\n\n[5] [Jiwei Liu (#8), \"LGB 2 leaves + augment\"](https:\/\/www.kaggle.com\/jiweiliu\/lgb-2-leaves-augment). Dataset: original (current version of kernel)\n\n[6] [Ole Morten Grod\u00e5s (#686), \"Lightgbm with data augmentation\"](https:\/\/www.kaggle.com\/omgrodas\/lightgbm-with-data-augmentation). Dataset: original (current version of kernel)\n\n[7] [Subham Sharma (#2123), \"Santander (-: Augment to the rescue\": V19](https:\/\/www.kaggle.com\/subhamsharma96\/santander-augment-to-the-rescue?scriptVersionId=11821134). Dataset: s7-v19\n\n[8] [Joshua Reed (#1909), \"Santander Customer Transaction Prediction\": V5](https:\/\/www.kaggle.com\/josh24990\/santander-customer-transaction-prediction). Dataset: s8-v5\n\n[9] [GauravTambi (#1567), \"LGBM + Augmentation\": V16](https:\/\/www.kaggle.com\/gtambi\/lgbm-augmentation?scriptVersionId=12043767). Dataset: s9-v16\n\n[10] [Deepak N (#2150), \"Best Parameters LB 0.900\"](https:\/\/www.kaggle.com\/deepak525\/best-parameters-lb-0-900). Dataset: original (current version of kernel)\n\n# Hierarchical clusterization components:\n\n- [scipy dendrogram](https:\/\/docs.scipy.org\/doc\/scipy-0.14.0\/reference\/generated\/scipy.cluster.hierarchy.dendrogram.html)\n- [scipy pdist](https:\/\/docs.scipy.org\/doc\/scipy-0.14.0\/reference\/generated\/scipy.spatial.distance.pdist.html)\n- [scipy linkage](https:\/\/docs.scipy.org\/doc\/scipy\/reference\/generated\/scipy.cluster.hierarchy.linkage.html)"}}