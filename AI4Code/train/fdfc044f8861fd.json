{"cell_type":{"eb06a938":"code","81e12e16":"code","467afb97":"code","b20d53a1":"code","ad86b44a":"code","9dbc83f3":"code","62a3ef4f":"code","bef486d6":"code","f2178ba2":"code","f8b3fa1d":"code","caf09b82":"code","94ce60de":"code","5a2e4d64":"code","17b3c136":"code","91ef1364":"code","15cb629a":"code","6c307eb2":"code","f5085149":"markdown","ea18378f":"markdown","c93c370b":"markdown","0e1d83a6":"markdown","b263a3b7":"markdown","f60198e9":"markdown","918d12a5":"markdown","cc8e99c7":"markdown","55da0a88":"markdown"},"source":{"eb06a938":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","81e12e16":"from fastai.text import *\nfrom fastai.datasets import URLs\nimport torch\nimport pandas as pd\nimport numpy as np\nimport logging\nimport os\nimport random","467afb97":"!( head -5000 ..\/input\/train.csv ) > train.csv # reducing size to train to quickly run the entire code and submit \n!cp ..\/input\/test.csv test.csv\ntrain_file = 'train.csv'\ntest_file = 'test.csv'\nfolder = '.'","b20d53a1":"data_lm = TextLMDataBunch.from_csv(folder, \n                                   train_file, \n                                   text_cols='question_text', \n                                   label_cols='target')\nassert data_lm.device == torch.device('cuda')","ad86b44a":"data_lm.save('data_lm_export.pkl')","9dbc83f3":"data_clas = TextClasDataBunch.from_csv(folder, \n                                       train_file,\n                                       test=test_file,\n                                       valid_pct=0.1,\n                                       vocab=data_lm.train_ds.vocab, \n                                       bs=32,\n                                       text_cols='question_text', \n                                       label_cols='target')","62a3ef4f":"data_clas.save('data_clas_export.pkl')","bef486d6":"# Language model trainer (66 min with whole training set)\nlearn = language_model_learner(data_lm, AWD_LSTM,\n                           drop_mult=0.5)\nlearn.fit_one_cycle(1 , 1e-2)\nlearn.save_encoder('encoder')","f2178ba2":"learn_classifier = text_classifier_learner(data_clas, AWD_LSTM, drop_mult=0.5)\nlearn_classifier.load_encoder('encoder')\nlearn_classifier.fit_one_cycle(1, 1e-2) ","f8b3fa1d":"# Language model prediction\nlearn.predict(\"This is a review about\", n_words=10)","caf09b82":"# Classifier model prediction\nlearn_classifier.predict(\"This is a review about a question\")","94ce60de":"preds,_ = learn_classifier.get_preds(ds_type=DatasetType.Test)","5a2e4d64":"result_df = pd.read_csv(\"..\/input\/sample_submission.csv\")","17b3c136":"result_df.prediction = preds.numpy()[:, 0]","91ef1364":"result_df.describe()","15cb629a":"result_df['prediction'] = (result_df['prediction'] > 0.98).astype(int)","6c307eb2":"result_df.to_csv('submission.csv', index=False)","f5085149":"# Load classifier model","ea18378f":"# Imports","c93c370b":"# Load language model","0e1d83a6":"# Utils","b263a3b7":"# Fine tune language model","f60198e9":"# Prediction","918d12a5":"# Save classifier model","cc8e99c7":"# Save language model","55da0a88":"# Fine tune classifier model"}}