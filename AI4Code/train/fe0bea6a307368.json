{"cell_type":{"ab30443e":"code","d7fd1723":"code","7ddc3a20":"code","0077ea79":"code","7684ebc4":"code","147301e7":"code","212e5401":"code","83ca06c7":"code","3943b082":"code","beca1a9a":"code","96e1004f":"code","f7a7f286":"code","f47644ef":"code","aace9e65":"code","d5349e9f":"code","5287920d":"code","73b6dea5":"code","feda5130":"code","b2a970f9":"code","b80b1b5f":"code","32199d18":"code","7f2d82c9":"code","5b83e21b":"code","09a296aa":"code","37ad6ece":"code","5687c0d9":"code","2661cb26":"code","b79cd004":"code","08e93260":"code","d80905ea":"code","5a5d79dc":"code","f7790d4e":"markdown","729259d8":"markdown","44a4d9bb":"markdown","c881fa42":"markdown","051415ab":"markdown","b4b258bd":"markdown","11a4eb9d":"markdown","9f3f2b17":"markdown","14e93444":"markdown","636af654":"markdown","c889305e":"markdown","6035df8b":"markdown","35333d7f":"markdown","a2878e59":"markdown"},"source":{"ab30443e":"from transformers import pipeline","d7fd1723":"text_generation = pipeline(\"text-generation\")","7ddc3a20":"prefix_text = \"The world is\"","0077ea79":"generated_text = text_generation(prefix_text, max_length=50, do_sample=False)[0]\nprint(generated_text['generated_text'])","7684ebc4":"from transformers import BertTokenizerFast, AutoModelWithLMHead","147301e7":"tokenzier = BertTokenizerFast.from_pretrained('bert-base-chinese')\nmodel = AutoModelWithLMHead.from_pretrained('ckiplab\/gpt2-base-chinese')","212e5401":"text_generation = pipeline(\"text-generation\", model=model, tokenizer=tokenzier)","83ca06c7":"prefix_text = \"\u6211 \u60f3 \u8981 \u53bb\"\n# chinese for I want to go","3943b082":"generated_text = text_generation(prefix_text, max_length=50, do_sample=False)[0]\nprint(generated_text['generated_text'])","beca1a9a":"from transformers import AutoTokenizer, AutoModelForSeq2SeqLM\ntokenizer = AutoTokenizer.from_pretrained(\"Helsinki-NLP\/opus-mt-zh-en\")\nmodel = AutoModelForSeq2SeqLM.from_pretrained(\"Helsinki-NLP\/opus-mt-zh-en\")\ntext = generated_text['generated_text']\ntokenized_text = tokenizer([text], return_tensors='pt')\ntranslation = model.generate(**tokenized_text)\ntranslated_text = tokenizer.batch_decode(translation, skip_special_tokens=False)[0]\n","96e1004f":"print(translated_text)","f7a7f286":"question_answering = pipeline(\"question-answering\")","f47644ef":"question_answering = pipeline(\"question-answering\")\n\ncontext = \"\"\"\nMachine learning (ML) is the study of computer algorithms that improve automatically through experience. It is seen as a part of artificial intelligence. Machine learning algorithms build a model based on sample data, known as \"training data\", in order to make predictions or decisions without being explicitly programmed to do so. Machine learning algorithms are used in a wide variety of applications, such as email filtering and computer vision, where it is difficult or unfeasible to develop conventional algorithms to perform the needed tasks.\n\"\"\"\n\ncontext1 = \"Finding love isn't easy. Not everyone finds a partner. In order to find a partner it is necessary that we are self satisfied and okay with living with yourself\"","aace9e65":"question = \"What isn't easy?\"\n\nresult = question_answering(question=question, context=context1)\nprint(result['answer'])\nprint(result['score'])\n\n\n# correct answer!","d5349e9f":"question_answering = pipeline(\"question-answering\", model=\"mrm8488\/bert-multi-cased-finetuned-xquadv1\",\n    tokenizer=\"mrm8488\/bert-multi-cased-finetuned-xquadv1\")","5287920d":"context = \"\"\"\u673a\u5668\u5b66\u4e60\u662f\u4eba\u5de5\u667a\u80fd\u7684\u4e00\u4e2a\u5206\u652f\u3002 \u662f\u4e2a\u4eba\u5f88\u70ed\u95e8\u7684\u4e13\u4e1a\u3002\"\"\"\n## Machine Learning is a branch of Artificial Intelligence. It is a popular major.","73b6dea5":"question = \"\u673a\u5668\u5b66\u4e60\u662f\u4ec0\u4e48\u7684\u5206\u652f\uff1f\"\n## What is Machine Learning a branch of?","feda5130":"result = question_answering(question=question, context=context)\n\nprint(result['answer'])\nprint(result['score'])","b2a970f9":"text = result['answer']\nprint(text)\ntokenized_text = tokenizer([text], return_tensors='pt') ### It is still chinese\ntranslation = model.generate(**tokenized_text)\ntranslated_text = tokenizer.batch_decode(translation, skip_special_tokens=False)[0]","b80b1b5f":"print(translated_text)","32199d18":"summarizer = pipeline(\"summarization\")","7f2d82c9":"ARTICLE = \"\"\"\nNew York (CNN)When Liana Barrientos was 23 years old, she got married in Westchester County, New York.\n... A year later, she got married again in Westchester County, but to a different man and without divorcing her first husband.\n... Only 18 days after that marriage, she got hitched yet again. Then, Barrientos declared \"I do\" five more times, sometimes only within two weeks of each other.\n... In 2010, she married once more, this time in the Bronx. In an application for a marriage license, she stated it was her \"first and only\" marriage.\n... Barrientos, now 39, is facing two criminal counts of \"offering a false instrument for filing in the first degree,\" referring to her false statements on the\n... 2010 marriage license application, according to court documents.\n... Prosecutors said the marriages were part of an immigration scam.\n... On Friday, she pleaded not guilty at State Supreme Court in the Bronx, according to her attorney, Christopher Wright, who declined to comment further.\n... After leaving court, Barrientos was arrested and charged with theft of service and criminal trespass for allegedly sneaking into the New York subway through an emergency exit, said Detective\n... Annette Markowski, a police spokeswoman. In total, Barrientos has been married 10 times, with nine of her marriages occurring between 1999 and 2002.\n... All occurred either in Westchester County, Long Island, New Jersey or the Bronx. She is believed to still be married to four men, and at one time, she was married to eight men at once, prosecutors say.\n... Prosecutors said the immigration scam involved some of her husbands, who filed for permanent residence status shortly after the marriages.\n... Any divorces happened only after such filings were approved. It was unclear whether any of the men will be prosecuted.\n... The case was referred to the Bronx District Attorney\\'s Office by Immigration and Customs Enforcement and the Department of Homeland Security\\'s\n... Investigation Division. Seven of the men are from so-called \"red-flagged\" countries, including Egypt, Turkey, Georgia, Pakistan and Mali.\n... Her eighth husband, Rashid Rajput, was deported in 2006 to his native Pakistan after an investigation by the Joint Terrorism Task Force.\n... If convicted, Barrientos faces up to four years in prison.  Her next court appearance is scheduled for May 18.\n\"\"\"","5b83e21b":"print(summarizer(ARTICLE, max_length=120, min_length=30, do_sample=False))","09a296aa":"ner_pipe = pipeline(\"ner\")","37ad6ece":"sequence = \"\"\"\n    Hugging Face Inc. is a company based in New York City. Its headquarters are in DUMBO,\n... therefore very close to the Manhattan Bridge which is visible from the window.\n\"\"\"","5687c0d9":"for i in ner_pipe(sequence):\n    print(i)","2661cb26":"from transformers import AutoModelForTokenClassification, AutoTokenizer\n\nmodel = AutoModelForTokenClassification.from_pretrained(\"dbmdz\/bert-large-cased-finetuned-conll03-english\")\ntokenizer = AutoTokenizer.from_pretrained(\"bert-base-cased\")","b79cd004":"sequence = \"Hugging Face Inc. is a company based in New York City. Its headquarters are in DUMBO, therefore very lose to the Manhattan Bridge.\"","08e93260":"tokens = tokenizer.tokenize(tokenizer.decode(tokenizer.encode(sequence)))\ninputs = tokenizer.encode(sequence, return_tensors=\"pt\")","d80905ea":"import torch\n\noutputs = model(inputs).logits\npredictions = torch.argmax(outputs, dim=2)","5a5d79dc":"for token, prediction in zip(tokens, predictions[0].numpy()):\n    print((token, model.config.id2label[prediction]))","f7790d4e":"# TEXT SUMMARIZATION","729259d8":"This will create a model pretrained on question answering as well as its tokenizer in the background. The default model used in this case is DistilBERT-base, which is fine-tuned on the SQuAD dataset. You can learn more about DistilBERT in its paper.\n\n","44a4d9bb":"If you want to do a translation of any two custom languages, say English to Chinese, then you need a model that is specifically fine-tuned on that specific task. Fortunately, with the community established by Huggingface, you most likely don\u2019t need to collect your own dataset and fine-tune your model on it. ","c881fa42":"# QUESTION ANSWERING\n\n### with context of your choice","051415ab":"# NAME ENTITY RECOGNITION","b4b258bd":"# NAME TOKENIZER USING MODELS","11a4eb9d":"![](https:\/\/cdn.analyticsvidhya.com\/wp-content\/uploads\/2020\/06\/transformer_feat_img.png)","9f3f2b17":"### Lets translate it back so that we answer was","14e93444":"# TEXT TRANSLATION\n\n### lets look at the previously generated text","636af654":"# QUESTION ANSWERING IN A LANGUAGE OF YOUR CHOICE\n\n### again lets try chinese","c889305e":"Actual translation\n\n![](https:\/\/github.com\/fanbyprinciple\/nlp-with-pytorch\/hugging_face\/actual_translation.png)","6035df8b":"# TEXT GENERATION IN A LANGUAGE OF YOUR CHOICE\n\n### Lets load a chinese model","35333d7f":"# TEXT GENERATION\n\n### Simple off the shelf text generation","a2878e59":"# Hugging Face\n\nWhy you do this?\n\n![](https:\/\/raw.githubusercontent.com\/fanbyprinciple\/nlp-with-pytorch\/master\/hugging_face\/what_isnt_easy.png)"}}