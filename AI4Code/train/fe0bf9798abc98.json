{"cell_type":{"7cfbc5a8":"code","66095ea2":"code","bcba52d4":"code","2399264d":"code","10c918b0":"code","c711c866":"code","bc9a2bf3":"code","af6168da":"code","7c34417c":"code","d558fdf0":"code","1206074e":"code","f9279cdd":"code","e87e4e64":"code","e812c880":"code","4c8d6745":"code","2a313054":"code","509fdf52":"code","8fb1e36c":"code","3f1b40f5":"code","a3aa84f0":"code","fc1a03e5":"markdown","61a45e20":"markdown","80290c56":"markdown","15f2614d":"markdown","296620c2":"markdown","4c8ec5a5":"markdown","f5a57577":"markdown","89f20aa9":"markdown","613f756a":"markdown","1d148e9c":"markdown"},"source":{"7cfbc5a8":"import seaborn as sns\nimport pandas as pd\nimport numpy as np\nRANDOM_SEED = 777","66095ea2":"data = pd.read_csv('..\/input\/logistic-classification-diabetes-knn\/train.csv', index_col=0)\ndata.head()","bcba52d4":"sns.set()\nsns.pairplot(data, hue='8', size=2.5)","2399264d":"data.describe()","10c918b0":"x = data.drop('8', axis=1)\ny = data['8']\nprint(x.shape)\nprint(y.shape)","c711c866":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=RANDOM_SEED, stratify=y)\nprint(x_train.shape)\nprint(x_test.shape)","bc9a2bf3":"# \ub370\uc774\ud130 \ud45c\uc900\ud654\nfrom sklearn.preprocessing import StandardScaler\nscale=StandardScaler()\nx_train_std=scale.fit_transform(x_train)\nx_test_std=scale.transform(x_test)","af6168da":"y_train.sum()","7c34417c":"from imblearn.over_sampling import SMOTE, ADASYN\nada = ADASYN(random_state=RANDOM_SEED)\nx_syn, y_syn = ada.fit_resample(x_train, y_train)\n\nada_std = ADASYN(random_state=RANDOM_SEED)\nx_syn_std, y_syn_std = ada_std.fit_resample(x_train_std, y_train)\n\nsmt = SMOTE(random_state=RANDOM_SEED)\nx_smt, y_smt = smt.fit_resample(x_train, y_train)\n\nsmt_std = SMOTE(random_state=RANDOM_SEED)\nx_smt_std, y_smt_std = smt_std.fit_resample(x_train_std, y_train)","d558fdf0":"from sklearn.neighbors import KNeighborsClassifier\nknn_syn = KNeighborsClassifier(n_neighbors=5, p=2)\nknn_syn.fit(x_syn, y_syn)\n\nknn_syn_std = KNeighborsClassifier(n_neighbors=5, p=2)\nknn_syn_std.fit(x_syn_std, y_syn_std)\n\nknn_smt = KNeighborsClassifier(n_neighbors=5, p=2)\nknn_smt.fit(x_smt, y_smt)\n\nknn_smt_std = KNeighborsClassifier(n_neighbors=5, p=2)\nknn_smt_std.fit(x_smt_std, y_smt_std)\n\nknn = KNeighborsClassifier(n_neighbors=5, p=2)\nknn.fit(x_train, y_train)\n\nknn_std = KNeighborsClassifier(n_neighbors=5, p=2)\nknn_std.fit(x_train_std, y_train)\nprint('fit complete')","1206074e":"syn_pred = knn_syn.predict(x_test)\nsyn_std_pred = knn_syn_std.predict(x_test_std)\nsmt_pred = knn_smt.predict(x_test)\nsmt_std_pred = knn_smt_std.predict(x_test_std)\nknn_pred = knn.predict(x_test)\nknn_std_pred = knn_std.predict(x_test_std)","f9279cdd":"from sklearn.metrics import accuracy_score\nprint(accuracy_score(y_test, syn_pred))\nprint(accuracy_score(y_test, syn_std_pred))\nprint(accuracy_score(y_test, smt_pred))\nprint(accuracy_score(y_test, smt_std_pred))\nprint(accuracy_score(y_test, knn_pred))\nprint(accuracy_score(y_test, knn_std_pred))","e87e4e64":"from sklearn.metrics import confusion_matrix#  \uc624\ubd84\ub958\ud45c \uc791\uc131\nconf1=confusion_matrix(y_true=y_test, y_pred=knn_std_pred)\nconf2=confusion_matrix(y_true=y_test, y_pred=smt_pred)\nconf3=confusion_matrix(y_true=y_test, y_pred=knn_pred)\nprint(conf1)\nprint(conf2)\nprint(conf3)","e812c880":"scaler = StandardScaler()\nx_train_std = scale.fit_transform(x_train)\nx_test_std = scale.transform(x_test)","4c8d6745":"knn = KNeighborsClassifier(n_neighbors=27, p=2)\nknn.fit(x_train_std, y_train)\n\npredict_knn = knn.predict(x_test_std)\nprint(accuracy_score(y_test, predict_knn))","2a313054":"test = pd.read_csv('..\/input\/logistic-classification-diabetes-knn\/test_data.csv', index_col=0).drop('8', axis=1)\ntest.head()","509fdf52":"test = scale.transform(test) # \ud45c\uc900\ud654\npred = knn.predict(test)\npred[:5]","8fb1e36c":"submit = pd.read_csv('..\/input\/logistic-classification-diabetes-knn\/submission_form.csv', index_col=0)\nsubmit.head()","3f1b40f5":"submit['Label'] = pred\nsubmit['Label'] = submit['Label'].astype(int)\nsubmit.head()","a3aa84f0":"submit.to_csv('submit.csv')","fc1a03e5":"## KNN \uc801\uc6a9","61a45e20":"- \uc77c\ubc18\uc801\uc73c\ub85c \ud45c\uc900\ud654\uac00 \uc131\ub2a5\uc744 \ud5a5\uc0c1\uc2dc\ucf30\uace0, \uacfc\ub300\ud3ec\uc9d1\uc740 \uc758\uc678\ub85c \uacb0\uacfc\uac00 \uc88b\uc9c0 \uc54a\uc558\ub2e4.\n- \uacfc\ub300\ud3ec\uc9d1\uc744 \uc801\uc6a9\ud55c \ubaa8\ub378\uc774 \uc131\ub2a5\uc774 \uac00\uc7a5 \uc88b\uc744 \uac83\uc774\ub77c\ub294 \uc608\uc0c1\uacfc \ub2e4\ub978 \uacb0\uacfc\uac00 \ub098\uc654\ub294\ub370, \uacfc\ub300\ud3ec\uc9d1\uc758 \uacb0\uacfc\ub85c \uc778\ud574 \uc774\uc0c1 \ub370\uc774\ud130\ub3c4 \uc99d\uac00\ud558\uba74\uc11c, k\ub97c \ub0ae\ucdb0\uc904 \ud544\uc694\uac00 \uc0dd\uae34 \ub4ef \ud558\ub2e4.\n\n- \uacb0\uacfc\uc801\uc73c\ub85c, \ud45c\uc900\ud654\ud55c ADASYN \ubaa8\ub378\uacfc \ud45c\uc900\ud654\ud55c KNN \ubaa8\ub378 \ub450 \ubaa8\ub378\uc758 k\ub97c \uc870\uc808\ud558\uc5ec \ucd5c\uc0c1\uc758 \ubaa8\ub378\uc744 \ucc3e\uae30\ub85c \ud588\ub2e4.","80290c56":"\ub370\uc774\ud130\uc758 \ubd84\ud3ec\uac00 Bell-shape\ub97c \ub9ce\uc774 \ub744\ubbc0\ub85c \uc815\uaddc\ud654 \ub300\uc2e0 \ud45c\uc900\ud654\ub97c \uc368\ubcf4\uc790.\n\n\uc544\uc608 \uc548\ud558\ub294\uac8c \ub098\uc744 \uac83 \uac19\uae30\ub3c4 \ud558\ub2c8, \ucd94\ud6c4\uc5d0 test\ub85c \ube44\uad50\ud574 \ubcfc \uc608\uc815.","15f2614d":"## Data EDA","296620c2":"## \uacfc\ub300\ud3ec\uc9d1 \uc801\uc6a9\n\uc774 \ub370\uc774\ud130\ub294 \uc804\uccb4 \ub370\uc774\ud130 567\uac1c \uc911, \uc591\uc131 \ub370\uc774\ud130\uac00 372 \uac1c\uc778 \ubd88\uade0\ud615 \ub370\uc774\ud130\uc774\ub2e4.   \n\uacfc\ub300\ud3ec\uc9d1\uc744 \uc774\uc6a9\ud574 \uc774\ub97c \ud574\uacb0\ud574\ubcf4\uc790.","4c8ec5a5":"## \uacb0\uacfc \ube44\uad50","f5a57577":"## Data Split, Pre-Processing","89f20aa9":"## \ucd5c\uc0c1 \ubaa8\ub378 \ud0d0\uc0c9","613f756a":"# \ub2f9\ub1e8\ubcd1 \uc608\uce21 \ubb38\uc81c KNN\uc73c\ub85c \ud480\uae30","1d148e9c":"- \uba87 \ucc28\ub840\uc758 \uc2e4\ud5d8 \uacb0\uacfc, \uacfc\ub300\uc801\ud569\uc740 \uc804\uccb4\uc801\uc73c\ub85c \ub0ae\uc740 \uc815\ud655\ub3c4\ub97c \ubcf4\uc5ec\uc92c\ub2e4.\n- \ucd5c\uc0c1\uc758 \uacb0\uacfc\ub294, \ud45c\uc900\ud654\ud55c \ub370\uc774\ud130\uc5d0 k=27, p=2\uc778 KNN\uc744 \uc801\uc6a9\ud55c \uacbd\uc6b0 0.788\uc758 \uc815\ud655\ub3c4\ub97c \uae30\ub85d\ud588\ub2e4. <- \uc77c\ub2e8 \uc774\uac78 \uc81c\ucd9c\ud574\ubcf4\uc790."}}