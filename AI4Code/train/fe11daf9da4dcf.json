{"cell_type":{"0c30884a":"code","443f8399":"code","3a7f4212":"code","b2cbca8a":"code","cbbf3233":"code","76756ccf":"code","b7f6981d":"code","ae2c2830":"code","0c92dc8d":"code","69b27760":"code","7e97a489":"code","19855ad7":"code","b9a823ba":"code","316fc016":"code","a5276cb3":"code","ab8bc9b6":"code","2838b0be":"code","fe27a999":"code","682152fc":"code","ec94d2c9":"code","69d31559":"code","d6307989":"code","b722d54c":"code","41f74b02":"code","9bc3d56a":"code","b0ab742f":"code","6944e26e":"code","229aa90c":"code","225cf568":"code","ead4c294":"code","8ed4ed96":"code","141744fb":"code","5c42f9bc":"markdown","2bcab238":"markdown","945907c7":"markdown","6f87a723":"markdown","9548c2b6":"markdown","788ef0e0":"markdown","8889fdbd":"markdown","470d3daf":"markdown","c5639096":"markdown","bb27aaf8":"markdown","de5fc05b":"markdown","1e5e12ad":"markdown","25c3ba14":"markdown","4ae48dd0":"markdown","28da479b":"markdown","412d3138":"markdown","ed2325f7":"markdown","5245d958":"markdown","2ca6f4e7":"markdown","3e3ac26e":"markdown","6e18c375":"markdown","f1bf9795":"markdown"},"source":{"0c30884a":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))","443f8399":"houseprice=pd.read_csv('..\/input\/train.csv')\nhouseprice.head()","3a7f4212":"# To check how many columns have missing values - this can be repeated to see the progress made\ndef show_missing():\n    missing = houseprice.columns[houseprice.isnull().any()].tolist()\n    return missing","b2cbca8a":"houseprice[show_missing()].isnull().sum()","cbbf3233":"# Looking at categorical values\ndef cat_exploration(column):\n    return houseprice[column].value_counts()","76756ccf":"# Imputing the missing values\ndef cat_imputation(column, value):\n    houseprice.loc[houseprice[column].isnull(),column] = value","b7f6981d":"# check correlation with LotArea\nhouseprice['LotFrontage'].corr(houseprice['LotArea'])","ae2c2830":"# improvement - and good enough for now\nhouseprice['SqrtLotArea']=np.sqrt(houseprice['LotArea'])\nhouseprice['LotFrontage'].corr(houseprice['SqrtLotArea'])","0c92dc8d":"import seaborn as sns\n%pylab inline\nsns.pairplot(houseprice[['LotFrontage','SqrtLotArea']].dropna())","69b27760":"cond = houseprice['LotFrontage'].isnull()\nhouseprice.LotFrontage[cond]=houseprice.SqrtLotArea[cond]","7e97a489":"# This column is not needed anymore\ndel houseprice['SqrtLotArea']","19855ad7":"cat_exploration('Alley')","b9a823ba":"# I assume empty fields here mean no alley access\ncat_imputation('Alley','None')","316fc016":"houseprice[['MasVnrType','MasVnrArea']][houseprice['MasVnrType'].isnull()==True]","a5276cb3":"cat_exploration('MasVnrType')","ab8bc9b6":"cat_imputation('MasVnrType', 'None')\ncat_imputation('MasVnrArea', 0.0)","2838b0be":"basement_cols=['BsmtQual','BsmtCond','BsmtExposure','BsmtFinType1','BsmtFinType2','BsmtFinSF1','BsmtFinSF2']\nhouseprice[basement_cols][houseprice['BsmtQual'].isnull()==True]","fe27a999":"for cols in basement_cols:\n    if 'FinSF'not in cols:\n        cat_imputation(cols,'None')","682152fc":"cat_exploration('Electrical')","ec94d2c9":"# Impute most frequent value\ncat_imputation('Electrical','SBrkr')","69d31559":"cat_exploration('FireplaceQu')","d6307989":"houseprice['Fireplaces'][houseprice['FireplaceQu'].isnull()==True].describe()","b722d54c":"cat_imputation('FireplaceQu','None')","41f74b02":"pd.crosstab(houseprice.Fireplaces, houseprice.FireplaceQu)","9bc3d56a":"garage_cols=['GarageType','GarageQual','GarageCond','GarageYrBlt','GarageFinish','GarageCars','GarageArea']\nhouseprice[garage_cols][houseprice['GarageType'].isnull()==True]","b0ab742f":"#Garage Imputation\nfor cols in garage_cols:\n    if houseprice[cols].dtype==np.object:\n        cat_imputation(cols,'None')\n    else:\n        cat_imputation(cols, 0)","6944e26e":"cat_exploration('PoolQC')","229aa90c":"houseprice['PoolArea'][houseprice['PoolQC'].isnull()==True].describe()","225cf568":"cat_imputation('PoolQC', 'None')","ead4c294":"cat_imputation('Fence', 'None')","8ed4ed96":"cat_imputation('MiscFeature', 'None')","141744fb":"houseprice[show_missing()].isnull().sum()","5c42f9bc":"So in the cases where the categorical variables are NaN, the numerical ones are 0. Which means there's no basement, so the categorical ones should also be set to \"None\".","2bcab238":"### Pool","945907c7":"Many missing values - are they all without a pool?","6f87a723":"### Basement","9548c2b6":"I would assume that the 690 just don't have a fireplace. Let's check:","788ef0e0":"### Are we done?","8889fdbd":"### MasVnr","470d3daf":"### LotFrontage\/LotArea\nA number of values are missing and one possibility would be just  to impute the mean. However, there should actually be a correlation with LotArea, which has no missing values.","c5639096":"### MiscFeature","bb27aaf8":"Since \"None\" is the most frequent value, I will impute \"None\" for the Type, and 0.0 for the area.","de5fc05b":"All missing values are vanished.","1e5e12ad":"### Fence","25c3ba14":"## Plan\nLet's look at these variables in the data dictionary:\n\n* LotFrontage: Linear feet of street connected to property. We cannot keep it 0 (as this would be a property without access), so either impute mean or  see if there's a correlation with LotArea (like square root?).\n\n* Alley: Type of alley access to property -> Many missing values, lets  presume that these properties just don't have an alley access.\n\n* MasVnrType\/MasVnrArea -> both have 8 values missing, We presume they are the same ones. Either set as \"None\"\/0 or use most frequent value\/median.\n\n* Bsmt... Variables: A  number of variables in connection with the basement. About the same number of missing values. However, there are two basement-related variables without missing values \"BsmtFinSF1\" and \"BsmtFinSF2\" - look at those and then decide what to do with the missing values.\n\n* Electrical: Just one missing value - here just impute most frequent one.\n\n* FireplaceQu: We assume the properties with missing values just don't have a fireplace. There's also the variable Fireplaces (without missing values) - check this and then decide.\n\n* Garage ... Variables: 81 missing in these columns. However, there are some Garage-related variables without missing values: GarageCars, GarageArea - check these and then decide.\n\n* PoolQC - probably no pool - but check against PoolArea (which has no missing values).\n\n* Fence: Many missing values - probably no fence, just impute 'None'\n\n* MiscFeature: Assuming none - probably no special features, just impute 'None'","4ae48dd0":"### Electrical","28da479b":"### Alley","412d3138":"We already see that there are NaNs in some columns. So let's see where exactly and how many are they.","ed2325f7":"Yes, seems like it - if PoolQC is empty, PoolArea is 0","5245d958":"### Garages","2ca6f4e7":"### Fireplace","3e3ac26e":"# Missing Values\n- As the name suggets, this notebook is dedicated to EDA and imputing missing values.\n- We will explore all the columns and we'll impute the missing columns with the best fitted value.","6e18c375":"So the missing values for the \"MasVnr...\" Variables are in the same rows.","f1bf9795":"Ok, that's not great.We assume that most of them are rectangular, using the square root might be an improvement. "}}