{"cell_type":{"1465420f":"code","c5524a73":"code","b7f834f0":"code","2038c4e0":"code","64b45210":"code","e2d29925":"code","488baaf0":"code","fa3e9dca":"code","5205a160":"code","577310dd":"code","25624028":"code","e28356db":"code","59d8ebab":"code","cee08275":"code","f2826a30":"code","51dea090":"code","888aa873":"code","bb1ab8ba":"markdown","24dfea87":"markdown","438637b2":"markdown","5387a47f":"markdown","8a0738c1":"markdown","4bb16402":"markdown","cf6c227f":"markdown","26647f02":"markdown","26c72184":"markdown","a8541e65":"markdown","f9a9b6bc":"markdown","4187220c":"markdown","f1d84dde":"markdown","c585865d":"markdown","c00868e7":"markdown","a9e4e7b1":"markdown","32253b92":"markdown"},"source":{"1465420f":"from IPython.display import Image\nImage(\"\/kaggle\/input\/images\/Alien-vs.-Predator.jpg\")","c5524a73":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","b7f834f0":"from keras.models import Sequential\nfrom keras.layers import Convolution2D\nfrom keras.layers import MaxPooling2D\nfrom keras.layers import Flatten\nfrom keras.layers import Dense","2038c4e0":"classifier = Sequential()","64b45210":"classifier.add(Convolution2D(filters = 32, kernel_size=(3,3), data_format= \"channels_last\", input_shape=(64, 64, 3), activation=\"relu\"))","e2d29925":"classifier.add(MaxPooling2D(pool_size = (2,2)))","488baaf0":"# Adding a second convolutional layer\nclassifier.add(Convolution2D(32, (3, 3), activation = 'relu'))\nclassifier.add(MaxPooling2D(pool_size = (2, 2)))\n","fa3e9dca":"classifier.add(Convolution2D(32, (3, 3), activation = 'relu'))\nclassifier.add(MaxPooling2D(pool_size = (2, 2)))","5205a160":"classifier.add(Flatten())","577310dd":"classifier.add(Dense(units = 128, activation = 'relu'))\nclassifier.add(Dense(units = 1, activation = 'sigmoid'))","25624028":"classifier.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])","e28356db":"from keras.preprocessing.image import ImageDataGenerator\ntrain_datagen = ImageDataGenerator(\n        rescale=1.\/255,\n        shear_range=0.2,\n        zoom_range=0.2,\n        horizontal_flip=True)\ntest_datagen = ImageDataGenerator(rescale=1.\/255)","59d8ebab":"training_set = train_datagen.flow_from_directory('\/kaggle\/input\/alien-vs-predator-images\/alien_vs_predator_thumbnails\/data\/train', target_size=(64, 64), batch_size=32, class_mode='binary')","cee08275":"test_set = test_datagen.flow_from_directory(\n        '\/kaggle\/input\/alien-vs-predator-images\/alien_vs_predator_thumbnails\/data\/validation',\n        target_size=(64, 64),\n        batch_size=32,\n        class_mode='binary')","f2826a30":"classifier.fit_generator(\n        training_set,\n        steps_per_epoch=694,\n        epochs=30,\n        validation_data=test_set,\n        validation_steps=200)","51dea090":"from matplotlib import pyplot as plt\nimport cv2\nS = 64\n\ndirectory = os.listdir(\"\/kaggle\/input\/alien-vs-predator-images\/alien_vs_predator_thumbnails\/data\/validation\/alien\")\nprint(directory[3])\n\nimgAlien = cv2.imread(\"\/kaggle\/input\/alien-vs-predator-images\/alien_vs_predator_thumbnails\/data\/validation\/alien\/\" + directory[3])\nplt.imshow(imgAlien)\n\nimgAlien = cv2.resize(imgAlien, (S,S))\nimgAlien = imgAlien.reshape(1,S,S,3)\n\npred = classifier.predict(imgAlien)\nprint(\"Probability that it is a alien = \", \"%.2f\" % (1-pred))","888aa873":"from matplotlib import pyplot as plt\nimport cv2\nS = 64\n\ndirectory = os.listdir(\"\/kaggle\/input\/alien-vs-predator-images\/alien_vs_predator_thumbnails\/data\/validation\/predator\")\nprint(directory[20])\n\nimgAlien = cv2.imread(\"\/kaggle\/input\/alien-vs-predator-images\/alien_vs_predator_thumbnails\/data\/validation\/predator\/\" + directory[20])\nplt.imshow(imgAlien)\n\nimgAlien = cv2.resize(imgAlien, (S,S))\nimgAlien = imgAlien.reshape(1,S,S,3)\n\npred = classifier.predict(imgAlien)\nprint(\"Probability that it is a alien = \", \"%.2f\" % (1-pred))","bb1ab8ba":"As we can see the accuracy of the model for the training set is %99 and for the test set is %81. We can add the more Convolutional Layer to improve the accuracy of the model. In addition, more images will give us more accuracy.","24dfea87":"fit the CNN to the training set and evaluate our test set","438637b2":"Let\u2019s visualise the result:","5387a47f":"Adding a second convolutional layer to improve the accuracy","8a0738c1":"Step 2: Create Pooling Layer","4bb16402":"Adding a third convolutional layer","cf6c227f":"Let\u2019s import the Keras libraries and packages.","26647f02":"Step 1: Create Convolutional Layer","26c72184":"Step 4: Create Fully Connection","a8541e65":"Compiling CNN","f9a9b6bc":"**Create the test set for evaluating our model:**","4187220c":"**Create the training set:**","f1d84dde":"In this stage, we will initialise the CNN.","c585865d":"Step 3: Create Flattening","c00868e7":"**Fitting the CNN to the images:**","a9e4e7b1":"**Building CNN**","32253b92":"In this project, we will have some images of aliens and predators and by them, we will train a Convolutional Neural Network using Keras to predict if the image is an alien or predator."}}