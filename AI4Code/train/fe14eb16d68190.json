{"cell_type":{"13e25f29":"code","52530094":"code","339957a1":"code","29ec0588":"code","9e44efea":"code","ab7549e3":"code","105db3fe":"code","e9d1cd5d":"code","fe5bd83f":"code","5114a105":"code","1758fabc":"code","aabe01dc":"code","f89205c6":"code","e6c52240":"code","b9663270":"code","f6814a62":"code","691c4abd":"code","23d72f44":"code","7af471fd":"code","4d52120e":"code","ab420f3d":"code","9b06a886":"markdown","cf369fbb":"markdown","24844d31":"markdown","f3780d17":"markdown","a70a703d":"markdown"},"source":{"13e25f29":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport folium\nimport json\n\ndf_police_killing = pd.read_csv('..\/input\/police-violence-in-the-us\/police_killings.csv')\ndf_police_killing.dropna(axis=1, how='all', inplace=True)\nusa_population = pd.read_csv('..\/input\/usa-states-geojson\/usa_population_2019.csv')\nstate_geo = '..\/input\/usa-states-geojson\/us-states.json'","52530094":"import seaborn as sns; sns.set()","339957a1":"# it seems some columns are null\ndf_police_killing.head()","29ec0588":"df_police_killing.dropna(axis=0,how='all',inplace=True)","9e44efea":"df_police_killing.shape","ab7549e3":"killing_per_state = df_police_killing[['State','ID']].groupby(['State']).count().reset_index()\nkilling_per_state.columns = ['State', 'Kills']\nkilling_per_state.head()","105db3fe":"map_usa = folium.Map(location=[37, -102], zoom_start=5)\n\nfolium.Choropleth(\n    state_geo,\n    name='choropleth',\n    data=killing_per_state,\n    columns=['State', 'Kills'],\n    key_on='feature.id',\n    fill_color='YlGn',\n    fill_opacity=0.7,\n    line_opacity=0.2,\n    legend_name='Number of police Kills by state',\n    highlight=True\n).add_to(map_usa)\n\nmap_usa","e9d1cd5d":"usa_population.tail()","fe5bd83f":"kill_and_pop_per_state = killing_per_state.merge(usa_population,how='inner',left_on='State',right_on='Postal Code')\nkill_and_pop_per_state.head()","5114a105":"kill_and_pop_per_state['Killings per 1M ppl'] = kill_and_pop_per_state['Kills']\/kill_and_pop_per_state['Total Resident Population']*1000000\nkill_and_pop_per_state.head()","1758fabc":"# Add properties to geojson, in order to add tooltips\nimport json\nwith open(state_geo, encoding=\"utf8\") as f:\n    map_data = json.load(f)\n\n# properties \n[key for key in map_data['features'][0]['properties']]","aabe01dc":"states_order = [state['id'] for state in map_data['features']]\nfor idx in range(len(states_order)):\n    map_data['features'][idx]['properties']['Killings per 1M ppl'] = round(kill_and_pop_per_state[kill_and_pop_per_state.State == states_order[idx]]['Killings per 1M ppl'].values[0],2)\n    map_data['features'][idx]['properties']['Kills'] = int(kill_and_pop_per_state[kill_and_pop_per_state.State == states_order[idx]]['Kills'].values[0])\n    map_data['features'][idx]['properties']['Population'] = int(kill_and_pop_per_state[kill_and_pop_per_state.State == states_order[idx]]['Total Resident Population'].values[0])","f89205c6":"map_usa = folium.Map(location=[37, -102], zoom_start=5)\n\nchorop_map = folium.Choropleth(\n    geo_data=map_data,\n    name='choropleth',\n    data=kill_and_pop_per_state,\n    columns=['State', 'Killings per 1M ppl'],\n    key_on='feature.id',\n    fill_color='YlOrRd',\n    fill_opacity=0.7,\n    line_opacity=0.2,\n    legend_name='Number of police kills every 1M ppl by state',\n    highlight=True\n).add_to(map_usa)\n\nfolium.LayerControl().add_to(map_usa)\nchorop_map.geojson.add_child(\n    folium.features.GeoJsonTooltip(['name', 'Killings per 1M ppl', 'Kills','Population'])\n)\n\nmap_usa","e6c52240":"import geopy\nfrom geopy.geocoders import Nominatim\nfrom geopy.extra.rate_limiter import RateLimiter\nimport folium.plugins as plugins","b9663270":"df_police_killing['Address'] = df_police_killing[\"Street Address of Incident\"] + \",\" + df_police_killing[\"City\"] + \",\" + df_police_killing[\"State\"]\ndf_police_killing.Address","f6814a62":"locator = Nominatim(user_agent=\"myGeocoder\")\nlocation = locator.geocode(\"Champ de Mars, Paris, France\")\nprint(\"Latitude = {}, Longitude = {}\".format(location.latitude, location.longitude))","691c4abd":"df_police_killing_test = df_police_killing.iloc[:100].copy()","23d72f44":"## LONG RUNNING TIME: ~10:43 to\n# 1 - conveneint function to delay between geocoding calls\ngeocode = RateLimiter(locator.geocode, min_delay_seconds=1\/20)\n# 2- - create location column\ndf_police_killing_test['location'] = df_police_killing_test['Address'].apply(geocode)\n# 3 - create longitude, latitude and altitude from location column (returns tuple)\ndf_police_killing_test['point'] = df_police_killing_test['location'].apply(lambda loc: tuple(loc.point) if loc else None)","7af471fd":"# 4 - split point column into latitude, longitude and altitude columns\ndf_police_killing_test['latitude'] = df_police_killing_test['point'].apply(lambda loc: None if loc is None else loc[0])\ndf_police_killing_test['longitude'] = df_police_killing_test['point'].apply(lambda loc: None if loc is None else loc[1])","4d52120e":"df_police_killing_test = df_police_killing_test[pd.notnull(df_police_killing_test.latitude)].copy()","ab420f3d":"map_usa = folium.Map(location=[37, -102], zoom_start=5)\n\nchorop_map = folium.Choropleth(\n    geo_data=map_data,\n    name='choropleth',\n    data=kill_and_pop_per_state,\n    columns=['State', 'Killings per 1M ppl'],\n    key_on='feature.id',\n    fill_color='YlOrRd',\n    fill_opacity=0.7,\n    line_opacity=0.2,\n    legend_name='Number of police kills every 1M ppl by state',\n    highlight=True\n).add_to(map_usa)\n\nfolium.LayerControl().add_to(map_usa)\nchorop_map.geojson.add_child(\n    folium.features.GeoJsonTooltip(['name', 'Killings per 1M ppl', 'Kills','Population'])\n)\n\n\nplugins.FastMarkerCluster(data=list(zip(df_police_killing_test['latitude'].values, df_police_killing_test['longitude'].values))).add_to(chorop_map)\nfolium.LayerControl().add_to(chorop_map)\n\n\nmap_usa","9b06a886":"---\nIn order to add tooltips to the map, some workaround are necessary. I adapted the code from [this Medium article](https:\/\/towardsdatascience.com\/using-folium-to-generate-choropleth-map-with-customised-tooltips-12e4cec42af2)","cf369fbb":"Some more good examples on how to use Choropleth [at this link](https:\/\/nbviewer.jupyter.org\/github\/python-visualization\/folium\/blob\/master\/examples\/GeoJSON_and_choropleth.ipynb)","24844d31":"As you can see, I basically plotted a population map... hence I need to normalise by the population of each state","f3780d17":"Next steps; using https:\/\/www.kaggle.com\/max-mind\/world-cities-database?select=worldcitiespop.csv","a70a703d":"---\nHow to add Markers? I'd like to add a mark on the map for each kill (I had a look at [this blog post](https:\/\/towardsdatascience.com\/geocode-with-python-161ec1e62b89), and [Marker example](https:\/\/nbviewer.jupyter.org\/github\/python-visualization\/folium\/blob\/master\/examples\/MarkerCluster.ipynb))"}}