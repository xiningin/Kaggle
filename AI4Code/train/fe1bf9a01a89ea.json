{"cell_type":{"65296969":"code","c118d0f2":"code","b2e9331d":"code","95b0c86e":"code","2dfd3f4c":"code","6a11dd5c":"code","31cc4bbb":"code","8c963a0e":"code","34782379":"code","8fb49a89":"code","883bace0":"code","b592261c":"code","c2ff263c":"code","83484cdc":"code","7db10094":"code","6dcbe568":"code","527e677f":"code","d1d250de":"code","15cac72e":"markdown","03f2a656":"markdown","5982839b":"markdown","cbb97a6f":"markdown"},"source":{"65296969":"!pip install surprise","c118d0f2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom surprise import Reader, SVD, Dataset, accuracy\nfrom surprise.model_selection import GridSearchCV, train_test_split, cross_validate\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b2e9331d":"movie = pd.read_csv('..\/input\/movielens-20m-dataset\/movie.csv')\nrating = pd.read_csv('..\/input\/movielens-20m-dataset\/rating.csv')\ndf = movie.merge(rating, how=\"left\", on=\"movieId\")\ndf.head()","95b0c86e":"movie_ids = [130219, 356, 4422, 541]\nmovies = [\"The Dark Knight (2011)\",\n          \"Cries and Whispers (Viskningar och rop) (1972)\",\n          \"Forrest Gump (1994)\",\n          \"Blade Runner (1982)\"]","2dfd3f4c":"sample_df = df[df.movieId.isin(movie_ids)]\nsample_df.shape","6a11dd5c":"user_movie_df = sample_df.pivot_table(index=[\"userId\"], columns=[\"title\"], values=\"rating\")\nuser_movie_df.head()","31cc4bbb":"reader = Reader(rating_scale=(1, 5))\ndata = Dataset.load_from_df(sample_df[['userId', 'movieId', 'rating']], reader)\ntype(data)","8c963a0e":"trainset, testset = train_test_split(data, test_size=.25)\n\nsvd_model = SVD()\nsvd_model.fit(trainset)","34782379":"predictions = svd_model.test(testset)\npredictions[0:5]","8fb49a89":"accuracy.rmse(predictions)","883bace0":"cross_validate(svd_model, data, measures=['RMSE', 'MAE'], cv=5, verbose=True)","b592261c":"# userid 1 i\u00e7in blade runner tahmini yapal\u0131m: 541\nsvd_model.predict(uid=1.0, iid=541, verbose=True)","c2ff263c":"# userid 1 i\u00e7in Whispers tahmini yapal\u0131m: 356\nsvd_model.predict(uid=1.0, iid=356, verbose=True)","83484cdc":"\nparam_grid = {'n_epochs': [5, 10], 'lr_all': [0.002, 0.005]}\n\ngs = GridSearchCV(SVD, param_grid, measures=['rmse', 'mae'], cv=3, n_jobs=-1, joblib_verbose=True)\n\ngs.fit(data)\n\ngs.best_score['rmse']","7db10094":"svd_model = SVD(**gs.best_params['rmse'])\n\ndata = data.build_full_trainset()\nsvd_model.fit(data)\n","6dcbe568":"# userid 1 i\u00e7in blade runner tahmini yapal\u0131m: 541\nsvd_model.predict(uid=1.0, iid=541, verbose=True)","527e677f":"# userid 1 i\u00e7in Whispers tahmini yapal\u0131m: 356\nsvd_model.predict(uid=1.0, iid=356, verbose=True)","d1d250de":"user_movie_df.head()","15cac72e":"# Step 1: Preparing the Data Set","03f2a656":"# Step 4: Final Model and Prediction","5982839b":"# Step 3: Model Tuning\n","cbb97a6f":"# Step 2: Modeling"}}