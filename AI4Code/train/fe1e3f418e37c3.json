{"cell_type":{"fefc67e9":"code","b5e33e83":"code","46ef83c3":"code","8792d5ca":"code","02d6747b":"code","dff0edd2":"code","9bb9e41c":"code","e34b543a":"code","4f0c78f5":"code","b8412e19":"code","9e05d02a":"code","72d455a7":"code","6bdc4fb1":"code","204815de":"code","5a94f16b":"code","be70e439":"code","34c69f1a":"code","d5a18b15":"code","ffe0ff8b":"code","32e461f9":"code","e285959e":"code","15004050":"code","82a9689c":"code","28fd248a":"code","566e25ad":"code","8c076874":"code","4f42d779":"code","58f2555e":"code","2a63bdee":"code","f6887658":"code","cbdc96c4":"code","04145013":"code","47b09935":"code","2c3ca609":"code","c5830db8":"code","2fe4d015":"code","a31eacc5":"code","037c6f54":"code","bc8792e9":"code","718823aa":"code","f3fa3c88":"code","e72cbed9":"code","d24ab791":"code","5e8b11fe":"code","701f4021":"code","1b71b528":"code","33571a6f":"code","4dbf66f4":"code","7223ded5":"code","2708e1aa":"code","397cb390":"code","cc83fc23":"code","8c0a2a42":"code","72ed59a4":"markdown","9e55b8c8":"markdown","9d95fd9d":"markdown","89124e61":"markdown","589f85b2":"markdown","f5d165da":"markdown","c8ea6318":"markdown","c0e3e076":"markdown","a4a494b6":"markdown","098e7736":"markdown","625db402":"markdown","39367038":"markdown","4ce5e600":"markdown","030ad80e":"markdown","a1f61534":"markdown","53bce62d":"markdown","2feca373":"markdown","1f55dc7a":"markdown","a02fed8f":"markdown"},"source":{"fefc67e9":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","b5e33e83":"path= \"..\/input\/bondora-peer-to-peer-lending-loan-data\/LoanData_Bondora.csv\"\ndata= pd.read_csv(path, low_memory=False)","46ef83c3":"data.shape","8792d5ca":"#for i in range(112):\n#    print(data.columns[i])","02d6747b":"#for i in data.columns:\n#    print(i,data[i].isnull().sum())","dff0edd2":"list_of_50_percent_null = [ ]\nfor i in data.columns:\n    if data[i].isnull().sum() >= (90*179235)\/100:\n        list_of_50_percent_null.append(i)","9bb9e41c":"list_of_50_percent_null","e34b543a":"data = data.drop(list_of_50_percent_null, axis=1)","4f0c78f5":"print(data.describe().transpose())","b8412e19":"data.dtypes","9e05d02a":"names= data.columns","72d455a7":"cat_data= data.select_dtypes('object')\ndata = data.drop(cat_data.columns, axis=1)\n\nbool_data= data.select_dtypes('bool')\ndata = data.drop(bool_data.columns, axis=1)","6bdc4fb1":"cat_data","204815de":"bool_data","5a94f16b":"cat_data =cat_data.fillna(\"unknown\")","be70e439":"date_type= cat_data[\"BiddingStartedOn\"].astype('datetime64[ns]')\ncat_data= cat_data.drop(['BiddingStartedOn'],axis=1)","34c69f1a":"features_cat_data= list(cat_data.columns)\nfeatures_cat_data_viz= [\"Country\",\"EmploymentDurationCurrentEmployer\",\"Rating\",\"WorseLateCategory\",\n                   \"CreditScoreEsMicroL\"]\nfor i in features_cat_data_viz:\n    cat_data[i].value_counts().plot(kind='pie', figsize=(6,6), autopct=\"%1.2f%%\")\n    plt.title(i)\n    plt.show()\n","d5a18b15":"features_bool_data= list(bool_data.columns)\nfeatures_bool_data_viz= [\"NewCreditCustomer\", \"ActiveScheduleFirstPaymentReached\",\"Restructured\"]\nfor i in features_bool_data_viz:\n    bool_data[i].value_counts().plot(kind='bar', figsize=(5,5))\n    plt.title(i)\n    plt.show()","ffe0ff8b":"cat_array= np.array(cat_data).reshape(-1)\nbool_array= np.array(bool_data).reshape(-1)","32e461f9":"from sklearn.preprocessing import LabelEncoder","e285959e":"encoder_1= LabelEncoder()\nencoder_2= LabelEncoder()","15004050":"cat_enc= encoder_1.fit_transform(cat_array)\nbool_enc= encoder_2.fit_transform(bool_array)","82a9689c":"cat_enc= pd.DataFrame(cat_enc.reshape(179235,int(cat_enc.shape[0]\/179235)))\nbool_enc= pd.DataFrame(bool_enc.reshape(179235,int(bool_enc.shape[0]\/179235)))","28fd248a":"cat_enc.columns= features_cat_data\nbool_enc.columns= features_bool_data","566e25ad":"object_data = pd.concat([cat_enc,bool_enc], axis=1)\n","8c076874":"object_data","4f42d779":"from sklearn.impute import SimpleImputer","58f2555e":"data","2a63bdee":"names_num = data.columns\nimp_median = SimpleImputer(missing_values=np.nan, strategy='median')\nimp_median.fit(np.array(data))\nimp_data= imp_median.transform(data)\ndata= pd.DataFrame(imp_data)\ndata.columns= names_num","f6887658":"data","cbdc96c4":"#data.hist(figsize=(20,20))","04145013":"data.describe().transpose()","47b09935":"def z_score_normalizer(X):\n    m = X.shape[0]\n    n = 1\n    for i in range(n):\n        X = (X - X.mean(axis=0))\/X.std(axis=0)\n    return X","2c3ca609":"data = z_score_normalizer(data)","c5830db8":"Y= object_data['Status']\nobject_data = object_data.drop(['Status'],axis=1)\nY=encoder_1.inverse_transform(Y)\nY= pd.DataFrame(Y, columns=['Status'])\nY.Status.unique()","2fe4d015":"Y= Y.loc[Y.Status!='Current']","a31eacc5":"Y= Y.replace(['Late','Repaid'],[0,1])","037c6f54":"Y","bc8792e9":"all_data = pd.concat([object_data,data,Y], axis=1)","718823aa":"all_data","f3fa3c88":"all_data= all_data.dropna()","e72cbed9":"from sklearn.model_selection import GridSearchCV\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics","d24ab791":"Y= all_data[\"Status\"]\nX= all_data.drop([\"Status\"],axis= 1)","5e8b11fe":"X_train, X2, Y_train, Y2= train_test_split(X, Y, test_size=0.2, random_state=24)","701f4021":"X_val, X_test, Y_val, Y_test= train_test_split(X2, Y2, test_size=0.5, random_state=4)","1b71b528":"model = DecisionTreeClassifier(random_state=4)","33571a6f":"parameters = {\"criterion\" : [\"gini\", \"entropy\"], \n              'max_depth': [20,21],\n              'min_samples_split': [50,51]}\n","4dbf66f4":"grid_search = GridSearchCV(model, parameters, n_jobs=50,verbose=100,cv=2, refit='best_params_')","7223ded5":"grid_search.fit(X_train, Y_train)","2708e1aa":"print(\"Best parameters for DT Clasiifier\",grid_search.best_params_)","397cb390":"preds = grid_search.predict(X_val)\nfpr, tpr, thresholds = metrics.roc_curve(Y_val, preds)\nprint(\"AUC Score :\",metrics.auc(fpr, tpr))","cc83fc23":"metrics.plot_roc_curve(grid_search, X_val, Y_val)","8c0a2a42":"preds2 = grid_search.predict(X_test)\nroc_score2 = metrics.roc_auc_score(Y_test, preds2)\nprint(\"Roc Score :\\n\",roc_score2)","72ed59a4":"### we have 3 type in status \n- Late\n- Repaid\n- Current\n##### We have to drop Current ","9e55b8c8":"# <center><span style=\"color:#A8AD10;\"> Exploration for Numerical data <\/span><\/center>","9d95fd9d":"**%80 for taining**","89124e61":"### The features we have :\n* ReportAsOfEOD: EOD stands for End of the Day. It points to the top of a trading day in financial markets, the purpose in time when the trading ceases for the day. It's also referred to as end of business, close of business and close of play.\n\n- LoanId\n\n- LoanNumber\n\n- ListedOnUTC: Date when the loan application appeared on Primary Market\n\n- BiddingStartedOn: A bid is an offer made by an investor, trader, or dealer in an effort to buy an asset or to compete for a contract.\n\n- BidsPortfolioManager.\n\n- BidsApi.\n\n- BidsManual.\n\n- UserName.\n\n- NewCreditCustomer.\n\n- LoanApplicationStartedDate.\n\n- LoanDate.\n\n- ContractEndDate.\n\n- FirstPaymentDate.\n\n- MaturityDate_Original: The time between the issue and the maturity date for a particular bond.\n\n- MaturityDate_Last.\n\n- ApplicationSignedHour.\n\n- ApplicationSignedWeekday.\n\n- VerificationType.\n\n- LanguageCode.\n\n- Age.\n\n- DateOfBirth.\n\n- Gender.\n\n- Country.\n\n- AppliedAmount.\n\n- Amount.\n\n- Interest.\n\n- LoanDuration.\n\n- MonthlyPayment.\n\n- County.\n\n- City.\n\n- UseOfLoan.\n\n- Education.\n\n- MaritalStatus.\n\n- NrOfDependants.\n\n- etc...","589f85b2":"# <center><span style=\"color:#A8AD10;\"> Preprocessing for Object and Bool data types<\/span><\/center>","f5d165da":"# <center><span style=\"color:#A8AD10;\"> Preprocessing for Numerical data <\/span><\/center>\n<center>We will use Z-Score for normalization<\/center>","c8ea6318":"# <center><span style=\"color:#A8AD10;\"> Compine all the data togather <\/span><\/center>\n","c0e3e076":"<center><img src=\"https:\/\/i.gifer.com\/8ESB.gif\"><\/center>","a4a494b6":"# <center><span style=\"color:#A8AD10;\">Data Exploration and Preprocessing<\/span><\/center>","098e7736":"# <center><span style=\"color:#A8AD10;\"> Target Selection <\/span><\/center>","625db402":"### <span style=\"color:red\"> Fill the object data that have less then 90% null<\/span>","39367038":"# <center><span style=\"color:#A8AD10;\"> Exploration for Object and Bool data types<\/span><\/center>","4ce5e600":"### <span style=\"color:red\"> Fill the object data that have less then 90% null<\/span>","030ad80e":"*We have 179235 lines of data and 112 columns*","a1f61534":"**<div style=\"background-color:#B0EADC\"><center><span style=\"color:gray;\">Default Loans Prediction<\/span><\/center><\/div>**","53bce62d":"# <center><span style=\"color:#A8AD10;\"> We are ready for Machine Learning <\/span><\/center>\n<center><img src=\"https:\/\/media.giphy.com\/media\/c7PcKQlOqZ8Ws\/giphy.gif\"><\/center>\n","2feca373":"### <span style=\"color:red\"> alot of features have more than 90% null Let's drop them<\/span>","1f55dc7a":"# <center><span style=\"color:#A8AD10;\">Calling the libraries and the data<\/span><\/center>","a02fed8f":"# <center><span style=\"color:#A8AD10;\"> Roc Score on the Validation set = 99.99% <\/span><\/center>\n# <center><span style=\"color:#A8AD10;\"> Roc Score on the Test set = 99.99% <\/span><\/center>\n\n"}}