{"cell_type":{"a233cee1":"code","538f6f6a":"code","02d9816a":"code","79d71252":"code","7881f7f8":"code","3333fe63":"code","b7fe5e99":"code","6de7ffae":"code","e38a76bf":"code","98f93b5f":"code","e67c65f9":"code","12c2e183":"code","52551094":"code","61d85e5e":"code","657ab46e":"code","4dabaa90":"code","90aaef50":"code","27d676d2":"code","cc9467ed":"code","165d93a9":"code","891902d0":"code","de7f02a8":"code","ce91137b":"code","56e1162b":"code","1b7ecda4":"code","24b0511a":"code","e12abe2d":"code","ee702951":"code","f03dc9ec":"code","5b443c33":"code","8f35a791":"code","27220bd5":"code","dc34a718":"code","5af7297b":"code","3871e136":"code","cbe08ae5":"markdown","f8db9b74":"markdown","38ba4613":"markdown","562a9af1":"markdown","57f7e9b2":"markdown","3962a845":"markdown","504c872a":"markdown","757aa4e5":"markdown","5cdd50ee":"markdown","8323720a":"markdown","d0758677":"markdown","c7eb4ce9":"markdown","ee839a6a":"markdown","13bf77b5":"markdown","7e1738c3":"markdown","542fa4ed":"markdown","c6e54fd8":"markdown","8db3fab9":"markdown","f0548493":"markdown","129d3800":"markdown","1a89d022":"markdown","e950622d":"markdown","feaeb8c7":"markdown","a89c58b0":"markdown","425667fb":"markdown","918e34bb":"markdown","d4676c31":"markdown","08ec2ab6":"markdown","509a4218":"markdown","b99347a8":"markdown","19279313":"markdown","14fe27ea":"markdown","cbc7445d":"markdown"},"source":{"a233cee1":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score\nfrom mpl_toolkits.mplot3d import Axes3D","538f6f6a":"data = pd.read_csv('..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')\ndata.head()","02d9816a":"print(data.isnull().sum())","79d71252":"data.info()","7881f7f8":"sns.heatmap(data.corr(),annot = True)","3333fe63":"data = data.drop(columns = 'CustomerID')\ndata.head()","b7fe5e99":"df = data.groupby(data['Gender']).sum()\ndf.head()","6de7ffae":"male = [i for i in data['Gender'] if(i == 'Male')]\nfemale = [i for i in data['Gender'] if(i == 'Female')]\nsize = []\nsize.append(len(male)\/2)\nsize.append(len(female)\/2)","e38a76bf":"plt.pie(size,labels = ['Male','Female'],autopct='%1.1f%%',startangle = 90,colors = ['Orange','Blue'])","98f93b5f":"sns.countplot(x = data['Gender'],data = data,order = ['Female','Male'])","e67c65f9":"sns.barplot(x = df.index,y = 'Spending Score (1-100)',data = df)","12c2e183":"total_spend = df.iloc[0,2] + df.iloc[1,2]\nspend = []\nspend.append((df.iloc[0,2]\/total_spend)*100)\nspend.append((df.iloc[1,2]\/total_spend)*100)","52551094":"plt.pie(spend,labels = ['Female','Male'],autopct='%1.1f%%',startangle = 90,colors = ['Blue','Orange'])","61d85e5e":"sns.barplot(x = df.index,y ='Annual Income (k$)',data = df)","657ab46e":"total_income = df.iloc[0,1] + df.iloc[1,1]\nincome = []\nincome.append((df.iloc[0,1]\/total_income)*100)\nincome.append((df.iloc[1,1]\/total_income)*100)","4dabaa90":"plt.pie(income,labels = ['Female','Male'],autopct='%1.1f%%',startangle = 90,colors = ['Blue','Orange'])","90aaef50":"sns.jointplot('Age','Spending Score (1-100)',data=data,kind = 'kde')","27d676d2":"sns.jointplot('Age','Annual Income (k$)',data= data,kind = 'kde')","cc9467ed":"sns.violinplot('Gender','Age',data=data,order= ['Female','Male'])","165d93a9":"sns.violinplot('Gender','Spending Score (1-100)',data = data,order = ['Female','Male'])","891902d0":"sns.violinplot('Gender','Annual Income (k$)',data = data,order = ['Female','Male'])","de7f02a8":"sns.scatterplot('Annual Income (k$)','Spending Score (1-100)',data = data,hue = 'Gender')","ce91137b":"d1 = data[['Age','Spending Score (1-100)']].values","56e1162b":"sse = {}\nfor k in range(1, 10):\n    kmeans = KMeans(n_clusters=k, max_iter=1000).fit(d1)\n    sse[k] = kmeans.inertia_ # Inertia: Sum of distances of samples to their closest cluster center\nplt.figure()\nplt.plot(list(sse.keys()), list(sse.values()))\nplt.xlabel(\"Number of cluster\")\nplt.ylabel(\"SSE\")\nplt.show()","1b7ecda4":"sil = []\nkmax = 10\nfor k in range(2, kmax+1):\n    kmeans = KMeans(n_clusters = k).fit(d1)\n    labels = kmeans.labels_\n    sil.append(silhouette_score(d1, labels, metric = 'euclidean'))\nplt.figure()\nplt.plot(range(2,kmax+1),sil)\nplt.xlabel(\"k\")\nplt.ylabel(\"Silhouette Score\")\nplt.show()","24b0511a":"model = KMeans(n_clusters = 4,max_iter = 1000)\nmodel.fit(d1)\ncluster = model.cluster_centers_\ncentroids = np.array(cluster)\nlabels = model.labels_\nplt.scatter(centroids[:,0],centroids[:,1], marker=\"X\", color = 'b')\nplt.scatter('Age','Spending Score (1-100)',c=labels,cmap ='rainbow',data = data)\nplt.title('SPENDING SCORE VS AGE')\nplt.xlabel('AGE')\nplt.ylabel('SPENDING SCORE')","e12abe2d":"d2 = data[['Annual Income (k$)' , 'Spending Score (1-100)']].values","ee702951":"sse = {}\nfor k in range(1, 10):\n    kmeans = KMeans(n_clusters=k, max_iter=1000).fit(d2)\n    sse[k] = kmeans.inertia_\nplt.figure()\nplt.plot(list(sse.keys()), list(sse.values()))\nplt.xlabel(\"Number of cluster\")\nplt.ylabel(\"SSE\")\nplt.show()","f03dc9ec":"sil = []\nkmax = 10\nfor k in range(2, kmax+1):\n    kmeans = KMeans(n_clusters = k).fit(d2)\n    labels = kmeans.labels_\n    sil.append(silhouette_score(d2, labels, metric = 'euclidean'))\nplt.figure()\nplt.plot(range(2,kmax+1),sil)\nplt.xlabel(\"k\")\nplt.ylabel(\"Silhouette Score\")\nplt.show()","5b443c33":"model = KMeans(n_clusters = 5,max_iter = 1000)\nmodel.fit(d2)\ncluster = model.cluster_centers_\ncentroids = np.array(cluster)\nlabels = model.labels_\nplt.scatter(centroids[:,0],centroids[:,1], marker=\"X\", color = 'b')\nplt.scatter('Annual Income (k$)','Spending Score (1-100)',c=labels,cmap ='rainbow',data = data)\nplt.title('SPENDING SCORE VS ANNUAL INCOME')\nplt.xlabel('ANNUAL INCOME')\nplt.ylabel('SPENDING SCORE')","8f35a791":"d3 = data[['Age','Annual Income (k$)','Spending Score (1-100)']].values","27220bd5":"sse = {}\nfor k in range(1, 10):\n    kmeans = KMeans(n_clusters=k, max_iter=1000).fit(d3)\n    sse[k] = kmeans.inertia_\nplt.figure()\nplt.plot(list(sse.keys()), list(sse.values()))\nplt.xlabel(\"Number of cluster\")\nplt.ylabel(\"SSE\")\nplt.show()","dc34a718":"sil = []\nkmax = 10\nfor k in range(2, kmax+1):\n    kmeans = KMeans(n_clusters = k).fit(d3)\n    labels = kmeans.labels_\n    sil.append(silhouette_score(d3, labels, metric = 'euclidean'))\nplt.figure()\nplt.plot(range(2,kmax+1),sil)\nplt.xlabel(\"k\")\nplt.ylabel(\"Silhouette Score\")\nplt.show()","5af7297b":"model = KMeans(n_clusters = 6,max_iter = 1000)\nmodel.fit(d3)\ncluster = model.cluster_centers_\ncentroids = np.array(cluster)\nlabels = model.labels_","3871e136":"fig = plt.figure()\nax = Axes3D(fig)\nx = np.array(data['Annual Income (k$)'])\ny = np.array(data['Spending Score (1-100)'])\nz = np.array(data['Age'])\nax.scatter(centroids[:,0],centroids[:,1],centroids[:,2],marker=\"X\", color = 'b')\nax.scatter(x,y,z,c=y)\nplt.title('SPENDING SCORE VS ANNUAL INCOME VS AGE')\nax.set_xlabel('ANNUAL INCOME')\nax.set_ylabel('SPENDING SCORE')\nax.set_zlabel('AGE')","cbe08ae5":"- NUMBER OF WOMEN IN THE DATA IS MORE THAN MEN","f8db9b74":"### A] ELBOW METHOD","38ba4613":"### B] SILHOUETTE SCORE","562a9af1":"## 1] AGE & SPENDING SCORE","57f7e9b2":"## PERCENTAGE OF MEN & WOMEN IN THE DATA","3962a845":"### A] ELBOW METHOD","504c872a":"### A] ELBOW METHOD","757aa4e5":"# END","5cdd50ee":"### AGE vs GENDER","8323720a":"### SPENDING SCORE VS GENDER","d0758677":"# CUSTOMER SEGMENTATION","c7eb4ce9":"## PLOTS w.r.t GENDER ","ee839a6a":"### CLUSTERS = 5","13bf77b5":"## IMPORT THE NECESSARY LIBRARIES","7e1738c3":"### ANNUAL INCOME vs AGE","542fa4ed":"## HEATMAP IN COMBINATION WITH CORRELATION \n- THERE IS A STRONG CORRELATION BETWEEN THE INPUT FEATURES 'CustomerID' & 'Annual Income'\n- HOWEVER THE 'CustomerID' & 'Annual Income' ARE ARRANGED IN ASCENDING ORDER\n- HENCE THEY ARE HAVING A STRONG CORRELATION BETWEEN THEM\n- THUS, WE CAN DROP 'CustomerID' \n- OTHERWISE THE FEATURES ARE NOT DEPENDENT ON EACH OTHER ","c6e54fd8":"## CHECK FOR MISSING VALUES IN THE DATA","8db3fab9":"- ## 3] AGE,ANNUAL INCOME & SPENDING SCORE","f0548493":"### SPENDING SCORE OF MEN VS WOMEN","129d3800":"### CLUSTERS = 4","1a89d022":"### SPENDING SCORE vs AGE","e950622d":"- THE ABOVE PLOTS CLEARLY SHOW THAT WOMEN ACCOUNT MORE IN SPENDING SCORE & TOTAL INCOME\n- THIS IS CLEARLY BECAUSE OF THE MORE NUMBER OF WOMEN","feaeb8c7":"### SPENDING SCORE VS ANNUAL INCOME w.r.t GENDER","a89c58b0":"### B] SILHOUETTE SCORE","425667fb":"### B] SILHOUETTE SCORE","918e34bb":"## 2] ANNUAL INCOME & SPENDING SCORE","d4676c31":"### ANNUAL INCOME OF MEN VS WOMEN","08ec2ab6":"## DISTRIBUTION OF DATA w.r.t AGE & GENDER","509a4218":"# VISUALIZATIONS","b99347a8":"### ANNUAL INCOME vs GENDER","19279313":"# 2 METHODS TO DECIDE THE NUMBER OF CLUSTERS FOR KMEANS\n### 1] ELBOW METHOD:-\n- FROM THE GRAPH OF ELBOW METHOD,WE SELECT THE VALUE WHICH RESEMBLES \n- LIKE AN ELBOW OF A HAND AS THE NUMBER OF CLUSTERS\n\n### 2] SILHOUETTE SCORE:-\n- IT IS THE METRIC WHICH TELLS US ABOUT HOW THE CLUSTER \n- HAS GROUPED WELL WITH POINTS AROUND IT & HOW IT HAS BEEN \n- DIFFERENTIATED WELL FROM OTHER CLUSTERS.\n- WE SELECT THE NUMBER OF CLUSTERS WHICH HAS THE HIGHEST SILHOUETTE SCORE. ","14fe27ea":"# SEGMENTATION","cbc7445d":"### CLUSTERS = 6"}}