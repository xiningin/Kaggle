{"cell_type":{"3e37c47e":"code","a35e8088":"code","e0bdd5b4":"code","2311702d":"code","9beef185":"code","150c5cbc":"code","5ec05fd5":"code","cfea5ef3":"code","bf421811":"code","f26767f2":"code","411ab5c0":"code","5c17ea7a":"code","be62f56c":"code","57ed9fb8":"code","3ff53b71":"code","582ab023":"code","2fa9c311":"code","1cca488b":"code","880d08e2":"code","e2c5dc42":"code","35c65ac7":"code","b8e29ff6":"code","d9b2cab1":"code","07b61a84":"code","9ae0f314":"code","70c1353b":"code","6701a85b":"code","5f3bf12e":"code","342a2d13":"code","a18083a2":"code","f3f959ed":"code","b1113e58":"code","8fdf4587":"code","b4f11a6f":"code","5a8c9331":"code","5c4b13db":"code","40da31ba":"code","283c08e2":"code","983a4960":"code","6f742417":"code","232fa280":"code","cc5852a5":"code","b2a1e39b":"code","9f101111":"code","380586c0":"code","98f3520b":"code","b0a7e08b":"code","8ce857b1":"code","be836a3e":"code","48e18c8b":"code","ceb814f6":"code","addc5d15":"code","ad711728":"code","6c8f7ee4":"code","a59567df":"code","73f2d8c1":"code","d25414f1":"code","4197ea4f":"code","11627a24":"code","ecab83e4":"code","6afd6c51":"code","8bcb4c34":"code","b61ddc92":"code","a94c9afa":"code","83e86acc":"code","53ceb5c0":"code","a10843b2":"code","c587f4b3":"code","6eb9b87d":"code","f4d111d5":"code","fc5b4373":"code","7dafd8d5":"code","78dc1342":"code","833baab1":"code","b527bed3":"code","9fcb4024":"code","53b6bebd":"code","ff5282be":"code","05df7bbb":"code","a060bcb7":"code","06f8d036":"code","42ba650f":"code","04086c61":"code","dd791eff":"code","9801e022":"code","25d5241f":"code","e7bdc2e1":"code","8c4f0c80":"code","333aea4c":"code","a78c00d5":"code","94712411":"code","b335bd61":"code","1440a945":"code","79a91d9b":"code","361bee94":"code","35bcc800":"code","67bd9be1":"code","29935a03":"code","7b35c926":"code","1fc013f2":"code","ce70447c":"code","6cc75a5e":"code","632c05c9":"code","ee57b928":"code","ad813df1":"code","ecf8d691":"code","df81934a":"code","5c00e8d9":"code","88188a50":"code","6b7e5c16":"code","cdd7ae89":"code","1790482f":"code","67f7ee19":"code","5c81e103":"code","a4ab1e68":"code","3d9b983b":"code","bd76e82b":"code","2abf6f46":"code","91d8386d":"code","ee965682":"code","ec43ab5a":"code","5402e57e":"code","d1fef471":"code","00dad04e":"code","eecd6fcd":"code","48a2d541":"code","f9342281":"code","3894d034":"code","dbc63d19":"code","485204af":"code","03999117":"code","43df5d4e":"code","cac2798e":"code","7be72b0c":"code","acb43da4":"code","5a7b27a8":"code","de924b8b":"code","087b6bd7":"code","cabf2fb0":"code","fc0e5550":"code","dfab5511":"code","61f19a74":"code","d9dd80d7":"code","ea6765c8":"code","a45c16f2":"code","56a41f3e":"code","058b7def":"code","1d7c52b5":"code","9166bf45":"code","36566b0d":"code","41f725b6":"code","53072951":"code","8dc38265":"code","58eed11b":"code","0ce7ed41":"code","5489acaa":"code","e860a08f":"code","e97fa729":"code","bbf5e1fb":"code","8691a7c6":"code","173a58d6":"code","717a6b19":"code","4f0d002b":"code","5619a60c":"code","7e56e999":"code","2d391c01":"code","7d3aadb3":"code","e7aa44e1":"code","9f456fff":"code","a9c92b7b":"code","8feb5e34":"code","c3af0e22":"code","dbffc442":"code","c080cff6":"code","1a1bf8f0":"code","0fa32266":"code","c2e00791":"code","18c3ac42":"code","270d9758":"code","35380187":"code","52c274ca":"code","d46690d0":"code","07db3bde":"code","0dab6f35":"code","8105580e":"code","d493dbb7":"code","6c30b8a8":"code","0aa2184a":"code","95bacd54":"code","2901d177":"code","319ca204":"code","46045abe":"code","59b4fa95":"code","c62da742":"code","45017e74":"code","2970548d":"code","631a47e2":"code","d8ea820a":"code","53885dee":"code","cbaa491b":"code","6ae84f0d":"code","f6707550":"code","a9b955d5":"code","3f8f8018":"code","edcc7b68":"code","cb16978f":"code","b3af2d2a":"code","11e7cb8f":"code","55ded224":"code","a50fef97":"code","07f3f601":"code","a59cc75b":"code","2e9519ec":"code","115a18eb":"code","767f2579":"code","90e160a4":"code","62a0f2e5":"code","47795a71":"code","c76c0959":"code","cfd5ee2d":"code","fc0df25d":"code","2805aa27":"code","cbabd87e":"code","c48a788e":"code","209f626d":"code","55cb2d5c":"code","b8b50caa":"code","015bfe23":"code","0c1490df":"code","2a6d48dc":"code","4d5c5eda":"code","85be7277":"code","f627339b":"code","923ea604":"code","8b464771":"code","c5ec8d76":"code","b163a939":"code","49ee99da":"code","5bd5f1c2":"code","b759a8e8":"code","39c6b90f":"code","45a9d9e8":"code","efaefe0d":"code","4ff4c521":"code","75c0d48f":"code","6c6139c9":"code","aea921fa":"code","ba0b5301":"code","73fbdb08":"code","889521e2":"code","021da5dc":"code","d9689f95":"code","c72c9005":"code","627f8d5c":"code","a652c725":"code","4b9d6dac":"code","549242b3":"code","5f47882d":"code","41efc1b5":"code","3a969d2e":"code","e00d82ad":"code","01409b66":"code","0fb5cc94":"code","7b2ce2eb":"code","5881a5de":"code","3073a538":"code","8dad08f5":"code","62d26b76":"code","a2264584":"code","3d8f3a6e":"code","41f67216":"code","afec163e":"code","a01af778":"code","00f126b2":"code","051c0ecc":"code","4f0916a9":"code","fc59ab07":"code","5ad7af0f":"code","e47bb8f5":"code","6fcd9886":"code","317a9a39":"code","52b7a675":"code","c723b7e5":"code","ff07aa8f":"code","6b8e9f91":"code","af0ab9ee":"code","ee66335b":"code","d600a473":"code","9d2fbd2f":"code","4e3f04ae":"code","f0373291":"code","080f3d0b":"code","2bc63f4b":"code","cd4966ec":"code","166410cc":"code","e24dada0":"code","3219dc56":"code","aeda5b7e":"code","a2e0e570":"code","e57bbd67":"code","2bed5ab9":"code","9f71f89e":"code","fafb4fd4":"code","d3c503ae":"code","481f7e3e":"code","35dc0d8b":"code","35c6a65d":"code","ab8bc3c7":"code","cf618959":"code","876a8c3c":"code","65637bb5":"code","4ebe0b4a":"code","3b8d135e":"code","dfef9fa0":"code","a0b3f1b8":"code","3fec706d":"code","bec3739a":"code","b7e0741e":"code","0696c66e":"code","99ba204c":"code","cf58ea02":"code","f716da77":"code","d2032069":"code","f41f212d":"code","0bf36293":"code","16c794f4":"code","560834de":"code","f246f23d":"code","9e192de8":"code","2bc7aba6":"code","656605b3":"code","cd383b4d":"code","1ba6756b":"code","0a31a5f6":"code","87e46f1b":"code","c78a4606":"code","e3839f4e":"code","56e7edfd":"code","7c32189b":"code","df585656":"code","5c3bc68d":"code","9d117e4e":"code","e1fa78b4":"code","dd736cf2":"markdown","9bba4814":"markdown","7dff60e1":"markdown","d507e22f":"markdown","0b0a2446":"markdown","818d0cf1":"markdown","108dfb0d":"markdown","80754dd7":"markdown","412d17f0":"markdown","a75c1467":"markdown","6d264d7c":"markdown","ff0ea4bc":"markdown","64e8befa":"markdown","03321f72":"markdown","b67001dc":"markdown","84b551e8":"markdown","d75f3d4c":"markdown","e4d5ea70":"markdown","347e8f46":"markdown","9c738297":"markdown","062ef5f7":"markdown","ceb5d870":"markdown","1a538ac7":"markdown","0d0c9115":"markdown","199562ae":"markdown","8499280b":"markdown","1fd5b5f5":"markdown","74e405ac":"markdown","a068798d":"markdown","b6a92e76":"markdown","4424b767":"markdown","0f98d249":"markdown","2140e5fd":"markdown","38ecca68":"markdown","7a1378ee":"markdown","c90a1205":"markdown","e592fc4d":"markdown","be1fba1a":"markdown","4adaa69d":"markdown","a388545d":"markdown","6345c1ff":"markdown","85ed736e":"markdown","7109cf66":"markdown","8fe16ecf":"markdown","9e2c11a6":"markdown","a58d57fb":"markdown","ca31588b":"markdown","396633ae":"markdown","17fbe81b":"markdown","b02a6783":"markdown","70c7936e":"markdown","debfdb71":"markdown","c18e9ccf":"markdown","f38ef37e":"markdown","4fc4ee9b":"markdown","d2fcc4b3":"markdown","4d3ff8a5":"markdown","bc7d8414":"markdown","31763cd1":"markdown","a487e9e9":"markdown","cd2aa9b6":"markdown","47105d93":"markdown","79d219d4":"markdown","011893ea":"markdown","4d59f539":"markdown","8acb811d":"markdown","24203de5":"markdown","3d29901f":"markdown","98fc1211":"markdown","e657e84d":"markdown","fb9b718b":"markdown","01fa3f98":"markdown","6b2e65b5":"markdown","ae101003":"markdown","29d5a8fc":"markdown","60931459":"markdown","60383eb2":"markdown","151bd87b":"markdown","83928ceb":"markdown","b03a541b":"markdown","3d2ab35c":"markdown","ff9da7ab":"markdown","7a8e9584":"markdown","9f66850e":"markdown","cf08bff5":"markdown","bbbb4f5b":"markdown","98cb3835":"markdown","01053930":"markdown","26d726ac":"markdown","e0381512":"markdown","ffeca478":"markdown","f18de577":"markdown","06a9ec74":"markdown","500284de":"markdown","92817d72":"markdown"},"source":{"3e37c47e":"!pip install yfinance","a35e8088":"import pandas as pd\nimport numpy as np\nfrom pandas_datareader import data\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport yfinance as yf\nimport math\nfrom scipy import stats","e0bdd5b4":"date_history = pd.read_csv('..\/input\/mastercard-stock-data-latest-and-updated\/Mastercard_stock_history.csv')\ndate_stock_info = pd.read_csv('..\/input\/mastercard-stock-data-latest-and-updated\/Mastercard_stock_info.csv')","2311702d":"date_history","9beef185":"date_stock_info.head(10) ","150c5cbc":"date_history.info()","5ec05fd5":"sns.heatmap(date_history.isnull());","cfea5ef3":"date_history.describe()  ","bf421811":"date_history[date_history['Close'] >= 394.68]  ","f26767f2":"date_history[(date_history['Close'] >= 4) & (date_history['Close'] <= 4.1)]  #","411ab5c0":"acoes = ['MA','AAPL','GOLL4.SA', 'CVCB3.SA', 'WEGE3.SA', 'MGLU3.SA', 'TOTS3.SA', 'BOVA11.SA']","5c17ea7a":"acoes_df = pd.DataFrame()\nfor acao in acoes:\n  #acoes_df[acao] = data.DataReader(acao, data_source='yahoo', start='2015-01-01')['Close']\n  acoes_df[acao] = yf.download(acao, start='2015-01-01')['Close']","be62f56c":"acoes_df","57ed9fb8":"acoes_df = acoes_df.rename(columns={'MA': 'MasterCard','AAPL': 'Apple','GOLL4.SA': 'GOL', 'CVCB3.SA': 'CVC', 'WEGE3.SA': 'WEGE',\n                                    'MGLU3.SA': 'MGLU', 'TOTS3.SA': 'TOTS', 'BOVA11.SA': 'BOVA'})","3ff53b71":"acoes_df.head()","582ab023":"acoes_df.isnull().sum()","2fa9c311":"acoes_df.dropna(inplace=True)","1cca488b":"acoes_df.isnull().sum()","880d08e2":"acoes_df.to_csv('acoes.csv')","e2c5dc42":"df = pd.read_csv('acoes.csv')\nacoes_df = df\nacoes_df","35c65ac7":"acoes_df.columns[1:]","b8e29ff6":"acoes_df.describe()","d9b2cab1":"sns.histplot(acoes_df['MasterCard']);  # Podemos visualizar o valor mais comum para essa a\u00e7\u00e3o;","07b61a84":"np.arange(1, len(acoes_df.columns))","9ae0f314":"#These graphs just to demonstrate the density of times the stock value appears;\n\n#Esses gr\u00e1ficos apenas para demosntrar a densidade de vezes que aparece o valor das a\u00e7\u00f5es;\n\nplt.figure(figsize=(10,50))\ni = 1\nfor i in np.arange(1, len(acoes_df.columns)):\n  plt.subplot(9, 1, i + 1)\n  sns.histplot(acoes_df[acoes_df.columns[i]], kde = True)\n  plt.title(acoes_df.columns[i])","70c1353b":"acoes_df['MasterCard'].describe()","6701a85b":"sns.boxplot(x = acoes_df['MasterCard']);","5f3bf12e":"plt.figure(figsize=(10,50))\ni = 1\nfor i in np.arange(1, len(acoes_df.columns)):\n  plt.subplot(9, 1, i + 1)\n  sns.boxplot(x = acoes_df[acoes_df.columns[i]])\n  plt.title(acoes_df.columns[i])","342a2d13":"acoes_df.plot(x = 'Date', figsize = (15,7), title = 'Hist\u00f3rico do pre\u00e7o das a\u00e7\u00f5es \/ Stock price history');","a18083a2":"acoes_df","f3f959ed":"#We will do a normalization so that we can make a more adequate comparison between the values,\n#this way we will be able to visualize which of the actions can have more return, placing all actions starting at index 1;\n\n#Iremos fazer uma normaliza\u00e7\u00e3o para podermos fazer uma compara\u00e7\u00e3o mais adequada entre os valores,\n#dessa forma poderemos visualizar qual das a\u00e7\u00f5es podemos ter mais retorno, colocando todas as a\u00e7\u00f5es iniciando no indice 1;\n\nacoes_df_normalizado = acoes_df.copy()\nfor i in acoes_df_normalizado.columns[1:]:\n  acoes_df_normalizado[i] = acoes_df_normalizado[i] \/ acoes_df_normalizado[i][0]","b1113e58":"acoes_df_normalizado","8fdf4587":"acoes_df_normalizado.plot(x = 'Date', figsize = (15,7), title = 'Hist\u00f3rico do pre\u00e7o das a\u00e7\u00f5es - normalizado \/ Stock price history - normalized');","b4f11a6f":"figura = px.line(title = 'Hist\u00f3rico do pre\u00e7o das a\u00e7\u00f5es \/ Stock price history')\nfor i in acoes_df.columns[1:]:\n  figura.add_scatter(x = acoes_df['Date'], y = acoes_df[i], name = i)\nfigura.show()","5a8c9331":"figura = px.line(title = 'Hist\u00f3rico do pre\u00e7o das a\u00e7\u00f5es - normalizado \/ Stock price history - normalized')\nfor i in acoes_df_normalizado.columns[1:]:\n  figura.add_scatter(x = acoes_df_normalizado['Date'], y = acoes_df_normalizado[i], name = i)\nfigura.show()","5c4b13db":"acoes_df","40da31ba":"class color:\n   BLUE = '\\033[94m'\n   END = '\\033[0m'","283c08e2":"m_i_f = acoes_df['MasterCard'][0], acoes_df['MasterCard'][len(acoes_df) - 1]\nt_r = ((acoes_df['MasterCard'][len(acoes_df) - 1] - acoes_df['MasterCard'][0]) \/ acoes_df['MasterCard'][0]) * 100\n\na_i_f = acoes_df['Apple'][0], acoes_df['Apple'][len(acoes_df) - 1]\na_r = ((acoes_df['Apple'][len(acoes_df) - 1] - acoes_df['Apple'][0]) \/ acoes_df['Apple'][0]) * 100\n\ng_i_f = acoes_df['GOL'][0], acoes_df['GOL'][len(acoes_df) - 1]\ng_r = ((acoes_df['GOL'][len(acoes_df) - 1] - acoes_df['GOL'][0]) \/ acoes_df['GOL'][0]) * 100\n\nc_i_f = acoes_df['CVC'][0], acoes_df['CVC'][len(acoes_df) - 1]\nc_r = ((acoes_df['CVC'][len(acoes_df) - 1] - acoes_df['CVC'][0]) \/ acoes_df['CVC'][0]) * 100\n\nw_i_f = acoes_df['WEGE'][0], acoes_df['WEGE'][len(acoes_df) - 1]\nw_r = ((acoes_df['WEGE'][len(acoes_df) - 1] - acoes_df['WEGE'][0]) \/ acoes_df['WEGE'][0]) * 100\n\nmg_i_f = acoes_df['MGLU'][0], acoes_df['MGLU'][len(acoes_df) - 1]\nmg_r = ((acoes_df['MGLU'][len(acoes_df) - 1] - acoes_df['MGLU'][0]) \/ acoes_df['MGLU'][0]) * 100\n\nt_i_f = acoes_df['TOTS'][0], acoes_df['TOTS'][len(acoes_df) - 1]\nt_tr = ((acoes_df['TOTS'][len(acoes_df) - 1] - acoes_df['TOTS'][0]) \/ acoes_df['TOTS'][0]) * 100\n\nb_i_f = acoes_df['BOVA'][0], acoes_df['BOVA'][len(acoes_df) - 1]\nb_r = ((acoes_df['BOVA'][len(acoes_df) - 1] - acoes_df['BOVA'][0]) \/ acoes_df['BOVA'][0]) * 100","983a4960":"print('MasterCard valor inicial(01\/2015) e final(10\/2021): ', m_i_f, 'Taxa de retorno =', t_r,'%');\nprint()\nprint(color.BLUE +'Apple valor inicial(01\/2015) e final(10\/2021): ', a_i_f, 'Taxa de retorno =', a_r,'%'+ color.END);\nprint()\nprint('Gol valor inicial(01\/2015) e final(10\/2021): ', g_i_f, 'Taxa de retorno =', g_r,'%');\nprint()\nprint(color.BLUE +'CVC valor inicial(01\/2015) e final(10\/2021): ', c_i_f, 'Taxa de retorno =', c_r,'%'+ color.END);\nprint()\nprint('WEGE valor inicial(01\/2015) e final(10\/2021): ', w_i_f, 'Taxa de retorno =', w_r,'%');\nprint()\nprint(color.BLUE +'Magalu valor inicial(01\/2015) e final(10\/2021): ', mg_i_f, 'Taxa de retorno =', mg_r,'%'+ color.END);\nprint()\nprint('TOTS valor inicial(01\/2015) e final(10\/2021): ', t_i_f, 'Taxa de retorno =', t_tr,'%');\nprint()\nprint(color.BLUE +'BOVA valor inicial(01\/2015) e final(10\/2021): ', b_i_f, 'Taxa de retorno =', b_r,'%'+ color.END);\n\n\n","6f742417":"acoes_df['RS MasterCard'] = (acoes_df['MasterCard'] \/ acoes_df['MasterCard'].shift(1)) - 1\nacoes_df['RS Apple'] = (acoes_df['Apple'] \/ acoes_df['Apple'].shift(1)) - 1\nacoes_df['RS GOL'] = (acoes_df['GOL'] \/ acoes_df['GOL'].shift(1)) - 1\nacoes_df['RS CVC'] = (acoes_df['CVC'] \/ acoes_df['CVC'].shift(1)) - 1\nacoes_df['RS WEGE'] = (acoes_df['WEGE'] \/ acoes_df['WEGE'].shift(1)) - 1\nacoes_df['RS MGLU'] = (acoes_df['MGLU'] \/ acoes_df['MGLU'].shift(1)) - 1\nacoes_df['RS TOTS'] = (acoes_df['TOTS'] \/ acoes_df['TOTS'].shift(1)) - 1\nacoes_df['RS BOVA'] = (acoes_df['BOVA'] \/ acoes_df['BOVA'].shift(1)) - 1\nacoes_df","232fa280":"r_ma = (acoes_df['RS MasterCard'].mean() * 246) * 100\nr_aa = (acoes_df['RS Apple'].mean() * 246) * 100\nr_g = (acoes_df['RS GOL'].mean() * 246) * 100\nr_ca = (acoes_df['RS CVC'].mean() * 246) * 100\nr_wa = (acoes_df['RS WEGE'].mean() * 246) * 100\nr_ma = (acoes_df['RS MGLU'].mean() * 246) * 100\nr_ta = (acoes_df['RS TOTS'].mean() * 246) * 100\nr_ba = (acoes_df['RS BOVA'].mean() * 246) * 100","cc5852a5":"print('MasterCard Taxa de retorno \u00faltimos 12 meses =', r_ma,'%');\nprint()\nprint(color.BLUE +'Apple Taxa de retorno \u00faltimos 12 meses=', r_aa,'%'+ color.END);\nprint()\nprint('Gol Taxa de retorno \u00faltimos 12 meses =', r_g,'%');\nprint()\nprint(color.BLUE +'CVC Taxa de retorno \u00faltimos 12 meses =', r_ca,'%'+ color.END);\nprint()\nprint('WEGE Taxa de retorno \u00faltimos 12 meses=', r_wa,'%');\nprint()\nprint(color.BLUE +'Magalu Taxa de retorno \u00faltimos 12 meses=', r_ma,'%'+ color.END);\nprint()\nprint('TOTS Taxa de retorno = \u00faltimos 12 meses', r_ta,'%');\nprint()\nprint(color.BLUE +'BOVA Taxa de retorno = \u00faltimos 12 meses', r_ba,'%'+ color.END);\n","b2a1e39b":"r_ma = (acoes_df['RS MasterCard'].mean() * 30) * 100\nr_aa = (acoes_df['RS Apple'].mean() * 30) * 100\nr_g = (acoes_df['RS GOL'].mean() * 30) * 100\nr_ca = (acoes_df['RS CVC'].mean() * 30) * 100\nr_wa = (acoes_df['RS WEGE'].mean() * 30) * 100\nr_ma = (acoes_df['RS MGLU'].mean() * 30) * 100\nr_ta = (acoes_df['RS TOTS'].mean() * 30) * 100\nr_ba = (acoes_df['RS BOVA'].mean() * 30) * 100","9f101111":"print('MasterCard Taxa de retorno \u00faltimos 30 dias =', r_ma,'%');\nprint()\nprint(color.BLUE +'Apple Taxa de retorno \u00faltimos 30 dias=', r_aa,'%'+ color.END);\nprint()\nprint('Gol Taxa de retorno \u00faltimos 30 dias =', r_g,'%');\nprint()\nprint(color.BLUE +'CVC Taxa de retorno \u00faltimos 30 dias =', r_ca,'%'+ color.END);\nprint()\nprint('WEGE Taxa de retorno \u00faltimos 30 dias =', r_wa,'%');\nprint()\nprint(color.BLUE +'Magalu Taxa de retorno \u00faltimos 30 dias =', r_ma,'%'+ color.END);\nprint()\nprint('TOTS Taxa de retorno = \u00faltimos 30 dias', r_ta,'%');\nprint()\nprint(color.BLUE +'BOVA Taxa de retorno = \u00faltimos 30 dias', r_ba,'%'+ color.END);\n","380586c0":"l1 = np.log(acoes_df['MasterCard'][len(acoes_df) - 1] \/ acoes_df['MasterCard'][0]) * 100\nl2 = np.log(acoes_df['Apple'][len(acoes_df) - 1] \/ acoes_df['Apple'][0]) * 100\nl3 = np.log(acoes_df['GOL'][len(acoes_df) - 1] \/ acoes_df['GOL'][0]) * 100\nl4 = np.log(acoes_df['CVC'][len(acoes_df) - 1] \/ acoes_df['CVC'][0]) * 100\nl5 = np.log(acoes_df['WEGE'][len(acoes_df) - 1] \/ acoes_df['WEGE'][0]) * 100\nl6 = np.log(acoes_df['MGLU'][len(acoes_df) - 1] \/ acoes_df['MGLU'][0]) * 100\nl7 = np.log(acoes_df['TOTS'][len(acoes_df) - 1] \/ acoes_df['TOTS'][0]) * 100\nl8 = np.log(acoes_df['BOVA'][len(acoes_df) - 1] \/ acoes_df['BOVA'][0]) * 100","98f3520b":"print('MasterCard Taxa de retorno logar\u00edtimica =', l1,'%');\nprint()\nprint(color.BLUE +'Apple Taxa de retorno logar\u00edtimica =', l2,'%'+ color.END);\nprint()\nprint('Gol Taxa de retorno logar\u00edtimica =', l3,'%');\nprint()\nprint(color.BLUE +'CVC Taxa de retorno logar\u00edtimica =', l4,'%'+ color.END);\nprint()\nprint('WEGE Taxa de retorno logar\u00edtimica =',l5,'%');\nprint()\nprint(color.BLUE +'Magalu Taxa de retorno logar\u00edtimica =', l6,'%'+ color.END);\nprint()\nprint('TOTS Taxa de retorno logar\u00edtimica =', l7,'%');\nprint()\nprint(color.BLUE +'BOVA Taxa de retorno logar\u00edtimica =', l8,'%'+ color.END);","b0a7e08b":"acoes_df['RL MasterCard'] = np.log(acoes_df['MasterCard'] \/ acoes_df['MasterCard'].shift(1))\nacoes_df['RL Apple'] = np.log(acoes_df['Apple'] \/ acoes_df['Apple'].shift(1))\nacoes_df['RL GOL'] = np.log(acoes_df['GOL'] \/ acoes_df['GOL'].shift(1))\nacoes_df['RL CVC'] = np.log(acoes_df['CVC'] \/ acoes_df['CVC'].shift(1))\nacoes_df['RL WEGE'] = np.log(acoes_df['WEGE'] \/ acoes_df['WEGE'].shift(1))\nacoes_df['RL MGLU'] = np.log(acoes_df['MGLU'] \/ acoes_df['MGLU'].shift(1))\nacoes_df['RL TOTS'] = np.log(acoes_df['TOTS'] \/ acoes_df['TOTS'].shift(1))\nacoes_df['RL BOVA'] = np.log(acoes_df['BOVA'] \/ acoes_df['BOVA'].shift(1))\nacoes_df","8ce857b1":"t1 = (acoes_df['RL MasterCard'].mean() * 246) * 100\nt2 = (acoes_df['RL Apple'].mean() * 246) * 100\nt3 = (acoes_df['RL GOL'].mean() * 246) * 100\nt4 = (acoes_df['RL CVC'].mean() * 246) * 100\nt5 = (acoes_df['RL WEGE'].mean() * 246) * 100\nt6 = (acoes_df['RL MGLU'].mean() * 246) * 100\nt7 = (acoes_df['RL TOTS'].mean() * 246) * 100\nt8 = (acoes_df['RL BOVA'].mean() * 246) * 100\nprint('MasterCard Taxa de retorno logar\u00edtimica anual =', t1,'%');\nprint()\nprint(color.BLUE +'Apple Taxa de retorno logar\u00edtimica anual =', t2,'%'+ color.END);\nprint()\nprint('Gol Taxa de retorno logar\u00edtimica anual =', t3,'%');\nprint()\nprint(color.BLUE +'CVC Taxa de retorno logar\u00edtimica anual =', t4,'%'+ color.END);\nprint()\nprint('WEGE Taxa de retorno logar\u00edtimica anual =',t5,'%');\nprint()\nprint(color.BLUE +'Magalu Taxa de retorno logar\u00edtimica anual =', t6,'%'+ color.END);\nprint()\nprint('TOTS Taxa de retorno logar\u00edtimica anual =', t7,'%');\nprint()\nprint(color.BLUE +'BOVA Taxa de retorno logar\u00edtimica anual =', t8,'%'+ color.END);","be836a3e":"dataset = pd.read_csv('acoes.csv')\ndataset","48e18c8b":"dataset_normalizado = dataset.copy()\nfor i in dataset_normalizado.columns[1:]:\n  dataset_normalizado[i] = (dataset_normalizado[i] \/ dataset_normalizado[i][0])","ceb814f6":"dataset_normalizado","addc5d15":"dataset_normalizado.drop(labels=['Date'], axis=1, inplace=True)","ad711728":"retorno_carteira = (dataset_normalizado \/ dataset_normalizado.shift(1)) - 1\nretorno_carteira.head()","6c8f7ee4":"retorno_anual = retorno_carteira.mean() * 246\nretorno_anual","a59567df":"retorno_anual = retorno_anual * 100\nretorno_anual","73f2d8c1":"# As the number of shares are the same so let's keep the same weight value for our analysis, 100%\/8;\n\n# Como a quantidade de a\u00e7\u00f5es s\u00e3o as mesmas ent\u00e3o vamos manter o mesmo valor de pesos para nossa an\u00e1lise, 100%\/8;\n\n#                      MasterCard, Apple,  Gol,  CVC,   WEGE,  MGLU,  TOTS, BOVA;\n\npesos_carteira1 = np.array([0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\npesos_carteira1.sum()","d25414f1":"np.dot(retorno_anual, pesos_carteira1)","4197ea4f":"pesos_carteira2 = np.array([0.1, 0.1, 0.1, 0.0, 0.1, 0.5, 0.1, 0.0])\npesos_carteira2.sum()","11627a24":"np.dot(retorno_anual, pesos_carteira2)","ecab83e4":"dataset = pd.read_csv('acoes.csv')\ndataset","6afd6c51":"dataset_normalizado = dataset.copy()\nfor i in dataset_normalizado.columns[1:]:\n  dataset_normalizado[i] = (dataset_normalizado[i] \/ dataset_normalizado[i][0])\ndataset_normalizado.head()","8bcb4c34":"dataset_normalizado['CARTEIRA'] = (dataset_normalizado['Apple'] + dataset_normalizado['GOL'] + dataset_normalizado['CVC'] + dataset_normalizado['WEGE'] + dataset_normalizado['MGLU'] + dataset_normalizado['TOTS'] + dataset_normalizado['BOVA']) \/ 7\ndataset_normalizado","b61ddc92":"figura = px.line(title = 'Comparativo carteira x MasterCard \/ Comparison of wallet x MasterCard')\nfor i in dataset_normalizado.columns[1:]:\n  figura.add_scatter(x = dataset_normalizado['Date'], y = dataset_normalizado[i], name = i)\nfigura.show()","a94c9afa":"dataset_normalizado.drop(['Apple','GOL', 'WEGE', 'CVC', 'MGLU', 'TOTS','BOVA'], axis = 1, inplace= True)\ndataset_normalizado","83e86acc":"figura = px.line(title = 'Comparativo carteira x Mastecard \/ Comparative wallet or Mastercard')\nfor i in dataset_normalizado.columns[1:]:\n  figura.add_scatter(x = dataset_normalizado['Date'], y = dataset_normalizado[i], name = i)\nfigura.show()","53ceb5c0":"dataset = pd.read_csv('acoes.csv')\ndataset","a10843b2":"acoes_df.dropna(inplace=True)","c587f4b3":"dataset['MasterCard'][dataset['Date'] == '2015-01-02'], dataset['MasterCard'][dataset['Date'] == '2015-12-30']","6eb9b87d":"np.log(98.87 \/ 85.68) * 100  # MasterCard","f4d111d5":"dataset['MGLU'][dataset['Date'] == '2015-01-02'], dataset['MGLU'][dataset['Date'] == '2015-12-30']","fc5b4373":"np.log(0.06 \/ 0.23) * 100","7dafd8d5":"dataset['MasterCard'][dataset['Date'] == '2016-01-04'], dataset['MasterCard'][dataset['Date'] == '2016-12-29']","78dc1342":"np.log(103.76 \/ 94.80) * 100  # MasterCard","833baab1":"dataset['MGLU'][dataset['Date'] == '2016-01-04'], dataset['MGLU'][dataset['Date'] == '2016-12-29']","b527bed3":"np.log(0.41 \/ 0.07) * 100","9fcb4024":"dataset['MasterCard'][dataset['Date'] == '2017-01-02'], dataset['MasterCard'][dataset['Date'] == '2017-12-29']","53b6bebd":"np.log(151.36 \/ 123.8) * 100","ff5282be":"dataset['MGLU'][dataset['Date'] == '2017-01-02'], dataset['MGLU'][dataset['Date'] == '2017-12-29']","05df7bbb":"np.log(2.50 \/ 0.39) * 100","a060bcb7":"dataset['MasterCard'][dataset['Date'] == '2018-01-02'], dataset['MasterCard'][dataset['Date'] == '2018-12-28']","06f8d036":"np.log(186.16 \/ 151.91) * 100","42ba650f":"dataset['MGLU'][dataset['Date'] == '2018-01-02'], dataset['MGLU'][dataset['Date'] == '2018-12-28']","04086c61":"np.log(5.65 \/ 2.47) * 100","dd791eff":"dataset['MasterCard'][dataset['Date'] == '2019-01-02'], dataset['MasterCard'][dataset['Date'] == '2019-12-30']","9801e022":"np.log(297.72 \/ 189.74) * 100","25d5241f":"dataset['MGLU'][dataset['Date'] == '2019-01-02'], dataset['MGLU'][dataset['Date'] == '2019-12-30']","e7bdc2e1":"np.log(11.92 \/ 5.81) * 100","8c4f0c80":"dataset['MasterCard'][dataset['Date'] == '2020-01-02'], dataset['MasterCard'][dataset['Date'] == '2020-11-03']","333aea4c":"np.log(295.39 \/ 303.39) * 100","a78c00d5":"dataset['MGLU'][dataset['Date'] == '2020-01-02'], dataset['MGLU'][dataset['Date'] == '2020-11-03']","94712411":"np.log(24.99 \/ 12.33) * 100","b335bd61":"taxas_Master = np.array([14.31, 9.03, 20.09, 20.33, 45.04, -2.67])\n\nmedia_Master = taxas_Master.sum() \/ len(taxas_Master)\nmedia_Master","1440a945":"media_Master = taxas_Master.mean()\nmedia_Master","79a91d9b":"((taxas_Master - media_Master) ** 2).sum() \/ len(taxas_Master)","361bee94":"variancia_Master = taxas_Master.var()\nvariancia_Master","35bcc800":"taxas_mglu = np.array([-134.37, 176.76, 185.78, 82.74, 71.86, 71.87])","67bd9be1":"variancia_mglu = taxas_mglu.var()\nvariancia_mglu","29935a03":"dataset['MasterCard'].tail(330).var(), dataset['MGLU'].tail(330).var()","7b35c926":"desvio_padrao_Master = math.sqrt(variancia_Master)\ndesvio_padrao_Master","1fc013f2":"taxas_Master.std()","ce70447c":"desvio_padrao_mglu = math.sqrt(variancia_mglu)\ndesvio_padrao_mglu","6cc75a5e":"taxas_mglu.std()","632c05c9":"dataset['MasterCard'].tail(330).std(), dataset['MGLU'].tail(330).std()  # as v\u00e1ria\u00e7\u00f5es est\u00e3o em dollars e Reais;","ee57b928":"desvio_padrao_Master, media_Master","ad813df1":"coeficiente_variacao_Master = (desvio_padrao_Master \/ media_Master) * 100\ncoeficiente_variacao_Master","ecf8d691":"stats.variation(taxas_Master) * 100","df81934a":"stats.variation(taxas_mglu) * 100","5c00e8d9":"dataset.drop(labels = ['Date'], axis=1, inplace=True)\ndataset","88188a50":"taxas_retorno = (dataset \/ dataset.shift(1)) - 1\ntaxas_retorno","6b7e5c16":"taxas_retorno.std() * 100   # Desvio padr\u00e3o;   Maior risco s\u00e3o as a\u00e7\u00f5es da gol;\n                            # Standard deviation; The biggest risk is the actions of the goal;","cdd7ae89":"taxas_retorno.std() * 246   ","1790482f":"math.sqrt(246) # Anualizar","67f7ee19":"taxas_retorno.std() * math.sqrt(248)","5c81e103":"dataset  # utilizamos as taxas de retorno e n\u00e3o os pre\u00e7os das a\u00e7\u00f5es;\n          # we use rates of return, not stock prices;","a4ab1e68":"taxas_retorno   # utilizamos as taxas de retorno e n\u00e3o os pre\u00e7os das a\u00e7\u00f5es;\n                # we use rates of return, not stock prices;","3d9b983b":"taxas_retorno.cov()","bd76e82b":"taxas_retorno.corr()     # A correla\u00e7\u00e3o indicar\u00e1 o quanto o investidor ir\u00e1 ganhar e n\u00e3o o pre\u00e7o das a\u00e7\u00f5es;\n                         # The correlation will indicate how much the investor will earn and not the stock price;","2abf6f46":"plt.figure(figsize=(8,8))\nsns.heatmap(taxas_retorno.corr(), annot=True);","91d8386d":"taxas_retorno","ee965682":"taxas_retorno_master_mglu = taxas_retorno.drop(columns = ['Apple','WEGE', 'GOL', 'CVC', 'TOTS', 'BOVA'])\ntaxas_retorno_master_mglu","ec43ab5a":"taxas_retorno_master_mglu.cov()","5402e57e":"taxas_retorno_master_mglu.cov() * 248","d1fef471":"pesos = np.array([0.5, 0.5])","00dad04e":"np.dot(taxas_retorno_master_mglu.cov() * 248, pesos)","eecd6fcd":"np.dot(pesos, np.dot(taxas_retorno_master_mglu.cov() * 248, pesos))","48a2d541":"math.sqrt(np.dot(pesos, np.dot(taxas_retorno_master_mglu.cov() * 248, pesos))) * 100  # Volatividade da carteira;","f9342281":"dataset.columns","3894d034":"pesos1 = np.array([0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\npesos1.sum()","dbc63d19":"taxas_retorno.cov() * 248  # Co-vari\u00e2ncia de uma a\u00e7\u00e3o com outra;","485204af":"np.dot(taxas_retorno.cov() * 248, pesos1) # multipica\u00e7\u00e3o das matrizes;\n                                          # matrix multiplication;","03999117":"variancia_portfolio1 = np.dot(pesos1, np.dot(taxas_retorno.cov() * 248, pesos1))\nvariancia_portfolio1","43df5d4e":"volatilidade_portfolio1 = math.sqrt(variancia_portfolio1)\nvolatilidade_portfolio1   # A volatilidade dessa carterira de a\u00e7\u00f5es \u00e9 de 29%;\n                          # Equity portfolio volatility is 29%;","cac2798e":"# Let's do the volatility analysis for MasterCard only;\n# Vamos fazer a an\u00e1lise da volatilidade apenas da MasterCard;\n\npesos2 = np.array([1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])","7be72b0c":"variancia_portfolio2 = np.dot(pesos2, np.dot(taxas_retorno.cov() * 248, pesos2))\nvariancia_portfolio2","acb43da4":"volatilidade_portfolio2 = math.sqrt(variancia_portfolio2)\nvolatilidade_portfolio2","5a7b27a8":"taxas_retorno","de924b8b":"pesos1","087b6bd7":"pesos2","cabf2fb0":"taxas_retorno.var() * 248 # vari\u00e2ncia anual;","fc0e5550":"variancia_pesos1 = (taxas_retorno.var() * 248) * pesos1  # quanto cada variancia varia em rela\u00e7\u00e3o aos seus respectivos pesos.\nvariancia_pesos1                                         # how much each variance varies in relation to their respective weights.","dfab5511":"sub1 = - variancia_pesos1[0] - variancia_pesos1[1] - variancia_pesos1[2] - variancia_pesos1[3] - variancia_pesos1[4] - variancia_pesos1[5] -variancia_pesos1[6] - variancia_pesos1[7] \nsub1","61f19a74":"variancia_portfolio1","d9dd80d7":"risco_nao_sistematico1 = (variancia_portfolio1 - sub1)\nrisco_nao_sistematico1","ea6765c8":"variancia_pesos2 = (taxas_retorno.var() * 248) * pesos2   # somente pela MasterCard;\nvariancia_pesos2                                          # by MasterCard only;","a45c16f2":"sub2 = variancia_pesos2[0] - variancia_pesos2[1] - variancia_pesos2[2] - variancia_pesos2[3] - variancia_pesos2[4] - variancia_pesos2[5]\nsub2","56a41f3e":"variancia_portfolio2","058b7def":"risco_nao_sistematico2 = (variancia_portfolio2 - sub2)\nrisco_nao_sistematico2","1d7c52b5":"dataset = pd.read_csv('acoes.csv')\ndataset","9166bf45":"len(dataset.columns) - 1","36566b0d":"dataset.loc[len(dataset) - 1]['MasterCard']","41f725b6":"def alocacao_ativos(dataset, dinheiro_total, seed = 0, melhores_pesos = []):\n  dataset = dataset.copy()\n\n  if seed != 0:\n    np.random.seed(seed)\n\n  if len(melhores_pesos) > 0:\n    pesos = melhores_pesos\n  else:  \n    pesos = np.random.random(len(dataset.columns) - 1)\n    #print(pesos, pesos.sum())\n    pesos = pesos \/ pesos.sum()\n    #print(pesos, pesos.sum())\n\n  colunas = dataset.columns[1:]\n  #print(colunas)\n  for i in colunas:\n    dataset[i] = (dataset[i] \/ dataset[i][0])\n\n  for i, acao in enumerate(dataset.columns[1:]):\n    #print(i, acao)\n    dataset[acao] = dataset[acao] * pesos[i] * dinheiro_total\n  \n  dataset['soma valor'] = dataset.sum(axis = 1)\n\n  datas = dataset['Date']\n  #print(datas)\n\n  dataset.drop(labels = ['Date'], axis = 1, inplace = True)\n  dataset['taxa retorno'] = 0.0\n\n  for i in range(1, len(dataset)):\n    dataset['taxa retorno'][i] = ((dataset['soma valor'][i] \/ dataset['soma valor'][i - 1]) - 1) * 100\n\n  acoes_pesos = pd.DataFrame(data = {'A\u00e7\u00f5es': colunas, 'Pesos': pesos * 100})\n\n  return dataset, datas, acoes_pesos, dataset.loc[len(dataset) - 1]['soma valor']","53072951":"dataset, datas, acoes_pesos, soma_valor = alocacao_ativos(pd.read_csv('acoes.csv'), 5000, 10)  # estamos fazendo a simula\u00e7\u00e3o do investimento de R$ 5.000,00;","8dc38265":"dataset  # aqui temos a divis\u00e3o do valor de 5000 pelo peso de cada uma;\n         # No indice 1 \u00e9 o valor que investimos e no 1648 \u00e9 o valor final de ganhos ou percas; ","58eed11b":"datas","0ce7ed41":"acoes_pesos  # essas s\u00e3o as porcentagens que investimos em cada uma das a\u00e7\u00f5es;\n            # these are the percentages we invest in each of the stocks;","5489acaa":"soma_valor","e860a08f":"figura = px.line(x = datas, y = dataset['taxa retorno'], title = 'Retorno di\u00e1rio do portf\u00f3lio \/ Portfolio daily return')\nfigura.show()  # Essas s\u00e3o as nossass taxas de retonor di\u00e1ria de acordo com os pesos que n\u00f3s alocamos;","e97fa729":"figura = px.line(title = 'Evolu\u00e7\u00e3o do patrim\u00f4nio \/ Equity evolution')\nfor i in dataset.drop(columns = ['soma valor', 'taxa retorno']).columns:\n  figura.add_scatter(x = datas, y = dataset[i], name = i)\nfigura.show()  # quanto ganhariamos se tivessemos feito o investimento;","bbf5e1fb":"figura = px.line(x = datas, y = dataset['soma valor'], title = 'Evolu\u00e7\u00e3o do patrim\u00f4nio \/ Equity evolution')\nfigura.show()","8691a7c6":"figura = px.line(x = datas, y = dataset['MasterCard'], title = 'Evolu\u00e7\u00e3o do patrim\u00f4nio MasterCard \/ Evolution of MasterCard Equity')\nfigura.show()","173a58d6":"figura2 = px.line(title = 'Evolu\u00e7\u00e3o do patrim\u00f4nio, MasterCard, Magalu')\nfor i in dataset.drop(columns = ['Apple', 'GOL', 'CVC', 'WEGE', 'TOTS', 'BOVA', 'soma valor', 'taxa retorno']).columns:\n  figura2.add_scatter(x = datas, y = dataset[i], name = i)\nfigura2.show()","717a6b19":"dataset.loc[len(dataset) - 1]['soma valor'] \/ dataset.loc[0]['soma valor'] - 1  # taxa de retorno","4f0d002b":"dataset['taxa retorno'].std()  # desvio padr\u00e3o","5619a60c":"(dataset['taxa retorno'].mean() \/ dataset['taxa retorno'].std()) * np.sqrt(248)  # calculo anual, um valor aceitavel;","7e56e999":"dinheiro_total = 5000","2d391c01":"soma_valor - dinheiro_total  # tivermos um lucro de R$ 23.178,58 investido nessa carteira;\n                             # we have a profit of R$23,178.58 invested in this portfolio;","7d3aadb3":"# Taxa selic: https:\/\/www.infomoney.com.br\/guias\/taxa-selic\/\ntaxa_selic_2015 = 12.75\ntaxa_selic_2016 = 14.25\ntaxa_selic_2017 = 12.25\ntaxa_selic_2018 = 6.50\ntaxa_selic_2019 = 5.0\ntaxa_selic_2020 = 2.0","e7aa44e1":"valor_2015 = dinheiro_total + (dinheiro_total * taxa_selic_2015 \/ 100)\nvalor_2015","9f456fff":"valor_2016 = valor_2015 + (valor_2015 * taxa_selic_2016 \/ 100)\nvalor_2016","a9c92b7b":"valor_2017 = valor_2016 + (valor_2016 * taxa_selic_2017 \/ 100)\nvalor_2017","8feb5e34":"valor_2018 = valor_2017 + (valor_2017 * taxa_selic_2018 \/ 100)\nvalor_2018","c3af0e22":"valor_2019 = valor_2018 + (valor_2018 * taxa_selic_2019 \/ 100)\nvalor_2019","dbffc442":"valor_2020 = valor_2019 + (valor_2019 * taxa_selic_2020 \/ 100)\nvalor_2020","c080cff6":"rendimentos = valor_2020 - dinheiro_total\nrendimentos","1a1bf8f0":"ir = rendimentos * 15 \/ 100  # quando deixamos o dinheiro investido por mais tempo a menor tax do imposto de renda 15%;\nir                          # valor do importo de renda 486,97","0fa32266":"valor_2020 - ir    ","c2e00791":"taxa_selic_historico = np.array([12.75, 14.25, 12.25, 6.5, 5.0, 2.0])\ntaxa_selic_historico.mean() \/ 100  # m\u00e9dia dos 5 anos;","18c3ac42":"(dataset['taxa retorno'].mean() - taxa_selic_historico.mean() \/ 100) \/ dataset['taxa retorno'].std() * np.sqrt(248)","270d9758":"import sys\n1 - sys.maxsize","35380187":"def alocacao_portfolio(dataset, dinheiro_total, sem_risco, repeticoes):\n  dataset = dataset.copy()\n  dataset_original = dataset.copy()\n\n  lista_retorno_esperado = []\n  lista_volatilidade_esperada = []\n  lista_sharpe_ratio = []\n\n  melhor_sharpe_ratio = 1 - sys.maxsize\n  melhores_pesos = np.empty\n  melhor_volatilidade = 0\n  melhor_retorno = 0\n  \n  for _ in range(repeticoes):\n    pesos = np.random.random(len(dataset.columns) - 1)\n    pesos = pesos \/ pesos.sum()\n\n    for i in dataset.columns[1:]:\n      dataset[i] = dataset[i] \/ dataset[i][0]\n\n    for i, acao in enumerate(dataset.columns[1:]):\n      dataset[acao] = dataset[acao] * pesos[i] * dinheiro_total\n\n    dataset.drop(labels = ['Date'], axis = 1, inplace=True)\n\n    retorno_carteira = np.log(dataset \/ dataset.shift(1))\n    matriz_covariancia = retorno_carteira.cov()\n\n    dataset['soma valor'] = dataset.sum(axis = 1)\n    dataset['taxa retorno'] = 0.0\n\n    for i in range(1, len(dataset)):\n      dataset['taxa retorno'][i] = np.log(dataset['soma valor'][i] \/ dataset['soma valor'][i - 1])\n\n\n    retorno_esperado = np.sum(dataset['taxa retorno'].mean() * pesos) * 246\n    volatilidade_esperada = np.sqrt(np.dot(pesos, np.dot(matriz_covariancia * 246, pesos)))\n    sharpe_ratio = (retorno_esperado - sem_risco) \/ volatilidade_esperada\n\n    if sharpe_ratio > melhor_sharpe_ratio:\n      melhor_sharpe_ratio = sharpe_ratio\n      melhores_pesos = pesos\n      melhor_volatilidade = volatilidade_esperada\n      melhor_retorno = retorno_esperado\n\n    lista_retorno_esperado.append(retorno_esperado)\n    lista_volatilidade_esperada.append(volatilidade_esperada)\n    lista_sharpe_ratio.append(sharpe_ratio)\n    \n    dataset = dataset_original.copy()\n\n  return melhor_sharpe_ratio, melhores_pesos, lista_retorno_esperado, lista_volatilidade_esperada, lista_sharpe_ratio, melhor_volatilidade, melhor_retorno\n\nsharpe_ratio, melhores_pesos, ls_retorno, ls_volatilidade, ls_sharpe_ratio, melhor_volatilidade, melhor_retorno = alocacao_portfolio(pd.read_csv('acoes.csv'), 5000, taxa_selic_historico.mean() \/ 100, 1000)\n\nsharpe_ratio, melhores_pesos","52c274ca":"_, _, acoes_pesos, soma_valor = alocacao_ativos(pd.read_csv('acoes.csv'), 5000, melhores_pesos=melhores_pesos)","d46690d0":"acoes_pesos, soma_valor  # seria o resultado \n                         # would be the result","07db3bde":"print(ls_retorno)","0dab6f35":"print(ls_volatilidade)","8105580e":"print(ls_sharpe_ratio)","d493dbb7":"melhor_retorno, melhor_volatilidade","6c30b8a8":"plt.figure(figsize=(10,8))\nplt.scatter(ls_volatilidade, ls_retorno, c = ls_sharpe_ratio)\nplt.colorbar(label = 'Sharpe ratio')\nplt.xlabel('Volatilidade')\nplt.ylabel('Retorno')\nplt.scatter(melhor_volatilidade, melhor_retorno, c = 'red', s = 100);","0aa2184a":"!pip install mlrose\nimport six\nimport sys\nsys.modules['sklearn.externals.six'] = six\nimport mlrose","95bacd54":"taxa_selic_historico","2901d177":"dataset_original = pd.read_csv('acoes.csv')\ndinheiro_total = 5000\nsem_risco = taxa_selic_historico.mean() \/ 100","319ca204":"def fitness_function(solucao):\n  dataset = dataset_original.copy()\n  pesos = solucao \/ solucao.sum()\n\n  for i in dataset.columns[1:]:\n    dataset[i] = (dataset[i] \/ dataset[i][0])\n\n  for i, acao in enumerate(dataset.columns[1:]):\n    dataset[acao] = dataset[acao] * pesos[i] * dinheiro_total\n\n  dataset.drop(labels = ['Date'], axis = 1, inplace=True)\n  dataset['soma valor'] = dataset.sum(axis = 1)\n  dataset['taxa retorno'] = 0.0\n\n  for i in range(1, len(dataset)):\n    dataset['taxa retorno'][i] = ((dataset['soma valor'][i] \/ dataset['soma valor'][i - 1]) - 1) * 100\n\n  sharpe_ratio = (dataset['taxa retorno'].mean() - sem_risco) \/ dataset['taxa retorno'].std() * np.sqrt(248)\n\n  return sharpe_ratio","46045abe":"np.random.seed(10)\npesos = np.random.random(len(dataset_original.columns) - 1)\npesos = pesos \/ pesos.sum()\npesos\n# resultado dos nossos pesos;\n# result of our weights;","59b4fa95":"fitness_function(pesos)  # vamos conferir se est\u00e1 igual ao nosso resultado anterior;\n                         # let's check if it's the same as our previous result;","c62da742":"# show the name of the stock and percentage that was allocated to each asset;\n# mostrar o nome da a\u00e7\u00e3o e porcentagem que foi alocada para cada ativo;\n\ndef visualiza_alocacao(solucao):\n  colunas = dataset_original.columns[1:]\n  for i in range(len(solucao)):\n    print(colunas[i], solucao[i] * 100)\n    \nvisualiza_alocacao(pesos)","45017e74":"fitness = mlrose.CustomFitness(fitness_function)  \n\n# aumentar o valor do sharp ratio\nproblema_maximizacao = mlrose.ContinuousOpt(length=8, fitness_fn=fitness,\n                                            maximize = True, min_val = 0, max_val = 1)\n\nproblema_minimizacao = mlrose.ContinuousOpt(length=8, fitness_fn=fitness,\n                                            maximize = False, min_val = 0, max_val = 1)","2970548d":"melhor_solucao, melhor_custo = mlrose.hill_climb(problema_maximizacao, random_state = 1)\nmelhor_solucao, melhor_custo","631a47e2":"melhor_solucao = melhor_solucao \/ melhor_solucao.sum()\nmelhor_solucao, melhor_solucao.sum()","d8ea820a":"visualiza_alocacao(melhor_solucao) \n\n# would be our best investment allocation within this portfolio;\n# result of assets that we can invest and their percentages; These are the choices for increasing profits;\n\n\n# seria a nossa melhor aloca\u00e7\u00e3o de investimentos dentro dessa carteira;\n# resultado de ativos que podemos inestir e seus percentuais; S\u00e3o as escolhas para aumentarmos os lucros;","53885dee":"# Let's see how much we would earn with the wallet;\n\n# Vamos ver o quanto ganhariamos com a carteira;\n\n_, _, _, soma_valor = alocacao_ativos(pd.read_csv('acoes.csv'), 5000, melhores_pesos=melhor_solucao)\nsoma_valor","cbaa491b":"pior_solucao, pior_custo = mlrose.hill_climb(problema_minimizacao, random_state = 1)\npior_solucao, pior_custo","6ae84f0d":"pior_solucao = pior_solucao \/ pior_solucao.sum()\npior_solucao, pior_solucao.sum()","f6707550":"visualiza_alocacao(pior_solucao)  # esses dados seriam os piores de investimentos dentro da carteira;\n                                # this data would be the worst of investments within the portfolio;","a9b955d5":"_, _, _, soma_valor = alocacao_ativos(pd.read_csv('acoes.csv'), 5000, melhores_pesos=pior_solucao)\nsoma_valor","3f8f8018":"melhor_solucao, melhor_custo = mlrose.simulated_annealing(problema_maximizacao, random_state = 1)\nmelhor_solucao = melhor_solucao \/ melhor_solucao.sum()\nmelhor_solucao, melhor_custo","edcc7b68":"visualiza_alocacao(melhor_solucao)","cb16978f":"_, _, _, soma_valor = alocacao_ativos(pd.read_csv('acoes.csv'), 5000, melhores_pesos=melhor_solucao)\nsoma_valor\n\n# valor desse algoritimo ficou bem pr\u00f3ximo do anterior;\n\n# value of this algorithm was very close to the previous one;","b3af2d2a":"problema_maximizacao_ag = mlrose.ContinuousOpt(length = 8, fitness_fn = fitness, \n                                               maximize = True, min_val = 0.1, max_val = 1)","11e7cb8f":"melhor_solucao, melhor_custo = mlrose.genetic_alg(problema_maximizacao_ag, random_state = 1)\nmelhor_solucao = melhor_solucao \/ melhor_solucao.sum()\nmelhor_solucao, melhor_custo","55ded224":"visualiza_alocacao(melhor_solucao)","a50fef97":"_, _, _, soma_valor = alocacao_ativos(pd.read_csv('acoes.csv'), 5000, melhores_pesos=melhor_solucao)\nsoma_valor","07f3f601":"dataset = pd.read_csv('acoes.csv')","a59cc75b":"dataset.drop(labels = ['Date'], axis = 1, inplace = True)","2e9519ec":"# normaliza\u00e7\u00e3o\n\ndataset_normalizado = dataset.copy()\nfor i in dataset.columns:\n  dataset_normalizado[i] = dataset[i] \/ dataset[i][0]\ndataset_normalizado","115a18eb":"dataset_taxa_retorno = (dataset_normalizado \/ dataset_normalizado.shift(1)) - 1\ndataset_taxa_retorno","767f2579":"dataset_taxa_retorno.fillna(0, inplace=True)\ndataset_taxa_retorno.head()","90e160a4":"dataset_taxa_retorno.mean() * 248","62a0f2e5":"figura = px.scatter(dataset_taxa_retorno, x = 'MasterCard', y = 'BOVA', title = 'Mastercard x BOVA = Taxa de Retorno \/ Mastercard x BOVA = Taxa de Retorno')\nfigura.show()","47795a71":"beta, alpha = np.polyfit(x = dataset_taxa_retorno['MasterCard'], y = dataset_taxa_retorno['BOVA'], deg = 1)\nprint('beta:', beta, 'alpha:', alpha, 'alpha (%):', alpha * 100)","c76c0959":"figura = px.scatter(dataset_taxa_retorno, x = 'MasterCard', y = 'BOVA', title = 'MasterCard x BOVA')\nfigura.add_scatter(x = dataset_taxa_retorno['MasterCard'], y = beta * dataset_taxa_retorno['MasterCard'] + alpha)\nfigura.show()","cfd5ee2d":"matriz_covariancia = dataset_taxa_retorno.drop(columns = ['Apple', 'MGLU','GOL', 'CVC', 'WEGE', 'TOTS']).cov() * 246\nmatriz_covariancia","fc0df25d":"cov_master_bova = matriz_covariancia.iloc[1, 0]\ncov_master_bova","2805aa27":"variancia_bova = dataset_taxa_retorno['BOVA'].var() * 248\nvariancia_bova","cbabd87e":"beta_master = cov_master_bova \/ variancia_bova\nbeta_master","c48a788e":"beta","209f626d":"rm = dataset_taxa_retorno['BOVA'].mean() * 248\nrm","55cb2d5c":"taxa_selic_historico = np.array([12.75, 14.25, 12.25, 6.5, 5.0, 2.0])\nrf = taxa_selic_historico.mean() \/ 100\nrf","b8b50caa":"capm_mglu = rf + (beta * (rm - rf))\ncapm_mglu","015bfe23":"betas = []\nalphas = []\nfor ativo in dataset_taxa_retorno.columns[1:9]:\n  #print(ativo)  Aqui podemos veririficar quais s\u00e3o as colunas que est\u00e3o selecionadas;\n  beta, alpha = np.polyfit(dataset_taxa_retorno['MasterCard'], dataset_taxa_retorno[ativo], 1)\n  betas.append(beta)\n  alphas.append(alpha)","0c1490df":"betas","2a6d48dc":"alphas","4d5c5eda":"def visualiza_betas_alphas(betas, alphas):\n  for i, ativo in enumerate(dataset_taxa_retorno.columns[1:9]):\n    \n    print(ativo, 'beta:', betas[i], 'alpha:', alphas[i] * 100)","85be7277":"visualiza_betas_alphas(betas, alphas)  \n\n# aqui temos a volatibilidade de cada uma das a\u00e7\u00f5es em rela\u00e7\u00e3o as a\u00e7\u00f5es da MasterCard\n# Os betas s\u00e3o quanto mais voleteis em rela\u00e7\u00e3o as a\u00e7\u00f5es da MasterCard;\n# Os alpha indicam quanto excederam em rela\u00e7\u00e3o a MasterCard;\n\n# Here we have the volatility of each of the shares in relation to MasterCard's shares\n# Betas are the more volatile against MasterCard's stock;\n# Alphas indicate how much they exceeded compared to MasterCard;","f627339b":"np.array(alphas).mean() * 100  # Temos a m\u00e9dia do valor dos alphas em rela\u00e7\u00e3o a MasterCard\n                               # We have the average value of alphas in relation to MasterCard","923ea604":"rf   # Taxa selica j\u00e1 calculamos    # Selic rate already calculated","8b464771":"rm  # retorno m\u00e9dio anual que j\u00e1 fizemos o calculo;   average annual return that we have already calculated;","c5ec8d76":"capm_empresas = []\nfor i, ativo in enumerate(dataset_taxa_retorno.columns[1:9]):\n  #print(i, ativo)\n  capm_empresas.append(rf + (betas[i] * (rm - rf)))","b163a939":"capm_empresas","49ee99da":"def visualiza_capm(capm):\n  for i, ativo in enumerate(dataset_taxa_retorno.columns[1:9]):\n    print(ativo, 'CAPM:', capm[i] * 100)","5bd5f1c2":"visualiza_capm(capm_empresas)  # S\u00e3o as porcentagens de retorno pelo risco que est\u00e1 correndo; # Are the percentages of return for the risk you are taking;","b759a8e8":"pesos = np.array([0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])","39c6b90f":"capm_portfolio = np.sum(capm_empresas * pesos) * 100\ncapm_portfolio   # se for investir nesta carteira esse ser\u00e1 a porcentagem de compensa\u00e7\u00e3o em rela\u00e7\u00e3o ao risco de investir nessas a\u00e7\u00f5es;\n                 # if investing in this portfolio this will be the compensation percentage against the risk of investing in these shares;","45a9d9e8":"dataset = pd.read_csv('acoes.csv')\ndataset","efaefe0d":"figura = px.line(title = 'Hist\u00f3rico do pre\u00e7o das a\u00e7\u00f5es \/ Stock price history')\nfor i in dataset.columns[1:]:\n  figura.add_scatter(x = dataset['Date'], y = dataset[i], name = i)\nfigura.show()","4ff4c521":"dataset = pd.DataFrame(dataset['MasterCard'])\ndataset","75c0d48f":"dataset_normalizado = dataset.copy()\nfor i in dataset:\n  dataset_normalizado[i] = dataset[i] \/ dataset[i][0]\ndataset_normalizado","6c6139c9":"dataset_taxa_retorno = np.log(1 + dataset_normalizado.pct_change())\ndataset_taxa_retorno","aea921fa":"dataset_taxa_retorno.fillna(0, inplace=True)\ndataset_taxa_retorno.head()","ba0b5301":"media = dataset_taxa_retorno.mean()\nmedia  # m\u00e9dia di\u00e1ria;  # daily average;","73fbdb08":"variancia = dataset_taxa_retorno.var()\nvariancia","889521e2":"drift = media - (0.5 * variancia)  # 0.5 para ser um fator aleat\u00f3rio;\ndrift","021da5dc":"dias_frente = 248\nsimulacoes = 10","d9689f95":"desvio_padrao = dataset_taxa_retorno.std()\ndesvio_padrao","c72c9005":"Z = stats.norm.ppf(np.random.rand(dias_frente, simulacoes))","627f8d5c":"Z.shape","a652c725":"sns.histplot(Z);","4b9d6dac":"Z","549242b3":"retornos_diarios = np.exp(drift.values + desvio_padrao.values * Z)","5f47882d":"retornos_diarios.shape","41efc1b5":"retornos_diarios   # taxas de retorno previstas para os 50 dias a seguir;\n                   # expected return fees for the following 50 days;","3a969d2e":"previsoes = np.zeros_like(retornos_diarios)","e00d82ad":"previsoes.shape","01409b66":"previsoes  # vamos colocar o \u00faltimo dia da nossa base de dados na primeira linha da nossa lista;\n           # let's put the last day of our database in the first line of our list;","0fb5cc94":"previsoes[0]","7b2ce2eb":"dataset.tail(1)","5881a5de":"dataset.iloc[-1]","3073a538":"previsoes[0] = dataset.iloc[-1]\nprevisoes","8dad08f5":"for dia in range(1, dias_frente):\n  #print(dia)\n  previsoes[dia] = previsoes[dia - 1] * retornos_diarios[dia]","62d26b76":"previsoes.shape","a2264584":"previsoes","3d8f3a6e":"len(previsoes)","41f67216":"previsoes.T.shape, previsoes.shape","afec163e":"previsoes.T","a01af778":"figura = px.line(title = 'Previs\u00f5es do pre\u00e7o das a\u00e7\u00f5es - simula\u00e7\u00f5es \/ Stock Price Forecasts - Simulations')\nfor i in range(len(previsoes.T)):\n  figura.add_scatter(y = previsoes.T[i], name = i)\nfigura.show()   # n\u00f3s temos os gr\u00e1ficos com amelhor e a pior das previs\u00f5es;","00f126b2":"from pandas_datareader import data\ndataset_master = data.DataReader(name = 'MA', data_source='yahoo', start='2020-11-04')['Close']\ndataset_master","051c0ecc":"dataset_master.to_csv('master_teste.csv')","4f0916a9":"dataset_master = pd.read_csv('master_teste.csv')\ndataset_master","fc59ab07":"len(dataset_master)","5ad7af0f":"simulacao1 = previsoes.T[0][0:len(dataset_master)]  \nsimulacao1","e47bb8f5":"len(simulacao1)","6fcd9886":"np.sum(abs(simulacao1 - dataset_master['Close'])) \/ len(simulacao1)  # esse \u00e9 o valor m\u00e9dio de erro, como \u00e9 uma \u00e7\u00e3o Americana corada em d\u00f3lar, seria o erro m\u00e9dio de $51,45 dolares;\n                                                                       # this is the average error value, as it is a US dollar colored stock, it would be the average error of $51.45;\n                                                                # ese erro foi c\u00e1culado com base em 248 dias a frente (previstos)\n                                                                # This error was calculated based on 248 days ahead (anticipated)","317a9a39":"from sklearn.metrics import mean_absolute_error\nmean_absolute_error(dataset_master['Close'], simulacao1)    # essa seria uma possibilidade de fazer os calculos;\n                                                             # That would be a possibility to do the calculations;","52b7a675":"erros = []\nfor i in range(len(previsoes.T)):\n  simulacao = previsoes.T[i][0:len(dataset_master)]\n  erros.append(mean_absolute_error(dataset_master['Close'], simulacao))\n    \nerros\n\n # pior simul\u00e7\u00e3o \u00e9 terceira de baixo para cima que temos um erro de 99.47 dolares;\n    # worst simulation is third from the bottom up we have an error of $99.47;","c723b7e5":"figura = px.line(title = 'Previs\u00f5es do pre\u00e7o das a\u00e7\u00f5es - simula\u00e7\u00e3o')\nfigura.add_scatter(y = dataset_master['Close'], name = 'Valor real')\nfigura.add_scatter(y = previsoes.T[9], name = 'Pior simula\u00e7\u00e3o')\nfigura.add_scatter(y = previsoes.T[1], name = 'Melhor simula\u00e7\u00e3o')","ff07aa8f":"!pip install pmdarima","6b8e9f91":"import datetime\nfrom statsmodels.tsa.seasonal import seasonal_decompose\nfrom pmdarima.arima import auto_arima","af0ab9ee":"dateparse = lambda dates: datetime.datetime.strptime(dates, '%Y-%m-%d')\ndataset = pd.read_csv('acoes.csv', parse_dates=['Date'], index_col='Date',\n                      date_parser = dateparse, usecols = ['Date', 'MasterCard'])","ee66335b":"dataset","d600a473":"time_series = dataset['MasterCard']\ntime_series","9d2fbd2f":"time_series['2015-01-01':'2015-01-10']","4e3f04ae":"time_series['2015']","f0373291":"time_series.index.max()  # a data de que estamos realizando esse estudo;","080f3d0b":"time_series.index.min()","2bc63f4b":"plt.plot(time_series);","cd4966ec":"figura = px.line(title='Hist\u00f3rico do pre\u00e7o das a\u00e7\u00f5es')\nfigura.add_scatter(x = time_series.index, y = time_series)","166410cc":"time_series_datas = time_series['2015-01-01':'2015-12-31']   # para datas especificas\ntime_series_datas","e24dada0":"plt.plot(time_series_datas);","3219dc56":"decomposicao = seasonal_decompose(time_series, period=len(time_series) \/\/ 2)","aeda5b7e":"tendencia = decomposicao.trend\nsazonal = decomposicao.seasonal\naleatorio = decomposicao.resid","a2e0e570":"plt.plot(tendencia);  # tend\u00eancia de crescimento;","e57bbd67":"plt.plot(sazonal);","2bed5ab9":"modelo = auto_arima(time_series, suppress_warnings=True, error_action='ignore')","9f71f89e":"# Par\u00e2metros P, Q e D\nmodelo.order","fafb4fd4":"previsoes = modelo.predict(n_periods=90)","d3c503ae":"previsoes  # essas j\u00e1 s\u00e3o as nossas previs\u00f5es para o futuro;\n           # these are already our predictions for the future;","481f7e3e":"len(time_series)","35dc0d8b":"treinamento = time_series[:1285]   # Aqui colocamos o valor total de linhas menos 365, para alcan\u00e7armos esse n\u00famero e temos uma previs\u00e3o de 365 dias;\ntreinamento.shape                  # Here we put the total value of lines minus 365, to reach that number and we have a forecast of 365 days;","35c6a65d":"treinamento.index.min(), treinamento.index.max()","ab8bc3c7":"teste = time_series[1285:]\nteste.shape","cf618959":"teste.index.min(), teste.index.max()","876a8c3c":"modelo2 = auto_arima(treinamento, suppress_warnings=True, error_action='ignore')","65637bb5":"teste.index","4ebe0b4a":"previsoes = pd.DataFrame(modelo2.predict(n_periods=366), index=teste.index)\nprevisoes.columns = ['previsoes']\nprevisoes","3b8d135e":"teste","dfef9fa0":"plt.figure(figsize=(16,10))\nplt.plot(treinamento, label = 'Treinamento')\nplt.plot(teste, label = 'Teste')\nplt.plot(previsoes, label = 'Previs\u00f5es')\nplt.legend();","a0b3f1b8":"teste[0:2]","3fec706d":"teste - previsoes['previsoes']  # esses s\u00e3o os erros em rela\u00e7\u00e3o as previs\u00f5es das respectivas datas;\n                            # these are the errors regarding the predictions of the respective dates;","bec3739a":"previsoes[0:2]","b7e0741e":"sum(abs(teste - previsoes['previsoes']) \/ len(teste))","0696c66e":"from sklearn.metrics import mean_absolute_error  # o erro neste algorimo \u00e9 consider\u00e1vel;\nmean_absolute_error(teste, previsoes)              # the error in this algorithm is considerable;","99ba204c":"from fbprophet import Prophet\nimport pandas as pd","cf58ea02":"dataset = pd.read_csv('acoes.csv', usecols=['Date', 'MasterCard'])\ndataset","f716da77":"type(dataset)","d2032069":"dataset.info()","f41f212d":"dataset = dataset[['Date', 'MasterCard']].rename(columns = {'Date': 'ds', 'MasterCard': 'y'})\ndataset","0bf36293":"modelo = Prophet()\nmodelo.fit(dataset)","16c794f4":"futuro = modelo.make_future_dataframe(periods=90)\nprevisoes = modelo.predict(futuro)","560834de":"previsoes.head()","f246f23d":"len(dataset), len(previsoes)","9e192de8":"len(previsoes) - len(dataset)","2bc7aba6":"previsoes.tail(90)","656605b3":"modelo.plot(previsoes, xlabel = 'Data', ylabel = 'Pre\u00e7o');","cd383b4d":"modelo.plot_components(previsoes);","1ba6756b":"from fbprophet.plot import plot_plotly, plot_components_plotly","0a31a5f6":"plot_plotly(modelo, previsoes)","87e46f1b":"plot_components_plotly(modelo, previsoes)","c78a4606":"teste.shape","e3839f4e":"teste.tail()","56e7edfd":"pred = modelo.make_future_dataframe(periods=0)\nprevisoes = modelo.predict(pred)","7c32189b":"previsoes.shape","df585656":"previsoes.tail()","5c3bc68d":"previsoes = previsoes['yhat'].tail(366)","9d117e4e":"previsoes","e1fa78b4":"mean_absolute_error(teste, previsoes)  # o erro \u00e9 inferior ao Arima, acaba seno mais interessante este algoritimo.\n                                      # The error is lower than Arima, this algorithm turns out to be more interesting.","dd736cf2":"Let's analyze an entire portfolio risk.\n\nVamos fazer analise de um risco de portif\u00f3lio inteiro.","9bba4814":" # **CAPM (Capital Asset Pricing Model)**\n \n#  Precifica\u00e7\u00e3o de Ativos\n\n# Asset Pricing","7dff60e1":"# **Return of stock portfolio**\n\n# **Retorno de carteira de a\u00e7\u00f5es**","d507e22f":"R$ 211.105,00, esse seria o nosso ganho dentro carteira fazendo os investimentos conforme o algoritimo;\n\nR$ 211,105.00, this would be our gain within the portfolio making the investments according to the algorithm;","0b0a2446":"# Coefficient of variation\n\n# Coeficiente de varia\u00e7\u00e3o","818d0cf1":"Let's do the normalization to better analyze the growth rate of each stock;\n\nVamos fazer a normaliza\u00e7\u00e3o para analisarmos melhor a taxa de crescimento de cada uma das a\u00e7\u00f5es;","108dfb0d":"Top 100 companies by market capitalization (Forbes Global 2000 (2021), adapted)\n100 maiores empresas em capitaliza\u00e7\u00e3o de mercado (Forbes Global 2000 (2021), adaptado)\n\nPlacement Company Country of origin Market value (billions of dollars)\nColoca\u00e7\u00e3o\tEmpresa\tPa\u00eds de origem\tValor de mercado (bilh\u00f5es de d\u00f3lares)\n\n* 1\u00ba\tApple\tEstados Unidos\t2252,3\n* 2\u00ba\tMicrosoft\tEstados Unidos\t1966,6\n* 3\u00ba\tSaudi Aramco\tAr\u00e1bia Saudita\t1897,2\n* 4\u00ba\tAmazon\tEstados Unidos\t1711,8\n* 5\u00ba\tAlphabet\tEstados Unidos\t1538,9\n* 6\u00ba\tFacebook\tEstados Unidos\t870,5\n* 7\u00ba\tTencent Holdings\tChina\t773,8\n* 8\u00ba\tTesla\tEstados Unidos\t710,1\n* 9\u00ba\tGrupo Alibaba\tChina\t657,5\n* 10\u00ba\tBerkshire Hathaway\tEstados Unidos\t624,4\n* 11\u00ba\tTaiwan Semiconductor\tTaiwan\t558,1\n* 12\u00ba\tSamsung Electronics\tCoreia do Sul\t510,5\n* 13\u00ba\tVisa\tEstados Unidos\t483,9\n* 14\u00ba\tJPMorgan Chase\tEstados Unidos\t464,8\n* 15\u00ba\tJohnson & Johnson\tEstados Unidos\t427,1\n* 16\u00ba\tWalmart\tEstados Unidos\t396,1\n* 16\u00ba\tNVIDIA\tEstados Unidos\t396,1\n* 18\u00ba\tKweichow Moutai\tChina\t395,8\n* 19\u00ba\tMastercard\tEstados Unidos\t383,6","80754dd7":"**Last 12 Months Return Rate**\n\n**Taxa de Retorno ultimos 12 meses**","412d17f0":"# **Chart of portfolio x MasterCard**\n\n# **Gr\u00e1fico da carteira x MasterCard**","a75c1467":"# **Avalia\u00e7\u00e3o**\n\n# **Evaluation**","6d264d7c":"# C\u00e1lculo do BETA para todas as a\u00e7\u00f5es\n\n# BETA calculation for all actions","ff0ea4bc":"# **Mastercard**\n\nMastercard Inc. (stylized as MasterCard from 1979 to 2016 and MasterCard since 2016) is an American multinational financial services corporation headquartered in the Mastercard International Global Headquarters in Purchase, New York. The Global Operations Headquarters is located in O'Fallon, Missouri, a municipality of St. Charles County, Missouri. Throughout the world, its principal business is to process payments between the banks of merchants and the card-issuing banks or credit unions of the purchasers who use the \"Mastercard\" brand debit, credit, and prepaid cards to make purchases. Mastercard Worldwide has been a publicly traded company since 2006. Prior to its initial public offering, Mastercard Worldwide was a cooperative owned by the more than 25,000 financial institutions that issue its branded cards.\n\nMastercard, originally known as Interbank from 1966 to 1969 and Master Charge from 1969 to 1979, was created by an alliance of several regional bank card associations in response to the BankAmericard issued by Bank of America, which later became the Visa credit card issued by Visa Inc.\n\nMastercard is one of the best performing stocks of the decade of 2011-2020\n\n\nThe initial objective is to analyze MasterCard's shares, it will be to see how it behaves in front of the company with the highest market value currently Apple, it will also be to simulate a portfolio of S\u00e3o Paulo Stock Exchange Brazil against MasterCard shares.\n\n\n# **NOTE:**\n\nThe shares in the Brazilian portfolio are quoted in reais R$;\n\nMasterCard and Apple shares are quoted in USD USD;\n\nThe purpose of this study is to analyze the gains and fluctuations of shares and not their value against the Brazilian real or US dollar.\n\nThanks to Mr. Kalilur Rahman for making the dataset available for us to study, Thank you!\n\n\n\n# **MasterCard**\n\n\nMastercard Inc. (estilizado como MasterCard de 1979 a 2016 e MasterCard desde 2016) \u00e9 uma corpora\u00e7\u00e3o multinacional americana de servi\u00e7os financeiros com sede na Mastercard International Global Headquarters em Purchase, Nova York. A sede de opera\u00e7\u00f5es globais est\u00e1 localizada em O'Fallon, Missouri, um munic\u00edpio de St. Charles County, Missouri. Em todo o mundo, seu principal neg\u00f3cio \u00e9 processar pagamentos entre os bancos dos comerciantes e os bancos emissores ou cooperativas de cr\u00e9dito dos compradores que usam os cart\u00f5es de d\u00e9bito, cr\u00e9dito e pr\u00e9-pagos da marca \"Mastercard\" para fazer compras. A Mastercard Worldwide \u00e9 uma empresa de capital aberto desde 2006. Antes de sua oferta p\u00fablica inicial, a Mastercard Worldwide era uma cooperativa de propriedade de mais de 25.000 institui\u00e7\u00f5es financeiras que emitem seus cart\u00f5es de bandeira.\n\nMastercard, originalmente conhecido como Interbank de 1966 a 1969 e Master Charge de 1969 a 1979, foi criado por uma alian\u00e7a de v\u00e1rias associa\u00e7\u00f5es de cart\u00f5es banc\u00e1rios regionais em resposta ao BankAmericard emitido pelo Bank of America, que mais tarde se tornou o cart\u00e3o de cr\u00e9dito Visa emitido pela Visa Inc.\n\nMastercard \u00e9 uma das a\u00e7\u00f5es com melhor desempenho da d\u00e9cada de 2011-2020\n\n\nhttps:\/\/www.kaggle.com\/kalilurrahman\/mastercard-stock-data-latest-and-updated","64e8befa":"# BETA com covari\u00e2ncia e vari\u00e2ncia\n\n# BETA with covariance and variance","03321f72":"**Solu\u00e7\u00e3o Pior da carteira**","b67001dc":"Volatility of MasterCard shares is 28%\n\n\nVolatilidade das a\u00e7\u00f5es da MasterCard \u00e9 de 28%","84b551e8":"# Gr\u00e1ficos","d75f3d4c":"# C\u00e1lculo CAPM para o portf\u00f3lio\n# CAPM calculation for the portfolio","e4d5ea70":"# Standard deviation\n\n# Desvio Padr\u00e3o","347e8f46":"If we had invested 50% in the Brazilian company Magalu, we would certainly have a great return in this annual period;\n\nSe tivessemos investidos 50% na empresa brasileira Magalu, certamente teriamos um grande retorno neste per\u00edodo anual;","9c738297":"We note that MasterCard shares outperform all portfolio shares;\n\nObservamos que as a\u00e7\u00f5es da MasterCard supera todas as a\u00e7\u00f5es da carteira;","062ef5f7":"# Let's calculate the return on investment versus risk.\n\n\n# Vamos fazer o calculo do retorno do investimento comparado com o risco.","ceb5d870":"Ganho seria de apenas R$ 9.256,60, o rendimento \u00e9 quase o mesmo valor da renda fixa;\n\nEarnings would be only R$9,256.60, the income is almost the same value as fixed income;","1a538ac7":"# Arima","0d0c9115":"**Per\u00edodo 01\/2015 x 10\/2021**","199562ae":"# **Calculation of annual returns**\n\n# **C\u00e1lculo dos retornos anuais**","8499280b":"Now to simulate, we will make investments with different percentages in companies:\n\nAgora para simularmos iremos fazer investimentos com porcentagens diferentes nas empresas:\n","1fd5b5f5":"# Variance\n\n# Vari\u00e2ncia","74e405ac":"**Last 30 Day Return Rate**\n\n**Taxa de Retorno ultimos 30 dias**","a068798d":"# C\u00e1lculo CAPM para uma a\u00e7\u00e3o\n\n# CAPM calculation for one share","b6a92e76":"# Algoritmos de otimiza\u00e7\u00e3o\n* Biblioteca mlrose: https:\/\/mlrose.readthedocs.io\/en\/stable\/","4424b767":"**The great phenomenon of the S\u00e3o Paulo Stock Exchange is Magalu, with its appreciation rate higher than the largest on the North American exchange.**\n\n**O grande fen\u00f4meno da Bolsa de Valores de S\u00e3o Paulo \u00e9 a Magalu, tendo a sua taxa de valoriza\u00e7\u00e3o superior que as maiores da bolsa Norte Americana.** ","0f98d249":"# **C\u00e1lculo do par\u00e2metro BETA para um ativo**\n\n\n# BETA com regress\u00e3o linear\n\n\n# **BETA parameter calculation for an asset**\n\n\n# BETA with linear regression\n","2140e5fd":"This dataset is not very relevant for our case study, as there is only data relating to the company and not stocks on the stock exchange;\n\nEste dataset n\u00e3o \u00e9 muito relevante para o nosso estudo de caso, pois h\u00e1 apenas dados relativos a empresa e n\u00e3o as a\u00e7\u00f5es da bolsa de valores;","38ecca68":"# Compara\u00e7\u00e3o das previs\u00f5es com os pre\u00e7os reais\n\n# Comparison of forecasts with actual prices","7a1378ee":"# **Stock Forecasts**\n# **Previs\u00f5es das A\u00e7\u00f5es** \n# MasterCard","c90a1205":"# Gr\u00e1fico das previs\u00f5es\n\n# Forecast graph","e592fc4d":"# 2017","be1fba1a":"# Standard deviation\n\n# Desvio Padr\u00e3o","4adaa69d":"# 2015","a388545d":"* Iremos simular os pre\u00e7os futuros das a\u00e7\u00f5es;\n\n* Iremos utilizar os dados do passado para fazer as previs\u00f5es futuras dos pre\u00e7os das a\u00e7\u00f5es;\n\n* Utilizaremos a m\u00e9dia, vari\u00e2ncia e desvio padr\u00e3o)\n\n* We will simulate future stock prices;\n\n* We will use past data to make future stock price predictions;\n\n* We will use the mean, variance and standard deviation)\n\n","6345c1ff":"# Genetic Algorithm\n\n# Algoritmo gen\u00e9tico","85ed736e":"**Magalu**","7109cf66":"**Annual average**\n\n**M\u00e9dia anual**","8fe16ecf":"# Avalia\u00e7\u00e3o\n\n# Evaluation","9e2c11a6":"# Hill climb\n\n\nIt starts with a random solution and will look for the best neighbors;\n\nCome\u00e7a com uma solu\u00e7\u00e3o rand\u00f4mica e ir\u00e1 procurar os melhores vizinhos;","a58d57fb":"This analysis is still only referring to the shares of MasterCard;\n\nEst\u00e1 an\u00e1lise ainda \u00e9 apenas referente as a\u00e7\u00f5es da MasterCard;","ca31588b":"# Calculations with all stocks - average annual risk\n\n# C\u00e1lculos com todas as a\u00e7\u00f5es - risco m\u00e9dio anual","396633ae":"Interestingly, the company with the highest market value today, Apple, at the price of its shares for the 19th-place company, MasterCard, the fact that the Company has a higher market value does not mean that its shares are the ones with the highest global value. .\n\nO interessante que a Empresa de maior valor de mercado hoje Apple, perno no valor de suas a\u00e7\u00f5es para a empresa do 19\u00b0 lugar, MasterCard, o fato da Empresa ter maior valor de mercado n\u00e3o quer dizer que seus papeis s\u00e3o os de maior valor global.","17fbe81b":"**Daily Return Rate**\n\n**Taxa de Retorno Di\u00e1ria**","b02a6783":"# Previs\u00f5es de pre\u00e7os futuros\n# Future price forecasts","70c7936e":"# Only two actions\n\n# Somente duas a\u00e7\u00f5es","debfdb71":"This is the original dataset, but we will update it with the quote from this date 10\/28\/2021;\n\nEsse \u00e9 o dataset original, mas n\u00f3s iremos atualiza-lo com a cota\u00e7\u00e3o desta data 28\/10\/2021;","c18e9ccf":"# **Facebook Prophet**","f38ef37e":"# Correlation between actions\n\n# Correla\u00e7\u00e3o entre a\u00e7\u00f5es","4fc4ee9b":"# Random asset allocation\n\nLet's see how much we would earn if we had invested an amount of money.\n\n\n# Aloca\u00e7\u00e3o aleat\u00f3ria de ativos\n\nVamos ver o quanto ganhariamos se tivesse investido uma quantia em dinheiro.","d2fcc4b3":"# **Visualiza\u00e7\u00e3o**","4d3ff8a5":"**It is interesting to note that at the beginning of the pandemic all actions fell.**\n\n**Interessante observarmos que no inicio da pandemia todas as a\u00e7\u00f5es cairam.**","bc7d8414":"# Calculation of daily returns\n\n# C\u00e1lculo dos retornos di\u00e1rios","31763cd1":"# **Simula\u00e7\u00e3o Monte Carlos para previs\u00e3o de pre\u00e7os de a\u00e7\u00f5es**\n\n# **Monte Carlos simulation for stock price forecasting**","a487e9e9":"The value was R$99,066, it is still below random;\n\nO valor ficou em R$ 99.066, ainda \u00e9 abaixo do random;","cd2aa9b6":"O valor seria de R$ 73.949 com essa otimiza\u00e7\u00e3o\n\nThe amount would be BRL 73,949 with this optimization","47105d93":"* MA = American Financial Services Corporation (Dow Jones);\n* CVC = Brazilian tourism company (Bovespa);\n* GOL = Brazilian airline company (Bovespa);\n* WEGE = Brazilian motor manufacturing company (Bovespa);\n* MGLU = Brazilian retail trade company (Bovespa);\n* TOTS = Brazilian technology company (Bovespa);\n* BOVA = Index composed of several Brazilian companies (Bovespa);\n\n\n\n\n* MA = Corpora\u00e7\u00e3o Americana de servi\u00e7os financeiros (Dow Jones);\n* CVC = Empresa brasileira de turismo (Bovespa);\n* GOL = Empresa brasileira de linhas \u00e1reas (Bovespa);\n* WEGE = Empres brasileira de fabrica\u00e7\u00e3o de motorores (Bovespa);\n* MGLU = Empresa brasileira de com\u00e9rcio varegista (Bovespa); \n* TOTS = Empresa brasileira de tecnologia (Bovespa);\n* BOVA = Indice composto por vparias empresas brasileiras (Bovespa);","79d219d4":"# C\u00e1lculo do drift\n\nDire\u00e7\u00e3o que as taxas de retorno tiveram no passado.\nDirection that rates of return have taken in the past.","011893ea":"We will update the value of all shares including that of MasterCard as of that date 10\/28\/2021;\n\nIremos atualizar o valor de todas as a\u00e7\u00f5es inclusive a da MasterCard para essa data 28\/10\/2021;","4d59f539":"# All actions\n\n# Todas as a\u00e7\u00f5es","8acb811d":"# **Conclusion**\n\n**There may be small changes in the conclusion of some results for more or less, but it will be possible to have a perspective of the actions, as the study was carried out in a period of 02 days and the actions from one day to the other varied. **\n\nAs mentioned initially, we often imagine that the company with the highest market value is the one with the highest value on the stock exchange, but this is not the case here.\n\nThe MasterCard Company is a good investment in the medium and long term, being a solid company and with a solid product, it has one of the most valued shares.\n\nThe great phenomenon of the Brazilian Stock Exchange is for sure and is among the best among the Americas would be Magal\u00fa's shares, not the highest value, but its very interesting rate of return in the short and medium term, let's see how it will remain in the stock market.\n\nThe stock market has its ups and downs, but it's always good to have a good consulting company to guide you to make smarter applications and not invest as if you were playing the lottery, as the risk of losing money will be much greater.\n\nI hope the work has helped you understand a little more about the stock market and its prospects.\n\nThanks!\n\n\n\n\n# **Conclus\u00e3o**\n\n**Poder\u00e1 haver pequenas altera\u00e7\u00f5es na conclus\u00e3o de alguns resultados para mais ou para menos, mas ser\u00e1 poss\u00edvel ter uma perspectiva das a\u00e7\u00f5es, pois o estudo foi feito num per\u00edodo de 02 dias e as a\u00e7\u00f5es de um dia para o outro variaram. **\n\nConforme mencionado inicialmente muitas vezes imaginamos que a empresa de maior valor de mercado \u00e9 a que tem as a\u00e7\u00f5es com maior valor na bolsa de valores, mas n\u00e3o \u00e9 o caso aqui em estudo.\n\nA Empresa MasterCard \u00e9 um bom investimento a m\u00e9dio e longo prazo, sendo uma Empresa s\u00f3lida e com um produto s\u00f3lido, tem uma das a\u00e7\u00f5es mais valorizadas.\n\nO grande fen\u00f4meno da Bolsa brasileira \u00e9 com certeza e est\u00e1 entre melhores entre as Am\u00e9ricas seria as a\u00e7\u00f5es da Magal\u00fa, n\u00e3o \u00e9 a de maior valor, mas a sua taxa de retorno bem interessante a curto e m\u00e9dio prazo, vamos ver como ela ir\u00e1 permanecer no mercado de a\u00e7\u00f5es.\n\nO mercado de a\u00e7\u00f5es tem seus altos e baixos, mas \u00e9 sempre bom ter uma boa empresa de consultoria para te orientar a fazer aplica\u00e7\u00f5es mais inteligentes e n\u00e3o investir como se jogasse na loteria, pois o risco de perder dinheiro ser\u00e1 muito maior.\n\nEspero que o trabalho o tenha ajudado a entender um pouco mais sobre o mercado de a\u00e7\u00f5es e suas perspectivas.\n\nObrigado!\n","24203de5":"In the correlation chart the shares between MasterCard and Apple are influenced by the same market share;\n\nAmerican company MasterCard also has a correlation with variations of the Brazilian company BOVA;\n\nThis correlation becomes interesting how much one market can influence another, as the actions here are from segments of different markets.\n\n\n\nNo gr\u00e1fico de correla\u00e7\u00e3o as a\u00e7\u00f5es entre a MasterCard e Apple s\u00e3o influ\u00eanciadas na mesma propor\u00e7\u00e3o de mercado;\n\nMasterCard empresa Americana tamb\u00e9m tem uma correl\u00e7\u00e3o com as varia\u00e7\u00f5es da BOVA empresa brasileira;\n\nEssa correla\u00e7ao se torna interessante o quanto um mercado pode influ\u00eancia noutro, sendo que as a\u00e7\u00f5es aqui s\u00e3o de seguimentos de diferentes mercados.","3d29901f":"# Portfolio risk\n\n# Risco de um portf\u00f3lio","98fc1211":"# 2020","e657e84d":"# Simulated annealing\n\n","fb9b718b":"# Systematic and unsystematic risk\n\n* Systematic risk: daily change in stock price due to events such as economic recession, customer behavior (external events). It cannot be eliminated and can affect all companies;\n\n* Unsystematic risk: Specific events in the company (depends on the type of company);\n\n\n# Risco sistem\u00e1tico e n\u00e3o sistem\u00e1tico\n\n* Risco sistem\u00e1tico: mudan\u00e7a di\u00e1ria no pre\u00e7o das a\u00e7\u00f5es, devido a eventos como recess\u00e3o da economia, comportamento do cliente (eventos externos). N\u00e3o pode ser eliminado e pode afetar todas as empresas;\n\n* Risco n\u00e3o sistem\u00e1tico: Eventos espec\u00edficos na empresa (depende do tipo de empresa);","01fa3f98":"**Nesta an\u00e1lise de dimensionalidade de propor\u00e7\u00e3o de ganhos, podemos visualizar no gr\u00e1fico que a empresa de varejo Magalu de destaca**","6b2e65b5":"Only working days\n\nApenas os dias \u00fateis","ae101003":"# Portfolio allocation and optimization\n\n# Aloca\u00e7\u00e3o e otimiza\u00e7\u00e3o de portf\u00f3lios","29d5a8fc":"# **Return rate**\n\n# **Taxa de Retorno**","60931459":"O objetivo inicial \u00e9 fazermos an\u00e1lises das a\u00e7\u00f5es da MasterCard, iremos ver como ela se comporta perante a impresa de maior valor de mercado atualmente Apple, iremos tamb\u00e9m simular uma carteira de a\u00e7\u00f5es da Bolsa de Valores de S\u00e3o Paulo Brasil frente  as a\u00e7\u00f5es da MasterCard.\n\n\n**OBSERVA\u00c7\u00c3O:**\n\nAs a\u00e7\u00f5es da carteira brasileira s\u00e3o cotados os valores em reais R$;\n\nAs a\u00e7\u00f5es da MasterCard e Apple s\u00e3o cotadas em d\u00f3lar americano USD;\n\nO intuito deste estudo \u00e9 analisarmos os ganhos e oscila\u00e7\u00f5es das a\u00e7\u00f5es e n\u00e3o o seu valor perante ao real brasileiro ou d\u00f3lar americano.\n\n\nAgrade\u00e7o ao Sr. Kalilur Rahman por disponibilizar o dataset para n\u00f3s estudarmos, Obrigado!","60383eb2":"Sharp ratio value of 0.29 considering fixed income;\n\nThe portfolio value had a shaper ratio of 0.95, which is acceptable;\n\n\nValor de sharpe ratio de 0.29 considerando a renda fixa;\n\nO valor na carteira teve um shaper ratio de 0.95, que \u00e9 aceit\u00e1vel;\n\n","151bd87b":"# O valor de beta representa a curva da linha de regress\u00e3o \u00e9 uma medida da volatividade;\n\n# The beta value represents the regression line curve is a measure of volatility;\n","83928ceb":"# Portfolio Optimization - Random\n\n# Otimiza\u00e7\u00e3o de portf\u00f3lio - rand\u00f4mico\nMarkowitz: https:\/\/pt.wikipedia.org\/wiki\/Teoria_moderna_do_portf%C3%B3lio\n\nVamos fazer o etste com v\u00e1rias possibilidades para acharmos a melhor aloca\u00e7\u00e3o dos pesos;\n\nLet's do the test with several possibilities to find the best weight allocation;\n","b03a541b":"# Logarithmic rate of return\n\n# Taxa de retorno logar\u00edtmica","3d2ab35c":"If we had invested the same percentage in the companies we are analyzing, this would be the return on our portfolio: 32%\n\nSe n\u00f3s tivessemos investidos a mesma porcentagem nas empresas que estamos analisando esse seria o retorno da nossa carteira: 32%","ff9da7ab":"Let's make a simulation of how much we would gain if we had invested some value in the stocks under analysis;\n\nVamos fazer uma simula\u00e7ao o quanto ganhariamos se tivessemos invsetido algum valor nas a\u00e7\u00f5es aqui em an\u00e1lise;","7a8e9584":"# Sharpe ratio\n\nLet's calculate the return on investment versus risk.\n\nVamos fazer o calculo do retorno do investimento comparado com o risco.","9f66850e":"# **Let's look at unsystematic risk.**\n# \n# **Vamos analisar o risco n\u00e3o sistem\u00e1tico.**","cf08bff5":"MasterCard's variance is much greater than Magalu's.\n\nA vari\u00e2ncia da MasterCard \u00e9 muito maior que a Magalu.","bbbb4f5b":"# Observation made by a finance professional on the way of calculating the Sharpe ratio\n\n\"The Selic rate is the average of certain operations considering their daily liquidity. If all of them are, in the same pattern, in this case, considering the monthly, annual or daily rate. The calculated annualized return on the portfolio is in the same form as the calculation of the sharpe ratio that makes sense. The only data that is somewhat disjointed is that the standard deviation is calculated by the daily basis and not by the annual rate value.\"\n\n\n\n\n# Observa\u00e7\u00e3o feita por um prossional da \u00e1rea de finan\u00e7as sobre a forma de c\u00e1lculo de Sharpe ratio\n\n\"A taxa de Selic \u00e9 a media de determinadas opera\u00e7\u00f5es considerando a liquidez di\u00e1ria das mesma. Se todas elas estiverem, no mesmo padr\u00e3o, no caso, considerando a taxa mensal, anual ou di\u00e1ria. O retorno da carteira calculado anualizado est\u00e1 na mesma forma do c\u00e1lculo do sharpe ratio que faz sentido. O \u00fanico dado que est\u00e1 um pouco desconexo \u00e9 o desvio padr\u00e3o ser calculado pela base di\u00e1ria e n\u00e3o pelo valor da taxa anual.\"\n","98cb3835":"# Data visualization\n\n# Visualiza\u00e7\u00e3o dos dados","01053930":"# **Database with more actions**\n\nThese will be the shares of the S\u00e3o Paulo Stock Exchange, Brazil, we will analyze their health and stability before two large American companies MasterCard and Apple;\n\n# **Base de dados com mais a\u00e7\u00f5es**\n\nEssas ser\u00e3o as a\u00e7\u00f5es da Bolsa de S\u00e3o Paulo, Brasil, iremos analisar a sa\u00fade e estabilidade delas perante duas grandes empresas Americanas MasterCard e Apple;","26d726ac":"Let's analyze the rate of return for the last six years;\n\nVamos fazer an\u00e1lise da taxa de retorno dos \u00faltimos seis anos;","e0381512":"# 2016","ffeca478":"We can observe that the shares of Apple, WEGE and TOTS have an outlier, that is, sometimes the values rose much more than usual, being out of the standard.\n\nPodemos observar que as a\u00e7\u00f5es da Apple, WEGE e TOTS apresentam outlier , ou seja, algumas vezes os valores subiram bem mais do que de costume, estando fora do padr\u00e3o.","f18de577":"# 2019","06a9ec74":"# 2018","500284de":"**Let's make a calculation of how much we would have earned if this money were in fixed income;**\n\n**Vamos fazer um c\u00e1culo de quanto teriamos ganho se esse dinherio estivesse na renda fixa;**","92817d72":"An\u00e1lise da volatilidade quanto maior a volatilidade, maior ser\u00e1 o risco."}}