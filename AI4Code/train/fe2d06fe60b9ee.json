{"cell_type":{"bda80339":"code","3d7c480b":"code","b370be15":"code","db58207f":"code","d911946c":"code","1b517738":"code","bcf85c65":"code","c7ad2500":"code","4afe08df":"code","8f372096":"code","97873f05":"code","0fb03125":"code","cbcbd1e1":"code","6a61c81a":"code","c04aef86":"code","dd9e8c93":"code","1a86141c":"code","33a52ac4":"code","cfba4ffd":"code","44cda9b8":"code","6b57bae2":"code","3dc09dca":"code","1ccc17bc":"code","734ad9cb":"code","30f8b3a3":"code","d35444bf":"code","3c3ba7ef":"code","e2e3697a":"code","b31a6eaf":"code","c371046d":"code","19cbf16e":"code","af67594d":"code","ea90ac71":"markdown","217e97a8":"markdown","02f28b6f":"markdown"},"source":{"bda80339":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import ListedColormap\nfrom sklearn import datasets, neighbors\nfrom mlxtend.plotting import plot_decision_regions\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3d7c480b":"cryo = pd.read_excel('..\/input\/cryotherapy-analysis\/Cryotherapy.xlsx')\ncryo.head()","b370be15":"cryo.info()","db58207f":"# Variabel independen\nx = cryo.drop([\"Result_of_Treatment\"], axis = 1)\nx.head()","d911946c":"# Variabel dependen\ny = cryo[\"Result_of_Treatment\"]\ny.head()","1b517738":"from sklearn.model_selection import train_test_split","bcf85c65":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 123)","c7ad2500":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nscaler.fit(x_train)\nx_train = scaler.transform(x_train)\nx_test = scaler.transform(x_test)","4afe08df":"from sklearn.neighbors import KNeighborsClassifier","8f372096":"# Mengaktifkan fungsi klasifikasi\nklasifikasi = KNeighborsClassifier(n_neighbors=5)","97873f05":"# Memasukkan data training pada fungsi klasifikasi\nklasifikasi.fit(x_train, y_train)","0fb03125":"# Menentukan hasil prediksi dari x_test\ny_pred = klasifikasi.predict(x_test)\ny_pred","cbcbd1e1":"len (y_pred)","6a61c81a":"# Menentukan probabilitas hasil prediksi\nklasifikasi.predict_proba(x_test)","c04aef86":"from sklearn.metrics import classification_report, confusion_matrix","dd9e8c93":"print(confusion_matrix(y_test, y_pred))","1a86141c":"print(classification_report(y_test, y_pred))","33a52ac4":"#niali akurasi\nfrom sklearn.metrics import accuracy_score\naccuracy= accuracy_score(y_test, y_pred)\naccuracy","cfba4ffd":"error_rate=[]\nfor i in range (1,30):\n    knn = KNeighborsClassifier(n_neighbors=i)\n    knn.fit(x_train, y_train)\n    pred_i = knn.predict(x_test)\n    error_rate.append(np.mean(pred_i != y_test))","44cda9b8":"plt.figure(figsize=(10,6))\nplt.plot(range(1,30),error_rate, color='blue',linestyle='dashed', marker='o', markerfacecolor = 'red', markersize = 8)\nplt.title('Eror Rate Berdasarkan Nilai K')\nplt.xlabel('K Value')\nplt.ylabel('Mean Error')","6b57bae2":"#Training and Prediction\nfrom sklearn.neighbors import KNeighborsClassifier #import library KNN from sklearn\nclassifier11 = KNeighborsClassifier(n_neighbors=11) #menentukan nilai k(banyaknya tetangga terdekat yg menjadi acuan klasifikasi) \nclassifier11.fit(x_train, y_train)","3dc09dca":"#Prediction\ny_pred11 = classifier11.predict(x_test).tolist()\nprint(y_pred11)","1ccc17bc":"y_actual11=y_test.tolist()\nprint(confusion_matrix(y_actual11,y_pred11))","734ad9cb":"#akurasi K=11\naccuracy= accuracy_score(y_actual11, y_pred11)\naccuracy","30f8b3a3":"#Training and Prediction\nfrom sklearn.neighbors import KNeighborsClassifier #import library KNN from sklearn\nclassifier12 = KNeighborsClassifier(n_neighbors=12) #menentukan nilai k(banyaknya tetangga terdekat yg menjadi acuan klasifikasi) \nclassifier12.fit(x_train, y_train)","d35444bf":"#Prediction\ny_pred12 = classifier12.predict(x_test).tolist()\nprint(y_pred12)","3c3ba7ef":"y_actual12=y_test.tolist()\nprint(confusion_matrix(y_actual12,y_pred12))","e2e3697a":"#akurasi K=12\naccuracy= accuracy_score(y_actual12, y_pred12)\naccuracy","b31a6eaf":"#Training and Prediction\nfrom sklearn.neighbors import KNeighborsClassifier #import library KNN from sklearn\nclassifier13 = KNeighborsClassifier(n_neighbors=13) #menentukan nilai k(banyaknya tetangga terdekat yg menjadi acuan klasifikasi) \nclassifier13.fit(x_train, y_train)","c371046d":"#Prediction\ny_pred13 = classifier13.predict(x_test).tolist()\nprint(y_pred13)","19cbf16e":"y_actual13=y_test.tolist()\nprint(confusion_matrix(y_actual13,y_pred13))","af67594d":"#akurasi K=13\naccuracy= accuracy_score(y_actual13, y_pred13)\naccuracy","ea90ac71":"output hasil prediksi dengan K=11","217e97a8":"Berdasarkan hasil klasifikasi menggunakan algoritma KNN didapatkan nilai K optimal yaitu pada k=11,12,13 dengan nilai akurasi sebesar 88,8%. Nilai akurasi k=11,12,13 lebih besar dibandingkan nilai akurasi k=5 yaitu 83,3%.","02f28b6f":"Dari output diatas, didapatkan nilai error minimum yaitu ketika nilai K=11,12,dan 13"}}