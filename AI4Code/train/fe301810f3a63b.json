{"cell_type":{"8b4369bf":"code","02858fcd":"code","66f9ae2c":"code","bf2dcd17":"code","952d3997":"code","5c34c189":"code","aa374e3f":"code","f8636fa6":"code","1ac8fa69":"code","f9faf40e":"code","eed2e583":"code","43a4c023":"code","d026ca46":"code","2aac7ac7":"code","ca228dd4":"code","7af68f8d":"code","d3358485":"code","6ae1e8b3":"code","2ccd69a7":"code","adbe98f6":"code","2a6bbd34":"code","c93c4f82":"code","8ce2bcc2":"code","f107e945":"code","99c9b213":"code","dc201f08":"code","d9e30018":"code","93b8bfb6":"code","f76f6d96":"code","04241d9f":"code","93a72473":"code","9c5c8d03":"code","75cc3ae6":"code","0e130232":"code","1c232dda":"code","49aba244":"code","f9aac573":"code","94105403":"markdown","dd73ff36":"markdown","4185d1f7":"markdown","6485b2dd":"markdown","aeed08db":"markdown","66b94c1c":"markdown","1897a2d1":"markdown","6e027344":"markdown","6cfa1fb6":"markdown","a5acc758":"markdown","09c89669":"markdown","f5a33c83":"markdown","4b7e26f1":"markdown","273ede2f":"markdown","e79ddaa1":"markdown","c351d789":"markdown","4a1a739e":"markdown","4a5e8673":"markdown","6cfa5d5d":"markdown","dec22ffb":"markdown","5a79a8f4":"markdown","98e51602":"markdown","6494766f":"markdown"},"source":{"8b4369bf":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcSGmfNsakXt5tDRKPOtTnRC8JwRctNBpDPHQIPxHxPdhoPu4hdI&s',width=400,height=400)","02858fcd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","66f9ae2c":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAkGBxMSEhURERMVFhUWFxUbFxgWFxUaGBsZGBgXFxkWGBYZHyggGh0oGxgXJjEhKisrLi4vFyE1ODMsNygtLisBCgoKDg0NFw8QGywlICUwNyw3Nzc3NystNTc3MDAvNzI1ODU3LC0tLDc3Nzc3NS03NzUrLjc3Nys0Ky01ODcrK\/\/AABEIAOEA4QMBIgACEQEDEQH\/xAAbAAEAAgMBAQAAAAAAAAAAAAAABAUDBgcCAf\/EAEoQAAIBAwIDBQUEBQgHCQEAAAECAwAEEQUSBiExEyJBUWEHFDJxgUJykaEVI1JigiQzQ2OSsbLBFjQ1dKKz8BclRVSDk6PS0wj\/xAAZAQEBAQEBAQAAAAAAAAAAAAAAAwUCAQT\/xAAnEQEAAgEDAQcFAAAAAAAAAAAAAQIDBBExIRIycoGR0fAFE0Fhcf\/aAAwDAQACEQMRAD8A7jSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBWo8Ze0Sz047JWMk2M9lHgsAehckhUHzOT4A1n9o3FA06xknGO1PchB6GRs4JHiFALH7tcw0Cyh0q1XVtQTt766JaCOQ8xu7xkYnOGIIZnxlQwUcychs1r7VLh+8dLlWPwYvJ0889jt\/P61t3DnGNveYVSY5P2HwCfukHDf3+latY6jr0ii4aKNUI3CPYgO3r8Bbf08M59Kky2sV9AbqNBFcRYMgTkGxz3DHjyJB65GOfI0HQqVVcNagZ4FZvjXKt6keP1BB+tWtApSlApSoQ1SMytEDlkXdIR8KDw3N4E+XpQTaVqy3s17IVidordPjdeTt6Bvs59OYHzxWKbWp5X9305E2pyaWXcVHqOeT8zknny8a5teKr4dPfLM7bREczPSIbdSqWzvxD+ruruBpT4dyM\/IKWJNWwkr2ErRFZmInf5+9mSleA9ega9cvtK0f2he0eHTcRIvbXLAERA4Cg9GkIBIz4KBk+g51psVzxVd\/rUAt0PNVKwR\/wDDIHkH8WKDtVK4rb+0fVNNlWHWbctG3SRVQPgdWVoz2cmP2eRrsOnX0c8STQuHjkUMrDoQf+unhQSaUpQKUpQKUpQKUpQK8lqOa1X2g8TCwspZwR2hGyIHxkbIXl4gc2PopoNB4ok\/TOuxWI71rZ5M3kSpBl\/Ftkfp36wW9wNX15pWINpZAkZ+DZETg+Xfly3qqY8KrtCkOl6LNesSLm+O2Nj8QVt21snx2mSTPjlc1Elb9G6KsIGLjUDlx9oQgDuY680KrjzlbyoN+4I1aS9vrnUGd1t41YKCSF247qkdPhBc+RIqdwnd4huro8kwQPIsckL\/AMSj+KtX1Sc6dpkGnJzubogyAdcsRuHrklIx5gHyqx4jkMMdno8BzK+1pCPFmJAJ\/d3b29AgoNz4EU9gzeDSHHyAAJ\/EEfStlqNp1osMSRJ8KKAPXHifU9frUmgUpSg1rj7iQWNtuUjtZDsj9DjLPjyUfmQPGtfkU2lnFAc9vdHfJ4tzx3SeuclR6nd51RXEx1biDshzt7LOfI9mQX+rTFVx4rHVlod+NQ1iabOYLQHB8O4SqH5F+0cH90UGx6ofd4Y7OPnJJjdjx3HH5nl8hVJxjqr2kcenWWfeJsbmX4hu5ZB8CcHn9lV8ORGXQdRW4nuNQlOIYQxBPQDacfhGMn1YVrHD+qg++a3cjkpZYlPmcDap88GNAfVqljntb3aGtrOCK6b8x1t\/Z9oYbzRNJ0tQ+o\/ym5cFtmC3XqRHkDGc99zzOfkJ3DXtU0tCIUhe1jJ5HYnZA+ojY7fnjHmapOEtH97dtSv9skkpYwxv8J28txU9VHIKMEAAHnkYxWd\/DqU0thf20cEy5ELRjDqR1Xcep6MPssPDlzqz3cLW8V1DIwZWAIIIIIPMEEdRXzV9TW2t5rluaxRu5HnsUtj64xXFOAeIJNKuzpd6f1TN+qc\/CpY91lz\/AEbn+y2f3q6nxvA0um3kaAljby4A6khScD54oOX8C7Yba74kvx20u9hAreMhIXcOuMuwQH7Koayado2vatF7978YFfJhjEksIYZPwrHyVeXJjkkDJ8zH0xfe+FpYoub2kxd1HUqJO2LfLY7H+A1l1aNtR0azvLN2E+mKFkjU4K7FQdqoHiAiuP3Sw6jFBl0DXJLp5NB18Hc+BDK4USpL9jvjk2fsP49DuDVL9m+rS6Rfvot8f1btmBzyXc3wlc9Ek8vBwR1Jr3qECcRaYt3CANRtRhgvIsR3ig\/dfG5D4NkZ+Ko+0cRaXn\/xKyGPBWkGPyD49Nrr4DqHb6Vonsm4z9\/tjFOf5Vb4WUHkWHRZMeZwQw8GB6ZFb1Qfa1jVeK9rbLaPtW6Z54J\/dA5t+X1rFxrrJUpZxc5JcZA67ScBf4jn6A+dR57oWQW2gUPdOBuOM4J5gAf5eXM0EC640v4O\/NZZjHUhJUwPMsdwH1FbLwrxbbagpMDEOuN8bYDrnocdCv7wyPryrVNY1vVLDE86iSHIDA9ngZ8CyDKHwB5jPnWs8fOlm9lr2nDYsrfrEHIMSpcqQOQ3Krqw81BHPnQdvpWvf6Z2n7Z\/ClBeSmuIceynVdYi05Sewt8mbB5Z5NKeXjt2ID1BZq7BxHqHu1tPcEZ7KKR8eexS2PriuHcE3PuenXeryndPO7JHn7TZJz9ZCxPpHQZeJ2GpatFZL\/q9oO+B8PLBcf4I\/TvVFs5v0lrDTtj3e15rn4cRk7Pxk3P8kxUeyJsNKe6Yn3i9OEJ+La2SGz93e+fNhUWUGx0pYwCJ708wPiEZAGMdfhKjHnIaC+4Suhe6hcatOcW9sD2ZboAoO0\/RNzkftSCrz2UxvfXlzq8wOCxSEHwyADj7se1cjxZ61XiVGtLG20mHnPcFTLjxLMOXyaTAH7qEV2ThPSVtLaK2TpGoBPm3Vm+rEn60Gyx17rHFWSgVQ8da+LCxnueW5VxGD4yN3UGPvEE+gNX1cV9sV41\/qNpo0J6Mpkx4PIOp+5Dub5PQReFXOl6DcagxxcXp2xE\/Fz3KjZPU\/wA7L6ipejW\/6O0EEjE18c48RGw7o+XZD6GU1945tVv9UstDgGLe1VTKF6BQoJXl0xEFUHzmq71MC\/1iK2XHY2g7wGMdwguMfe2IR6VHPaYptHM9Gn9Jw1vqPuX7tI7c+XEecqXj2VrDSILJB+vu3G8D4j0dx68+yj+Rqj42tjGun6HEe8djzFfFnJBb5ZMr49Fq+lcanxGxODb6cp5\/Z3oeZ8ge1Y\/SCqbgydbzUrzVpmCwowSJn5AGQiKLmeh7MAH1lqlaxWIiHwZstsuS2S3Mzuj8fWrp2F5ZSZS0zFtXBERQ7SceXLaw8gPDNRtahGoW6alaZW5hx2ir8WU73LzK\/Ep8QceQHt0fR714bgmSzuixLNz6nBdh03Luw\/7QIPkKj3kEmiXqzRgvaTeRzleuzPi65ypPUePxV0mu2hTXrDcu0XkA6dMkj4fuPjl5Eehzsnsc4wNzGbG5J94gGBv+J4wdvMHnvQ8mz6HzrS9ZhbS7mLVrDv2k+Cyj4e\/zaM+Qbqp+ywx5Az+ONOx2PEWlNyyry4+y3w72X8UkX1z+0aDLIp4d1YsR\/wB33mQeWQq5zjHnGWPLxRvE9I1\/C\/Duprcwgvp9z4KcqY2OWj8iyZ3IfFTjPNq6IwtuIdK5YVmHLxMFwo\/yz6blb1rROCpxdQTcOamCskRb3die8rISdqk9SvxL4MhI6DmEbVAdC1CPULPv6fdDIVPhKMAxiHhkfGnTlkdA1SOKs6ZfQ65Yd+1uecoX4T2mC6+gfG4eTqc+AqJwxJt7fhzVOQJPu7\/svzYbCfA\/GvqSp64rBwnem2ebQtSGYZCwQk8gzHKlD4K5wynwb1JwFpxkDZ3MHEOmYaGbBmUZCtv67h4B+h\/ZcA9TXXNJ4gguLZbyNx2JQuSfshQdwbyK4II9DXF+FLv3GebRL\/v28+ezZvh7\/IY\/ZD+nwuD55r5xHatpGmyWEchke9uG2gZz2ICgjb+02EU467z5UGxcJ6v2r3uuXA\/VxZESnl3iAEQeoUxr85DUvh3UDDZ3GsXHOR9yw58WZtuQPIvy9FQ+Fa9xVZNHDpvD1uf1shWScj9picsfMA9q+PKNfSpvtEHvN7Y6BaHakQTtMfZ7vIn1SEM3r2goJ19rUo4fmnvHLmd9sO7G7DMoHzxtkceg+Va57RlMGg6ZatntXbtdp+LBSRiMehnQVdcTxLqOr2ujwge62ShplHw90LlMeQXs4\/8A1W8qiXT\/AKY4iSNedtYnn5HsWyx\/im2r6qmaC2\/7PJvWldYpQUnEojlQ2Mp2+9xzxqfXZzUebbSzD7hrhVjNbwRPoutxvH2chkilTccFs5IwCSpycNgjDEEAiuw8d2CXyNZRS9lexBLi3Y5XDKWUOpHUZ3K2MldwJHMZ0G+4tuUUW+uaMZyn9KkYZT+8BtKZ9VYfIUELiz9H3s0Eh1G3W3hAHYjOSMgsM55ZAUdOQFRNX1jS3vUvJLqSTstvZxJC+wbeY7zDB7xzkY6Dyo2uaS383oU7Hy2YH5Z\/urPZ6hIT\/JeGVB8GeM\/4miUfnQQjxnpzXgvEtbqedfgyyBRhSo2orHzJ5jqc1s8PtJ1B\/wCY0Wc+RbtiPyiA\/OvVtPxG\/KKxtLdfDO3l\/wDI3+Gs3+j3E0nxX9vEPJcDHy2wf50HluPddXvfoY7fRZifyJP5Vm0v20osoh1KzltW5d7vNj1aNlVwPkGqN\/oxrasANciMh+FGc8z5YKn+41HtNSmu7g6Fr8SNI6kwXCBQ4faSrqQNvMBsMAOa7WBycB2KK7jaMTI6tGV3B1IKlcZ3AjqMVxL2VXCzXWpa7c52xLIwzzxv3OQPVYkRR96pPs3uZ4odV0aQ5kt45zD18Q6tt\/dLFGA\/rDVb7PojJw5qkcXOTc5wOu3sYTjHqFegtfZlIY7a\/wBeuBmWd3EefvcwD12mUhflEKm8PXn6O0u61WTnLLkRZ6s2Sq\/jIST6Lmo\/Ad7YXujxWE9ykEkDMWBdEJw7sJAG5MpV+fkflVXxHOutXltpGnsTZ2wHaSjoQoCtKD44XKqftM5PMYNRmkzli08RDRpqcePQ2w1797dfDHEeqHprHTeH5rlyfeNSfYhOd3ZkMCxPX4e1bP8AWLWzWns7d9BW0U9nPJtnYHkGkPeEUnoF2r6FQfDFVWoomr63BYwge5WAwQPg2xlQ4HoWWOMeikiu3lKsznC+FJl1W1k0i+yt3Bns3cd\/uZUE+boe6w8VPzNYeDnEwl4e1MFXXcIWPUFe8FUnxAwyHoV5dMA7F7XuFJInXWbHuTQENMFHMqvSXA64GQw8UPpzrOKbRdZsY9YsQUvLYDtY0+PKYcgeJZT30PiCR1wAFTwrce43E2haqM28x2qxyFUv8MinwRzjn9lxnkdxrLoV8+gX8mnXvfsbg9WGV2v3RNjpjHdkX0z4DN1dW8fEmmCaPaNQthhlGBubGSn3JMZU+DDGeTVW8OuuuWR027O3ULRSbeR+TMB3Sr555GArjr8LcyDgPgL8NakGXLaddeWWwvofF48\/xIfPpce2Ph0uses2TYliCM7pz3RjvJMuOpX81PktVfBqtqel3ej3I\/lFlzgLfEpXcqpn911ZD+64FXnsP1c3Gnvbyd73d9q55\/qpBuVTnwB3j5ADwoNf4ijXWrCPULcbbyAYdV5NlebICOfXvofXHicVN8RrNkJlA99txhwORdev\/FgkeTBh51n1S2fQdQ7SME2VwenkuSSn3kySvmpx5kYtetHsbyPULJTLBcfEsY3A7u8ygDwb4l8iD4cqDzp4XWrZYZn23UBHf8WjJAYnz5dfJgD0OKsbAi\/1sysf5NYL1YkjMWcEk+Pabmz4iIV54hjg04y6gmVnuE2xRkY2u3OSTb4fZJ8iMfaqDe27adpK24B96v2G5ft7OWU\/AquPOVqDYfZ7eLPdahxBc5EUQdYs+CqoJAH7QjCDl1MjedYOAb0wwajxHdDMjl1hU55szDug+Rfs0B8BG3hWDjaJrSwstBt8NPOUaXHiWfkD6NMfwirPx3Y75dO4btT3YwhmYY+IgkufUJ2shHm60DhO4bTdHutXlObq9YiJm+IliwVserGSQ+aqK232H8Ne62PvDj9bdYc56iMZ7IfUEt\/H6VrPGkC6jqtpokAxbWir2oXoAFUsOXlGFQHwMhrtSIAAAMADAA6ADwoPVKUoNY474bhvI0Z5jbTRNmC4VtrRu3dxnIyGOBtyM8sHNapJFxPbjajWl4o6OwVXI8MjMYz9T8zXTbm3SRGjkVXRgQysAVIPIgg8iMVzPXfZkYQ0tjqdzZRLzMfaSmJAP2SrqVUeu78KCGdR4qbl7nbp65h\/\/c0Om8VS9bm2hHl+q\/vETH86of0S7fznFcePS5c\/l24rHNwtpLf63xA03nh1b8mL0FxdcK6mw\/lfEKReYWRlH5NHVTNwXpzf63xEk3mBLGfyaR6jJpnC0XxXV1OfuygfQpEg\/On6d4XiPcsLmU+bM238JJh\/hoM9jpvDVlLHOb+eZ4mV1VVJUshDDJjiHiB9oVZ6HLLrWtRaokLxWdqoAd8Dds7QgZHIsXckgEhQvM5IzVW3HlhuAsdAidh0JVGcfRI3P51a3EGv6yBC8a2No3JgVKZXyKk9o\/L7OFU+NBY+zSQXet6nqEX8ztESt4NkoNwPjkQbvk486rtRsrjhy+kvLeIy6fOf1iL\/AEfMkLkfDtLHYTyIbaefOupcI8NQ6dbLbQZIBLO5xudzjLtj5AAeAAHhVw6ggggEHkQehHkRQcE1C04ZvW7cXM1mzc2iCELk9cKY2UH0Q49K8XnFtrbQHTeHopWlnwr3BVu1fIxhAQGLYJ54ULkkDxHUNR9mGlTNva0VSevZNJGP7MbBfyq14f4SsrH\/AFW3SNiMF+bOR5GRiWx6ZoKX2WcFDTLXEmDcS4aUjBC4HdiU+IXJ5+JJ8MVutKUHxlBGDzB61w3WbeThvUhdQKzWFycMg6DxMY8Ny5LJ5jcvma7nVZxJocV7bSWs4ykgxkfErdVdT4MDgj5UHGuJoH0m6j1vSiHs7nm6jPZ985MbfsqxyVP2WBHkDaWmr6FLdrrfvLwToCXtzyLSFCmdmMuSG6qcEgZ+1nXtO1S40GaTT9Rh7eyl3d3AKsD1kh3d055boyeR8jzaTI3Cme1xcefYgXQHy8h\/axQT\/ZXdFrjVNcmXs4CJMeRy\/aso8yqqg9S9S\/8A+frNvd7u4YYEsqKPLKKWbH1kx9KorvVbnXSmm6Zb+7WEZXdyAUAHIMpXujB5iMEknmT5dr4e0OKytorWEHZGuMnqx6s7epYkn50FVxNoEV5C0E65VuhHxKw6Op8CP+uRrlcfCGs6eWjspEmhJO0EoMZ8SknJT90kHrXdXiqv1LShMu0vInk0TsjD6qefyORQch0\/hF4nOp65cKezwVUnIyOa5AAGc9I0HM+fSvvCg\/SN7LrN0OztLQHsQ+MdwE59SvNjj7TADO2rXiLgTToHWbVNTuXXmVS4nUkgdQoC7yPuYqHdPLrQTT9Lha301CvaTshRXCnIWNfEZGdvUnBbHiGHgR\/ebu84ivAVggD9kD4bVwAB4lY8Dl1aQ+NY+B9RMUeocSXYzI5ZIFJPN2I7g9M9mmfAI3rWfihPfXi4e0cD3eAj3mUc0Ug577DkcNuY+LPgeBrZ7jgD3h7a0YGPTbHGEON9zL9p2A+FMlsk4JLPgYYGgwew\/h144ZNSuMme8JYFhz7Mktu9N7Et8gldPr4igAAAADkAOgHkBX2gUpSgUpVVxZePDY3c0R2yR287o2AcMkbMpwcg4IHI0EHVeBNNuWLzWcJY9WVdjE+ZZMEmq+H2VaQvMWYP3pZ2H4M5FZ\/ZZrE15psNxcv2krGYM21VztldRyQAdAPCs3tJ1SW1024uLd9kqBNrYVsZkRTyYEHkT1FBlt+BdNT4bC2+sSMfxYGrOHR7dPgghX7saD+4VzziPjm6t9IsJoyrXV4sKmRwoVWZNzPtGFBzjwwMk45YrC\/D3EyqZF1OBnAzsCrg+OATDj8hQdWVQOQAHyr7XN9d4m1CLQpLuVDa3iNGp7qEc5o13hW3DBRunPBzVTaRcRvaJfLqVuUaFZgjxRL3Sgk2sRDgHB8\/r40HXqVzW09pjfoP9KSxr2wYxhRkI0m7aG65C47xGfAjNV9ppPEtyguDfwwFwGWLavdBGQrYiOPxY0HWqVz32ecV3b3U+l6mEN1AocSIAA6d3JIGBnDoQQBkN0BBqv8Aa1xndwTw2WmsRPseaXakbtsVWIUBwR0R2Pj3Vx15h1Kla7wBxENQsYbnI3ldsoHhIndfl4AnvAeTCtioFK5N7WON7yG5Wz01yrxQvNcMqRPhQN2D2gIAVAWPnvXHlW\/8G68t\/ZQ3S4Bde+B9mRe66\/RgceYwfGgsb+winQxzxpIh6q6hl\/A8q1pfZnpIbf7lHnyy5X+wW2\/lWpzcQatqt3cQ6VLHbW9s5jaVwCXYEjIJVv2SQABgYyeeKj6lrGt6KY57+eK8tGcI+1QHXIJyO4pBwDjJYEjHLIoOt2VnHCgjhjSNF6KihVHyUchWevMbhgGByCAQfQ9DXPdD4luodbuNMvZd8cq9paMUjXC822Aoo3d3eMnxg9aDoeKba0n2s8VyWFootj\/Kp5FSHAViOYLMEYENywvQ85Fqn4v12\/spNFtzc5eeQLdHs4cSHtLYMB3O6B2jgbcHGPGg6Y0QPIgH51hvbJZY2ifcFYYOxmQ48g6EMPoRWh6jxJdWeuRW1xLusrtMQgpGAknIY3hQzHeAOZ6TL5Vfe0fiX9H2EtwpAkI2Q5x\/OPkKcHrtGWI8kNBd6VpUFsgit4kiQfZRQoz5nHU+pqZXNdS4tu9N0aG4uj217OVChkVQrSAuqlIwudqDmOpbl48oUegcTOvatqMEbnn2e1MD90kQkcv4vmaDq9K0T2acW3F01xZX6qt3asA5XADqSRuwOWcjqORDKRW90ClKUCqPjv8A2bff7pdf8l6vKw3lqksbxSLuSRWR1OcFWBVhy8wTQc09kPE9lBpUEU93bxSBpspJNGrDM0hGVY5GQQfrVn7TNXt7nRrxraeKZVEYJidXAPaxnBKk4NT\/APsw0n\/yUf8Aak\/+1WFtwXYRwSWqWyrDMQZEBfDEYIJ55+yPwoNKvbvT00LTk1SJ3hkigVSiklH7LIbcpBU7d3TORkYPSqe54K0eKFp7bWZYtqkoVu4SAQMgBVAYnPgDmutSaDbNbCzaFGt1VVEbDcoVfh68+WBg9a1tPZNpAbd7pz8jLcEf2S+CPSg0W51m4u+FJZLlmd1ljQO3xOq3EWCT4kc1z47efPNYtI4U4feyhkuL5UlaCNpVF3HuWQoC4EXM5DZ7uD0xiux3mgW0tt7m8KG3wo7IDauFIZQAuMYIBqjX2Y6SDn3KP6lz+Rag5ExuLvhc5XK2t0NmFC5iCAEkDrtaZst+6c8wTXYdH4+02WCOT3y3jJRcpJLGjqcc1KMQcg8q2K2sYo4xDHGixAbQiqAmD1G0cscz+NapdeyvSZGLm0AJ6hJJkX6IjhR9BQajw9q8Vzr97qMbA2tta4eXntOAnPn57ZceYjz4iqXg\/wDS1zdXGtWlrBJ7wzopuGI2oCo2ooZc4VEXd+4fXPYouFbNLZrNLdEgf40TK7unNmUhmPIZJPMDHSp+madFbxJBAgSNBhVXoBnP95J+tByH2VzT6bqUumXkaxe9L20SK25FfvYVDz5FFYcz\/QgeNdd1XUEt4ZLiU4SJGdj6KCTjzPpUbUuHra4liuJog0sJzE+WDKchuRUjPMDr6+ZrPq+lQ3UTQXCb4mxuUlgDtIYZ2kHqAfpQcR4Ih1iWS41W2tLaX3wuCbhzyQOQyIAw7uQq8+vZirj2P3E2n3s+j3aiNnAmhUNuXO3vKjfaBQD\/ANps8663YWUcEaQxKEjjUKijoABgCod7w9bTXEd3JEDPEAI5MsGUAk4yCMjJbkf2j50HMPZVrdvp82oWN7KkEguXdTKwRWB7vJm5dAreocEZ51l9tHFNrc2S2VpNHcTTTRBVhZZMYPiVyAS20AdTu9DW\/wDEPBljfENdW6O4GN4LI+B0BdCGI9CcVh0HgLTrNxLb2yrIOjszyMvh3TITt5eWOtBeabAY4Y4z1REU\/NVA\/wAq577bNKcQwapb8p7KRWz\/AFZYdQOoDhSf3S9dLrFd2ySo8UihkdWVlPQqwwQfmDQch4euxrutLebT7rYxRlFYf0rDIyPMPuOf6hfOpvtj\/wBoaJ\/vLf8AOs66HoPD9tZI0dpCsSs25guTlsAZyST0Apq2gW1y8MtxEHeBt0TEsCjZVsjBHii9fKg1j2x8PG709pIwe2tj20ZHxYX4wCOeduSMfaRa0W21duIr7T4GH6m3iE10MYVpRgOMdCpIRR6SPXcyKqNA4Xs7IubSBYjJt37d3PbnHUnHU9KDSPbzCwtrW6Cllt7qNnA8j0J\/iAX5sK2y3480x0EgvrYAjOGlRXHoUYhgfTGav7m3SRGjkVXRgQysAVYHkQQeRHpWnSeynSGbcbQDnnAlnVf7IfAHp0oNc9mM4u9Y1TUIgewbZGjEEBj3RkZ9I846gOM4zXWKiaZpsNtGIbeNIo16KgAHPqeXU+tS6BSlKBSlKBSlKBSleGeg90rCZa8megkUqL29fPeKCXSonvFfPeaCZSofvNPeaCZSoXvNffeaCZSofvNPeaCZSonvFPeKCXSo3b19E1BIpWES1kVqD1SlKBSlKBSlKBSlKBSlKAa8Mle6UGAxV5MFSaUEXsK+e71LpQQ\/d6+e71NpQQvdqe7VNpQQfdq++7VNpQQvdqe71NpQQ\/d6++71LpQRRBX0Q1JpQYRFWRVr1SgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSgUpSg\/\/9k=',width=400,height=400)","bf2dcd17":"nRowsRead = 1000 # specify 'None' if want to read whole file\ndf = pd.read_csv('..\/input\/cusersmarildownloadsaudiencecsv\/audience.csv', delimiter=';', encoding = \"ISO-8859-1\", nrows = nRowsRead)\ndf.dataframeName = 'audience.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')","952d3997":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcSg-nanBvd9injeAd-98rQnCTXgbReN22t0LA8yclFGBdtDiQlp&s',width=400,height=400)","5c34c189":"df.head()","aa374e3f":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcQ0Qfpy5eGp-RZsqduC8IJA7h0SF7bN_2Dq6vT9pbPjMo5xQhUr&s',width=400,height=400)","f8636fa6":"categorical_cols = [cname for cname in df.columns if\n                    df[cname].nunique() < 10 and \n                    df[cname].dtype == \"object\"]\n\n\n# Select numerical columns\nnumerical_cols = [cname for cname in df.columns if \n                df[cname].dtype in ['int64', 'float64']]","1ac8fa69":"print(numerical_cols)","f9faf40e":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcT5FzVGkJl-GdtryO95b4pDxL8L6jmWvdYa8LcL3aCrCCmKuxawVg&s',width=400,height=400)","eed2e583":"import category_encoders as ce\n\nencoder_x = ce.OrdinalEncoder()\n\ndf_encoded = encoder_x.fit_transform(df)","43a4c023":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcS2co0CCIHWaHjxKUcr-Gq6JkJtf4kNGM4Jw3QVm05IsCgJqi9X&s',width=400,height=400)","d026ca46":"x = ['territories', 'municipalities']\ny = ['2000', '2009']\nplt.barh(x,y)\nplt.title(\"Live audience 2000\")\nplt.xlabel(\"2000\")\nplt.ylabel('territories')\nplt.style.use('seaborn-dark-palette')","2aac7ac7":"#codes Saurav Anand @saurav9786\ndef f(x, y):\n    return (1 - x \/ 2 + x ** 5 + y ** 3) * np.exp(-x ** 2 - y ** 2)\nn = 10\nx = np.linspace(-3, 3, 4 * n)\ny = np.linspace(-3, 3, 3 * n)\nX, Y = np.meshgrid(x, y)\nplt.imshow(f(X, Y))\nplt.show()","ca228dd4":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.territories)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200, background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.show()","7af68f8d":"plt.title('Live Audiences')\nsns.countplot(x = 'municipalities', data = df)\nplt.xticks(rotation=90)\nplt.yticks(rotation=45)\nplt.show()","d3358485":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcQJUHOk0jvJ9_OnS8a3Mra4HQjeoTiu26i2uAI-1m6B9TSvXY7gGA&s',width=400,height=400)","6ae1e8b3":"#codes Saurav Anand @saurav9786\nfrom mpl_toolkits.mplot3d import Axes3D\nfig = plt.figure()\nax = Axes3D(fig)\nX = np.arange(-4, 4, 0.25)\nY = np.arange(-4, 4, 0.25)\nX, Y = np.meshgrid(X, Y)\nR = np.sqrt(X**2 + Y**2)\nZ = np.sin(R)\nax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap='hot')","2ccd69a7":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcT2hVdeaPbBHc1N-qZOBnHeRKmrcQlF7W9yOrYyyb3Fc9aZxErO&s',width=400,height=400)","adbe98f6":"df.groupby(['municipalities']).size().plot.bar()","2a6bbd34":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcRzYYDtpxOJmWITsgxf3o7E1SlsTNd4SdqwpKhmGLniDCu-4qe8&s',width=400,height=400)","c93c4f82":"plt.figure(figsize=(20,5))\nsns.countplot(df.municipalities)","8ce2bcc2":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcSUkLCtceTp-130KFgMYEN_XpLRTrukaNseBhehIUfe6RrjBXhf&s',width=400,height=400)","f107e945":"fig, ax =plt.subplots(figsize=(12,10))\nsns.scatterplot(x='municipalities', y='2000', data=df)\nplt.xticks(rotation=90)\nplt.yticks(rotation=45)\nplt.show()","99c9b213":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAkGBw8QEBAQDxAQEA8QEA8PEBAPDxAPDxAVFRYWFhUVFhUYHSkgGBolGxUWIjMiJSsrLi4uFx8zODUsNygtLisBCgoKDg0OGxAQGyslHyUvLTItLTEtLSstLy0tLS0tLS0rLS0tLS0tLS8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLf\/AABEIANcA6gMBEQACEQEDEQH\/xAAcAAEAAgMBAQEAAAAAAAAAAAAAAQQCAwUGBwj\/xAA\/EAACAgEDAgUBBQUFBgcAAAABAgADEQQSIQUxEyJBUWEGIzJxgZEUQlJioQckM5KxFXJzssHwNDVEo7Ph8f\/EABoBAQADAQEBAAAAAAAAAAAAAAABAgMEBQb\/xAA3EQACAQIEAggGAgIBBQEAAAAAAQIDEQQSITFBURMiYXGBobHwBTKRwdHhFPEjM1I0NUJichX\/2gAMAwEAAhEDEQA\/APbz4k9oQBAEAQQSBIAIi4uYtJW4PlPSf7RtVUQupRdQgJBYYrtx+I8p\/QT6Gr8Kpz1g7PyOGOJlF6n0rpHUa9VSl9W7ZYCQGGGGCQQR+IM8OrSlSm4S3R2wkpK6LcyLiSDndW67ptK1S32BDc21PXHuzey9hn5m9LDVKqbgtjOU4xauXrbVVS7MFRQWZicAADJOfbExUW3Zbl20ldlHofWqNZWbKGJCsUYMNrKfTI+RyJrXw86EssysJxmro6ExLEyARAJgkiAJIGYBGYIEEiARAEAQBAEA2yCBAEAQBIIMwJBAggwcS0XqW4H50ccn8T\/rPtY7I8h7n2L+zZs9Np+HvH\/uvPmviatiX4eh6WH1pnp5wG5Egg+Sf2gdPuGvD6hi1N7KKnA4RAQCgHoRnPznM+k+HVYOhaC1W55+Ii8\/WI\/29dbpxorAE029dPkWMdSmGUAsx4dQWUEYHEn+NCFXpV82+2m2viOkk1l4Fv8Asy0OrGpsYZrpQbNQGX\/EbnagB9RnOfQH5mXxSpTdJJ6vh2FsNGWbsPqU+fO8QQRBIkgQBAIgCAIBEAQBAEAQBmAbZBAgCAIIMgJDIJkECAMQD866v\/Es\/wCJZ\/zGfbQ+RdyPKlue402v1Gn6Fp7tM5rZNU+8gKcqbLRggjGMlZ5UqUKmOlGaveOn0TOpScaKceZ1Po765fVWrp9QiLYwOyxDtViBnaVPYkZ7H0nPjPh0aUekpvwNKWIzPLI9jo9bTcGNNiWBGKMUYMFYdwces8ydOcHaSsdKknscD6+r36eus+AN96DdeT5TzjYoILMe2M455nZ8O0qOWui4e9DKv8p8\/J5tKV2+K9niENSajSpAL7mby15YA7ucAcYzmeytld6d97\/fZnHzPqH0ojLo6Ny7WKk82i7OScN4n72Rg\/hieBi2nXlZ38vI76SeRHXnKaEQBJAgEQBAEAiAIAgCAIAkgiATANxEoVREkkZgBYIZnKlRAEAkSHsD88dU\/wDEaj\/j3f8AO0+2p\/JHuR5T3Ppv0Zo6r+jCq4gVudQHJIGz7RsHJ7EYBng42cqeMzx4W9DvopOlZnga+kvXqMIy211uSuorIao7RlSSD5eccGew6qlT1Vm+DOPJaWh0em\/VFvT6\/B01VeLALi9u5nJYDaxwQPugHHpnHpMauDWIlmm3pp9DSNV01ZHD6n1PUaywNc7WufKiAcDP7qIO35TppUaVGNopJe9zKU5Td2dnrXRNbRoKGuVggttZl3ljWrrWE3j05Vvwz8znoYijUryUWr29ORrOnOME2R9M\/Weo0QFZAu047VsSGT\/cb0HwePwjFYGFd5r2fMU68oacD6p0Hqq6vTpqEVkV9w2sQWG1ip7fhPnsRQdGpkbO+E80bo6ExLkQBAEAiAIAgCAIAgCSCIAgCAbyZQoRiSSQRBOhkrSGiGjKQVEAQCYJPznrnHi288eLZ3\/3jPtqa6ke77Hkvdl7qLWFdNp0LsngUutSksGe3NhIUd28w\/SZU1FZqj3u9exdpeV9Io3aXpt9KlrarKluxUXdChKZBcDd6sdi\/mZWVWE31WnbXx93JjGUd0adR1NXc+JRVcoO1PvVWBRwBvrIJH45xmWjRyrSTXmu+zIc9dUfXvp3oel09aPVphTY6KzbybLVJGSpcknj4nzeKxFWpJxlK68mejTpxir2OvYgYFWAZSCCrAEEH0IM5U2ndGtrnj+q\/wBnektbdSz6Ynuq+ev8lPI\/I4np0vitWKtJXOaeFg9Voeg+n+lDR6dNOrlwm47iApO5ix4\/OcWIrdNUc2rXNqcMkcp0ZiXEAiAIAgCAIAgESQIBMASARAEAsyhmIAgEFZKZKZiDiSydzOVKiAc3rg1m1BpNm4sd5cgYGOMZB\/0z2m9Dobvpb9lik83\/AInyq3rTruVtaQwZhatemyOD2qDDaex8z8\/9folh09VDuu\/X9HG523Za6brbbdQX0V9b6ohhSmooSpgoHcvtPiPtyPvD19OJnVhGFO1VNR42bflwXgTFtvqvU931ujSP+z2a0gW0lbEVXY+bgnyj7wyPb0nl4bp+sqK0fGx6kMJOu1ZN28EUtH0rpmo1Y1deDao3GrG1C+eLShHLD\/77zWrPFUKXRz253v4XFbAypSzzX3Rdq6padc2nO3wgCR5fN9wN3z7mVlhaawiq65v2djw8FhVU4nWt1CqQvJYgkKoLNgeuB2E4Ywclc4HJLQ0\/7Rr8\/wB8hM7yKnIXAyRnHcS\/Qy02121K50RT1Kt1V13lG5D+G4XHuSRwPkxKhNSy8eVwppq5I16FdwDsnfetblSPcccj5Er0UtnYnMiL+pUpWLS2aj++is6j8do4loUJynktry2Ic4pX4Fiq1WUOp3Kw3KRzkfEzcWnle5ZNNXRVbqtIKgltzu1ar4b7iy4JGMexE1WHnZvTTtKdJE3Nq1AJYMoAySyMB+uO8oqcntZl8y4kLrE3Kh3KzZ2hkZd2OTgkR0UsuZepGdbFiULCAIAkAiAIJEAQCzKGQJgkgNJsLEyCDFxJRZEqZBBMEAQD89dWx+0ajHbx7\/8AnafaUv8AXHuXoeXLdm36e0tlur09dTmt2tXDjgpt8xYfOAZXEzjClKUldWLUotzSR9a6\/qdMttatR+0X48qj2Pbd7+vGJ4eDp1nCTjPJHiz6bCU6rg2pZY8ziWOy6vTsNOdKS9Y2ZyGBbaTjAxwcT0UlLDTjnz6P3ud8UpUJLPm0fvc6NH\/mr\/g3\/wAazln\/ANuXvizml\/0K8PVnS6lXqK7v2ihVtBrWuykttYhSWBU+\/mM4KTpTp9HPTW6Z4clKLzR1Gn6kl1N4VGrsRH8Sp12spYMc\/OeeYlQlTqRbd09mgpqUZJKxySxOi6fV2S6ypLPleSV\/PAnXZfyKs3uk2vIyv\/jhHmz1gE8q7ep12PNgBdRraAM1MtNu390M5UNx8z0d6VOpx19Gc20pR4GVZPT7djEnRWt5GP8A6dz+6f5T\/wB+siSWKhmXzrzJX+KVuDMeoMRqtMQNx\/ab8AEDP2Sepk0v9M76aL1Kz+ePeXNYLr\/FqC+C1f7PbUXIYMwZmycenlAmNN06WWb1TunwNJZpXWxhp+rt4iV6ug02FsVv9+pmwR5W9CQT+smeHWVypSuvMRqO9po7U4zYmARIAgCCRAEkCAWZmZGLekklEkRcEJ2hhkt2kBbkJ2ksMykAZgg+Saz+z3qD22uG02HsscZtsBwzE8\/Z\/M+kh8UoRik1LZcOzvON4Wd+H1L\/ANL\/AERrNNq6b7TpylZcsEsdm5RlGAUHqfeY4r4hRq0nCN7vml+S9LDzhJSZ6Xq\/SbzqBqdMy78AEMcYIG3PsRiYYbF0lRdGsnb2z3sPiqSpOlV27Cs\/R9bZdTbc9R2OjEAkbQrBiBheZqsZhqdOVOmmr39O80jisPTpyhBNXTNGs1Q0\/UWtsDbCOMDJIKAZHvyJpSpuvgVCG6+xrSputg1CG6+x6H7cWs42vSyphNxV1IHJGRjB9szymqeRRfzJvXgeE1JS7DVdpLCbrAq+JbUKQpfAVRu5JA5OW\/oJaNSKUY62TvsQ4yu3xK+n6S7aWvT27Ueraa7K234dSSrYIEvLERVZ1IXs901wKxpPo1B8DopZeFw1al8d1sxWT78jI\/QzncYN3T0Lpy2aKI6bai2sNll97K1jMxRF2kbVXgnAE36aEnFbRje3Hcp0bSfFs6N9K21lLVBVxhlzkfkZzxk6cs0HtxNWsys0cSnol1Z0+1lsFF1r5dirFGUKo7HkAf0ndLFQkpX0zJcOJh0Ula2tjp6tdQwU1hEdXVvM5KuoBypwPmctN043zXd1y8zSWd7DU0Pd4augRVsS1vMGJKHIC4+fU44iE40ruL3TW3MSi5WTL05zQQSIAgCSBAIzAGYBamZkQ3pJRKJkEGKdpLJZJkBGAJ9JYtYlW55kWIsQ7eklIIwk2JEAq6rWCtq1IOLG2lvRM8KT+LYX85pGm5Jv2+ZEpZSrp+tIyBir5+zDBRlQzhCF3HH8a\/8AYmssNJO3v3oQqiuQOq0vgbGY8lPIGyMVnd8D7Rf6x0M4rR+9fwI1eXH9fkzq6sjKGAJ8niMACTgAZ28ckFlHOM5kOg07fT6v8BTuRqerKm1tu5Gr8QOCCDwSF4yASFOMkA+8iGHzacRnW5LdYqHo+eRgAckcH19DxJWHlwGde\/D8mS9XqJGN+CwQNtwmTx3Pbnj8x7w8NNDpEE6mhfYQQ29kGOV4ZlGfxKmVdJ5c3YM6uam60gPmVlQeJluCQUdkOQPQ7Zf+M7ab\/pP7jOk7GWr6rsVX8Nirbx5sq2V5xjBzlQxB\/l+ZEaGaWVtcBn0uZN1asd93p90ZBzgr3\/lZT+chYeT2Gdbmuvq2XCbcMbTWwJ+6MuAfx+zPAkuhZN34fh\/TUZ9bHTnOaCAJIEAiAIBEAmAWpmZEN2kokmQDANJJsSF94uL8jKQQYWSyJRrkkiCSIBp31szJlGddu5cqzL6jI9JfLJK+tiLrYy8FP4F9P3R6dovK99RoatUKkXzgAHCjaPMSfKAuOc+nEtDPJ2RDsjVpNVp2PhJhWAC+G9bVsQowMBgNwA9syZwmlmfrf0Ii47It+EvHlXgYHlHA9pnmZexHgp\/Av+UenAjM+Ysh4Kfwr6fuj07Scz5iyHgpnO1c5znaM595GZ7CyHgpnO1c987Rn3jM+YsiQgAwAMDsMDAkXFiGqU91U8Y5APHtJzPmLIeCmc7VznOdozn3jM7WFkZypIkgiAIBEAQBAEAtCUZm9yZBBr3ekmxe3EyVcQyrdySZAMfEEmzJsYu2ZKRKRjJJIgFDUo7XYS4o1aI4TAKPlmB3juQcAcYxibwaULtX135bbe9Skrt6M5VnU66rSttgRkdlIWm1gXbDHlU5JyDPpKdHNSzRhur7padzZ5M66U8rls+TNmn19F9iojmxXdgVaq5FyAWI5UA+pwfeRiKap03JwXVV1qnptwJpVlKdou+vJo7iUIMYRRjthQMfh7T5fM+Z7FkRqaFsXa2cZBBBwykcgg+hzJhNxd0Q0maW0CN99rH+GsYD\/KuAf0lula2siMqOXb+1U6gU1WK1T0tbUtwLOGqZA1W\/OSCrdzkjHrOhdFOnmktb2du3iZ9ZSsnpbQ6FPVELKjpbS78KLUwpbGSocZUn8+ccZmLouzcWmuz8F1NbPQvTE0EgCAIAgESQMwCIAgEwCIAgCAWU7Sj3M2ZSAa0HMsWZkXkWK2AX3i\/IknAkEGp1xLJlkzGSSIBj0rRAX2OWU+IUKqy+csONgb+H1A9yfeejg4xqySe8dlz9+ZzV24K64nzz6msI1mrVm2\/aeZDu5O0ZP6T6qlh6sqEJtNu3JNrfb7njOtRVaSlz04X0W74fQ3fR7k67TqhLcuQgLcHYe2eOR\/pK4jD1VQlLLbbgtet4fgmFWjKslDt56aW0d3c9\/r76Uv8AB8RPGZS\/hZAYAHBwPWfKYyhkk5R1XHsfI9qjUzKz\/sxBHuMjv8TjszfsKK6qy0v4HhhEZk8Szc251OGCqpHAORknuD+M1cIwSz318vqUzN\/KY6Lp7izxtRYLbgrIm1PDqqU4yEXJOTgZJJPHpFSrHLkgrLzdubCg75pavgaPqHUJ4bVWgbXHc8gD+L3BU4OfgTv+HYaE2pt7cNtfwc+IqSj1bGVGvsCqGrs47sykEgDjPHrOh4HDSeklfXjx4GSr1Y7pnSpfcobGM84PfHpmePWpxhNxTvbfvO6EnKN2jZMi5EAQBAIgCAIAgCAIJIgFor7SlzO5GT7QCFSS2GzMCVuQIAgGNnaSiUapYsIBnRaUZWHdWDfpNaNR05qa4FZxzRcSr9RdKpvuF9RZS4DWHaXUHnPAIIIAHPzPqcLjItPI00+Gmj+jPGrYd310fdv3jo2lp0Zs1NoeyysN4SrW4BPY+XLEn+bHofznEYuN1naVuF1f7fTYmjh2vl17fbZR01FepV7rGrttts8R7KSR4bLwqofvLtGfY5J98T52tXmqm1lyfG\/M9SnBOPP3wKtmkq0z\/Z7K2syz3O32tnPIZ\/vN\/wBOPaehhK1OpT66u1pZbfQzlhq0pf4yadaiIoruqbbuOAx5ycjknn1\/GdEpUJ\/NFrTdorHC4m3UR3KlLYAGSRnH5ZM8ToulrONNd3gdDmoQvIh+oaYPXXYzKGapVzWtu8Oz4De3bvPawzg21BaR0vz5nnV60aVul1ctuRh1Xqem8GzFx\/xVA21KeGUew4HP9PxnSnB7eiIrQngo56+qe2vvkblwVUAHKIM8jG0cZ985M8atFV6blBdaO\/cuJ2U26crN6PYxnmabnWIBEAQBAEAQBAEEkZgDMAtzMyEAQBmAYM2eBLLQstCCpHaL3G5gTJJEAiSBAEEiLkFOzpS2Xb1usoZlCM1ZQK2CSCwZTkjJ\/WdOHnmapStbm+HmZVFZOSOf9YtZW1GfK61ZGVwGIxyOT3yTnM9Vro52Sslt3GmFblTfVzXeu+lu48no2b4GAMc5\/IfqZas29dzopSa+WnpfXfjufUdTT5EY+ViqjaRhm\/mnDiYOCjWTtLTv7zgpu8nDdHG67dqgy26daMjw8h9O9zEIDhwA4JIZ33Y5xsPHee3hZ06sFN+Pf2nm14yg9FfU87ovHyV09lVhbw1u8TQ37EK2B9xLWYUZGDnPGeZrGlRjfLLVmuJx+JxSUasFZM9o1pZUG0LjOMAqWBwAW57nBPwGA+Z4nxGs42pRdudjqwsM3XfgcrqPUfDO3KryDuYgAAn549\/0k4TC0JwVWT8HzK161SLyomzX4VbRg1uMDJ2gnnHcev8A0nQ8HhpJwTV\/Qz6eqnmZerbIB9wD7HmeLXjCM3GGy4nfTbcbsymJcQBAEEiARmSBAIgFjcRKWRSyJ8T4jKRlI3ExZE2QCE942FzMDEhlSZANLDEui6dzGSBAEAQDTdq60ZUd0V3zsVmAZ8d8A9+4lowlJXS2F0tGatf1GmgA3WKme2c9uAScdlGRk9hmWhRnU+VMrKcY7mPW9nU6QdNaFsrr8M3IBYCPUYPBXtyCT+nP0NCo5xV\/mtazOCV4S0enYcPov0nbVcHe4NXtG6sVvtb0G92HlGe45M1fVXWslzug6rekGz1P1L1dVU3beEWutEBGWYkKq5+WYDM8SvNYmulHZLyXE6qceip67lPQ6Z1G612exuXXexpU98IvGAPfucSkMXKk\/wDFovXtZZ0Yz+bcy6jrjhq13vaamUKhLEBiSGO87VOexP8ADx2nVH4hXavpFe9EYvDQ21ZQ6d\/tPYi2U0XWbQG2XsrZA8zMWXBzyeP6zDoaWIqtQb1u9rmjnKnHVI3dR6fV+2afB2+JaNx4JYqAeTng8BePwnfCuqSqUoq6sl6\/k5p4edVdJfWOpxtTchpZQ7D+9bfMckDaMe2OCDj0mkZzwtW2VO8bl3f4grp2y8keyejyK6jgKN+OwPYTyq1G8FVgtLa95vTnaWR+BXnEdAgCARJAgEQBAEAuTIyNdstEtEzXsJDKsmQBAJkkGLLmCU7GplxLXLJ3MZJIzIBEEnJ63mrdqfD8atKil1WAW2A7i654JHOR6j14566Dz\/407NvR\/YznvmLmj0VNeTWgG8DJ5JI9Bk84Ge3YTGdScvmexaMY7riWpQsaLtdUpAe2tSewaxQf6mXyTkr2bK3iuRw9d1Go6msWg2acBbarK2R6K2UgFrAOcgsuDyBkHjkzqhSl0TcdHs1rd93vUylJZtdvI6\/VNQyV\/Z\/4tjLVVxkBm4DH4AyfynNSpqUrS2W\/6NZuyNuk0iVDC55OWZiWdzjG5mPJPErOo57\/AKQjFRNes6iKSAq2WWdxXUMvt9WPoB37nnsMmaUIyUlNO1uJWpa1mXfqE0XtRfQWZwgupFakqWbjzDbzjAz7es9nERlJZ4RvF2v9TipzlFOCdrnmtB0pmr\/vANTIync3l3uihQxGOxwO3eMbKVTELoOsmrP\/ANf2kxg5ypU3m0d+zXb127T2XVblIqRCCFrXcQCgJODnaeR+c4viNRJxoxeiWpvhYt3m92c+eYdZGZIEAQBAIgCAMwC5MjI12+ktEtEzTsJDKsyggQBAIgAwSamr9pNyyZrklhAIYAggjIPBB7GWvYHIfX1aI+HfYVqbnTs25yfekHuWHoO5Bx6Tp6OVdZoLXj+fyZZlDR7cDRYdT+zm213wSbGo2qrqhY4QMnI8uM+vfmb0IUZVsiXc78bcn5GdSU4wzeRRr1F20hNL9m3p4CgIM8bRnn3npTo4VNZp6rt37zlVSq1ot+z0Oj0jUGxmRqgm1cPvqw1gbgZ9PTtzOPHUadOOeDbbelnsbUJyk8rX7KtS7dReot8SvQ1iyjS7huVmQnzHuygHC57bj7Cc8mnTi7az3fZ2d5qlaT10XqdZLNQQrl9OqsFO3ZY4yRnh9w\/0lI0M8nBJt+C0RZ1LLM2jbpadr2szAvYVY4UgABQoxknjj+srUpz6NStZLQmM45nrqXFft2IBBAYZGe+R+g\/SRSxNag7J27GTOlCa1KfTdQXD2bVAayxVA3Hyo2zJ3E8kqT+nqMzqr\/EK\/wAqdtFt78DGnh4bstEzzXd6nUkRBIgEQCYBEAQBAEkFyZWMjXb6SYlomadhIKsyggiAJBJGYAgCAQygyU7C5rNZ9JNy9zAiWuSVdfp\/EUbdviIwsqLDIVx2\/IgkfgZenPK9Xo9GUmroo9VsL0WblCEUlmXdu2kqcjIHJB\/0nuYKj0E4OPWzSVuzmjgxU88JZtLJnz535Hce8+hliZQnCKdl7305nJhsFGrh6k3G74O9u\/jwXPtPTfSHAvb1XwsDnP784fibzZIWupZlz\/46vuZn8P0zSvqsv37zvDpa2VrlyLdxtN1JUMWYENgkEbSDjHPAHtmfNVpSo1XDdLTsPappTgnsYaypKbFRg6oiIUxjC49PfPGeZ7OF6WVJN2T98mjhrZFJ8jbpjTqK99bWBwdgG3zcYyeTjaO+fy7nE3g6trtr6NfdmMalOeqTOmyFTg\/H\/wCz5espZ3n3PZhbLoc\/ov8AgIf4jY\/+Z2Yf6ya\/+xru9EKfy++ZemRcQBAEAiAIAgCAIBbZsShkjUzZkoulY2VniQyjMpAGZAIgCAIAgCAIAgGNnYyY7krc5tVtV\/jVhdwH2LsRhWYZDID3JGfw5nuYJyVLIpWk9V77TkrpOV7XWzPG6n6Uv3Hw3rsUnAYuFIHyPfjHGZ6EsW5NOpGSa5K\/bpqRQk6NN06bi4vnvroen+n+lCillZlsd8iwr90kjGB8AH195nXxU23Wq9VWaS46u9\/QwpUIxSpw1bd2\/sWfpIKKKFOSqbqkPuEcpW34YAM8pdH\/ACn0i38m0vQ73m6Pq8PRFD65c0auvxGsXedqmpGdWZvT4P4z2qcJJSV9b\/0eVVWaUZLRHLr17Lbp62Nyu1ljpUi7lYByD5uwPOD8L+EmMHCLu9CrfSOLjoe+6nVsCK3+IFU5Gdu3njn1zPHxyhCMVLWdt+w9TDtttr5Tz3TE+0uKMRQrCpK85XeuTYwz2GTtwOPKZyVm8sU9\/djaG75HRmBqTAIgCAIAgCAIBEA3GQVIkAA4gbm5WzKMrYmCBAEAQBAEAQBAMbOxkolbnAfWpRqbVseuuqyuuxA3D2W5ZX2D97yrXwOc4953ZJTpqUd1x5IrdKTTLFVtLv4bV7LCpsC2IoZ0+6WHftkAjuMjImv8nEwjdSutr9pToaUn8uphqEFjPpkJrQVg2tWQj4bIVVPcZAOT+GPjF1JtKrN3fDl7RfLFdWKsX6a1RVRAFVAFUDgKBwAJzuTbu3qaWVrG+9EvP2yrblgftDg1+UhipPceuOMZPM9zD46nNLO8stuxnBVw0ldJXRS0\/TqKmU00hSpLC25ldk3YzsUFsnj1IHHrNqmJoxXWnfsXtmNLDyWkY27zV9Qa20iutHbxr2WlHJ3MigZezJHcKCfxInkup09V1ZrRcPReLO\/JkgoLd+7m\/RaVKa1qrBCIMDJLE+pJJ5JJySfmcs5ucnJ8TeKSVkbpQkQBAEAQBAIgCCRANuZUoRBIgEqcRuQzcpzKFbEwQIAgCAIAgCAY2djJW5K3KeoQlTs2+IA3hlxkBscE+uJrF2eu3EvJaaFPo9aFFu8zW2LhnsIZ+DyuRwFyOwAHxNa103DguH3KU0rX4mfVFUIXAPigFaimBYWPZQfUE44PHGT2kUW724cffoTJaX4mimvWIis9td1gANiCrww3uEbdwfbPB+M8Xk6MpNJWXO9\/qVWdLmzY\/WtMMBrVVjnCNkWZHcbO+fiVWHqcET0kDZRrwxCtXbUWOE8VVAf4BBOD8HBkSotK6aZKmjWD4mqPHGnq2592uwT+ioP80m2Wl\/8AT9P2\/Ibz7i\/MS4gCAIAgCARAEEiAIBslSogCSDgdW6fq7NUttNprrrpQqC7bLLAzEoVDAYI2gkg8duZ2UalKNJxmrtt\/TmYzhKUrp+7lLUL1WytEdBywL7PCVvK9beY78BcB\/u5J4zNovCxk2n3b8U\/Mo1VkrMuLf1UNTuCMGFZt2rUAuX+0U5f0TGCuckntxMsmGadr31tq\/AWqae+J0ujX6tqymoTZftdvE8nh8khOFyM4GcZOOMk5mGIhRjK9N3j59pMXLZnI0NXUaalVKrDcdy3NdqEvD27Vxam5vLXnd5Rg9vLOio6E5atW4aW05bb9pmlNJ23MdJp+qUFyoL17mxUWqJ8z6g5UluO9J5PY49JM5Yaoktnz15L9hKpF397lnVN1cISgrZ9zAKqVcAVja2WcAg2ZB9QAOJSP8Rys7273z\/HmS+ltp2ehe6m2pt0rrSjJc7CrLOKiq7sPYCORxuxjJ7GY0lThVTm9N\/0Xu3Gy3OalPVjUKywrNaadNwNdj2stxFjbye3hBW5GTkzocsKp3Wt79yVuXeUSqZbF7puo1oZ11VYIZ8VsgUKijcSxIY+XhAM85J\/LGrGg0nTfDiaQc0+sdKYI6CpZpWBJps8LJJKlA9RJ7krkEH8CPnM0U09Jq\/l78UUceMTmae+9mFpQvkKFBASutSASwHqT75yAce+fbo4KjKlpfX639PI4J4ipGZZOq1IB+zVjuGArjOOMnv6e3x8zT\/8APw74e+ZX+TUL+mtLruZShyRg9+J42KoxozyRZ3UZucczKn1AD+y3lfvLWbF+CnmB\/HImeHdqiv75+ReorxZTqS39vbw7SaSvi6hNi7VYoqVoG75wpbHp+Ymzy9As0ddl9bt28iivnumdycZsIAgCARBIgCAIAgCAbJBUQBAPLvZ1MX3ulZNVh2Uq7Ky1bHUBygIPmXxD3\/hnoqOGdOMW9Vv7+hzuVTO2kG6p1BbzU1StjLgJXgvWttasyE2ckoxODjB45kKjh3DMn57Oz7A51FK1jDxeq58Ra1BKFmrPmRm8NMD7\/lw27gdyPzlsuGtZvx5a+egbqbpe7G59T1RlACLW2KSGWsMG+1xZnL+XCYOMc5PI7SihhU73vvx7NLaEN1GttTfV1DqbFR4NachXZ1yOFtLFcP8AdJFQB\/mPEo6WGSbvfx7uzvJvUbtYtdB6hq3JXV0lWYjYVrVVUBAXLYsbgMdo9T7eszxFKmtaTv8A3+CISnfrIqVW9UQuBWrqLrmUWYLMrX2hAGDeVRX4Z7HvNZLCySu7O3DmkuFuZCz3096mel1fVWCbqahusCMXXYyLhGNhUWNwD4i4zk+U8cys6eFV7N7ffbbfZ9gUqltjVT1LqYZfFoVFa2tCRWpIyH3BR4vmGQg3ccEnbNJUMM\/llwfH9EZp8irXqurojf3fJLBvP5yGKklBm77m7A3cYHO3mXlHDSkut7+m\/Z5hOabsj1C5wM8HAz+M8976HWr21KXVbW2iqv8Axbsov8q8b7D8KD+pUes2w9Jzle10vdvEzqSyo431bVeltY09mwCracWirOCeecHGJ7dGioRcN7c+3XS\/eeLjKk3JOLt+Eefpv1jrk3sqkAgNqQCQVVj+9njcPzz7TXoVF6JeRxznXWkp+Z9A0FZFFO773hordzyFGTnsRzPJxlB36Va3vfvR9BhqmihLkc\/qVz3O2kp4yhF9xGVqVhgKv8VhBzjsByfQHnpRjBKrLnouf6NpPM8q8WW+mdPq01S1VLtRfc5Zj6sx9SfeZVKkqks0i0IqKsi3My4gEQBBIgCAIAgCAIBskFSIAgHL6trNTXZStFIsRyfEc7jt5UAcduCxyePLOmhTpyjJzevAzqTlG1ijqr9auqv8NXerFC0hkJp8xQWNkDnGWPf0msI0ZUVmdnrd8ez3YpJyU3ppZFe\/rmvTYradd9n3AK7TkhHJXGe+VHPoG+JpDDUJO6lovyVlVmuHvUs29T6gNpGmUhrXUjFhZVUjGSP4snzdht+ZnGjh9Vm4FnOpy96GodW6iVY\/sqgg2HG2w\/dGQnySeNw4OZLw+HT+blxI6Sp\/xNVvUeoi2x107YUGtU22FAPEOH4P2h2gHy\/xfEuqOGcUnJd\/h5ahzqX293Mruq9S8UONOwCVsPDCuyZY1eYnP2hA8QhRg+Uj1kRo4fJZy8b8r6LlstSrlNvYtV9U177S+n2BbKeFFgdwS249+FwASvJ82PSUdChHaWtny7PdyU5y3XH7murrXUmC\/wB1RSVG7dXZjcTaDgbs4ARO+Cd\/pJlh8NFvrefd+WE5u2hZ6d1PWWXbLtP4dRTJOGG07UI83ZsksMdxt5mdSjRjC8ZXZeE5uSTR2JymxQ1z+DbXqvNsqqvqs2LvYLZs8231A2HOPeduDrum2o7u2+xhXpqSuyt9VdPru8Kxls8NXw\/gN5lAbPAPdSu0++Gz8T34RhTm0lv58Dy6lNVNZK9k14Hk+iaNbwKm0dtDLqrbiysAjLZyobnLN93j+WaStFNy\/oipGFR\/KtrH0PU6uvT14YhO1J7s1jYBKKB3IIxgc5B9p52LzQp5aa1le\/d7sddDK5dZ6Rtb9HO6Jv227q3RTfY9ZsADur+fJUE4wSRzzhRPHr5erZ30+h3U766HSmBoIBEEiAIAgCAIAgEQBANkgqIAgCAIBBA4OBkdvcSb2BMgkgxYCSCIAkWQEkCAIAgFTp9xrts07ElBXXZUTtLBSzhq8EYZFOMZ5G\/Ge09ilj7UlnV1e34fvkcMsNebyux0K3VTkcH02oEP+YkkfliS\/iVGOsYu\/a7\/AHYWGm\/mlocnqQHj6RhjeGsrCDsK2QlyB6YKpz849ZxSryrKbn710RuqahZROhOM3EAQSIAgCAIAgCARBAgkZgGyQVEAQBAEEiAQYBEkCAIAgCARAEAmAUep6NrAr1kLfUS1THO05+8jY\/dYcH8j6TWlUUbxlrF7\/ZopOObbc3aPVCxSdpR1JV0bG5GHpkcEYIII7gyKkMr3uuDJjK5z+uW7Hqsqw2qAZK6SGbxUcrvBx9wZVTvPAxz3mtCOaLjL5eL5P79xSo7NNbnXE5jUQSIAgCAIAgEQBAGYAkgSAbJBUQBBIgEGARJAgCAIAgCARAEAQCYAgFC\/S3b2eq1V3bMq9W8eXPqGBGc\/99ptGUcqUot2vs7b\/wBFHGV7oy0WkdXsttcPZYFXygqiIuSqgE5PLEk+uZE6icVGO2\/brz+3ImMWm23qXJkWEEiAIAgCAIBEASQIAgCAf\/\/Z',width=400,height=400)","dc201f08":"import plotly.offline as pyo\nimport plotly.graph_objs as go\nlowerdf = df.groupby('municipalities').size()\/df['2018'].count()*100\nlabels = lowerdf.index\nvalues = lowerdf.values\n\n# Use `hole` to create a donut-like pie chart\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.6)])\nfig.show()","d9e30018":"#Polar Axis from Saurav Anand @saurav9786\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\n\nax = plt.subplot(111, projection='polar')\nax.plot(theta, r)\nax.set_rmax(2)\nax.set_rticks([0.5, 1, 1.5, 2])  # less radial ticks\nax.set_rlabel_position(-22.5)  # get radial labels away from plotted line\nax.grid(True)\n\nax.set_title(\"A line plot on a polar axis\", va='bottom')\nplt.show()","93b8bfb6":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcRrZG7QsdMXR191OHdNlIlIwz_brcJ_tnbBPTWABFHnjhVFfzox&s',width=400,height=400)","f76f6d96":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.municipalities)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200, background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.show()","04241d9f":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcT3Gw9MCqMEbXvrZb012qwXU188VX39lj4LKuPElpdqAhh-aH-jcg&s',width=400,height=400)","93a72473":"import plotly.offline as pyo\nimport plotly.graph_objs as go\nlowerdf = df.groupby('2018').size()\/df['municipalities'].count()*100\nlabels = lowerdf.index\nvalues = lowerdf.values\n\n# Use `hole` to create a donut-like pie chart\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.6)])\nfig.show()","9c5c8d03":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcQddGGw33i5HlvwiXUb9agjBahYZFIoGBUZgQzoQFJFFC4Sjuzf8g&s',width=400,height=400)","75cc3ae6":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcQ7dXISp7NQK7QVuYJu8q4HGMuKpBsqdJcaaroC4-ZNo6CLfV56&s',width=400,height=400)","0e130232":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.territories)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200, background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.show()","1c232dda":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcQNLKXknQNo98h9g_egsCcZ0UZpytss92EciR1kt8GMUfwGk87DDg&s',width=400,height=400)","49aba244":"fig, ax =plt.subplots(figsize=(12,10))\nplt.title('Live Audiences')\nsns.countplot(x = 'municipalities', data = df)\nplt.xticks(rotation=90)\nplt.yticks(rotation=45)\nplt.show()","f9aac573":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcTtK4GM_X7vLRjGfssMvhx7_NNUybAbN2UCTXWR3uvQP8GX-qj07g&s',width=400,height=400)","94105403":"Image: minho.com.br","dd73ff36":"Image tripadvisor.com.br","4185d1f7":"Image:soupetropolis.com","6485b2dd":"Image:visitlisboa.com ","aeed08db":"Image conjuntomundonovo.com","66b94c1c":"Image: sonsdominho.com","1897a2d1":"Image facebook.com","6e027344":"Image: tndm.pt ","6cfa1fb6":"Image campopequeno.com","a5acc758":"My Inspiration to this work.\nThe influences of the Portuguese in Brazilian culture. The most evident Portuguese heritage for Brazilian culture is the Portuguese language, spoken by all inhabitants of the country. The two most important festivals in Brazil, the carnival and the June festivals, were introduced by the Portuguese.","09c89669":"Image: companhianacionaldebailado.pt","f5a33c83":"Image: ps-af.facebook.com Portughese people only buy show tickets each two years. Return 6% from IVA (tax) is a Portughese right.","4b7e26f1":"Image:villamix.com.br","273ede2f":"It's still messy but that's the better I could do.","e79ddaa1":" Encoding categorical columns.","c351d789":"Image:ticketline.sapo.pt","4a1a739e":"Image: casamericalatina.pt","4a5e8673":"Image:shazam.com","6cfa5d5d":"Image:radiocampanario.com","dec22ffb":"* ANA MOURA - FADO LOUCURA (ao vivo no CCB)\n* The characteristic instrument of fado is the Portuguese guitar. Its origin is in the Renaissance census in France and Italy, but, citing fado.com, \u201cFado is not just a song accompanied by the guitar. It is the very soul of the Portuguese people. Listening to the words of each fate, one can feel the presence of the sea, the life of the sailors and fishermen, the streets and alleys of Lisbon, the farewells, the misfortune and the longing \u201d.","5a79a8f4":"* K-Notebook runner: Mar\u00edlia Prata   @mpwolke\n* Executive Producer: Mar\u00edlia Prata   @mpwolke","98e51602":"Image:tripadvisor.com.br ","6494766f":"<iframe width=\"638\" height=\"360\" src=\"https:\/\/www.youtube.com\/embed\/lh9YHtZzHfk\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>"}}