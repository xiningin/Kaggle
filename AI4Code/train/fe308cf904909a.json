{"cell_type":{"6b8331ac":"code","10ec1187":"code","adc9fff2":"code","f9e347d3":"code","c4118ae2":"code","ddc91c14":"code","042c9ab5":"code","8f7e5949":"code","df52b421":"code","e570c6cd":"code","16ff9df8":"code","d8383058":"code","effff6e8":"code","9e56649f":"code","49b3ff33":"code","635548ae":"markdown","d5deefe7":"markdown","e7896086":"markdown"},"source":{"6b8331ac":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nimport tensorflow as tf","10ec1187":"sns.set(style='darkgrid')","adc9fff2":"!ls -l ..\/input\/Data\/Stocks | grep \"ibm\"","f9e347d3":"time_step = 10\n\ndataframe = pd.read_csv('..\/input\/Data\/Stocks\/ibm.us.txt', sep=',')\ndata = dataframe['Close']\nsteps_per_epoch = len(dataframe)\/\/time_step\nbatch_data = pd.concat([data[i:len(data)-time_step+i].reset_index().drop('index', axis=1) for i in range(time_step+1)], \n                       axis=1)\nbatch_data.columns = ['time {}'.format(i) for i in range(len(batch_data.columns)-1)]+['target']","c4118ae2":"batch_data.head(2)","ddc91c14":"train_idx = int(len(batch_data)*0.7)\nval_idx = int(train_idx+len(batch_data)*0.2)\ntest_idx = int(val_idx+len(batch_data)*0.1)","042c9ab5":"X_train = batch_data.drop('target', axis=1).iloc[0:train_idx]\nY_train = batch_data['target'].iloc[0:train_idx]\n\nX_val = batch_data.drop('target', axis=1).iloc[train_idx:val_idx]\nY_val = batch_data['target'].iloc[train_idx:val_idx]\n\nX_test = batch_data.drop('target', axis=1).iloc[val_idx:test_idx]\nY_test = batch_data['target'].iloc[val_idx:test_idx]","8f7e5949":"print(len(X_train), len(X_val), len(X_test))","df52b421":"input_layer = tf.keras.layers.Input(shape=(10,))\nlayer1 = tf.keras.layers.Dense(units=64, activation='relu')(input_layer)\nlayer2 = tf.keras.layers.Dense(units=64, activation='relu')(layer1)\nlayer3 = tf.keras.layers.Dense(units=64, activation='relu')(layer2)\noutput = tf.keras.layers.Dense(units=1, activation='linear')(layer3)\n\nmodel = tf.keras.models.Model(inputs=input_layer, outputs=output)","e570c6cd":"model.summary()","16ff9df8":"model.compile(loss='mean_squared_error', optimizer='adam')","d8383058":"history = model.fit(np.array(X_train).reshape(-1, 10), np.array(Y_train).reshape(-1, 1), \n                    epochs=30, validation_data=[X_val, Y_val], verbose=0)","effff6e8":"sns.lineplot(x=[i for i in range(len(history.history['loss']))], y=history.history['loss'])","9e56649f":"pred = model.predict(np.array(X_test).reshape(-1, 10))","49b3ff33":"plt.figure(figsize=(16, 6))\n\nsns.lineplot(x=[i for i in range(len(Y_test))], y=Y_test)\nsns.lineplot(x=[i for i in range(len(Y_test))], y=pred.reshape(1404,))","635548ae":"MSE as loss function becasue this is a regression problem","d5deefe7":"Extremely simple neural net with ReLU as intermediate activation and linear output activation.","e7896086":"Predicted data againts actual data for IBM"}}