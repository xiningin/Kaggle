{"cell_type":{"db810c41":"code","54c39f1d":"code","4d5bdf41":"code","17b3f5e9":"code","09add5d4":"code","efc60e26":"code","2cb7caf4":"code","38118317":"code","12a56580":"code","463c39fb":"code","7495682a":"code","2b89ce55":"code","ccd88cb2":"code","d41f4c30":"code","8d74a3bc":"code","6fbb5b31":"code","afeae6a1":"code","61cb8b53":"code","a4927982":"code","0c20a77b":"code","48f57531":"code","f9ba20f3":"code","8d27e9a9":"code","a131278f":"code","9ac60610":"code","6b315479":"code","e505a7f0":"code","d3fa176b":"code","5ecc5fb2":"code","b59e91a9":"code","84ff7cff":"code","9d057676":"code","ed71e6cb":"code","03208e5d":"markdown","bc4cdaad":"markdown"},"source":{"db810c41":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)","54c39f1d":"df = pd.read_csv('\/kaggle\/input\/commonlitreadabilityprize\/train.csv')","4d5bdf41":"w = df['excerpt'].str.count(' ') + 1\nl = df['excerpt'].str.len()\ndf['avg_word_len'] = l \/ w","17b3f5e9":"df","09add5d4":"from sklearn.linear_model import LinearRegression\nfrom matplotlib import pyplot as plt","efc60e26":"tmp = np.zeros(100)\ntmp.shape","2cb7caf4":"tmp = tmp.reshape(2, 2, -1)\ntmp.shape","38118317":"X = df['avg_word_len'].values\nX = X.reshape(-1, 1)\nX.shape","12a56580":"Y = df['target'].values\nY","463c39fb":"# ajusta los datos a la ecuaci\u00f3n lineal y=ax+b\nreg = LinearRegression().fit(X, Y)","7495682a":"a, b = reg.coef_[0], reg.intercept_\na, b","2b89ce55":"plt.scatter(X, Y, s=1)\nplt.plot(X, a*X+b, 'r')","ccd88cb2":"df['predicted_target'] = a * X + b\ndf","d41f4c30":"from sklearn.model_selection import KFold","8d74a3bc":"kf = KFold(n_splits=5, shuffle=True, random_state=33)\nsplit = list(kf.split(X))","6fbb5b31":"len(split[0][0]), len(split[0][1])","afeae6a1":"for train_index, valid_index in kf.split(X):\n    Xt = X[train_index].reshape(-1, 1)\n    Yt = Y[train_index]\n    reg = LinearRegression().fit(Xt, Yt)\n    a, b = reg.coef_[0], reg.intercept_\n    Xv = X[valid_index]\n    \n    df.loc[valid_index, 'pred'] = a * Xv + b\n    ","61cb8b53":"df","a4927982":"from sklearn.metrics import mean_squared_error","0c20a77b":"mean_squared_error(df['target'], df['pred'], squared=False)","48f57531":"!pip install textstat","f9ba20f3":"!mkdir pip; cd pip; pip download textstat pyphen","8d27e9a9":"!ls pip","a131278f":"import textstat","9ac60610":"def flesch_re(row):\n    flr = textstat.flesch_reading_ease(row['excerpt'])\n    return flr\n\ndf['flesch'] = df.apply(flesch_re, axis=1)","6b315479":"df","e505a7f0":"X = df['flesch'].values\nY = df['target'].values","d3fa176b":"plt.scatter(X, Y, s=1)","5ecc5fb2":"X.shape","b59e91a9":"X = X.reshape(-1, 1)\nreg = LinearRegression()\nreg.fit(X, Y)","84ff7cff":"pred = reg.predict(X)","9d057676":"mean_squared_error(df['target'], pred, squared=False)","ed71e6cb":"reg.coef_[0], reg.intercept_","03208e5d":"# Regresi\u00f3n del \u00edndice Flesch reading ease","bc4cdaad":"# Entrenamiento con 5 folds y predicciones out-of-fold (OOF)"}}