{"cell_type":{"2eb154d1":"code","c2149be5":"code","b66f920b":"code","88a2758c":"code","413cc968":"code","1ad0847e":"code","2cf0d050":"code","8ff646d3":"code","bf5b04f7":"code","a21006d4":"code","7de6e8a8":"code","9387ebae":"code","b482ce0d":"code","fa248fe7":"code","d57d39e4":"code","f313ec6a":"code","553b354e":"code","8b952add":"code","86ccb48a":"code","315c7065":"code","74ae0e5e":"code","fb374568":"code","aea11f2c":"code","15abd2b7":"code","6e1d89db":"code","401e73ef":"code","1cc0f15a":"code","e55557b6":"code","49326211":"code","a4964586":"code","4c0fcac6":"code","de29c822":"code","ca84a07f":"code","30214c7f":"code","5169f5da":"code","bf4b53b3":"code","e9767116":"code","05d74df1":"code","75195880":"code","dc6aed32":"code","bf8b9fdf":"code","b122617f":"code","8cb8b42f":"code","b6ff3703":"code","bbd09f71":"code","86cc3752":"markdown","20dcbc98":"markdown","4ec862c5":"markdown","674c0e08":"markdown","0ecaf286":"markdown","7f88ce61":"markdown","6ed4a38c":"markdown","d3d32550":"markdown","6087de44":"markdown","e9f2a150":"markdown","2bdeb74e":"markdown","bbbcd567":"markdown","c282a825":"markdown","a6ea2333":"markdown","bf91c6b5":"markdown","8a153142":"markdown","e4c99863":"markdown","3f848439":"markdown","51894c4d":"markdown","a6f4fea1":"markdown","cab4a4ce":"markdown","19c92e1f":"markdown","00b17235":"markdown","d274a813":"markdown","7633b13f":"markdown","a4787788":"markdown"},"source":{"2eb154d1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport re","c2149be5":"data = pd.read_csv('..\/input\/master.csv')","b66f920b":"data.head()","88a2758c":"data.isna().sum()","413cc968":"data['country'].unique()","1ad0847e":"len(data['country'].unique())","2cf0d050":"data['country'].value_counts()","8ff646d3":"data['country_year'] = data['country-year'].apply(lambda x: int(re.findall(\"[0-9]+\",x)[0]))","bf5b04f7":"data['country_year']","a21006d4":"## checking if all years and country-year are equal\nset(data['year'] == data['country_year'])","7de6e8a8":"data = data.drop(['country_year'], axis=1)","9387ebae":"data.columns","b482ce0d":"data['age'] = data['age'].replace(regex = {\"years\":''})","fa248fe7":"data['age']","d57d39e4":"data['age'].unique()","f313ec6a":"data['sex'].unique()","553b354e":"data['generation'].unique()","8b952add":"data['generation'].value_counts()","86ccb48a":"data[(data['country'] == 'Albania') & (data['year'] == 1987)].sort_values(by='age')","315c7065":"country_suicide = data.groupby('country').agg('mean')['suicides_no'].sort_values(ascending=False)","74ae0e5e":"country_suicide.values","fb374568":"x = list(country_suicide.keys())\ny = list(country_suicide.values)\nplt.figure(figsize=(12,16))\nplt.barh(x,y)\nplt.show","aea11f2c":"plt.figure(figsize = (8,6))\nx = list(data.groupby(['year']).agg('sum')['suicides_no'].keys())\ny = list(data.groupby(['year']).agg('sum')['suicides_no'].values)\nplt.title(\"Yearly suicides rate\")\nplt.xlabel(\"Years\")\nplt.ylabel(\"suicide no.\")\nplt.bar(x, y)\n#plt.set_xticklabels(tic)\nplt.show()","15abd2b7":"sns.lmplot(x=\"year\", y=\"suicides_no\", data=data)","6e1d89db":"data.groupby('country').agg(['min','max'])['suicides_no'].sort_values(by='max', ascending=False)","401e73ef":"fig, ax = plt.subplots(figsize=(16,16))\ncountry_year_average = data.groupby(['year', 'country']).agg('mean')['suicides_no']\ncountry_year_average.unstack().plot(ax=ax)\ncountry_year_average  = country_year_average.reset_index()\n","1cc0f15a":"country_year_average = country_year_average[country_year_average['suicides_no']>1000]","e55557b6":"country_year_average","49326211":"country_year_average.sort_values(by='suicides_no', ascending=False)","a4964586":"country_year_average['year']","4c0fcac6":"# fig, ax = plt.subplots(figsize=(16,16))\n# data.groupby(['country', 'year']).agg('mean')['suicides_no'].unstack().plot(kind='violin',ax=ax)\n\n#country_year_average = data.groupby(['country', 'year']).agg('mean')['suicides_no']\n#plt.subplots(figsize=(8,8), )\nplt.figure(figsize=(8,8))\ng = sns.FacetGrid(country_year_average, col='year', height= 6, size=4, col_wrap=5)\ng.map(plt.bar, \"country\", \"suicides_no\")\ng.set_xticklabels(rotation=30,fontsize=10)","de29c822":"plt.figure(figsize=(4,8))\nx = list(data.groupby(['age']).agg('sum')['suicides_no'].keys())\ny= list(data.groupby(['age']).agg('sum')['suicides_no'].values)\nplt.figure(figsize=(4,4))\nplt.barh(x,y)\nplt.show","ca84a07f":"sns.countplot(x='sex', data=data)","30214c7f":"count_sex_total = data.groupby(['country','sex']).agg('sum')['suicides_no'].reset_index()\n\nplt.figure(figsize=(8,8))\ng = sns.FacetGrid(count_sex_total, col=\"country\", height=6, size=4, col_wrap=6)\ng.map(plt.bar, \"sex\", \"suicides_no\")\nplt.show()","5169f5da":"plt.figure(figsize=(8,4))\nx = list(data.groupby(['sex']).agg('sum')['suicides_no'].keys())\ny= list(data.groupby(['sex']).agg('sum')['suicides_no'].values)\nsns.barplot(x, y, data=data)\nplt.show()","bf4b53b3":"age_gender_suicides_sum = data.groupby(['sex','age']).agg('sum')['suicides_no'].reset_index()","e9767116":"age_gender_suicides_sum","05d74df1":"plt.figure(figsize=(8,8))\ng = sns.FacetGrid(age_gender_suicides_sum, col='age', height= 6, size=4, col_wrap=3)\ng.map(plt.bar, \"sex\", \"suicides_no\")\ng.set_xticklabels(rotation=30,fontsize=10)","75195880":"plt.figure(figsize=(8,6))\nsns.countplot(x='generation', data=data, order = data['generation'].value_counts().index)\nplt.show()","dc6aed32":"plt.figure(figsize=(8,6))\nsns.countplot(x='generation', data=data, order = data['generation'].value_counts().index, hue='age')\nplt.show()","bf8b9fdf":"data.groupby(['generation']).agg(['sum'])['suicides_no']","b122617f":"plt.figure(figsize=(8,4))\nx = list(data.groupby(['generation']).agg('sum')['suicides_no'].keys())\ny= list(data.groupby(['generation']).agg('sum')['suicides_no'].values)\nsns.barplot(x, y, data=data)\nplt.show()","8cb8b42f":"generation_gender_sum = data.groupby(['generation', 'sex']).agg('sum')['suicides_no'].reset_index()\n\nplt.figure(figsize= (12,4))\ng = sns.FacetGrid(generation_gender_sum, col='sex', height=6, size=4)\ng.map(plt.bar, \"generation\", \"suicides_no\")\ng.set_xticklabels(rotation=90)","b6ff3703":"data.columns","bbd09f71":"for e in set(data['country']):\n    plt.figure(figsize= (8,8))\n    ax = sns.barplot(x=\"country-year\", y=\"gdp_per_capita ($)\", data=data[data['country']==e])\n    for label in ax.xaxis.get_ticklabels():\n        label.set_rotation(30)\n    plt.show()\n    ","86cc3752":"## Average suicide rate for each country.","20dcbc98":"Let's check if country-year and year in our data is same? if country-year contains country name then year then it's not useful to use redundant information.","4ec862c5":"Generation with age doesn't reveal much as generations category are created based on age distribution itself.\n","674c0e08":"## Generation Analysis","0ecaf286":"## Yearly suicides rate analysis","7f88ce61":"## Checking suicides_no by age-group\n","6ed4a38c":">> Russian Federation, United States, Japan has high number of suicides rate.","d3d32550":"There are some 101 countries","6087de44":"## Checking the data","e9f2a150":"## Generation + Age analysis","2bdeb74e":">> Removing \"years\"(string) from values.**","bbbcd567":"In this kernel, I tried to showcase the effects of most of the independent variables on dependent variable(suicide_rate).\n\n1. Countrywise average suicide rate\n2. Yearly suicide rate \n3. Country + gender suicide rate\n4. Sucide rate by gender\n5. Age + gender suicide rate \n6. Generation Analysis\n7. Generation +  Age suicide rate\n8. Generation + Gender suicide rate analysis\n9. GDP per capita for country in every year.","c282a825":">> In 2016 it is very less.\n\n>> After 1990 suicides rate will start increasing.","a6ea2333":"Different age-groups are these -:","bf91c6b5":"## Checking count of both genders in all","8a153142":"As we can see from above output that Russian Federation, USA, Japan has highest number of suicide rates of more than 2k and Russian Federation ","e4c99863":"## Age+Gender suicide rate analysis","3f848439":"## Count of suicides by gender","51894c4d":"## Country+year suicide rate analysis","a6f4fea1":"Generation Analysis -:\n\n> Generation Z : small children(5-14)\n\n> Millenials : Youngesters + smallchildren (5-34)\n\n> Boomers :  Youngsters + Middle_age (25-74)\n\n> Silent: Middle_age (35-75)\n\n> Generation X : Middle_age + youngesters + smallchildren (5-54)\n\n> G.I Generation : Old (55-75)","cab4a4ce":"Hence, from above code we can conclude that it's same. Let's drop country_year as no need .","19c92e1f":">> In Brazil, France, Germany, Mexico, Poland, Russian Federation, Ukraine, United States huge difference between female and male\n","00b17235":"## Country+sex suicide rate analysis","d274a813":"So, we can conclude from above graph -:\n\n1. Generation Z -: small_children has very low chance to suicide\n2. G.I Generation -: old people do but comparatively less\n3. Millenials -: youngsters alone not much\n4. Boomers, Silen -: middle age and youngsters are doing more suicides\n5. generation_x -: all (small children, youngsters, middle age) so has high number.\n","7633b13f":"In the above diagrams, we have plotted countries having suicides rates > 1000 are considered only so, we have Japan, Republic of Korea, Russian Federation, United States. In some years some of the countries doesn't have any suicides rate.","a4787788":"## Plotting only countries having suicides number greater than 1000 with year\n"}}