{"cell_type":{"88d2a6e6":"code","87c63f48":"code","b7a76ba1":"code","2fcccee2":"code","a93a6bac":"code","b8246e1e":"code","5bbe9e06":"code","4837ab30":"code","417c3e19":"code","76f344b4":"code","3f49fa15":"code","a43ada30":"code","6e6e6cb2":"code","32ffabe9":"code","79a37de4":"code","c7af0571":"code","bde2aaab":"code","761301d3":"code","b9f33358":"code","6ab4f482":"markdown","53455b8a":"markdown","903ec061":"markdown","116402fa":"markdown","a9524fa5":"markdown","6493fcd4":"markdown","acdc4600":"markdown","77f6830a":"markdown","16f7b054":"markdown","a7954255":"markdown","89272c45":"markdown","9a6f89e8":"markdown","ad1b8041":"markdown","906c62da":"markdown","31b0d285":"markdown","7f94c447":"markdown","040ded6e":"markdown","57d66924":"markdown","c78dcce1":"markdown","b1403702":"markdown","ec51a921":"markdown","f4413369":"markdown","dd411311":"markdown","c37f42cd":"markdown","a35c2666":"markdown","f9e66aa8":"markdown","c7e8e246":"markdown","809edb8f":"markdown","b93d814d":"markdown","f241807f":"markdown"},"source":{"88d2a6e6":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style(\"darkgrid\")\nimport math\nimport geopandas as gpd","87c63f48":"data_2015 = pd.read_csv('..\/input\/world-happiness\/2015.csv')\ndata_2016 = pd.read_csv('..\/input\/world-happiness\/2016.csv')\ndata_2017 = pd.read_csv('..\/input\/world-happiness\/2017.csv')\ndata_2018 = pd.read_csv('..\/input\/world-happiness\/2018.csv')\ndata_2019 = pd.read_csv('..\/input\/world-happiness\/2019.csv')\n\ndata_2019.head(5)","b7a76ba1":"map_df = gpd.read_file('..\/input\/shapefile\/World_Countries__Generalized_.shp')\n\nmap_df.plot()","2fcccee2":"map_df = map_df.replace({'Russian Federation':'Russia',\n                        'Trinidad and Tobago': 'Trinidad & Tobago',\n                        \"C\u00f4te d'Ivoire\": 'Ivory Coast',\n                        'Congo': 'Congo (Brazzaville)',\n                        'Congo DRC':'Congo (Kinshasa)',\n                        'Palestinian Territory':'Palestinian Territories'})","a93a6bac":"data_2019 = data_2019.rename(index = str, columns = {'Country or region':\"Country\"})\ndf = data_2019[['Country','Score']]\n\ndf.head(5)","b8246e1e":"merged = map_df.set_index('COUNTRY').join(df.set_index('Country'))\n\nmerged.head(5)","5bbe9e06":"print(merged.Score.isnull().sum())","4837ab30":"df = df.set_index('Country').T.to_dict('list')\nupdates = {'Maldives':[5.20],\n          'Oman':[6.853],\n          'Sudan':[4.14],\n          'Djibouti':[4.37],\n          'Angola':[3.80],\n          'Belize':[5.95599985122681]\n          }\ndf.update(updates)\n\ndf","417c3e19":"for i in range (len(merged)):\n    if math.isnan(merged['Score'][i]):\n        if (str(merged['COUNTRYAFF'][i])) in df:\n            merged['Score'][i] = float(df[str(merged['COUNTRYAFF'][i])][0])\n\nmerged.head(5)","76f344b4":"print(merged.Score.isnull().sum())","3f49fa15":"variable = 'Score'\n\nvmin, vmax = 2.853,7.021 ","a43ada30":"fig,ax = plt.subplots(1,figsize = (40,24))\n\nmerged.plot(column = variable, cmap = 'viridis', linewidth = 0.3, ax=ax,edgecolor = '0.5')","6e6e6cb2":"fig,ax = plt.subplots(1,figsize = (40,24))\n\nmerged.plot(column = variable, cmap = 'viridis', linewidth = 0.3, ax=ax,edgecolor = '0.5')\n\nax.axis('off')\n\nax.set_title('World Happiness Score',fontdict = {'fontsize':'40'})\n\n\nsm = plt.cm.ScalarMappable(cmap='viridis',norm = plt.Normalize(vmin = vmin, vmax=vmax))\nsm._A = []\ncbar = fig.colorbar(sm)\n\nmerged.plot(column = variable, cmap = 'viridis', linewidth = 0.3, ax=ax,edgecolor = '0.5')","32ffabe9":"variable = 'Perceptions of corruption'\n\ndf = data_2019[['Country',variable]]\n\nprint(df.head(5))\n\nmerged = map_df.set_index('COUNTRY').join(df.set_index('Country'))\n\ndf = df.set_index('Country').T.to_dict('list')\n\nfor i in range (len(merged)):\n    if math.isnan(merged[variable][i]):\n        if (str(merged['COUNTRYAFF'][i])) in df:\n            merged[variable][i] = float(df[str(merged['COUNTRYAFF'][i])][0])\n\nvmin, vmax = merged[variable].min(),merged[variable].max()\n\nfig,ax = plt.subplots(1,figsize = (40,24))\n\nmerged.plot(column = variable, cmap = 'viridis', linewidth = 0.3, ax=ax,edgecolor = '0.5')\n\nax.axis('off')\n\nax.set_title(variable,fontdict = {'fontsize':'40'})\n\n\nsm = plt.cm.ScalarMappable(cmap='viridis',norm = plt.Normalize(vmin = vmin, vmax=vmax))\nsm._A = []\ncbar = fig.colorbar(sm)\n\nmerged.plot(column = variable, cmap = 'viridis', linewidth = 0.3, ax=ax,edgecolor = '0.5')","79a37de4":"variable = 'Generosity'\n\ndf = data_2019[['Country',variable]]\n\nprint(df.head(5))\n\nmerged = map_df.set_index('COUNTRY').join(df.set_index('Country'))\n\ndf = df.set_index('Country').T.to_dict('list')\n\nfor i in range (len(merged)):\n    if math.isnan(merged[variable][i]):\n        if (str(merged['COUNTRYAFF'][i])) in df:\n            merged[variable][i] = float(df[str(merged['COUNTRYAFF'][i])][0])\n\nvmin, vmax = merged[variable].min(),merged[variable].max()\n\nfig,ax = plt.subplots(1,figsize = (40,24))\n\nmerged.plot(column = variable, cmap = 'viridis', linewidth = 0.3, ax=ax,edgecolor = '0.5')\n\nax.axis('off')\n\nax.set_title(variable,fontdict = {'fontsize':'40'})\n\n\nsm = plt.cm.ScalarMappable(cmap='viridis',norm = plt.Normalize(vmin = vmin, vmax=vmax))\nsm._A = []\ncbar = fig.colorbar(sm)\n\nmerged.plot(column = variable, cmap = 'viridis', linewidth = 0.3, ax=ax,edgecolor = '0.5')","c7af0571":"variable = 'Freedom to make life choices'\n\ndf = data_2019[['Country',variable]]\n\nprint(df.head(5))\n\nmerged = map_df.set_index('COUNTRY').join(df.set_index('Country'))\n\ndf = df.set_index('Country').T.to_dict('list')\n\nfor i in range (len(merged)):\n    if math.isnan(merged[variable][i]):\n        if (str(merged['COUNTRYAFF'][i])) in df:\n            merged[variable][i] = float(df[str(merged['COUNTRYAFF'][i])][0])\n\nvmin, vmax = merged[variable].min(),merged[variable].max()\n\nfig,ax = plt.subplots(1,figsize = (40,24))\n\nmerged.plot(column = variable, cmap = 'viridis', linewidth = 0.3, ax=ax,edgecolor = '0.5')\n\nax.axis('off')\n\nax.set_title(variable,fontdict = {'fontsize':'40'})\n\n\nsm = plt.cm.ScalarMappable(cmap='viridis',norm = plt.Normalize(vmin = vmin, vmax=vmax))\nsm._A = []\ncbar = fig.colorbar(sm)\n\nmerged.plot(column = variable, cmap = 'viridis', linewidth = 0.3, ax=ax,edgecolor = '0.5')","bde2aaab":"variable = 'Healthy life expectancy'\n\ndf = data_2019[['Country',variable]]\n\nprint(df.head(5))\n\nmerged = map_df.set_index('COUNTRY').join(df.set_index('Country'))\n\ndf = df.set_index('Country').T.to_dict('list')\n\nfor i in range (len(merged)):\n    if math.isnan(merged[variable][i]):\n        if (str(merged['COUNTRYAFF'][i])) in df:\n            merged[variable][i] = float(df[str(merged['COUNTRYAFF'][i])][0])\n\nvmin, vmax = merged[variable].min(),merged[variable].max()\n\nfig,ax = plt.subplots(1,figsize = (40,24))\n\nmerged.plot(column = variable, cmap = 'viridis', linewidth = 0.3, ax=ax,edgecolor = '0.5')\n\nax.axis('off')\n\nax.set_title(variable,fontdict = {'fontsize':'40'})\n\n\nsm = plt.cm.ScalarMappable(cmap='viridis',norm = plt.Normalize(vmin = vmin, vmax=vmax))\nsm._A = []\ncbar = fig.colorbar(sm)\n\nmerged.plot(column = variable, cmap = 'viridis', linewidth = 0.3, ax=ax,edgecolor = '0.5')","761301d3":"variable = 'Social support'\n\ndf = data_2019[['Country',variable]]\n\nprint(df.head(5))\n\nmerged = map_df.set_index('COUNTRY').join(df.set_index('Country'))\n\ndf = df.set_index('Country').T.to_dict('list')\n\nfor i in range (len(merged)):\n    if math.isnan(merged[variable][i]):\n        if (str(merged['COUNTRYAFF'][i])) in df:\n            merged[variable][i] = float(df[str(merged['COUNTRYAFF'][i])][0])\n\nvmin, vmax = merged[variable].min(),merged[variable].max()\n\nfig,ax = plt.subplots(1,figsize = (40,24))\n\nmerged.plot(column = variable, cmap = 'viridis', linewidth = 0.3, ax=ax,edgecolor = '0.5')\n\nax.axis('off')\n\nax.set_title(variable,fontdict = {'fontsize':'40'})\n\n\nsm = plt.cm.ScalarMappable(cmap='viridis',norm = plt.Normalize(vmin = vmin, vmax=vmax))\nsm._A = []\ncbar = fig.colorbar(sm)\n\nmerged.plot(column = variable, cmap = 'viridis', linewidth = 0.3, ax=ax,edgecolor = '0.5')","b9f33358":"variable = 'GDP per capita'\n\ndf = data_2019[['Country',variable]]\n\nprint(df.head(5))\n\nmerged = map_df.set_index('COUNTRY').join(df.set_index('Country'))\n\ndf = df.set_index('Country').T.to_dict('list')\n\nfor i in range (len(merged)):\n    if math.isnan(merged[variable][i]):\n        if (str(merged['COUNTRYAFF'][i])) in df:\n            merged[variable][i] = float(df[str(merged['COUNTRYAFF'][i])][0])\n\nvmin, vmax = merged[variable].min(),merged[variable].max()\n\nfig,ax = plt.subplots(1,figsize = (40,24))\n\nmerged.plot(column = variable, cmap = 'viridis', linewidth = 0.3, ax=ax,edgecolor = '0.5')\n\nax.axis('off')\n\nax.set_title(variable,fontdict = {'fontsize':'40'})\n\n\nsm = plt.cm.ScalarMappable(cmap='viridis',norm = plt.Normalize(vmin = vmin, vmax=vmax))\nsm._A = []\ncbar = fig.colorbar(sm)\n\nmerged.plot(column = variable, cmap = 'viridis', linewidth = 0.3, ax=ax,edgecolor = '0.5')","6ab4f482":"**That's all for this kernel. Thank you for viewing!!**","53455b8a":"# **Importing Libraries and Preparing Datasets**","903ec061":"Beautiful! Our world map is now complete. Notice that countries where we have no data, such as Antarctica, North Korea, and Cuba, are depicted as white, as the NaN values are not taken into consideration in the cmap scale.","116402fa":"We see the opposite effect of the generosity graph here, as most of the world is above average in terms of freedom in life choices. This is an interesting trend again, as freedom does not directly correlate to happiness either. Also, we see less of the similarities between bordering countries, as evident in Africa, where one country could have the color purple and the next could be light green. This contrasts suggests that freedom in life choices is very muuch dependent on individual country's jurisdictions and governments, rather than geographic locations, as hypothesized earlier regarding happiness. But again, following the theme from the last map, it is interesting how again, an unmaterialistic value, such as freedom ,is not a great indicator of happiness.","a9524fa5":"Now that you know how to plot heatmaps using maps, I will be doing a couple other visualizations using the World Happiness Data. I will include my analysis of the graphs below it. (Disclaimer: I will not be inlcuding the added in data)","6493fcd4":"Also, to simplify the data a little, I will create a new Dataframe with only the country names and their happiness score, as we will be visualizing that first. I will also be renaming one of the columns to make it easier to call on later on.","acdc4600":"Woah. That's a lot of NaN values! Let's handle that quickly. As you can see, there are many cases where territories and colonies are listed on the world map, but don't have a happiness index as they fit in with other countries, such as the American Samoa. Luckily, the map_df gave a \"Country Affilation\", which helps us handle many of these missing values.","77f6830a":"First, I want to create a dictionary, letting the key be the country name and the key values being the happiness scores. I will also be appending several extra countries to the dictionary, since their information were not included in the 2019 dataset and their data were taken from previous happiness reports. These countries include:\n\n* Maldives (2019)\n* Oman (2016)\n* Sudan (2017)\n* Djibouti (2014)\n* Angola (2017)\n* Belize (2017)","16f7b054":"**Please upvote if you find this helpful and comment any improvements or questions! Feel free to check out some of my other notebooks!**","a7954255":"Now for the fun part ... the graphing. First let us define a couple variables that will be helpful later on. Our \"variable\" variable will be the data we want to represent in the world map, using different colors, and the vmin and vmax variables will represent the maximum and minimum values represented in our \"variable\" data.","89272c45":"Great! Now let's merge the map_df dataframe with the world happiness score dataframe. ","9a6f89e8":"For the \"map\", we will have to import a shapefile ('.shp'). This can be downloaded from various web sources online. I found the world map shapefile from [here](https:\/\/hub.arcgis.com\/). Just upload the zip file into the Kaggle input section, and then use the geopands read_file function to import the shp file, similar to how we did for the .csv files.","ad1b8041":"Plotting graphs for EDAs are a common thing in machine learning and data science tasks and using world maps as EDAs takes this one step further. I will be using Geopandas in order to show how to plot maps from data, depicting the data in variations of colors, as well as showing what we can learn from these maps about the world. In here you will find:\n\n* Detailed Explanations On How To Create Map Graphs\n* Sample Code and Walkthroughs Using the World Happiness Data\n\n![](https:\/\/miro.medium.com\/max\/3720\/1*HevTonUoRkTNolFPO2P8Kw.png)\n\n","906c62da":"The map looks great already! But there are a couple more things we can add. First off, I will remove the axis and grids, as they don't provide any important information to this graph. Also I will add a quick title, as well as a scale on the side of the map. This scale will help viewers distinguish the color differences on the graph and help with understandability and readability. ","31b0d285":"# **What Does This Tell Us**","7f94c447":"Wow! Looks like most of the world has a high sense of corruption! It is interesting to see how from America, to South America, to Africa, to even Russia, the color schemes are very similar, and only select countries - Canada, Greenland, New Zealand - have low levels of corruption. It seems obvious that corruption is not a good factor for determining happiness, as all the countries are struggling in terms of corruption. It is interesting to note how the Nordic Countries continue to maintain the lowest levels of corruption, similar to how to have extremely high happiness scores. Again the Northern countries seem to excel in low levels of corruption, as they did with high levels of happiness.","040ded6e":"Analyzing this map can show us multiple different things. First off, we can see how there is a lot of missing data specfically around the Oceania and Pacific Ocean region, which could be a focus for the World Happiness Index Report in future studies. Also we notice that the bulk of the happiest countries are located in the Northern Hemisphere, centered around North America and Northern Europe. Maybe colder weather and Northern environment can be an indication or hint as to how to improve happiness among countries as a whole. On the other hand, we notice the unhappiest countries are located in the Southern Hemisphere, centralized around Africa, which could be a focus for humanitarian efforts in the future.\n\nThere are also some anomolies that can noted here. First off, we notice that regions tend to share similar happiness scores, as bordering countries typically have very similar color schemes. Australia, though, is an exception, as it is by far the happiness country about of Oceania, Asia, and Africa. Likewise, we can notice heavy distinctions in the Middle East, with Saudi Arabia and Oman being a vastly lighter color than their neighbors, Yemen, Jordan, Iraq, etc. \n\nAll in all, though, this map can provide helpful insight on how geography and environment may affect happiness around the world, as we continue to study it.","57d66924":"So far, this is the most similar representation of the World Happiness Map as shown above, but many countries continue to excel, or at least be above average. Again, this is a poor seperator of happiness, because countries in Africa and South Asia, which tend to be underdeveloped, have poor showings in terms of life expectancy. Either way though, life expectancy seems like defenitely an important consideration for the happiness score, though greater research into the region's healthcare and infrastructure could shed some more light on the issue.","c78dcce1":"Surprisingly, this is the most similar to the happiness score. This would show that money and GDP is the greatest indicator of happiness within a country, which is an interesting find. A greater GDP could just indicate better infrastructure and development in the country so that could be a heavy indicator of happiness as well. Either way, though, GDP seems like a good board generalizer, but on a closer level, other factors may come into play more, as America is ranked higher here than the Nordic Countries, even though the later clearly ranks higher than the US in happiness levels.","b1403702":"# **Some More Plots**","ec51a921":"# **Plotting The World Map**","f4413369":"Next, we will define our subplots, figure size, and plot our merged dataframe. We will define the \"column\" paramater to the \"variable\" variable, and you can adjust the edge color and line width to your liking. I chose to use the cmap \"viridis\" because it produces colors from yellow to purple, with yellow representing happier countries and purple representing less happy countries.","dd411311":"We will also have to load in the data. I will be using the World Happiness Index Reports as my data, so let's load those in first.","c37f42cd":"First, let's import several libraries that will help us. Most importantly, we have to import the Geopandas library, which will help us create a pandas Dataframe from \"map data\".","a35c2666":"Looks like most of our NaN values have been taken care of! Of course there are still a good amount of countries who weren't included in the 2019 World Happiness Report, or previous reports, so they will remain as NaN in our dataset. ","f9e66aa8":"Finally, I will create a simple for loop, which checks if the score is NaN, and will replace it if the Country Affilation is within the dictionary. ","c7e8e246":"This is the full list of unincluded countries: \n* Samoa\n* Tonga\n* Fiji\n* Antigua and Barbuda\n* Aruba\n* Bahamas\n* Barbados\n* Cuba \n* Dominica\n* Grenada\n* Guyana\n* Saint Kitts and Nevis\n* Saint Lucia\n* Saint Vincent and the Grenadines\n* Suriname\n* Cabo Verde\n* Guinea-Bissau\n* Sao Tome and Principe\n* Eswatini\n* Seychelles\n* Equatorial Guinea\n* Kiribati\n* Eritrea\n* Andorra\n* Liechtenstein\n* Monaco\n* San Marino\n* Vatican City\n* Timor-Leste\n* Nauru\n* Papua New Guinea\n* Solomon Islands\n* Tuvalu\n* Vanuatu\n* Brunei Darussalam\n* North Korea\n* Marshall Islands\n* Micronesia\n* Palau","809edb8f":"There's our map! But first of, we need to standardize a couple names across the two Dataframes. There are several discrepencies on how certain countries are named, such as the \"Russian Federation\" instead of \"Russia\", or \"Trinidad and Tobago\" versus \"Trinidad & Tobago\". Let's handle this problem first.","b93d814d":"# **Plotting Maps Using World Happiness Index**","f241807f":"We see an interesting trend here, as even the Nordic Countries are mediocre in terms of generosity compared to the other states. Interestingly enough, we see the South East Asian countries excelling in terms of generosity, despite falling very low in terms of the happiness index. It is interesting how generosity does not correlate directly to happiness. It seems like the old saying, on how happiness isn't dictated by material needs, may not be scientifically true, as the world's happiest countries have mediocre generosity. "}}