{"cell_type":{"401f18e1":"code","e9c3da22":"code","ea390012":"code","292ebf1b":"code","769a7fe0":"code","8fcc90c5":"code","689beaa2":"code","94fc0d87":"code","0df57c48":"code","e0eee266":"code","2d8c6d09":"code","e61adde7":"code","93ee11f9":"code","5ed8f4f3":"code","50e483b7":"code","fe34ccd7":"code","20885420":"code","008b9a39":"code","360714f5":"code","79f967c8":"code","b56932d4":"code","08b152f8":"code","f7e245f6":"code","f323663d":"code","b278e879":"code","73d3f40f":"code","69036808":"code","5e45eff7":"code","28b9117d":"code","1da2f550":"code","4da95fe3":"code","98305ca4":"markdown","f3a865fd":"markdown","cd719e75":"markdown","a979a41f":"markdown","6af6606f":"markdown","b89a09f1":"markdown","15695bcb":"markdown","472fcc6b":"markdown","b7430896":"markdown","29dcdc06":"markdown"},"source":{"401f18e1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e9c3da22":"import numpy as np\nimport pandas as pd\nimport re\nfrom nltk.corpus import stopwords\nfrom nltk.stem.porter import PorterStemmer\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score","ea390012":"import nltk\nnltk.download('stopwords')","292ebf1b":"# loading the dataset to a pandas DataFrame\ndataset = pd.read_csv('\/kaggle\/input\/fake-news\/train.csv')\ndataset.shape","769a7fe0":"dataset.head()","8fcc90c5":"#missing values in the dataset\ndataset.isnull().sum()","689beaa2":"# replacing the null values with empty string\ndataset = dataset.fillna('')","94fc0d87":"# merging the author name and news title\ndataset['content'] = dataset['author']+' '+ dataset['title']","0df57c48":"print(dataset['content'])","e0eee266":"# separating the data & label\nX = dataset.drop(columns='label', axis=1)\nY = dataset['label']","2d8c6d09":"print(X)\n","e61adde7":"print(Y)","93ee11f9":"port_stem = PorterStemmer()","5ed8f4f3":"def stemming(content):\n    stemmed_content = re.sub('[^a-zA-Z]',' ',content)\n    stemmed_content = stemmed_content.lower()\n    stemmed_content = stemmed_content.split()\n    stemmed_content = [port_stem.stem(word) for word in stemmed_content if not word in stopwords.words('english')]\n    stemmed_content = ' '.join(stemmed_content)\n    return stemmed_content","50e483b7":"dataset['content'] = dataset['content'].apply(stemming)","fe34ccd7":"print(dataset['content'])","20885420":"#separating the data and label\nX = dataset['content'].values\nY = dataset['label'].values","008b9a39":"print(X)","360714f5":"print(Y)","79f967c8":"Y.shape","b56932d4":"# converting the textual data to numerical data\nvectorizer = TfidfVectorizer()\nvectorizer.fit(X)\n\nX = vectorizer.transform(X)","08b152f8":"print(X)","f7e245f6":"X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.3, stratify=Y, random_state=2)","f323663d":"model = LogisticRegression()","b278e879":"model.fit(X_train, Y_train)","73d3f40f":"# accuracy score on the training data\nX_train_prediction = model.predict(X_train)\ntraining_data_accuracy = accuracy_score(X_train_prediction, Y_train)","69036808":"print('Accuracy score of the training data : ', training_data_accuracy)","5e45eff7":"# accuracy score on the test data\nX_test_prediction = model.predict(X_test)\ntest_data_accuracy = accuracy_score(X_test_prediction, Y_test)","28b9117d":"print('Accuracy score of the test data : ', test_data_accuracy)","1da2f550":"X_new = X_test[2]\n\nprediction = model.predict(X_new)\nprint(prediction)\n\nif (prediction[0]==0):\n  print('The news is Real')\nelse:\n  print('The news is Fake')","4da95fe3":"print(Y_test[2])","98305ca4":"***Fake news generally defined as misleading news often constructed with an aim to create a sense of belief and to mislead people to\nbelieve a particular incident. Fake news gets its massive wings through social involvement. We aim to design a system which would probably\nuse concepts like Natural Language Processing (NLP), Data Mining and Machine Learning and prediction classifiers like Logistic regression classifier which will predict the truthfulness or fakeness of news.***","f3a865fd":"\n***Gathering Data***","cd719e75":"***Splitting the dataset to training & test data***","a979a41f":"***Training the Model: Logistic Regression***","6af6606f":"*** Testing the  Predictive System ***","b89a09f1":"****Importing All Necessary API****","15695bcb":"Stemming******","472fcc6b":"***Data Cleaning : Removing Stop Words, Unnecessary Characters and Stemming***","b7430896":"***Evaluation***","29dcdc06":"***Encoding words to numbers***"}}