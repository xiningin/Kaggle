{"cell_type":{"693ab590":"code","9d5c1d7f":"code","36db0d17":"code","30cca237":"code","fd274032":"code","692ae13e":"code","8cd51538":"code","c00f9c69":"code","ea8112d1":"code","044cb212":"code","de638e2a":"code","4d5e9654":"code","dd26cace":"code","0d4b6ace":"code","c41ba06a":"code","2662165e":"code","5b15fd7b":"code","449cab56":"code","da1f8cec":"code","c4c2645b":"code","b5f9a068":"code","09f23b6c":"code","045dffc0":"markdown","15b5a7b3":"markdown"},"source":{"693ab590":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9d5c1d7f":"df = pd.read_csv(\"\/kaggle\/input\/hotel-booking-demand\/hotel_bookings.csv\")\ndf","36db0d17":"df.isnull().sum()","30cca237":"df['reserved_room_type'] = df['reserved_room_type'].map({'A':0,'B':1,'C':2,'D':3,'E':4,'F':5,'G':6,'H':7,'P':8,'L':9})","fd274032":"df['arrival_date_year'].value_counts()","692ae13e":"df['deposit_type'] = df['deposit_type'].map({'No Deposit':0,'Non Refund':1,'Refundable':2})","8cd51538":"df['hotel'] = df['hotel'].map({'Resort Hotel':0,'City Hotel':1})","c00f9c69":"df['arrival_date_month'] = df['arrival_date_month'].map({'January':0,'February':1,'March': 2,'\u00c1pril':3,'May':4,'June':5,'July':6,'August':7,'September':8,'October':9,'November':10,'December':11})","ea8112d1":"df['total'] = df['stays_in_week_nights'] + df['stays_in_weekend_nights']\ndf","044cb212":"df.info()","de638e2a":"corrmat = df.corr()\ntop_corr_features = corrmat.index\nplt.figure(figsize=(20,20))\ng=sns.heatmap(df[top_corr_features].corr(),annot=True,cmap=\"RdYlGn\")\n","4d5e9654":"\nplt.figure(figsize=(15,10))\nsns.countplot(x='adults', data = df,\n              order=pd.value_counts(df['adults']).index, palette='YlOrBr_r')\nplt.title('Number of Adults logging in', weight='bold')\nplt.xlabel('Count of Adults', fontsize=10)\nplt.ylabel('Number', fontsize=10)","dd26cace":"sns.boxplot(x='is_canceled',y='lead_time',data=df)","0d4b6ace":"df['deposit_type'].value_counts()","c41ba06a":"s = sns.countplot(x='deposit_type', hue='is_canceled', data=df)\ns.set_title(\"Hotels\")\nplt.show(s)","2662165e":"s = sns.countplot(x='adults', hue='is_canceled', data=df)\ns.set_title(\"Hotels\")\nplt.show(s)","5b15fd7b":"s = sns.countplot(x='hotel', hue='is_canceled', data=df)\ns.set_title(\"Hotels\")\nplt.show(s)","449cab56":"s = sns.countplot(x='distribution_channel', hue='is_canceled', data=df)\ns.set_title(\"Hotels\")\nplt.show(s)","da1f8cec":"data = df[['hotel','lead_time','stays_in_week_nights','stays_in_weekend_nights','adults','reserved_room_type','adr'\n                          ,'is_canceled']]","c4c2645b":"y = data[\"is_canceled\"]\nx = data.drop(labels = [\"is_canceled\"],axis = 1)","b5f9a068":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.33, random_state=42)","09f23b6c":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import  cross_val_score,GridSearchCV\n\nmodel = RandomForestClassifier(random_state=15)\nmodel.fit(x_train, y_train)\ny_pred = model.predict(x_test)\n\n# calculating the classification accuracies\nprint(\"Training Accuracy :\", model.score(x_train, y_train))\nprint(\"Testing Accuracy :\", model.score(x_test, y_test))","045dffc0":"Lead time relation with the cancellation","15b5a7b3":"Finding out the correlalation in the data"}}