{"cell_type":{"2e7fb6d8":"code","05358f54":"code","7f933e11":"code","e4609605":"code","66239ad8":"code","9ec52ef0":"code","0d377573":"code","df358c93":"code","d9a8c552":"code","6eedcfa8":"code","86a2f5fc":"code","20d8c7e5":"code","253a9c1f":"code","0a5805bd":"code","717c3ea6":"code","98cda0c4":"code","eabdcdab":"code","4968a712":"code","36bfbbc3":"code","cb8cc57d":"code","cd56cfee":"code","3dd533a8":"code","1e07dd72":"code","68a7f1a4":"code","c46313a0":"code","18cefb61":"code","08b8a078":"code","0292f145":"code","a2559f3a":"code","6bd920ad":"code","bda2413c":"code","a4880ebb":"code","4363404d":"code","f439cc33":"code","62ef7272":"code","03396ca1":"markdown","f7284e7e":"markdown","6513305b":"markdown","c8125ede":"markdown","b71068aa":"markdown","cae39603":"markdown","c786b1c4":"markdown"},"source":{"2e7fb6d8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.offline as py\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","05358f54":"nRowsRead = 1000 # specify 'None' if want to read whole file\ndf = pd.read_csv('..\/input\/cusersmarildownloadsapoyoscsv\/apoyos.csv', delimiter=';', encoding = \"ISO-8859-1\", nrows = nRowsRead)\ndf.dataframeName = 'apoyos.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')\ndf.head()","7f933e11":"df.isnull().sum()","e4609605":"#Code from Gabriel Preda\n#plt.style.use('dark_background')\ndef plot_count(feature, title, df, size=1):\n    f, ax = plt.subplots(1,1, figsize=(4*size,4))\n    total = float(len(df))\n    g = sns.countplot(df[feature], order = df[feature].value_counts().index[:20], palette='Reds')\n    g.set_title(\"Number and percentage of {}\".format(title))\n    if(size > 2):\n        plt.xticks(rotation=90, size=8)\n    for p in ax.patches:\n        height = p.get_height()\n        ax.text(p.get_x()+p.get_width()\/2.,\n                height + 3,\n                '{:1.2f}%'.format(100*height\/total),\n                ha=\"center\") \n    plt.show()","66239ad8":"df.columns.tolist()","9ec52ef0":"plot_count(\" Cantidad_personas \", \"Number of People\", df,4)","0d377573":"plot_count(\"Entregado\", \"Delivered\", df,4)","df358c93":"plot_count(\"Institucion_donde_se_entrega\", \"Institution where it is delivered\", df,4)","d9a8c552":"plot_count(\"Unidad_de_medidad\", \"Measure Unit\", df,4)","6eedcfa8":"plot_count(\"Agencia_Organizacion\", \"Organization Agency\", df,4)","86a2f5fc":"plot_count(\"Insumo\", \"Supplies\", df,4)","20d8c7e5":"plot_count(\"Disponible \", \"Avaiable\", df,4)","253a9c1f":"plot_count(\"Fecha_de_entrega\", \"Month of Delivery\", df,4)","0a5805bd":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/parts-of-speech\n\nplt.figure(figsize=(10,5))\nsns.countplot(y=\"Entregado\",data=df,\n             facecolor=(0,0,0,0),linewidth=5,\n             edgecolor=sns.color_palette(\"RdBu\"))\nplt.title('Delivered Supplies',\n         fontsize=15);","717c3ea6":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/parts-of-speech\n\nplt.figure(figsize=(20,10))\nsns.countplot(y=\"Institucion_donde_se_entrega\",data=df,\n             facecolor=(0,0,0,0),linewidth=5,\n             edgecolor=sns.color_palette(\"rainbow\"))\nplt.title('Institution where its Delivered' ,\n         fontsize=15);","98cda0c4":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/parts-of-speech\n\nplt.figure(figsize=(10,5))\nsns.countplot(y=\"Fecha_de_entrega\",data=df,\n             facecolor=(0,0,0,0),linewidth=5,\n             edgecolor=sns.color_palette(\"Reds\"))\nplt.title('Month of Delivery',\n         fontsize=15);","eabdcdab":"fig = px.bar(df, x= \"Fecha_de_entrega\", y= \"Insumo\", color_discrete_sequence=['crimson'], title=\"Month of Supplies Delivery\")\nfig.show()","4968a712":"fig = px.bar(df, x= \"Fecha_de_entrega\", y= \"Entregado\", color_discrete_sequence=['#2B3A67'], title=\"Month of Delivery\")\nfig.show()","36bfbbc3":"#Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\ncolor = plt.cm.RdBu(np.linspace(0,1,20))\ndf[\"Insumo\"].value_counts().sort_values(ascending=False).head(20).plot.pie(y=\"Entregado\",colors=color,autopct=\"%0.1f%%\")\nplt.title(\"Delivered Supplies\")\nplt.axis(\"off\")\nplt.show()","cb8cc57d":"import plotly.offline as pyo\nimport plotly.graph_objs as go\nlowerdf = df.groupby('Institucion_donde_se_entrega').size()\/df['Insumo'].count()*100\nlabels = lowerdf.index\nvalues = lowerdf.values\n\n# Use `hole` to create a donut-like pie chart\nfig = go.Figure(data=[go.Pie(labels=labels, values=values,marker_colors = px.colors.sequential.speed, hole=.6)])\nfig.show()","cd56cfee":"fig = px.pie(df,\n             values=\" Cantidad_personas \",\n             names=\"Departamento \",\n             template=\"seaborn\")\nfig.update_traces(rotation=90, pull=0.05, textinfo=\"percent+label\")\nfig.show()","3dd533a8":"#Code from Nitin Datta https:\/\/www.kaggle.com\/nitindatta\/eda-with-r3-id\/comments\n\nfig,ax=plt.subplots(figsize=(18,6))\nsns.set_style('dark')\nplt.subplot(1, 2, 1)\ng1=sns.countplot(df['Fecha_de_entrega'],palette='rocket', hue = df['Entregado'],**{'hatch':'\/','linewidth':3})\ng1.set_title(\"Fecha_de_entrega\")\n\nplt.subplot(1, 2, 2)\ng2=sns.countplot(df['Disponible '],palette='rocket',hue= df['Entregado'],**{'hatch':'\/','linewidth':3})\ng2.set_title(\"Disponible \")","1e07dd72":"# Count Plot\nplt.style.use(\"classic\")\nplt.figure(figsize=(10, 8))\nsns.countplot(df['Disponible '], palette='flag', **{'hatch':'\/','linewidth':3})\nplt.xlabel(\"Disponible \")\nplt.ylabel(\"Count\")\nplt.title(\"Avaiable Supplies\")\nplt.xticks(rotation=45, fontsize=8)\nplt.show()","68a7f1a4":"# Count Plot\nplt.style.use(\"classic\")\nplt.figure(figsize=(10, 8))\nsns.countplot(df['Unidad_de_medidad'], palette='Pastel1', **{'hatch':'\/','linewidth':3})\nplt.xlabel(\"Unidad_de_medidad\")\nplt.ylabel(\"Count\")\nplt.title(\"Measure Units\")\nplt.xticks(rotation=45, fontsize=8)\nplt.show()","c46313a0":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.Insumo)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='GnBu', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","18cefb61":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.Municipio)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set2', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","08b8a078":"#Codes by Pooja Jain https:\/\/www.kaggle.com\/jainpooja\/av-guided-hackathon-predict-youtube-likes\/notebook\n\ntext_cols = ['Departamento ', 'Institucion_donde_se_entrega', 'Insumo']\n\nfrom wordcloud import WordCloud, STOPWORDS\n\nwc = WordCloud(stopwords = set(list(STOPWORDS) + ['|']), random_state = 42)\nfig, axes = plt.subplots(2, 2, figsize=(20, 12))\naxes = [ax for axes_row in axes for ax in axes_row]\n\nfor i, c in enumerate(text_cols):\n  op = wc.generate(str(df[c]))\n  _ = axes[i].imshow(op)\n  _ = axes[i].set_title(c.upper(), fontsize=24)\n  _ = axes[i].axis('off')\n\n_ = fig.delaxes(axes[3])","0292f145":"# categorical features with missing values\ncategorical_nan = [feature for feature in df.columns if df[feature].isna().sum()>0 and df[feature].dtypes=='O']\nprint(categorical_nan)","a2559f3a":"# replacing missing values in categorical features\nfor feature in categorical_nan:\n    df[feature] = df[feature].fillna('None')","6bd920ad":"df[categorical_nan].isna().sum()","bda2413c":"import plotly.express as px\n\nfig = px.scatter(df, x=\"Fecha_de_entrega\", y=\"Insumo\", color=\"Departamento \", title='Month of Supplies Delivery')\nfig.show()","a4880ebb":"from sklearn.preprocessing import LabelEncoder\n\n#fill in mean for floats\nfor c in df.columns:\n    if df[c].dtype=='float16' or  df[c].dtype=='float32' or  df[c].dtype=='float64':\n        df[c].fillna(df[c].mean())\n\n#fill in -999 for categoricals\ndf = df.fillna(-999)\n# Label Encoding\nfor f in df.columns:\n    if df[f].dtype=='object': \n        lbl = LabelEncoder()\n        lbl.fit(list(df[f].values))\n        df[f] = lbl.transform(list(df[f].values))\n        \nprint('Labelling done.')","4363404d":"df = pd.get_dummies(df)","f439cc33":"fig = px.treemap(df, path=['Departamento '], values=' Cantidad_personas ',\n                  color=' Cantidad_personas ', hover_data=['Departamento '],title=\"Measure Units of the Supplies\",\n                  color_continuous_scale='RdBu')\nfig.show()","62ef7272":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Mar\u00edlia Prata, not a DS. Stick around, I will be right back. @mpwolke' )","03396ca1":"#COVID-19 and opportunities for international cooperation in health\n\nThe pandemic has proven to be a problem that can profoundly impact the global economy: trillions of dollars have evaporated from the world's stock exchanges.\n\nGovernments had to open their coffers and spend on health services, financial aid companies and workers . The G20 promised to inject USD 4.8 trillion into the global economy. Countries had to deal with a complex profile of health problems, most of them determined or conditioned by the immense socioeconomic inequality.\n\nIn a scenario of greater vulnerability, where diseases go beyond borders countries, globalizing the health risks, the subregional level, linked to integration initiatives, presents great opportunities for cooperation in health. \n\nBetween 2008 and 2019, South America was an example of cooperation in health, during the existence of the Union of South American Nations (UNASUR). As part of the highest governance structure of this regional integration initiative, there was the South American Health Council made up of the 12 Ministers of Health of the region. \nhttps:\/\/www.scielo.br\/pdf\/csp\/v36n4\/1678-4464-csp-36-04-e00066920.pdf","f7284e7e":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcSMDqIp_MH47_JgDHsWwrXO1yAPvkBiHxWOKw&usqp=CAU)pt-br.facebook.com","6513305b":"#The Label Encoding is necessary to make the treemap.","c8125ede":"#Only after the missing values are removed we can make the scatter below.","b71068aa":"#I had to write tolist to find out which columns have spaces (after\/before).","cae39603":"#Categorical features(handling missing data)","c786b1c4":"#Label Encoding"}}