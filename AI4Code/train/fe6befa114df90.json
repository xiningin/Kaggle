{"cell_type":{"66ccb9be":"code","536ee0a0":"code","a5924975":"code","7f0a97b3":"code","c118eb12":"code","59c2be45":"code","31e45c7a":"code","09f13907":"code","d325ba67":"code","f195f124":"code","91ac4f7b":"code","06ab6f40":"code","a24f620b":"code","52fed310":"code","932414ca":"code","748e565e":"code","34f7bad3":"code","9fbb08c6":"code","0ff24ac4":"code","bc1455d4":"code","2c87429f":"code","f0b51a1c":"code","d9c3c042":"code","4d493e0a":"code","6da98a26":"code","ee2b0992":"code","5d65475d":"code","4b74167e":"code","4f05df3b":"code","02f32ab2":"code","76f27a38":"code","0204af82":"code","714818cc":"code","4f38c8ae":"code","8d2d4f96":"code","817ac45b":"code","c2b86fbe":"code","876a02c4":"code","c463707f":"code","be95bd1c":"code","bf90f7a3":"code","1f0aa058":"code","5a8968cd":"code","99c5b080":"code","b42bc637":"code","0b0303d7":"code","0bc28930":"code","134baef5":"code","2a9517f3":"code","2fc0bd29":"code","3f37a2b9":"code","84ffe4cf":"code","18d2d188":"code","8074be64":"code","d085c86c":"code","f281d036":"markdown","15b7f140":"markdown","feff725c":"markdown","e1138e7e":"markdown","8d0d02b2":"markdown","d0660211":"markdown","20aa5143":"markdown","26086716":"markdown","d5540ce6":"markdown","e32d9477":"markdown","9d8455ca":"markdown","349e86f4":"markdown","e2b2736f":"markdown","45fa3fa9":"markdown","68a77cf5":"markdown","7a649bd6":"markdown","8d7abc99":"markdown","c91f5c35":"markdown","bb399859":"markdown","28f85cfe":"markdown"},"source":{"66ccb9be":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n%pip install mglearn\nimport mglearn\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","536ee0a0":"import warnings\nwarnings.filterwarnings('ignore')","a5924975":"data  = [\n    {'note': 85, 'kardesh': 3, 'ders': 'math'},\n    {'note': 75, 'kardesh': 3, 'ders': 'bio'},\n    {'note': 65, 'kardesh': 1, 'ders': 'eng'},\n    {'note': 85, 'kardesh': 3, 'ders': 'math'},\n    {'note': 60, 'kardesh': 2, 'ders': 'eng'}\n]","7f0a97b3":"from sklearn.feature_extraction import DictVectorizer","c118eb12":"vek = DictVectorizer(sparse = False, dtype=int)","59c2be45":"vek.fit_transform(data)","31e45c7a":"vek.get_feature_names()","09f13907":"vek = DictVectorizer(sparse = True, dtype=int)\nX = vek.fit_transform(data)","d325ba67":"pd.DataFrame(X.toarray(), columns = vek.get_feature_names())","f195f124":"data = ['hava iyi',\n      'iyi insan',\n      'hava bozuk'\n     ] ","91ac4f7b":"from sklearn.feature_extraction.text import CountVectorizer\nvec = CountVectorizer()","06ab6f40":"X = vec.fit_transform(data)","a24f620b":"pd.DataFrame(X.toarray(), columns = vec.get_feature_names())","52fed310":"x = np.array([1,2,3,4,5])\ny = np.array([5,3,1,2,7])","932414ca":"plt.scatter(x,y)","748e565e":"from sklearn.linear_model import LinearRegression\nreg = LinearRegression()","34f7bad3":"X = x.reshape(-1, 1)\nreg.fit(X,y)","9fbb08c6":"y_pred = reg.predict(X)\nplt.scatter(x,y)\nplt.plot(x,y_pred)","0ff24ac4":"from sklearn.preprocessing import PolynomialFeatures","bc1455d4":"pol = PolynomialFeatures(degree=3, include_bias=False) # x larin ustunu ne qeder olmaasini isdediyimiz say degreedi","2c87429f":"X2 = pol.fit_transform(X)\nX2","f0b51a1c":"reg.fit(X2,y)\ny_pred = reg.predict(X2)\nplt.scatter(x,y)\nplt.plot(x,y_pred)","d9c3c042":"mglearn.plots.plot_scaling()","4d493e0a":"from sklearn.pipeline import make_pipeline\nmodel = make_pipeline(PolynomialFeatures(degree=3),\n                      LinearRegression())","6da98a26":"model.fit(X,y)\nprint(y)\nprint(model.predict(X))","ee2b0992":"from sklearn.datasets import load_iris\niris = load_iris()\nX = iris.data\ny = iris.target","5d65475d":"from sklearn.neighbors import KNeighborsClassifier","4b74167e":"model = KNeighborsClassifier(n_neighbors = 1)\nmodel.fit(X,y)","4f05df3b":"model.score(X,y)","02f32ab2":"from sklearn.model_selection import train_test_split\nX_train,X_test, y_train, y_test = train_test_split(X,y,random_state=0, train_size=0.5)","76f27a38":"model.fit(X_train,y_train)","0204af82":"model.score(X_test,y_test) # 50 \/50 ye bolende 0.9066666666666666","714818cc":"mglearn.plots.plot_cross_validation()","4f38c8ae":"from sklearn.model_selection import cross_val_score","8d2d4f96":"cross_val_score(model,X,y,cv=5)","817ac45b":"mglearn.plots.plot_grid_search_overview()","c2b86fbe":"mglearn.plots.plot_pca_illustration()","876a02c4":"mglearn.plots.plot_kmeans_algorithm()","c463707f":"mglearn.plots.plot_kmeans_boundaries()","be95bd1c":"mglearn.plots.plot_linear_regression_wave()","bf90f7a3":"df = pd.DataFrame({\"G1\": [5,5,7,15,6], \"G2\": [6,5,8,14,10],\"G3\": [6,6,10,15,10,],\"studytime\": [2,2,2,3,2],\"failures\": [0,0,3,0,0],\"absences\": [6,4,10,2,4],\"age\": [18,17,15,15,16]})\ndf","1f0aa058":"df.rename(columns = {'G3': 'Final'}, inplace = True)","5a8968cd":"X = df.drop('Final',axis=1)\ny=df['Final'].values","99c5b080":"X_train,X_test, y_train, y_test = train_test_split(X,y, test_size=0.25,random_state=0,)","b42bc637":"from sklearn.linear_model import LinearRegression\nLR = LinearRegression()\nLR.fit(X_train,y_train)","0b0303d7":"X_test","0bc28930":"LR.score(X_test,y_test)","134baef5":"print(f'K nin qiymeti x in yanindaki: {LR.coef_}')\nprint(f'b nin qiymeti y le kesishen: {LR.intercept_}')\n","2a9517f3":"from sklearn.datasets import load_boston\nboston = load_boston()","2fc0bd29":"print(boston['DESCR'])","3f37a2b9":"mglearn.plots.plot_animal_tree()","84ffe4cf":"# sk learn ilk budama emelyatini icra edir son budamani icra elemir","18d2d188":"mglearn.plots.plot_binary_confusion_matrix()","8074be64":"mglearn.plots.plot_confusion_matrix_illustration()","d085c86c":"mglearn.plots.plot_knn_classification(n_neighbors=2)","f281d036":"## Linear Regression","15b7f140":"# Feature Engineering","feff725c":"## PolynomialFeatures temalari","e1138e7e":"## Scaling","8d0d02b2":"## KNN_Classification","d0660211":"## Text Datasi","20aa5143":"## LabelEncoder","26086716":"## PCA","d5540ce6":"## Cross Validation","e32d9477":"# Modeller Hamisi","9d8455ca":"## Missing valueler Temalari -","349e86f4":"# Grid Search","e2b2736f":"## Decision Trees","45fa3fa9":"## PipeLine temasi","68a77cf5":"## OneHotEncoder","7a649bd6":"## Ridge(L2) ve LAsso(L1) Regression","8d7abc99":"# Hyperparapetr & Validation","c91f5c35":"Entropy  - knowledge ile ters mutenasibdir\n\neyni suali 1000 nece geldi kompleks 1 sual veririk bir cox halda bu 1000 neferin verdikleri cavablarin modesi 1 mutexeesiin cavabindan duzgun olacaq\nEnsemble Methods\n1.\tBagging (bootstrap aggregating)\n\nSuallarimiz var 10 dene bunu 10 neferden sorushuruq. Reqemlerdise her 10 insanin cavabninin ortalamasini gotururuk yoxe ger yes no questionlardisa onda biz en cox yes olani yes en cox no olani no kimi gotururuk modesini digger 1 sozle\n\n\n\n\n\n2.\tBoosting en meshuru ADABoosting 1996 da tapilib\n10 dene sualimiz var 1. Si feslefeye aiddi felsefe bilen dostumuzdan soruruq sonraki riyaziyyatdi onu riyaziyyat bilen dostumuzdan soruhuruq, ve saire sonda her tmeani bileninden sorushdugumuz ic daha yaxshi netice aliriq\n","bb399859":"## k-Means Clusteriung","28f85cfe":"## Categorical Variables ? "}}