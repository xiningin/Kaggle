{"cell_type":{"2776ef7f":"code","6e20eca6":"code","8d1f9999":"code","65b1b0e2":"code","18b4b6a6":"code","3d07037f":"code","5e00fdb8":"code","6d4c3d25":"code","472fd6ad":"code","6e4de20c":"code","36f14b04":"code","3932514e":"code","1606c0f7":"code","8ebc89ef":"markdown","f6e77f97":"markdown","66c518c2":"markdown","7db582f1":"markdown","9b043e82":"markdown","18f9b6cb":"markdown","c2c9dbf7":"markdown","a8cc6bcb":"markdown","59885d20":"markdown","945e5454":"markdown","77893c61":"markdown","f37cae7e":"markdown","aa52b56c":"markdown","632c3df8":"markdown","aec17056":"markdown","9f81e809":"markdown","49be5176":"markdown","c5e75449":"markdown"},"source":{"2776ef7f":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()","6e20eca6":"n=600\nno_vanilla=400\nno_chocolate=200","8d1f9999":"p=no_vanilla\/n\nstd_error=((p*(1-p))\/n)**0.5\nprint('We estimate, with 95% confidence, that the proportion of people who prefer vanilla over chocolate '\n      +'lies withing the range: ('+ str(round(p-1.96*std_error,4))+','+str(round(p+1.96*std_error,4))+')')\nprint('The estimation is centered at: '+str(round(p,4)))","65b1b0e2":"std_error=((p*(1-p))\/n)**0.5\nprint('We estimate, with 99% confidence, that the proportion of people who prefer vanilla over chocolate '\n      +'lies withing the range: ('+ str(round(p-2.58*std_error,4))+','+str(round(p+2.58*std_error,4))+')')\nprint('The estimation is centered at: '+str(round(p,4)))","18b4b6a6":"mu=50\nsigma=25\nx=np.random.normal(mu,sigma,1000)\nplt.figure(figsize=(14,8))\nsns.distplot(x)\nplt.show()","3d07037f":"x=np.array(x)\nmu=np.mean(x)\nsigma=np.std(x)\nin_range=0\nprint('Thoery:- 68% of the values in x should lie between: ' + str(round(mu-sigma,4))+ ' to ' + str(round(mu+sigma,4)))\nfor i in x:\n    if i>=mu-sigma and i<=mu+sigma:\n        in_range+=1\nprint('Total percentage of values which actually lies between the above range: ' + str(in_range\/10)+'%')","5e00fdb8":"in_range=0\nprint('Thoery:- 95% of the values in x should lie between: ' + str(round(mu-2*sigma,4))+ ' to ' + str(round(mu+2*sigma,4)))\nfor i in x:\n    if i>=mu-2*sigma and i<=mu+2*sigma:\n        in_range+=1\nprint('Total percentage of values which actually lies between the above range: ' + str(in_range\/10)+'%')","6d4c3d25":"in_range=0\nprint('Thoery:- 99.7% of the values in x should lie between: ' + str(round(mu-3*sigma,4))+ ' to ' + str(round(mu+3*sigma,4)))\nfor i in x:\n    if i>=mu-3*sigma and i<=mu+3*sigma:\n        in_range+=1\nprint('Total percentage of values which actually lies between the above range: ' + str(in_range\/10)+'%')","472fd6ad":"plt.figure(figsize=(14,8))\nsns.distplot(x)\nplt.plot([mu-sigma,mu+sigma],[0.0175,0.0175],color='maroon')\nplt.plot([mu-sigma,mu-sigma],[0,0.0175],color='maroon',linestyle='dotted')\nplt.plot([mu+sigma,mu+sigma],[0,0.0175],color='maroon',linestyle='dotted')\nplt.text(mu-0.75*sigma,0.0177,'68% of the values lie here')\n\nplt.plot([mu-2*sigma,mu+2*sigma],[0.0125,0.0125],color='maroon')\nplt.plot([mu-2*sigma,mu-2*sigma],[0,0.0125],color='maroon',linestyle='dotted')\nplt.plot([mu+2*sigma,mu+2*sigma],[0,0.0125],color='maroon',linestyle='dotted')\nplt.text(mu-0.75*sigma,0.0127,'95% of the values lie here')\n\nplt.plot([mu-3*sigma,mu+3*sigma],[0.0075,0.0075],color='maroon')\nplt.plot([mu-3*sigma,mu-3*sigma],[0,0.0075],color='maroon',linestyle='dotted')\nplt.plot([mu+3*sigma,mu+3*sigma],[0,0.0075],color='maroon',linestyle='dotted')\nplt.text(mu-0.75*sigma,0.0077,'99.7% of the values lie here')\nplt.show()\n","6e4de20c":"p=no_vanilla\/n\nstd_error=1\/(n**0.5)\nprint('The conservative confidence interval for 95% confidence level is: (' +\n      str(round(p-1.96*std_error,4))+','+str(round(p+1.96*std_error,4)) + ')')\nprint('Difference between them: ' + str(round(2*1.96*std_error,4)))","36f14b04":"ice_cream=[1]*400 #1->People answered 'vanilla'\nice_cream+=[0]*200 #0->People answered 'chocolate'","3932514e":"import scipy.stats\ndef calc_mean_confidence_interval(data, confidence=0.95):\n    a=1.0*np.array(data)\n    n=len(a)\n    m,se=np.mean(a), scipy.stats.sem(a)\n    h=se*scipy.stats.t.ppf((1+confidence)\/2.,n-1)\n    return round(m,4),round(m-h,4),round(m+h,4)","1606c0f7":"p,a,b=calc_mean_confidence_interval(ice_cream)\nprint('The 95% confidence interval for our ice_cream data using scipy is: ('+str(a)+','+str(b)+')'\n     +', with value centered at: '+str(p))\n\np,a,b=calc_mean_confidence_interval(ice_cream,0.99)\nprint('The 99% confidence interval for our ice_cream data using scipy is: ('+str(a)+','+str(b)+')'\n     +', with value centered at: '+str(p))","8ebc89ef":"Now, instead of manually calculating CIs, let's use python's <b>scipy<\/b> to calculate confidence intervals.<br>\nLet's create the dataset for our vanilla-chocolate sampling where 400 people prefer vanilla & 200 people prefer chocolate.\n\n","f6e77f97":"By just looking at the graph, we can probably tell an interval where most of the values in x lies and also comment on it's mean, median & skewdness(Try it?).<br>\nBut just how much do we mean by '<b>most of<\/b>'? 60%?, 50% or above?, 90%?<br>\nWell, let's see,\n<h4>The empirical rule:<\/h4>\nLet us denote the mean of x as \u03bc & it's standard deviation as \u03c3.\n\nA rule of thumb for bell-shaped graphs states that:<br>\n\n<b>68%<\/b> of the values in x would lie between: \u03bc-\u03c3 to \u03bc+\u03c3,<br>\n    <b>95%<\/b> of the values in x would lie between: \u03bc-2\u03c3 to \u03bc+2\u03c3,<br>\n    <b>99.7%<\/b> of the values in x would lie between: \u03bc-3\u03c3 to \u03bc+3\u03c3\n\nThis is called the <b>empirical rule<\/b> or the <b>68-95-99.7 rule<\/b>.\n\nLet's confirm this:","66c518c2":"To write a value with it's margin of error, we use the formula:\n<img src='https:\/\/www.thoughtco.com\/thmb\/YqXANv3cdCQrSCkmNivKrOpkcRI=\/768x0\/filters:no_upscale():max_bytes(150000):strip_icc()\/proportion-5733f96b5f9b58723dedb836.png'><\/img><br>\nWhere, z\\* is a multiplier, which is different for different confidence level and n is the size of the data.\n\nAs confidence level increases, the value of z\\* also increases, thus widening the interval.\nThe different z\\* values for different confidence levels are:\n<img src='data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAboAAAByCAMAAAAS5eTaAAAAwFBMVEX28OP\/\/\/\/7+fMsKSbt7eUAAAC9uK799un48uX+\/fv\/+uz\/\/\/T\/\/\/X\/++7\/\/\/L+9+r\/\/\/nh3NDw6t1PTEjNyL1zcGpHRUGOi4NfXVjx697q5NiloZjLxruXk4tAPjqAfXZTUUx2c23a1cm0r6XAu7E3NTJoZmCWkopaWFMjIyGIhX0TEhCfm5MxMC2ppZzc3NQcGxnIyMe7ubbo5uPz8ewZFxScm5nV09CxsKwDAANcW1tkZGUKCAC7ubTY2NU\/PjiYcKUSAAAgAElEQVR4nO19CX\/bqPO3HBmBZaH7RLIO0G1ZdjZJ0\/092+77f1d\/kOwkbdNukzrpZp9MP3V0M\/CFgZmBQVq80xslabG6eKe3SBy6C+md3iKt3qF7q\/QO3Zuld+jeLN1DB3VTN766q5q6biJxU1v\/+DuqiR+\/ATXtV3l8QMg0BT+6eZccNPX5xhodr2BTldYaPGOqX7KANQ2jr67pGp750M0fJ4zWGvrhAxMZ88d+THfQQRqkmfvFZxEqq8yrLIPfzOsffgyW1aA+yioNw59g4ycJkjT1qYo2aTXMRaRSOeCMGtGuJjPzOE4VWDv0hbBDEgsdZn9ZUFbmbNJe44wEux8mjJaec+STP\/w9EHHiB9+9eUcn6KCVghBU9OEL0Nodxj4U0CXbnfmjz6gMFF9Xxfkbbrf9hwb7BDIsAMBgEh+Afm522AVeBC0ShdmxSNYZiFFWvxB0CAfAd0DzRcmiBngs3PB8ohq4X4uuL15fpsA6coYs6zvw4I+g\/nno9A0Irj0wGlDXeNr6WtUxpnKrXVwjLg3dQ2pKhq4j3uJ1vOaJG2tdsMD\/iDQMBjIBHdLXhoQ0zK9DSdV0BN1dd75Wx6G7AZ5JdwAEeK1LWNc5dBeJz\/TrawlypnVJ70FsXHOuZ150HT4qDp5JyN6mtxbICZebPOeQl4YGcQ\/c1TUW0tDj0PFbPEm8VtdYcCFOBDPTn6UPLM61uoa4TEteTtpUptjQeYFhHfF3McKfgPcE6Aqg6O7GVcm4oQZS4iROpGC7U5TBVmnM5NSE1sBswxqUMraQQYeYCEk6MAneQYciZUNVa1NCd7BU2iiRem7o\/KqCI2hBgGImKcPSBYXVAo\/zJlmDyxSocehUNhIjYgNVI8asUvqJ7uVnOaAglODAIpg0TFJ5aShDlPggc+MSR6NSABdL5YZCyItwKBGU2CYxOA6cGQNN0BESs3IgXHTURKUbJYLRkNB4oFgZCCqbEulPhg7ySutuKwcMBv+sD5oaHHoH0Nvu4IN0wYC\/q0gCugw4S34id4k+Av\/gE3iEDhHn4ABGQAiLrRsDp0sRPTN0YbilARhAY4N06YBLCrIkBX4JfMJAW3Nx2oMRVjeXy13nA4U\/sq3PDF0kmrIH8m3Kk9zxg7gDbQ\/CFS+YDrhSuM3BoKfASwGT\/BsHZJD4Nz4Y1Rk6l4t74Ccd758YyA8OIaADO9BrXWqFINyGF0+GzkCq7oEScXEQHi5j8GHftVENLAaay5t0VQCiAEa5GN51xK\/2Sddgp9pvAFNn6CS1BAMGIfIdK88tZ6fGQNmfGbq6OcRtpYAmAvky\/ItDV\/Duh3GmlwrorZv2IuDQOfLtR86\/HJIW9O75kDtCp3I5XfOEWAk84h8iLjAT4F37YFkDSkF\/ceOgFlyOIFZAIHnO\/hMIrlKfD0wm6Lb+tQMk\/jpOUzQCFv15GNyulkAWDYHiH27\/eCp0qpVIqeyaIKXh4XYEHyiHLgQW5+DzIb1oQe2AngJvvZPJjW9BItm77f8qEBhH6PAA0hpUy+DA0v7zblunIPt8Zug85eB3ffk4dA05OFdH6Dgv\/xM5AeR86Z+gK3l1zswPYChBYfvdDF2xrLYXBaAKqP4fOPA6w4twHHhljmxjYqYj8AidczFBpyDQhT4IIuAvscclBzOy9AZ0l0+DLgNs0QPFEdD51tzqjtDFJ+iyPiv5sADLMjn4lpRY9u5Q8GtIQNdrxnrggiMbJN7\/HMpbuev7LDl7qyMpAOXc6q6\/gc7unOs76HLOC+8HyY+GfE8laIF2KYF6ANnqA4g5dMTv7B4kHLqraqtN0Dl9tpHaP0\/QUVcaxLXGRt9AJ4sytXkPpI5dL+8\/ggzVN0+DDiugLVNAG\/CR9ydRe4QuF9B9BMGnrRCYn5lHZuiWofzHyEd5eXUZe9bU1+XjwHEd9vWo2vIWSMTZLT+F9Ox9HQp59WUCOv9zLqDzOHQf7Am6ouQdRX8SmMGtp9j5eaFD0N8OHDd6CPcFKO+hKyeBuZ8F5mcv1nPR6mIXZJbfcYHZ3xYjPvZ1fwrolgFXYvy\/P5e1Szh0hit34cUHLjicw9OgQ3w4CbaBZLVyVykq7\/8\/gA39y7FbsN\/nXQF2iyTtbgopATU+bK+SSv4rpHopH7Z9NLU6Tn9feIeDn0DkgXQNR7k7tBE9gLNCl1830yiJVxuQ7cQwpUYl6BQuc\/j\/CjCT63Uw3d5K9faQUts5L3SS4XKlMnfx0O22haTwvq4Cdiagq81BdCkuyrZdWuq+gG5jFDfdIYa2B7qKa3xCr+O1P71IQVRugVvKO1BbhI+4IOG9kWb5hz4Fl5+eotdx3d5KLN6PRm7CRTJNbH4aJa5EkwiSxHJdFZGESvyYItcV19wIIWjxU6HPkYQTV4PdxOZDYKu0oPggf9523fMpxyjinxQccI6Q7Vo0IXZJJc4uZ0cIbUoFSxbn0IaR6xLBUHTGUQonkSMbTjmfSoOnINHS5keGRF2Llx4vM4JEERJeDPxElIU0McOJP22LIkw41yURX+HKAS9n8YKFRFHzT5C5VH9M9zZMBDEUIBgq\/+U\/iJ+qfAAi1DUVGoawJBjTsbjL\/6qTcVM1pjSQijE2jm\/zq1B8UJ2eP6u8EmmoxsSF4IqzKZLif1UDc+gEh5BzPHMokjceNfL8Eg\/HnD8oDZ4kLy6emAFFwg+KUDAA71+aL4ti5afi2eNXjOmDovj5x+YX\/5H+Q54DVdk2L2Z0\/hfSfwg6FO3JuVvYv5kEdNCY\/h3\/HA\/h\/ZWJvrh5dxWenvv6lW8ef\/jKN48bX7z5TQo\/ePwLblXj\/nHjRwy9xcw9fHy6waG7Ut7pDRK7lhZ\/3Mjv9PborysuMJfv9BbpPzRM+f+N3qF7s\/QO3Zuld+h+H32jhD5NK30WdBBOliDjlRVgBOcEJ9uX4GKyL6mPWVDQkTc0MQnVkxnqLFwYj38MnqYLqT+X5Lczwv7ZbvmQngEdMixhHDXIT5hIz0lQsqZ6iRAl6jShSkKEUkoeZXE2OqucVf4ef8o+E6\/IoGMC7z52\/1WVzBO8YEQj4+skHykp6A5fGcZxrDyFyWdAp7I8z6BROlV\/rvL4GUKkbveioaHMdxIVwV1IjKE7bItvXAMIBWkiLLo4bh0vImF3I2ZhnIULFHt1GJ8yju6aPHSdQiAKSZuGll13N1t2dxM90gJV5i+\/vGr6\/VNM9U+HzqCdu0wVksbLKj6rK+yHhKTeTwV0+pguh529HmV\/qQbO3ppbHRJSnIvU6Ze121KdXNouqvoobYh1plqGJApX+tymEcJJb84NClmFXAsnAPZq7LVL55Sk4AvBXtHnoyOL\/I\/OnCWauJ6u8Z+FExhfZuV4dDqf75zo6dDheAv1IqOdhfv6O7PVX4BQRJRKQKfVniZ9kqSwT4kahNd48upAUpYERolw1kkSIUBApzMfadQlKVvpZ\/Mp8O7CdSfoIlv6VFwQe2LPlopQQCdV42Lv2g6blwEg5CoUKlVGkZQodPKKKhZCUeKOzpIzzE+E087lGdjP0N1nhVCXukjiX0CQJvOhdZeRZ0A3bFXda+mfRG3S1xyd6kxAh\/Q8HPu9ruRJxaFLm0LMc0YkLLwaWn7tJ8J\/N0OnBbuxTzSSFv3mbA5X7IWDPPAxBmJFFqZZMXcbaO0J6CCp+s0msp0ia4QfQx3qLC2HrmV2n2c51RkY6pqgJt+E7RLVddZSk9\/2oroetgI6kZW6lvZp7dNebns8hkGumEHXZjDwCufOc\/0sgcloGr4+dHiGDrdyX\/tWxtyKC8zuI8814qIg1yW\/vEr7YxucoWtAUcjUTutRZmcSECiSRzNuZ\/fS9R\/Z6nRDP0HnB35o5+1HeRQS7vDBjD8tc2aSwrr2sgUD0uctJamrbfIlKT4v5GEx7KjGWqLtBHR4aM0L\/yPPiqplO97Iqk\/mWF80MsUS+MNsyudDhwzm12lLwe+CzvFMTeZDFqW6RNQ13QOXRbzcTD0Prip3mghzgi6olgunh6WtZfkP10z8PBnUt8zmOCsXJ9ndOqYTdLthwUcDLtGCGonuZRfsdTsfdUiyWi4W7KDtt9Td7UVfB63eA5vF0MKV58HVJDB1b9c0csOzgtdZu+ZZcTW3ugpyjGBQNcu74daz9DoiFTU9cOja1+vrjtAhLjALXd9VMh81ylxqqS64haLcNOxkV1UycTRDh7TBl9Yt75AhzKrVP33\/50gfw0hrN8dpHeR+VcoEHVLt3Whah08aL+f8WlT0sk7pMh81qS4uaw7dDYfOOkKH8v5W5tDlksmhM4\/QpQpjFqkSlUOnC+jWrnwVOPzrqAxz+gutTmo\/mmGwl12zDs65EuOfaIIuitZ9ewFvYkrjXWnExSrZ8YEJbnITcynzBXSRwbOspRupZmZRn2mZn54VmnQQbVosn9HXun6c\/DK3OsnI+0XZ0YKtsgJKhhJoWltcO2xhyS5vWjN01NrtF4OzjMDl4qYR0OlxiFbVJDA34UJvEg6daHU6irpywfJrDp0+xtqqa07N5Tl63WaXcxkcVLw6veZcEMx4Vd20S5K2Ts3LreR9XSIHPh8ycKz8zPPR\/gF0GLUbvXVyh6hZ2p+LVS6vnQ1vHXwsicZ6omLu9\/Q6hAbd3iZdmDZ6U3HVEkqqK3sbflCkCldHh5RDBy72gKqZE4f5EnrhCJrFJhcZqMdpmAJJmnnyfr\/j0BW5joym3VTjqncMXB6yjf8LwxTe9ZYx5fqFEr8qchKko224LDKsWKwuQpRFCNFBmbodg46jZdjjbNFAUcwH4CxRbRYTwepwLlYhkRWmTNoVsslMc78HSwUhMljYHUpemcrBFRqfWBHlGsiKFWSPpVJiOvIDAu1xdBkXuGPCEoMyrsHRIVGSu6yoIiswUXg++acShF3xjDuMv6IcTBP3xHjc+JkZZ+ckNE2AE7PeJuOEOEWnyYTCaAjvrRZISLHpwjxD7lFD53PISHwJnwykRzrdwjNPBp4nEc7a88TXafLhNA1xZlw1RFbENThliucKHrmcs4InS6g0Ta805ozzowcZefccPI3wxnnN\/v1H9A7d0+j7q4hfnd6heyLBf80s3f8UdK\/khHpuKt+y90sMP2uYYkBh4jmn\/\/Kn6OTbnSzp\/OxrVy8f8r0CF8L6\/0i+eXnAHxcHiuyvr9i\/Yll9BnSQjAM1IrbZNOdc6vuPZLjjpEFBGscWhLQZv5ynbrhpE7245x5ZQ9tbd2cn8cmH8I3ywLH0CIy49L+aWG\/WxS+MeZ5jTfGKjW\/Z+c6ry1cU\/DCRZaGdQStvsjqynMALvyggHNZL5L6wrskVcZYop0qDrJOCDJkcVMNdc0SUfoMdVlLyJXNmW\/yC4HqG06c82DiMl\/mwOvv6px+Q0Ksn6PSmRZLsjjvtsjrVYqivVWTmwWLlj+YU9ok3Qg1rL2Ji1TXtYoIAQT3JVnP1QUV2MaZkCh2j6eiiYIuJD66QaVOIGYQXotXB6ZqhqTq\/vQhn6AwRWwXphg6xruL5C5Iqnpkff5yeDp0+AEMvwus2IK87TtbpQUBntrWhy0PgX5NTWDDoei1D7GYXFGAXI9I7McJly5zxBbz4aGiCcPIRWokb1zSZ\/K4oinAsBKJIvSfZdtdLVtZubMMNldCjMBq8wCeYFnnM2187Zvx24AjoECrrlkHiMc8d6ziQSM\/LVmfh2Es0y7+ewXJHz2h1yg3BoXPdOnV6xgWr\/0yq202tLsgRAptAztLsaIKy\/cFNmZ3We9ple90rkqo0463yYUvOziBCqXcb1hFCKBniLB+H8TiRQRWBvZBRF5dtdutkNCqKy3DQSzC6dXGhOJ88h+h5f1uNqxhkDGeFK2fC+uJW5aeUXvnOQAIQKNgr3ELEh+gVnAZJOn6nP3xGX2c7bda1F8VwVWevaVk4QgdpVxdgCLb7P3blJBF5\/28vsszMe1OXY9M4jJqTLUYZ7w\/07CITkSpZjZOrFSE9KVYnS5g+CvYQzP9nLy0UjppE3aT2tGTLW1C14vwpPoGue1tx3na2qh7YYurr1CZFdt5f+fFaD3YYo0O5cv9efpARxjeF9F3Z9pwRpj2w2tGQYbyuq\/UIHcduU8pN7y9Q6E3+U310IjOo9TzTVHlYQ5C2\/rB6IejUxCFmkc148cHuKcaBSrvJEY+kUG74T6xDJa2rQisPS2OsVnW\/5n2dPqb1Tb8YK4hU8HHu63APQs7wla9gPag0GIFEsw6fP1S6ZFitHH9P53jOCLOMFoWHE+uicV4fOghJebGS2SZdoDbTRL50RbQ6b4aOt7rtxzWl2gtBpzeesU7ZbDDGWMfztCZkh8E8bKORmwbXvNXZzrhovBN0RS9aHeZ45bzVVQipWzZDpwa+KVFrOUO3htK2NKl89WGHoWXhsovPJzCh733aMRSGV2HzugLzQNVopBH4oHQ0OZQfZRcyrp8IRwxJY9PJNNz1S1wHpA1W8QtB54UWq4TrBVHGPn5kHxUxjoDxgf1REoRg3S951xZmkt02ey4Xyi2HbnfBnH3PW93NByJni1hAV\/ekEtAZZbV3\/U9zq9utEc77ZR9ecOgwS+ky3XwnD88RmNTvCt655r73qmu3VfeGqkQedZYeuBQZujTGVqXw2mPEuV8Q3enX6mYbQFqnNdHGDltbeu66hYxdXTtTzEuUbCaa5tMiDwBw4MM26PppbeGx62G5y9pan1vdBanbjLe6sQqqwhxl4Xzzs3QeYTaOz\/u0VME4EFLSbR3H1Qbe6qL67zb73gzS5xjCDAx1Ed9CemVDGJr8YFzCqAYWYTgM1UjyaeisQiQ4gpOPThjMRMQQ427lwRnJoCkxjvFEVH2mk19udh0aqgidoU6hOCY3nTHzgqdgIPw\/vwuN+cHZ+8Zv8QKdmJ1vYP7YdIhEgMzz6XXSyWr6uisOphSPqd6lj9zy5PV8+HN\/cHYWVObDRzN+73RFD\/g4GjyPV46\/6C4Dpy\/Nd6T7nKGfKOQ37jl49eqjjq\/av\/+I3jh0r0\/wNecv\/pDeoXuz9N+ADukPBeejS0Nev2d+afpPQIfocD+CRij41vHDx2n439JHnYv+E9DBBOzvoYPg42SRetDMEPF2TvKvmVVyHnpD0OFJQ5rsTsINNqlK0xlau4c9Ok7P5JfAJw4d3ovo\/XCeK2oMu9ssf801uK9AbwY6JLk2JQglYu8Al0BKDeJGpSsmrSdlt0cGUahQuRIioEP77CYh2FKsyfChMC05WP+tZvdmoIPEqVNFrVvhK3PGVZ8uypvGq2LdCut6tzeStvZjBIs223LoYOKDwkr82lFm6akPX88Meev0hqDzCxuXaaT5I04n6D4BasZ\/rsZcY7zVhfGCVsSS91Ork8yPOw35bMHSOVJItI3\/W43uLUGXKpoW5KoZZtg\/Qof0EZiBp4m+rsviBnxOUjL3dZPTp6Om25Fpzn\/W\/se6urcFna5lArpC9cfFBJ0koOu9Ncdn+VcWjwoqT9CtBXQ3lKNqqVNwYetdOfhNNEGHmS9p+Ya3ukXmn6CL64uyIyhXVqSxabWXTtDpUaqslB0f4UDKj15z\/tpr0BuCbqfoKPKDjU9x7zPnrtW5aZwd9sbYsra2UZ6Ns3JQHkZ7cFge8BM1AHVdv+okqJenNwMdikYxvYHGgwsRiZnCdGsQm7CpUjIko42icsPE9gJxMi3ZFNuOWYhtpg0eUbnZbIZvZ7W+aXoz0B39piJs9bzqQTgxpcmJKSJZS8egPuKB4xJ9g2t5xjG8DzSMb5YovHV6O9C901f0Dt2bpXfo3iy9Q\/d0OpPr71dXSj5vaaQB59\/f3\/HP4Q3uDpCqvvRoBKEIPaJlfMvIP62U\/GYhJyJPsrI+Zx5mxEaLD9BZ\/MphaB8hsWZDmeb\/R2zaj1gZzrkf8mMpkrhu7pYBoNNSIsFIIk0TuZRBkQxr\/KJ0HoFRVeqvTHNaPTxF83zG7GdUhFlKIq+d4vH8VkIwPnh+gRDCWRV2MQ66ugte0myC0IZrkcNpaeRdjDCo8JRjERxlI9e7zA7z\/EHpPNae8CNRaIOXjUKLlYN0EQ4usM3A\/839JCLCXwAoRNGuXChymSeL8szbRH5Nqi52kZ9SN7TSW8A5\/k7WL1hKECI+W9BD79hm1h7nXUK4zMcLEex8jiYr\/kC0FuHd5hM0\/13lE3RcgRUBZ+fwtfehdee3HswKftbSSIiLmt5QPat\/N3QSJWqyFVWfSuuxsqiks639orIAsTEWMWXF0sjLD\/XlcWmkZWGxqhVFNFqXB9cyoFdM14dijIJDPko0yFgE3V4pSoRo3zT5ErpBoUi4DNgGlpmSzlFoyz4rVRKUDWXNOEJryEaiKwEbEN0Uyt1KyWe0OrZFWu3oTcjx+919Ha+HauCLPkZ1i7aEOvVq9qKNDiG\/dtuCJ4nKoPH8Idgcl0bq+bR0S7WKcFTxWHtUjFbCPpFHN+0tkveJwzQGlLiyUN27YbuM5MbtytUAPGb5YyK2CRdT4xWWWvsqD5aZWEJZZG64MQNQMJQPyfYue89ZGumHfdeuN34e\/n7oJJz8qUx1NcnzxFCp054ptvp3aFoayaalkVDVLrPFKQSJzo7L\/6zWGbG6cTxLLDbYZZhYUs5MO7Gt2luw7cXnKaiiOTpLOyFS1ywG315sarSY+jq9\/5+p+R+uKqZpmaNi+3C5KvNrXkGxtN3g+2hJzxhhGvsgDtv91jIL77dPBTbItpnj5GFzUxGomiM48766XxKelkYWx6WR7nBaGmlY3TiVBoKmsrWwrraZWL5C83RUpyi0ZeqJKLQ36\/tQpgZzvL9EKFO0qou7KLQ3dZuPxyi096FMcxWprlMl6PnQIemTzXl3\/7T1ze8epnCdIMym5TCkt0xXTjaW5gLrJSWmzpuHNq\/vhlhVsXoMExh5mSb2x7UDalpdMC71TSuCApBIkccp9rM\/XhenUKZ0t9c4dFL3cSVPoUzN7C6AcNEurcQ6hTKF5C9XSyoRhRZahLBO+QWBCat+X437jtlO\/5s9zwg1FbVoZJUExMjLrTTA\/eFFtU29qHHZUWMapkw0DVPgWLmWJRGFVBneyCOgVtVAsTDI1vLs2olNUrFlzlvdVkBnV8o6y5cRKA2wEaFM9TK11BsBHX8FE+fT1SmUKUpjk48HRRTaTSiZ280vRKE1qL\/zEGT+rvjdc6y4ciB3B8DK3RVLdy3lBbDL3ZesTwjKde0k6qR7Zz2nLJg8gkXX3ciU3lzSVHZKGOyqXoTisL20rW0Y7xrI0qwuVkp1sa+oyqo6q5dGnG7SjRnX\/Gt91TibaU\/wLHc8ZDku1sVGEjBpndA1mxpCEvoPVko+a2mkLfaeVwl9zCD0yiT2zqG2bU1bDBniV3pRSWDQyrLInIS6frA0UuwuZHF+ItWmkYqgZRnzwFPscs+VAbETBeGauT09xE+o2KIIHa+haaeiWXHnr1hcCPOH0BS9weAfNKZDiCiFv6DXSXdez1de1PooicWkqlBhj+y8NFNcnKFHQ9rOq1qRMe8Uf9xWXpLmje3nKLSTm3ja3mXaix5NhuBZTZ8evNspzJgeEK\/Nqv\/dIXpooX33HDyN8JD99lH1kd6heyIZ\/xbk3qF7u\/QO3ZPpXHEhoP71d\/CTWvSz9jmY\/E\/ficb6yoTQcu7d0XK5nE9f2tVKXHI3zLtP7C7liRHO0xeMPMLUtE\/DF1cwS17a1ZrU9YCgW9TDb5\/Gj2jme+UUJVPubnqVFm3wssomKouwLr\/dqJJkfiFMuljhmmaIyjrckAe4fvshdUy\/9telL7xrJLTSj5dVYufxrc9+t6s18nLaiIimuucoiivVxW2+0f\/5xeeniBIrsugROvUuvBsM0svakzgjcceUhO4YZ+To1eM68Jisj7GreXucVatpO6a7a0JDWN3tGmnMfr3Jj3eU0PMh\/CXlAI9bhL3A3RIcvGpQxUcI2UGi0S01OHSeZoq4U2afvyR0U2QaQqYSVHXzMlvMKjmKmcamOhSn16audLbeONeSNJsKqN\/Y0mTDQDaJqAibSYjCoeN3OSQ2QYQr6RcnV+ukznNNPSI2IkIll4z5Gf6J+2D9z9k1Ehg6r+yA4NcNqvgYIQxVdiBQGG3HDYFZcRvGLzt8h14bHGLRJJSsr9NgNoRJqoH7MBLQ7caNZfnsczuK\/StZG\/putk030eCH7bRrpF9EME6Lul2i3glDyxy2YSgVTnOYdo2UvNDxoLXzKpodwgKzvM6TVbANPRyHbfsLm6AZblfunXa\/Y\/vwt3sORMNzMigE5m7wM51WIH3ZdcdIqjYXQcjhmr3kt7P5WTSvTmCFY7AJc3Xc\/iWC3yGjG9YBW+ajbnkUhcGKAetW7Bqp4Cxfkppqh3g1yB9J6VtSN5mfR+f6Oi2v0oLiTC4JSke98S6a7pMlAf6W8gv716Gga3e5Nuxy\/\/dDh7RswspQmM4qqy9oX7+oLYx39dQcwmh2tSbF4riWgXciU5wB6MbIlct6cHOxDZaaVUyCdj6uERmyqvjS6YOsIQCTv26Reeri6PRJx\/HQX1WJpmX5GpOtq7npVeBgA9U++5W5KRK6IFKRaxe2vfF\/t2kB4fHgYjGCwxc4kVnlrhJw\/oDPD0hnra2FwbQnNUKEGsfRo8p2RBWMXGiGJRc7ogftxTQa8VOyFNAVrdJ+vWtkWP\/RTbtGfrnhZ7+hj+0aCVFchXfj1mftc1BqdYADZma\/e5jC6zivnBBFNh4aTUmTVDEV8KLTivTMw5JcHjN+5zuBNC1FSFwbFcyk8rCz9MLjA8hk1Aw\/u3bYiuy+2DWSN9182jWym1yt2hAic5pWhINwoTN6v2vkoVzNu0ZihWkYbE5l\/pxtdrO071zcyM3uNbeoeJSXZb3ts8JN6utRHtpAzdLB8V5SYCK9dZgntAA+TOknaiZ\/XQayLLOs8HO\/Y0VNwjqouMBUk+2GVeyiDt2orj+m9YIBbQ8oqj2lFnu1FiUIFo0jqVYalJaZHDYAAAEmSURBVNO0IkiruAF0LydY8xydi9yaOZtV5hs6uxmUXfl8LznnOi4SXsGYV\/5ucwqyG6\/mxeJmBCneICZme+OL2glQJMfBvPUAIg92jUSx2PrTsry9FNcxMUhTJJO9KSmyEiLqxdDKxiHW3R6R3jKsPig3EaSZsmG4bETofY8Nk54M3ax3DdJTiNnGENOtPRZhpeFahFJk7i\/MTRE1T1OneTy\/32GH1iYnFWq8szN1EczI\/MYyeFYSu0aekvhi10jBiIaQxvWUiZGpjDippjgwTF2Cmq7rkqpJ4iGorfFabD2C11hcEw9ifR46qJpmTA9JeC2S0U2MTs9o9\/aWd\/Pz0wgP77tGvlGC9F8TTOAduifSv2A+zpHeoXuz9A7dm6V36N4srf4PYliafTsrMJMAAAAASUVORK5CYII='><\/img>","7db582f1":"Import a  few necessary modules.","9b043e82":"Here, we can see that the 95% confidence interval is (0.6289,0.7044).<br>\nThe difference them = 0.7044-0.6289 = 0.0755\n\nNow, let's repeat the process for 99% confidence interval.","18f9b6cb":"The theory checks out!\n\nNow let's have a look at the histogram again to see how increase in range of confidence interval increases with confidence level.","c2c9dbf7":"Make-up some data","a8cc6bcb":"We got the same result as previously calculated.","59885d20":"Simple, right?\n<hr><\/hr>\n\n<h3>Conservative confience intervals<\/h3>\nLet's have a look at our magrin of error again:\n\nMOE=\n<img src='https:\/\/www.statisticshowto.datasciencecentral.com\/wp-content\/uploads\/2013\/08\/moe.png'><\/img>\n","945e5454":"Here, we can see that the 99% confidence interval is (0.617,0.7163).<br>\nThe difference them = 0.7163-0.617 = 0.0993\n\nHere, we see that the range of confidence interval of 99% confidence level is more than 95% confidence level, thus proving that the range of confidence interval increases with increase in confidence level(Read that line again).<br>\nDoesn't that makes sense? The range of values(and magin of error) increases as we increase the confidence level, i.e, if we want to be more sure about our estimate, we increase the margin of error.\n\nLet's visualise this:","77893c61":"Now let's calculate the 95% confidence interval of our above example:","f37cae7e":"We can see that the range of confidence interval for the same confidence level is much more for conservative confidence interval than regular confidence interval(calculated previously).","aa52b56c":"This new MOE function widens the range of confidence intervals as much as possible for every confidence level thus being on a safer side. Also, it is only dependent on our sample size 'n', which is a good thing.<br>\nThe confidence interval calculated using this new formula is called <b>Conservative confidence interval<\/b>\n\nLet's try that on our vanilla-chocolate problem.\n<blockquote> What proportion of people prefer vanilla over chocolate?<\/blockquote>","632c3df8":"Let's assume a variable x containing 1000 values.<br>\nLet's also plot it's histogram.","aec17056":"<title>What is confidence interval<\/title>\n<h3>Confidence Interval<\/h3>\n<p>A confidence interval (CI) is an interval of the form (a, b), that is constructed from the data. The purpose of a CI is to cover an unknown population parameter with \u201chigh probability\u201d.\n    Here, <b>a<\/b> is called the lower confidence bound(or LCB) whereas <b>b<\/b> is called the upper confidence bound(or UCB), which are both functions of the data.<\/p>\n<p>Whenever predicting a parameter, we write it in the form of:<\/p>\n<center>Value = p\u0302 \u00b1 margin_of_error(K).<\/center>\n<p>Here, p\u0302-k=a & p\u0302+k=b<\/p>\n<p>For eg:<\/p>\nSuppose we sampled 600 people and asked them whether they prefer vanilla or chocolate ice-cream. And we're interested to know what proportion of our sample prefer vanilla over chocolate. We got the following result:<br><br>\nNo. of people who like vanilla: 400 <br>\nNo. of people who like chocolate: 200 <br><br>\nSo, <blockquote>What proportion of people prefer vanilla over chocolate?<\/blockquote> The answer is simply 400\/600=0.67<br>\nThis value of 0.67 is our p\u0302.<br>\nBut why do we need to calculate the confidence interval if we already know the exact value of the parameter?<br>\nWell, as mentioned earlier, we have sampled only 600 people, so are we 100% sure 0.67 will be the exact answer to our quoted question? \n\n<b>NO.<\/b>\n\nThis is where confidence intervals come into picture. Using confidence intervals we can write an answer like:\n<blockquote>I am 95% or 99% sure that the proportion of people who prefer vanilla over chocolate lies in the range (p\u0302-k,p\u0302+k)<\/blockquote>\nBut how do we calculate it's confidence interval?<br><br>\nLet's do the math!","9f81e809":"<img src='https:\/\/i.pinimg.com\/originals\/05\/79\/aa\/0579aa860ff29128f3fcb9bbb187d65f.gif'><\/img>","49be5176":"Now let's write a function to calculate CI using scipy.","c5e75449":"What if we try to maximize this function in order to widen our confidence interval range even more.<br>\nLet's see what we can do:\n\nThe margin of error function consists of z*, p & n.\nThe values of z* & n are not manipulative. We can only manipulate the value of p.\n\nNow for this function to take it's maximum value, the value of p(1-p) should be maximised.<br>\n> Let f = p * (1-p), then,<br>\n> f = p - p^2<br>\n> df\/dp=1 - 2p\n\nFor maximising f, df\/dp=0,\n\n> 1 - 2p = 0<br>\n> p = 1\/2 = 0.5\n\nSo, MOE function reaches it's maximum value when p=0.5\n\nReplacing p=0.5 in MOE function, we get,\n\n> MOE=(z\/2*\u221an)"}}