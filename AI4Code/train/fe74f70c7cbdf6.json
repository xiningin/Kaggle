{"cell_type":{"8ca117f5":"code","f9e15b8d":"code","48bf6db7":"code","e6004343":"code","31047f47":"code","044a94e1":"markdown"},"source":{"8ca117f5":"import torch\nimport torchvision\nimport torchvision.transforms as transforms","f9e15b8d":"transform = transforms.Compose(\n    [transforms.ToTensor(),\n     transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))])\n\ntrainset = torchvision.datasets.CIFAR10(root='.\/data', train=True,\n                                        download=True, transform=transform)\ntrainloader = torch.utils.data.DataLoader(trainset, batch_size=4,\n                                          shuffle=True, num_workers=2)\n\ntestset = torchvision.datasets.CIFAR10(root='.\/data', train=False,\n                                       download=True, transform=transform)\ntestloader = torch.utils.data.DataLoader(testset, batch_size=4,\n                                         shuffle=False, num_workers=2)\n\nclasses = ('plane', 'car', 'bird', 'cat',\n           'deer', 'dog', 'frog', 'horse', 'ship', 'truck')","48bf6db7":"import matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef imshow(img):\n    img = img \/ 2 + 0.5\n    npimg = img.numpy()\n    plt.imshow(np.transpose(npimg, (1, 2, 0)))\n    plt.show()\n\n\ndataiter = iter(trainloader)\nimages, labels = dataiter.next()\nimshow(torchvision.utils.make_grid(images))\nprint(' '.join('%5s' % classes[labels[j]] for j in range(4)))","e6004343":"images.shape","31047f47":"images[0]","044a94e1":"This notebook is a sample code with Japanese comments.\n\nRef: [TRAINING A CLASSIFIER](https:\/\/pytorch.org\/tutorials\/beginner\/blitz\/cifar10_tutorial.html)\n\n#  3.2 Titanic\u306e\u5148\u3078\u884c\u304f\u2461\uff01\u3000\u753b\u50cf\u30c7\u30fc\u30bf\u306b\u89e6\u308c\u3066\u307f\u3088\u3046"}}