{"cell_type":{"d5c3266e":"code","1d0c024d":"code","ae858eb2":"code","b25c8a9b":"code","4c79a541":"code","b174b46b":"code","76b2ba93":"code","2794acb6":"code","b51bc116":"code","951ef881":"code","51f20a70":"code","29689af3":"code","eca10661":"code","b2966074":"code","1c996213":"code","52f1b710":"code","dd88189f":"code","31a24df6":"code","febe5b00":"markdown","eed8c977":"markdown","9d97e3f2":"markdown","4700cfac":"markdown","e5eec578":"markdown","e57e2e2a":"markdown","f49051c0":"markdown","faaf4cb8":"markdown","e47a7fa2":"markdown","760bf522":"markdown"},"source":{"d5c3266e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport os\nfrom sklearn.tree import DecisionTreeRegressor\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n\nfilepath = '..\/input\/videogamesales\/vgsales.csv'\n#read csv and drop everything after the first 500 entries\nvgdata = pd.read_csv(filepath)\nvgdata = vgdata.drop(index=vgdata.index[500:])\nvgdata[20:]","1d0c024d":"#Genres\ngenreList = []\n#go through set and make a list of genres to refrence later\nfor x in vgdata['Genre']:\n    if x not in genreList:\n        genreList.append(x)\n        \nprint(genreList)\n\n#broken up so you can see the list of genres in order","ae858eb2":"genreSets = []\ni = 0\nwhile i < len(genreList):\n    #break up the set into sub sets based on genre\n    genreSets.append(vgdata.loc[(vgdata['Genre'] == genreList[i])])\n    i+= 1\ngenreSum = []\nfor x in genreSets:\n    genreSum.append(len(x))","b25c8a9b":"colors = sns.color_palette('muted')\n\nplt.figure(figsize=(16,8))\nplt.pie(genreSum, labels = genreList, colors = colors, autopct='%.0f%%',shadow = True)\n\nplt.show()\nplt.savefig('Pie-chart-showing-genres')","4c79a541":"plt.figure(figsize=(16,8))\nsns.set_theme(style='darkgrid')\nsns.countplot(data=genreSets[0],x=vgdata['Genre'], palette=\"muted\").set(title=\"Number of Games per Genre\")\nplt.savefig('Bar-chart-showing-genres')","b174b46b":"genreSales = []\ni = 0\nwhile i < len(genreSets):\n    #create an array to concat into later\n    tmpFrame = pd.DataFrame.from_dict({'Genre': genreList[i],\n                                       'North America':[genreSets[i]['NA_Sales'].sum()],\n                                       'EU':[genreSets[i]['EU_Sales'].sum()],\n                                       'Japan':[genreSets[i]['JP_Sales'].sum()],\n                                       'Other':[genreSets[i]['Other_Sales'].sum()]})\n    genreSales.append(tmpFrame)\n    i+=1\n#combine frames into one\ncombinedGenreSales = pd.concat([genreSales[0].set_index('Genre'),\n                                genreSales[1].set_index('Genre'),\n                                genreSales[2].set_index('Genre'),\n                                genreSales[3].set_index('Genre'),\n                                genreSales[4].set_index('Genre'),\n                                genreSales[5].set_index('Genre'),\n                                genreSales[6].set_index('Genre'),\n                                genreSales[7].set_index('Genre'),\n                                genreSales[8].set_index('Genre'),\n                                genreSales[9].set_index('Genre'),\n                                genreSales[10].set_index('Genre'),\n                                genreSales[11].set_index('Genre')])\n\ncombinedGenreSales.plot.bar(title='Regional Game Sales by Genre',figsize=(16,8),ylabel='Sales(In Millions)')\nplt.show()\nplt.savefig('regional-sales-per-genre')","76b2ba93":"genreSalesGlobal = []\naverageGenreSales = []\ni = 0\nwhile i < len(genreSets):\n    #get global sales \n    tmpFrame = pd.DataFrame.from_dict({'Genre': genreList[i],'Global':[genreSets[i]['Global_Sales'].sum()]})\n    genreSalesGlobal.append(tmpFrame)\n    #averaging for later chart multiply by 1 million to make scale look better\n    avg = (tmpFrame.iloc[0]['Global']\/len(genreSets[i]['Name'].sum()))*1000000\n    tmpSales = pd.DataFrame.from_dict({'Genre':genreList[i],'Average_Sales':[avg]})\n    averageGenreSales.append(tmpSales)\n    i+=1\n    \n\ncombinedGenreSalesGlobal = pd.concat(\n    [genreSalesGlobal[0].set_index('Genre'),\n     genreSalesGlobal[1].set_index('Genre'),\n     genreSalesGlobal[2].set_index('Genre'),\n     genreSalesGlobal[3].set_index('Genre'),\n     genreSalesGlobal[4].set_index('Genre'),\n     genreSalesGlobal[5].set_index('Genre'),\n     genreSalesGlobal[6].set_index('Genre'),\n     genreSalesGlobal[7].set_index('Genre'),\n     genreSalesGlobal[8].set_index('Genre'),\n     genreSalesGlobal[9].set_index('Genre'),\n     genreSalesGlobal[10].set_index('Genre'),\n     genreSalesGlobal[11].set_index('Genre')])\n\n\ncombinedGenreSalesGlobal.plot.bar(figsize=(16,8),ylabel='Sales(In Millions)',title='Global Game Sales by Genre')\nplt.show()\nplt.savefig('Global-game-sales-by-genre')","2794acb6":"\ncombinedAvgGenreSalesGlobal = pd.concat(\n    [averageGenreSales[0].set_index('Genre'),\n     averageGenreSales[1].set_index('Genre'),\n     averageGenreSales[2].set_index('Genre'),\n     averageGenreSales[3].set_index('Genre'),\n     averageGenreSales[4].set_index('Genre'),\n     averageGenreSales[5].set_index('Genre'),\n     averageGenreSales[6].set_index('Genre'),\n     averageGenreSales[7].set_index('Genre'),\n     averageGenreSales[8].set_index('Genre'),\n     averageGenreSales[9].set_index('Genre'),\n     averageGenreSales[10].set_index('Genre'),\n     averageGenreSales[11].set_index('Genre')])\n\ncombinedAvgGenreSalesGlobal.plot.bar(figsize=(16,8),ylabel='Sales',title='Average Game Sales by Genre')\nplt.show()\nplt.savefig('Average-game-sales-by-genre')\ncombinedAvgGenreSalesGlobal","b51bc116":"plt.figure(figsize=(16,8))\nsns.set_theme(style='darkgrid')\nsns.countplot(data=action,x=action['Platform'], palette=\"muted\").set(\n    title='Number of Action Games per System')\nplt.savefig('Action-games-per-system')","951ef881":"ps2Action = action.loc[action['Platform'] =='PS2']\nps2ActionPublish = ps2Action['Publisher'].to_frame()\nps2ActionSum = ps2ActionPublish.groupby(['Publisher']).size()\nps2ActionSum = ps2ActionSum.to_frame(name='Total_Games').reset_index()\nps2ActionSum.sort_values(by=['Total_Games'],ascending=False,inplace=True)\nplt.figure(figsize=(10,5))\nsns.set_theme(style='darkgrid')\nsns.barplot(x=\"Total_Games\",y=\"Publisher\", data= ps2ActionSum).set(\n            title='Publishers of PS2 Action Games')\nplt.savefig('PS2-Action-game-Publishers')","51f20a70":"ps2Action[:20]","29689af3":"ps2ActionTT = ps2Action.loc[ps2Action['Publisher'] == 'Take-Two Interactive']\nps2ActionTTSample = ps2ActionTT['Name'].to_frame()\nps2ActionTTSample","eca10661":"ps2ActionActiv = ps2Action.loc[ps2Action['Publisher'] == 'Activision']\nps2ActionActivSample = ps2ActionActiv['Name'].to_frame()\nps2ActionActivSample","b2966074":"ps2ActionSCE = ps2Action.loc[ps2Action['Publisher'] == 'Sony Computer Entertainment']\nps2ActionSCESample = ps2ActionSCE['Name'].to_frame()\nps2ActionSCESample","1c996213":"ps2TTSales= pd.DataFrame.from_dict({'North America':[ps2ActionTT['NA_Sales'].sum()],\n                                    'EU':[ps2ActionTT['EU_Sales'].sum()],\n                                    'Japan':[ps2ActionTT['JP_Sales'].sum()],\n                                    'Other':[ps2ActionTT['Other_Sales'].sum()]})\nsns.set_theme(style=\"darkgrid\")\nplt.figure(figsize=(12,6))\nplt.xlabel(\"region\",fontsize=12)\nplt.ylabel(\"Sales Figures(in millions)\", fontsize=12)\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nsns.barplot(data=ps2TTSales,palette='muted').set(title='Take-Two Interactive PS2 Action Games Sales by Region')\nplt.savefig('Take-Two-ps2-action-game-sales')","52f1b710":"actionPublish = action.groupby(['Publisher']).size()\nactionPublishSum = actionPublish.to_frame(name='Total_Games').reset_index()\nactionPublishSum.sort_values(by=['Total_Games'],ascending=False,inplace=True)\nactionPublishSum = actionPublishSum.drop(index=actionPublishSum.index[20:])\nplt.figure(figsize=(10,5))\nsns.set_theme(style='darkgrid')\nsns.barplot(x=\"Total_Games\",y=\"Publisher\", data= actionPublishSum).set(\n            title='Top Publishers of Action Games')\nplt.savefig('Action-Game-Publishers')","dd88189f":"nintendo = vgdata.loc[vgdata['Publisher'] == 'Nintendo']\nninAction = nintendo.loc[nintendo['Genre'] == 'Action']\ntitleCount = len(ninAction)\nninActionSample = ninAction['Name'].to_frame()\nninActionSample[:20]","31a24df6":"ninActionSales= pd.DataFrame.from_dict({'North America':[ninAction['NA_Sales'].sum()],\n                                        'EU':[ninAction['EU_Sales'].sum()],\n                                        'Japan':[ninAction['JP_Sales'].sum()],\n                                        'Other':[ninAction['Other_Sales'].sum()]})\n\nsns.set_theme(style=\"darkgrid\")\nplt.figure(figsize=(12,6))\nplt.xlabel(\"region\",fontsize=12)\nplt.ylabel(\"Sales Figures(in millions)\", fontsize=12)\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nsns.barplot(data=ninActionSales,palette='muted').set(title='Nintendo Action Games Sales by Region')\nplt.savefig('Nintendo-Action-Game-Sales')","febe5b00":"When it comes to the average sales per game though, Action is one of the loss leaders.\nBarely able to break 250 thousand per game","eed8c977":"Breaking down the best selling games by Genre 21% of them are Action Games, shooters being the runner up","9d97e3f2":"Unshockingly, If you're developing for North America or Europe, **Action** and **Shooters** are the genres you'll want to make.\n\nIf you're in Japan, **Role Playing** games are the big winner despite making up 15% of the total pie","4700cfac":"looking at 20 publishers with the most games on the list","e5eec578":"Looking at the top 20 best selling video games, clearly the secret of having a best selling Video game is just be Nintendo. However, what if you're not?","e57e2e2a":"Activision:","f49051c0":"Take Two Interactive:","faaf4cb8":"Playstation 2 was very popular console for Action games","e47a7fa2":"Sony Computer Entertainment:","760bf522":"Once again, we find Nintendo as a Leader"}}