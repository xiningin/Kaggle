{"cell_type":{"a97c8e9b":"code","7617487f":"code","11a523b9":"code","4bd2df04":"code","c8aae4f8":"code","14dacc39":"code","39aa5539":"code","3f49130b":"code","7ce165af":"code","bad8a719":"code","b996484a":"code","13b81df2":"code","5b8a77bc":"code","4033c9a7":"code","7798fee2":"code","39f90baa":"code","333f75a8":"code","40b50b2c":"code","0ceb8d1b":"code","d65481c0":"code","e27863fa":"code","dc54b965":"code","294c787e":"code","580f370c":"code","f1c0e7e0":"code","cc80c7ef":"code","ca5ba0fc":"code","871d15b5":"code","33737826":"code","e2923360":"code","0bdf3f30":"code","67f3def1":"code","6c3dbb1f":"code","48c3d900":"code","463c209d":"code","bbe553cb":"code","74543be3":"code","32a8a2ad":"code","40876a52":"code","1e09b33e":"code","8aa2abec":"code","3bbac050":"code","613a9bd2":"code","ed332642":"code","420b0a94":"code","8a46aa3d":"code","44162bda":"code","7635fa79":"code","36fbc50c":"code","0dba3252":"code","4f194e24":"code","020b5a00":"code","7e3fd902":"code","c08d618e":"code","1ecf571d":"code","0b478228":"code","8dfa1406":"markdown","4321852c":"markdown"},"source":{"a97c8e9b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7617487f":"!pip install -Uqq fastbook kaggle waterfallcharts treeinterpreter dtreeviz\nimport fastbook\nfastbook.setup_book()","11a523b9":"from fastbook import *\nfrom fastai.tabular.all import *","4bd2df04":"path = '\/kaggle\/input\/tabular-playground-series-jul-2021\/'\ntrain = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jul-2021\/train.csv', low_memory= False)\ntrain.head()","c8aae4f8":"df_nn_cm = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jul-2021\/train.csv', low_memory= False)\ndf_nn_cm.drop(['target_benzene','target_nitrogen_oxides'], axis=1, inplace= True)\ndf_nn_cm.head()\n","14dacc39":"df_nn_bz = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jul-2021\/train.csv', low_memory= False)\ndf_nn_bz.drop(['target_carbon_monoxide','target_nitrogen_oxides'], axis=1, inplace= True)\ndf_nn_bz.head()","39aa5539":"df_nn_no = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jul-2021\/train.csv', low_memory= False)\ndf_nn_no.drop(['target_carbon_monoxide','target_benzene'], axis=1, inplace= True)\ndf_nn_no.head()","3f49130b":"test = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jul-2021\/test.csv', low_memory= False)\ntest.head()","7ce165af":"sample_submission = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jul-2021\/sample_submission.csv',low_memory=False)\nsample_submission","bad8a719":"dep_var_tcm = 'target_carbon_monoxide'\ndep_var_tbz = 'target_benzene'\ndep_var_tno ='target_nitrogen_oxides'","b996484a":"df_nn_cm[dep_var_tcm]=np.log(df_nn_cm[dep_var_tcm])\ndf_nn_cm = add_datepart(df_nn_cm, 'date_time')","13b81df2":"df_nn_bz[dep_var_tbz]=np.log(df_nn_bz[dep_var_tbz])\ndf_nn_bz = add_datepart(df_nn_bz, 'date_time')","5b8a77bc":"df_nn_no[dep_var_tno]=np.log(df_nn_no[dep_var_tno])\ndf_nn_no = add_datepart(df_nn_no, 'date_time')","4033c9a7":"xs_imp_cm = ['sensor_2', 'sensor_1', 'sensor_5', 'sensor_3', 'sensor_4',\n       'absolute_humidity','relative_humidity']\nxs_imp_bz=['sensor_2', 'sensor_3', 'sensor_4', 'absolute_humidity', 'sensor_5',\n       'sensor_1']\nxs_imp_no=['sensor_2', 'sensor_5', 'sensor_1', 'sensor_3', 'absolute_humidity' ,'sensor_4','deg_C', 'relative_humidity']","7798fee2":"df_nn_cm_final = df_nn_cm[list(xs_imp_cm)+[dep_var_tcm]]\ndf_nn_cm_final.head()","39f90baa":"df_nn_bz_final = df_nn_bz[list(xs_imp_bz)+[dep_var_tbz]]\n\ndf_nn_no_final = df_nn_no[list(xs_imp_no)+[dep_var_tno]]\ndf_nn_no_final.head()","333f75a8":"cont_cm,cat_cm = cont_cat_split(df_nn_cm_final, max_card=900, dep_var=dep_var_tcm)\ncont_bz,cat_bz = cont_cat_split(df_nn_bz_final, max_card=900, dep_var=dep_var_tbz)\ncont_no,cat_no = cont_cat_split(df_nn_no_final, max_card=900, dep_var=dep_var_tno)","40b50b2c":"print(cont_bz,cat_bz),print(cont_no,cat_no), print(cont_cm, cat_cm)","0ceb8d1b":"procs_nn = [Categorify, FillMissing, Normalize]\n","d65481c0":"#Look at the time period of test set, make sure it's more recent\ntest['date_time'].min(), test['date_time'].max()","e27863fa":"splits = (list(range(4902)), list(range(4902,7111)))","dc54b965":"to_nn_cm = TabularPandas(df_nn_cm_final, procs_nn, cat_cm, cont_cm,\n                      splits=splits, y_names=dep_var_tcm)","294c787e":"to_nn_bz = TabularPandas(df_nn_bz_final, procs_nn, cat_bz, cont_bz,\n                      splits=splits, y_names=dep_var_tbz)","580f370c":"to_nn_no = TabularPandas(df_nn_no_final, procs_nn, cat_no, cont_no,\n                      splits=splits, y_names=dep_var_tno)","f1c0e7e0":"dls_cm = to_nn_cm.dataloaders(1024)\n","cc80c7ef":"dls_bz= to_nn_bz.dataloaders(1024)\ndls_no = to_nn_no.dataloaders(1024)","ca5ba0fc":"y_cm = to_nn_cm.train.y\ny_cm.min(),y_cm.max()","871d15b5":"y_bz = to_nn_bz.train.y\ny_bz.min(),y_bz.max()","33737826":"y_no = to_nn_no.train.y\ny_no.min(),y_no.max()","e2923360":"learn_cm = tabular_learner(dls_cm, y_range=(-2.3,2.2), layers=[500,250],\n                        n_out=1, metrics=rmse,loss_func=nn.MSELoss())","0bdf3f30":"learn_bz = tabular_learner(dls_bz, layers=[500,250],y_range=(-2.3,3.73),\n                        n_out=1, metrics=rmse,loss_func=nn.MSELoss())\nlearn_no = tabular_learner(dls_no, layers=[1000,800],y_range=(0.64,6.79),\n                        n_out=1, metrics=rmse,loss_func=nn.MSELoss())","67f3def1":"learn_cm.model","6c3dbb1f":"learn_bz.model","48c3d900":"learn_no.model","463c209d":"learn_cm.lr_find()","bbe553cb":"learn_bz.lr_find()","74543be3":"learn_no.lr_find()","32a8a2ad":"learn_cm.fit_one_cycle(5, 1e-2)\n","40876a52":"learn_cm.fit_one_cycle(8, 1e-3)","1e09b33e":"learn_cm.fit_one_cycle(8, 1e-4)","8aa2abec":"learn_cm.fit_one_cycle(5, 1e-5)","3bbac050":"learn_cm.fit_one_cycle(5, 1e-6)","613a9bd2":"learn_cm.fine_tune(5)","ed332642":"learn_bz.fit_one_cycle(5, 1e-2)","420b0a94":"learn_bz.fit_one_cycle(5, 1e-3)","8a46aa3d":"learn_bz.fit_one_cycle(5, 1e-4)","44162bda":"learn_bz.fit_one_cycle(5, 1e-5)","7635fa79":"learn_bz.fine_tune(5)","36fbc50c":"learn_no.fit_one_cycle(5, 1e-2)","0dba3252":"learn_no.fit_one_cycle(5, 1e-3)","4f194e24":"learn_no.fit_one_cycle(6, 1e-4)","020b5a00":"learn_no.fit_one_cycle(7, 1e-5)","7e3fd902":"learn_no.fine_tune(6)","c08d618e":"dl_cm = learn_cm.dls.test_dl(test[cont_cm+cat_cm])\npred_cm = learn_cm.get_preds(dl=dl_cm)[0].numpy()[:,0]\ndl_bz = learn_bz.dls.test_dl(test[cont_bz+cat_bz])\npred_bz = learn_bz.get_preds(dl=dl_bz)[0].numpy()[:,0]\ndl_no = learn_no.dls.test_dl(test[cont_no+cat_no])\npred_no = learn_no.get_preds(dl=dl_no)[0].numpy()[:,0]\n","1ecf571d":"sample_submission[sample_submission.columns[1]] = np.exp(pred_cm)\nsample_submission[sample_submission.columns[2]] = np.exp(pred_bz)\nsample_submission[sample_submission.columns[3]] = np.exp(pred_no)\nsample_submission","0b478228":"sample_submission.to_csv('submission_nn9.csv', index=False)","8dfa1406":"Extracting important columns data from my previous notebook: https:\/\/www.kaggle.com\/rajatpaliwal02\/tps-july-fastai-decision-tress-random-forset\/edit","4321852c":"Calculate where we should cut the validation set. We pick the most recent 'n' records in training set where n is the number of entries in test set."}}