{"cell_type":{"b27b3779":"code","e34eda0b":"code","371aa1d9":"code","447a5f6d":"code","b9bdd571":"code","42f226d4":"code","a3cf1791":"code","1eb2482f":"code","ce43c4f4":"code","7b532364":"code","f6d9433b":"code","1cc4b94e":"code","e7594efc":"code","46574acb":"code","ad51aeeb":"code","d2d97367":"code","251539f7":"code","27ef3cde":"code","11b7a4c2":"code","2358d2d7":"code","badb7e54":"code","60ca217d":"markdown"},"source":{"b27b3779":"import lightgbm as lgb\nimport numpy as np\nimport pandas as pd\nimport random\nimport optuna\nfrom sklearn.model_selection import KFold, train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import mean_squared_error","e34eda0b":"train = pd.read_csv(\"..\/input\/tabular-playground-series-jan-2021\/train.csv\")\ntest = pd.read_csv(\"..\/input\/tabular-playground-series-jan-2021\/test.csv\")","371aa1d9":"train.head()","447a5f6d":"test.head()","b9bdd571":"print(train.columns.to_list())","42f226d4":"target = train['target']\ndata = train.drop(['target','id'],axis=1)","a3cf1791":"columns=data.columns.to_list()\nprint(columns)","1eb2482f":"def objective(trial,data=data,target=target):\n    \n    train_x, test_x, train_y, test_y = train_test_split(data, target, test_size=0.2,random_state=42)\n    param =   {\n        'num_leaves': trial.suggest_int('num_leaves', 2, 256),\n        'objective': trial.suggest_categorical('objective',['regression','rmse','binary']),  \n        'max_depth': -1,\n        'learning_rate': 0.1,\n        \"boosting\": \"gbdt\",\n        'lambda_l1': trial.suggest_loguniform('lambda_l1', 1e-8, 10.0),\n        'lambda_l2': trial.suggest_loguniform('lambda_l2', 1e-8, 10.0),\n        \"bagging_freq\": 5,\n        \"bagging_fraction\": trial.suggest_uniform('bagging_fraction', 0.1, 1.0),\n        \"feature_fraction\": trial.suggest_uniform('feature_fraction', 0.4, 1.0),\n        \"verbosity\": -1,\n    }\n    model = lgb.LGBMRegressor(**param)      \n    model.fit(train_x,train_y,eval_set=[(test_x,test_y)],early_stopping_rounds=100,verbose=False)\n    preds = model.predict(test_x)\n    rmse = mean_squared_error(test_y, preds,squared=False)\n    \n    return rmse","ce43c4f4":"study = optuna.create_study(direction='minimize')\nstudy.optimize(objective, n_trials=16)\nprint('Number of finished trials:', len(study.trials))\nprint('Best trial:', study.best_trial.params)","7b532364":"study.trials_dataframe()","f6d9433b":"# shows the scores from all trials\noptuna.visualization.plot_optimization_history(study)","1cc4b94e":"# interactively visualizes the hyperparameters and scores\noptuna.visualization.plot_parallel_coordinate(study)","e7594efc":"# shows the evolution of the search\noptuna.visualization.plot_slice(study)","46574acb":"# parameter interactions on an interactive chart.\noptuna.visualization.plot_contour(study, params=['num_leaves','objective'])","ad51aeeb":"# Visualize parameter importances.\noptuna.visualization.plot_param_importances(study)","d2d97367":"# Visualize empirical distribution function\noptuna.visualization.plot_edf(study)","251539f7":"Best_trial=study.best_trial.params\nprint(Best_trial)","27ef3cde":"sample = pd.read_csv(\"..\/input\/tabular-playground-series-jan-2021\/sample_submission.csv\")\nprint(sample.shape)\nsample","11b7a4c2":"preds = np.zeros((sample.shape[0]))\nkf = KFold(n_splits=5,random_state=48,shuffle=True)\nfor trn_idx, test_idx in kf.split(train[columns],target):\n    X_tr,X_val=train[columns].iloc[trn_idx],train[columns].iloc[test_idx]\n    y_tr,y_val=target.iloc[trn_idx],target.iloc[test_idx]\n    model = lgb.LGBMRegressor(**Best_trial)\n    model.fit(X_tr,y_tr,eval_set=[(X_val,y_val)],early_stopping_rounds=100,verbose=False)\n    preds+=model.predict(test[columns])\/kf.n_splits   ###### predict_proba\n    rmse=mean_squared_error(y_val, model.predict(X_val),squared=False)\n    print(rmse)","2358d2d7":"print(preds.shape)\nprint(preds[0])","badb7e54":"subm = sample\nsubm['target'] = preds\nsubm.to_csv('submission.csv',index=False)\nsubm","60ca217d":"# LightGBM with Optuna tuning\n* doc: \nhttps:\/\/github.com\/optuna\/optuna"}}