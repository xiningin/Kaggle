{"cell_type":{"6fb63a8b":"code","948911af":"code","bf1c5e96":"code","f797525a":"code","dae465ba":"code","8711b2ba":"code","0c9f137d":"code","4120e331":"code","4b841fd7":"code","ce41810f":"code","e837f134":"code","7e7ded80":"code","8ccf6ae6":"code","8dbbb7f4":"code","2346f362":"code","11597d42":"code","6feb1c8e":"code","e01e29b9":"code","8d2c91f2":"code","21bb9e02":"code","8832ad81":"code","eed9c80d":"code","1ac18ccc":"code","260a37a9":"code","a0698605":"code","8ff29163":"code","bf0ff18b":"code","ed009b2f":"code","f67b3abb":"code","89457445":"code","66baa24f":"code","74ba7b3c":"code","c72ef606":"code","8726b474":"code","c29352e7":"markdown","b438d318":"markdown","fb15029d":"markdown"},"source":{"6fb63a8b":"'''\nImporting all the necessary libraries\n'''\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","948911af":"import os\nprint(os.listdir(\"..\/input\"))","bf1c5e96":"'''\nLoad the NBA Player of the week file from Kaggle\n'''\ndf=pd.read_csv('..\/input\/NBA_player_of_the_week.csv')","f797525a":"df.head()","dae465ba":"df.info()","8711b2ba":"'''\ndecribe() function is use to visualize the numeric value of the dataset\n'''\ndf.describe()","0c9f137d":"'''\nAs you can see Height and Weight data wasn't clean\nThe units are'nt the same.\nSo we clean the data.\n'''\ndf[['Height','Weight']]","4120e331":"'''\nfunction of cleaning the Weight Column\n'''\n\ndef weight_in_lbs(weight):\n    try:\n        return int(weight)\n    except:\n        pass\n    finally:\n        if len(weight.split('k'))==2:\n            return int(weight.split('k')[0])*2.23\n        ","4b841fd7":"df['Weight']=df['Weight'].apply(weight_in_lbs)","ce41810f":"df['Weight']","e837f134":"'''\nCleaning the height column\n'''\ndef height_in_cm(height):\n    try:\n        return (int(height.split('-')[0])*30.48) + (int(height.split('-')[1])*2.54)\n    except:\n        pass\n    finally:\n        if len(height.split('c'))==2:\n            return int(height.split('c')[0])","7e7ded80":"df['Height']=df['Height'].apply(height_in_cm)","8ccf6ae6":"df['Height']","8dbbb7f4":"'''\nThis returns the smallest and the tallest player.\n'''\nprint(df['Player'][df['Height'].idxmax()],df['Height'].max(),'cm','The Tallest Player to ever entitiled a Player of the Week Award')\nprint(df['Player'][df['Height'].idxmin()],df['Height'].min(),'cm','The Smallest Player to ever entitiled a Player of the Week Award')","2346f362":"'''\nThis returns the lightest and the heaviest player.\n'''\n\nprint(df['Player'][df['Weight'].idxmax()],df['Weight'].max(),'lbs','The Heaviest Player to ever entitiled a Player of the Week Award')\nprint(df['Player'][df['Weight'].idxmin()],df['Weight'].min(),'lbs','The Lightest Player to ever entitiled a Player of the Week Award')","11597d42":"'''\nNow we have to deal with missing data!\nFor the conferrence column we have to fill those missing data\n'''\ndf['Conference']","6feb1c8e":"'''\nProviding NBA Team to Missing data on Conference\n'''\n\nNBA_team=[]\nfor team in df['Team']:\n    NBA_team.append(team)\nNBA_team=set(NBA_team)\n\nest_team=['Atlanta Hawks',\n 'Boston Celtics',\n 'Brooklyn Nets',\n 'Charlotte Bobcats',\n 'Charlotte Hornets',\n 'Chicago Bulls',\n 'Cleveland Cavaliers','Detroit Pistons','Indiana Pacers', 'Miami Heat',\n 'Milwaukee Bucks','New Jersey Nets', 'New York Knicks', 'Orlando Magic','Philadelphia Sixers','Seattle SuperSonics',\n 'Toronto Raptors']\n\nwst_team=['Dallas Mavericks',\n 'Denver Nuggets','Golden State Warriors',\n 'Houston Rockets','Los Angeles Clippers',\n 'Los Angeles Lakers',\n 'Memphis Grizzlies','Minnesota Timberwolves','New Orleans Hornets',\n 'New Orleans Pelicans','Oklahoma City Thunder','Phoenix Suns',\n 'Portland Trail Blazers',\n 'Sacramento Kings',\n 'San Antonio Spurs','Utah Jazz',\n 'Washington Bullets',\n 'Washington Wizards']","e01e29b9":"'''\nThis function returns whether the team is on the east or west. \n'''\ndef input_conf(team):\n    for h in team:\n        for i in est_team:\n            if i == team:\n                return('East')\n            for j in wst_team:\n                if j==team:\n                    return ('West')\n\n","8d2c91f2":"df['Conference']=df['Team'].apply(input_conf)","21bb9e02":"df['Conference']","8832ad81":"plt.figure(figsize=(20,10))\ndf['Conference'].value_counts().plot(kind='bar')","eed9c80d":"'''\nReal Value:If two awards given at the same week [East & West] the player got 0.5, else 1 point.\n'''\nplt.figure(figsize=(20,10))\nsns.countplot(x='Real_value',hue='Conference',data=df)","1ac18ccc":"'''\nVisualization for Age and Weight.\n'''\nsns.jointplot(x='Age',y='Weight',data=df)","260a37a9":"'''\nVisualization for Age and Height.\n'''\nsns.jointplot(x='Age',y='Height',data=df)","a0698605":"'''\nVisulatization of Seasons in league and Age\n'''\nsns.jointplot(x='Seasons in league',y='Age',data=df)","8ff29163":"print(df['Player'][df['Seasons in league'].idxmax()],', receive player of the week award early in his career')\nprint(df['Player'][df['Seasons in league'].idxmin()],', receive player of the week award late in his career')","bf0ff18b":"plt.figure(figsize=(20,10))\ndf['Player'].value_counts().head().plot(kind='bar')\nplt.title(\"Top 5 players\")","ed009b2f":"'''\nCreate a separate dataset for each player\n'''\nMalone=pd.DataFrame(df[df['Player']=='Karl Malone'])\nMJ=pd.DataFrame(df[df['Player']=='Michael Jordan'])\nKD=pd.DataFrame(df[df['Player']=='Kevin Durant'])\nKobe=pd.DataFrame(df[df['Player']=='Kobe Bryant'])\nLeBron=pd.DataFrame(df[df['Player']=='LeBron James'])","f67b3abb":"'''\nVisualization comparison of each players. \n'''\nsns.lmplot(data=MJ,x='Age',y='Season short',hue='Team',col='Real_value',fit_reg=False)\nsns.lmplot(data=Malone,x='Age',y='Season short',hue='Team',col='Real_value',fit_reg=False)\nsns.lmplot(data=Kobe,x='Age',y='Season short',hue='Team',col='Real_value',fit_reg=False)\nsns.lmplot(data=LeBron,x='Age',y='Season short',hue='Team',col='Real_value',fit_reg=False)\nsns.lmplot(data=KD,x='Age',y='Season short',hue='Team',col='Real_value',fit_reg=False)","89457445":"sns.countplot(data=Malone,x='Real_value')\nplt.title(\"Malone's Real Value\")","66baa24f":"sns.countplot(data=KD,x='Real_value')\nplt.title(\"KD's Real Value\")","74ba7b3c":"sns.countplot(data=Kobe,x='Real_value')\nplt.title(\"Kobe's Real Value\")","c72ef606":"sns.countplot(data=LeBron,x='Real_value')\nplt.title(\"Lebron's Real Value\")","8726b474":"sns.countplot(data=MJ,x='Real_value')\nplt.title(\"MJ's Real Value\")","c29352e7":"## Check for the info of the dataset (head,describe, and info)","b438d318":"> Let us now compare the top 5 most awarded players based of their awards and it's Real Value","fb15029d":"> **Summary:**\n> If based of the data if the real impact on the game will be based of the real value **MJ** > any other player."}}