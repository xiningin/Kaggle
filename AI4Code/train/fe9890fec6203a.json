{"cell_type":{"7397e4f5":"code","f0ae8c15":"code","d680ac03":"code","3d06a36d":"code","cf6e403c":"code","1394427c":"code","07a52226":"code","6396230e":"code","339b3172":"code","b77fcc7d":"markdown","33ed59b0":"markdown","536cc33a":"markdown","c72c2b9c":"markdown","618d3cf5":"markdown","9aeba9d3":"markdown","2266bb11":"markdown","da2e61d8":"markdown","77bbd988":"markdown","eacc9a11":"markdown","2013ae73":"markdown","cee7fdae":"markdown","45e314ca":"markdown"},"source":{"7397e4f5":"import pandas as pd","f0ae8c15":"manipulated_data=pd.read_csv(\"\/kaggle\/input\/mp-data-visualization\/manipulated_data.csv\")\nmanipulated_data.head()","d680ac03":"manipulated_data.info()","3d06a36d":"manipulated_data.drop(columns=['month','day','year'],inplace=True)","cf6e403c":"import scipy.stats as stats\nfrom scipy.stats import chi2_contingency\n\nimp_var=[]\nh=dict()\nu=dict()\nunimp_var=[]\n\nclass ChiSquare:\n    def __init__(self, dataframe):\n        self.df = dataframe\n        self.p = None #This is The P-Value\n        self.chi2 = None #Here we go for Chi Test Statistic\n        self.dof = None\n        \n        self.dfTabular = None\n        self.dfExpected = None\n        \n    def _print_chisquare_result(self, colX, alpha):\n        if self.p<alpha:\n          h[colX]=self.p\n        else:\n          unimp_var.append(colX)\n          u[colX]=self.p\n            \n    def TestIndependence(self,colX,colY, alpha=0.05):\n        X = self.df[colX].astype(str)\n        Y = self.df[colY].astype(str)\n        \n        self.dfObserved = pd.crosstab(Y,X) \n        chi2, p, dof, expected = stats.chi2_contingency(self.dfObserved.values)\n        self.p = p\n        self.chi2 = chi2\n        self.dof = dof \n        \n        self.dfExpected = pd.DataFrame(expected, columns=self.dfObserved.columns, index = self.dfObserved.index)\n        \n        self._print_chisquare_result(colX, alpha)","1394427c":"cT = ChiSquare(manipulated_data)\ntestColumns = manipulated_data.drop(columns=['corona_result']).columns\n\nfor var in testColumns:\n    cT.TestIndependence(colX=var,colY=\"corona_result\" )  ","07a52226":"imp=pd.DataFrame()\nm = sorted(h.items(), key=lambda x: x[1], reverse=False)\nfor i in range(len(m)):\n  imp_var.append(m[i][0])\nif(len(imp_var)>len(unimp_var)):\n  for i in range(len(imp_var)-len(unimp_var)):\n    unimp_var.append(\"\")\nelse:\n  for i in range(len(unimp_var)-len(imp_var)):\n    imp_var.append(\"\")\nimp['Important Variables']=imp_var\nimp['Unimportant Variables']=unimp_var\nimp","6396230e":"manipulated_data.drop(['gender'],axis=1,inplace=True)\nmanipulated_data.info()","339b3172":"manipulated_data.to_csv(\"fs_data.csv\",index=False)","b77fcc7d":"> #### Since its categorical data chi-square test is more preferable","33ed59b0":"### Creating Function of Chi-Square test","536cc33a":"### Applying Feature Selection on Manipulated Data","c72c2b9c":"### Chi-Square Test for Feature Selection","618d3cf5":"![Chi- square score](https:\/\/media.geeksforgeeks.org\/wp-content\/uploads\/Capture-214.png)","9aeba9d3":"#### Dropping Features 'month','day' and 'year'","2266bb11":"### Data Loading","da2e61d8":"### Output CSV","77bbd988":"### Lets Check For Important and Unimporatant Features","eacc9a11":"## **Step 3: Feature Selection**\n<br>\n\n> #### By: Atharv Chaudhari","2013ae73":"### Conclusions\n\n> 1. *Since The Data was Categorical so we have used Chi-Sqaure Test For Feature Selection.*\n> 2. *After performing chi square test, non-important feature stated was: gender*","cee7fdae":"### Removing Unimportant Features","45e314ca":"> **1.** **Observed frequency** = No. of observations of class\n>\n> **2.** **Expected frequency** = No. of expected observations of class if there was no relationship between the feature and the target."}}