{"cell_type":{"aa941382":"code","31fa37be":"code","cd80a510":"code","3d653cba":"code","e9e05345":"code","7f80f447":"code","2f1ed652":"code","4a875aa5":"code","93eed651":"code","90f9392c":"code","c1792891":"code","a726ae26":"code","babe625f":"code","d1884328":"code","65497c65":"code","080d5200":"code","fd9c173c":"code","bff7a0da":"code","d73006de":"code","f7020ad3":"code","bca32d2e":"code","476093a5":"code","d7af7afe":"code","d38ceecc":"code","8b71dc38":"code","5bbfbe59":"markdown","76483185":"markdown","fd7044e0":"markdown"},"source":{"aa941382":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt \nimport seaborn as sns\n%matplotlib inline\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.offline as py\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","31fa37be":"df = pd.read_csv('..\/input\/russia-investigation\/russia-investigation.csv', encoding='ISO-8859-2')\ndf.head()","cd80a510":"df.isnull().sum()","3d653cba":"# Count Plot\nplt.style.use(\"classic\")\nplt.figure(figsize=(10, 8))\nsns.countplot(df['type'], palette='Accent_r')\nplt.xlabel(\"type\")\nplt.ylabel(\"Count\")\nplt.title(\"Type of Charge\")\nplt.xticks(rotation=45, fontsize=8)\nplt.show()","e9e05345":"px.histogram(df, x='investigation-start', color='president', title='Political Investigations')","7f80f447":"fig = px.bar(df, x= \"name\", y= \"type\", color_discrete_sequence=['crimson'], title='Parts & Type of Investigations')\nfig.show()","2f1ed652":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.name)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='GnBu', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","4a875aa5":"fig = px.bar(df, x= \"investigation\", y= \"name\", color_discrete_sequence=['#2B3A67'], title='Parts & Investigations')\nfig.show()","93eed651":"df[\"investigation-days\"] = df[\"cp-days\"]\/100\nfig = px.scatter(df, x=\"investigation-days\", y=\"cp-days\", color=\"president\", error_x=\"investigation-days\", error_y=\"investigation-days\")\nfig.show()","90f9392c":"# some more visualisation\n# Investigations\nsns.barplot(\"investigation\", y=\"investigation-days\", data=df, saturation=.5, palette = 'inferno')\nplt.xticks(rotation=45)\nplt.show()","c1792891":"!pip install dabl\nimport dabl","a726ae26":"#Codes by Carl McBride Ellis https:\/\/www.kaggle.com\/carlmcbrideellis\/absolute-beginners-titanic-eda-using-dabl\n\ndabl.detect_types(df)","babe625f":"dabl.plot(df, target_col=\"investigation-days\")","d1884328":"corr = df.corrwith(df['investigation-days']).sort_values(ascending = False).to_frame()\ncorr.columns = ['Correlations']\nplt.subplots(figsize = (5,25))\nsns.heatmap(corr,annot = True,cmap = 'RdBu',linewidths = 0.4,linecolor = 'black')\nplt.title('Investigations Correlation w.r.t Investigation Days')","65497c65":"from fbprophet import Prophet\ndf1=df.rename(columns={\"investigation-start\": \"ds\", \"pardoned\": \"y\"})\ndf1\nm = Prophet()\nm.fit(df1)","080d5200":"future = m.make_future_dataframe(periods=365)\nfuture.tail()","fd9c173c":"forecast = m.predict(future)\nforecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail()","bff7a0da":"fig1 = m.plot(forecast)","d73006de":"fig2 = m.plot_components(forecast)","f7020ad3":"from fbprophet.plot import plot_plotly\nimport plotly.offline as py\npy.init_notebook_mode()\n\nfig = plot_plotly(m, forecast)  # This returns a plotly Figure\npy.iplot(fig)","bca32d2e":"_ = pd.pivot_table(df, values='pardoned', index='investigation-start').plot(style='-o', title=\"Political Investigations\")","476093a5":"# 3D Scatter Plot\nfig = px.scatter_3d(df, x='pardoned', y='investigation', z='investigation-start')\nfig.show()","d7af7afe":"#Code by Marie  https:\/\/www.kaggle.com\/mariapushkareva\/wine-reviews-spacy-bert\n\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\n\nstopwords = set(STOPWORDS)\nwordcloud = WordCloud(\n    background_color='black',\n    stopwords=stopwords,\n    colormap='Set2',\n    max_words=300,\n    max_font_size=200, \n    width=1000, height=800,\n    random_state=42,\n).generate(\" \".join(df['president'].astype(str)))\nprint(wordcloud)\nfig = plt.figure(figsize = (12,14))\nplt.imshow(wordcloud)\nplt.title(\"Presidents\",fontsize=25)\nplt.axis('off')","d38ceecc":"#Code by Marie  https:\/\/www.kaggle.com\/mariapushkareva\/wine-reviews-spacy-bert\n\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\n\nstopwords = set(STOPWORDS)\nwordcloud = WordCloud(\n    background_color='white',\n    stopwords=stopwords,\n    colormap='RdBu',\n    max_words=300,\n    max_font_size=200, \n    width=1000, height=800,\n    random_state=42,\n).generate(\" \".join(df['investigation'].astype(str)))\nprint(wordcloud)\nfig = plt.figure(figsize = (12,14))\nplt.imshow(wordcloud)\nplt.title(\"Investigations\",fontsize=25)\nplt.axis('off')","8b71dc38":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#2B3A67','#42a7f5','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Programming is more than an important practical art. It is also a gigantic undertaking in the foundations of knowledge, Grace Hopper quote' )","5bbfbe59":"![](https:\/\/blogsmedia.lse.ac.uk\/blogs.dir\/58\/files\/2018\/06\/New-blog-image-test-2-1.png)blogs.lse.ac.uk","76483185":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcTVlE0V18mlw42-IpwDS4vpSwOaCuVyOvRUtQ&usqp=CAU)channelnewsasia.com","fd7044e0":"#Codes from attollos https:\/\/www.kaggle.com\/attollos\/time-series-forecast-example-with-prophet\/"}}