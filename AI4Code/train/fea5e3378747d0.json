{"cell_type":{"a4eeaf7d":"code","350a9f8c":"code","59058117":"code","e95cf5ad":"code","c012a279":"code","e398bd5c":"code","f4248274":"code","1e786cee":"code","c1de404d":"code","2ebcbf53":"code","a0bd2fcb":"code","dc28105d":"code","51a1374d":"code","3dd2329f":"code","c4ce7d1d":"markdown","42a11b14":"markdown","be1f5f17":"markdown","6f89f211":"markdown"},"source":{"a4eeaf7d":"import numpy as np\nimport pandas as pd\nfrom scipy import signal\nfrom scipy.fft import fftshift\nfrom tqdm import tqdm_notebook as tqdm\n\n# visualize\nimport matplotlib.pyplot as plt\nimport matplotlib.style as style\nimport seaborn as sns\nfrom matplotlib import pyplot\nfrom matplotlib.ticker import ScalarFormatter\nsns.set_context(\"talk\")\nstyle.use('fivethirtyeight')","350a9f8c":"# load data\ndf_train = pd.read_csv(\"..\/input\/data-without-drift\/train_clean.csv\")\ntrain_time   = df_train[\"time\"].values.reshape(-1,500000)\ntrain_signal = df_train[\"signal\"].values.reshape(-1,500000)\ntrain_opench = df_train[\"open_channels\"].values.reshape(-1,500000)\n# df_test = pd.read_csv(\"..\/input\/data-without-drift\/test_clean.csv\")\n# test_time   = df_test[\"time\"].values.reshape(-1,500000)\n# test_signal = df_test[\"signal\"].values.reshape(-1,500000)","59058117":"# # sample data for quick test\n# train_time = train_time[:, ::100]\n# train_signal = train_signal[:, ::100]\n# train_opench = train_opench[:, ::100]","e95cf5ad":"train_signal.shape","c012a279":"def spectrogram_plot(train_signal, train_opench, i):\n    fig, ax = plt.subplots(3, 1, figsize=(8, 8), \n                           gridspec_kw={\"height_ratios\": [1, 3, 1]})\n    ax = ax.flatten()\n    \n    # open channels\n    ax[0].plot(np.arange(500_000), train_opench[i], lw=0.05, color='r')\n    ax[0].set_title(f\"batch {i}\")\n    ax[0].set_ylabel(\"open channels\")\n    ax[0].set_xlim([0, 500_000])\n    \n    # spectrogram\n    fs = 10_000 # sampling rate is 10kHz\n    f, t, Sxx = signal.spectrogram(train_signal[i], fs)\n    ax[1].pcolormesh(t, f, -np.log(Sxx), cmap=\"plasma\")\n    ax[1].set_ylabel('Frequency [Hz]')\n    ax[1].set_ylim([0, 500])\n    ax[1].set_xlabel('Time [sec]')\n    plt.tight_layout()\n    \n    # Power histogram (collapsed across time)\n    ax[2].plot(f, np.mean(Sxx, axis=1), color=\"g\")\n    ax[2].set_xlabel(\"Frequency [Hz]\")\n    ax[2].set_xlim([0, 500])\n    ax[2].set_ylabel(\"Power\")\n    \nspectrogram_plot(train_signal, train_opench, 0)","e398bd5c":"spectrogram_plot(train_signal, train_opench, 1)","f4248274":"spectrogram_plot(train_signal, train_opench, 2)","1e786cee":"spectrogram_plot(train_signal, train_opench, 3)","c1de404d":"spectrogram_plot(train_signal, train_opench, 4)","2ebcbf53":"spectrogram_plot(train_signal, train_opench, 5)","a0bd2fcb":"spectrogram_plot(train_signal, train_opench, 6)","dc28105d":"spectrogram_plot(train_signal, train_opench, 7)","51a1374d":"spectrogram_plot(train_signal, train_opench, 8)","3dd2329f":"spectrogram_plot(train_signal, train_opench, 9)","c4ce7d1d":"The white noise should have equal intensity across different frequencies. According to the spectrograms above, the added noise does not look like the perfect white noise.\nRather the Fourier space exhibits the sharp increase up to 30-40Hz then gradual decrease as a function of frequency.","42a11b14":"As it has been pointed out (like in [this amazing kernel](https:\/\/www.kaggle.com\/friedchips\/on-markov-chains-and-the-competition-data) by [Markus F](https:\/\/www.kaggle.com\/friedchips), the signals in this competition data are simple Markov processes combined with Gaussian noise. \n\nHere I tried to visualize what's going on in the signal in the Fourier space by computing the Fourier transform and plot the spectrogram. The aim was to clearly visualize the nature of the added noise and see if there is any correlation between Fourier features of the signal and the open channels. If the noise is a pure white noise where the power is equal across different frequencies, we don't have a high hope to use some Fourier features to make a good prediction. If there is a systematic pattern in the noise, well, let's think about what we can do:) ","be1f5f17":"I plot (1) time vs open channels, (2) spectrogram, (3) power spectrum to hopefully get insight into the signal and noise.","6f89f211":"Let's load the data and split it into the 10 separate measurement sequences. I use cleaned data from [this kernel](https:\/\/www.kaggle.com\/friedchips\/clean-removal-of-data-drift)."}}