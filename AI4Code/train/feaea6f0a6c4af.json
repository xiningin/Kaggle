{"cell_type":{"68ebdcac":"code","3bce9eea":"code","f7473403":"code","d4cdf89c":"code","5a5c7a29":"code","8d7db396":"code","b1d30089":"code","29c3d332":"code","e05ca29a":"code","7493a7c4":"code","1f2b33a5":"code","da1f36c2":"code","14302f5e":"code","8a4dcb0a":"code","2e4318d2":"code","bae25f30":"code","8c6ae143":"code","323eab28":"code","b46a5167":"code","f9a19003":"code","4e3ac44f":"code","2b11bb03":"code","d7a5eeb4":"code","935f9e14":"code","8c3fbc5e":"code","554989ab":"code","dd861403":"markdown","d96e0493":"markdown","d0312c97":"markdown","5bf5da14":"markdown","350d911a":"markdown","cb7dde2b":"markdown","89b4d926":"markdown","b70d591e":"markdown","57db9232":"markdown","59e093c2":"markdown","88f12d86":"markdown","61ef67cf":"markdown"},"source":{"68ebdcac":"import pandas as pd\nimport numpy as np\nfrom sklearn.preprocessing import MinMaxScaler, RobustScaler, MaxAbsScaler\n\nimport matplotlib.pyplot as plt\n\nimport keras","3bce9eea":"df = pd.read_csv(\"..\/input\/GOOGL_2006-01-01_to_2018-01-01.csv\")\ndf.head()","f7473403":"df.Date.is_unique","d4cdf89c":"print(\"Number of Na\")\nfor i in df.columns:\n    print(i,\":\", sum(df[i].isna()))","5a5c7a29":"df.Date = pd.to_datetime(df.Date, format=\"%Y-%m-%d\")","8d7db396":"df.info()","b1d30089":"df.set_index(\"Date\", inplace=True)\ndf.drop(\"Name\", axis=1, inplace=True)\nscaler = MinMaxScaler()\ndf_1 = scaler.fit_transform(df)\ndf_1 = pd.DataFrame(df_1, columns=df.columns)","29c3d332":"# df.Open = (df.Open - min(df.Open)) \/ (max(df.Open) - min(df.Open))","e05ca29a":"plt.figure(figsize=(25, 12))\nplt.suptitle(\"Google stock price\", size=20)\n\nplt.subplot(2, 2, 1)\nplt.plot(df.index, df_1.Open)\nplt.xlabel(\"Date\")\nplt.title(\"Open\")\n\nplt.subplot(2, 2, 2)\nplt.plot(df.index, df_1.High)\nplt.xlabel(\"Date\")\nplt.title(\"High\")\n\nplt.subplot(2, 2, 3)\nplt.plot(df.index, df_1.Low)\nplt.xlabel(\"Date\")\nplt.title(\"Low\")\n\nplt.subplot(2, 2, 4)\nplt.plot(df.index, df_1.Close)\nplt.xlabel(\"Date\")\nplt.title(\"Close\")\n\nplt.show()","7493a7c4":"plt.figure(figsize=(25, 12))\nplt.suptitle(\"Google stock Volume\", size=20)\n\nplt.subplot(2, 2, 1)\nplt.plot(df.index, df_1.Volume)\nplt.xlabel(\"Date\")\nplt.title(\"Volume\")\n\nplt.subplot(2, 2, 2)\nplt.plot(df.index, np.log10(df_1.Volume))\nplt.xlabel(\"Date\")\nplt.title(\"Volume log scale\")\n\nplt.show()","1f2b33a5":"input_len = 30","da1f36c2":"test = df_1[df.index>=\"2017-01-01\"]\ntrain = df_1[df.index<\"2017-01-01\"]","14302f5e":"train_x = []\nfor i in range(input_len, len(train)):\n    train_x.append(train.iloc[i-30:i, 1])\n\ntrain_y = train.iloc[input_len:, 1]\n\ntrain_x = np.array(train_x)\ntrain_y = np.array(train_y)\n\ntrain_x = np.reshape(train_x, (train_x.shape[0], train_x.shape[1], 1))","8a4dcb0a":"test_x = []\nfor i in range(input_len, len(test)):\n    test_x.append(test.iloc[i-30:i, 1])\n\ntest_y = test.iloc[input_len:, 1]\n\ntest_x = np.array(test_x)\ntest_y = np.array(test_y)\n\ntest_x = np.reshape(test_x, (test_x.shape[0], test_x.shape[1], 1))","2e4318d2":"train_x.shape, train_y.shape","bae25f30":"test_x.shape, test_y.shape","8c6ae143":"RNN = keras.Sequential()","323eab28":"RNN.add(keras.layers.LSTM(units=10, stateful=True, return_sequences=True, batch_input_shape=(1, train_x.shape[1], 1)))\n\nRNN.add(keras.layers.LSTM(units=10, stateful=True, return_sequences=True))\n\nRNN.add(keras.layers.LSTM(units=10, stateful=True, return_sequences=True))\n\nRNN.add(keras.layers.LSTM(units=10))\n\nRNN.add(keras.layers.Dense(units=1))","b46a5167":"RNN.compile(optimizer=\"RMSprop\", loss=\"MSE\")","f9a19003":"for i in range(5):\n    RNN.fit(train_x, train_y, epochs=1, batch_size=1)\n    RNN.reset_states()","4e3ac44f":"# save model\nRNN.save(\"RNN.h5\")","2b11bb03":"result = RNN.predict(test_x, batch_size=1)","d7a5eeb4":"temp = df_1[df.index>=\"2017-02-15\"]\ntemp.Open = result\nprediction = pd.DataFrame(scaler.inverse_transform(temp), columns=df_1.columns)","935f9e14":"plt.figure(figsize=(25, 12))\n\nplt.plot(df.index[df.index>=\"2017-02-15\"], prediction.Open, label=\"prediction\", alpha=.7)\nplt.plot(df.index[df.index>=\"2017-02-15\"], df.loc[df.index>=\"2017-02-15\", \"Open\"], label=\"real\", alpha=.7)\n\nplt.scatter(df.index[df.index>=\"2017-02-15\"], prediction.Open, label=\"prediction\", alpha=.7)\nplt.scatter(df.index[df.index>=\"2017-02-15\"], df.loc[df.index>=\"2017-02-15\", \"Open\"], label=\"real\", alpha=.7)\n\nplt.legend()\nplt.title(\"Google stock Prediction\")\n\nplt.show()","8c3fbc5e":"# MSE\nnp.mean(np.square(df.loc[df.index>=\"2017-02-15\", \"Open\"].values-prediction.Open))","554989ab":"# MSE\n_ = np.reshape(result, (len(result)))\nnp.mean(np.square(_-test_y))","dd861403":"### Preprocessing","d96e0493":"# Time Series Analysis<br>\nDamien Park<br>\n2019.02.21","d0312c97":"The end of analysis.","5bf5da14":"### Importing Library","350d911a":"---","cb7dde2b":"### Modeling","89b4d926":"### Data setting","b70d591e":"### Load data","57db9232":"### Prediction","59e093c2":"### Data check","88f12d86":"### Training","61ef67cf":"### Visualization"}}