{"cell_type":{"82bbc0e2":"code","cbea45f4":"code","800ba054":"code","e2ac7bf6":"code","32ef2dda":"code","8e263a68":"code","f809fead":"code","0119f801":"code","51d394a0":"code","c45aff23":"code","36e54bee":"code","61222fac":"code","c24dd4a0":"code","42fbed40":"code","a90d376e":"code","6c02ece3":"markdown","da9a9e91":"markdown","5f01001c":"markdown"},"source":{"82bbc0e2":"import os\nimport seaborn as sns\nimport matplotlib.pyplot as plot\nimport pandas as pd\nimport numpy as np\nfrom pandas import DataFrame\n\ndf = pd.read_csv(\"..\/input\/netflix-shows\/netflix_titles.csv\")","cbea45f4":"types = list(df['type'])\n\nmovies = 0\ntvshows= 0\n\nfor x in types:\n    if x =='Movie':\n        movies += 1\n    else:\n        tvshows += 1\n\ndata = [movies, tvshows]\nlabels = [f'{movies} Movies', f'{tvshows} TV Shows']\ncolors = sns.color_palette('pastel')\n\nplot.pie(data, labels=labels, colors=colors, autopct='%.0f%%')\nplot.show()","800ba054":"b = df['country'].dropna()\nb = list(b)\n\ncountries = []\nfor x in b:\n    if ', ' not in x:\n        countries.append(x)\n    else:\n        y = x.split(', ')\n        for z in y:\n            countries.append(z)\n\nunique_countries = []\nfor x in countries:\n    if x not in unique_countries:\n        unique_countries.append(x)\n\nmov_occurences = []\nfor x in range(len(unique_countries)):\n    if unique_countries[x] in countries:\n        mov_occurences.append(countries.count(unique_countries[x]))\n","e2ac7bf6":"mov_occurences, unique_countries = (list(t) for t in zip(*sorted(zip(mov_occurences, unique_countries))))\nplot.bar(unique_countries[-10:], mov_occurences[-10:])\nplot.xticks(rotation='vertical')\nplot.show()","32ef2dda":"c = df['director'].dropna()\nc = list(c)\n\nunique_directors = []\nfor x in c:\n    if x not in unique_directors:\n        unique_directors.append(x)\n\ndir_occurences = []\nfor x in range(len(unique_directors)):\n    if unique_directors[x] in c:\n        dir_occurences.append(c.count(unique_directors[x]))\n","8e263a68":"dir_occurences, unique_directors = (list(t) for t in zip(*sorted(zip(dir_occurences, unique_directors))))\nplot.bar(unique_directors[-10:], dir_occurences[-10:])\nplot.xticks(rotation='vertical')\nplot.show()","f809fead":"df['listed_in'].isna().sum()","0119f801":"d = list(df['listed_in'])\n\ncategories = []\nfor x in d:\n    if ', ' not in x:\n        categories.append(x)\n    else:\n        y = x.split(', ')\n        for z in y:\n            categories.append(z)\n\nunique_categories = []\nfor x in categories:\n    if x not in unique_categories:\n        unique_categories.append(x)\n\ncat_occurences = []\nfor x in range(len(unique_categories)):\n    if unique_categories[x] in categories:\n        cat_occurences.append(categories.count(unique_categories[x]))","51d394a0":"cat_occurences, unique_categories = (list(t) for t in zip(*sorted(zip(cat_occurences, unique_categories))))\nplot.bar(unique_categories[-10:], cat_occurences[-10:])\nplot.title('10 most popular categories of Film and Shows')\nplot.xlabel('Categories')\nplot.xticks(rotation='vertical')\nplot.show()","c45aff23":"import string\nstring.ascii_lowercase\n\nalphabet = list(string.ascii_lowercase + string.ascii_uppercase + ' ')\ntitles = list(df['title'])\n\nwords = []\nunique_words = []\nwords_occurence = []\nblanks = ['The', '', 'i', 'of', 'the', 'in', 'In', 'and', 'A', 'to', 'with', 'un']\n\nfor ty in titles:\n    t2 = \"\".join(u for u in ty if u in alphabet)\n    x = t2.split(' ')\n    for z in x:\n        words.append(z)\n        if z not in unique_words:\n            unique_words.append(z)\n\nwords_occurence = []\nfor x in range(len(unique_words)):\n    if unique_words[x] in words:\n        if unique_words[x] not in blanks:\n            words_occurence.append(words.count(unique_words[x]))","36e54bee":"words_occurence, unique_words = (list(t) for t in zip(*sorted(zip(words_occurence, unique_words))))\nplot.bar(unique_words[-10:], words_occurence[-10:])\nplot.xticks(rotation='vertical')\nplot.title('Top 10 most popular words in titles')\nplot.ylabel('Number of times word occured')\nplot.xlabel('Words')\nplot.show()","61222fac":"ratings = list(df['rating'].dropna())\nratings_unique = []\n\nfor x in ratings:\n    if x not in ratings_unique:\n        ratings_unique.append(x)\n\nratings_occurence = []\nfor x in range(len(ratings_unique)):\n    if ratings_unique[x] in ratings:\n        ratings_occurence.append(ratings.count(ratings_unique[x]))\n\nratings_occurence, ratings_unique = (list(t) for t in zip(*sorted(zip(ratings_occurence, ratings_unique))))\n\nplot.barh(ratings_unique, ratings_occurence)\nplot.xlabel('Number')\nplot.ylabel('Ratings')\nplot.show()","c24dd4a0":"release_years = list(df['release_year'])\na = df['release_year']\nprint(f\"There are {a.isna().sum()} Nan\")\n\nrelease_unique = []\nfor x in release_years:\n    if x not in release_unique:\n        release_unique.append(x)\n\nrelease_occurence = []\nfor x in range(len(release_unique)):\n    if release_unique[x] in release_years:\n        release_occurence.append(release_years.count(release_unique[x]))\n\nrelease_occurence, release_unique = (list(t) for t in zip(*sorted(zip(release_unique, release_occurence))))\n\nplot.bar(release_occurence[-50:], release_unique[-50:])\nplot.locator_params(integer=True)\nplot.title('Distribution of movies on NTFLX by release year')\nplot.xlabel('Years')\nplot.ylabel('Number of movies added')\n#plot.xticks(rotation='vertical')\nplot.show()","42fbed40":"descriptions = list(df['description'])\n\nwords1 = []\nunique_words1 = []\nwords_occurence1 = []\nblanks1 = ['The', '', 'i', 'of', 'the', 'in', 'In', 'and', 'A', 'to', 'with', 'un']\n\nfor ty in descriptions:\n    t2 = \"\".join(u for u in ty if u in alphabet)\n    x = t2.split(' ')\n    for z in x:\n        words1.append(z)\n        if z not in unique_words1:\n            unique_words1.append(z)\n\nwords_occurence1 = []\nfor x in range(len(unique_words1)):\n    if unique_words1[x] in words1:\n        if unique_words1[x] not in blanks1:\n            words_occurence1.append(words1.count(unique_words1[x]))","a90d376e":"words_occurence1, unique_words1 = (list(t) for t in zip(*sorted(zip(words_occurence1, unique_words1))))\nplot.bar(unique_words1[-10:], words_occurence1[-10:])\nplot.xticks(rotation='vertical')\nplot.show()","6c02ece3":"### Identifying similar content by matching text-based features","da9a9e91":"### Does Netflix has more focus on TV Shows than movies in recent years?","5f01001c":"### Understanding what content is available in different countries"}}