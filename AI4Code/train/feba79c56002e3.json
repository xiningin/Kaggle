{"cell_type":{"34ab3450":"code","d3eb85bd":"code","0fd806bc":"code","2727f286":"code","fc4ec07e":"code","78f7592f":"code","e1fcd1be":"code","2fbba09c":"code","bae1260a":"code","9090a20e":"code","49eac48b":"code","27bae24b":"markdown","281376c8":"markdown","f69db7b9":"markdown","95d96af3":"markdown","cba0138a":"markdown","00d492a4":"markdown","7c9b4066":"markdown","a17ec7b4":"markdown","3e8595d1":"markdown","3ad7ae0f":"markdown"},"source":{"34ab3450":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline ","d3eb85bd":"# Import csv file to variable \"data\"\ndata = pd.read_csv(\"..\/input\/phd-stipends\/csv\")\ndata.head(3)","0fd806bc":"# I decided to drop Comments column because didn't find it useful.\n\ndata.drop(\"Comments\", axis=1, inplace=True)\ndata.head()","2727f286":"# Use info method to evaluate dtype and non_null entries\ndata.info()","fc4ec07e":"# First, we drop all rows without University name\n\ndata = data.loc[data[\"University\"].notnull() == True]\ndata.reset_index(drop=True, inplace=True)\n\n# Repeat the same for rows without Overall Pay\n\ndata = data.loc[data[\"Overall Pay\"].notnull() == True]\ndata.reset_index(drop=True, inplace=True)\n\ndata.info()","78f7592f":"#This is a bad row I found while working in the notebook.\n\ndata.loc[data[\"University\"] == \"Scumbag college\"]","e1fcd1be":"data = data.loc[data[\"University\"] != \"Scumbag college\"]","2fbba09c":"# Now we define a function to change entries with a numerical value to floats and add a Total column\n\ndef str_to_float(x):\n    try:\n        n = x.replace(\"$\",\"\").replace(\",\",\"\")\n        return float(n)\n    except: return 0\n\ndata[\"Overall Pay\"] = data[\"Overall Pay\"].apply(str_to_float)\ndata[\"12 M Gross Pay\"] = data[\"12 M Gross Pay\"].apply(str_to_float)\ndata[\"9 M Gross Pay\"] = data[\"9 M Gross Pay\"].apply(str_to_float)\ndata[\"3 M Gross Pay\"] = data[\"3 M Gross Pay\"].apply(str_to_float)\ndata[\"Fees\"] = data[\"Fees\"].apply(str_to_float)\n\ndata[\"Total\"] = data[\"3 M Gross Pay\"]+data[\"9 M Gross Pay\"]+data[\"12 M Gross Pay\"]\n\ndata.head(5)","bae1260a":"# Finaly we make another two columns to divide University name and it's short version\n\ndef u_name(x):\n    if x == \"ETH\": return x\n    else:\n        name = x.split(\"(\")[0].strip()\n        return name.title()\n\ndef u_short(x):\n    try:\n        return x.split(\"(\")[1].strip(\")\")\n    except:\n        return None\n\ndata[\"Name\"] = data[\"University\"].apply(u_name)\ndata[\"Short Name\"] = data[\"University\"].apply(u_short)\ndata.head()","9090a20e":"top_10 = data.groupby(\"Name\")[\"Total\"].describe().sort_values(by=\"mean\", ascending=False).iloc[:10]\n\nimport textwrap\nf = lambda x: textwrap.fill(x.get_text(), 13)\n\nplt.figure(figsize=(15,8))\nax = sns.barplot(x=top_10.index, y=\"mean\", data=top_10)\n\nax.set_title(\"Top 10 Highest Paying Universities\", fontsize = 28)\nax.set_ylabel(\"Overall Pay in $\\$$ (Mean)\", fontsize = 15)\nax.set_xlabel(\"University Name\", fontsize = 15)\nax.set_xticklabels(ax.set_xticklabels(map(f, ax.get_xticklabels())), rotation=0)\n\nplt.show()\n","49eac48b":"low_13 = data.groupby(\"Name\")[\"Total\"].describe().sort_values(by=\"mean\", ascending=False).iloc[-13:]\n\nplt.figure(figsize=(15,8))\nax = sns.barplot(x=low_13.index, y=\"mean\", data=low_13)\n\nax.set_title(\"Top 10 Lowest Paying Universities\", fontsize = 28)\nax.set_ylabel(\"Overall Pay in $\\$$ (Mean)\", fontsize = 15)\nax.set_xlabel(\"University Name\", fontsize = 15)\nax.set_xticklabels(ax.set_xticklabels(map(f, ax.get_xticklabels())), rotation=0)\n\nplt.show()\n","27bae24b":"Ended up with 8454 entries. (Started with 8733) ","281376c8":"# Import packages","f69db7b9":"# Load PhD data from .csv","95d96af3":"## This is the end, thanks for watching :)","cba0138a":"## Task 2: *What are the top 10 lowest paying universities?*\n\nThis time I considered 13 Universities because in 3 of them, they don\u00b4t get paid (sound weird, probably wrong entries).","00d492a4":"# Processing data","7c9b4066":"# Visualizing data\n## Task 1: *What are the top 10 highest paying universities?*\n\nI consider that the University with the highest Total mean (Overall Pay - Fees) is the best paying one, so let's program it!","a17ec7b4":"There's a lot of missing entries, let's fix it!","3e8595d1":"# Evaluate data and cleanning process","3ad7ae0f":"Since the documentation for the data is not linked directly, I provide it in [this link](http:\/\/www.phdstipends.com\/results)"}}