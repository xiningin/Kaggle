{"cell_type":{"4038e5fe":"code","529ebb3e":"code","2d80a444":"code","ff68ddd4":"code","15c96dcb":"code","f298843e":"code","632ce17e":"code","2007735c":"code","eb78376f":"code","103c0ddb":"code","cd9a5f23":"code","3d9d77ea":"code","c0e5752f":"code","d4c5ed1f":"markdown","6d20efd7":"markdown","0b9d1e95":"markdown","03264a40":"markdown","bf4b767d":"markdown","21e76a9a":"markdown","6b48328d":"markdown","26a5f234":"markdown"},"source":{"4038e5fe":"# Import librairies\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.style.use('seaborn')","529ebb3e":"# Load the data without delimiter (line by line)\ntemp = pd.read_csv('..\/input\/superbowlads\/superbowl-ads.csv', delimiter='^',quotechar='\"')\n# Line 561 , the 'Year' is missing\ntemp.iloc[561]='2020,'+temp.iloc[561]\n# Split the data\nnew = temp.iloc[:,0].str.split(',', n = 3, expand = True) \nnew[3]=new[3].str.replace('\"','')\nnew[1]=new[1].str.replace('\"','')\nnew[2]=new[2].str.strip('\"')\nnew2=new[2].str.split('\"\"', n = 1, expand = True) \nnew = pd.concat([new.iloc[:,[0,1]],new2,new.iloc[:,3]],axis=1).values\n# Build the final dataframe\ndf=pd.DataFrame(new,columns=[\"Year\",\"Type\",\"Product\",\"Title\",\"Notes\"])\ndf=df.loc[df['Type']!='Product type']\ndel temp , new , new2\ndf.head()\n","2d80a444":"dictOfTypes = {'Car': 'Car',\n 'Security': 'Security',\n 'Copy': 'Copy',\n 'Soft drink': 'Beverage',\n 'Camera': 'Technology',\n 'Computer': 'Technology',\n 'Restaurant': 'Food',\n 'Beer': 'Beverage',\n 'Food': 'Food',\n 'Credit card': 'Bank Insurance',\n 'Soft Drink': 'Beverage',\n 'Footwear': 'Clothing',\n 'Clothing': 'Clothing',\n 'Film': 'Film',\n 'Mail': 'Technology',\n 'Shoes': 'Clothing',\n 'Sports': 'Sports',\n 'Tire': 'Car',\n 'Website': 'Technology',\n 'Candy': 'Food',\n 'TV': 'TV',\n 'Gaming': 'Video games',\n 'Potato chips': 'Food',\n 'PSA': 'PSA',\n 'Technology': 'Technology',\n 'Manufacturing': 'Car',\n 'Mobile phone': 'Phone',\n 'TV show': 'TV',\n 'Video Game': 'Video games',\n 'Store': 'Store',\n 'Truck': 'Truck',\n 'Product type': 'Product type',\n 'Car accessories': 'Car',\n 'Adhesives': 'Adhesives',\n 'Antifungal medication': 'Care',\n 'Feminine care products': 'Care',\n 'Insurance': 'Bank Insurance',\n 'Lingerie': 'Clothing',\n 'Phone': 'Phone',\n 'Phone accessory': 'Phone',\n 'Service': 'Service',\n 'Skincare products': 'Care',\n 'Software': 'Technology',\n 'Game': 'Video games',\n 'Toothpaste': 'Care',\n 'Building materials': 'Building materials',\n 'Cleaner': 'Cleaner',\n 'Tax preparation': 'Bank Insurance',\n 'TV series': 'TV',\n 'Video games': 'Video games',\n 'Web hosting': 'Technology',\n 'Wireless': 'Technology',\n 'Airlines': 'Travel',\n 'Car \/ Film': 'Car',\n 'Drink': 'Beverage',\n 'Food \/ Drink': 'Food',\n 'Headphones': 'Phone',\n 'Investments': 'Bank Insurance',\n 'Laundry detergent': 'Cleaner',\n 'Loans': 'Bank Insurance',\n 'Retail': 'Retail',\n 'TV special': 'TV',\n 'Travel': 'Travel',\n 'Video game': 'Video games',\n 'Alcohol': 'Beverage',\n 'Alcohol \/ TV series': 'Beverage',\n 'Beverage': 'Beverage',\n 'Smart speaker': 'Phone',\n 'NFL': 'NFL',\n 'Video gaming': 'Video games'}\n\n\ndf['Type'] = df['Type'].map(dictOfTypes)\ndf.head(10)","ff68ddd4":"df.info()","15c96dcb":"df_counts = pd.crosstab(df['Type'], df['Year'])\ndf_counts.head()","f298843e":"ads_by_year = df_counts.sum(axis=0)\nads_by_year.plot(figsize=(16,9),title=\"Number of ads over year\")\nplt.show()","632ce17e":"df_counts['Total'] = df_counts.sum(axis=1)\ndf_counts.sort_values(by='Total', ascending=False,inplace=True)\ntop = df_counts.loc[df_counts['Total']>10].drop('Total', 1)\nfilter = list(top.index)\nprint(50*\"#\"+\"\\n# Most frequent type (descending order)\\n\"+50*\"#\")\nprint(filter)\ntop.head(10)","2007735c":"labels = filter\nfig, ax = plt.subplots(figsize=(18,10), dpi= 100) \nax.stackplot(top.columns, top.values, labels=labels)\nax.legend(loc='upper left')\nplt.show()","eb78376f":"df['Count']=df['Type']\ndf_group = df.groupby(['Year','Type'],as_index=False)['Count'].count()\ndf_group.head()\n\nplot_data = df_group[df_group.Type.isin(['Film', 'Beverage', 'Car', 'Technology', 'Food', 'TV', 'Bank Insurance'])]\n\nfig, ax = plt.subplots(figsize=(18,10), dpi= 100) \nax = sns.pointplot(x='Year',y='Count',hue='Type',data=plot_data)\nplt.show()\n","103c0ddb":"col = df_counts.columns\nresult=[]\nfor i in range(0,col.shape[0]):\n    list_temp = list(df_counts.loc[df_counts[col[i]]>0,col[i]].sort_values(ascending=False)[:10].index)\n    for j in range(len(list_temp),10):\n        list_temp.append('-')\n    result.append(list_temp)\nresult = np.vstack(result).transpose()\nresult = pd.DataFrame(data=result,columns=col)","cd9a5f23":"result.iloc[:,:18].head(10)","3d9d77ea":"result.iloc[:,18:].head(10)","c0e5752f":"from scipy.spatial.distance import pdist, squareform\nfrom scipy.cluster.hierarchy import linkage, dendrogram\nfrom matplotlib.colors import rgb2hex, colorConverter\nfrom scipy.cluster.hierarchy import set_link_color_palette\n\ndf_counts.head()\nclustdf= df_counts.transpose()\nc_dist = pdist(clustdf) # computing the distance\nc_link = linkage(clustdf,  metric='correlation', method='complete')# computing the linkage\nfig, axes = plt.subplots(1, 1, figsize=(14, 14))\ndendro  = dendrogram(c_link,labels=list(df_counts.columns),orientation='right',ax=axes,color_threshold=0.5)\nplt.show()\n","d4c5ed1f":"# Normalize the types","6d20efd7":"# Evolution over year of the overall most frequent type\nWhat we can see :\n* The categories Film \/ Food \/ Beer are a constant over time\n* There is a peak for advertisements regarding websites in 2000 !\n* 'TV series' and 'Wireless' appeared since 2016","0b9d1e95":"# Count the type of ads by year","03264a40":"# Top 10 year by year\n\n> Another way to see the evaluation","bf4b767d":"# Do you have periods to type ads ?\n> by trying to check this by doing a hierarchical clustering of the years\n\n> Not really convincing","21e76a9a":"# Most frequent type (more than 10 times from 1969 to 2020)","6b48328d":"# Number of ads by year","26a5f234":"# Load the data\nThe input file has string columns with and without double quotes, so the quotes are not taken into account, and a comma in a string is considered as a delimiter.\n\nSo I had to tinker with this file!!!\n\nColumns are \n* Year\n* Type (of ads)\n* Product\n* Title \n* Notes (description of the spot TV)"}}