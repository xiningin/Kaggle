{"cell_type":{"470b09b9":"code","84963a25":"code","603c95e0":"code","133b52ac":"code","fd674aa8":"code","0a3d45f6":"code","1eca67d9":"code","8770f70b":"code","592e18fd":"code","438b00f4":"code","dde7fc03":"code","54ccd816":"code","6e7ab3d8":"code","9467b392":"code","7257d61c":"code","8fa4bd59":"code","4a73f88e":"code","c1e7619e":"code","389b1ee5":"code","38c83cdc":"code","6e66cd5d":"code","8e74f3e4":"code","bc06a53d":"code","195ee446":"code","563c43b6":"code","b80b088e":"code","c96df86a":"code","c75cd068":"code","33412e05":"code","2c553137":"code","4898e8fa":"code","92e90b98":"code","97140908":"code","22e696cd":"code","bd7116eb":"code","358070ab":"code","d18316f5":"code","974ec670":"code","201f49bc":"code","109aa96a":"code","903acf84":"code","f936728a":"markdown","72c5d76c":"markdown","80932a47":"markdown","829c9314":"markdown"},"source":{"470b09b9":"import pandas as pd\n#Files\ntest = pd.read_csv(\"..\/input\/dsc-psut-continued\/test.csv\", index_col=\"Id\")\ntrain = pd.read_csv(\"..\/input\/dsc-psut-continued\/train.csv\", index_col=\"Id\")\nprice = train.SalePrice\ndf_train = train\ntrain = train.drop(['SalePrice'],axis =1)\ncategorical_cols = [col for col in test.columns if test[col].dtypes == 'object']\nnumerical_cols = [col for col in test.columns if test[col].dtypes != 'object']","84963a25":"cols_where_na_means_no = [\"Alley\",'BsmtQual','BsmtCond','BsmtExposure','BsmtFinType1','BsmtFinType2','FireplaceQu','GarageType','GarageFinish','GarageQual','GarageCond','PoolQC','Fence','MiscFeature']\ntrain[cols_where_na_means_no] = train[cols_where_na_means_no].fillna('None')\ntest[cols_where_na_means_no] = test[cols_where_na_means_no].fillna('None')\ndf_train[cols_where_na_means_no] = df_train[cols_where_na_means_no].fillna('None')","603c95e0":"df_train[['ExterCond','SalePrice']].groupby(['ExterCond'], as_index=False).mean()","133b52ac":"rating_cols = ['ExterQual','ExterCond','BsmtQual','BsmtCond','HeatingQC','KitchenQual','FireplaceQu','GarageQual','GarageCond','PoolQC']\n\nrating = {'None': 0 , 'Po': 1, 'Fa':2, 'TA': 3, 'Gd':4 ,'Ex': 5}\ntrain[rating_cols] = train[rating_cols].replace(rating)\ntest[rating_cols] = test[rating_cols].replace(rating)\n\ncategorical_cols = list(set(categorical_cols)-set(rating_cols))","fd674aa8":"df_train[['MSZoning','SalePrice']].groupby(['MSZoning'], as_index=False).mean()","0a3d45f6":"train[['MSZoning']] = train[['MSZoning']].replace({'C (all)': 0, 'RM': 1, 'RH': 2,'RL': 3,'FV': 4})\ntest[['MSZoning']] = test[['MSZoning']].replace({'C (all)': 0, 'RM': 1, 'RH': 2,'RL': 3,'FV': 4})\n\ncategorical_cols = list(set(categorical_cols) - set(['MSZoning']))","1eca67d9":"df_train['Road'] = df_train['Street'] + df_train['Alley'] \ndf_train[['Road','SalePrice']].groupby(['Road'], as_index=False).mean()","8770f70b":"df_train[['Street','SalePrice']].groupby(['Street'], as_index=False).mean()","592e18fd":"train['Road'] = train['Street'] + train['Alley'] \ntest['Road'] = test['Street'] + test['Alley']","438b00f4":"train['Road'] = train['Road'].replace({'PaveGrvl': 0, 'GrvlNone': 1, 'PavePave': 2,'PaveNone': 3})\ntest['Road'] = test['Road'].replace({'PaveGrvl': 0, 'GrvlNone': 1, 'PavePave': 2,'PaveNone': 3})\n\ncategorical_cols = list(set(categorical_cols) - set(['Street','Alley','Road']))","dde7fc03":"df_train = df_train.drop(columns=['Street','Alley'])\ntrain = train.drop(columns=['Street','Alley'])\ntest = test.drop(columns=['Street','Alley'])","54ccd816":"df_train[['LotShape','SalePrice']].groupby(['LotShape'], as_index=False).mean()","6e7ab3d8":"train['LotShape'] = train['LotShape'].replace({'IR3': 2, 'IR2': 3, 'IR1': 1,'Reg': 0})\ntest['LotShape'] = test['LotShape'].replace({'IR3': 2, 'IR2': 3, 'IR1': 1, 'Reg': 0})\n\ncategorical_cols = list(set(categorical_cols) - set(['LotShape']))","9467b392":"df_train[['LandContour','SalePrice']].groupby(['LandContour'], as_index=False).mean()","7257d61c":"train['LandContour'] = train['LandContour'].replace({'Bnk': 0, 'Lvl': 1, 'Low': 2,'HLS': 3})\ntest['LandContour'] = test['LandContour'].replace({'Bnk': 0, 'Lvl': 1, 'Low': 2,'HLS': 3})\n\ncategorical_cols = list(set(categorical_cols) - set(['LandContour']))","8fa4bd59":"df_train[['Utilities','SalePrice']].groupby(['Utilities'], as_index=False).mean()","4a73f88e":"train['Utilities'] = train['Utilities'].replace({'ELO': 0, 'NoSeWa': 1, 'NoSewr': 2,'AllPub': 3})\ntest['Utilities'] = test['Utilities'].replace({'ELO': 0, 'NoSeWa': 1, 'NoSewr': 2,'AllPub': 3})\n\ncategorical_cols = list(set(categorical_cols) - set(['Utilities']))","c1e7619e":"df_train[['LotConfig','SalePrice']].groupby(['LotConfig'], as_index=False).mean()","389b1ee5":"train['LotConfig'] = train['LotConfig'].replace({'Inside': 0,'FR2': 1,'Corner': 2,'FR3': 3,'CulDSac': 4})\ntest['LotConfig'] = test['LotConfig'].replace({'Inside': 0,'FR2': 1,'Corner': 2,'FR3': 3,'CulDSac': 4})\n\ncategorical_cols = list(set(categorical_cols) - set(['LotConfig']))","38c83cdc":"df_train[['LandSlope','SalePrice']].groupby(['LandSlope'], as_index=False).mean()","6e66cd5d":"train['LandSlope'] = train['LandSlope'].replace({'Gtl': 0, 'Mod': 1, 'Sev': 2})\ntest['LandSlope'] = test['LandSlope'].replace({'Gtl': 0, 'Mod': 1, 'Sev': 2})\n\ncategorical_cols = list(set(categorical_cols) - set(['LandSlope']))","8e74f3e4":"nei_price = df_train[['Neighborhood','SalePrice']].groupby(['Neighborhood'], as_index=False).mean()\nnei_price.sort_values(by='SalePrice')","bc06a53d":"train['Neighborhood'] = train['Neighborhood'].replace({'MeadowV': 0, 'IDOTRR': 1, 'BrDale': 2,'BrkSide': 3,'Edwards': 4,'OldTown': 5,'Sawyer': 6,'Blueste': 7,'SWISU': 8 ,'NPkVill': 9, 'NAmes': 10,'Mitchel': 11,'SawyerW': 12,'NWAmes': 13,'Gilbert': 14,'Blmngtn': 15,'CollgCr': 16, 'Crawfor': 17,'ClearCr': 18,'Somerst': 19,'Veenker': 20,'Timber': 21,'StoneBr': 22,'NridgHt': 23,'NoRidge': 24})\ntest['Neighborhood'] = test['Neighborhood'].replace({'MeadowV': 0, 'IDOTRR': 1, 'BrDale': 2,'BrkSide': 3,'Edwards': 4,'OldTown': 5,'Sawyer': 6,'Blueste': 7,'SWISU': 8 ,'NPkVill': 9, 'NAmes': 10,'Mitchel': 11,'SawyerW': 12,'NWAmes': 13,'Gilbert': 14,'Blmngtn': 15,'CollgCr': 16, 'Crawfor': 17,'ClearCr': 18,'Somerst': 19,'Veenker': 20,'Timber': 21,'StoneBr': 22,'NridgHt': 23,'NoRidge': 24})\n\ncategorical_cols = list(set(categorical_cols) - set(['LandSlope']))","195ee446":"df_train[['Condition1','SalePrice']].groupby(['Condition1'], as_index=False).mean()","563c43b6":"df_train[['Condition2','SalePrice']].groupby(['Condition2'], as_index=False).mean()","b80b088e":"df_train[['BldgType','SalePrice']].groupby(['BldgType'], as_index=False).mean()","c96df86a":"train['BldgType'] = train['BldgType'].replace({'2fmCon': 0,'Duplex': 1,'Corner': 2,'Twnhs': 3,'TwnhsE': 4,'1Fam': 5})\ntest['BldgType'] = test['BldgType'].replace({'2fmCon': 0,'Duplex': 1,'Corner': 2,'Twnhs': 3,'TwnhsE': 4,'1Fam': 5})\n\ncategorical_cols = list(set(categorical_cols) - set(['BldgType']))","c75cd068":"df_train[['HouseStyle','SalePrice']].groupby(['HouseStyle'], as_index=False).mean().sort_values(by='SalePrice')","33412e05":"train['HouseStyle'] = train['HouseStyle'].replace({'1.5Unf': 0,'SFoyer': 1,'1.5Fin': 2,'2.5Unf': 3,'SLvl': 4,'1Story': 5,'2Story': 6,'2.5Fin': 7})\ntest['HouseStyle'] = test['HouseStyle'].replace({'1.5Unf': 0,'SFoyer': 1,'1.5Fin': 2,'2.5Unf': 3,'SLvl': 4,'1Story': 5,'2Story': 6,'2.5Fin': 7})\n\ncategorical_cols = list(set(categorical_cols) - set(['HouseStyle']))","2c553137":"df_train[['RoofStyle','SalePrice']].groupby(['RoofStyle'], as_index=False).mean().sort_values(by='SalePrice')","4898e8fa":"train['RoofStyle'] = train['RoofStyle'].replace({'Gambrel': 0,'Gable': 1,'Mansard': 2,'Flat': 3,'Hip': 4,'Shed': 5})\ntest['RoofStyle'] = test['RoofStyle'].replace({'Gambrel': 0,'Gable': 1,'Mansard': 2,'Flat': 3,'Hip': 4,'Shed': 5})\n\ncategorical_cols = list(set(categorical_cols) - set(['RoofStyle']))","92e90b98":"df_train[['RoofMatl','SalePrice']].groupby(['RoofMatl'], as_index=False).mean().sort_values(by='SalePrice')","97140908":"train['RoofMatl'] = train['RoofMatl'].replace({'Roll': 0,'ClyTile': 1,'CompShg': 2,'Metal': 3,'Tar&Grv': 4,'WdShake': 5,'Membran': 6,'WdShngl': 7})\ntest['RoofMatl'] = test['RoofMatl'].replace({'Roll': 0,'ClyTile': 1,'CompShg': 2,'Metal': 3,'Tar&Grv': 4,'WdShake': 5,'Membran': 6,'WdShngl': 7})\n\ncategorical_cols = list(set(categorical_cols) - set(['RoofMatl']))","22e696cd":"df_train[['MasVnrType','SalePrice']].groupby(['MasVnrType'], as_index=False).mean().sort_values(by='SalePrice')","bd7116eb":"train['SaleType'] = train['SaleType'].replace({'Oth': 0,'ConLD': 1, 'ConLw': 2, 'COD': 3, 'WD': 4,'ConLI': 5,'CWD': 6,'Con': 7,'New': 8})\ntest['SaleType'] = test['SaleType'].replace({'Oth': 0,'ConLD': 1, 'ConLw': 2, 'COD': 3, 'WD': 4,'ConLI': 5,'CWD': 6,'Con': 7,'New': 8})\n\ncategorical_cols = list(set(categorical_cols) - set(['SaleType']))","358070ab":"from sklearn.impute import SimpleImputer\n\nimputer_numerical = SimpleImputer(strategy='mean')\n\ntrain[numerical_cols]= imputer_numerical.fit_transform(train[numerical_cols])\ntest[numerical_cols] = imputer_numerical.transform(test[numerical_cols])\n\nimputer_categorical = SimpleImputer(strategy='most_frequent')\n\ntrain[categorical_cols] = imputer_categorical.fit_transform(train[categorical_cols])\ntest[categorical_cols] = imputer_categorical.transform(test[categorical_cols])","d18316f5":"test= pd.get_dummies(data=test, columns=categorical_cols)\ntrain=pd.get_dummies(data=train, columns=categorical_cols)","974ec670":"extra = list(set(train.columns) - set(test.columns))\nprint(extra)\ntrain = train.drop(extra,axis=1)","201f49bc":"#Model\nfrom xgboost import XGBRegressor\nmodel = XGBRegressor(n_estimators=1000)\n\n#import xgboost as xgb\n\n#model = xgb.XGBClassifier()","109aa96a":"model.fit(train,price)\npredictions = model.predict(test)\npredictions","903acf84":"submission = pd.DataFrame( {\"SalePrice\": predictions})\nsubmission.index = test.index\nsubmission.to_csv(\"submission_10.csv\")","f936728a":"---\n\n#XGB MODEL","72c5d76c":"\n\n---\n#Data Cleaning\n","80932a47":"--------------------------------------------------------------------------------\n#filling na","829c9314":"---\n#prediction\n"}}