{"cell_type":{"d5922cc3":"code","793e5747":"code","8bb02f53":"code","e6f1a7ca":"code","7a6ddf58":"code","6fe29f52":"code","621e07a5":"code","b42f1124":"code","cfae760f":"code","b8e59caf":"code","ade442eb":"code","d33a24fc":"code","adef665e":"code","03d544bc":"code","ab889932":"code","86c31017":"code","f8252b8a":"code","afca6422":"code","a4e4eeee":"code","83f3e638":"code","8feec1bd":"code","aae38a66":"code","1a4fa8ca":"code","397901fa":"code","7464c8f8":"code","ebcae652":"code","fc74527f":"code","fd476f73":"code","dec0c63a":"code","7973b5b1":"code","8be12736":"code","b5918bc2":"code","839eabd9":"code","a82a95de":"code","7437bc95":"code","5f687735":"code","ed314e37":"code","4e88ad2a":"code","ad777d48":"code","a353ad62":"code","f6973b49":"code","f6266140":"code","1d2afbe3":"code","a20913e6":"code","2c6ff836":"code","37ac2ab2":"code","913379b0":"markdown","6e6f94c9":"markdown","ae4293d1":"markdown","fcd02a0e":"markdown","b8921880":"markdown","b53f793c":"markdown","653677dc":"markdown","8910f527":"markdown","ef07f671":"markdown"},"source":{"d5922cc3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","793e5747":"df = pd.read_csv(\"\/kaggle\/input\/businesss\/nps.csv\")\ndf.head()","8bb02f53":"df.info()","e6f1a7ca":"df[\"event_date\"] = pd.to_datetime(df[\"event_date\"])","7a6ddf58":"df.info()","6fe29f52":"df[\"score\"].unique()","621e07a5":"sorted(df[\"score\"].unique())","b42f1124":"year = df[\"event_date\"].dt.year\nmonth = df[\"event_date\"].dt.month\nyearmonth = year*100 + month\nyearmonth.tail()","cfae760f":"df[\"yearmonth\"] = yearmonth","b8e59caf":"df.head()","ade442eb":"def category(score):\n    if score in range(0,7):\n        return \"Detractor\"\n    elif score in (7,8):\n        return \"Passive\"\n    elif score in (9,10):\n        return \"Promoter\"","d33a24fc":"df[\"category\"] = df[\"score\"].apply(category)","adef665e":"df.head()","03d544bc":"nps = df.pivot_table(index = \"yearmonth\",columns =  \"category\",aggfunc  = \"size\")\nnps.head()","ab889932":"nps[\"total_responses\"] = nps.sum(axis = 1)","86c31017":"nps.head()","f8252b8a":"nps[\"nps\"] = (nps[\"Promoter\"] - nps[\"Detractor\"])\/nps[\"total_responses\"]\nnps[\"nps\"] = (nps[\"nps\"]*100).astype(int)","afca6422":"nps.head()","a4e4eeee":"# Visulaization view\nax = nps.reset_index().plot(\"yearmonth\", \"nps\", kind = \"line\", legend = False,\n                          figsize = (12,6))\nax.set_xticks(nps.index)\nax.set_xticklabels(nps.index , rotation = 45)\nplt.xlabel(\"\")\nplt.show()","83f3e638":"subs = pd.read_csv(\"\/kaggle\/input\/businesss\/muscle_labs.csv\", parse_dates = [\"end_date\", \"start_date\"])\nsubs.head()","8feec1bd":"subs.info()","aae38a66":"subs[\"churn_month\"] = subs[\"end_date\"].dt.year*100 + subs[\"end_date\"].dt.month","1a4fa8ca":"subs.head()","397901fa":"monthly_churn = pd.DataFrame({\"total_churn\":subs.groupby(\"churn_month\").size()})","7464c8f8":"monthly_churn.head()","ebcae652":"monthly_churn.index.name = None","fc74527f":"monthly_churn.head()","fd476f73":"years = list(range(2011,2016))\nmonths = list(range(1,13))\nyearmonths = [y*100+m for y in years for m in months]","dec0c63a":"yearmonths","7973b5b1":"churn = pd.DataFrame({\"yearmonth\":yearmonths})\nchurn.head()","8be12736":"churn = pd.merge(churn, monthly_churn, how = \"left\", left_on = \"yearmonth\", right_index = True)\n\nchurn.head()","b5918bc2":"churn.fillna(0, inplace = True)","839eabd9":"churn.head()","a82a95de":"churn[\"total_churn\"] = churn[\"total_churn\"].astype(int)","7437bc95":"def get_customer(yearmonth):\n    import datetime as dt\n    year = yearmonth\/\/100\n    month = yearmonth-year*100\n    date = dt.datetime(year,month,1)\n    return ((subs['start_date']<date) & (date <= subs['end_date'])).sum()","5f687735":"churn['total_customer'] = churn['yearmonth'].apply(get_customer) ","ed314e37":"churn.head()","4e88ad2a":"churn['churn_rate'] = churn['total_churn']\/churn['total_customer']","ad777d48":"churn.info()","a353ad62":"churn.head()","f6973b49":"churn.dropna(axis = 0 , inplace = True)","f6266140":"churn.head()","1d2afbe3":"churn = churn[churn['yearmonth']<201422]","a20913e6":"churn['yearmonth'] = churn['yearmonth'].astype(str)","2c6ff836":"from matplotlib.patches import Ellipse","37ac2ab2":"ax = churn.plot.line(x = \"yearmonth\" , y = \"churn_rate\" , figsize = (12,6), rot = 45, marker = \".\")\n\nstart , end = ax.get_xlim()\nax.set_xticks(np.arange(2,end,3))\nax.set_xticklabels(churn['yearmonth'][1::3])\nx = 35\ny = churn.loc[churn['yearmonth'] == '201312' , \"churn_rate\"].iloc[0]\ncircle = Ellipse((x,y),5 , 0.05 , color = \"sandybrown\", fill = False)\nax.add_artist(circle)\nax.set_label(\"\")\nax.spines[\"top\"].set_visible(False)\nax.spines[\"right\"].set_visible(False)\nax.tick_params(left = False , bottom = False)\nplt.legend(\"\")\nplt.show()","913379b0":"add new column in our DataFrame name is yearmonth","6e6f94c9":"### If you are find help please upvote my notebook","ae4293d1":"# Muscle Labs","fcd02a0e":"## Visualization","b8921880":"to add pivot table","b53f793c":"add new column name is category that check the (passive, Promoter, Detractor)\n\naccording to this list[1,2,3,4,5,6,7,8,9,10]","653677dc":"To get year and month in the format (202001)","8910f527":"To find the NPS using formula\n\nnps = (promoter-detractor)*100\/total response","ef07f671":"To finde the total customer"}}