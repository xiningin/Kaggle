{"cell_type":{"ff025873":"code","2aee22c3":"code","aeb2a83a":"code","07899bef":"code","cac476df":"code","91794e0f":"code","ff6ef226":"code","5bfd62e3":"code","3cda993d":"code","df0696cb":"code","95bce713":"code","2e20bb75":"code","e5995392":"code","e72c379c":"code","2ea03e20":"code","ca3a1f6b":"code","d6057d09":"markdown","c71667e5":"markdown","499c145d":"markdown","27f95504":"markdown"},"source":{"ff025873":"import pandas as pd\n\nmain_file_path = '..\/input\/train.csv'\ndata = pd.read_csv(main_file_path)\nprint('hello world')","2aee22c3":"# save filepath to variable for easier access\nIowa_file_path = '..\/input\/train.csv'\n# read the data and store data in DataFrame titled Iowa_data\nIowa_data = pd.read_csv(Iowa_file_path) \n# print a summary of the data in Iowa data\n#print(Iowa_data.describe())","aeb2a83a":"Iowa_data.head()","07899bef":"print(Iowa_data.columns)","cac476df":"# store the series of prices separately as Iowa_price_data.\nIowa_price_data = Iowa_data.SalePrice\n# the head command returns the top few lines of data.\nprint(Iowa_price_data.head())","91794e0f":"columns_of_interest = ['GarageYrBlt', 'SalePrice']\ntwo_columns_of_data = Iowa_data[columns_of_interest]","ff6ef226":"two_columns_of_data.describe()","5bfd62e3":"# dropna drops missing values (think of na as \"not available\")\nIowa_data = Iowa_data.dropna(axis=0)","3cda993d":"y = Iowa_data.SalePrice","df0696cb":"Iowa_data.head","95bce713":"Iowa_features = ['LotArea', 'YearBuilt', '1stFlrSF', '2ndFlrSF', 'FullBath', 'BedroomAbvGr', 'TotRmsAbvGrd']","2e20bb75":"X = Iowa_data[Iowa_features]","e5995392":"X.describe()","e72c379c":"X.head()","2ea03e20":"from sklearn.tree import DecisionTreeRegressor\n\n# Define model. Specify a number for random_state to ensure same results each run\nIowa_model = DecisionTreeRegressor(random_state=1)\n\n\n# Fit model\nIowa_model.fit(X, y)","ca3a1f6b":"print(\"Making predictions for the following 5 houses:\")\nprint(X.head())\nprint(\"The predictions are\")\nprint(Iowa_model.predict(X.head()))","d6057d09":"**Print a list of column**","c71667e5":"**Pick any two variables and store them to a new DataFrame (as you saw above to create two_columns_of_data.)\n**","499c145d":"From the list of columns, find a name of the column with the sales prices of the homes. Use the dot notation to extract this to a variable (as you saw above to create melbourne_price_data.)\n**Use the head command to print out the top few lines of the variable you just created.\n","27f95504":"# Introduction\n**This will be your workspace for Kaggle's Machine Learning education track.**\n\nYou will build and continually improve a model to predict housing prices as you work through each tutorial.  Fork this notebook and write your code in it.\n\nThe data from the tutorial, the Melbourne data, is not available in this workspace.  You will need to translate the concepts to work with the data in this notebook, the Iowa data.\n\nCome to the [Learn Discussion](https:\/\/www.kaggle.com\/learn-forum) forum for any questions or comments. \n\n# Write Your Code Below\n\n"}}