{"cell_type":{"1b40cc4b":"code","5d0e6d49":"code","9a3f2541":"code","1fd58802":"code","4403c029":"code","69d4e6e2":"code","ab8a40d9":"code","4da700e9":"code","d073e10c":"code","022cce1b":"code","31125821":"code","939f2d6f":"code","8e7ac076":"code","a7e27339":"code","c8242dac":"code","b84136b3":"code","a2ebc2a2":"code","43495ef7":"code","9a93597a":"code","61b19cbc":"code","1741fc17":"markdown"},"source":{"1b40cc4b":"from sklearn.datasets import load_iris\niris = load_iris()\ntype(iris)","5d0e6d49":"iris.feature_names","9a3f2541":"iris.data","1fd58802":"X = iris.data\ny = iris.target","4403c029":"from sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors = 5)\nprint(knn)","69d4e6e2":"knn.fit(X,y)","ab8a40d9":"prediction = knn.predict([[2,4,3,1]])","4da700e9":"prediction = knn.predict([[2,4,3,1], [4,6,5,3]])","d073e10c":"print(prediction)","022cce1b":"print(iris.target_names)","31125821":"from sklearn.linear_model import LogisticRegression\nlogisticreg = LogisticRegression()\nlogisticreg.fit(X,y)","939f2d6f":"prediction_lr = logisticreg.predict([[2,4,3,1],[4,6,5,3]])\nprint(prediction_lr)","8e7ac076":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size = 0.1)","a7e27339":"print(X.shape)\nprint(X_train.shape)\nprint(X_test.shape)\nprint(y_train.shape)\nprint(y_test.shape)","c8242dac":"logisticreg = LogisticRegression()\nlogisticreg.fit(X_train, y_train)","b84136b3":"y_pred = logisticreg.predict(X_test)","a2ebc2a2":"from sklearn import metrics\nprint(metrics.accuracy_score(y_test, y_pred))","43495ef7":"from sklearn.model_selection import cross_val_score\nknn = KNeighborsClassifier(n_neighbors = 5)\nscores = cross_val_score(knn,X,y,cv = 10, scoring = 'accuracy')\nprint(scores.mean())","9a93597a":"k_range = range(1,45)\nk_scores = []\nfor k in k_range:\n    knn = KNeighborsClassifier(n_neighbors = k)\n    scores = cross_val_score(knn,X,y,cv = 10,scoring = 'accuracy')\n    k_scores.append(scores.mean())\n    \nprint(k_scores)","61b19cbc":"import matplotlib.pyplot as plt\n%matplotlib inline\nplt.plot(k_range,k_scores)\nplt.grid(True)\n\nplt.xlabel(\"K values for KNN algorithm\")\nplt.ylabel(\"Mean accuracy scores\")\nplt.show()\n","1741fc17":"**K Fold Cross Validation**"}}