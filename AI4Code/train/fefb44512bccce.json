{"cell_type":{"085527d2":"code","3272cd4c":"code","ce3f9f06":"code","37640892":"code","524f6316":"code","e87bf2e7":"code","7d20f9d2":"code","029192bb":"code","8b455ef6":"code","4d5152ea":"code","b815aaa1":"code","ee85c330":"code","84851472":"code","0dbf9bfe":"code","f2b8ab9b":"code","d81daca7":"code","c5bbedf7":"code","3c2d8bbe":"code","e5f2cc57":"code","0b1b37af":"code","fd8d5db9":"code","b45f92b2":"code","d7952d94":"code","db88c4e5":"code","ecc76f76":"code","e5661ae2":"code","fadf5ef9":"code","bd43b6aa":"code","56e7f01c":"code","3f5fff81":"code","90b14db1":"code","54abfc93":"markdown","92498fb4":"markdown","e8e09deb":"markdown","4af9bdb9":"markdown","d3985704":"markdown","e9f5a0d5":"markdown","366c8c28":"markdown","7e02c560":"markdown","b9bb0bc4":"markdown","b0b9a91b":"markdown","aa2a04af":"markdown","cfe125b4":"markdown","645daf4e":"markdown"},"source":{"085527d2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3272cd4c":"# importing packages that will be used\nimport pandas as pd\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import metrics","ce3f9f06":"#Reading the dataset\ndata = pd.read_csv('..\/input\/housepricing\/HousePrices_HalfMil.csv')","37640892":"#Viewing first 5 rows of the database\ndata.head()","524f6316":"#Treating the names of the variables\nvariables = {'White Marble': 'White_Marble',\n             'Black Marble': 'Black_Marble',\n             'Indian Marble': 'Indian_Marble',\n             'Glass Doors': 'Glass_Doors',\n             'Swiming Pool': 'Swiming_Pool'}\ndata.rename(columns=variables, inplace = True)\ndata.head()","e87bf2e7":"# Analysing nulls contents\npd.DataFrame(data.isnull().sum(), columns=['Qty_Null_Values'])","7d20f9d2":"#Size of the DataSet\nprint('The size of the dataset is {} objects and {} variables'.format(data.shape[0], data.shape[1]))","029192bb":"#Type of variables\ndata.info()","8b455ef6":"#Descriptive statistics preliminary analysis\ndata.describe()","4d5152ea":"#Correlation matrix \ndata.corr()","b815aaa1":"#Ploting correlatinig graph to indetify which variables are more relevant for the regression\nax = sns.heatmap(data.corr(), annot= True, linewidths=.1, annot_kws={'size':9})\nax.figure.set_size_inches(16,12)\nax.set_title('Correlation of variables', fontsize = 16, loc = 'left')","ee85c330":"sns.set_style('darkgrid')\nax = sns.boxplot(data.Prices, width = 0.3, orient= 'v', palette='Oranges')\nax.figure.set_size_inches(12,8)\nax.set_ylabel('House Prices', fontsize = 12)\nax.set_title(\"Boxplot of the prices\", fontsize = 18, loc = 'left')","84851472":"ax = sns.boxplot(y = data.Prices, x = data.White_Marble, width = 0.3, orient= 'v', palette= 'prism')\nax.figure.set_size_inches(12,8)\nax.set_ylabel('House Prices', fontsize = 12)\nax.set_title(\"Boxplot of the prices vs White Marble placed\", fontsize = 18, loc = 'left')\nax.set_xticklabels(['White Marble - Not', 'White Marble - Yes'], fontsize = 12)\nax = ax","0dbf9bfe":"ax = sns.boxplot(y = data.Prices, x = data.Floors, width = 0.3, orient= 'v', palette= 'prism')\nax.figure.set_size_inches(12,8)\nax.set_ylabel('House Prices', fontsize = 12)\nax.set_xlabel('')\nax.set_title(\"Boxplot of the prices vs Quantity of floors\", fontsize = 18, loc = 'left')\nax.set_xticklabels(['One-story house', 'Double-story house'], fontsize = 12)\nax = ax","f2b8ab9b":"ax = sns.boxplot(y = data.Prices, x = data.City, width = 0.3, orient= 'v', palette= 'prism')\nax.figure.set_size_inches(12,8)\nax.set_ylabel('House Prices', fontsize = 12)\nax.set_title(\"Boxplot of the prices vs City\", fontsize = 18, loc = 'left')\nax.set_xticklabels(['City A', 'City B', 'City C'], fontsize = 12)\nax = ax","d81daca7":"ax = sns.boxplot(y = data.Prices, x = data.Fiber, width = 0.3, orient= 'v', palette= 'prism')\nax.figure.set_size_inches(12,8)\nax.set_ylabel('House Prices', fontsize = 12)\nax.set_title(\"Boxplot of the prices vs Type of Fiber\", fontsize = 18, loc = 'left')\nax.set_xticklabels(['Fiber A', 'Fiber B'], fontsize = 12)\nax = ax","c5bbedf7":"ax = sns.boxplot(y = data.Prices, x = data.Baths, width = 0.4, orient= 'v', palette= 'prism')\nax.figure.set_size_inches(12,8)\nax.set_ylabel('House Prices', fontsize = 12)\nax.set_title(\"Boxplot of the prices vs Baths\", fontsize = 18, loc = 'left')\nax = ax","3c2d8bbe":"ax = sns.lineplot(y= data.Prices, x = data.Area)\nax.figure.set_size_inches(12,8)\nax.set_ylabel('House Prices', fontsize = 12)\nax.set_xlabel('Area')\nax.set_title(\"Prices vs Area\", fontsize = 18, loc = 'left')\nax = ax","e5f2cc57":"ax = sns.boxplot(y = data.Prices, x = data.Glass_Doors, width = 0.4, orient= 'v', palette= 'prism')\nax.figure.set_size_inches(12,8)\nax.set_ylabel('House Prices', fontsize = 12)\nax.set_title(\"Boxplot of the prices vs Glass Doors\", fontsize = 18, loc = 'left')\nax.set_xticklabels(['Glass Door - No', 'Glass Door - Yes'], fontsize = 12)\nax = ax","0b1b37af":"ax = sns.distplot(data.Prices, color='Blue')\nax.figure.set_size_inches(18,8)\nax.set_xlabel('Prices of the houses', fontsize = 12)\nax.set_title(\"Frequency Distribution of House Prices\", fontsize = 18, loc = 'left')\nax = ax","fd8d5db9":"#Crianting the variables to consider on the prediction\nY = data['Prices']\nX = data[['White_Marble', 'Floors', 'City','Fiber', 'Baths', 'Area', 'Glass_Doors']]","b45f92b2":"X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.35)","d7952d94":"#Instantiating and estimating the regression model\nregression_model = LinearRegression().fit(X_train, Y_train)","db88c4e5":"#Obtaining the coefficient of determination (R\u00b2) by train datas\nprint('R\u00b2 = {}'.format(regression_model.score(X_train, Y_train).round(2)))","ecc76f76":"#Loading prediction for test datas\nY_previsto = regression_model.predict(X_test)","e5661ae2":"#Obtaining the coefficient of determination (R\u00b2) for model datas\nprint('R\u00b2 = %s' % metrics.r2_score(Y_test, Y_previsto).round(2))","fadf5ef9":"#Analysing how the predicting were fited to the model\nprint('Real price on database $ {0:.2f}'.format(data[0:1]['Prices'][0]))\nprint('Predicted Price considering the same variables of the database $ {0:.2f}.'.format(regression_model.predict(data[0:1][['White_Marble', 'Floors', 'City','Fiber', 'Baths', 'Area', 'Glass_Doors']])[0]))","bd43b6aa":"# Considering the punctual values above we can see the error of the model\nprint('Error $ {0:.2f}'.format(data[0:1]['Prices'][0] - regression_model.predict(data[0:1][['White_Marble', 'Floors', 'City','Fiber', 'Baths', 'Area', 'Glass_Doors']])[0]))\nprint('Error {0:.1f} %'.format((data[0:1]['Prices'][0] - regression_model.predict(data[0:1][['White_Marble', 'Floors', 'City','Fiber', 'Baths', 'Area', 'Glass_Doors']])[0])\/data[0:1]['Prices'][0] * 100))","56e7f01c":"#We can export for a program the model os prediction\nimport pickle\noutput = open('modelo_projeto', 'wb')\npickle.dump(regression_model, output)\noutput.close()","3f5fff81":"#Importing model\nmodelo = open('modelo_projeto','rb')\nlm_new = pickle.load(modelo)\nmodelo.close()","90b14db1":"# Importing libraries\nfrom ipywidgets import widgets, HBox, VBox\nfrom IPython.display import display\n\n# Creating forms\nWhite_Marble = widgets.Text(description=\"White Marble\")\nFloors = widgets.Text(description=\"Floors\")\nCity = widgets.Text(description=\"City\")\nFiber = widgets.Text(description=\"Fiber\")\nBaths = widgets.Text(description=\"Baths\")\nArea = widgets.Text(description=\"Area\")\nGlass_Door = widgets.Text(description='Glass Door')\n\nbotao = widgets.Button(description=\"Simular\")\n\n# Creating and positioning the screen\nleft = VBox([White_Marble, Floors, City, Fiber])\nright = VBox([Baths, Area, Glass_Door])\ninputs = HBox([left, right])\n\n# Function for the simulation\ndef simulador(sender):\n    entrada=[[\n                float(White_Marble.value if White_Marble.value else 0), \n                float(Floors.value if Floors.value else 0), \n                float(City.value if City.value else 0), \n                float(Fiber.value if Fiber.value else 0), \n                float(Baths.value if Baths.value else 0), \n                float(Area.value if Area.value else 0),\n                float(Glass_Door.value if Glass_Door.value else 0)\n             ]]\n    print('$ {0:.2f}'.format(lm_new.predict(entrada)[0]))\n    \n# Setting function for the button\nbotao.on_click(simulador)\ndisplay(inputs, botao)","54abfc93":"Same for the city we can not see any outliers and depends on the city, the prices increase.","92498fb4":"For first analisys we do not see any discrepant values on prices we should consider an outlier value.","e8e09deb":"According to histogram, it is possible the dependent variable follow a normal distribution","4af9bdb9":"We see an incresing for quantities of baths and no outliers visible.","d3985704":"We see how are relevant to consider the price of the houses despite of the correlation matrix show us only 15% of correlation.","e9f5a0d5":"The lines bellow is just a plus for the prediction I am initiating ins this area so I am doing as much as possible for me to learn.","366c8c28":"According to the graph of correlation, we can see White Marble, Floors and Fiber variables that have more impact on houses prices.\nFor this study and more precise prediction we are considering the variables bellow to estimate the prices of the houses.\n\nWhite_Marble, Floors, City, Fiber, Baths, Area, Glass_Doors","7e02c560":"**Estimating the regression**","b9bb0bc4":"We see when the houses have installed white marble, the prices increse as we have seen on the correlation matrix and we do not see visible relevant outliers.","b0b9a91b":"In our database we have only one and two story houses, but for prediction I understand that we can consider more than 2 floors. As more floor the houses have, higher prices the houses are, the prices increse as we have seen on the correlation matrix and we do not see visible relevant outliers.","aa2a04af":"We can consider the the model is fited for predictions both model and train dataset resulted the same coeficient. ","cfe125b4":"We see an incresing for house which have fiber and no outliers visible.","645daf4e":"We see the same relevance for Glass Doors to increase the price and we can not see outliers."}}