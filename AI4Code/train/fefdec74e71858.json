{"cell_type":{"a27792f9":"code","40588df4":"code","f7da70cf":"code","e4bcf055":"code","fae8f9e9":"code","a872c449":"code","8824a0a3":"code","19f71662":"code","23c0908f":"code","b97d7d19":"code","420dfb8e":"code","b51a0a0b":"code","a346d307":"code","ca93b654":"code","15e62b1a":"code","1b23af8f":"code","e6654503":"code","efda2ae5":"code","10a0e275":"code","a2192dc7":"code","1e753753":"code","46eb044f":"markdown","41a30f91":"markdown"},"source":{"a27792f9":"# Importing the required libraries\nimport pandas as pd, numpy as np\nimport matplotlib.pyplot as plt, seaborn as sns\n%matplotlib inline","40588df4":"# Reading the csv file and putting it into 'df' object.\ndf = pd.read_csv('..\/input\/heart-disease-prediction-data\/heart_v2.csv')","f7da70cf":"df.columns","e4bcf055":"df.head()","fae8f9e9":"df.info()","a872c449":"df['heart disease'].value_counts()","8824a0a3":"# Putting feature variable to X\nX = df.drop('heart disease',axis=1)\n\n# Putting response variable to y\ny = df['heart disease']","19f71662":"from sklearn.model_selection import train_test_split","23c0908f":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, random_state=42)\nX_train.shape, X_test.shape","b97d7d19":"from sklearn.tree import DecisionTreeClassifier","420dfb8e":"dt = DecisionTreeClassifier(max_depth=3)\ndt.fit(X_train, y_train)","b51a0a0b":"#!pip install six","a346d307":"#pip install pydotplus","ca93b654":"#pip install graphviz","15e62b1a":"# Importing required packages for visualization\nfrom IPython.display import Image  \nfrom six import StringIO\nfrom sklearn.tree import export_graphviz\nimport pydotplus, graphviz","1b23af8f":"# plotting tree using pydotplus and graphviz with max_depth=3\ndot_data = StringIO()  \n\nexport_graphviz(dt, out_file=dot_data, filled=True, rounded=True,\n                feature_names=X.columns, \n                class_names=['No Disease', \"Disease\"])\n\ngraph = pydotplus.graph_from_dot_data(dot_data.getvalue())\nImage(graph.create_png())\n#Image(graph.create_png(),width=800,height=900)\n#graph.write_pdf(\"dt_heartdisease.pdf\")","e6654503":"# alternate option\n\nfrom sklearn.tree import plot_tree\nplt.figure(figsize=(60,30))\nplot_tree(dt, feature_names = X.columns,class_names=['No Disease', \"Disease\"],filled=True);","efda2ae5":"y_train_pred = dt.predict(X_train)\ny_test_pred = dt.predict(X_test)","10a0e275":"from sklearn.metrics import confusion_matrix, accuracy_score","a2192dc7":"print(accuracy_score(y_train, y_train_pred))\nconfusion_matrix(y_train, y_train_pred)","1e753753":"print(accuracy_score(y_test, y_test_pred))\nconfusion_matrix(y_test, y_test_pred)","46eb044f":"Fitting the decision tree with default hyperparameters, apart from max_depth which is 3 so that we can plot and read the tree.","41a30f91":"#### Evaluating model performance"}}