{"cell_type":{"9dc7c005":"code","26e97360":"code","237273d1":"code","9b86afb7":"code","64410503":"code","5e2e41ef":"code","745376ea":"code","470e997d":"code","d27288f1":"code","429ac038":"code","eb9246ae":"code","f854c6c3":"code","5469c202":"code","9d1b14fd":"code","bc06375f":"code","a3e4dfc5":"markdown","e5fafab5":"markdown","3bcf4cc2":"markdown","1da17345":"markdown","22edf5c5":"markdown"},"source":{"9dc7c005":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","26e97360":"# dataframes\ntrain = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ntrain.head()","237273d1":"# Statistical description\ntrain.describe()","9b86afb7":"# data information\ntrain.info()","64410503":"# drop cabin data column because there is many null values\ntrain.drop(['Name','Cabin','Ticket'], axis='columns', inplace=True);\ntest.drop(['Name','Cabin','Ticket'], axis='columns', inplace=True);","5e2e41ef":"train_len = len(train)\n\n# combine two dataframe\ndf = pd.concat([train, test], axis=0)\ndf = df.reset_index(drop=True)\ndf.head()","745376ea":"# find the null values\ndf.isnull().sum()","470e997d":"# fill missing values\ndf['Age'] = df['Age'].fillna(df['Age'].mean())\ndf['Fare'] = df['Fare'].fillna(df['Fare'].mean())\n\ndf['Embarked'] = df['Embarked'].fillna(df['Embarked'].mode()[0]) # use mode for fill missing null value in categorical variable\n","d27288f1":"sns.distplot(df['Fare'])","429ac038":"df['Fare'] = np.log(df['Fare'] + 1)\nsns.distplot(df['Fare'])","eb9246ae":"corr = df.corr()\nplt.figure(figsize=(15,9))\nsns.heatmap(corr, annot=True, cmap='coolwarm')","f854c6c3":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\n\ncols = ['Sex', 'Embarked']\n\nfor col in cols:\n    df[col] = le.fit_transform(df[col])\n    \ndf.head()","5469c202":"train = df[:train_len]\ntest = df[train_len:]\ntrain.head()","9d1b14fd":"from sklearn.ensemble import RandomForestClassifier\n\ny = train[\"Survived\"]\n\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\", \"Age\", \"Fare\", \"Embarked\"]\nX = pd.get_dummies(train[features])\nX_test = pd.get_dummies(test[features])\n\nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(X, y)\npredict = model.predict(X_test)\n","bc06375f":"output=pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv',header='infer')\npredictions=model.predict(X_test)\noutput['Survived']=predictions.astype('int')\noutput.to_csv('submission.csv', index=False)","a3e4dfc5":"From above statistical and data type information we can surely remove some attribute like Name, Cabin, Ticket\n","e5fafab5":"## corelation matrix","3bcf4cc2":"## log transformation for uniform data distribution","1da17345":"## Data preprocessing","22edf5c5":"## Label encoding"}}