{"cell_type":{"ff65db57":"code","e261c26a":"code","bfd697d2":"code","0bba970b":"code","dde37564":"code","c0b4f652":"code","bf6d30e2":"code","7b62c5ff":"code","136adc4d":"code","a4f22bf0":"code","69424ad9":"markdown"},"source":{"ff65db57":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport tensorflow as tf\nfrom tensorflow.keras import layers\nfrom time import perf_counter \nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense,Conv2D,Flatten,Dropout,MaxPool2D,BatchNormalization\nfrom sklearn.model_selection import train_test_split\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nimport matplotlib.pyplot as plt\nfrom tensorflow.keras.callbacks import ReduceLROnPlateau,ModelCheckpoint,EarlyStopping","e261c26a":"classifier=Sequential()\n\nclassifier.add(Conv2D(filters=96,kernel_size=(11,11),strides=(4,4),padding='valid',input_shape=(224,224,3),activation='relu'))\nclassifier.add(MaxPool2D((2,2),strides=(2,2),padding='valid'))\nclassifier.add(BatchNormalization())\n\nclassifier.add(Conv2D(filters=128,kernel_size=(5,5),strides=(1,1),padding='valid',activation='relu'))\nclassifier.add(MaxPool2D((2,2),strides=(2,2),padding='valid'))\nclassifier.add(BatchNormalization())\n\nclassifier.add(Conv2D(filters=512,kernel_size=(3,3),strides=(1,1),padding='valid',activation='relu'))\nclassifier.add(BatchNormalization())\n\nclassifier.add(Conv2D(filters=512,kernel_size=(3,3),strides=(1,1),padding='valid',activation='relu'))\nclassifier.add(BatchNormalization())\n\nclassifier.add(Conv2D(filters=1024,kernel_size=(3,3),strides=(1,1),padding='valid',activation='relu'))\n\nclassifier.add(MaxPool2D((2,2),strides=(2,2),padding='valid'))\nclassifier.add(BatchNormalization())\n\nclassifier.add(Flatten())\n\nclassifier.add(BatchNormalization())\nclassifier.add(Dense(1024,activation='relu'))\nclassifier.add(Dropout(0.4))\nclassifier.add(BatchNormalization())\nclassifier.add(Dense(512,activation='relu'))\nclassifier.add(Dropout(0.2))\nclassifier.add(BatchNormalization())\nclassifier.add(Dense(38,activation='softmax'))\n\nclassifier.summary()","bfd697d2":"from keras import optimizers\nclassifier.compile(optimizer=optimizers.SGD(lr=0.01, momentum=0.9, decay=0.005),\n              loss='categorical_crossentropy',\n              metrics=['accuracy'])","0bba970b":"train_datagen=ImageDataGenerator(rescale=1.\/255,\n                                shear_range=0.2,\n                                zoom_range=0.2,\n                                width_shift_range=0.2,\n                                height_shift_range=0.2,\n                                fill_mode='nearest')\n\nvalid_datagen=ImageDataGenerator(rescale=1.\/255)\n\nbatch_size=128\nbase_dir='..\/input\/new-plant-diseases-dataset\/new plant diseases dataset(augmented)\/New Plant Diseases Dataset(Augmented)'\n\ntraining_set=train_datagen.flow_from_directory(base_dir+'\/train',\n                                              target_size=(224,224),\n                                              batch_size=batch_size,\n                                              class_mode='categorical')\n\nvalid_set=valid_datagen.flow_from_directory(base_dir+'\/valid',\n                                          target_size=(224,224),\n                                          batch_size=batch_size,\n                                          class_mode='categorical')","dde37564":"print(training_set.class_indices)","c0b4f652":"train_num=training_set.samples\nvalid_num=valid_set.samples","bf6d30e2":"\n\nweights=ModelCheckpoint('weights.hdf5',\n                       save_best_only=True,\n                       verbose=1,\n                       save_weights_only=True)\n\nearly_stopping=EarlyStopping(monitor='val_acc',mode='max',patience=5)\n\nhistory=classifier.fit_generator(training_set,\n                                steps_per_epoch=train_num\/\/batch_size,\n                                validation_data=valid_set,\n                                epochs=25,\n                                validation_steps=valid_num\/\/batch_size,\n                                callbacks=[weights,early_stopping])","7b62c5ff":"classifier.save('1733model.h5')","136adc4d":"plt.plot(history.history['accuracy'], label = 'training accuracy')\nplt.plot(history.history['val_accuracy'], label = 'validation accuracy')\n\nplt.legend()","a4f22bf0":"plt.plot(history.history['loss'], label = 'training loss')\nplt.plot(history.history['val_loss'], label = 'validation loss')\nplt.legend()\n","69424ad9":"## Testing"}}