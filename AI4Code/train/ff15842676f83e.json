{"cell_type":{"636569f7":"code","34384356":"code","c4a3567d":"code","64d58cab":"code","a7a6dd15":"code","ad561129":"code","ef17d0f1":"code","e30463ba":"code","f47ec87f":"code","b2a9cc1a":"code","c1aa0e52":"code","26430ca1":"code","e1c93882":"code","f8d5ca39":"code","9d852a91":"code","da803bdf":"code","2c29f67c":"code","73f162b4":"code","cf70f7b2":"code","29ad8619":"code","4799929e":"code","76f5fb64":"code","011e26fb":"code","21120ac7":"code","ba082f3d":"code","db83b8e7":"code","56d3ed3f":"code","c7c940ec":"code","de87b0f0":"code","e22d4de9":"code","545e98bb":"code","3e43d46c":"code","5b668059":"code","da865e0d":"code","338b59e9":"code","f352aa23":"code","de225ffb":"code","aefb7003":"code","d127f1e1":"code","7c90747f":"code","7de0d0fc":"code","5ece015f":"code","dffefcb7":"code","056f8384":"markdown","c25d06ea":"markdown","2c133168":"markdown","07cb5b77":"markdown","93c61776":"markdown","a9150d77":"markdown","d2683758":"markdown","96029e07":"markdown","62cd5c69":"markdown","d751d308":"markdown","19b0d942":"markdown","391fbc43":"markdown","f342222c":"markdown","ebae560b":"markdown","e19f5368":"markdown","31829b02":"markdown"},"source":{"636569f7":"import pandas as pd\nimport numpy as np\nimport unicodedata\n\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport seaborn as sns\nfrom sklearn.neural_network import MLPRegressor\nfrom datetime import date, timedelta\nimport plotly.graph_objects as go\n ","34384356":"data = pd.read_csv('..\/input\/covid19perudataconubigeos\/covid-19-peru-data-con-ubigeos.csv')\ndata.head()","c4a3567d":"data.isna().sum()","64d58cab":"data.columns.to_list()","a7a6dd15":"data = data[['region','date','confirmed','deaths','recovered','negative_cases','pob_2017']]\ndata.head()","ad561129":"data.date = pd.to_datetime(data[\"date\"]) \ndata.region = data.region.fillna('').astype(str)\ndata.deaths = data.deaths.fillna(0).astype(int)\ndata.deaths = data.deaths.fillna(0).astype(int)\ndata.recovered = data.recovered.fillna(0).astype(int)\ndata.negative_cases = data.negative_cases.fillna(0).astype(int)\ndata.pob_2017 = data.pob_2017.fillna(0).astype(int)","ef17d0f1":"data = data[data.region!=''].reset_index()\ndata = data.rename(columns={'index':'id'})\ndata.head()","e30463ba":"data.isna().sum()","f47ec87f":"data_acum = data\n\nlista_regiones = data_acum['region'].value_counts().reset_index()['index'].tolist()\nlista_regiones.sort()\nlista_regiones","b2a9cc1a":"def generandoCasosConfirmados(data_acumulada, nueva_data):\n    nueva_data = data_acumulada.sort_values(['region','date'],ascending=True)\n    nueva_data = nueva_data.rename(columns={'confirmed':'confirmed_acum'})\n    new_list=[]\n    \n    for ciudad in lista_regiones:\n        \n        lista_acum = nueva_data[nueva_data.region==ciudad].confirmed_acum.to_list()\n        tam_lista = len(lista_acum)\n        \n        if tam_lista>0: \n            \n            new_list.append(lista_acum[0])\n            \n            if(tam_lista>=2):\n                for i in range(tam_lista-1):\n                    new_list.append(lista_acum[i+1]-lista_acum[i])\n    nueva_data['confirmed'] = new_list\n    return nueva_data","c1aa0e52":"data = generandoCasosConfirmados(data_acum, data)\ndata.head()","26430ca1":"data_region = data.groupby(\"region\")[[\"confirmed\"]].sum().reset_index()\ndata_region = data_region.rename(columns={\n    'region':'Region',\n    'confirmed':'Nro de casos confirmados'\n}) ","e1c93882":"fig = px.bar(\n    data_region[['Region','Nro de casos confirmados']],\n    y = 'Nro de casos confirmados',\n    x = 'Region',\n    color = 'Region',\n    log_y = True,\n    template='ggplot2', \n    title='Cantidad de casos confirmados por region'\n)\nfig.show()","f8d5ca39":"data_fecha_infectados = data.groupby(\"date\")[['confirmed']].sum().reset_index()\ndata_fecha_infectados[\"confirmed_acum\"] = data_fecha_infectados.confirmed.cumsum()","9d852a91":"plt.figure(figsize=(10,5))\nplt.title('Numero de nuevos infectados cada dia')\nplt.plot(data_fecha_infectados.date,data_fecha_infectados.confirmed)","da803bdf":"plt.figure(figsize=(10,5))\nplt.title('Numero de infectados cada dia en Peru')\nplt.plot(data_fecha_infectados.date,data_fecha_infectados.confirmed_acum)","2c29f67c":"data_muertes = pd.read_csv('..\/input\/covid19perudataconubigeos\/covid-19-peru-fallecimientos.csv')\ndata_muertes.head()","73f162b4":"data_muertes.isna().sum()","cf70f7b2":"data_muertes = data_muertes.rename(columns={'regi\u00f3n':'region'})\n\ndata_muertes.fecha_anuncio = pd.to_datetime(data_muertes.fecha_anuncio)\ndata_muertes.fecha_fallecimiento = pd.to_datetime(data_muertes.fecha_fallecimiento)\ndata_muertes.fecha_ingreso = pd.to_datetime(data_muertes.fecha_ingreso)\ndata_muertes.fecha_retorno = pd.to_datetime(data_muertes.fecha_retorno)\ndata_muertes.fecha_contacto = pd.to_datetime(data_muertes.fecha_contacto)\n\ndata_muertes.neumonia = data_muertes.neumonia.fillna(0).astype(int)\ndata_muertes.insuf_resp = data_muertes.insuf_resp.fillna(0).astype(int)\n\ndata_muertes.contacto = data_muertes.contacto.fillna('desconocido').astype(str)\ndata_muertes.contacto_origen = data_muertes.contacto_origen.fillna('desconocido').astype(str)\ndata_muertes.otros_sintomas = data_muertes.otros_sintomas.fillna('ninguno').astype(str)\ndata_muertes.factores = data_muertes.factores.fillna('ninguno').astype(str)\ndata_muertes.viaje = data_muertes.viaje.fillna('no_aviajo').astype(str)\ndata_muertes.misc = data_muertes.misc.fillna('').astype(str)\n\ndata_muertes.head()","29ad8619":"data_muertes_region = pd.DataFrame(data_muertes[\"region\"])\ndata_muertes_region = data_muertes_region.region.value_counts().reset_index()\ndata_muertes_region = data_muertes_region.rename(columns={'index':'region','region':'cantidad'})","4799929e":"fig = px.bar(\n    data_muertes_region[['region','cantidad']],\n    y = 'cantidad',\n    x = 'region',\n    color = 'region',\n    log_y = True,\n    template='ggplot2', \n    title='Nro muertes en cada region',\n    labels={'cantidad':'Nro de muertes','region':'Region'}\n)\nfig.show()","76f5fb64":"data_masculino_femenino = data_muertes[['sexo']]","011e26fb":"plt.figure(figsize=(15, 5))\nplt.title('Gender')\ndata_masculino_femenino.sexo.value_counts().plot.bar();","21120ac7":"sintomas = pd.DataFrame((';'.join(data_muertes.otros_sintomas[data_muertes.otros_sintomas!='ninguno'].to_list())).split(';'))\nsintomas = sintomas.rename(columns={0:'otros_sintomas'})\nsintomas = sintomas.otros_sintomas.value_counts().reset_index()\nsintomas = sintomas.rename(columns={'index':'otros_sintomas','otros_sintomas':'cantidad'})","ba082f3d":"fig = px.pie(sintomas,\n             values=\"cantidad\",\n             names=\"otros_sintomas\",\n             title=\"Otros sintomas en los fallecidos\",\n             template=\"seaborn\")\n\nfig.update_layout(\n    font=dict(\n        size=15,\n        color=\"#242323\"\n    )\n    )  \nfig.show()","db83b8e7":"data_muertes_factores = pd.DataFrame((';'.join(data_muertes.factores[data_muertes.factores!='ninguno'].to_list())).split(';'))\ndata_muertes_factores = data_muertes_factores.rename(columns={0:'factores'})\ndata_muertes_factores = data_muertes_factores.factores.value_counts().reset_index()\ndata_muertes_factores = data_muertes_factores.rename(columns={'index':'factores','factores':'cantidad'})","56d3ed3f":"fig = px.pie(data_muertes_factores,\n             values=\"cantidad\",\n             names=\"factores\",\n             title=\"Factores de los fallecidos\",\n             template=\"seaborn\")\n\nfig.update_layout(\n    font=dict(\n        size=15,\n        color=\"#242323\"\n    )\n    )  \nfig.show()","c7c940ec":"data_muertes_edad_sexo = data_muertes[['edad','sexo']]","de87b0f0":"plt.figure(figsize=(10,6))\nsns.set_style(\"darkgrid\")\nplt.title(\"Distribucion de edades de las muertes\")\nsns.kdeplot(data=data_muertes_edad_sexo.edad, shade=True)","e22d4de9":"data_muertes_femenino_edad = data_muertes_edad_sexo[data_muertes_edad_sexo.sexo==\"femenino\"]\ndata_muertes_masculino_edad = data_muertes_edad_sexo[data_muertes_edad_sexo.sexo==\"masculino\"]","545e98bb":"sns.set_style(\"darkgrid\")\nplt.title(\"Age distribution of the confirmation by gender\")\nsns.kdeplot(data=data_muertes_masculino_edad.edad, label=\"Masculino\", shade=True).set(xlim=(0))\nsns.kdeplot(data=data_muertes_femenino_edad.edad,label=\"Femenino\" ,shade=True).set(xlim=(0))","3e43d46c":"data_muertes_lugar_fallecimiento = data_muertes.lugar_fallecimiento.value_counts().reset_index()\ndata_muertes_lugar_fallecimiento = data_muertes_lugar_fallecimiento.rename(\n    columns={\n        'index':'lugar_fallecimiento',\n        'lugar_fallecimiento':'cantidad'\n    })","5b668059":"fig = px.pie(data_muertes_lugar_fallecimiento,\n             values=\"cantidad\",\n             names=\"lugar_fallecimiento\",\n             title=\"Lugares de Fallecimiento\",\n             template=\"seaborn\")\n\nfig.update_traces(rotation=90, pull=0.05, textinfo=\"value+percent+label\")\nfig.show()","da865e0d":"data_muertes_fallecidos_viaje = data_muertes.viaje.value_counts().reset_index()\ndata_muertes_fallecidos_viaje = data_muertes_fallecidos_viaje.rename(\n    columns={\n        'index':'viaje',\n        'viaje':'cantidad'\n    })","338b59e9":"fig = px.pie(data_muertes_fallecidos_viaje,\n             values=\"cantidad\",\n             names=\"viaje\",\n             title=\"Paises de donde retornaron al Peru\",\n             template=\"seaborn\")\n\nfig.update_traces(rotation=90, pull=0.05, textinfo=\"value+percent+label\")\nfig.show()","f352aa23":"data_muertes_ingreso_fallecimiento = data_muertes[['fecha_fallecimiento','fecha_ingreso']]\ndata_muertes_ingreso_fallecimiento = data_muertes_ingreso_fallecimiento.dropna(subset=['fecha_fallecimiento'])\ndata_muertes_ingreso_fallecimiento = data_muertes_ingreso_fallecimiento.dropna(subset=['fecha_ingreso'])\n\ndata_muertes_ingreso_fallecimiento['dias'] = data_muertes_ingreso_fallecimiento.fecha_fallecimiento.dt.day - data_muertes_ingreso_fallecimiento.fecha_ingreso.dt.day\n\ndata_muertes_ingreso_fallecimiento = data_muertes_ingreso_fallecimiento.sort_values('dias')","de225ffb":"plt.figure(figsize=(15, 5))\nplt.title('Numero de dias desde el ingreso hasta la muerte')\ndata_muertes_ingreso_fallecimiento.dias.value_counts().plot.bar();","aefb7003":"numero_fallecidos = data_muertes['insuf_resp'].count()\n\ninsuf_positivo = data_muertes['insuf_resp'].sum()\ninsuf_negativo = np.abs((numero_fallecidos-insuf_positivo))\n\nneumonia_positivo = data_muertes['neumonia'].sum()\nneumonia_negativo = numero_fallecidos-neumonia_positivo\n\ndata_muertes_insuf_neumo = pd.DataFrame(\n                        {\n                            'insuf_positivo':[insuf_positivo],\n                            'insuf_negativo':[insuf_negativo],\n                            'neumonia_positivo':[neumonia_positivo],\n                            'neumonia_negativo':[neumonia_negativo]\n                        }\n                    ) \n","d127f1e1":"fig = plt.figure(figsize=(15, 5))\nax = fig.add_axes([0,0,1,1])\nplt.title('Fallecidos con : insuficiencia respiratoria y neumonia')\nabscisas = data_muertes_insuf_neumo.columns.tolist()\nordenadas = data_muertes_insuf_neumo.values.tolist()[0]\nax.bar(abscisas,ordenadas)\nplt.show()","7c90747f":"data_fecha_infectados = data.groupby(\"date\")[['confirmed']].sum().reset_index()\ndata_fecha_infectados[\"confirmed_acum\"] = data_fecha_infectados.confirmed.cumsum()\n\nx = np.arange(len(data_fecha_infectados)).reshape(-1, 1)\ny = data_fecha_infectados.confirmed_acum.values","7de0d0fc":"model = MLPRegressor(hidden_layer_sizes=[32, 32, 10], max_iter=50000, alpha=0.0005, random_state=51)\n_=model.fit(x, y)\n\ntest = np.arange(len(data_fecha_infectados)+10).reshape(-1, 1)\npred = model.predict(test)\n\nprediction = pred.round().astype(int)\nweek = [data_fecha_infectados.date[0] + timedelta(days=i) for i in range(len(prediction))]\n\ndt_idx = pd.DatetimeIndex(week)\n\npredicted_count = pd.Series(prediction, dt_idx)","5ece015f":"fig = plt.figure(figsize=(15, 5))\nplt.plot(data_fecha_infectados.date, data_fecha_infectados.confirmed_acum)\npredicted_count.plot()\nplt.title('Prediction of Accumulated Confirmed Count')\nplt.legend(['current confirmd count', 'predicted confirmed count'])\nplt.show()","dffefcb7":"fig = go.Figure([go.Bar(x=predicted_count.index, y=predicted_count.values)])\nfig.show()","056f8384":"## Cantidad de infectados en los proximos 10 dias","c25d06ea":"## Muertes vs Region","2c133168":"## Infectados vs Fechas","07cb5b77":"## Nro de muertes segun genero","93c61776":"## Lugares de Fallecimiento","a9150d77":"## Fallecidos con : insuficiencia respiratoria y neumonia","d2683758":"## Otros Sintomas","96029e07":"## Factores","62cd5c69":"# MUERTES","d751d308":"## Distribucion del tiempo de vida desde el ingreso al hospital","19b0d942":"## DISTRIBUCION DE MUERTES EDAD Y GENERO","391fbc43":"## Fallecidos que volvieron de otros paises","f342222c":"# INFECTADOS","ebae560b":"# PREDICCIONES ","e19f5368":"# Infectados vs Regiones","31829b02":"## Distribucion de Edad"}}