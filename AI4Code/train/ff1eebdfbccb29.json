{"cell_type":{"4aeb918f":"code","7e2f36ff":"code","45d4d06c":"code","6b3f0f7f":"code","2a4604ca":"code","fef74fc2":"code","6789ab33":"code","30675757":"code","fe6ae25a":"code","ee250416":"code","8ea4d8b2":"code","ca717423":"code","b9c34871":"code","fd051e01":"code","f888bf48":"code","613ece0b":"code","d63fc2de":"code","734e2494":"code","4a3a910a":"code","0305a46e":"code","7f89756f":"code","d706caa4":"code","05afbafa":"code","de826a1d":"code","3ffec22a":"code","b779022e":"code","bdc52915":"code","aee6f66e":"code","f31cbe8e":"code","86958850":"code","95a3f83a":"code","163501e2":"code","95ef39fd":"code","92270c08":"code","c992a580":"code","f8776a94":"code","b2002681":"code","340e88cb":"code","0449c260":"code","fa9cf7eb":"code","e2e55082":"code","004422d5":"code","edc300f1":"code","a5054733":"code","02575d8f":"code","7c31ab1b":"code","54e015dd":"code","2f0e40e5":"code","dc49fcf3":"code","4460b457":"code","fcff04b0":"markdown","bf3e134a":"markdown","bfb5d36b":"markdown","e8f6b6c5":"markdown","7c79cedb":"markdown","626058c6":"markdown","1145db28":"markdown","07d97e10":"markdown","7c392a89":"markdown","ac56f982":"markdown","c9d03656":"markdown","52473a81":"markdown","ccbe6130":"markdown","45fe5678":"markdown","9d3c887a":"markdown","113501be":"markdown","4a499df1":"markdown","d0f95ae4":"markdown","f383aa6b":"markdown"},"source":{"4aeb918f":"# data manipulation\nimport pandas as pd\n\n# computation\nimport numpy as np\n\n# data visualizing\nimport seaborn as sns\nimport matplotlib\nimport matplotlib.pyplot as plt\n%matplotlib inline\n","7e2f36ff":"df = pd.read_csv('\/kaggle\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv')","45d4d06c":"df.head()","6b3f0f7f":"df.shape","2a4604ca":"df.info()","fef74fc2":"df.columns","6789ab33":"df.describe()  # view statistical properties for numerical variables","30675757":"df.nunique()","fe6ae25a":"df.neighbourhood_group.unique()","ee250416":"df.room_type.unique()","8ea4d8b2":"total_miss = df.isna().sum()\npercentage = round(total_miss*100 \/ df.shape[0], 2)\n\nmissing_table = pd.concat([total_miss,percentage], axis = 1, keys = ['Count', 'Percent %'],).sort_values('Count', ascending = False)\n\nmissing_table","ca717423":"df.drop(['name','id','host_name','last_review'], axis=1, inplace=True)","b9c34871":"print('Duplicate values:',df.duplicated().sum())","fd051e01":"df.head()","f888bf48":"print(df.shape)","613ece0b":"df.isna().sum()","d63fc2de":"df.reviews_per_month = df.reviews_per_month.fillna(0) ","734e2494":"df.isna().sum()","4a3a910a":"df.corr()","0305a46e":"plt.figure(figsize = (10,10)) # change figure size\nsns.heatmap(\n    df.corr(),\n    annot = True, # display correlation coefficient\n    fmt = '.1g', # decimal places\n    square = True, # makesure map is in square\n    vmin = -1,\n    vmax = 1,\n    center = 0,\n    cmap = 'RdBu_r'\n);","7f89756f":"sns.pairplot(data = df,\n            hue = 'neighbourhood_group')","d706caa4":"df.head()","05afbafa":"df.room_type.value_counts()","de826a1d":"df.room_type.value_counts().plot(kind = 'pie', \n                                    figsize = (6,6), \n                                    title = 'Listing based on room type');","3ffec22a":"df.neighbourhood_group.unique()","b779022e":"df.neighbourhood_group.value_counts()","bdc52915":"sns.countplot(\n    data = df,\n    x = 'neighbourhood_group',\n    order = df.neighbourhood_group.value_counts().index\n);","aee6f66e":"df.groupby('neighbourhood_group')['neighbourhood'].nunique()","f31cbe8e":"df.groupby(['neighbourhood_group','neighbourhood']).size()","86958850":"df.loc[df['neighbourhood_group'] == 'Manhattan']          #.sort_values(by = 'price' )","95a3f83a":"df.describe()","163501e2":"df.head(2)","95ef39fd":"df.price.describe()","92270c08":"plt.boxplot(df.price)\nplt.show()","c992a580":"df.price.hist(bins = 100)","f8776a94":"# host with highest number of review\n\nreview = df[['host_id','number_of_reviews','room_type', 'neighbourhood_group', 'neighbourhood']].sort_values(by = 'number_of_reviews',ascending = False)\nreview.head(10)","b2002681":"# host vs availability\n\navailability = df[['host_id','availability_365','room_type', 'neighbourhood_group', 'neighbourhood']].sort_values(by = 'availability_365',ascending = False)\navailability.head()","340e88cb":"availability = df[['host_id','availability_365','room_type', 'neighbourhood_group', 'neighbourhood']].sort_values(by = 'availability_365',ascending = False)\navailability.tail()","0449c260":"# availability = 0\navailability[availability['availability_365'] == 0].count()","fa9cf7eb":"# host with high listing counts\n\nhost_list = df.groupby('host_id')['calculated_host_listings_count'].count().sort_values(ascending = False).to_frame()\nhost_list.head(10)","e2e55082":"print('Minimum night:', df['minimum_nights'].min())\nprint('Maximum night:', df['minimum_nights'].max())","004422d5":"# number of listing per neighbourhood\n\nsns.countplot(\n    x = 'neighbourhood_group', \n    data = df\n);","edc300f1":"# type of room\n\ndf['room_type'].unique()","a5054733":"# number of listing per room type\n\nsns.catplot(\n    x = 'room_type',\n    kind = 'count',\n    data = df\n);\n","02575d8f":"# no of room based on neighboorhood group and room type\n\nplt.figure(figsize=(8,6))\n\nsns.countplot(\n    df['neighbourhood_group'],\n    hue=df['room_type']\n);","7c31ab1b":"# Most expensive Airbnbs in Brooklyn\nexpensive = df[df['neighbourhood_group'] == 'Brooklyn'].sort_values(by = 'price', ascending = False)\nexpensive.head(5)","54e015dd":"# Most cheapest Airbnbs in Brooklyn\nexpensive = df[df['neighbourhood_group'] == 'Brooklyn'].sort_values(by = 'price', ascending = True)\nexpensive.head(5)","2f0e40e5":"# average price per room type\n\n# Room type\nprivate_room = df['room_type'] == 'Private room'\nentire_home = df['room_type'] == 'Entire home\/apt'\nshared_room = df['room_type'] == 'Shared room'\n\n# Price \/ neighbourhood\nprivate_average = df[private_room]['price'].mean()\nentire_average = df[entire_home]['price'].mean()\nshared_average = df[shared_room]['price'].mean()\n\n\nprint(\"Average price based on room type\")\nprint(\"Private Room:\",private_average)\nprint(\"Entire Home\/Apt:\",entire_average)\nprint(\"Shared room:\", shared_average)\n","dc49fcf3":"# average price in each neighbourhood group\n\nbronx = df['neighbourhood_group'] == 'Bronx'\nstaten_island = df['neighbourhood_group'] == 'Staten Island'\nqueens = df['neighbourhood_group'] == 'Queens'\nbrooklyn = df['neighbourhood_group'] == 'Brooklyn'\nmanhattan = df['neighbourhood_group'] == 'Manhattan'\n\n# Average\nbronx_average = df[bronx]['price'].mean()\nstatenisland_average = df[staten_island]['price'].mean()\nqueens_average = df[queens]['price'].mean()\nbrooklyn_average = df[brooklyn]['price'].mean()\nmanhattan_average = df[manhattan]['price'].mean()\n\nprint(\"The average price in each neighbourhood group\")\nprint(\"Bronx:\",bronx_average)\nprint(\"Staten Island:\",statenisland_average)\nprint(\"Quuens:\", queens_average)\nprint(\"Brooklyn:\",brooklyn_average)\nprint(\"Manhattan:\",manhattan_average)","4460b457":"#NYC\ncheapest = df.sort_values(by = 'price', ascending = True)\ncheapest.head(10)","fcff04b0":"#### Price Distribution","bf3e134a":"### 5. Analyze Data","bfb5d36b":"### 4. Data Cleaning \/ Column Wrangling","e8f6b6c5":"As we can see there are some columns with missing values. We can make a table for the missing values and calculate the percentage of missing values for each of the columns.","7c79cedb":"### 1. Import Dependencies","626058c6":"### 5.2 Categorical Analysis and Visualization","1145db28":"# New York City Airbnb Open Data Analysis\n\nAirbnb is a well known platform as a rental online marketplace. This data was pulled from Kaggle.com and the data was focused on airbnb listing in New York City. We will be focusing on the price distribution and the listing distribution. We will also try to figure out what are other useful insights that we can analyse from the dataset.","07d97e10":"### 2. Loading data","7c392a89":"Now we already drop 'name' , 'id' , 'host_name' , 'last_review' column since they are not applicable for our analisis later. Note that we use 'inplace=True' so this change is made into our original data as well. \n\nLet's check whether we have any duplicated in our data just in case. ","ac56f982":"We have finished data preprocessing and data cleaning phase of this project. We cleaned the dataset from any missing values and replaced some values with zero instead of dropping the entire column. We also decided to drop a few unrelated columns to save us from any headache in our analysis later.","c9d03656":"The End :)","52473a81":"Great! Let's view our updated table","ccbe6130":"As we can see there are 4 columns that have missing values. Now let's decide which column we want to drop before we hadle the missing values in our airbnb data. ","45fe5678":"# Questions","9d3c887a":"The purpose of heatmap is to measure how strong the relationship between two variables.\nIndicator: \n\n-1 means strong negative correlation \n+1 means strong positive correlation \n0 means no correlation at all\n\nHence, from the heatmap above, we can see reviews_per_month column have a good positive correlation with number_of_reviews.","113501be":"### 5.1 Relation between column ","4a499df1":"### 3. The data at glance : Understand the data","d0f95ae4":"As we can see, we list all the columns' name and later on we will decide which column is applicable for our analysis. Usually we will drop the column that is not related to our analysis to make our results more relevent.","f383aa6b":"### 5.3 Numerical Analysis"}}