{"cell_type":{"dcb531bc":"code","aec8350f":"code","857b2172":"code","494ea802":"code","3f422a0e":"code","1d927c97":"code","49d92e96":"code","db801360":"code","ca62ffbb":"code","6446816a":"code","00ea0d0b":"code","e70379ae":"code","da5dd17f":"code","d37b98c7":"code","07b223f5":"code","2b5bce16":"code","e5502387":"code","2acfd470":"code","c6a2961e":"code","4e444a26":"code","1ebd8b62":"code","46e80faf":"code","79baffec":"code","9587ac9a":"code","41251971":"code","b4456771":"code","8334c190":"code","dad3de54":"code","faf87fca":"code","141874da":"code","2e919665":"code","d0d3979c":"code","914c1c24":"markdown","15ebfa0d":"markdown","c3cbcbfb":"markdown","cff4f453":"markdown","6011c2a8":"markdown","ca56649a":"markdown"},"source":{"dcb531bc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","aec8350f":"import numpy as np\nimport pandas as pd\nfrom sklearn import tree\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.tree import DecisionTreeClassifier, DecisionTreeRegressor","857b2172":"df = pd.read_csv('..\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv')","494ea802":"df","3f422a0e":"df.shape","1d927c97":"df.info()","49d92e96":"df.describe","db801360":"df.dtypes\n","ca62ffbb":"list(df.columns)","6446816a":"plt.title('Missing Value Status',fontweight='bold')\nax = sns.heatmap(df.isna().sum().to_frame(),annot=True,fmt='d',cmap='vlag')\nax.set_xlabel('Amount Missing')\nplt.show()","00ea0d0b":"df.fillna(df.mean(), inplace=True)","e70379ae":"df.isnull().any()","da5dd17f":"c = df.groupby('gender')['gender'].count()","d37b98c7":"c","07b223f5":"sns.barplot(x=c.index, y=c.values)","2b5bce16":"s = sns.heatmap(df.corr())","e5502387":"sns.pairplot(data = df, hue=None, palette=None)","2acfd470":"c = df.groupby('stroke')['stroke'].count()","c6a2961e":"plt.pie(c, labels=c.index, autopct=\"%.2f%%\", wedgeprops=dict(width=0.3));\nplt.show()","4e444a26":"plt.title('Stroke Sample Distribution Based On Bmi And Glucose Level')\nsns.scatterplot(x=df['avg_glucose_level'],y=df['bmi'],hue=df['stroke'])\nplt.show()","1ebd8b62":"plt.title('Stroke Sample Distribution Based On Bmi And Age')\nsns.scatterplot(x=df['age'],y=df['bmi'],hue=df['stroke'])\nplt.tight_layout()\nplt.show()","46e80faf":"c = df.groupby('smoking_status')['smoking_status'].count()","79baffec":"plt.pie(c, labels=c.index, autopct=\"%.2f%%\", wedgeprops=dict(width=0.3));\nplt.show()","9587ac9a":"# split a dataset into train and test sets\nfrom sklearn.datasets import make_blobs\nfrom sklearn.model_selection import train_test_split\n# create dataset\nX, y = make_blobs(n_samples=1000)\n# split into train test sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33)\nprint(X_train.shape, X_test.shape, y_train.shape, y_test.shape)","41251971":"parameters = ['gender', 'age', 'hypertension', 'heart_disease', 'bmi', 'avg_glucose_level']\nresult = \"stroke\"","b4456771":"def binarize_gender(val):\n    if val == 'Male':\n        return 1\n    else:\n        return 0 ","8334c190":"df['gender'] = df['gender'].apply(binarize_gender)","dad3de54":"model = DecisionTreeClassifier(max_depth=5)\nmodel.fit(df[parameters], df[result])","faf87fca":"model.score(df[parameters], df[result])","141874da":"clf = DecisionTreeClassifier(max_depth = 2, \n                             random_state = 0)# Step 3: Train the model on the data\nclf.fit(X_train, y_train)# Step 4: Predict labels of unseen (test) data\n\nclf.predict(X_test)","2e919665":"tree.plot_tree(clf);","d0d3979c":"list(zip(parameters, model.feature_importances_))","914c1c24":"# Load Dataset","15ebfa0d":"### Problem Overview: Can you predict the danger of stroke based on the evaluation of certain tested parameters?\n### Context: According to the World Health Organization (WHO) stroke is the 2nd leading cause of death globally, responsible for approximately 11% of total deaths.This dataset is used to predict whether a patient is likely to get stroke based on the input parameters like gender, age, various diseases, and smoking status. Each row in the data provides relavant information about the patient.\n### Data Source: License -Data files \u00a9 Original Authors: fedesoriano","c3cbcbfb":"# Import Libraries","cff4f453":"# Missing Values","6011c2a8":"# Exploratory data analysis","ca56649a":"### What is visible straight away is the fact the in both scatterplots the individuals who had a stroke are located in the low BMI value regions, high glucose levels as well as are in old age."}}