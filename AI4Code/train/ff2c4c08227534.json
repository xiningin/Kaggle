{"cell_type":{"d41c90ff":"code","6b588013":"code","666d17df":"code","c5b6f485":"code","7a4c2405":"code","8ac5095c":"code","470a16d0":"code","027f3838":"code","b311e237":"code","f455acac":"code","b9c247aa":"markdown","e8a7b9ee":"markdown"},"source":{"d41c90ff":"!pip install lungs-segmentation","6b588013":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport os\nimport cv2\nfrom sklearn.preprocessing import MinMaxScaler\nimport torch\nimport albumentations as A","666d17df":"from lungs_segmentation.pre_trained_models import create_model\nimport lungs_segmentation.inference as inference","c5b6f485":"## Start the process\nmodel = create_model(\"resnet34\")\n\n## Make sure you have activated the GPU from colab\ndevice = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\nmodel = model.to(device)","7a4c2405":"torch.cuda.is_available()","8ac5095c":"CT_COVID_filenames = []\n\nfor i,item in enumerate(os.scandir(f'..\/input\/covidct\/CT_COVID')):\n    if i < 10:\n        print(f'--> {item.name}')\n    CT_COVID_filenames.append(item.path) ","470a16d0":"fig, axs = plt.subplots(3,3,figsize=(15,15))\nfor i in range(3):\n    r=i%3\n    \n    img1=cv2.imread(CT_COVID_filenames[i])\n    img2=cv2.resize(img1,dsize=(100,100),interpolation=cv2.INTER_CUBIC)\n    ax=axs[r][0].axis(\"off\")\n    ax=axs[r][0].imshow(img2)\n    \n    image, mask = inference.inference(model, CT_COVID_filenames[i], 0.2)\n    ax=axs[r][1].axis(\"off\")\n    ax=axs[r][1].imshow(inference.img_with_masks( image, [mask[0], mask[1]], alpha = 0.1))    \n    \n    image_bw = image.mean(axis=2) \n    image_segmented = (image_bw * mask[0]) + (image_bw * mask[1])\n    ax=axs[r][2].axis(\"off\")\n    ax=axs[r][2].imshow(image_segmented, cmap='gray')\n    \nplt.show()","027f3838":"fig, axs = plt.subplots(3,3,figsize=(15,15))\nfor i in range(9):\n    r=i\/\/3\n    c=i%3\n    img1=cv2.imread(CT_COVID_filenames[i])\n    img2=cv2.resize(img1,dsize=(100,100),interpolation=cv2.INTER_CUBIC)\n    ax=axs[r][c].axis(\"off\")\n    ax=axs[r][c].imshow(img2)\nplt.show()\n","b311e237":"fig, axs = plt.subplots(3,3,figsize=(15,15))\nfor i in range(9):\n    r=i\/\/3\n    c=i%3\n    image, mask = inference.inference(model, CT_COVID_filenames[i], 0.2)\n    ax=axs[r][c].axis(\"off\")\n    ax=axs[r][c].imshow(inference.img_with_masks( image, [mask[0], mask[1]], alpha = 0.1))\nplt.show()","f455acac":"fig, axs = plt.subplots(3,3,figsize=(15,15))\nfor i in range(9):\n    r=i\/\/3\n    c=i%3\n    image, mask = inference.inference(model, CT_COVID_filenames[i], 0.2)\n    image_bw = image.mean(axis=2) \n    image_segmented = (image_bw * mask[0]) + (image_bw * mask[1])\n    ax=axs[r][c].axis(\"off\")\n    ax=axs[r][c].imshow(image_segmented, cmap='gray')\nplt.show()","b9c247aa":"# Lung CT Image Segmentation\nThis notebook referred to the followings.<br\/>\nhttps:\/\/www.kaggle.com\/handsomeooi\/02-lung-segmentation","e8a7b9ee":"https:\/\/pypi.org\/project\/lungs-segmentation\/<br\/>\nhttps:\/\/github.com\/alimbekovKZ\/lungs_segmentation_train<br\/>"}}