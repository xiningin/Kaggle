{"cell_type":{"124d0ad6":"code","180906bb":"code","a36f1b07":"code","ef7bd176":"code","59e4c644":"code","40e5c02e":"code","9a68af9e":"code","e32788a5":"code","2289d280":"code","6b53823d":"code","68ed8567":"code","e5f1721b":"code","62592fd8":"code","df63f943":"code","c4959cdf":"code","b8bce012":"code","9fb7ee1c":"markdown","b8bf2be6":"markdown","83577d42":"markdown","78bfea1c":"markdown","79875b7e":"markdown","ba87a5db":"markdown","97ceab3f":"markdown","c0ce13f4":"markdown"},"source":{"124d0ad6":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nsns.set_style('whitegrid')","180906bb":"train_data = pd.read_csv('..\/input\/titanic\/train.csv')\ntrain_data.head(10)","a36f1b07":"train_data.info()","ef7bd176":"train_data.describe(include = \"all\")","59e4c644":"train_data.isna().sum()","40e5c02e":"train_data.drop(\"PassengerId\", axis=1, inplace=True)\ntrain_data.drop('Cabin', axis=1, inplace=True)\ntrain_data.drop(\"Name\", axis=1, inplace=True)\ntrain_data.drop(\"Ticket\", axis=1, inplace=True)","9a68af9e":"train_data['Age'] = train_data['Age'].fillna(train_data.groupby('Sex')['Age'].transform('mean'))","e32788a5":"train_data.isna().sum()","2289d280":"# Embarked feature\nprint(train_data[\"Embarked\"].unique())\nprint(np.sum([train_data[\"Embarked\"]==\"S\"]))\nprint(np.sum([train_data[\"Embarked\"]==\"C\"]))\nprint(np.sum([train_data[\"Embarked\"]==\"Q\"]))","6b53823d":"train_data.fillna({\"Embarked\":\"S\"},inplace=True)","68ed8567":"#Map the categorical colum 'Sex' with numerical data\nsex_mapping = {\"male\": 0, \"female\": 1}\ntrain_data['Sex'] = train_data['Sex'].map(sex_mapping)\ntrain_data.head()","e5f1721b":"#Mapping for Embarked feature\nembarked_mapping = {\"S\": 1, \"C\": 2, \"Q\": 3}\ntrain_data['Embarked'] = train_data['Embarked'].map(embarked_mapping)\ntrain_data.head()","62592fd8":"X= train_data.drop([\"Survived\"],axis=1)\nY= train_data[\"Survived\"]\nX.shape,Y.shape","df63f943":"import tensorflow as tf\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.2)\n\n# construct model\nmodel = tf.keras.Sequential([\n    tf.keras.layers.Dense(256, input_shape=(7,), activation='relu'),\n    tf.keras.layers.Dropout(0.2),\n    tf.keras.layers.Dense(256, activation='relu'),\n    tf.keras.layers.Dropout(0.2),\n    tf.keras.layers.Dense(1, activation='sigmoid')\n])\n\n# \nmodel.compile(optimizer=tf.keras.optimizers.Adam(),\n              loss='binary_crossentropy',\n              metrics=['accuracy'])\n\n\nx_train = np.array(x_train).astype('float32')\ny_train = np.array(y_train).astype('int32').reshape(-1,1)\n\n#\nprint('\\n Training .... ')\nhist = model.fit(x_train, y_train,\n                 batch_size=64,\n                 epochs=200,\n                 verbose=0,\n                 validation_split=0.1)\n\nprint('\\n accuracy after last training epoch | {0} |'.format(hist.history['accuracy'][-1]))\nprint('\\n Evaluation .... ')\nresults = model.evaluate(x_test, y_test, verbose=0)\nprint('\\n accuracy of evaluation on test data non seen before | {0} |'.format(results[1]))\n","c4959cdf":"test_data = pd.read_csv('..\/input\/titanic\/test.csv')\ntest_data.drop('Cabin', axis = 1, inplace=True)\ntest_data.drop(\"Name\",axis=1,inplace=True)\ntest_data.drop(\"Ticket\",axis=1,inplace=True)\n# #\ntest_data['Age'] = test_data['Age'].fillna(train_data.groupby('Sex')['Age'].transform('mean'))\ntest_data.fillna({\"Embarked\":\"S\"},inplace=True)\ntest_data['Sex'] = test_data['Sex'].map(sex_mapping)\ntest_data['Embarked'] = test_data['Embarked'].map(embarked_mapping)\ntest_data['Fare'].fillna(np.mean(test_data['Fare']), inplace=True)","b8bce012":"ids = test_data['PassengerId']\npredictions = model.predict(test_data.drop('PassengerId', axis=1))\n\n#set the output as a dataframe and convert to csv file named submission.csv\npredictions = predictions.reshape((predictions.shape[0],))\npredictions = np.where(predictions >= 0.5, 1, 0)\noutput = pd.DataFrame({ 'PassengerId' : np.array(ids), 'Survived': np.array(predictions) })\noutput.to_csv('submission.csv', index=False)\nprint('done')","9fb7ee1c":"It is less likely that any of PassengerId, Name or Ticket would have an impace on the passenger survival. Also Cabin has a lot of missing values with no clear way to interpolate them, therefore we are droping these columns.","b8bf2be6":"We need to look into how to interpolate the missing values of Embarked, ","83577d42":"Now we will direct our attention to Test Data, we will load it and then pass through similar investigation steps to the ones we did with the training dataset. The only new finding for test dataset is that Fare column has one missing value which will fill in with mean value of that column.","78bfea1c":"Dataset contains 12 columns and 891 rows. Most columns are numeric. Age, Cabin, and Embarked contain null values on some rows.\nSurvived is our target cloumn to predict. \nAnother look into the training data set is through describe method as the following:","79875b7e":"From this we find the most common destination is S, therefore we fill in the blank Embarked values in training set with S","ba87a5db":"From this we can see that Age, Cabin and Embarked has missing values.","97ceab3f":"This is my first submission to Kaggle. I am going first to lightly explore the training dataset,then following that I am going to clean it, interpolate missing values, and convert categorical values into numerical, and then train a DNN using Keras.\nI am assuming that training set and test set are coming have the same distribution therefore, once I am settled on the best model from working on training I am applying the same data pre-processing steps to test data set before passing to the model. Here we go:","c0ce13f4":"Interpolate missing age values with mean age of the same gender"}}