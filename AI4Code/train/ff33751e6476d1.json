{"cell_type":{"1ebe11d2":"code","7c1ebddc":"code","9bb1ab7c":"code","994b9f4f":"code","df9c9856":"code","ae465320":"code","73596186":"code","88e5f088":"code","b32fb2b8":"code","b05915c2":"code","894ee256":"code","be9cc299":"code","7cab11c5":"code","c45006d8":"code","b14ce43d":"code","4ea80008":"code","54066203":"code","47fcbad4":"code","64498a38":"markdown","2a844ab3":"markdown","76d21f46":"markdown","e606db71":"markdown","f1c3fed9":"markdown","4633f8c5":"markdown","f9beda95":"markdown","bb83c6bf":"markdown","268621c5":"markdown","56c8736c":"markdown","31e6ebe0":"markdown","743ec8d9":"markdown"},"source":{"1ebe11d2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_theme(style='whitegrid')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7c1ebddc":"df = pd.read_csv(\"\/kaggle\/input\/us-gun-violence-archive-2014\/US-Gun-Violence.csv\")\ndf.head()","9bb1ab7c":"df.shape","994b9f4f":"df.describe()","df9c9856":"df.index","ae465320":"df.columns","73596186":"df.state.nunique()","88e5f088":"killed_total = df.killed.sum()\nkilled_total","b32fb2b8":"injured_total = int(df.injured.sum())\ninjured_total","b05915c2":"chicago_killings = df['killed'].groupby(df['city_or_county']).sum()['Chicago']\nchicago_killings","894ee256":"chicago_injuries = int(df['injured'].groupby(df['city_or_county']).sum()['Chicago'])\nchicago_injuries","be9cc299":"def calcPercentage(part,whole):\n    perc = (part * 100) \/ whole\n    return str(round(perc, 2)) + '%'\n\nprint(calcPercentage(chicago_injuries, injured_total))","7cab11c5":"print(calcPercentage(chicago_killings, killed_total))","c45006d8":"df.head()","b14ce43d":"citiesTotal = df.groupby('city_or_county').sum()\ncitiesTotal.head()","4ea80008":"# Top 10 cities kill rates and comparisons \n\nnewyork_killing = int(citiesTotal.loc['New York (Manhattan)'].killed)\nlosangeles_killing = int(citiesTotal.loc['Los Angeles'].killed)\nchicago_killing = int(citiesTotal.loc['Chicago'].killed)\nhouston_killing = int(citiesTotal.loc['Houston'].killed)\nphoenix_killing = int(citiesTotal.loc['Phoenix'].killed)\nphiladelphia_killing = int(citiesTotal.loc['Philadelphia'].killed)\nsanantonio_killing = int(citiesTotal.loc['San Antonio'].killed)\nsandiego_killing = int(citiesTotal.loc['San Diego'].killed)\ndallas_killing = int(citiesTotal.loc['Dallas'].killed)\nsanjose_killing = int(citiesTotal.loc['San Jose'].killed)\n\nallKillings = {\"New York\": newyork_killing,\n               \"Los Angeles\": losangeles_killing,\n               \"Chicago\": chicago_killing,\n               \"Houston\": houston_killing,\n               \"Phoenix\": phoenix_killing,\n               \"Philadelphia\": philadelphia_killing,\n               \"San Antonio\": sanantonio_killing,\n               \"San Diego\": sandiego_killing,\n               \"Dallas\": dallas_killing,\n               \"San Jose\": sanjose_killing}","54066203":"figure = plt.figure(figsize=(9,5))\nplt.plot(allKillings.values(), marker='o')\nplt.xticks([x for x in range(0,10)],\n           [x for x in allKillings.keys()],\n           rotation=20)\n\nplt.title('Top 10 Cities Kill Rates and Comparisons')\nplt.show()","47fcbad4":"months = ['January','February','March','April','May','June',\n          'July','August','September','October','November','December']\n\nmo_list = []\nfor incidents in df.incident_date:\n    for mo in months:\n        if mo in incidents:\n            mo_list.append(mo)\n\nallIncidents = {\"January\": mo_list.count('January'),\n                \"February\": mo_list.count('February'),\n                \"March\": mo_list.count('March'),\n                \"April\": mo_list.count('April'),\n                \"May\": mo_list.count('May'),\n                \"June\": mo_list.count('June'),\n                \"July\": mo_list.count('July'),\n                \"August\": mo_list.count('August'),\n                \"September\": mo_list.count('September'),\n                \"October\": mo_list.count('October'),\n                \"November\": mo_list.count('November'),\n                \"December\": mo_list.count('December')}\n\nfigure = plt.figure(figsize=(9,5))\n\nplt.plot(allIncidents.values(), marker='o')\nplt.xticks([x for x in range(0,12)],\n           [x for x in allIncidents.keys()], rotation=20)\nplt.yticks([x for x in range(0,600,100)])\nplt.title('Incident Distribution Plot By Month ')\nplt.show()","64498a38":"injury percentage:","2a844ab3":"    New York City, NY (Population: 8,622,357)\n    Los Angeles, CA (Population: 4,085,014)\n    Chicago, IL (Population: 2,670,406)\n    Houston, TX (Population: 2,378,146)\n    Phoenix, AZ (Population: 1,743,469)\n    Philadelphia, PA (Population: 1,590,402)\n    San Antonio, TX (Population: 1,579,504)\n    San Diego, CA (Population: 1,469,490)\n    Dallas, TX (Population: 1,400,337)\n    San Jose, CA (Population: 1,036,242)","76d21f46":"killings percentage:","e606db71":"## America's 10 Largest Cities Data","f1c3fed9":"killed:","4633f8c5":"## How many people were killed?","f9beda95":"## Load the Data","bb83c6bf":"## The months with the most incidents","268621c5":"## Chicago's kills and injuries data, according to whole","56c8736c":"## How many people were injured?","31e6ebe0":"injured:","743ec8d9":"## How many diffrent state involved this data?"}}