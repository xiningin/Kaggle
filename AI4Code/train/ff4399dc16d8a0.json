{"cell_type":{"8b1391e3":"code","84a5727b":"code","8e6a4544":"code","2925baeb":"code","2543e865":"code","5af45647":"code","e79db004":"code","185e443d":"code","1b3bbd5c":"code","64f9a8d2":"code","7dd4d226":"code","2200bae4":"code","1f257998":"code","149b2517":"code","e706dd98":"code","0dd6360d":"code","b78ffff1":"code","c64f0f19":"code","bde14008":"code","6f0d7dea":"code","f70f67d3":"code","1763bba7":"code","64c61cca":"markdown","c6ab0891":"markdown","4369e329":"markdown","930dca5d":"markdown","8bb2f6f2":"markdown","6d386194":"markdown","2516f27e":"markdown","ba909a25":"markdown","6e31af34":"markdown","2972c6bf":"markdown","ab668f78":"markdown","ec4b9995":"markdown","0074b41f":"markdown","581933bb":"markdown","8c3fbfc2":"markdown","260686b9":"markdown","7e914791":"markdown","35a5738b":"markdown","8af5c450":"markdown","d4ab5fec":"markdown","4857f3f8":"markdown","cf20259c":"markdown","85210a68":"markdown","50bfd739":"markdown","af60ff8a":"markdown","06a99d62":"markdown","d477dd1c":"markdown"},"source":{"8b1391e3":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as mticker\nimport plotly.plotly as py\nimport plotly.graph_objs as go\nfrom collections import Counter\nfrom math import log","84a5727b":"data_polluted = pd.read_csv('..\/input\/blackfriday\/BlackFriday.csv')\n\ndata_raw = data_polluted.dropna(subset=['Purchase'])","8e6a4544":"\n##############################################################\n### Aplica a regra de Sturges para defini\u00e7\u00e3o de bins\ndef bins_sturges(df):\n    n = df.size\n    k = round(1+ log(n)\/log(2))\n    return k\n\n##############################################################\n\ndef pizza(labels, sizes):\n    fig1, ax1 = plt.subplots()\n    ax1.pie(sizes, labels=labels,shadow=True, autopct='%1.1f%%',startangle=90)\n    plt.show()\n    plt.clf()\n    plt.cla()\n    plt.close()\n    \n##############################################################\n## Agrupar e contar todos os grupos de um data frame(df) de uma coluna(column) \ndef df_group(df, column):\n    name_list = []\n    count_list = []\n    ele_col_list = pd.unique(data_raw[column])\n    ele_col_list.sort()\n    for i in ele_col_list:\n        discriminated = df.loc[data_raw[column] == i]\n        count = discriminated.size\n        name_list.append(i)\n        count_list.append(count)\n        \n    return name_list, count_list\n \n##############################################################\n##Histograma de uma coluna de dataset\ndef df_hist(df, column):\n    listed = pd.DataFrame.from_dict(Counter(sorted(df[column])), orient='index')\n    listed.plot(kind='bar')\n    \n    \n##############################################################\n##Histograma baseado em valores\n\ndef df_hist_sturges_purchase(df, common_group, raw_column, product_id):\n    x = df.loc[df[raw_column] == common_group]\n    k = bins_sturges(x)\n    x.loc[x['Product_ID'] == product_id,'Purchase'].hist(bins = k)\n    ","2925baeb":"data_gender_M = data_raw.loc[data_raw['Gender'] == 'M']\ndata_gender_F = data_raw.loc[data_raw['Gender'] == 'F']\nlabels, counts = df_group(data_raw, 'Gender')\nmale_list = pd.unique(data_gender_M['User_ID'])\nfem_list = pd.unique(data_gender_F['User_ID'])\npizza(labels, [fem_list.size, male_list.size])","2543e865":"plt.boxplot ([data_gender_F['Purchase'].values, data_gender_M['Purchase'].values], labels = labels)","5af45647":"labels, counts = df_group(data_raw[['User_ID','Marital_Status']].drop_duplicates(), 'Marital_Status')\npizza(labels, counts)","e79db004":"labels, counts = df_group(data_gender_M[['User_ID','Marital_Status']].drop_duplicates(), 'Marital_Status')\nlabels2, counts2 = df_group(data_gender_F[['User_ID','Marital_Status']].drop_duplicates(), 'Marital_Status')\n\nfig, axs = plt.subplots(1,2)\nfig.tight_layout(pad=5.0)\naxs[0].pie(counts, labels=labels,shadow=True, radius=2, autopct='%1.1f%%',startangle=90)\n\naxs[1].pie(counts2, labels=labels2,shadow=True, radius=2, autopct='%1.1f%%',startangle=90)\n\naxs[0].set_title(label = 'Homens')\naxs[1].set_title(label = 'Mulheres')\nplt.show()\nplt.clf()\nplt.cla()\nplt.close()","185e443d":"data_age_0_17 = data_raw.loc[data_raw['Age'] == '0-17']\ndata_age_18_25 = data_raw.loc[data_raw['Age'] == '18-25']\ndata_age_26_35 = data_raw.loc[data_raw['Age'] == '26-35']\ndata_age_36_45 = data_raw.loc[data_raw['Age'] == '36-45']\ndata_age_46_50 = data_raw.loc[data_raw['Age'] == '46-50']\ndata_age_51_55 = data_raw.loc[data_raw['Age'] == '51-55']\ndata_age_55 = data_raw.loc[data_raw['Age'] == '55+']","1b3bbd5c":"labels, counts = df_group(data_raw[['User_ID','Age']].drop_duplicates(), 'Age')\npizza(labels, counts)","64f9a8d2":"labels, counts = df_group(data_gender_M[['User_ID','Age']].drop_duplicates(), 'Age')\nlabels2, counts2 = df_group(data_gender_F[['User_ID','Age']].drop_duplicates(), 'Age')\n\nfig, axs = plt.subplots(1,2)\nfig.tight_layout(pad=5.0)\naxs[0].pie(counts, labels=labels,shadow=True, radius=2, autopct='%1.1f%%',startangle=90)\n\naxs[1].pie(counts2, labels=labels2,shadow=True, radius=2, autopct='%1.1f%%',startangle=90)\n\naxs[0].set_title(label = 'Homens')\naxs[1].set_title(label = 'Mulheres')\nplt.show()\nplt.clf()\nplt.cla()\nplt.close()","7dd4d226":"fig, axs = plt.subplots(1,2)\nfig.tight_layout(pad=5.0)\naxs[0].pie(counts, labels=labels,shadow=True, radius=2, autopct='%1.1f%%',startangle=90)\n\naxs[1].pie(counts2, labels=labels2,shadow=True, radius=2, autopct='%1.1f%%',startangle=90)\n\naxs[0].set_title(label = 'Homens')\naxs[1].set_title(label = 'Mulheres')\nplt.show()\nplt.clf()\nplt.cla()\nplt.close()","2200bae4":"labels, counts = df_group(data_gender_M[['User_ID','Age']].drop_duplicates(), 'Age')\nlabels2, counts2 = df_group(data_gender_F[['User_ID','Age']].drop_duplicates(), 'Age')\n\nfig, axs = plt.subplots(1,2)\nfig.tight_layout(pad=3.0)\nfig.set_size_inches(15, 15, forward=True)\n#axs[0].pie(counts, labels=labels,shadow=True, radius=2, autopct='%1.1f%%',startangle=90)\n#axs[1].pie(counts2, labels=labels2,shadow=True, radius=2, autopct='%1.1f%%',startangle=90)\naxs[0].bar(x = labels, height = counts)\naxs[1].bar(x = labels2, height = counts2)\n\naxs[0].set_title(label = 'Homens')\naxs[1].set_title(label = 'Mulheres')\nplt.show()\nplt.clf()\nplt.cla()\nplt.close()","1f257998":"labels, counts = df_group(data_raw, 'Age')\nplt.boxplot ([data_age_0_17['Purchase'].values, data_age_18_25['Purchase'].values, data_age_26_35['Purchase'].values, data_age_36_45['Purchase'].values, data_age_46_50['Purchase'].values,  data_age_51_55['Purchase'].values, data_age_55['Purchase'].values], labels= labels)\n","149b2517":"data_geo_A = data_raw.loc[data_raw['City_Category'] == 'A']\ndata_geo_B = data_raw.loc[data_raw['City_Category'] == 'B']\ndata_geo_C = data_raw.loc[data_raw['City_Category'] == 'C']","e706dd98":"labels, counts = df_group(data_raw[['User_ID','City_Category']].drop_duplicates(), 'City_Category')\npizza(labels, counts)","0dd6360d":"labels, counts = df_group(data_raw[['City_Category']], 'City_Category')\npizza(labels, counts)","b78ffff1":"labels, counts = df_group(data_raw, 'City_Category')\nplt.boxplot([data_geo_A['Purchase'].values, data_geo_B['Purchase'].values, data_geo_C['Purchase'].values], labels=labels)\n","c64f0f19":"labels, counts = df_group(data_raw, 'Stay_In_Current_City_Years')\n\npizza(labels, counts)","bde14008":"plt.boxplot([data_raw.loc[data_raw['Stay_In_Current_City_Years'] == '0', 'Purchase'].values, data_raw.loc[data_raw['Stay_In_Current_City_Years'] == '1', 'Purchase'].values, data_raw.loc[data_raw['Stay_In_Current_City_Years'] == '2', 'Purchase'].values, data_raw.loc[data_raw['Stay_In_Current_City_Years'] == '3', 'Purchase'].values, data_raw.loc[data_raw['Stay_In_Current_City_Years'] == '4+', 'Purchase'].values], labels=labels, showcaps = True)","6f0d7dea":"labels, counts = df_group(data_raw[['User_ID','Marital_Status']].drop_duplicates(), 'Marital_Status')\npizza(labels, counts)","f70f67d3":"labels, counts = df_group(data_gender_M[['User_ID','Marital_Status']].drop_duplicates(), 'Marital_Status')\nlabels2, counts2 = df_group(data_gender_F[['User_ID','Marital_Status']].drop_duplicates(), 'Marital_Status')\n\nfig, axs = plt.subplots(1,2)\nfig.tight_layout(pad=5.0)\naxs[0].pie(counts, labels=labels,shadow=True, radius=2, autopct='%1.1f%%',startangle=90)\n\naxs[1].pie(counts2, labels=labels2,shadow=True, radius=2, autopct='%1.1f%%',startangle=90)\n\naxs[0].set_title(label = 'Homens')\naxs[1].set_title(label = 'Mulheres')\nplt.show()\nplt.clf()\nplt.cla()\nplt.close()","1763bba7":"\nfig, axs = plt.subplots(1,2)\nfig.tight_layout(pad=3.0)\nfig.set_size_inches(15, 15, forward=True)\n#axs[0].pie(counts, labels=labels,shadow=True, radius=2, autopct='%1.1f%%',startangle=90)\n#axs[1].pie(counts2, labels=labels2,shadow=True, radius=2, autopct='%1.1f%%',startangle=90)\naxs[0].bar(x = labels, height = counts)\naxs[1].bar(x = labels2, height = counts2)\n\naxs[0].set_title(label = 'Homens')\naxs[1].set_title(label = 'Mulheres')\nplt.show()\nplt.clf()\nplt.cla()\nplt.close()","64c61cca":"Visivelmente a cidade C possui mais clientes do que as outras duas juntas.","c6ab0891":"### Rela\u00e7\u00e3o de clientes por g\u00eanero","4369e329":"# Sum\u00e1rio\n1. <a href=\"#Introducao\">Introdu\u00e7\u00e3o<\/a>\n2. <a href=\"#Exploratory Data Analysis (EDA)\"> An\u00e1lise dos Dados<\/a>\n    1. <a href=\"#Gender\"> G\u00eanero<\/a>\n    2. <a href=\"#Top Sellers\"> Top Vendedores<\/a>\n    3. <a href=\"#Age\"> Idade<\/a>\n    4. <a href=\"#City\"> Cidade<\/a>\n    5. <a href=\"#Stay in Current City\"> Permanece na cidade<\/a>\n    7. <a href=\"#Marital Status\"> Estado Civil<\/a>\n4. <a href=\"#Conclusion\"> Conclus\u00e3o<\/a>","930dca5d":"### N\u00famero de IDs diferentes por categoria de [](http:\/\/)cidade","8bb2f6f2":"A categoria B vende mais produtos do que as outras cidades.","6d386194":"<a id=\"Gender\">\n## G\u00eanero","2516f27e":"<a id=\"Marital Status\">\n## Estado Civil\n","ba909a25":"N\u00e3o h\u00e1 diferen\u00e7as significativas do estado civil para as mulheres e os homens.","6e31af34":"A faixa et\u00e1ria de 26-35 anos det\u00e9m o maior n\u00famero de clientes, mas importante notar que a distribui\u00e7\u00e3o de faixa et\u00e1ria continua extremamente similar entre os generos masculino e feminino.","2972c6bf":"O maior volume de vendas foram para pessoas que moram h\u00e1 um ano na cidade, mas o pre\u00e7o m\u00e9dio de compra de todos os grupos permanece muito similar","ab668f78":" ### Valor m\u00e9dio de compra por g\u00eanero","ec4b9995":"\n\n# Black Friday - DataViz\n","0074b41f":"O box plot mostra o complortamento de gasto dos g\u00eaneros, e a princ\u00edpio o valores esperados em cada item s\u00e3o muito similares.","581933bb":"Compara\u00e7\u00e3o de dados entre g\u00eaneros:","8c3fbfc2":"<a id=\"Introducao\">\n# Introdu\u00e7\u00e3o\nDataSet\n","260686b9":"<a id=\"City\">\n## Cidade\n","7e914791":"<a id=\"Exploratory Data Analysis (EDA)\">\n# An\u00e1lise do DataSet","35a5738b":"Embora pouco significativo, a cidade C tende a fazer compras mais caras.","8af5c450":"### Fun\u00e7\u00f5es:\nSegue alguma fun\u00e7\u00f5es simples para facilitar a an\u00e1lise do dataset","d4ab5fec":"<a id=\"Stay in Current City\">\n## Permanece na Cidade\n","4857f3f8":"Outro dado, o valor m\u00e9dio gasto por produto \u00e9 extremamente similar em todas as faixas et\u00e1rias.","cf20259c":"Assumindo que \"0\" representa solteiro, os elementos do dataset s\u00e3o predominantemente solteiros","85210a68":"<a id=\"Age\">\n## Idade\n","50bfd739":"### N\u00famero de vendas por categoria de cidade","af60ff8a":"A maioria dos clientes tem o estado civil \"0\", o que muito provavelmente siginifica solteiro, como parte do melhor entendimento desse dado vamos separar entre os dois generos e compara-los","06a99d62":"### Valor m\u00e9dio de produtos vendidos","d477dd1c":"Vamos importar as bibliotecas que iremos utilizar e o dataset"}}