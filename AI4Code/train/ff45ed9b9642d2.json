{"cell_type":{"6c17a146":"code","e78b18d5":"code","0ffa6a6e":"code","9dc3ac38":"code","f4ea2379":"code","7aab7ebe":"code","6cfd79a5":"code","ce67281b":"code","819dde70":"code","92d1d9ea":"code","9d0ed71e":"code","41c24ad2":"code","3039be34":"code","75170df6":"markdown","69700307":"markdown","ba603d5c":"markdown","4249295d":"markdown","8da16c68":"markdown","6132ecec":"markdown","6d3425b4":"markdown","054d609b":"markdown","ee72b6db":"markdown","09654bd2":"markdown","db20fbc0":"markdown","3abce8e8":"markdown","4071dc7c":"markdown","9db908a7":"markdown","52b436bb":"markdown","1abd399f":"markdown"},"source":{"6c17a146":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e78b18d5":"df_cities = pd.read_csv('..\/input\/top-100-us-cities-by-population\/top100cities (3).csv')\ndf_cities","0ffa6a6e":"states = df_cities['state'].unique()","9dc3ac38":"state_data = {}","f4ea2379":"for state in states:\n    df_state_data = df_cities[df_cities['state'] == state]\n    cities = df_state_data.city.unique()\n    state_pop = 0\n    state_data[state] = {}\n    for city in cities:\n        city_pop = df_cities[df_cities['city'] == city].population_2020.values[0]\n        state_pop += city_pop\n    state_data[state]['state_pop'] = state_pop\n    #print(f'State: {state} Population: {state_pop}')\nprint(state_data)","7aab7ebe":"mean_population_densities = {}\nfor state in states:\n    df_state_data = df_cities[df_cities['state'] == state]\n    #cities = df_state_data.city.unique()\n    city_densities = df_state_data.pop_density_sqkm.unique()\n    mean_city_density = city_densities.mean()\n    # mean_population_densities[state] = mean_city_density\n    state_data[state]\n    state_data[state]['mean_city_density'] = mean_city_density\nprint(state_data)","6cfd79a5":"mean_population_densities = {}\nfor state in states:\n    df_state_data = df_cities[df_cities['state'] == state]\n    city_growth = df_state_data.percent_change.unique()\n    mean_city_growth = city_growth.mean()\n    state_data[state]\n    state_data[state]['mean_city_growth'] = mean_city_growth\nprint(state_data)","ce67281b":"df_covid = pd.read_csv('..\/input\/provisional-covid-19-death-counts-by-sex-age-ande\/csv-1.csv')\ndf_covid","819dde70":"for state in states:\n    state_search = state + ' Total'\n    df_state_covid_deaths = df_covid[df_covid['State'] == state_search]\n    state_covid_deaths = df_state_covid_deaths['COVID-19 Deaths'].values[0]\n    state_data[state]['total_covid_deaths'] = state_covid_deaths\nprint(state_data)","92d1d9ea":"mean_city_density = []\nmean_city_growth = []\nstate_pop = []\nstate_covid_deaths = []\n# Alaska is the only recorded state with a nan for COVID Deaths\nstate_data.pop('Alaska')\nfor state in state_data:\n    mean_city_density.append(state_data[state]['mean_city_density'])\n    mean_city_growth.append(state_data[state]['mean_city_growth'])\n    state_pop.append(state_data[state]['state_pop'])\n    state_covid_deaths.append(state_data[state]['total_covid_deaths']) \nmean_city_density = np.array(mean_city_density)\nstate_covid_deaths = np.array(state_covid_deaths)\nplt.scatter(mean_city_density,state_covid_deaths)","9d0ed71e":"mean_city_density_vector = mean_city_density.reshape(-1,1)\nmodel = LinearRegression().fit(mean_city_density_vector,state_covid_deaths)\npredictions = model.predict(mean_city_density_vector)\nplt.scatter(mean_city_density_vector,state_covid_deaths)\nplt.plot(mean_city_density_vector,predictions,color='red')\nplt.show()","41c24ad2":"plt.scatter(mean_city_growth,state_covid_deaths)","3039be34":"plt.scatter(state_pop,state_covid_deaths)","75170df6":"## Calculating Mean Rate Of Population Growth","69700307":"## City Data","ba603d5c":"### No Obvious Corrolation","4249295d":"### No Obvious Corrolation","8da16c68":"### There appears to be a linear relationship between population density and number of deaths","6132ecec":"## COVID Data","6d3425b4":"# COVID 19 Deaths per State vs State Popluation, Mean Population Density Between Cities, and Mean Rate of Population Growth Between Cities","054d609b":"## Combine COVID Data With Population Data","ee72b6db":"## COVID Deaths to Mean City Growth","09654bd2":"## Dictionary For State Data","db20fbc0":"## COVID Deaths to State Population","3abce8e8":"## List of Unique States in Dataset","4071dc7c":"## Calculating Mean City Density Per State","9db908a7":"## COVID Deaths to Mean City Density","52b436bb":"## Calculating Population of Each States Largest Cities","1abd399f":"### Of all metrics given, population density appears to be the biggest determining factor for COVID deaths. This is likely due to it being easier to transmit in a more crowded setting."}}