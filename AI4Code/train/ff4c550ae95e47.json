{"cell_type":{"a9604bcd":"code","1eab06a5":"code","0b1416a3":"code","14ec7488":"code","4fe511bf":"code","b1823d2a":"code","0b2d0db7":"code","bd4a56fd":"code","b4bac159":"code","f690b43a":"code","c22a328e":"code","d445e351":"code","e9ab5e69":"code","715e38cc":"code","154436e0":"code","a81d9686":"code","fac2ca62":"code","80c6790f":"code","ea269f2b":"code","a728105e":"code","0c1e3c26":"code","06d3241d":"code","84cd76e9":"code","afa8ba0a":"code","76ea2c57":"code","20b10df3":"code","32b4b37a":"code","553c99b5":"code","24e61dbb":"code","9ed728b7":"code","a810d3a7":"code","d20695e9":"code","ab00bcad":"code","8abbd6d9":"code","9dc33be4":"code","2567d0a6":"code","896102dc":"code","e2faf0c8":"code","3f6728f6":"markdown","2a03d155":"markdown","30ee88d9":"markdown","7854ec94":"markdown","bfad4fd9":"markdown","c831b0e9":"markdown","cd9f04b5":"markdown","e8cd1479":"markdown","4a872d35":"markdown","3815e191":"markdown","0820cd2c":"markdown","c7ec9f37":"markdown","7bd3b1e6":"markdown","10e28159":"markdown","1387d0d6":"markdown","8c2d9bb7":"markdown","2edcfc95":"markdown","18599bdd":"markdown","dffed693":"markdown","946fe16a":"markdown","ce5f8303":"markdown","79f70798":"markdown","3c5fde01":"markdown","a791291e":"markdown","54480349":"markdown","f5a08878":"markdown","c296e0c7":"markdown","e9164b28":"markdown","5166c40a":"markdown","e6095701":"markdown","5d73be98":"markdown","d5cb20a8":"markdown","7f3715d9":"markdown","e61be07b":"markdown","1d45adf0":"markdown","c449abf0":"markdown","9a1d4ecd":"markdown","90397f03":"markdown","9e8669fb":"markdown","b5e289af":"markdown"},"source":{"a9604bcd":"import pandas as pd\nimport numpy as np\nimport seaborn as sns                       #visualisation\nimport matplotlib.pyplot as plt ","1eab06a5":"df = pd.read_csv('\/kaggle\/input\/cardataset\/data.csv')","0b1416a3":"df.head(5) ","14ec7488":"df.tail(5)   ","4fe511bf":"df.info()","b1823d2a":"df.describe()","0b2d0db7":"df = df.drop(['Engine Fuel Type', 'Number of Doors','Market Category'], axis=1)\ndf.head(5)","bd4a56fd":"df = df.rename(columns={\"Engine HP\": \"HP\", \"Engine Cylinders\": \"Cylinders\", \"Transmission Type\": \"Transmission\", \"Driven_Wheels\": \"Drive Mode\",\"highway MPG\": \"MPG-H\", \"city mpg\": \"MPG-C\", \"MSRP\": \"Price\" })\ndf.head(5)","b4bac159":"df.shape","f690b43a":"duplicate_rows_df = df[df.duplicated()]\nprint(\"number of duplicate rows: \", duplicate_rows_df.shape)","c22a328e":"df = df.drop_duplicates()\ndf.head(5)","d445e351":"df.shape","e9ab5e69":"print(df.isnull().sum())","715e38cc":"df = df.dropna()\ndf.count()","154436e0":"print(df.isnull().sum())","a81d9686":"sns.boxplot(x=df['Price'])","fac2ca62":"sns.boxplot(x=df['HP'])","80c6790f":"sns.boxplot(x=df['Cylinders'])","ea269f2b":"Q1 = df.quantile(0.25)\nQ3 = df.quantile(0.75)\nIQR = Q3 - Q1\nprint(IQR)","a728105e":"df = df[~((df < (Q1 - 1.5 * IQR)) |(df > (Q3 + 1.5 * IQR))).any(axis=1)]\ndf.shape","0c1e3c26":"sns.boxplot(x=df['Price'])","06d3241d":"sns.boxplot(x=df['HP'])","84cd76e9":"sns.boxplot(x=df['Cylinders'])","afa8ba0a":"# Percentage of car per brand\ncounts = df['Make'].value_counts()*100\/sum(df['Make'].value_counts())\n\n# Top 10 car brands\npopular_labels = counts.index[:10]\n    \n# Plot\nplt.figure(figsize=(15,9))\nplt.barh(popular_labels, width=counts[:10])\nplt.title('Top 10 Car brands')\nplt.show()","76ea2c57":"prices = df[['Make','Price']].loc[(df['Make'] == 'Chevrolet')|\n               (df['Make'] == 'Ford')|\n               (df['Make'] == 'Volkswagen')|\n               (df['Make'] == 'Toyota')|\n               (df['Make'] == 'Dodge')|\n               (df['Make'] == 'Nissan')|\n               (df['Make'] == 'GMC')|\n               (df['Make'] == 'Honda')|\n               (df['Make'] == 'Mazda')].groupby('Make').mean()\nprint(prices)","20b10df3":"df.corr()","32b4b37a":"car_corr=df.corr()\nf,ax=plt.subplots(figsize=(15,10))\nsns.heatmap(car_corr, cmap='jet',annot=True)\nplt.title(\"Correlation between features\", \n          weight='bold', \n          fontsize=20)\nplt.show()","553c99b5":"plt.figure(figsize=(15,10))\nsns.barplot(df['Year'],df['Price'])","24e61dbb":"plt.figure(figsize=(15,10))\nsns.barplot(df['Cylinders'],df['Price'])","9ed728b7":"plt.figure(figsize=(15,10))\nsns.barplot(df['MPG-H'],df['Price'])","a810d3a7":"plt.figure(figsize=(15,10))\nsns.barplot(df['MPG-C'],df['Price'])","d20695e9":"dcode=df\n\ndcode[\"Make\"]=dcode[\"Make\"].astype(\"category\")\ndcode[\"Make\"]=dcode[\"Make\"].cat.codes\n\ndcode[\"Model\"] = dcode[\"Model\"].astype('category')\ndcode[\"Model\"] = dcode[\"Model\"].cat.codes\n\n'''dcode[\"Year\"]=dcode[\"Year\"].astype(\"category\")\ndcode[\"Year\"]=dcode[\"Year\"].cat.codes\ndcode[\"HP\"]=dcode[\"HP\"].astype(\"category\")\ndcode[\"HP\"]=dcode[\"HP\"].cat.codes\ndcode[\"Cylinders\"]=dcode[\"Cylinders\"].astype(\"category\")\ndcode[\"Cylinders\"]=dcode[\"Cylinders\"].cat.codes\ndcode[\"MPG-H\"]=dcode[\"MPG-H\"].astype(\"category\")\ndcode[\"MPG-H\"]=dcode[\"MPG-H\"].cat.codes\ndcode[\"MPG-C\"]=dcode[\"MPG-C\"].astype(\"category\")\ndcode[\"MPG-C\"]=dcode[\"MPG-C\"].cat.codes\ndcode[\"Popularity\"]=dcode[\"Popularity\"].astype(\"category\")\ndcode[\"Popularity\"]=dcode[\"Popularity\"].cat.codes'''\n\ndcode[\"Transmission\"]=dcode[\"Transmission\"].astype(\"category\")\ndcode[\"Transmission\"]=dcode[\"Transmission\"].cat.codes\n\ndcode[\"Drive Mode\"]=dcode[\"Drive Mode\"].astype(\"category\")\ndcode[\"Drive Mode\"]=dcode[\"Drive Mode\"].cat.codes\n\ndcode[\"Vehicle Size\"]=dcode[\"Vehicle Size\"].astype(\"category\")\ndcode[\"Vehicle Size\"]=dcode[\"Vehicle Size\"].cat.codes\n\ndcode[\"Vehicle Style\"]=dcode[\"Vehicle Style\"].astype(\"category\")\ndcode[\"Vehicle Style\"]=dcode[\"Vehicle Style\"].cat.codes","ab00bcad":"from sklearn import preprocessing\nX = np.asarray(dcode[['Make', 'Model', 'Transmission', 'Drive Mode','Vehicle Size','Vehicle Style']])\ny = np.asarray(dcode['Price'])\nX = preprocessing.StandardScaler().fit(X).transform(X)","8abbd6d9":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split( X, y, test_size=0.2, random_state=44)\nprint(X_train.shape, y_train.shape)\nprint(X_test.shape, y_test.shape)","9dc33be4":"from sklearn import linear_model\nlm = linear_model.LinearRegression()\nmodel = lm.fit(X_train,y_train)\npredictions = lm.predict(X_test)","2567d0a6":"from sklearn.linear_model import LinearRegression\nmodel = LinearRegression().fit(X_train,y_train)\ny_pred = model.predict(X_test)\nmodel.score(X_test,y_pred)","896102dc":"from sklearn.tree import DecisionTreeClassifier \nfrom sklearn.metrics import accuracy_score, confusion_matrix, classification_report \nd_m = DecisionTreeClassifier(random_state = 0)\nd_m.fit(X_train,y_train)\ny_pred = d_m.predict(X_test)\nprint(\"Confusion Matrix:\\n\\n\", confusion_matrix(y_test, y_pred)) \nprint (\"\\nAccuracy : \", accuracy_score(y_test,y_pred)*100)","e2faf0c8":"from sklearn.metrics import mean_squared_error, r2_score, mean_absolute_error\nimport math\n\nprint('MSE: %.2f' % mean_squared_error(y_test, y_pred))\nprint('Coefficient of determination or R Squared : %.2f' % r2_score(y_test, y_pred))\nprint('MAE :%.2f' % mean_absolute_error(y_test, y_pred))\nprint('RMSE : %.2f' % math.sqrt(mean_squared_error(y_test, y_pred)))","3f6728f6":"> Boxplot of Cylinders","2a03d155":"# Pre-processing data","30ee88d9":"# Encoding data","7854ec94":"# HeatMap","bfad4fd9":"> Boxplot of Cylinders","c831b0e9":"> Boxplot of HP","cd9f04b5":" # To display the botton 5 rows","e8cd1479":"# Checking for null values","4a872d35":"> Score Prediction","3815e191":"# Read the data","0820cd2c":"> Boxplot of price","c7ec9f37":"> Graph between Year and price","7bd3b1e6":"# MSE, RMSE, MAE, R-sq","10e28159":"# Decision Tree","1387d0d6":"There is a +ve correlation between:\n\n1. Engine HP and Engine Cylinders\n2. Engine HP and MSRP\n3. Engine Cylinders and MSRP\n4. MPG-H and MPG-C\n\nThere is Strong -ve correlation between :\n\n1. MPG-H and Cylinders\n2. MPG-C and Cylinders","8c2d9bb7":"> Graph between MPG-C and price","2edcfc95":"# Finding from the graph\n\n1. Car price increased after year 2000\n2. More the no the cylinders, more is the price\n3. For MPG-H 13, price is maximum and for MPG-H 15, price is lowest.\n4. For MPG-C 10, price is maximum and for MPG-C 31, price is minimum","18599bdd":"# Plotting graphs","dffed693":"> Boxplot of HP","946fe16a":"# Importing Libraries","ce5f8303":"# Dropping the columns and displaying 1st 5 rows","79f70798":"# Removing outliers","3c5fde01":"# Splitting data","a791291e":"# Statistical summary","54480349":"# Total details of dataframe","f5a08878":"# Drop null values and count the no of rows","c296e0c7":"# Checking if outliers are removed or not","e9164b28":" # To display the 1st 5 rows","5166c40a":"# Detecting outliers","e6095701":"> Graph between MPG-H and price","5d73be98":"# Linear Regression","d5cb20a8":"> Boxplot of price","7f3715d9":"> Graph between Cylinders and price","e61be07b":"# Deleting duplicates","1d45adf0":"# Finding correlation","c449abf0":"# Avg price of top car brands","9a1d4ecd":"# Getting the no of rows & columns from dataframe","90397f03":"# Renaming the columns","9e8669fb":"# Top 10 most represented car brands","b5e289af":"# Checking for duplicates"}}