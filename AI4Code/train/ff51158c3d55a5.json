{"cell_type":{"e9c0c76b":"code","9aa4735a":"code","385270fa":"code","e6b7aec1":"code","8aea5b31":"code","bcc9325a":"code","03f45181":"code","6eba96b4":"code","ec358ce9":"code","33b01d4c":"code","1995ac2d":"code","9b6e59f8":"markdown"},"source":{"e9c0c76b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","9aa4735a":"data=pd.read_csv('\/kaggle\/input\/telco-paging-a-interface\/Paging_Analysis_A_interface.csv')\ndata.head()","385270fa":"data.shape","e6b7aec1":"data1=data[['Success_Rate','Response','Failures']]\ndata1.head()","8aea5b31":"import matplotlib.pyplot as plt\n%matplotlib inline\nplt.plot(data1['Response'], data1['Success_Rate'])\nplt.show()","bcc9325a":"plt.plot(data1['Failures'], data1['Success_Rate'])\nplt.show()","03f45181":"import seaborn as sns\nsns.pairplot(data1)","6eba96b4":"X=data1[['Response','Failures']]\ny=data1[['Success_Rate']]\nprint(X.shape)\nprint(y.shape)","ec358ce9":"from sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import StandardScaler","33b01d4c":"pipe=Pipeline([\n        ('Scaler',StandardScaler()),\n        ('Poly', PolynomialFeatures(3)),\n        ('Predictor', LinearRegression())      \n])","1995ac2d":"model_lr=pipe.fit(X,y)\nmodel_lr.score(X,y)","9b6e59f8":"**Not bad!**"}}