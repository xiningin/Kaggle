{"cell_type":{"5051f139":"code","9e4d7f45":"code","5932fbbf":"code","dbde63bf":"code","7d43e6d0":"code","2f995999":"code","af4afd97":"code","71e1097d":"code","9e622965":"code","842259d0":"code","f1239b95":"code","7c077711":"code","c8ba5cd8":"code","5688abf2":"code","b8bccbac":"code","0c570800":"code","b4a20374":"code","c779f901":"code","3dd22598":"code","858e55b1":"code","6f73be1e":"code","1e4adaca":"code","08e0a0d9":"code","9b5a6a09":"markdown","55e4ec6c":"markdown","5d251203":"markdown","d69f294c":"markdown","9be41902":"markdown","d26cbb39":"markdown","dfb99d97":"markdown","589d0a0a":"markdown","399c07d8":"markdown","f69f4f60":"markdown","52c44c22":"markdown","c146b4ea":"markdown","893cbb0d":"markdown","fbbb11bb":"markdown","44f9c243":"markdown","94bd480a":"markdown","8a3ce777":"markdown","d30f6e56":"markdown"},"source":{"5051f139":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport os\nprint(os.listdir(\"..\/input\"))\n# Any results you write to the current directory are saved as output.","9e4d7f45":"pd.set_option('display.max_columns', None)  \ndf = pd.read_csv('..\/input\/2016 School Explorer.csv', sep = ',')\nSHSAT = pd.read_csv('..\/input\/D5 SHSAT Registrations and Testers.csv', sep = ',')\n\n#df.shape, SHSAT.shape","5932fbbf":"# SHSAT's target students are those from grade 8 and 9\n# they had 85 schools registered for grade 8 and 55 schools registered for grade 9\nSHSAT[['Grade level','School name']].groupby(['Grade level']).count().plot(kind = 'bar', color = 'green', alpha = 0.5)","dbde63bf":"def f(x):\n    return float(x.strip('%'))\/100\ndf['Percent White'] = df['Percent White'].astype(str).apply(f)\ndf['Percent of Students Chronically Absent']=df['Percent of Students Chronically Absent'].astype(str).apply(f)\ndf['Rigorous Instruction %'] = df['Rigorous Instruction %'].astype(str).apply(f)\ndf['Collaborative Teachers %'] = df['Collaborative Teachers %'].astype(str).apply(f)\ndf['Supportive Environment %'] = df['Supportive Environment %'].astype(str).apply(f)\ndf['Effective School Leadership %'] = df['Effective School Leadership %'].astype(str).apply(f)\ndf['Strong Family-Community Ties %'] = df['Strong Family-Community Ties %'].astype(str).apply(f)\ndf['Trust %'] = df['Trust %'].astype(str).apply(f)\ndf['Percent ELL'] = df['Percent ELL'].astype(str).apply(f)\ndf['Student Attendance Rate'] = df['Student Attendance Rate'].astype(str).apply(f)\n\ndf['School Income Estimate'] = df['School Income Estimate'].str.replace(',', '')\ndf['School Income Estimate'] = df['School Income Estimate'].str.replace('$', '')\ndf['School Income Estimate'] = df['School Income Estimate'].str.replace(' ', '')\ndf['School Income Estimate'] = df['School Income Estimate'].astype(float)\ns = df.fillna(0)","7d43e6d0":"# Choose schools that have grade 8 and 9\ns8 = s['Grades'].str.contains('8','9')\ns_89 = s[s8]\nprint('School count: ', s_89['School Name'].count())","2f995999":"# Choosing shools which less than 50% students are white will help identify schools with more minority students\n# There are 558 schools with minorities over 50%\n\nminority = s_89.where(s_89['Percent White']<0.5).dropna()\nprint('School count: ', minority['School Name'].count())","af4afd97":"# community schools vs. non community schools among the 171 schools\nprint(minority[['Community School?', 'School Name']].groupby(['Community School?']).count())\nminority[['School Name', \n          'Community School?']\n        ].groupby(['Community School?']\n                 ).count().plot(kind = 'bar', legend = False)","71e1097d":"target = minority.sort_values(by='Grade 8 ELA - All Students Tested'\n                            ).where(minority['Grade 8 ELA - All Students Tested'] > 0\n                                   ).dropna()\ntarget['School Name'].count()","9e622965":"rigorous_instruction = target[['School Name','Location Code', 'City','Community School?', \n       'Rigorous Instruction %','Rigorous Instruction Rating'\n      ]].groupby(['Rigorous Instruction Rating']).get_group('Not Meeting Target')\n\ncollaborative_teachers = target[['School Name','Location Code', \n                                 'City','Community School?', \n                                 'Collaborative Teachers %',\n       'Collaborative Teachers Rating'\n      ]].groupby(['Collaborative Teachers Rating']).get_group('Not Meeting Target')\n\neffective_school_leadership = target[['School Name','Location Code', 'City','Community School?', \n                                      'Effective School Leadership %',\n       'Effective School Leadership Rating'\n      ]].groupby(['Effective School Leadership Rating']).get_group('Not Meeting Target')\n\nstrong_family_community_ties = target[['School Name','Location Code', \n                                       'City','Community School?', \n                                       'Strong Family-Community Ties %',\n       'Strong Family-Community Ties Rating'\n      ]].groupby(['Strong Family-Community Ties Rating']).get_group('Not Meeting Target')\n\ntrust = target[['School Name','Community School?', 'Location Code', 'City',\n                'Trust %',\n       'Trust Rating'\n      ]].groupby(['Trust Rating']).get_group('Not Meeting Target')\nstudent_achievement = target[['School Name','Community School?', 'Location Code', 'City',\n       'Student Achievement Rating'\n      ]].groupby(['Student Achievement Rating']).get_group('Not Meeting Target')","842259d0":"fig, axes = plt.subplots(nrows=3, ncols=2, figsize=(15,20))\nrigorous_instruction[['Community School?', \n       'Rigorous Instruction Rating'\n      ]].groupby(['Community School?'\n                 ]).count().plot(kind = 'bar',\n                                 ax=axes[0,0], \n                                 legend = False);axes[0,0].set_title('Rigorous Instruction Rating');\ncollaborative_teachers[['Community School?', \n       'Collaborative Teachers Rating'\n      ]].groupby(['Community School?'\n                 ]).count().plot(kind = 'bar',\n                                 ax=axes[0,1], \n                                 legend = False);axes[0,1].set_title('Collaborative Teachers Rating');\neffective_school_leadership[['Community School?', \n       'Effective School Leadership Rating'\n      ]].groupby(['Community School?'\n                 ]).count().plot(kind = 'bar', \n                                 color = 'green',\n                                 ax=axes[1,0], legend = False);axes[1,0].set_title('Effective School Leadership Rating');\nstrong_family_community_ties[['Community School?', \n       'Strong Family-Community Ties Rating'\n      ]].groupby(['Community School?'\n                 ]).count().plot(kind = 'bar',\n                                 color = 'orange',\n                                 ax=axes[1,1],legend = False);axes[1,1].set_title('Strong Family-Community Ties Rating');\ntrust[['Community School?', \n       'Trust Rating'\n      ]].groupby(['Community School?']).count().plot(kind = 'bar', \n                                                     alpha = 0.5, \n                                                     ax=axes[2,0],\n                                                     legend = False);axes[2,0].set_title('Trust Rating');\nstudent_achievement[['Community School?', \n                     'Student Achievement Rating'\n                    ]].groupby(['Community School?']).count().plot(kind = 'bar', \n                                                                   color = 'yellow',\n                                                                   legend = False,\n                                                                   ax=axes[2,1]\n                                                                   );axes[2,1].set_title('Student Achievement Rating');\nCollaborative = 'Average rating: ',collaborative_teachers['Collaborative Teachers %'].mean()\nEffective = effective_school_leadership['Effective School Leadership %'].mean()\nStrong_family = strong_family_community_ties['Strong Family-Community Ties %'].mean()\nTrust  = trust['Trust %'].mean()","f1239b95":"rigorous_instruction_0 = target[['School Name','Location Code', 'City','Community School?', \n       'Rigorous Instruction %','Rigorous Instruction Rating'\n      ]].groupby(['Rigorous Instruction Rating']).get_group(0)\n\ncollaborative_teachers_0 = target[['School Name','Location Code', \n                                 'City','Community School?', \n                                 'Collaborative Teachers %',\n       'Collaborative Teachers Rating'\n      ]].groupby(['Collaborative Teachers Rating']).get_group(0)\n\nsuppotive_environment_0 = target[['School Name','Location Code', \n                                 'City','Community School?', \n                                 'Supportive Environment %',\n       'Supportive Environment Rating'\n      ]].groupby(['Supportive Environment Rating']).get_group(0)\n\neffective_school_leadership_0 = target[['School Name','Location Code', 'City','Community School?', \n                                      'Effective School Leadership %',\n       'Effective School Leadership Rating'\n      ]].groupby(['Effective School Leadership Rating']).get_group(0)\n\nstrong_family_community_ties_0 = target[['School Name','Location Code', \n                                       'City','Community School?', \n                                       'Strong Family-Community Ties %',\n       'Strong Family-Community Ties Rating'\n      ]].groupby(['Strong Family-Community Ties Rating']).get_group(0)\n\ntrust_0 = target[['School Name','Community School?', 'Location Code', 'City',\n                'Trust %',\n       'Trust Rating'\n      ]].groupby(['Trust Rating']).get_group(0)","7c077711":"#print('Average rating: ',rigorous_instruction_0['Rigorous Instruction %'].mean())\n#r = rigorous_instruction_0.where(rigorous_instruction_0['Rigorous Instruction %']==0).dropna()\n#s =suppotive_environment_0.where(suppotive_environment_0['Supportive Environment %']==0).dropna()\n#c = collaborative_teachers_0.where(collaborative_teachers_0['Collaborative Teachers %'] ==0).dropna()\n#e = effective_school_leadership_0.where(effective_school_leadership_0['Effective School Leadership %']==0).dropna()\n#st = strong_family_community_ties_0.where(strong_family_community_ties_0['Strong Family-Community Ties %'] == 0).dropna()\n#t = trust_0.where(trust_0['Trust %'] == 0).dropna()\n#print(r['School Name'])\n#print(s['School Name'])\n#print(c['School Name'])\n#print(e['School Name'])\n#print(st['School Name'])\n#print(t['School Name'])\n#print('School Count: ',suppotive_environment_0['School Name'].count())\n#print('Average rating: ', suppotive_environment_0['Supportive Environment %'].mean())\n#print('School Count: ',collaborative_teachers_0['School Name'].count())\n#print('Average rating: ', collaborative_teachers_0['Collaborative Teachers %'].mean())\n#collaborative_teachers_0.head().sort_values(by='Collaborative Teachers %').style.highlight_min()\n#print('School count: ', effective_school_leadership_0['School Name'].count())\n#print('Average rating: ',effective_school_leadership_0['Effective School Leadership %'].mean())\n#effective_school_leadership_0.head(4).sort_values(by='Effective School Leadership %').style.highlight_min()\n#print('School count: ',strong_family_community_ties_0['School Name'].count())\n#print('Average rating: ',strong_family_community_ties_0['Strong Family-Community Ties %'].mean())\n#strong_family_community_ties_0.head(4).sort_values(by='Strong Family-Community Ties %').style.highlight_min()\n#print('School count: ', trust_0['School Name'].count())\n#print('Average rating: ',trust_0['Trust %'].mean())\n#trust_0.head(4).sort_values(by='Trust %').style.highlight_min()","c8ba5cd8":"tem = target.loc[[252,333]]\nindex = pd.concat([rigorous_instruction,collaborative_teachers,\n               effective_school_leadership,\n               strong_family_community_ties,\n               trust,student_achievement, tem], join = 'inner').drop_duplicates()\ntarget_new = target.loc[index.index]\n#target_new.shape","5688abf2":"SHSAT.rename(columns = {'School name':'School Name'}, inplace = True)\ncommon_school = pd.merge(SHSAT, target_new, how = 'inner').drop_duplicates()\n","b8bccbac":"KAPPA = common_school.where(common_school['Year of SHST'] == 2016).dropna().set_index('School Name')\nA = KAPPA['Rate of Enrollment on  10\/31 %'] = KAPPA['Enrollment on 10\/31']\/KAPPA['Grade 8 ELA - All Students Tested']\nB = KAPPA['Rate of Registration %'] = KAPPA['Number of students who registered for the SHSAT']\/KAPPA['Enrollment on 10\/31']\nC = KAPPA['Rate of SHSAT Taken %'] = KAPPA['Number of students who took the SHSAT']\/KAPPA['Number of students who registered for the SHSAT']\nfig, axes = plt.subplots(nrows=2, ncols=2, figsize=(20,20))\nKAPPA[['Grade 8 ELA - All Students Tested', 'Enrollment on 10\/31',\n       'Number of students who registered for the SHSAT',\n       'Number of students who took the SHSAT']].plot(kind = 'bar',ax=axes[0,0])\nKAPPA[['Percent ELL','Average ELA Proficiency', 'Percent White']].plot(kind = 'bar',ax=axes[0,1])\nKAPPA[['Student Attendance Rate','Percent of Students Chronically Absent']].plot(kind = 'bar',ax=axes[1,0])\nKAPPA[KAPPA.columns[32:44]].plot(kind = 'bar',ax=axes[1,1])","0c570800":"d = pd.Series({'Rate of Enrollment on  10\/31 %':A.mean()*100,'Rate of Registration %':B.mean()*100,'Rate of SHSAT Taken %':C.mean()*100})\nd.plot(kind = 'bar', figsize = (10,5))\nprint(round(d,2))","b4a20374":"total = target_new['Grade 8 ELA - All Students Tested'].sum()\nSHSAT_enrollment = int(total*A.mean())\nSHSAT_Regi = int(SHSAT_enrollment*B.mean()) \nSHSAT_take = int(SHSAT_Regi*C.mean())\nd =pd.Series({'Enrollment':SHSAT_enrollment, 'Registration':SHSAT_Regi,'SHSAT Will Be Taken': SHSAT_take})\nd.plot(kind = 'bar', figsize = ((10,5)))\nprint(d)","c779f901":"target_new[['Percent ELL','Average ELA Proficiency','Percent White']].hist(figsize=(10,10), bins = 20, alpha = 0.5)","3dd22598":"target_new[['Student Attendance Rate','Percent of Students Chronically Absent']].hist(figsize=(10,5), bins = 20)","858e55b1":"target_new[target.columns[26:39]].hist(figsize=(10,10), bins = 20, color = 'orange')","6f73be1e":"target_new[target.columns[41:50]].hist(figsize=(20,15), bins = 20, color = 'green')","1e4adaca":"target_new[['Economic Need Index','School Income Estimate']].hist(figsize=(10,5), bins = 20, color = 'green')\ntarget_new.plot.hexbin(x='Economic Need Index', y = 'School Income Estimate', gridsize=25)","08e0a0d9":"not_meeting_target_rate = total\/df['Grade 8 ELA - All Students Tested'].sum()\nr = pd.Series({\"Not Meeting Target Rate\":total, \"Total Grade 8 ELA Tested\":df['Grade 8 ELA - All Students Tested'].sum()})\nr.plot(kind='bar')\nprint('Among all the students that have taken the grade 8 ELA test in 2016, there were', round(not_meeting_target_rate*100, 2),'%', 'students belong to the not meeting target group.')","9b5a6a09":"## Grade 8 ELA - All Students Tested, Grade 8 ELA 4s - All Students, Grade 8 ELA 4s - American Indian or Alaska Native, Grade 8 ELA 4s - Black or African American, Grade 8 ELA 4s - Hispanic or Latino, Grade 8 ELA 4s - Asian or Pacific Islander, Grade 8 ELA 4s - White, Grade 8 ELA 4s - Multiracial, Grade 8 ELA 4s - Limited English Proficient & Grade 8 ELA 4s - Economically Disadvantaged","55e4ec6c":"# and shools that have monority students more than 50% are 558.","5d251203":"\n# Conclusion\n### The values in the target_new dataset will give PASSNYC some idea about who needs help the most and how many to target.\n### They can also make a relatively more precise plan for how to help them based on the ratios of the students in each group and the ratios in the criteria. ","d69f294c":"## Percent ELL, Percent White & Average ELA Proficiency","9be41902":"# From looking at the missing values in rigorous instruction, collaborative teachers, suppotive environment, effective school leadership, strong family community and trust, I noticed that two schools have relatively low values in collabrative teachers and effective school leadership. Given that the values are 0.71 and lower, they should be included into the \"not meeting target \" group.  \n# And there is one school called Creat Oaks Charter School that has missing values in all the criteria mentioned above, the reason for the missing values might be that this school did not take part in the assessment, so we will not inculde this school in our \"not meeting target\" group.<br>\n# Now we put all the schools in the \"not meeting target\" group into a new dataset called \"target_new\".\n\n# Before we analyze the values in target_new, we go back to the dataset SHSAT and we will find there is one common school between SHSAT and target_new.","d26cbb39":"## Rigorous Instruction %, Collaborative Teachers %, Supportive Environment %,  Effective School Leadership %, Strong Family-Community Ties % & Trust %","dfb99d97":"# When we apply the ratios calculated above to the total number of students taken the ELA test in 2016 in the 'not meeting target' group, we will have the numbers of the enrollment, the registration and the SHSAT taken as follows,","589d0a0a":"## Student Attendance Rate & Percent of Students Chronically Absent","399c07d8":"# By going through SHSAT registration  we can see that SHSAT took grade 8 and grade 9 students in the past\n","f69f4f60":"# There are 595 schools with grade 8 and grade 9 ","52c44c22":" # Among the 558 shools , there are 503 non community schools and 55 community schools","c146b4ea":"# So I am going to choose schools that have grade 8 and grade 9 from 2016 school explorer","893cbb0d":"## Economic Need Index & School Income Estimate","fbbb11bb":"# The Rate of Enrollment on 10\/31, the Rate of Registration and the Rate of SHSAT taken in 2016 for the school are as follows,","44f9c243":"# Now let's see how many schools are not meeting target in rigorous instruction, collaborative teachers, effective school leadership, strong family community and trust. <br>\n### Supportive Environment Rating has no 'Not Meeting Target' value, so it won't be mentioned here.\n","94bd480a":"# Now let's take a look at the values in the target_new dataset and find out the percentage of student in each group and the ratios in the criteria we need to pay attention to.","8a3ce777":"\n# When we focus on shools with students in 8th grade who took the ELA test in 2016,  the number is 506. ","d30f6e56":"# Let's take a look at this school in 2016.\n"}}