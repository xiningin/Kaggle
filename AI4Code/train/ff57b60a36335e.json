{"cell_type":{"0062bd1c":"code","9bea5ba0":"code","9dcf129f":"code","e91b2b68":"code","e715ee79":"code","73b94776":"code","d478c4bb":"code","7b7235fd":"code","b2216566":"code","6c256441":"code","97a4efc0":"markdown","b1e401df":"markdown","837e6312":"markdown","1eca370c":"markdown","aab3e426":"markdown","1ceec8d2":"markdown","9f3964d9":"markdown","bb0b5056":"markdown","629332c1":"markdown","8cc1a329":"markdown","b8292e78":"markdown"},"source":{"0062bd1c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport tensorflow as tf\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nfrom keras.utils import to_categorical \nfrom keras import backend as K\nfrom keras.layers import Dense, Dropout,Flatten\nfrom keras.layers.convolutional import Conv2D, MaxPooling2D\nfrom keras.models import Sequential\nfrom keras.layers import Dropout\nfrom keras.layers.core import Activation\n\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","9bea5ba0":"df = pd.read_csv('..\/input\/sign_mnist_train.csv')\ndftest = pd.read_csv('..\/input\/sign_mnist_test.csv')\nprint(df.shape)\ndf.head()\n","9dcf129f":"print(dftest.shape)\ndftest.head()","e91b2b68":"train=df.values[0:,1:]\nlabels = df.values[0:,0]\nlabels = to_categorical(labels)\nsample = train[1]\nplt.imshow(sample.reshape((28,28)))\n","e715ee79":"test = dftest.values[0:,1:]\ntestlablels = dftest.values[0:,0]\ntestlables = to_categorical(testlablels)","73b94776":"print(train.shape,labels.shape)\n#normalizing the dataset\ntrain=train\/255\ntrain=train.reshape((27455,28,28,1))\ntest = test\/255\ntest \nplt.imshow(train[1].reshape((28,28)))\nprint(train.shape,labels.shape)","d478c4bb":"#mnist = tf.keras.datasets.fashion_mnist\n#(training_images, training_labels), (test_images, test_labels) = mnist.load_data()\n#training_images=train \/ 255.0\n#test_images=test_images \/ 255.0\ntest_images = test.reshape(7172, 28, 28, 1)\ntest_images=test_images\/255.0\nmodel = tf.keras.models.Sequential([\n  tf.keras.layers.Conv2D(64, (3,3), activation='relu', input_shape=(28, 28, 1)),\n  tf.keras.layers.MaxPooling2D(2, 2),\n  tf.keras.layers.Conv2D(64, (3,3), activation='relu'),\n  tf.keras.layers.MaxPooling2D(2,2),\n  tf.keras.layers.Flatten(),\n  tf.keras.layers.Dense(128, activation='relu'),\n  tf.keras.layers.Dense(25, activation='softmax')\n])\nmodel.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])\nmodel.summary()\nhis=model.fit(train, labels[:,1], epochs=5)\ntest_loss = model.evaluate(test_images, testlables[:,1])","7b7235fd":"his.history","b2216566":"LOC = 20\nsample = train[LOC]\nplt.imshow(sample.reshape((28,28)))\nlbl=labels[LOC]\nprint(list(lbl).index(1))","6c256441":"sample=sample.reshape((1,28,28,1))\nres=model.predict(sample)\nres=list(res[0])\nmx=max(res)\nprint(res.index(mx))","97a4efc0":"We make use of Convolutional Neural Network(CNN) as our model. Initial layer requires the input shape for each row of our training data which is of the shape (28,28,1) and final layer outputs a 25 dimension output.","b1e401df":"**Testing**","837e6312":"From the dataframe obtain the training data and load the labels. Use to_categorical to convert the labels into one-hot encoding.","1eca370c":"**Data loading**\n","aab3e426":"Load the data from the csv file which contains label information at 0th column and remaining columns shows the pixel value at each 784 locations.","1ceec8d2":"**Preparing Train\/Test set**","9f3964d9":"**Neural Network model**\n","bb0b5056":"Normalize the data and convert each row of (1,784) shape into (28,28,1) of the training data.","629332c1":"Convert the given image to (1,28,28,1) shape ,normalize it and give it to the model. Find the index of the largest probablitiy from the given set of predictions.","8cc1a329":"For testing we first take a sample from the traning data which in our case is from 4th location which has a label 13 and then need to prepare the data to make it suitable for our model to predict.","b8292e78":"**Importing the necessary libraries**"}}