{"cell_type":{"94bbc4ff":"code","bdd5e2bf":"code","e5743668":"code","d314c390":"code","aa09bd09":"code","99b17702":"code","af91e98f":"code","dafddb96":"code","0f69b030":"code","2afc8417":"code","deabd0bb":"code","2286f760":"code","af17ba29":"code","26117d03":"code","82787ccb":"code","3b69f486":"code","0a3d70db":"code","828ce079":"code","53119d39":"code","b3840e78":"code","3c36171d":"code","7e324e05":"code","13afefba":"code","ebd1d6fe":"code","5a4ebc82":"code","663c3366":"markdown","9f6640ed":"markdown","1a3f8d2f":"markdown"},"source":{"94bbc4ff":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bdd5e2bf":"# Here are all the required packages to load\n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sn\nimport matplotlib.pyplot as plt\nimport sklearn\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import RandomizedSearchCV\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom sklearn.metrics import confusion_matrix, classification_report\nfrom sklearn.metrics import plot_confusion_matrix","e5743668":"# Loading the dataset\ndf = pd.read_csv('\/kaggle\/input\/weather-dataset-rattle-package\/weatherAUS.csv')\ndf.head()\n","d314c390":"df.shape","aa09bd09":"# Description of the dataset\ndf.describe().T","99b17702":"df.info()","af91e98f":"df.isna().sum()   # Shows that we have a dataframe that consists Nan values and categorical values","dafddb96":"# To check the quantitative relationship between variables drawing a Correlation matrix\ncorr_mat = df.corr()\nplt.figure(figsize=(20,20))\nsn.heatmap(df.corr(),\n           annot=True,\n           )","0f69b030":"# Missing values in percentages\ndf.isna().sum()\/df.shape[0]*100","2afc8417":"# Dropping 'DATE' and other columns that have more than 30% of missing data\ndf = df.drop(['Date','Evaporation', 'Sunshine', 'Cloud9am', 'Cloud3pm'], axis=1)\ndf","deabd0bb":"df.info()","2286f760":"# Separating the categorical type and numerical  columns\ncat_cols = df.select_dtypes(include = ['object'])\nnum_cols = df.select_dtypes(exclude = ['object'])","af17ba29":"for cols in cat_cols:\n    cat_cols.fillna(method='ffill', inplace=True )\n\nfor col in num_cols:\n    num_cols[col].fillna(num_cols[col].mean(), inplace=True)","26117d03":"num_cols.info()","82787ccb":"cat_cols.info()","3b69f486":"# lable encoding the category columns with label Encoder\nlb_enc = LabelEncoder()\ncat_cols = cat_cols.astype(str).apply(lb_enc.fit_transform)","0a3d70db":"# Joining both \ndf = pd.concat([cat_cols, num_cols], axis = 1)","828ce079":"df.info()","53119d39":"X = df.drop('RainTomorrow', axis=1)\ny = df['RainTomorrow']","b3840e78":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)\n","3c36171d":"np.random.seed(42)\nmodel = LogisticRegression(solver='liblinear',\n                           multi_class='ovr')\nmodel.fit(X_train, y_train)","7e324e05":"model.score(X_test, y_test)","13afefba":"y_preds = model.predict(X_test)","ebd1d6fe":"print(confusion_matrix(y_test, y_preds))","5a4ebc82":"print(classification_report(y_test, y_preds))","663c3366":"# Data Modelling","9f6640ed":"# Data Preprocessing","1a3f8d2f":"**Correlation Matrix**"}}