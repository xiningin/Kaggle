{"cell_type":{"0b68e0d5":"code","543d8ee2":"code","a6b4c628":"code","f481bcc5":"code","a9e18e37":"code","cd1da5b2":"code","1bee41c1":"code","ad31f1ba":"code","ec3d967c":"code","7102d915":"code","7febb190":"code","3f49cd8f":"code","26de6236":"code","dde1cf0c":"code","d8de9d7f":"code","ae32b49e":"code","fb92fa00":"code","14b6179a":"code","3d090e92":"code","2803818b":"code","617fa5c4":"code","7d4f639d":"code","b66464a2":"code","1cfeb99f":"code","7edec83b":"code","4c171398":"code","2da8a73d":"code","1247dbaf":"code","b3609711":"code","e974d945":"code","54f89cf8":"code","8c0fa499":"code","0a6af391":"code","390e14af":"code","c5f0812b":"code","29676949":"code","d6b97f2e":"code","dff90b42":"code","65022434":"code","dacc493b":"code","0aa48786":"code","62d4babd":"code","a0fa5243":"code","98cf12ae":"code","973514b4":"code","9cb862a2":"code","211dd35a":"code","d91a6541":"code","91e76067":"code","0c15da10":"code","1c4261a4":"code","f06566c6":"code","4b26cd3c":"code","42c6871a":"code","ab8c93fa":"code","1fba0c70":"markdown","83b055e1":"markdown","2aa2aaaf":"markdown","7f921071":"markdown","f3499fa0":"markdown","8dd935b8":"markdown","a55d0cf7":"markdown","52c39f79":"markdown"},"source":{"0b68e0d5":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom sklearn import preprocessing, svm\nfrom sklearn.preprocessing import LabelEncoder, OneHotEncoder\nfrom sklearn.linear_model import LinearRegression, LogisticRegression\nfrom sklearn.metrics import accuracy_score, mean_squared_error, r2_score\nfrom sklearn.model_selection import train_test_split","543d8ee2":"file1= '..\/input\/dsn-ai-oau-july-challenge\/train.csv'\nfile2= '..\/input\/dsn-ai-oau-july-challenge\/test.csv'\nfile3='..\/input\/dsn-ai-oau-july-challenge\/sample_submission.csv'","a6b4c628":"train_data= pd.read_csv(file1,error_bad_lines= False)\ntrain_data","f481bcc5":"test_data= pd.read_csv(file2,error_bad_lines= False)\ntest_data","a9e18e37":"sample= pd.read_csv(file3, error_bad_lines= False)\nsample","cd1da5b2":"train_data.info()","1bee41c1":"test_data.info()","ad31f1ba":"train_data.isnull().sum()","ec3d967c":"test_data.isnull().sum()","7102d915":"train_data.describe()","7febb190":"test_data.describe()","3f49cd8f":"train_data[\"Supermarket _Size\"].value_counts()","26de6236":"train_data[\"Supermarket _Size\"]= train_data[\"Supermarket _Size\"].fillna(\"Medium\", axis= 0)","dde1cf0c":"train_data.Product_Weight.value_counts()","d8de9d7f":"train_data[\"Product_Fat_Content\"].value_counts()","ae32b49e":"LF= train_data[\"Product_Fat_Content\"] == \"Low Fat\"\nNF= train_data[\"Product_Fat_Content\"] == \"Normal Fat\"\nULF= train_data[\"Product_Fat_Content\"] ==  \"Ultra Low fat\"","fb92fa00":"train_data.loc[LF, \"Product_Weight\"] = train_data.loc[LF, \"Product_Weight\"].fillna(train_data.loc[LF, \"Product_Weight\"].mean())\ntrain_data.loc[NF, \"Product_Weight\"] = train_data.loc[NF, \"Product_Weight\"].fillna(train_data.loc[NF, \"Product_Weight\"].mean())\ntrain_data.loc[ULF, \"Product_Weight\"] = train_data.loc[ULF, \"Product_Weight\"].fillna(train_data.loc[ULF, \"Product_Weight\"].mean())","14b6179a":"train_data.isnull().sum()","3d090e92":"test_data[\"Supermarket _Size\"].value_counts()","2803818b":"test_data[\"Supermarket _Size\"]= test_data[\"Supermarket _Size\"].fillna(\"Medium\", axis= 0)","617fa5c4":"L= test_data[\"Product_Fat_Content\"]== \"Low Fat\"\nN= test_data[\"Product_Fat_Content\"]== \"Normal Fat\"\nUL= test_data[\"Product_Fat_Content\"] == \"Ultra Low fat\"","7d4f639d":"test_data.loc[L, \"Product_Weight\"]= test_data.loc[L, \"Product_Weight\"].fillna(test_data.loc[L, \"Product_Weight\"].mean())\ntest_data.loc[N, \"Product_Weight\"] = test_data.loc[N, \"Product_Weight\"].fillna(test_data.loc[N, \"Product_Weight\"].mean())\ntest_data.loc[UL, \"Product_Weight\"]= test_data.loc[UL, \"Product_Weight\"].fillna(test_data.loc[UL, \"Product_Weight\"].mean())","b66464a2":"test_data.isnull().sum()","1cfeb99f":"train_data.corr()","7edec83b":"sns.scatterplot(x= train_data[\"Product_Weight\"], y= train_data[\"Product_Supermarket_Sales\"])\nplt.show()","4c171398":"sns.scatterplot(x= train_data[\"Product_Shelf_Visibility\"] , y= train_data[\"Product_Supermarket_Sales\"])\nplt.show()","2da8a73d":"sns.scatterplot(x= train_data[\"Product_Price\"], y= train_data[\"Product_Supermarket_Sales\"])\nplt.figure(figsize=(10,6))\nplt.show()","1247dbaf":"sns.set(style= \"darkgrid\")\nsns.countplot(y= \"Product_Type\", hue= \"Supermarket_Type\",data= train_data)\nplt.title(\"Product Type to Supermarket Type\")\nplt.show()\n#This chart illustrates Supermarket Type 1 as the most sort after. it encompasses most of the products in large amount","b3609711":"#Same illustration showing how much product can be found in Supermarket Type 1\ntrain_data.Supermarket_Type.value_counts().plot(kind= 'pie')\nplt.show()","e974d945":"sns.barplot(y= train_data[\"Supermarket_Type\"], x= train_data[\"Product_Supermarket_Sales\"])\nplt.figure(figsize=(40,15))\nplt.show()\n#In respect to Product Supermarket Sales, Supermarket Type 3 makes the highest Sales","54f89cf8":"sns.set(style= \"darkgrid\")\nsns.countplot(y= \"Product_Type\", hue= \"Supermarket_Location_Type\", data= train_data)\nplt.title(\"Product Type with Clusters\")\nplt.show()\n#Cluster 3 is seen to encompass more products","8c0fa499":"sns.barplot(y=train_data[\"Supermarket_Location_Type\"], x= train_data[\"Product_Supermarket_Sales\"])\nplt.title(\"Clusters with Sales\")\nplt.show()\n#But this shows Cluster 2 as the best sales making cluster","0a6af391":"PW= train_data.groupby(\"Product_Fat_Content\").sum().reset_index()\nPW\n#Normal fat products are seen to have the best product weight but did poorly in making more sales","390e14af":"plt.figure(figsize= (15,10))\nsns.set(style= \"darkgrid\")\ng= sns.barplot(PW[\"Product_Fat_Content\"], PW[\"Product_Supermarket_Sales\"])\nfor index, row in PW.iterrows():\n    g.text(row.name, row.Product_Supermarket_Sales, round(row.Product_Supermarket_Sales,2), color= \"black\", ha= \"center\")\n    g.set_xticklabels(g.get_xticklabels(), fontsize= 18)\n    g.set_xlabel(\"Product_Fat_Content\", fontsize= 18)\nplt.title(\"Fat Content to Product Sales\")\nplt.show()\n#Product with Low fat seems to make the best sales","c5f0812b":"sns.set(style=\"darkgrid\")\nsns.countplot( y= \"Product_Type\", hue= \"Supermarket _Size\", data= train_data)\nplt.title(\"Product Type to Market Size\")\nplt.show()\n#Medium sized supermarket has most products","29676949":"sns.barplot(train_data[\"Supermarket _Size\"], train_data[\"Product_Supermarket_Sales\"])\nplt.title(\"Supermarket sales per size\")\nplt.show()\n#This still ascertain medium sized supermarket as the best sales making market","d6b97f2e":"sns.set(style= \"darkgrid\")\nsns.countplot(y= \"Supermarket_Type\", hue= \"Supermarket _Size\", data= train_data)\nplt.show()","dff90b42":"PV= train_data.groupby(\"Product_Type\").sum().reset_index()\nPV","65022434":"plt.figure(figsize= (15,10))\nsns.set(style= \"darkgrid\")\ng= sns.barplot(PV[\"Product_Type\"],PV[\"Product_Supermarket_Sales\"])\nfor index, row in PV.iterrows():\n    g.text(row.name, row.Product_Price, round(row.Product_Price,2), color= 'black',ha= 'center')\n    g.set_xticklabels(g.get_xticklabels(), rotation= 90, fontsize= 18)\n    g.set_xlabel(\"Product_Type\", fontsize= 18)\nplt.title(\"Product Type to Supermarket Sales\")\nplt.show()\n#We clearly see Sanck Foods, followed by Fruits and vegetables, Household, Frozen Foods to Canned as the Best Five Sales Making Products","dacc493b":"PT= train_data[train_data[\"Product_Type\"] == \"Snack Foods\"][\"Supermarket_Type\"]\nprint(PT.value_counts())\nsns.countplot(PT)\nplt.title(\"Best Market with Snack Food\")\n#Supermarket Type 1 is seen to have the highest number of Snack Food but this doesnt clarify it to be making the best sales on Snack Foods\n#Type 1 isn't but Type 3","0aa48786":"columns= (\"Product_Identifier\",\"Supermarket_Identifier\",\"Product_Supermarket_Identifier\",\"Product_Fat_Content\",\"Product_Type\",\"Supermarket _Size\",\"Supermarket_Location_Type\",\"Supermarket_Type\")\nfor x in columns:\n    Le= LabelEncoder()\n    train_data[x]= Le.fit_transform(train_data[x].values)\ntrain_data.dtypes","62d4babd":"col= (\"Product_Identifier\",\"Supermarket_Identifier\",\"Product_Supermarket_Identifier\",\"Product_Fat_Content\",\"Product_Type\",\"Supermarket _Size\",\"Supermarket_Location_Type\",\"Supermarket_Type\")\nfor y in col:\n    Le= LabelEncoder()\n    test_data[y]= Le.fit_transform(test_data[y].values)\ntest_data.dtypes","a0fa5243":"train_new= train_data.drop([\"Product_Identifier\",\"Supermarket_Identifier\"], axis=1)\ntest_new= test_data.drop([\"Product_Identifier\",\"Supermarket_Identifier\"], axis=1)","98cf12ae":"X= train_new.drop(\"Product_Supermarket_Sales\", axis= 1)\ny= train_new[\"Product_Supermarket_Sales\"]\n#X= preprocessing.scale(X)","973514b4":"train_x, val_x, train_y, val_y= train_test_split(X,y, test_size= 0.2, random_state= 60)","9cb862a2":"LR= LinearRegression()\nval= LR.fit(train_x, train_y)\npred= val.predict(val_x)","211dd35a":"print(\"mse:\", mean_squared_error(pred,val_y))\nprint(\"r2_score:\", r2_score(pred,val_y))\nprint(\"Rmse:\", np.sqrt(mean_squared_error(pred,val_y)))","d91a6541":"from sklearn.model_selection import cross_val_score, GridSearchCV\nfrom sklearn.ensemble import RandomForestRegressor, AdaBoostRegressor\nfrom sklearn.preprocessing import MinMaxScaler","91e76067":"\nabr= AdaBoostRegressor(n_estimators= 50, learning_rate= 0.1, random_state=0)    \nrfr = RandomForestRegressor( n_estimators= 100, random_state=0, verbose=False)\n","0c15da10":"vall= abr.fit(train_x,train_y)\npredd= vall.predict(val_x)","1c4261a4":"print(\"mse:\", mean_squared_error(predd, val_y))\nprint(\"Rmse:\", np.sqrt(mean_squared_error(predd,val_y)))","f06566c6":"abr.fit(X,y)\ntest_yhat= abr.predict(test_new)","4b26cd3c":"submission= pd.read_csv(file3)\nsubmission.head()","42c6871a":"submission.Product_Supermarket_Sales = test_yhat\nsubmission.head()","ab8c93fa":"submission.to_csv(\"july.csv\", index= False)","1fba0c70":"# Supermarket Type","83b055e1":"## MR CHUKWUDI CHALLENGE 2\n","2aa2aaaf":"#Regarding Mr Chukwudi's plan to expand his stores all over Nigeria and seemingly based on our visualization, we deduced that;\n#Supermarket Type 3, Supermarket Location Cluster 2,and a medium sized supermarket are the best for his expansion\n#Low Fat Content Product, Product Type like Snack Foods,Fruits and Vegetables are the best Sales Making Products","7f921071":"# Supermarket Location Type","f3499fa0":"# DATA VISUALIZATION","8dd935b8":"# Product Fat Content","a55d0cf7":"# Supermarket Size","52c39f79":"# Product Type"}}