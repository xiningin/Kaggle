{"cell_type":{"c98f96dc":"code","333f13d2":"code","63c7d47d":"code","f7f1db37":"code","230a0844":"code","965a9b39":"code","a42be8e5":"code","87463e54":"code","50bc36c5":"code","2a426428":"code","b875b2bd":"code","2f5e5e86":"code","c77e4f08":"code","01c73367":"code","cfe371a4":"code","fbb5c601":"code","10dbef9b":"code","250d54a0":"code","2d887842":"code","e40bc9c6":"code","8e26a4e1":"code","58a4f63f":"code","8901a85e":"code","f8f561c4":"code","b4ac048d":"code","ecf1c41f":"code","5563f59a":"code","3bfe9742":"code","1d6a71c2":"code","55dc2005":"code","bc005bc2":"code","d8fb11f2":"code","63523315":"code","71e101d0":"code","65f97a6d":"code","5469a4d0":"code","f0c3c5f0":"code","69599d10":"code","1b0340f5":"code","6503c5d3":"code","57870445":"code","8ba61869":"markdown","052ab3a6":"markdown","c821e780":"markdown","9dd39f79":"markdown","e0b501eb":"markdown","63d6bcf3":"markdown","7d6989df":"markdown","7cec5130":"markdown","2dc20b90":"markdown","1f433cee":"markdown","0f7c7bd1":"markdown","3efdc3e6":"markdown","153708c1":"markdown","1ff3330b":"markdown","2e9c8bd0":"markdown","e062ce86":"markdown","15cdc3fb":"markdown","2b06bc91":"markdown","ddd0abd5":"markdown","7a3469ec":"markdown","015097e1":"markdown","62132ae5":"markdown","121d43ef":"markdown","88008f1b":"markdown","d68db4e1":"markdown","f3a2609d":"markdown","b22ee4a8":"markdown","ab623d37":"markdown","c39f0deb":"markdown","7aa93704":"markdown","cc407a8e":"markdown","87535d90":"markdown","04a17eaf":"markdown","57544417":"markdown"},"source":{"c98f96dc":"# normal string vs raw string\npath = \"C:\\desktop\\Ravikanth\"  #string\nprint(\"string:\",path)","333f13d2":"path= r\"C:\\desktop\\Ravikanth\"  #raw string\nprint(\"raw string:\",path)","63c7d47d":"import re\n\n#match a word at the beginning of a string\n\nresult = re.match('Kaggle',r'Kaggle is the largest data science community of India') \nprint(result)\n\nresult_2 = re.match('largest',r'Kaggle  is the largest data science community of India') \nprint(result_2)","f7f1db37":"print(result.group())  #returns the total matches","230a0844":"# search for the pattern \"founded\" in a given string\nresult = re.search('founded',r'Andrew NG founded Coursera. He also founded deeplearning.ai')\nprint(result.group())","965a9b39":"result = re.findall('founded',r'Andrew NG founded Coursera. He also founded deeplearning.ai')  \nprint(result)","a42be8e5":"str = r'Kaggle is the largest data science community of India'\n\nx = re.findall(\"\\AKaggle\", str)\n\nprint(x)","87463e54":"str = r'Analytics Vidhya is the largest Analytics community of India'\n\nx = re.findall(\"\\AVidhya\", str)\n\nprint(x)","50bc36c5":"#Check if there is any word that ends with \"est\"\nx = re.findall(r\"est\\b\", str)\nprint(x)","2a426428":"str = r'The good, The bad, and The Ugly '\n\nx = re.findall(r\"\\Bhe\", str)\n\nprint(x)","b875b2bd":"str = \"2 million monthly visits in Jan'19.\"\n\n#Check if the string contains any digits (numbers from 0-9):\nx = re.findall(\"\\d\", str)\n\nprint(x)\n\nif (x):\n  print(\"Yes, there is at least one match!\")\nelse:\n  print(\"No match\")","2f5e5e86":"str = \"2 million monthly visits in Jan'19.\"\n\n# Check if the string contains any digits (numbers from 0-9):\n# adding '+' after '\\d' will continue to extract digits till encounters a space\nx = re.findall(\"\\d+\", str)\n\nprint(x)\n\nif (x):\n  print(\"Yes, there is at least one match!\")\nelse:\n  print(\"No match\")","c77e4f08":"str = \"2 million monthly visits in Jan'19.\"\n\n#Check if the word character does not contain any digits (numbers from 0-9):\nx = re.findall(\"\\D\", str)\n\nprint(x)\n\nif (x):\n  print(\"Yes, there is at least one match!\")\nelse:\n  print(\"No match\")","01c73367":"str = \"2 million monthly visits'19\"\n\n#Check if the word does not contain any digits (numbers from 0-9):\n\nx = re.findall(\"\\D+\", str)\n\nprint(x)\n\nif (x):\n  print(\"Yes, there is at least one match!\")\nelse:\n  print(\"No match\")","cfe371a4":"str = \"2 million monthly visits!\"\n\n#returns a match at every word character (characters from a to Z, digits from 0-9, and the underscore _ character)\n\nx = re.findall(\"\\w\",str)\n\nprint(x)\n\nif (x):\n  print(\"Yes, there is at least one match!\")\nelse:\n  print(\"No match\")","fbb5c601":"str = \"2 million monthly visits!\"\n\n#returns a match at every word (characters from a to Z, digits from 0-9, and the underscore _ character)\n\nx = re.findall(\"\\w+\",str)\n\nprint(x)\n\nif (x):\n  print(\"Yes, there is at least one match!\")\nelse:\n  print(\"No match\")","10dbef9b":"str = \"2 million monthly visits9!\"\n\n#returns a match at every NON word character (characters NOT between a and Z. Like \"!\", \"?\" white-space etc.):\n\nx = re.findall(\"\\W\", str)\n\nprint(x)\n\nif (x):\n  print(\"Yes, there is at least one match!\")\nelse:\n  print(\"No match\")","250d54a0":"str = \"rohan and rohit recently published a research paper!\" \n\n#Search for a string that starts with \"ro\", followed by three (any) characters\n\nx = re.findall(\"ro.\", str)\nx2 = re.findall(\"ro...\", str)\n\nprint(x)\nprint(x2)","2d887842":"str = \"Data Science\"\n\n#Check if the string starts with 'Data':\nx = re.findall(\"^Data\", str)\n\nif (x):\n  print(\"Yes, the string starts with 'Data'\")\nelse:\n  print(\"No match\")\n  \n#print(x)  ","e40bc9c6":"# try with a different string\nstr2 = \"Big Data\"\n\n#Check if the string starts with 'Data':\nx2 = re.findall(\"^Data\", str2)\n\nif (x2):\n  print(\"Yes, the string starts with 'data'\")\nelse:\n  print(\"No match\")\n  \n#print(x2)  ","8e26a4e1":"str = \"Data Science\"\n\n#Check if the string ends with 'Science':\n\nx = re.findall(\"Science$\", str)\n\nif (x):\n  print(\"Yes, the string ends with 'Science'\")\n\nelse:\n  print(\"No match\")\n  \n#print(x)","58a4f63f":"str = \"easy easssy eay ey\"\n\n#Check if the string contains \"ea\" followed by 0 or more \"s\" characters and ending with y\nx = re.findall(\"eas*y\", str)\n\nprint(x)\n\nif (x):\n  print(\"Yes, there is at least one match!\")\nelse:\n  print(\"No match\")","8901a85e":"#Check if the string contains \"ea\" followed by 1 or more \"s\" characters and ends with y \nx = re.findall(\"eas+y\", str)\n\nprint(x)\n\nif (x):\n  print(\"Yes, there is at least one match!\")\nelse:\n  print(\"No match\")","f8f561c4":"x = re.findall(\"eas?y\",str)\n\nprint(x)\n\nif (x):\n  print(\"Yes, there is at least one match!\")\nelse:\n  print(\"No match\")","b4ac048d":"str = \"Analytics Vidhya is the largest data science community of India\"\n\n#Check if the string contains either \"data\" or \"India\":\n\nx = re.findall(\"data|India\", str)\n\nprint(x)\n\nif (x):\n  print(\"Yes, there is at least one match!\")\nelse:\n  print(\"No match\")","ecf1c41f":"# try with a different string\nstr = \"Analytics Vidhya is one of the largest data science communities\"\n\n#Check if the string contains either \"data\" or \"India\":\n\nx = re.findall(\"data|India\", str)\n\nprint(x)\n\nif (x):\n  print(\"Yes, there is at least one match!\")\nelse:\n  print(\"No match\")","5563f59a":"str = \"Analytics Vidhya is the largest data science community of India\"\n\n#Check for the characters y, d, or h, in the above string\nx = re.findall(\"[ydh]\", str)\n\nprint(x)\n\nif (x):\n  print(\"Yes, there is at least one match!\")\nelse:\n  print(\"No match\")","3bfe9742":"str = \"Analytics Vidhya is the largest data science community of India\"\n\n#Check for the characters between a and g, in the above string\nx = re.findall(\"[a-g]\", str)\n\nprint(x)\n\nif (x):\n  print(\"Yes, there is at least one match!\")\nelse:\n  print(\"No match\")","1d6a71c2":"str = \"Mars' average distance from the Sun is roughly 230 million km and its orbital period is 687 (Earth) days.\"\n\n# extract the numbers starting with 0 to 4 from in the above string\nx = re.findall(r\"\\b[0-4]\\d+\", str)\n\nprint(x)\n\nif (x):\n  print(\"Yes, there is at least one match!\")\nelse:\n  print(\"No match\")","55dc2005":"str = \"Analytics Vidhya is the largest data sciece community of India\"\n\n#Check if every word character has characters than y, d, or h\n\nx = re.findall(\"[^ydh]\", str)\n\nprint(x)\n\nif (x):\n  print(\"Yes, there is at least one match!\")\nelse:\n  print(\"No match\")","bc005bc2":"str = \"@AV Largest Data Science community #AV!!\"\n\n# extract words that start with a special character\nx = re.findall(\"[^a-zA-Z0-9 ]\\w+\", str)\n\nprint(x)","d8fb11f2":"str = 'Send a mail to rohan.1997@gmail.com, smith_david34@yahoo.com and priya@yahoo.com about the meeting @2PM'\n  \n# \\w matches any alpha numeric character \n# + for repeats a character one or more times \n#x = re.findall('\\w+@\\w+\\.com', str)     \nx = re.findall('[a-zA-Z0-9._-]+@\\w+\\.com', str)     \n  \n# Printing of List \nprint(x) ","63523315":"text = \"London Olympic 2012 was held from 2012-07-27 to 2012\/08\/12.\"\n\n# '\\d{4}' repeats '\\d' 4 times\nmatch = re.findall('\\d{4}.\\d{2}.\\d{2}', text)\nprint(match)","71e101d0":"text=\"London Olympic 2012 was held from 27 Jul 2012 to 12-Aug-2012.\"\n\nmatch = re.findall('\\d{2}.\\w{3}.\\d{4}', text)\n\nprint(match)","65f97a6d":"# extract dates with varying lengths\ntext=\"London Olympic 2012 was held from 27 July 2012 to 12 August 2012.\"\n\n#'\\w{3,10}' repeats '\\w' 3 to 10 times\nmatch = re.findall('\\d{2}.\\w{3,10}.\\d{4}', text)\n\nprint(match)","5469a4d0":"import pandas as pd\n\n# load dataset\ndata=pd.read_csv(\"..\/input\/titanic.csv\")","f0c3c5f0":"data.head()","69599d10":"# print a few passenger names\ndata['Name'].head(10)","1b0340f5":"name = \"Allen, Mr. William Henry\"\nname2 = name.split(\".\")\nname2[0].split(',')","6503c5d3":"title=data['Name'].apply(lambda x: x.split(\".\")[0].split(\",\")[1])\ntitle.value_counts()","57870445":"def split_it(name):\n    return re.findall(\"\\w+\\.\",name)[0]\ntitle=data['Name'].apply(lambda x: split_it(x))\ntitle.value_counts().sum()","8ba61869":"2. **\\b** returns a match where the specified pattern is at the beginning or at the end of a word.","052ab3a6":"<br>\n\n**2. re.search()**\n\nMatches the first occurence of a pattern in the entire string.","c821e780":"3. **($)** ends with","9dd39f79":"We can infer that **\\d+** repeats one or more occurences of **\\d** till the non maching character is found where as **\\d** does character wise comparison.","e0b501eb":"### Special sequences\n\n1. **\\A**\treturns a match if the specified pattern is at the beginning of the string.","63d6bcf3":"<br>\n\nLet's solve a problem.","7d6989df":"4. **\\d** returns a match where the string contains digits (numbers from 0-9)","7cec5130":"### Method 1: One way is to split on the pandas dataframe and extract the title","2dc20b90":"In the above result, we observe that the title is followed by '.' since we are searching for a pattern that includes '.'","1f433cee":"---\n## Solve Complex Queries\n\nLet us try solving some complex queries using regex.\n\n### Extracting Email IDs\n\n","0f7c7bd1":"4. (*) matches for zero or more occurences of the pattern to the left of it","3efdc3e6":"Since output of the re.match is an object, we will use *group()* function of match object to get the matched expression.","153708c1":"6. **(?)** matches zero or one occurrence of the pattern left to it.","1ff3330b":"6. **\\w** helps in extraction of alphanumeric characters only (characters from a to Z, digits from 0-9, and the underscore _ character)\n","2e9c8bd0":"## Sets\n\n1. A set is a bunch of characters inside a pair of square brackets [ ] with a special meaning.","e062ce86":"# Extract Information Using Regular Expressions (RegEx)\n\nThe first thing that i want to start off is the notion of raw string\n\n**r** expression is used to create a raw string. Python raw string treats backslash (\\\\) as a literal character.\n\n\n\nLet us see some examples!","15cdc3fb":"It returns the last three characters of the word \"largest\".","2b06bc91":"## Metacharacters\n\nMetacharacters are characters with a special meaning\n\n1. **(.)** matches any character (except newline character)","ddd0abd5":"5. **(+)** matches one or more occurences of the pattern to the left of it","7a3469ec":"So, it is always recommended to use raw strings while dealing with regular expressions. \n\nPython has a built-in module to work with regular expressions called **re**. Some of the commonly used methods from the **re** module are listed below:\n\n1.re.match(): This function checks if \n\n2.re.search()\n\n3.re.findall()\n\n<br>\n\nLet us look at each method with the help of example.\n\n**1. re.match()**\n\nThe re.match function returns a match object on success and none on failure. ","015097e1":"2. **[^]** Check whether string has other characters mentioned after ^","62132ae5":"7. **(|)** either or","121d43ef":"3. **\\B**\treturns a match where the specified pattern is present, but NOT at the beginning (or at the end) of a word.","88008f1b":"### Thanks to Analytics Vidhya\n\n- Please find the below link for Beginners Tutorial for Regular Expressions in Python\n\nhttps:\/\/www.analyticsvidhya.com\/blog\/2015\/06\/regular-expression-python\/","d68db4e1":"<br>\n\n**3. re.findall()**\n\nIt will return all the occurrences of the pattern from the string. I would recommend you to use *re.findall()* always, it can work like both *re.search()* and *re.match()*.","f3a2609d":"5. **\\D** returns a match where the string does not contain any digit.","b22ee4a8":"3. **[a-zA-Z0-9]** : Check whether string has alphanumeric characters","ab623d37":"7. **\\W** returns match at every non alphanumeric character.","c39f0deb":"This is useful in cases where you have multiple strings of text, and you have to extract the first word only, given that first word is 'Analytics'.\n\nIf you would try to find some other word, then it will return an empty list as shown below.","7aa93704":"2. **(^)** starts with","cc407a8e":"## Extracting Title from Names - Titanic Dataset","87535d90":"This method might not work all the time. Therefore, another more robust way is to define pattern and search for it using regex","04a17eaf":"### Extracting Dates","57544417":"### Method 2: Use RegEx to extract titles"}}