{"cell_type":{"719f72cd":"code","2618fcdf":"code","148c864f":"code","7fc5d625":"code","8bac0b3e":"code","aebf4325":"code","92a1bc38":"code","f6b121c1":"code","a320f029":"code","d021ec42":"code","b5040308":"code","61cac27c":"code","3e61efa0":"code","881a1266":"code","40dd74c3":"code","2cf44434":"code","8b07aa2f":"code","ac133e7f":"code","9c85f5f0":"code","498a8949":"code","d2419453":"code","ba322d18":"code","f4841e27":"code","a364f391":"code","a47a4b58":"code","5e39ebf2":"code","5addfec0":"code","7d0779bb":"code","bbc45f6e":"code","b48a5693":"code","f7531ed0":"code","f5971950":"code","1e3b0887":"code","237ad7ce":"code","8c2d0560":"code","2b2ecf53":"code","15a7c1b9":"code","4888c5cb":"code","b1f44362":"code","af43b748":"code","6dc282b0":"code","f8945341":"code","fb256bdc":"code","5c20d915":"code","97fe45c4":"code","32b47a2c":"code","13af7c5b":"code","96f2527e":"code","14d523b4":"code","4508818f":"code","e1b8c8f0":"code","b550e7dc":"code","096e56ca":"code","5026f7fa":"code","2fc61656":"code","9d8a6006":"code","56f1a352":"code","954c495c":"markdown","1e8855c3":"markdown","dccceb77":"markdown","05ef1f3c":"markdown","889c8d9f":"markdown","4a6a28c1":"markdown","337ebaa1":"markdown","956411d2":"markdown","9e78b772":"markdown","366b5482":"markdown","5ed2fedd":"markdown","1fd70ba7":"markdown","1c3a2e00":"markdown","d5e0bc21":"markdown","fc53aead":"markdown","6612f4de":"markdown","454bab1e":"markdown","c617fc67":"markdown","97b0fea4":"markdown","35f125aa":"markdown","ed46a733":"markdown","1a49fcdc":"markdown","75ca83b5":"markdown","6082a14c":"markdown","b5b4cec2":"markdown","d0ae81b2":"markdown","70f3eba1":"markdown","530c7a86":"markdown","afc4941e":"markdown"},"source":{"719f72cd":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.colors as mcolors\nimport seaborn as sns\nimport plotly.offline as py\nimport plotly.graph_objs as go\nfrom scipy import stats\nfrom scipy.stats import norm, skew\nfrom scipy.special import boxcox1p\nfrom sklearn.preprocessing import LabelEncoder,OneHotEncoder\nfrom imblearn.over_sampling import SMOTE\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import f1_score\nfrom sklearn.model_selection import KFold\nfrom sklearn.model_selection import GridSearchCV,RandomizedSearchCV\nfrom catboost import CatBoostClassifier\n\nimport warnings\nwarnings.filterwarnings('ignore')","2618fcdf":"\n# Reading relevant data from the files\nhr_train=pd.read_csv('..\/input\/hr-analytics-job-change-of-data-scientists\/aug_train.csv')\nhr_test=pd.read_csv('..\/input\/hr-analytics-job-change-of-data-scientists\/aug_test.csv')\nhr_train.head()","148c864f":"print(f'Train_shape: {hr_train.shape}')\nprint(f'Test_shape:  {hr_test.shape}')","7fc5d625":"hr_train.columns","8bac0b3e":"hr_train.isnull().sum()","aebf4325":"hr_train['enrollee_id'].nunique()","92a1bc38":"hr_train.set_index('enrollee_id',inplace=True)\nhr_test.set_index('enrollee_id',inplace=True)","f6b121c1":"# hr_train['city']=hr_train['city'].apply(lambda x:x.split('_')[1])\n# hr_test['city']=hr_test['city'].apply(lambda x:x.split('_')[1])","a320f029":"hr_train['gender'].value_counts(normalize=True)","d021ec42":"hr_train['gender'].fillna('Male',inplace=True)\nhr_test['gender'].fillna('Male',inplace=True)","b5040308":"hr_train['enrolled_university'].value_counts(normalize=True)","61cac27c":"hr_train['enrolled_university'].fillna('no_enrollment',inplace=True)\nhr_test['enrolled_university'].fillna('no_enrollment',inplace=True)","3e61efa0":"hr_train['education_level'].value_counts(normalize=True)","881a1266":"hr_train['education_level'].fillna(method='ffill',inplace=True)\nhr_test['education_level'].fillna(method='ffill',inplace=True)","40dd74c3":"hr_train['major_discipline'].value_counts(normalize=True)","2cf44434":"hr_train['major_discipline'].fillna('STEM',inplace=True)\nhr_test['major_discipline'].fillna('STEM',inplace=True)","8b07aa2f":"hr_train['experience'].value_counts(normalize=True)","ac133e7f":"hr_train['experience'].fillna(method='ffill',inplace=True)\nhr_test['experience'].fillna(method='ffill',inplace=True)","9c85f5f0":"#### Company Size\nhr_train['company_size'].value_counts(normalize=True)","498a8949":"hr_train['company_size'].fillna(method='bfill',inplace=True)\nhr_test['company_size'].fillna(method='bfill',inplace=True)","d2419453":"hr_train['company_type'].value_counts(normalize=True)","ba322d18":"hr_train['company_type'].fillna('Pvt Ltd',inplace=True)\nhr_test['company_type'].fillna('Pvt Ltd',inplace=True)","f4841e27":"hr_train['last_new_job'].value_counts(normalize=True)","a364f391":"hr_train['last_new_job'].fillna(method='ffill',inplace=True)\nhr_test['last_new_job'].fillna(method='ffill',inplace=True)","a47a4b58":"hr_train.dropna(inplace=True)\nhr_train.isnull().sum()","5e39ebf2":"hr_train.describe(include='all')","5addfec0":"## seggregating columns into numeric, ordinal and categorical types\n\nnum_cols=list(hr_train.select_dtypes(include=['int64','float64']).dtypes.index)\nord_cols=['experience','education_level','company_size','last_new_job']\ncat_cols=[x for x in hr_train.columns if x not in num_cols and x not in ord_cols]\nnum_cols.remove('target')","7d0779bb":"plt.figure(figsize=(15,8))\nsns.pairplot(hr_train,hue='target',markers=['s','o'],diag_kind='hist')","bbc45f6e":"# checking cardinality of the categorical columns\nfor col in cat_cols:\n    print(f'{col}: {hr_train[col].nunique()}')","b48a5693":"plt.figure(figsize=(10,8))\nsns.clustermap(hr_train.corr(),annot = True)\nplt.show()","f7531ed0":"# checking distribution of the target column\nsns.countplot(hr_train['target'])","f5971950":"i=1\nplt.figure(figsize=(20,15))\ncol1=['burlywood','lime','mintcream','aquamarine','turquoise','paleturquoise']\nfor col in cat_cols:\n    plt.subplot(2,3,i)\n    labels=list(hr_train[col].value_counts().index)\n    values=list(hr_train[col].value_counts().values)\n    plt.pie(x=values,autopct='%.1f%%',labels=labels,pctdistance=0.5,colors=col1)\n    plt.title(col,fontsize=20)\n    i+=1","1e3b0887":"i=1\nplt.figure(figsize=(20,15))\n\nfor col in ord_cols:\n    plt.subplot(2,2,i)\n    labels=list(hr_train[col].value_counts().index)\n    values=list(hr_train[col].value_counts().values)\n    plt.pie(x=values,autopct='%.1f%%',labels=labels,pctdistance=0.5,colors=col1)\n    plt.title(col,fontsize=20)\n    i+=1","237ad7ce":"oh1=OneHotEncoder(handle_unknown='ignore')\ntrain_cat=oh1.fit_transform(hr_train[cat_cols])\ntest_cat=oh1.transform(hr_test[cat_cols])\nf_names=[j for i in oh1.categories_ for j in i]\n","8c2d0560":"# Experience\nordinal_experience = {'<1':0, '1':1, '2':2, '3':3, '4':4, '5':5, '6':6, '7':7, '8':8, '9':9, '10':10,\n                      '11':11, '12':12, '13':13, '14':14, '15':15, '16':16, '17':17, '18':18, '19':19, '20':20, '>20':21}\nhr_train['experience']=hr_train['experience'].map(ordinal_experience)\nhr_test['experience']=hr_test['experience'].map(ordinal_experience)","2b2ecf53":"# company size\nordinal_company_size = {'<10':0, '10\/49':1, '50-99':2, '100-500':3, '500-999':4, '1000-4999':5, '5000-9999':6, '10000+':7}\nhr_train['company_size']=hr_train['company_size'].map(ordinal_company_size)\nhr_test['company_size']=hr_test['company_size'].map(ordinal_company_size)","15a7c1b9":"##education level\nordinal_education_level = {'Primary School':0, 'High School':1, 'Graduate':2, 'Masters':3, 'Phd':4}\nhr_train['education_level']=hr_train['education_level'].map(ordinal_education_level)\nhr_test['education_level']=hr_test['education_level'].map(ordinal_education_level)","4888c5cb":"## last_new_job\nordinal_last_new_job = {'never':0, '1':1, '2':2, '3':3, '4':4, '>4':5}\nhr_train['last_new_job']=hr_train['last_new_job'].map(ordinal_last_new_job)\nhr_test['last_new_job']=hr_test['last_new_job'].map(ordinal_last_new_job)","b1f44362":"ms=MinMaxScaler()\ntrain_ord=ms.fit_transform(hr_train[ord_cols])\ntest_ord=ms.transform(hr_test[ord_cols])","af43b748":"train_num=ms.fit_transform(hr_train[num_cols])\ntest_num=ms.transform(hr_test[num_cols])","6dc282b0":"#Joining the arrays \nfeature_names=f_names+ord_cols+num_cols\n\nX=np.concatenate([train_cat.toarray(),train_ord,train_num],axis=1)\ny=hr_train['target']\n\nfeatures_test=np.concatenate([test_cat.toarray(),test_ord,test_num],axis=1)\n\n","f8945341":"sm=SMOTE(random_state=21)\nX,y=sm.fit_resample(X,y)","fb256bdc":"#Train-test-split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.9,random_state=23)","5c20d915":"# Baseline model\nlr1=LogisticRegression()\nlr1.fit(X_train,y_train)\npred=lr1.predict(X_test)\nprint(f1_score(y_test,pred))","97fe45c4":"# Random Forest classifier\nrf=RandomForestClassifier(random_state=23,n_jobs=3)\n\nkf=KFold(n_splits=5,shuffle=True,random_state=23)\np_grid={'n_estimators':[300,600],\n            'max_depth':[5,7,9],\n            'max_features':[0.2,0.6],\n            'min_samples_leaf':[5,7,11]\n           }\nrf_grid=RandomizedSearchCV(rf,param_distributions=p_grid,cv=kf)","32b47a2c":"%%time\nrf_grid.fit(X_train,y_train)","13af7c5b":"rf_grid.best_params_","96f2527e":"pred=rf_grid.predict(X_test)\nf1_score(y_test,pred)","14d523b4":"## catboost\nparams = {\n        'subsample': [0.6, 0.8, 1.0],\n        'max_depth': [3, 4, 5]\n        }","4508818f":"xgb = CatBoostClassifier(learning_rate=0.02, n_estimators=600, verbose = False)","e1b8c8f0":"folds = 3\nparam_comb = 5\n\nskf = KFold(n_splits=folds, shuffle = True, random_state = 1001)\n\nrandom_search = RandomizedSearchCV(xgb, param_distributions=params, n_iter=param_comb, scoring='roc_auc', n_jobs=4, cv=skf.split(X_train,y_train), verbose=3, random_state=42)\n","b550e7dc":"%%time\nrandom_search.fit(X_train, y_train)","096e56ca":"random_search.best_params_","5026f7fa":"model = CatBoostClassifier(learning_rate=0.02, n_estimators=600, verbose = False, subsample = 1, max_depth = 5)\nmodel.fit(X_train,y_train)\ny_pred = model.predict(X_test)\nprint(f1_score(y_test,y_pred))","2fc61656":"# Probabilities that a candidate will work for the company=probality of class 0\nmodel.predict_proba(features_test)[:,0]","9d8a6006":"# Feature Importances\nf_importances=pd.DataFrame()\nf_importances['feature_names']=feature_names\nf_importances['Coefficients']=model.feature_importances_\nf_importances=f_importances.sort_values(by='Coefficients',ascending=True).set_index('feature_names')\n","56f1a352":"f_importances[f_importances['Coefficients']>=0.1].plot.barh(figsize=(10,8))\nplt.xlabel('Feature Importances')\n","954c495c":"#### experience","1e8855c3":"#### company_type","dccceb77":"#### Gender","05ef1f3c":"#### Numeric variables","889c8d9f":"## Feature Description\n\nenrollee_id : Unique ID for candidate\n\ncity: City code\n\ncity_ development _index : Developement index of the city (scaled)\n\ngender: Gender of candidate\n\nrelevent_experience: Relevant experience of candidate\n\nenrolled_university: Type of University course enrolled if any\n\neducation_level: Education level of candidate\n\nmajor_discipline :Education major discipline of candidate\n\nexperience: Candidate total experience in years\n\ncompany_size: No of employees in current employer's company\n\ncompany_type : Type of current employer\n\nlastnewjob: Difference in years between previous job and current job\n\ntraining_hours: training hours completed\n\ntarget: 0 \u2013 Not looking for job change, 1 \u2013 Looking for a job change","4a6a28c1":"#### Enrolee ID","337ebaa1":"### **Encoding**","956411d2":"#### OneHot encoding","9e78b772":"#### Education level","366b5482":"#### Ordinal encoding","5ed2fedd":"#### City","1fd70ba7":"here, the levels are more distributed, so missing values will be filled with nearest valid observation","1c3a2e00":"### Model Building","d5e0bc21":"#### Enrolled University","fc53aead":"Observations are spread among different classes. Nearest value will be used to impute missing values","6612f4de":"Nearest value will be used to fill missing observations","454bab1e":"73% values in this column is no_enrollment. So missing values will be imputed with this value","c617fc67":"#### Upsampling and train-test-split","97b0fea4":"#### plotting categorical variables","35f125aa":" 88% values here are STEM. Same will be used for imputing missing values","ed46a733":"I borrowed some ideas from https:\/\/www.kaggle.com\/cemhansenol98\/xgboost-prediction-eda-and-pivottablejs","1a49fcdc":"## Data Cleaning","75ca83b5":"#### plotting ordinal variables ","6082a14c":"Enrollee ID has no useful information and can be dropped. I'll set it as index column","b5b4cec2":"#### Major Discipline","d0ae81b2":"#### last new job","70f3eba1":"90% values in this column is Male. So all missing values will be assumed to be Male","530c7a86":"So correlation between the target and numerical features is not very strong","afc4941e":"## EDA"}}