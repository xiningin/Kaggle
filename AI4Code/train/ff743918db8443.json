{"cell_type":{"1990965d":"code","b1b18518":"code","f6960840":"code","c0232e05":"code","fd2f4003":"code","92bd8221":"code","8eb9597d":"code","dbfa8807":"code","dbb8ae15":"code","b85312d9":"code","99299453":"code","d8816e15":"code","e2d1ab2b":"code","a952a11e":"code","70f6b689":"code","02ba36f5":"code","c0ba5ae8":"code","c858eb05":"code","c152c519":"code","56421062":"code","ff1adf6a":"code","f6d482bb":"code","1a709b5c":"code","2d28a44f":"code","f301c40b":"code","5ba71ece":"code","e08f5c16":"code","556017ff":"code","e8e423ad":"code","4985f84f":"code","9639ca3d":"code","c47ba324":"code","040b330a":"code","34ec9646":"code","66949003":"code","47c26f99":"code","3041ce57":"code","70d62cdd":"code","8413de30":"code","099414ba":"code","4725c064":"code","9f94b4b5":"code","b3d533ba":"code","006ca63f":"code","677f14d6":"code","ce9e6129":"code","9a2388cf":"code","2af563ae":"code","839ef0c3":"code","a761a528":"code","2b657673":"code","41c17834":"code","84cdb0fa":"code","cfce95b2":"code","cc27c6eb":"code","c8f6a5e7":"code","de9d2ce8":"code","aa485b92":"code","ca8bdbf0":"code","1776a454":"code","288f7cdb":"code","a60bfb12":"code","8ce73659":"code","7541aede":"code","1289c829":"code","cd0098be":"code","945b489e":"code","3c15b92a":"code","42719757":"code","d134d90b":"code","e503dd10":"code","18a37756":"code","c48de288":"code","dded2317":"code","e9dfb86e":"code","d9f3d0cc":"code","06d474ab":"code","30d2965e":"code","db490c8c":"code","4b905178":"code","c11a86b9":"code","21064a50":"code","10bbb3c1":"markdown","041ac70a":"markdown","13559df6":"markdown","7fa84f49":"markdown","0547691a":"markdown","f1aaf80e":"markdown","a7f38f6a":"markdown","b5a2a1a4":"markdown","88361d5f":"markdown","73a953af":"markdown","7747e0aa":"markdown","50b02a43":"markdown","b9a39ca3":"markdown","9df876f7":"markdown","8803fa88":"markdown","cf141388":"markdown","e9ecafd2":"markdown","1394ca2c":"markdown"},"source":{"1990965d":"import pandas as pd\nimport numpy as np\ncompanies = pd.read_csv('..\/input\/companydata\/companies.csv',encoding= 'unicode_escape', engine = 'python')\nrounds2 = pd.read_csv('..\/input\/spark-fund-investment-analysis\/datasets\/rounds2.csv',encoding= 'unicode_escape', engine = 'python')","b1b18518":"companies.head()","f6960840":"companies.info()","c0232e05":"rounds2.head()","fd2f4003":"rounds2.info()","92bd8221":"rounds2.isnull().sum()","8eb9597d":"companies.isnull().sum()","dbfa8807":"rounds2['company_permalink'] = rounds2['company_permalink'].str.lower().str.encode('ISO-8859-1').str.decode('ascii','ignore')\ncompanies['permalink'] = companies['permalink'].str.lower().str.encode('ISO-8859-1').str.decode('ascii','ignore')","dbb8ae15":"# How many unique companies are present in rounds2?\nprint(rounds2.company_permalink.unique().size)\n\n# another way -1 len(set(rounds2['company_permalink'].values.tolist()))\n# another way -2 rounds2['company_permalink'].describe()\n# another way -3 duplicate_comp_rounds2 = rounds2[rounds2.duplicated('company_permalink')]\n# len(rounds2)-len(duplicate_comp_rounds2)","b85312d9":"print(companies.permalink.unique().size)\nlen(set(companies['permalink'].values.tolist()))\n\n#companies['company_permalink'].describe()\n# duplicate_comp = companies[companies.duplicated('permalink')]\n# duplicate_comp","99299453":"# Are there any companies in the rounds2 file which are not present in companies? Answer yes or no: Y\/N -- N\n\ndifferance = set(rounds2['company_permalink'].values.tolist())-set(companies['permalink'].values.tolist())\nlen(differance)\ndiff_companies_with_rounds = set(companies['permalink'].values.tolist()) - set(rounds2['company_permalink'].values.tolist())\nlen(diff_companies_with_rounds)","d8816e15":"#Merge the two data frames so that all variables (columns) in the companies frame are added to the rounds2 data frame. \n#Name the merged frame master_frame. How many observations are present in master_frame?\n# Ans - 114949\nmaster_frame = pd.merge(rounds2,companies, left_on=rounds2['company_permalink'], right_on=companies['permalink'], how='inner')\nmaster_frame.shape","e2d1ab2b":"master_frame.isnull().sum()","a952a11e":"# summing up the missing values (column-wise) and displaying fraction of NaNs\nround(100*(master_frame.isnull().sum()\/len(master_frame.index)), 2)","70f6b689":"# removing redundant columns\nmaster_frame =  master_frame.drop(['key_0','state_code', 'region', 'city', 'founded_at','funding_round_permalink',\n       'funding_round_code', 'funded_at','name','homepage_url','status'], axis=1)\n","02ba36f5":"round(100*(master_frame.isnull().sum()\/len(master_frame.index)), 2)","c0ba5ae8":"master_frame = master_frame[master_frame.funding_round_type.isin(['venture','angel','seed','private_equity'])]\n#master_frame_mrv_sub = master_frame_mrv.loc[:,['funding_round_type','raised_amount_usd']]\n#master_frame_mrv_sub.head()\n#master_frame_mrv_sub.groupby(master_frame_mrv_sub['funding_round_type'])['raised_amount_usd'].mean().round(1)\nmaster_frame.head()","c858eb05":"round(100*(master_frame.isnull().sum()\/len(master_frame.index)), 2)","c152c519":"master_frame.raised_amount_usd.describe()","56421062":"# converting in mn$\nmaster_frame['raised_amount_usd'] = master_frame['raised_amount_usd'].apply(lambda x:x\/1000000).round(1)\nmaster_frame['raised_amount_usd']","ff1adf6a":"master_frame.raised_amount_usd.describe()","f6d482bb":"import matplotlib.pyplot as plt \nimport seaborn as sns\n%matplotlib inline","1a709b5c":"master_frame.loc[~(master_frame.raised_amount_usd.isnull())]['raised_amount_usd']","2d28a44f":"#Create a box plot for the raised_amount_usd column\nplt.boxplot(master_frame.loc[~(master_frame.raised_amount_usd.isnull())]['raised_amount_usd'])\nplt.show()","f301c40b":"master_frame = master_frame.loc[~(master_frame.raised_amount_usd.isnull() | master_frame.category_list.isnull() | master_frame.country_code.isnull() )]\nmaster_frame.shape","5ba71ece":"master_frame_funding_Type = master_frame\nmaster_frame_funding_Type.shape","e08f5c16":"round(100*(master_frame.isnull().sum()\/len(master_frame.index)), 2)","556017ff":"master_frame.funding_round_type.value_counts()","e8e423ad":"\nmaster_frame.groupby(master_frame['funding_round_type'])['raised_amount_usd'].mean().round(2)","4985f84f":"#filter data for venture type only\n\nmaster_frame_venture = master_frame.loc[(master_frame.funding_round_type == 'venture')]\nmaster_frame_venture.shape","9639ca3d":"top9 = pd.pivot_table(data=master_frame_venture,index=\"country_code\", values=\"raised_amount_usd\", aggfunc=sum)\ntop9 = top9.sort_values(by='raised_amount_usd', ascending=False)\ntop9 = top9.iloc[:9,:].round(1)\ntop9\n#in mn\n\n# master_frame_venture.loc[(master_frame_venture.country_code=='JPN')]['raised_amount_usd'].sum()\/1000000","c47ba324":"top9.raised_amount_usd = top9.raised_amount_usd.astype(\"int64\")\ntop9\n","040b330a":"# English speaking countries. China we can removed from top 3\n\nmaster_frame_venture_en_top3 = master_frame_venture.loc[(master_frame_venture.country_code=='USA')\n                                                        |(master_frame_venture.country_code=='IND')\n                                                        |(master_frame_venture.country_code=='GBR')]","34ec9646":"master_frame = master_frame_venture_en_top3\nmaster_frame.shape","66949003":"master_frame['category_list'] = master_frame['category_list'].str.split('|').str[0].str.lower()\nmaster_frame.shape\nmaster_frame.info()","47c26f99":"import chardet\nwith open(\"..\/input\/spark-fund-investment-analysis\/datasets\/mapping.csv\", 'rb') as rawdata:\n    result = chardet.detect(rawdata.read(10000))\n\n# check what the character encoding might be\nprint(result)","3041ce57":"mapping = pd.read_csv('..\/input\/spark-fund-investment-analysis\/datasets\/mapping.csv',encoding= 'ascii', engine = 'python')\n#mapping['main_category'] = mapping.dot(mapping.columns+',').str[:-1]\nmapping.head()","70d62cdd":"mapping.info()","8413de30":"mapping.category_list","099414ba":"wide_df = pd.DataFrame(mapping)\nwide_df\n\n# store the value and id variables in two separate arrays\n\n# store the value variables in one Series\nvalue_vars = list(wide_df.columns[1:])\n\n# take the setdiff() to get the rest of the variables\nid_vars = list(np.setdiff1d(wide_df.columns, value_vars))\n\nprint(value_vars, \"\\n\")\nprint(id_vars)","4725c064":"# convert into long\nlong_df = pd.melt(wide_df, \n        id_vars = id_vars, \n        value_vars = value_vars)\nlong_df","9f94b4b5":"# remove rows having value=0\nlong_df = long_df[long_df['value']==1]\nlong_df = long_df.drop('value', axis=1)\nlong_df","b3d533ba":"# renaming the 'variable' column\nlong_df = long_df.rename(columns={'variable': 'main_sector'})\nlong_df","006ca63f":"mapping = long_df\nmapping.category_list = mapping.category_list.str.lower()\nmapping\n","677f14d6":"mapping.loc[(mapping.category_list == 'enterprise 2.na')]","ce9e6129":"# Replacing 0 with na i.e A0lytics to Analytics\nmapping.category_list = mapping.category_list.str.replace('0','na')\nmapping.category_list = mapping.category_list.str.replace('2.na','2.0')\n\n# Lower case for master_frame['category_list'] so that no merging issue \nmaster_frame['category_list']=master_frame['category_list'].str.lower()\nmaster_frame = master_frame.merge(mapping, on='category_list', how='left')\nmaster_frame.shape\n","9a2388cf":"master_frame.info()","2af563ae":"master_frame.head()","839ef0c3":"master_frame.loc[(master_frame.main_sector.isnull())]['category_list'].value_counts()\n","a761a528":"master_frame.head()","2b657673":"# the range of funding preferred by Spark Funds is 5 to 15 million USD\nmaster_frame = master_frame.loc[(master_frame.raised_amount_usd<=15)&(master_frame.raised_amount_usd>=5)]\nmaster_frame.shape","41c17834":"master_frame.isnull().sum()","84cdb0fa":"## Removing null value\n\nmaster_frame = master_frame.loc[~(master_frame.main_sector.isnull())]\nmaster_frame.isnull().sum()","cfce95b2":"d1 = master_frame.loc[(master_frame.country_code=='USA')]\nd2 = master_frame.loc[(master_frame.country_code=='GBR')]\nd3 = master_frame.loc[(master_frame.country_code=='IND')]\nd1.head()","cc27c6eb":"d2.head()","c8f6a5e7":"d3.head()","de9d2ce8":"res_d1 = d1.groupby(d1['main_sector'])\nres_d1\n#d1 = d1.merge(res_d1,how='left', on='main_sector')\n#d1","aa485b92":"#Total number of investments (count)\n\nprint(d1.main_sector.value_counts().sum())\nprint(d2.main_sector.value_counts().sum())\nprint(d3.main_sector.value_counts().sum())","ca8bdbf0":"#d1['main_sector_raised_amount_usd'] = d1.groupby(d1['main_sector'])['raised_amount_usd'].sum()\nres_d1 = d1.groupby(d1['main_sector'])['raised_amount_usd'].sum()","1776a454":"res_d3 = d3.groupby(d3['main_sector'])['raised_amount_usd'].sum()","288f7cdb":"res_d2 = d2.groupby(d2['main_sector'])['raised_amount_usd'].sum()","a60bfb12":"#Total amount of investment (USD)\n\nprint(res_d1.sum().round(2))\nprint(res_d2.sum().round(2))\nprint(res_d3.sum().round(2))","8ce73659":"# Top sector (based on count of investments)\n\nd1_pivot = pd.pivot_table(data=d1,values=\"raised_amount_usd\",index=\"main_sector\", aggfunc=[sum,'count'])\nd1_pivot\n#Others\t26405.6\t2961\n#Social, Finance, Analytics, Advertising\t23881.4\t2723\n# Cleantech \/ Semiconductors\t21753.6\t2364","7541aede":"# Top second sector (based on count of investments)\n\nd2_pivot = pd.pivot_table(data=d2,values=\"raised_amount_usd\",index=\"main_sector\", aggfunc=[sum,'count'])\nd2_pivot\n# Others\t1303.9\t149\n# Social, Finance, Analytics, Advertising\t1089.3\t133\n# Cleantech \/ Semiconductors\t1169.1\t131","1289c829":"# Top third (based on count of investments)\n\nd3_pivot = pd.pivot_table(data=d3,values=\"raised_amount_usd\",index=\"main_sector\", aggfunc=[sum,'count'])\nd3_pivot\n# Others\t1013.4\t110\n# Social, Finance, Analytics, Advertising\t550.5\t60\n# News, Search and Messaging\t438.9\t53","cd0098be":"# For the top sector count-wise (point 3), which company received the highest investment?\n\nd1_comp_top1 = d1.loc[(d1.main_sector == 'Others')]\n\nd1_comp_top1_pivot = pd.pivot_table(data=d1_comp_top1,values=\"raised_amount_usd\",index=\"company_permalink\", aggfunc=sum)\n\nd1_comp_top1_pivot = d1_comp_top1_pivot.sort_values(by='raised_amount_usd', ascending= False)\nprint(d1_comp_top1_pivot.head(1))\n\n# For the second top sector count-wise (point 3), which company received the highest investment?\nd1_comp_top2 = d1.loc[(d1.main_sector == 'Social, Finance, Analytics, Advertising')]\n\nd1_comp_top2_pivot = pd.pivot_table(data=d1_comp_top2,values=\"raised_amount_usd\",index=\"company_permalink\", aggfunc=sum)\n\nd1_comp_top2_pivot = d1_comp_top2_pivot.sort_values(by='raised_amount_usd', ascending= False)\nprint(d1_comp_top2_pivot.head(1))\n","945b489e":"d2_comp_top1 = d2.loc[(d2.main_sector == 'Others')]\n\nd2_comp_top1_pivot = pd.pivot_table(data=d2_comp_top1,values=\"raised_amount_usd\",index=\"company_permalink\", aggfunc=sum)\n\nd2_comp_top1_pivot = d2_comp_top1_pivot.sort_values(by='raised_amount_usd', ascending= False)\nprint(d2_comp_top1_pivot.head(1))\n\n# For the second top sector count-wise (point 3), which company received the highest investment?\nd2_comp_top2 = d2.loc[(d2.main_sector == 'Social, Finance, Analytics, Advertising')]\n\nd2_comp_top2_pivot = pd.pivot_table(data=d2_comp_top2,values=\"raised_amount_usd\",index=\"company_permalink\", aggfunc=sum)\n\nd2_comp_top2_pivot = d2_comp_top2_pivot.sort_values(by='raised_amount_usd', ascending= False)\nprint(d2_comp_top2_pivot.head(1))","3c15b92a":"d3_comp_top1 = d3.loc[(d3.main_sector == 'Others')]\n\nd3_comp_top1_pivot = pd.pivot_table(data=d3_comp_top1,values=\"raised_amount_usd\",index=\"company_permalink\", aggfunc=sum)\n\nd3_comp_top1_pivot = d3_comp_top1_pivot.sort_values(by='raised_amount_usd', ascending= False)\nprint(d3_comp_top1_pivot.head(1))\n\n# For the second top sector count-wise (point 3), which company received the highest investment?\nd3_comp_top2 = d3.loc[(d3.main_sector == 'Social, Finance, Analytics, Advertising')]\n\nd3_comp_top2_pivot = pd.pivot_table(data=d3_comp_top2,values=\"raised_amount_usd\",index=\"company_permalink\", aggfunc=sum)\n\nd3_comp_top2_pivot = d3_comp_top2_pivot.sort_values(by='raised_amount_usd', ascending= False)\nprint(d3_comp_top2_pivot.head(1))","42719757":"import matplotlib.pyplot as plt \nimport seaborn as sns\n%matplotlib inline","d134d90b":"\nplot_bar_ft = master_frame_funding_Type.groupby(master_frame_funding_Type['funding_round_type'])['raised_amount_usd'].mean().round(2)\nplot_bar_ft\n##Plot a bar plot of Content Rating vs Average Rating \n#master_frame_funding_Type.groupby(['funding_round_type'])['raised_amount_usd'].mean().plot.barh()\n#plt.show()\n\n# adding Mn to the value\nplot_bar_ft_val = plot_bar_ft.apply(lambda x : str(x) + ' Mn')\nplot_bar_ft_val\n","e503dd10":"import plotly           #(version 4.5.4) #pip install plotly==4.5.4\nimport plotly.express as px\nimport plotly.io as pio\n\n\n\nbarchart = px.bar(\n    data_frame=plot_bar_ft,\n    x=plot_bar_ft.index,\n    y=plot_bar_ft.values,\n    color = plot_bar_ft.index,\n    color_discrete_map={\n                \"angel\": \"skyblue\",\n                \"seed\": \"skyblue\",\n                \"venture\": \"orange\",\n                \"private_equity\": \"skyblue\"}, # differentiate color of marks\n    #opacity=0.9,                  # set opacity of markers (from 0 to 1)\n    orientation=\"v\",              # 'v','h': orientation of the marks\n    labels={\"funding_round_type\":\"Funding Type\",\n    \"y\":\"Avg Investment in Million USD\"}, \n    title='Funding Type Analysis (Avg Investment Funding)',\n    text=plot_bar_ft_val.values,\n    template='presentation',\n)\nbarchart.update_layout(uniformtext_minsize=5, uniformtext_mode='show'),\nbarchart.update_traces(textposition='auto'),\npio.show(barchart)","18a37756":"top9_cntry_ft = master_frame_venture.groupby(\n    master_frame_venture['country_code'])['raised_amount_usd'].sum().apply(lambda t: t\/1000).round(2)\ntop9_cntry_ft = top9_cntry_ft.sort_values(ascending=False)\ntop9_cntry_ft = top9_cntry_ft[:9]\ntype(top9_cntry_ft)\n\ntop9_cntry_ft_val = top9_cntry_ft.apply(lambda x : str(x) + ' Bn')\ntop9_cntry_ft\ntop9_cntry_ft_val","c48de288":"# top9.plot.bar()\n# plt.show()\n\nskyblue = 'Country'\ncolor = ['skyblue' for i in range(9)]\n\nbarchart = px.bar(\n    data_frame=top9_cntry_ft,\n    x=top9_cntry_ft.index,\n    y=top9_cntry_ft.values,\n    color = top9_cntry_ft.index,\n    color_discrete_map={\n                \"USA\": \"orange\",\n                \"GBR\": \"orange\",\n                \"IND\": \"orange\",\n                \"CHN\": \"red\",\n                \"ISR\": \"skyblue\",\n                \"DEU\": \"skyblue\",\n                \"JPN\": \"skyblue\",\n                \"FRA\": \"skyblue\",\n                \"CAN\": \"skyblue\"},\n    # differentiate color of marks\n    #opacity=0.9,                  # set opacity of markers (from 0 to 1)\n    orientation=\"v\",              # 'v','h': orientation of the marks\n    labels={\"country_code\":\"Countries\",\n    \"y\":\"Total Investment in Billion USD\"}, \n    title='Total Venture FT Investment(Billion USD) by Country',\n    text=top9_cntry_ft_val.values,\n    template='presentation',\n)\nbarchart.update_layout(uniformtext_minsize=5, uniformtext_mode='show'),\nbarchart.update_traces(textposition='outside'),\npio.show(barchart)","dded2317":"# d1_pivot['count'].plot.bar()\n# plt.show()\n# d2_pivot['count'].plot.bar()\n# plt.show()\n# d3_pivot['count'].plot.bar()\n# plt.show()\n\n","e9dfb86e":"d1_USA_Venture_Main_Sector = d1.groupby(d1['main_sector'])['funding_round_type'].count()\nd1_USA_Venture_Main_Sector = d1_USA_Venture_Main_Sector.sort_values(ascending=False)\nd1_USA_Venture_Main_Sector","d9f3d0cc":"# Best Sector - USA (By Count of Investment\nbarchart = px.bar(\n    data_frame=d1_USA_Venture_Main_Sector,\n    x=d1_USA_Venture_Main_Sector.index,\n    y=d1_USA_Venture_Main_Sector.values,\n    color=d1_USA_Venture_Main_Sector.index,\n    color_discrete_map={\n                \"Social, Finance, Analytics, Advertising\": \"green\",\n                \"News, Search and Messaging\": \"skyblue\",\n                \"Others\": \"skyblue\",\n                \"Entertainment\": \"skyblue\",\n                \"Manufacturing\": \"skyblue\",\n                \"Health\": \"skyblue\",\n                \"Cleantech \/ Semiconductors\": \"green\",\n                \"Automotive & Sports\": \"skyblue\"},\n    # differentiate color of marks\n    #opacity=0.9,                  # set opacity of markers (from 0 to 1)\n    orientation=\"v\",              # 'v','h': orientation of the marks\n    labels={\"main_sector\":\"Main Sectors\",\n    \"y\":\"Total Count of Investment\"}, \n    title='Best Sector By Count of Investment - USA',\n    text=d1_USA_Venture_Main_Sector.values,\n    template='plotly',\n)   \npio.show(barchart)\n","06d474ab":"d2_GBR_Venture_Main_Sector = d2.groupby(\n    d2['main_sector'])['funding_round_type'].count()\nd2_GBR_Venture_Main_Sector = d2_GBR_Venture_Main_Sector.sort_values(ascending=False)\nd2_GBR_Venture_Main_Sector","30d2965e":"barchart = px.bar(\n    data_frame=d2_GBR_Venture_Main_Sector,\n    x=d2_GBR_Venture_Main_Sector.index,\n    y=d2_GBR_Venture_Main_Sector.values,\n    color=d2_GBR_Venture_Main_Sector.index,\n    color_discrete_map={\n                \"Social, Finance, Analytics, Advertising\": \"green\",\n                \"News, Search and Messaging\": \"skyblue\",\n                \"Others\": \"skyblue\",\n                \"Entertainment\": \"skyblue\",\n                \"Manufacturing\": \"skyblue\",\n                \"Health\": \"skyblue\",\n                \"Cleantech \/ Semiconductors\": \"green\",\n                \"Automotive & Sports\": \"skyblue\"},# differentiate color of marks\n    #opacity=0.9,                  # set opacity of markers (from 0 to 1)\n    orientation=\"v\",              # 'v','h': orientation of the marks\n    labels={\"main_sector\":\"Main Sectors\",\n    \"y\":\"Total Count of Investment\"}, \n    title='Best Sector By Count of Investment - GBR',\n    text=d2_GBR_Venture_Main_Sector.values,\n   # width=600,                   # figure width in pixels\n    #height=420, \n    template='plotly',\n)   \npio.show(barchart)","db490c8c":"d3_IND_Venture_Main_Sector = d3.groupby(\n    d3['main_sector'])['funding_round_type'].count()\nd3_IND_Venture_Main_Sector = d3_IND_Venture_Main_Sector.sort_values(ascending=False)\nd3_IND_Venture_Main_Sector","4b905178":"barchart = px.bar(\n    data_frame=d3_IND_Venture_Main_Sector,\n    x=d3_IND_Venture_Main_Sector.index,\n    y=d3_IND_Venture_Main_Sector.values,\n    color=d3_IND_Venture_Main_Sector.index,\n    color_discrete_map={\n                \"Social, Finance, Analytics, Advertising\": \"green\",\n                \"News, Search and Messaging\": \"green\",\n                \"Others\": \"skyblue\",\n                \"Entertainment\": \"skyblue\",\n                \"Manufacturing\": \"skyblue\",\n                \"Health\": \"skyblue\",\n                \"Cleantech \/ Semiconductors\": \"skyblue\",\n                \"Automotive & Sports\": \"skyblue\"},# differentiate color of marks\n    #opacity=0.9,                  # set opacity of markers (from 0 to 1)\n    orientation=\"v\",              # 'v','h': orientation of the marks\n    labels={\"main_sector\":\"Main Sectors\",\n    \"y\":\"Total Count of Investment\"}, \n    title='Best Sector By Count of Investment - IND',\n    text=d3_IND_Venture_Main_Sector.values,\n    template='plotly',\n)   \npio.show(barchart)","c11a86b9":"# Calculate Year range for which we are analyzing dataset. it will tell us the given data set has teh range of this year to analyze\n\ndate = companies['founded_at'].loc[~(companies['founded_at'].isnull())].values\nyear = list(map(lambda x: int(str(x).split('-')[-1]), date))\n\nyear = list(map(lambda x: x if 1800 < x < 2020 else 2000, year))\nyear\nprint(min(year))\nprint(max(year))\n\n","21064a50":"# to check how many discrete Countries to Analyze\n\ncompanies['country_code'].unique().size","10bbb3c1":"#### A plot showing the representative amount of investment in each funding type. This chart should make it clear that a certain funding type (FT) is best suited for Spark Funds.","041ac70a":"####  A plot showing the number of investments in the top 3 sectors of the top 3 countries on one chart (for the chosen investment type FT). This plot should clearly display the top 3 sectors each in Country 1, Country 2, and Country 3.","13559df6":"#### As part of Data cleaning on Mapping Dataset\n\n[NOTE]: when you analyze the mapping dataset  you will found some weird data it seems some issue in the data. like Analytics was A0lytics. \n\nwhen i did merge and check for null i found below result. how analytics come as NaN. then i checked my mapping file and found that Analytics was A0lytics\n\nsame thing was happening for some other category like Finance = Fi0nce means 0 = na \n\nAnalytics                          1334\nFinance                             561\nNanotechnology                      141\nFinancial Services                  105\n\n#then 141 records for Nanotechnology got failed we have to lower the case for category_list\n\nenterprise 2.0                     4\nadaptive equipment                 2\nretirement                         2\nracing                             1\n\ncode to check after merging -- master_frame.loc[(master_frame.main_category.isnull())]['category_list'].value_counts()\n\n","7fa84f49":"<h1><font color='skyblue'>Spark Funds Investment Data Analysis EDA Assignment<\/font> <\/h1>\n\n---\n\n## Business Objective\n\nThe objective is to identify the best sectors, countries, and a suitable investment type for making investments. The overall strategy is to invest where others are investing, implying that the 'best' sectors and countries are the ones 'where most investors are investing\u2019.\n\n#### Business Condition\n<li>\ninvest between 5 to 15 million USD per round of investment<\/li>\n <li>English-speaking countries\n<\/li>\n","0547691a":"## Conclusion\n\n---\n\nLets extract some information from the dataset which will help in the PPT","f1aaf80e":"## Checkpoint 6: Plots\n\n---\n\nAs a final step, you have to present your findings to the CEO of Spark Funds. Specifically, she wants to see the following plots:\n\n \n\n1. A plot showing the representative amount of investment in each funding type. This chart should make it clear that a certain funding type (FT) is best suited for Spark Funds.   \n\n2. A plot showing the top 9 countries against the total amount of investments of funding type FT. This should make the top 3 countries (Country 1, Country 2, and Country 3) very clear.                                                                                                                                                                             \n\n3. A plot showing the number of investments in the top 3 sectors of the top 3 countries on one chart (for the chosen investment type FT). This plot should clearly display the top 3 sectors each in Country 1, Country 2, and Country 3.","a7f38f6a":"## Checkpoint 1: Data Cleaning 1\n\n\n    1. How many unique companies are present in rounds2?\n    2. How many unique companies are present in companies?                      \n    3. In the companies data frame, which column can be used as the unique key for each company? \n       Write the name of the column.\n    4. Are there any companies in the rounds2 file which are not present in companies? Answer yes or no: Y\/N \n    5. Merge the two data frames so that all variables (columns) in the companies frame are added to the rounds2 \n       data frame. Name the merged frame master_frame. How many observations are present in master_frame?\n       \n[NOTE:] As you can see permalink is the unique key for the table. to make you confuse there is company name as well. but if you see the example of Agora. you will find even though name is same but they deal with different category and got different funding type and amount.\n\n[NOTE:] Lowercase everything to get unique \n\n[NOTE:] you will still see some encoding issue like aeron, asys round2 csv \" \u00e4\u00b0novatiff-reklam-ve-tan\u00e4\u00b1t\u00e4\u00b1m-hizmetleri-tic\". below 2 links will give more knowledge on encoding decoding \n1. upGrad Prep Course Module 4 session 4\n2. https:\/\/docs.python.org\/3.3\/howto\/unicode.html","b5a2a1a4":"## Checkpoint 3: Country Analysis\n\n---\n1. Spark Funds wants to see the top nine countries which have received the highest total funding (across ALL sectors for the chosen investment type)\n\n2. For the chosen investment type, make a data frame named top9 with the top nine countries (based on the total investment amount each country has received)\n\n \n\nIdentify the top three English-speaking countries in the data frame top9.","88361d5f":"##### --------Let's Begin ----------#####","73a953af":" Its look like we can not impute missing column with any value so better to remove them \n \n ","7747e0aa":"### 1. Data Understanding\/Exploration\n\npd.read_csv function works normally but depends on the file we are parsing we need to use proper encoding and engine.\nhere you will get utf-8' codec can't decode byte 0xa0 in position 25: invalid start byte error which simply says encoding is wrong.\n    https:\/\/docs.python.org\/3\/library\/codecs.html#standard-encodings\n    https:\/\/stackoverflow.com\/questions\/22216076\/unicodedecodeerror-utf8-codec-cant-decode-byte-0xa5-in-position-0-invalid-s\n    https:\/\/stackoverflow.com\/questions\/18171739\/unicodedecodeerror-when-reading-csv-file-in-pandas-with-python\n    https:\/\/docs.python.org\/3.3\/howto\/unicode.html\n    \n    Then we will do some basic operation to get look and feel of the data\n    - companies.head() -- Top 5 records \n    - companies.info() -- Basic details, column names, not nulls, type\n    - rounds2.isnull().sum() -- To check total null values by column \n    - Describe() - to. check mean mode median etc data points\n\nimport chardet\nwith open(\"projects.csv\", 'rb') as rawdata:\n    result = chardet.detect(rawdata.read(10000))\n\n--check what the character encoding might be good\nprint(result)\n    ","50b02a43":"#### Changing from wide format to long format pd.melt()\n\n#### Parameters\n    ----------\n    id_vars : tuple, list, or ndarray, optional\n        Column(s) to use as identifier variables.\n    value_vars : tuple, list, or ndarray, optional\n        Column(s) to unpivot. If not specified, uses all columns that\n        are not set as `id_vars`.\n        \n[NOTE] : Same u can achieve by dot function as well\n\ndf1 = mapping.iloc[:,1:].dot(mapping.iloc[:,1:].columns)\n\nmapping['main_category'] = df1\n\nmapping = mapping.loc[:,['category_list','main_category']]\n\n","b9a39ca3":" ## Checkpoint 5: Sector Analysis 2\n \n ---\n \n<li> Create three separate data frames D1, D2 and D3 for each of the three countries containing the observations of funding type FT falling within the 5-15 million USD range. \n    <li> The three data frames should contain all the columns of the master_frame along with the main sector and the primary sector. \n        <li> Using the three data frames, you can calculate the total number of investments and the total amount of investments in each main sector for each of the three countries.","9df876f7":"#### A plot showing the top 9 countries against the total amount of investments of funding type FT. This should make the top 3 countries (Country 1, Country 2, and Country 3) very clear.","8803fa88":"1. Total number of investments (count)\n\n2. Total amount of investment (USD)\n\n3. Top sector (based on count of investments)\n\n4. Second-best sector (based on count of investments)\n\n5. Third-best sector (based on count of investments)\n\n6. Number of investments in the top sector (refer to point 3)\n\n7. Number of investments in the second-best sector (refer to point 4)\n\n8. Number of investments in the third-best sector (refer to point 5)\n\n9. For the top sector count-wise (point 3), which company received the highest investment?\n\n10. For the second-best sector count-wise (point 4), which company received the highest investment?","cf141388":"#Most representetive value -- it measn Mean()\n\n1. Representative funding amount of venture type\n2. Representative funding amount of angel type\n3. Representative funding amount of seed type\n4. Representative funding amount of private equity type\n5. Considering that Spark Funds wants to invest between 5 to 15 million USD per \u00a0investment round, which investment type is the most suitable for them?\n\n\nfunding_round_type\nangel              0.97\nprivate_equity    73.94\nseed               0.74\nventure           11.72\nName: raised_amount_usd, dtype: float64","e9ecafd2":"## Checkpoint 4: Sector Analysis 1\n\n---\n\n1. Extract the primary sector of each category list from the category_list column\n\n2. Use the mapping file 'mapping.csv' to map each primary sector to one of the eight main sectors (Note that \u2018Others\u2019 is also considered one of the main sectors)\n\nExpected Results: Code for a merged data frame with each primary sector mapped to its main sector (the primary sector should be present in a separate column).\n\n[NOTE] : category_list has multiple values divided by |. so we need to manipulate it to the 1st value of the str array.\n\n[NOTE] : Mapping data set is in  wide format so we need to Changing to long format with help of (pd.melt)","1394ca2c":"## Checkpoint 2: Funding Type Analysis\n\nSpark Funds wants to choose one of these four investment types (seed, venture, angel, Private equity) for each potential investment they will make.\n\n1. Calculate the most representative value of the investment amount for each of the four funding types (venture, angel, seed, and private equity)\n2. Based on the most representative investment amount calculated above, which investment type do you think is the most suitable for Spark Funds?\n\nOutput: \n1. Representative funding amount of venture type\n2. Representative funding amount of angel type\n3. Representative funding amount of seed type\n4. Representative funding amount of private equity type\n5. Considering that Spark Funds wants to invest between 5 to 15 million USD per \u00a0investment round, which investment type is the most suitable for them?\n\n\nRemoving null\/nan values\nFilter master_frame for gievn investment type (seed, venture, angel, Private equity)"}}