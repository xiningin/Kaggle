{"cell_type":{"19c9fdf4":"code","8d04cb3b":"code","45ae2ac8":"code","e3b07cbc":"code","437d7fe1":"code","5c66df29":"markdown","6a854b5a":"markdown","1ccf5fb3":"markdown","20c9a348":"markdown","b6244cea":"markdown"},"source":{"19c9fdf4":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport plotly as py\nimport plotly_express as px\nimport plotly.graph_objects as go\nfrom matplotlib import pyplot as plt\nimport folium\nfrom folium import plugins\nfrom plotly.offline import init_notebook_mode, iplot\nimport os\ninit_notebook_mode()\n\n!pip install --quiet pycountry_convert\nfrom pycountry_convert import country_alpha2_to_country_name, country_name_to_country_alpha3\n\ndf = pd.read_csv('\/kaggle\/input\/global-human-trafficking\/human_trafficking.csv')\ndf.replace('-99', np.nan, inplace=True)\ndf.replace(-99, np.nan, inplace=True)\ndf.drop(columns = [df.columns[0]], inplace=True)","8d04cb3b":"df.replace('00', np.nan, inplace=True)\n\nprint(\"Number of Victims of Unknown Citizenship: \")\nnum_null = len(df[df.citizenship.isnull()])\nprint(str(num_null) +\" ({:.2%})\".format(num_null \/ len(df)))\n\n\ndf_origin = df.copy()\ndf_origin.dropna(subset = ['citizenship'], inplace=True)\ndf_origin['citizenship_iso3'] = df_origin['citizenship'].apply(lambda x: country_name_to_country_alpha3(country_alpha2_to_country_name(x)))\ndf_origin['citizenship_name'] = df_origin['citizenship'].apply(lambda x: country_alpha2_to_country_name(x))\n\ndf_map1 = pd.DataFrame(df_origin.groupby(['citizenship_iso3', 'citizenship_name']).size()).reset_index()\ndf_map1.rename(columns = {0:'Number of Victims'}, inplace=True)\n\nfig = px.choropleth(df_map1, locations=\"citizenship_iso3\",\n                    color=\"Number of Victims\",\n                    hover_name=\"citizenship_name\",\n                    title = 'Human Trafficking Victims by Citizenship',\n                    color_continuous_scale=px.colors.sequential.Plasma)\nfig.show()\n\nprint(\"Number of Victims of Unknown Country Of Exploitation: \")\nnum_null = len(df[df.CountryOfExploitation.isnull()])\nprint(str(num_null) +\" ({:.2%})\".format(num_null \/ len(df)))\n\n\ndf_destination = df.copy()\ndf_destination.dropna(subset = ['CountryOfExploitation'], inplace=True)\ndf_destination['destination_iso3'] = df_destination['CountryOfExploitation'].apply(lambda x: country_name_to_country_alpha3(country_alpha2_to_country_name(x)))\ndf_destination['destination_name'] = df_destination['CountryOfExploitation'].apply(lambda x: country_alpha2_to_country_name(x))\n\ndf_map2 = pd.DataFrame(df_destination.groupby(['destination_iso3', 'destination_name']).size()).reset_index()\ndf_map2.rename(columns = {0:'Number of Victims'}, inplace=True)\n\nfig = px.choropleth(df_map2, locations=\"destination_iso3\",\n                    color=\"Number of Victims\",\n                    hover_name=\"destination_name\",\n                    title = 'Human Trafficking Victims by Country of Exploitation',\n                    color_continuous_scale=px.colors.sequential.Plasma)\nfig.show()\n","45ae2ac8":"df_map1.rename(columns = {'citizenship_iso3':'iso3', 'citizenship_name':'name', 'Number of Victims':'Out'}, inplace = True)\ndf_map2.rename(columns = {'destination_iso3':'iso3', 'destination_name':'name','Number of Victims':'In'}, inplace = True)\n\ndf_flow = pd.merge(df_map1, df_map2,how='outer', on=['iso3','name'])\ndf_flow.replace(np.nan, 0, inplace=True)\ndf_flow['Human Trafficking Flow'] = df_flow['Out'] - df_flow['In']\ndf_flow['Human Trafficking Flow (Symmetric Log Scale)'] = np.log(np.abs(df_flow['Out'] - df_flow['In'])) * np.sign(df_flow['Out'] - df_flow['In'])\nprint(\"Positive Flow: Origin of Human Trafficking\")\nprint(\"Negative Flow: Destination of Human Trafficking\")\n\nfig = px.choropleth(df_flow, locations=\"iso3\",\n                    color=\"Human Trafficking Flow (Symmetric Log Scale)\",\n                    hover_name=\"name\",\n                    title = 'Human Trafficking Flow',\n                    color_continuous_scale=px.colors.sequential.Plasma)\nfig.show()\n","e3b07cbc":"print(\"Top 10 Origin Countries, by Total Victims: \")\nprint(df_flow.sort_values(by = ['Out'], ascending = False)[0:10][['name', 'Out']])\nprint('\\n')\n\nprint(\"Top 10 Origin Countries, by Flow: \")\nprint(df_flow.sort_values(by = ['Human Trafficking Flow'], ascending = False)[0:10][['name', 'Human Trafficking Flow']])\nprint('\\n')\n\nprint(\"Top 10 Destination Countries, by Total Victims: \")\nprint(df_flow.sort_values(by = ['In'], ascending = False)[0:10][['name', 'In']])\nprint('\\n')\n\nprint(\"Top 10 Destination Countries, by Flow: \")\nprint(df_flow.sort_values(by = ['Human Trafficking Flow'], ascending = True)[0:10][['name', 'Human Trafficking Flow']])\nprint('\\n')\n\n","437d7fe1":"df_age = df.groupby(['gender', 'ageBroad']).size().reset_index()\ndf_age.rename(columns = {0:'Number of Trafficked Individuals'}, inplace=True)\n\nfig = px.pie(df_age.groupby('gender').sum().reset_index(), values = 'Number of Trafficked Individuals', names = 'gender', title = 'Gender of Human Trafficking Victims')\nfig.show()\n\nfig = px.bar(df_age, x = 'ageBroad', y = 'Number of Trafficked Individuals', color = 'gender',\n            category_orders = {'ageBroad': ['0--8', '9--17', '18--20', '21--23', '24--26', '27--29', '30--38', '39--47', '48+']})\nfig.show()\n","5c66df29":"# 1. Demographics\nThere are two different location datafields: citizenship and CountryOfExploitation. Here is how they are differentiated  according to CTDC:\n\n* citizenship: The set of rights and duties that a person has with a country because of his\/her legal\nbond with the country. This term is often used interchangeably with nationality, however some\nstates distinguish between nationality and citizenship and provide for different types of\nnationality of which citizenship is one form. Liberty Asia partners recording this as \u2018Country of\nOrigin\u2019 as a proxy for citizenship due to this not being recorded.\n* CountryOfExploitation: Indicates the last country where the victim was exploited. In the context of human\ntrafficking data, this is also referred to as the \u201ccountry of destination\u201d (as opposed to \u201ccountry of\norigin\u201d if human trafficking was across borders). In instances where are no data for the last\ncountry of exploitation, a proxy has been created to capture as much data as possible about the\ncountry the victim was exploited in. The proxy uses data about the country in which the victim is\nfirst supported\/assisted, identified and\/or referred, which in the vast majority of cases is de facto\nthe last country of exploitation.\n\n","6a854b5a":"Now let's take a look at the gender and ageBroad columns.","1ccf5fb3":"Since the two location dataframes can be roughly thought of as Country of Origin and Country of Destination, we can look at the difference for each country. ","20c9a348":"The data can be split into a few broad categories:\n1. Demographic\n2. Means of Control \n3. Type of Exploit\n4. Means of Recruitment\n\nWe'll start with the Demographic Data\n\n","b6244cea":"![](https:\/\/www.wamc.org\/sites\/wamc\/files\/styles\/x_large\/public\/201801\/humantrafficking.jpg)\n## Please consider donating in support of human trafficking victims and survivors:\n\n## https:\/\/polarisproject.org\/\n\n## https:\/\/www.stopthetraffik.org\/donate\/\n\n## https:\/\/www.cnn.com\/2018\/03\/05\/world\/anti-trafficking-organizations-around-the-world\/index.html\n\nMy goal for this analysis is to educate myself and the Kaggle Community about the horrors of human trafficking as well as provide resources for how we all can take action. "}}