{"cell_type":{"2669e20d":"code","a0d5dc58":"code","673e8df4":"code","8d705daa":"code","eb6c19af":"code","c5af5603":"code","fd0449e4":"code","7115e7fc":"code","de503f91":"code","efe322b2":"code","ab254840":"code","fcd10598":"code","eb65edd9":"code","0f8dcaf8":"code","fcdfb0e4":"code","3a0a78fb":"code","60879e3a":"code","c4ed195d":"code","56b4edfc":"code","5d3ca8e9":"code","724efc43":"code","c1cffc11":"code","f3e700a6":"code","afc83cea":"code","827f5d06":"code","a3684b69":"code","ebf22591":"code","758b5fbf":"code","a38db6c9":"code","65e08638":"code","5f5419e7":"code","beb4f11b":"code","963c7123":"code","8347cb74":"code","989d87a0":"code","9fbff8b3":"code","89f3af8e":"code","97608b3d":"code","0df126c1":"code","52606bd1":"code","7df52a83":"code","883a7a0e":"code","8940cd64":"code","2cb901dd":"code","08773bc2":"code","ad99adc0":"code","82d48b81":"code","559a2ff9":"code","de9834fe":"code","ecb005e1":"code","62576281":"code","56254180":"code","20946c7b":"code","355b1f63":"code","f0232985":"code","ae1878a4":"code","b50c1293":"code","33544194":"code","70540338":"code","616278c2":"code","a6d305d4":"code","2e4699d7":"code","7f83c110":"code","da352b6a":"markdown","47deb554":"markdown","1a59d9c7":"markdown","8dfaede0":"markdown","61905060":"markdown","5d20dffb":"markdown","2495865f":"markdown","039f3cb0":"markdown","d3d27e0c":"markdown","ad7e4a6f":"markdown","54910266":"markdown","ede495d4":"markdown","133c3125":"markdown","dac2057e":"markdown","6b31a0df":"markdown","89372875":"markdown","6508a3a6":"markdown","c4f11f49":"markdown","765aaeac":"markdown","8e479240":"markdown","e3f1d28a":"markdown","9d798e5f":"markdown","f64d62fe":"markdown","6b266c18":"markdown","947940cc":"markdown","bdb5ad45":"markdown"},"source":{"2669e20d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a0d5dc58":"import plotly.graph_objs as go\nimport plotly as py\nfrom plotly.offline import iplot\nimport missingno as msno","673e8df4":"dataset = pd.read_csv(\"\/kaggle\/input\/turkeycovid19basic\/TurkeyCovid19Dataset.csv\")\nseriouslyill= pd.read_csv(\"\/kaggle\/input\/turkeycovid19basic\/SeriouslyIll.csv\")\nregiondist = pd.read_csv(\"\/kaggle\/input\/turkeycovid19basic\/DistributionByRegions.csv\")","8d705daa":"dataset.info()","eb6c19af":"for i in dataset.columns:\n    try: assert dataset[i].notnull().all()\n    except AssertionError: \n        numbernan = dataset[i].isnull().sum()\n        print(\"There is {} NaN values in {} column!\".format(numbernan,i))","c5af5603":"\nnanfig,nanax=plt.subplots(tight_layout=True,figsize=(10,5))\nmsno.bar(dataset,color=\"tomato\",fontsize=13,ax=nanax)\nnanax.grid(True,alpha=0.4,linestyle=\"--\",linewidth=1)\nnanax.set_yticks(np.arange(0,1.1,0.1))\nnanax.set_title(\"Number Of Not NaN Values In The Columns\",fontsize=20)\nnanax.set_ylabel(\"%\",fontsize=15)\nplt.show()","fd0449e4":"dataset.head()","7115e7fc":"dataset.describe()","de503f91":"#Total tests till now\nprint(\"Total Tests: {}\".format(dataset[\"Daily Test\"].sum())) ","efe322b2":"#Total cases till now\nprint(\"Total Cases: {}\".format(dataset[\"Daily Cases\"].sum()))","ab254840":"#Total deaths till now\nprint(\"Total Deaths: {}\".format(dataset[\"Daily Deaths\"].sum()))","fcd10598":"#Total recovering people till now\nprint(\"Total Recovering: {}\".format(dataset[\"Daily Recovering\"].sum()))","eb65edd9":"# We will use this method for added months column on dataset\ndef months(n):\n    mlist = n.split()\n    month = mlist[1]\n    return month","0f8dcaf8":"type(dataset[\"Date\"].apply(months))","fcdfb0e4":"# Added new column with insert() and apply() methods \ndataset.insert(0,\"Months\",dataset[\"Date\"].apply(months))","3a0a78fb":"# Lets see this\ndataset.head()","60879e3a":"# Added new column about positive case ratio\ndataset[\"positiveRatio\"] = dataset[\"Daily Cases\"]\/dataset[\"Daily Test\"]*100","c4ed195d":"# Control new column\ndataset.head()","56b4edfc":"# Correlation table for this data\n\ndataset.corr()","5d3ca8e9":"heatfig,heatax = plt.subplots(figsize=(10,8),tight_layout=True)\nsns.heatmap(dataset.corr(),annot=True)\nheatax.set_title(\"Correlation Map\",fontsize=20)\nheatax.tick_params(width=3,color=\"grey\",labelsize=11)\nplt.show()","724efc43":"# Grouped by months\ndatasetGroup = dataset.groupby(\"Months\")","c1cffc11":"# lets take one sample\ndatasetGroup.head(1)","f3e700a6":"totalDataCorr = datasetGroup.sum().copy()\ntotalDataCorr = totalDataCorr.rename(columns={\"Daily Test\":\"Total Test by months\",\"Daily Cases\":\"Total Cases by months\",\"Daily Deaths\":\"Total Deaths by months\",\"Daily Recovering\":\"Total Recovering by months\"})\ntotalDataCorr.drop([\"Total Intensive Care\",\"Total Intubated\",\"positiveRatio\"],axis=1,inplace=True)","afc83cea":"# Correlation table of aggregate datas by months\ntotalDataCorr.corr()","827f5d06":"corrfig,corrax = plt.subplots(figsize=(8,6),tight_layout=True)\nsns.heatmap(totalDataCorr.corr(),annot=True)\ncorrax.set_title(\"Correlation Map of Aggregate Datas by Months\",fontsize=15,color=\"blue\")\ncorrax.tick_params(width=3,color=\"grey\")\nplt.show()","a3684b69":"fig,(ax1,ax2) = plt.subplots(1,2,figsize=(12,9),tight_layout=True)\n\nsns.barplot(x = datasetGroup.sum().index,y = datasetGroup.sum()[\"Daily Cases\"].values,palette=\"rocket\",ax=ax1)\nax1.set_yticks(np.arange(0,115000,5000))\nax1.grid(alpha=0.25,color=\"grey\")\nax1.set_ylabel(\"Total Cases\",fontsize = 15)\nax1.set_xlabel(\"Months\",fontsize = 15)\nax1.set_title(\"Total Cases by Months\",fontsize=20)\nax1.tick_params(width = 5,color=\"grey\",grid_linewidth=1,grid_linestyle=\"--\",labelsize=10)\n\n\nsns.barplot(x=datasetGroup.sum().index,y= datasetGroup.sum()[\"Daily Deaths\"].values,palette=\"vlag\",ax=ax2)\nax2.grid(alpha=0.25,color=\"grey\")\nax2.set_yticks(np.arange(0,3150,150))\nax2.set_ylabel(\"Total Deaths\",fontsize=15)\nax2.set_xlabel(\"Months\",fontsize=15)\nax2.set_title(\"Total Deaths by Months\",fontsize=20)\nax2.tick_params(width=5,color=\"grey\",grid_linestyle=\"--\",grid_linewidth=1,labelsize=10)\n\n\nfig.autofmt_xdate(rotation=90,ha=\"center\")\nplt.show()\n","ebf22591":"# The number of total cases and total deaths by months\n\nfor i,j,k in zip(datasetGroup.sum()[\"Daily Cases\"].index,datasetGroup.sum()[\"Daily Cases\"].values,datasetGroup.sum()[\"Daily Deaths\"].values):\n    print(\"{}:\\nTotal Cases: {} \\t Total Deaths: {}\\n\".format(i,j,k))","758b5fbf":"regvalues = regiondist.iloc[0].drop(\"WEEK\")\nregvalues","a38db6c9":"tracereg = go.Scatter(\n        x=regvalues.index,\n        y=regvalues.values,\n        mode=\"markers\",\n        marker=dict(color=regvalues.values,size=list(regvalues.values\/1200),showscale=True,colorscale=\"thermal\",line=dict(width=2,color=\"#111\")),\n        text = regvalues.index,\n)\ntracelay = dict(title=\"Total Cases by Regions\",font=dict(size=15))\nfigreg = go.Figure(data=tracereg,layout=tracelay)\nfigreg.update_layout(\n    autosize=True,\n    paper_bgcolor=\"lightblue\",\n    plot_bgcolor=\"lightblue\",\n    modebar=dict(activecolor=\"#111\"),\n)\niplot(figreg)","65e08638":"# The peak day\n\npeakday = dataset[dataset[\"Daily Cases\"] == dataset.drop(0,axis=0)[\"Daily Cases\"].nlargest(1).iloc[0]]\npeakday","5f5419e7":"print(\"Peak day is {}\\nnumber of cases: {}\".format(peakday.Date.iloc[0],peakday[\"Daily Cases\"].iloc[0]))","beb4f11b":"peakfig,(peakax1,peakax2) = plt.subplots(nrows=1,ncols=2,figsize=(12,6),tight_layout=True)\npeakax1.plot(dataset.Date.drop(0,axis=0),dataset[\"Daily Cases\"].drop(0,axis=0),color=\"black\",lw=3,marker = \"o\",markerfacecolor=\"orange\",label=\"Cases by days\")\npeakax1.set_xlim(\"1 April\",\"20 April\")\npeakax1.grid(True,alpha=0.4,color=\"grey\")\npeakax1.tick_params(grid_linewidth=1,width=5,color=\"orange\",grid_linestyle=\"--\")\npeakax1.set_xlabel(\"April\",fontsize=15)\npeakax1.set_ylabel(\"Number of Cases\",fontsize=15)\npeakax1.set_title(\"Old Peak Day\",fontsize=20)\npeakax1.set_xticklabels(dataset.Date.drop(0,axis=0),rotation=90,ha=\"center\")\npeakax1.legend(loc = \"center right\",fontsize=10)\n\n\npeakax2.plot(dataset.Date.drop(0,axis=0),dataset[\"Daily Cases\"].drop(0,axis=0),color=\"black\",lw=3,marker = \"o\",markerfacecolor=\"orange\",label=\"Cases by days\")\npeakax2.set_xlim(\"10 November\",dataset.drop(0,axis=0).set_index(\"Date\")[\"Daily Cases\"].nlargest(1).index[0])\npeakax2.grid(True,alpha=0.4,color=\"grey\")\npeakax2.tick_params(grid_linewidth=1,width=5,color=\"orange\",grid_linestyle=\"--\")\npeakax2.set_xlabel(\"November\",fontsize=15)\npeakax2.set_ylabel(\"Number of Cases\",fontsize=15)\npeakax2.set_title(\"Current Peak Day\",fontsize=20)\npeakax2.set_xticklabels(dataset.Date.drop(0,axis=0),rotation=90,ha=\"center\")\npeakax2.set_yticks(np.arange(1000,6000,500))\npeakax2.legend(loc = \"center right\",fontsize=10)\n\n\n\nplt.show()","963c7123":"pie = dict(\n    values = datasetGroup.sum()[\"Daily Cases\"].values,\n    labels= datasetGroup.sum().index,\n    domain= dict(x= [0,0.5]),\n    name=\" Cases\",\n    hoverinfo=\"value+name\",\n    hole=0.3,\n    type=\"pie\",\n    textinfo=\"label+percent\",\n    marker=dict(line=dict(width=2,color=\"#111\")),\n    pull=[0.0]+[0]*(len(datasetGroup.sum().index)-1)\n)\nlayout = dict(title=\"Distribution Ratios Of Total Cases by Months\")\nfigplot = go.Figure(data=pie,layout=layout)\nfigplot.update_layout(\n    autosize=True,\n    title=dict(x=0.05),\n    legend=dict(bordercolor=\"#444\",borderwidth=1,orientation=\"v\",x=0.75),\n    paper_bgcolor=\"#d8d8d8\",\n    modebar=dict(activecolor=\"#111\"),\n    hoverlabel=dict(bordercolor=\"#111\")\n)\niplot(figplot)\n","8347cb74":"colors=['gold', 'mediumturquoise', 'darkorange', 'lightgreen',\"tomato\",\"lightblue\",\"cyan\",\"green\",\"red\"]\npie2 = dict(\n    values = datasetGroup.sum()[\"Daily Deaths\"].values,\n    labels= datasetGroup.sum().index,\n    domain= dict(x= [0,0.5]),\n    name=\" Deaths\",\n    hoverinfo=\"value+name\", # text = datasetGroup.sum()[\"Daily Deaths\"].values\n    hole=0.3,\n    type=\"pie\",\n    textinfo=\"label+percent\",\n    marker = dict(colors= colors,line=dict(width=2,color=\"#111\")),\n)\nlayout2 = dict(title=\"Distribution Ratios Of Total Deaths by Months\")\nfigplot2 = go.Figure(data=pie2,layout=layout2)\nfigplot2.update_layout(\n    autosize=True,\n    title=dict(x=0.05),\n    legend=dict(borderwidth=1,bordercolor=\"#444\",x=0.75),\n    paper_bgcolor=\"#d8d8d8\",\n    modebar=dict(activecolor=\"#111\"),\n    hoverlabel=dict(bordercolor=\"#111\")\n    \n    \n)\niplot(figplot2)","989d87a0":"mlist = dataset.Months.unique()\nfor i in mlist:\n    ratioc = datasetGroup.sum()[\"Daily Cases\"][i] \/ dataset[\"Daily Cases\"].sum() * 100\n    ratiod = datasetGroup.sum()[\"Daily Deaths\"][i] \/ dataset[\"Daily Deaths\"].sum() * 100\n    print(\"{}:\\nDistribution ratio of cases: %{:.1f}\\nDistribution ratio of deaths: %{:.1f}\\n\".format(i,ratioc,ratiod))","9fbff8b3":"marchCase = dataset.drop(0,axis=0).set_index(\"Date\").loc[\"28 March\":\"31 March\",[\"Daily Cases\",\"Daily Recovering\"]]\naprilCase = dataset.set_index(\"Date\").loc[\"1 April\":\"30 April\",[\"Daily Cases\",\"Daily Recovering\"]]\nmayCase = dataset.set_index(\"Date\").loc[\"1 May\":\"31 May\",[\"Daily Cases\",\"Daily Recovering\"]]\njuneCase = dataset.set_index(\"Date\").loc[\"1 June\":\"30 June\",[\"Daily Cases\",\"Daily Recovering\"]]\njulyCase = dataset.set_index(\"Date\").loc[\"1 July\":\"31 July\",[\"Daily Cases\",\"Daily Recovering\"]]\naugustCase = dataset.set_index(\"Date\").loc[\"1 August\":\"31 August\",[\"Daily Cases\",\"Daily Recovering\"]]\nseptCase= dataset.set_index(\"Date\").loc[\"1 September\":\"30 September\",[\"Daily Cases\",\"Daily Recovering\"]]\noctCase= dataset.set_index(\"Date\").loc[\"1 October\":\"31 October\",[\"Daily Cases\",\"Daily Recovering\"]]\nnovCase = datasetGroup.get_group(\"November\").loc[:,[\"Date\",\"Daily Cases\",\"Daily Recovering\"]]","89f3af8e":"figcase,(axcase1,axcase2) = plt.subplots(1,2,figsize=(12,9),tight_layout=True)\nsns.barplot(x = marchCase[\"Daily Cases\"].values,y = marchCase.index,ax=axcase1,color=\"red\",label=\"Daily Cases\")\nsns.barplot(x = marchCase[\"Daily Recovering\"].values,y = marchCase.index,ax=axcase1,color=\"green\",label = \"Daily Recoverings\")\naxcase1.grid(color=\"grey\",alpha=0.3)\naxcase1.tick_params(width=3,color=\"black\",grid_linewidth = 1, grid_linestyle = \"--\")\naxcase1.set_ylabel(\"Dates\",fontsize=15)\naxcase1.set_xlabel(\"Number of Cases & Recoverings\",fontsize=15)\naxcase1.set_title(\"March\",fontsize=20)\naxcase1.set_xticks(np.arange(0,3000,250))\naxcase1.legend(loc = \"upper right\",frameon=True)\nsns.barplot(x = aprilCase[\"Daily Cases\"],y = aprilCase.index,ax=axcase2,color=\"red\",label=\"Daily Cases\")\nsns.barplot(x = aprilCase[\"Daily Recovering\"],y = aprilCase.index,ax=axcase2,color=\"green\",label = \"Daily Recoverings\",alpha=0.9)\naxcase2.legend(loc = \"upper right\",frameon=True)\naxcase2.grid(color=\"grey\",alpha=0.3)\naxcase2.tick_params(width=3,color=\"black\",grid_linewidth=1,grid_linestyle=\"--\")\naxcase2.set_xlabel(\"Number of Cases & Recoverings\",fontsize=15)\naxcase2.set_ylabel(\"Dates\",fontsize=15)\naxcase2.set_title(\"April\",fontsize=20)\nplt.show()","97608b3d":"figcase2,(axcase3,axcase4) = plt.subplots(1,2,figsize=(12,9),tight_layout=True)\nsns.barplot(x = mayCase[\"Daily Recovering\"].values,y= mayCase.index,color=\"green\",label=\"Daily Recoverings\",ax=axcase3)\nsns.barplot(x = mayCase[\"Daily Cases\"].values,y = mayCase.index,color = \"red\",label = \"Daily Cases\",ax=axcase3,alpha=0.9)\naxcase3.legend(loc=\"lower right\",frameon=True)\naxcase3.grid(color=\"grey\",alpha=0.3)\naxcase3.tick_params(width=3,color=\"black\",grid_linewidth=1,grid_linestyle=\"--\")\naxcase3.set_xlabel(\"Number of Cases & Recoverings\",fontsize=15)\naxcase3.set_ylabel(\"Dates\",fontsize=15)\naxcase3.set_title(\"May\",fontsize=20)\naxcase3.set_xticks(np.arange(0,6000,500))\nsns.barplot(x = juneCase[\"Daily Recovering\"],y=juneCase.index,color=\"green\",label=\"Daily Recoverings\",ax=axcase4)\nsns.barplot(x = juneCase[\"Daily Cases\"],y = juneCase.index,color=\"red\",label=\"Daily Cases\",ax=axcase4,alpha=0.9)\naxcase4.grid(color=\"grey\",alpha=0.3)\naxcase4.tick_params(width=3,color=\"black\",grid_linewidth=1,grid_linestyle=\"--\")\naxcase4.legend(loc=\"lower right\",frameon=True)\naxcase4.set_xlabel(\"Number of Cases & Recoverings\",fontsize=15)\naxcase4.set_ylabel(\"Dates\",fontsize=15)\naxcase4.set_title(\"June\",fontsize=20)\nplt.show()","0df126c1":"figcase3,(axcase5,axcase6) = plt.subplots(1,2,figsize=(12,9),tight_layout = True)\nsns.barplot(x = julyCase[\"Daily Recovering\"],y = julyCase.index,ax=axcase5,color=\"green\",label=\"Daily Recoverings\")\nsns.barplot(x = julyCase[\"Daily Cases\"],y = julyCase.index,ax=axcase5,color=\"red\",label=\"Daily Cases\")\naxcase5.grid(color=\"grey\",alpha=0.3)\naxcase5.tick_params(width=3,color=\"black\",grid_linestyle=\"--\",grid_linewidth=1)\naxcase5.legend(loc=\"lower right\",frameon=True)\naxcase5.set_xlabel(\"Number of Cases & Recoverings\",fontsize=15)\naxcase5.set_ylabel(\"Dates\",fontsize=15)\naxcase5.set_title(\"July\",fontsize=20)\nsns.barplot(x=augustCase[\"Daily Cases\"],y=augustCase.index,color=\"red\",ax=axcase6,label=\"Daily Cases\")\nsns.barplot(x=augustCase[\"Daily Recovering\"],y=augustCase.index,color=\"green\",ax=axcase6,label=\"Daily Recoverings\",alpha=0.9)\naxcase6.grid(color=\"grey\",alpha=0.3)\naxcase6.tick_params(width=3,color=\"black\",grid_linewidth=1,grid_linestyle=\"--\")\naxcase6.set_title(\"August\",fontsize=20)\naxcase6.set_xlabel(\"Number of Cases & Recoverings\",fontsize=15)\naxcase6.set_ylabel(\"Dates\",fontsize=15)\naxcase6.legend(loc=\"lower right\",frameon=True)\nplt.show()\n","52606bd1":"figcase4,(axcase7,axcase8) = plt.subplots(nrows=1,ncols=2,figsize=(12,9),tight_layout=True)\nsns.barplot(x=septCase[\"Daily Cases\"].values,y=septCase.index,ax=axcase7,color=\"red\",label=\"Daily Cases\")\nsns.barplot(x=septCase[\"Daily Recovering\"].values,y=septCase.index,ax=axcase7,color=\"green\",alpha=0.9,label=\"Daily Recoverings\")\naxcase7.grid(True,color=\"gray\",linestyle=\"--\",linewidth=1,alpha=0.3)\naxcase7.tick_params(width=3,color=\"black\")\naxcase7.legend(frameon=True,loc=\"lower right\")\naxcase7.set_xlabel(\"Number of Cases & Recoverings\",fontsize=15)\naxcase7.set_ylabel(\"Dates\",fontsize=15)\naxcase7.set_title(\"September\",fontsize=20)\n\nsns.barplot(x=octCase[\"Daily Cases\"].values,y=octCase.index,ax=axcase8,color=\"red\",label=\"Daily Cases\")\nsns.barplot(x=octCase[\"Daily Recovering\"].values,y=octCase.index,ax=axcase8,color=\"green\",alpha=0.9,label=\"Daily Recoverings\")\naxcase8.grid(True,color=\"gray\",linestyle=\"--\",linewidth=1,alpha=0.3)\naxcase8.tick_params(width=3,color=\"black\")\naxcase8.legend(frameon=True,loc=\"lower right\")\naxcase8.set_xlabel(\"Number of Cases & Recoverings\",fontsize=15)\naxcase8.set_ylabel(\"Dates\",fontsize=15)\naxcase8.set_title(\"October\",fontsize=20)\n\nplt.show()","7df52a83":"figcase5,axcase9=plt.subplots(nrows=1,ncols=1,figsize=(12,4.5),tight_layout=True)\nsns.barplot(x=novCase.Date.values,y=novCase[\"Daily Cases\"].values,color=\"red\",label=\"Daily Cases\",ax=axcase9)\nsns.barplot(x=novCase.Date.values,y=novCase[\"Daily Recovering\"].values,color=\"green\",label=\"Daily Recoverings\",ax=axcase9,alpha=0.9)\naxcase9.set_yticks(np.arange(0,6500,500))\naxcase9.grid(True,alpha=0.3,linestyle=\"--\",linewidth=1,color=\"gray\")\naxcase9.tick_params(width=3,color=\"black\")\naxcase9.legend(loc=\"lower right\",frameon=True)\naxcase9.set_title(\"November\",fontsize=20)\naxcase9.set_xlabel(\"Dates\",fontsize=15)\naxcase9.set_ylabel(\"Number of Cases & Recoverings\",fontsize=15)\nplt.xticks(rotation=90)\nplt.show()\n\n","883a7a0e":"figbox,axbox = plt.subplots(figsize=(10,6),tight_layout=True)\nsns.boxplot(x = dataset.drop(0,axis=0)[\"Daily Cases\"].values,y=dataset.drop(0,axis=0).Months,ax=axbox)\naxbox.grid(color=\"grey\",alpha=0.4,linestyle=\"--\",linewidth=1)\naxbox.set_xticks(np.arange(0,6000,500))\naxbox.set_title(\"Outlier Analysis\",fontsize=20)\naxbox.set_ylabel(\"Number of Cases\",fontsize=15)\naxbox.set_xlabel(\"Months\",fontsize=15)\naxbox.tick_params(width=3,color=\"black\")\nplt.show()","8940cd64":"figsw,axsw = plt.subplots(figsize=(10,6),tight_layout=True)\nsns.swarmplot(y = dataset.drop(0,axis=0).Months,x = dataset.drop(0,axis=0)[\"Daily Cases\"].values,ax=axsw,size=6)\naxsw.grid(color=\"grey\",alpha=0.4,linestyle=\"--\",linewidth=1)\naxsw.set_xticks(np.arange(0,6000,500))\naxsw.set_ylabel(\"Number of Daily Cases\",fontsize=15)\naxsw.set_xlabel(\"Months\",fontsize=15)\naxsw.tick_params(width=3,color=\"black\")\nplt.show()","2cb901dd":"print(\"Positive Test Rate Means\\n\")\nratios=list()\nfor i,v in zip(datasetGroup.mean()[\"positiveRatio\"].index,datasetGroup.mean()[\"positiveRatio\"].values):\n    print(\"{}:\\tratio: %{:.2f}\\n\".format(i,v))\n    ratios.append((i,v))","08773bc2":"month_list = list()\nfor k in sorted(datasetGroup.mean().positiveRatio.values,reverse=True):\n    for i,j in ratios:\n        if j == k: \n            month_list.append(i)\n            ratios.remove((i,j))\n    ","ad99adc0":"figpos,axpos=plt.subplots(figsize=(12,6),tight_layout=True)\nsns.barplot(x = month_list,y =sorted(datasetGroup.mean().positiveRatio.values,reverse=True) )\naxpos.grid(color=\"grey\",alpha=0.3,linestyle=\"--\",linewidth=1)\naxpos.set_title(\"Positive Test Rate Means\",fontsize=20)\naxpos.set_xlabel(\"Months\",fontsize=15)\naxpos.set_ylabel(\"Rates\",fontsize=15)\naxpos.tick_params(width=3,color=\"black\")\naxpos.set_yticks(np.arange(0,18,1))\nplt.show()","82d48b81":"totalTest = datasetGroup.sum()[\"Daily Test\"].sort_values()\nfor i,v in zip(totalTest.index,totalTest.values):\n    t=\"\\t\"\n    if i in [\"November\",\"September\",\"October\"]: t=\" \"\n    print(\"{}:{} Total Test: {}\\n\".format(i,t,v))","559a2ff9":"figtest,axtest = plt.subplots(figsize=(12,6),tight_layout=True)\nsns.barplot(x = totalTest.index,y=totalTest.values,palette=\"rocket\")\naxtest.grid(color=\"grey\",alpha=0.3,linestyle=\"--\",linewidth=1)\naxtest.set_ylabel(\"Total Test Done\\n(10^6)\",fontsize=15)\naxtest.set_xlabel(\"Months\",fontsize=15)\naxtest.set_title(\"Number of Total Tests by Months\",fontsize=20)\naxtest.tick_params(width=3,color=\"black\")\nplt.show()","de9834fe":"dropnaDataset = dataset.dropna(how=\"any\",axis=0)\ndropnaDataset.drop(0,axis=0,inplace=True)","ecb005e1":"# Until 28 July\ndropnaDataset.tail(1)","62576281":"# We will use this for visiualization\nintubatedIntensive = dropnaDataset[[\"Date\",\"Total Intensive Care\",\"Total Intubated\"]]\nintubatedIntensive.set_index(\"Date\",inplace=True)\nintubatedIntensive.head()","56254180":"figint,(axint1,axint2) = plt.subplots(1,2,figsize=(12,9),tight_layout=True)\nsns.barplot(y = intubatedIntensive.loc[\"28 March\":\"30 April\"].index,x = intubatedIntensive.loc[\"28 March\":\"30 April\"][\"Total Intensive Care\"].values,ax=axint1,color=\"purple\",label=\"Total Intensive Care\")\nsns.barplot(y = intubatedIntensive.loc[\"28 March\":\"30 April\"].index,x = intubatedIntensive.loc[\"28 March\":\"30 April\"][\"Total Intubated\"].values,ax=axint1,color=\"orange\",label=\"Total Intubated\")\naxint1.legend(loc=\"lower right\",frameon=True)\naxint1.grid(color=\"grey\",alpha=0.3,linestyle=\"--\",linewidth=1)\naxint1.set_title(\"March & April\",fontsize=20)\naxint1.set_ylabel(\"Dates\",fontsize=15)\n\nsns.barplot(y = intubatedIntensive.loc[\"1 May\":\"31 May\"].index,x = intubatedIntensive.loc[\"1 May\":\"31 May\"][\"Total Intensive Care\"].values,ax=axint2,color=\"purple\",label=\"Total Intensive Care\")\nsns.barplot(y = intubatedIntensive.loc[\"1 May\":\"31 May\"].index,x = intubatedIntensive.loc[\"1 May\":\"31 May\"][\"Total Intubated\"].values,ax=axint2,color=\"orange\",label=\"Total Intubated\")\naxint2.legend(loc=\"lower right\",frameon=True)\naxint2.grid(color=\"grey\",alpha=0.3,linestyle=\"--\",linewidth=1)\naxint2.set_title(\"May\",fontsize=20)\naxint2.set_ylabel(\"Dates\",fontsize=15)\n\naxint1.tick_params(width=3,color=\"black\")\naxint2.tick_params(width=3,color=\"black\")\nplt.show()","20946c7b":"figint2,(axint3,axint4) = plt.subplots(1,2,figsize=(12,9),tight_layout=True)\nsns.barplot(y = intubatedIntensive.loc[\"1 June\":\"30 June\"].index,x = intubatedIntensive.loc[\"1 June\":\"30 June\"][\"Total Intensive Care\"].values,ax=axint3,color=\"purple\",label=\"Total Intensive Care\")\nsns.barplot(y = intubatedIntensive.loc[\"1 June\":\"30 June\"].index,x = intubatedIntensive.loc[\"1 June\":\"30 June\"][\"Total Intubated\"].values,ax=axint3,color=\"orange\",label=\"Total Intubated\")\naxint3.legend(loc=\"lower right\",frameon=True)\naxint3.grid(color=\"grey\",alpha=0.3,linestyle=\"--\",linewidth=1)\naxint3.set_title(\"June\",fontsize=20)\naxint3.set_ylabel(\"Dates\",fontsize=15)\n\nsns.barplot(y = intubatedIntensive.loc[\"1 July\":\"28 July\"].index,x = intubatedIntensive.loc[\"1 July\":\"28 July\"][\"Total Intensive Care\"].values,ax=axint4,color=\"purple\",label=\"Total Intensive Care\")\nsns.barplot(y = intubatedIntensive.loc[\"1 July\":\"28 July\"].index,x = intubatedIntensive.loc[\"1 July\":\"28 July\"][\"Total Intubated\"].values,ax=axint4,color=\"orange\",label=\"Total Intubated\")\naxint4.legend(loc=\"lower right\",frameon=True)\naxint4.grid(color=\"grey\",alpha=0.3,linestyle=\"--\",linewidth=1)\naxint4.set_title(\"July\",fontsize=20)\naxint4.set_ylabel(\"Dates\",fontsize=15)\n\naxint3.tick_params(width=3,color=\"black\")\naxint4.tick_params(width=3,color=\"black\")\nplt.show()","355b1f63":"# We will use this function at below\ndiff = dataset.drop(0,axis=0)[\"Total Intensive Care\"].iloc[0]\ndef intchange(n):\n    global diff\n    res = n-diff\n    diff = n\n    return res","f0232985":"# Added new column about intensive care change\ndataset.insert(7,\"Intensive Change\",dataset.drop(0,axis=0)[\"Total Intensive Care\"].apply(intchange))","ae1878a4":"# We will use this function at below\ndifference = dataset.drop(0,axis=0)[\"Total Intubated\"].iloc[0]\ndef intubatedchange(n):\n    global difference\n    res = n-difference\n    difference = n\n    return res","b50c1293":"# Added new column about intubated change\ndataset.insert(9,\"Intubated Change\",dataset.drop(0,axis=0)[\"Total Intubated\"].apply(intubatedchange))","33544194":"# Let's control this transactions\ndataset.drop(0,axis=0).head()","70540338":"sns.jointplot(x = dataset[\"Intensive Change\"],y = dataset[\"Intubated Change\"],kind = \"scatter\",alpha=0.4,color=\"red\",height=9,linewidth=10,edgecolor=\"red\",ratio=4,facecolor=\"black\")\nplt.show()","616278c2":"seriouslyill.head()","a6d305d4":"firstpart = seriouslyill.iloc[:seriouslyill.Date.values.size\/\/2]\nsecondpart= seriouslyill.iloc[seriouslyill.Date.values.size\/\/2:]","2e4699d7":"figser,(axser1,axser2) = plt.subplots(nrows=2,ncols=1,figsize=(12,9),tight_layout=True)\nsns.barplot(x = firstpart.Date.values,y = firstpart.Seriously_ill.values,ax=axser1)\naxser1.grid(color=\"grey\",alpha=0.3,linestyle=\"--\",linewidth=1)\naxser1.set_title(\"Seriously Ill\",fontsize=20)\naxser1.tick_params(width=3,color=\"black\")\naxser1.set_yticks(np.arange(0,2500,200))\naxser1.set_xticklabels(firstpart.Date.values,rotation=90)\n\nsns.barplot(x = secondpart.Date.values,y = secondpart.Seriously_ill.values,ax=axser2)\naxser2.grid(color=\"grey\",alpha=0.3,linestyle=\"--\",linewidth=1)\naxser2.set_xlabel(\"Dates\",fontsize=15)\naxser2.tick_params(width=3,color=\"black\")\naxser2.set_yticks(np.arange(0,4400,300))\naxser2.set_xticklabels(secondpart.Date.values,rotation=90)\nplt.show()","7f83c110":"figpin,(axpin1,axpin2) = plt.subplots(nrows=2,ncols=1,figsize=(12,9),tight_layout=True)\n\naxpin1.plot(firstpart.Date.values,firstpart.Pneumonia_ratio.values,lw=3,color=\"cyan\",marker=\"o\",markerfacecolor=\"blue\",label=\"Pneumonia Ratio\")\naxpin1.set_yticks(np.arange(7,10,0.25))\naxpin1.grid(color=\"grey\",alpha=0.3,linestyle=\"--\",linewidth=1)\naxpin1.tick_params(width=3,color=\"black\")\naxpin1.set_title(\"Pneumonia Ratio\",fontsize=20)\naxpin1.set_ylabel(\"Ratio\",fontsize=15)\naxpin1.legend(loc=\"center right\",frameon=True)\naxpin1.set_xticklabels(firstpart.Date.values,rotation=90)\n\naxpin2.plot(secondpart.Date.values,secondpart.Pneumonia_ratio.values,lw=3,color=\"cyan\",marker=\"o\",markerfacecolor=\"blue\",label=\"Pneumonia Ratio\")\naxpin2.set_yticks(np.arange(3.5,7.25,0.25))\naxpin2.grid(color=\"grey\",alpha=0.3,linestyle=\"--\",linewidth=1)\naxpin2.tick_params(width=3,color=\"black\")\naxpin2.set_xlabel(\"Dates\",fontsize=15)\naxpin2.set_ylabel(\"Ratio\",fontsize=15)\naxpin2.legend(loc=\"center right\",frameon=True)\naxpin2.set_xticklabels(secondpart.Date.values,rotation=90)\nplt.show()","da352b6a":"<a id=\"8\"><\/a>\n# Outlier Analysis","47deb554":"<a id=\"4\"><\/a> \n# Total Cases by Regions","1a59d9c7":"### If we look heatmap above, we can say total cases and total deaths are linearly proportional.","8dfaede0":"<a id=\"6\"><\/a>\n# Distribution Ratios Of Total Cases by Months","61905060":"\nLet's analyze other data that started to be **shared after July 28**.","5d20dffb":"<a id=\"11\"><\/a>\n# Numbers of Seriously Ill and Pneumonia Ratios","2495865f":"This is the change of intubated and intensive care patients. ","039f3cb0":"<a id=\"10\"><\/a>\n# Intubated and Intensive Cares","d3d27e0c":"### Slicing dataset with two features by months","ad7e4a6f":"#### April is the month with the most cases and deaths","54910266":"<a id=\"7\"><\/a>\n# Numbers of Cases & Recoverings in Months","ede495d4":"<a id=\"3\" ><\/a>\n# Total Cases & Deaths by Months","133c3125":"# <h1 style=\"font-size:50px;\">INTRODUCTION<\/h1> \n\n\n<p style=\"font-size:18px\">This notebook contains of Turkey's current Covid-19 datas. Prepared to be useful to you!<\/p>\n\n\n\n## <nav style=\"font-size:30px\">Contents<\/nav>\n\n1. [<b style=\"font-size:18px\">Overview of Data<\/b>](#1)\n2. [<b style=\"font-size:18px\">Correlations<\/b>](#2)\n3. [<b style=\"font-size:18px\">Total Cases & Deaths by Months<\/b>](#3)\n4. [<b style=\"font-size:18px\">Total Cases by Regions<\/b>](#4)\n5. [<b style=\"font-size:18px\">Peak Day<\/b>](#5)\n6. [<b style=\"font-size:18px\">Distribution Ratios Of Total Cases by Months<\/b>](#6)\n7. [<b style=\"font-size:18px\">Numbers of Cases & Recoverings in Months<\/b>](#7)\n8. [<b style=\"font-size:18px\">Outlier Analysis<\/b>](#8)\n9. [<b style=\"font-size:18px\">Number of Total Tests by Months and Positive Test Rate Means<\/b>](#9)\n10. [<b style=\"font-size:18px\">Intubated and Intensive Cares<\/b>](#10)\n11. [<b style=\"font-size:18px\">Numbers of Seriously Ill and Pneumonia Ratios<\/b>](#11)","dac2057e":"<a id=\"1\"><\/a>\n# Overview of Data","6b31a0df":"* <p style=\"font-size:16px;font-weight:700;\">Thank you for your upvotes :)<\/p>","89372875":"\n<p style=\"font-size:18px;font-family:Arial;\">As can be seen, <b>the increase<\/b> continues.<\/p>","6508a3a6":"<a id=\"2\"><\/a>\n# Correlations","c4f11f49":"<p style=\"font-size:18px;font-family:Arial;\"> The decrease in the rate of pneumonia continues <\/p>","765aaeac":"<font style=\"font-size:16px; letter-spacing:0.5px;\">Numbers of cases began increase again. The old peak day was 11 April. <\/font>","8e479240":"<a id=\"5\"><\/a>\n# Peak Day","e3f1d28a":"<font style=\"font-size:16px;letter-spacing:0.5px;\">The pneumonia rates you see here are expressed as a percentage.<\/font>","9d798e5f":"<pre style=\"font-size:16px;\">\nThe number of intubated patients and intensive care patients was shared by the ministry until 28 July, after which these data were not shared. \nTherefore, these data could be collected until 28 July. After July 28, data on seriously ill and pneumonia were shared by the ministry. <\/pre>","f64d62fe":"Outlier data as you can see above is **very less**. The month with the highest change interval for the number of cases is **April**.","6b266c18":"<p style=\"font-size:18px;font-family:Arial;font-weight:bold;\">As you can see above the increase of the daily cases started again, this is second wave of the pandemic. <\/p>","947940cc":"**Analysis of intubated and intensive care changes**","bdb5ad45":"<a id=\"9\"><\/a>\n# Number of Total Tests by Months and Positive Test Rate Means"}}