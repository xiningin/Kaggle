{"cell_type":{"efd8fc65":"code","5e49aee5":"code","7dcf1768":"code","2e79b403":"code","dd8c74ab":"code","51d5a604":"code","a2207e6d":"code","1b691bc1":"code","b2a3f0e5":"code","7aa5ce5d":"code","2880d1fb":"code","4c086877":"code","cb72d4f9":"markdown","dcd5d44b":"markdown","340dcc05":"markdown","df6f1398":"markdown"},"source":{"efd8fc65":"#Autoregressive Integrated Moving Average (ARIMA)\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport statsmodels.api as sm\nfrom sklearn import metrics","5e49aee5":"#step 1 to decompose time series\ndf = sns.load_dataset('flights')\ndf.head(10)","7dcf1768":"df.info()","2e79b403":"df['date'] = pd.to_datetime(df['year'].astype(str) + '-' + df['month'].astype(str))\ndf.set_index('date', inplace= True)\nwinter = df[df['month'].isin(['Nov', 'Dec', 'Jan', 'Feb', 'Mar', 'Apr', 'May','Jun', 'Jul', 'Aug', 'Sep', 'Oct'])].copy()\nwinter.sort_index(inplace=True)\nwinter.head(12)","dd8c74ab":"winter.drop(['year', 'month'], axis =1, inplace= True)\nwinter","51d5a604":"from statsmodels.tsa.seasonal import seasonal_decompose\ndecomposition = seasonal_decompose(winter)\ntrend = decomposition.trend\nseasonal = decomposition.seasonal\nresidual = decomposition.resid\n\nplt.subplot(411)\nplt.plot(winter, label= 'Original')\nplt.legend(loc= 'best')\nplt.subplot(412)\nplt.plot(trend, label= 'Trend')\nplt.legend(loc= 'best')\nplt.subplot(413)\nplt.plot(seasonal, label= 'Seasonality')\nplt.legend(loc='best')\nplt.tight_layout()","a2207e6d":"#step 2 to checking for summary\n#so test result with p value > 0.05 means data is non-stationary.\n\nfrom statsmodels.tsa.stattools import adfuller\n#log transform\nwinter_log= np.log(winter)\nwinter_log.dropna(inplace = True)\n\ns_test = adfuller(winter_log, autolag= 'AIC')\nprint(s_test)\nprint('Log transform stationary check p value: ', s_test[1])\n\n#take first difference\nwinter_log_diff = winter_log - winter_log.shift()\nwinter_log_diff.dropna(inplace= True)\nplt.title('Trend removed plot with first order difference')\nplt.plot(winter_log_diff)\nplt.ylabel('First order log diff')\n\ns_test = adfuller(winter_log_diff, autolag= 'AIC')\nprint('\\n', s_test)\nprint('\\nFirst order difference stationary check p value: ', s_test[1])","1b691bc1":"#step 3 :- Autocorrelation\n\nfig, (ax1, ax2) = plt.subplots(1,2,figsize= (10,3))\n\nimport statsmodels.api as sm\n#ACF chart\nfig = sm.graphics.tsa.plot_acf(winter_log_diff.values.squeeze(), lags= 20, \n                               ax=ax1 )\n\n#draw 95% confidence interval line\nax1.axhline(y= -1.96\/np.sqrt(len(winter_log_diff)), linestyle= '--',\n           color= 'gray')\nax1.axhline(y= 1.96 \/ np.sqrt(len(winter_log_diff)), linestyle= '--', \n           color= 'gray')\nax1.set_xlabel('Lags')\n\n#set pacf chart\n\nfig = sm.graphics.tsa.plot_pacf(winter_log_diff, lags=20, ax=ax2)\n\n#draw 95% confidence line\nax2.axhline(y=-1.96\/np.sqrt(len(winter_log_diff)), linestyle= '--', color= 'gray')\nax2.axhline(y= 1.96 \/ np.sqrt(len(winter_log_diff)), linestyle= '--', color= 'gray')\nax2.set_xlabel('Lags')","b2a3f0e5":"#build model\nmodel = sm.tsa.SARIMAX(winter_log, order= (2,0,2))\nresults_ARIMA = model.fit(disp=-1)\nprint(results_ARIMA.summary())\nwinter_predict = results_ARIMA.predict()\n\n#evaluate model\nprint('AIC: ', results_ARIMA.aic)\nprint('BIC: ', results_ARIMA.bic)\nprint('Mean absolute Error: ', metrics.mean_absolute_error(winter_log, winter_predict))\nprint('Root mean absolute error: ', np.sqrt(metrics.mean_absolute_error(winter_log, winter_predict)))\n\n#check autocorrelation\nprint('Durbin-watson statistic: ', sm.stats.durbin_watson(results_ARIMA.resid))","7aa5ce5d":"#Usual practice is to build several models with different p and q and select\n#the one with smallest value of AIC, BIC, MAE and RMSE. Now lets' increase p\n#to 13 and see if there is any difference in result.\n\nmodel = sm.tsa.SARIMAX(winter_log, order= (13, 0, 2))\nr_ARIMA = model.fit(disp=-1)\nprint(r_ARIMA.summary())\nwinter_pred = r_ARIMA.predict()\n\n#evaluate model\nprint('AIC: ', r_ARIMA.aic)\nprint('BIC: ', r_ARIMA.bic)\nprint('Mean absolute Error: ', metrics.mean_absolute_error(winter_log, winter_pred))\nprint('Root mean absolute error: ', np.sqrt(metrics.mean_absolute_error(winter_log, winter_pred)))\n\nprint('Durbin -watson statistic: ', sm.stats.durbin_watson(r_ARIMA.resid))\n\nplt.figure(figsize= (10,8))\nplt.title('ARIMA Prediction')\nplt.plot(winter_log, label= 'Actual')\nplt.plot(winter_pred, 'r--', label= 'Predicted')\nplt.xlabel('Year Month')\nplt.ylabel('Passengers')\nplt.legend(loc='best')","2880d1fb":"model = sm.tsa.SARIMAX(winter_log, order= (13, 1, 0))\nr_ARIMA = model.fit(disp=-1)\nwinter_pred = r_ARIMA.predict()\n\n#evaluate model\nprint('AIC: ', r_ARIMA.aic)\nprint('BIC: ', r_ARIMA.bic)\nprint('Mean absolute Error: ', metrics.mean_absolute_error(winter_log, winter_pred))\nprint('Root mean absolute error: ', np.sqrt(metrics.mean_absolute_error(winter_log, winter_pred)))\n\nprint('Durbin -watson statistic: ', sm.stats.durbin_watson(r_ARIMA.resid))\n\nplt.figure(figsize= (10,8))\nplt.title('ARIMA Prediction')\nplt.plot(winter_log, label= 'Actual')\nplt.plot(winter_pred, 'r--', label= 'Predicted')\nplt.xlabel('Year Month')\nplt.ylabel('Passengers')\nplt.legend(loc='best')","4c086877":"#Predicting the Future Values\n#Values (p=13, d=0, q=2) are giving the smaller number for evaluation matrices,\n#so let\u2019s use this as a final model to predict the future values for the year 2022\n\n#predict future values\nwinter_prediction = r_ARIMA.predict('1959-12-01', '1974-12-01')\nplt.figure(figsize= (18,8))\nplt.title('Arima future value pediction - order(13,1,0)')\nplt.plot(winter_log, label='Actual')\nplt.plot(winter_prediction, 'r--', label= 'predicted')\nplt.xlabel('Year-Month')\nplt.ylabel('Passengers Growth')\nplt.legend(loc='best')","cb72d4f9":"ACF plot has a significant spike only at lag 1, meaning that all the higher-order\nautocorrelations are effectively explained by the lag-1 and lag-2 autocorrelation. Ideal\nlag values are p = 2 and q = 2, that is, the lag value where the ACF\/PACF chart crosses the\nupper confidence interval for the first time.","dcd5d44b":"Usual practice is to build several models with different p and q and select\nthe one with smallest value of AIC, BIC, MAE and RMSE, the above order(p =13, d= 1, q= 0) seems prefectly suited for the model as the AIC, BIC, Mean absolute Error, Root mean absolute error, Durbin-watson statistic is as low as possibel compared to other calculated (13,0,2), (2,0,2)","340dcc05":"**Pls upvote if you like this model and pls comment if you like to add any other suggestion to this model\nHappy to be appreciated by he fellow Kaggle community!!\nHave a nice Day!!****","df6f1398":"Time series forecasting\nData points that are collected sequentially at a regular intervals  with associated over a time period\nthe time series data which have mean and varinace constant is called stationary time series\ntime series can be modelled to predict the forecast future data points\nwithout any involment of any Other variable, these types are known as time series forecasting"}}