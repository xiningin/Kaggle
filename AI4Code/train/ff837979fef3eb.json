{"cell_type":{"55c826f4":"code","5dd6bc6c":"code","061dd41e":"code","8e1b9a00":"code","8aeb36eb":"code","5f819da6":"code","84acd76e":"code","cb492f66":"code","81c4aec4":"code","b76c5db7":"markdown","46c93791":"markdown","b31edb8a":"markdown","199dc2c5":"markdown","a23b6f30":"markdown","65d20a04":"markdown","7c071a0e":"markdown","82e04797":"markdown","33d53f38":"markdown","cf06151f":"markdown","75f6cfde":"markdown","18c348e3":"markdown","c4ec8961":"markdown","89904449":"markdown","ff4d4f1f":"markdown","e847464b":"markdown","a4c52cfc":"markdown","1bdd3f99":"markdown","6145751f":"markdown"},"source":{"55c826f4":"import numpy as np \nimport pandas as pd \nimport gc\nimport warnings\nwarnings.filterwarnings(\"ignore\", category=DeprecationWarning)\nwarnings.filterwarnings(\"ignore\", category=UserWarning)\nwarnings.filterwarnings(\"ignore\", category=FutureWarning)\nfrom IPython.display import HTML\npd.set_option('max_columns', 50)","5dd6bc6c":"HTML('<iframe width=\"921\" height=\"587\" src=\"https:\/\/www.youtube.com\/embed\/zM4VZR0px8E\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>' )","061dd41e":"train = pd.read_csv('..\/input\/cat-in-the-dat-ii\/train.csv')\ntest = pd.read_csv('..\/input\/cat-in-the-dat-ii\/test.csv')","8e1b9a00":"labels = train.pop('target')\ntrain_id = train.pop(\"id\")\ntest_id = test.pop(\"id\")","8aeb36eb":"labels = labels.values\ndata = pd.concat([train, test])\n\ncolumns = [i for i in data.columns]\ndummies = pd.get_dummies(data,columns=columns, drop_first=True,sparse=True)\n\ntrain = dummies.iloc[:train.shape[0], :]\ntest = dummies.iloc[train.shape[0]:, :]\n\ndel dummies,data\ngc.collect()\n\ntrain = train.sparse.to_coo().tocsr()\ntest = test.sparse.to_coo().tocsr()","5f819da6":"from sklearn.linear_model import LogisticRegression\nlr = LogisticRegression(C=0.20, solver=\"lbfgs\", tol=0.020, max_iter=2020)\n\nlr.fit(train, labels)\nlr_pred = lr.predict_proba(train)[:, 1]\nlr_pred","84acd76e":"from sklearn.metrics import roc_auc_score\nscore = roc_auc_score(labels, lr_pred)\n\nprint(f\"{score:.6f}\")","cb492f66":"submission = pd.read_csv(\"\/kaggle\/input\/cat-in-the-dat-ii\/sample_submission.csv\")\nsubmission[\"id\"] = test_id\nsubmission[\"target\"] = lr.predict_proba(test)[:, 1]\nsubmission.to_csv(\"submission.csv\", index=False)","81c4aec4":"submission.head()","b76c5db7":"<html>\n<body>\n<p><font size=\"4\" color=\"blue\">If you like my kernel please consider upvoting it<\/font><\/p>\n<p><font size=\"3\" color=\"purple\">Remember the upvote button is next to the fork button, and it's free too! ;)<\/font><\/p>\n<\/body>\n<\/html>","46c93791":"# Get Dummies\n> Convert categorical variable into dummy\/indicator variables [1]","b31edb8a":"### Its easy, maybe not !\n![](https:\/\/media1.giphy.com\/media\/l0MYNB04rBb51QNtC\/giphy.webp?cid=790b761175d6f9511d6eff1d6b0eeaaeb300715132180238&rid=giphy.webp)\n[Cat attacking people Compilation](https:\/\/youtu.be\/HrgbZlE7q7k?t=2)\n","199dc2c5":"## Logistic Regression (Binary Classification)","a23b6f30":"### Catching Cats\n![Catching Cats](https:\/\/miro.medium.com\/proxy\/0*5KosvsbnMQSOFABh.gif)\n[DANKEST CAT MEMES](https:\/\/youtu.be\/AehCZYWweFo)","65d20a04":"## Sample Submission","7c071a0e":"\n# Categorical Feature Encoding Challenge II\n## Binary classification, with every feature a categorical (and interactions!)\n## About this Competition\n\n![](https:\/\/media.giphy.com\/media\/H4DjXQXamtTiIuCcRU\/giphy.gif)\n\n> #### In this competition, you will be predicting the probability [0, 1] of a binary target column.\n\nThe data contains binary features (bin_*), nominal features (nom_*), ordinal features (ord_*) as well as (potentially cyclical) day (of the week) and month features. The string ordinal features ord_{3-5} are lexically ordered according to string.ascii_letters.\nSince the purpose of this competition is to explore various encoding strategies, the data has been simplified in that (1) there are no missing values, and (2) the test set does not contain any unseen feature values (See this). (Of course, in real-world settings both of these factors are often important to consider!)\n\n#### Files\n- train.csv - the training set\n- test.csv - the test set; you must make predictions against this data\n- sample_submission.csv - a sample submission file in the correct format\n\n","82e04797":"# Imports\n> We are using a typical data science stack: ``numpy``, ``pandas``, ``sklearn``, ``matplotlib``","33d53f38":"### So Excited ! I can't Wait !\n![](https:\/\/media0.giphy.com\/media\/JIX9t2j0ZTN9S\/giphy.webp?cid=790b7611f3ad87c38ca93cd44145076323983ac377bddc6c&rid=giphy.webp)\n\n[MEOWWWW | Yelling Cat Meme](https:\/\/youtu.be\/hDUJIPYEcLU?t=41)","cf06151f":"![](https:\/\/media0.giphy.com\/media\/Nm8ZPAGOwZUQM\/giphy.gif?cid=790b761175d6f9511d6eff1d6b0eeaaeb300715132180238&rid=giphy.gif)\n[BEWARE! Extremely angry cats!](https:\/\/youtu.be\/HBFBmvt6ZIU?t=42)","75f6cfde":"###  **I'm ready** !\n\n![](https:\/\/media0.giphy.com\/media\/VbnUQpnihPSIgIXuZv\/giphy.webp?cid=790b7611f3ad87c38ca93cd44145076323983ac377bddc6c&rid=giphy.webp)\n\n[Dank Cat Memes Compilation](https:\/\/youtu.be\/jNE5A86OryY)\n","18c348e3":"# Read in Data\n> First, we can list all the available data files. There are a total of 3 files: 1 main file for training (with target) 1 main file for testing (without the target), 1 example submission file.","c4ec8961":"# Final","89904449":"\n# Make Prediction\n## Logistic Regression","ff4d4f1f":"### I'm win\n\n![](https:\/\/media0.giphy.com\/media\/1iu8uG2cjYFZS6wTxv\/giphy.webp?cid=790b761175d6f9511d6eff1d6b0eeaaeb300715132180238&rid=giphy.webp)\n[DANKEST CAT MEMES#2](https:\/\/youtu.be\/HEX2MK9bcos)\n","e847464b":"# General findinds\n\n#### Read Material from Competition  \n- [Best material from all comps!](https:\/\/www.kaggle.com\/c\/cat-in-the-dat-ii\/discussion\/124773) by [Brunhs](https:\/\/www.kaggle.com\/brunhs)\n\n- [CATEGORICAL MATERIAL SURVEY\ud83d\udc31 & Record Linkage](https:\/\/www.kaggle.com\/c\/cat-in-the-dat-ii\/discussion\/124773) by [Caesar Lupum](https:\/\/www.kaggle.com\/caesarlupum)\n\n#### Categorical feature encoding  \n\n- [Categorical feature encoding with TensorFlow](https:\/\/www.kaggle.com\/c\/cat-in-the-dat-ii\/discussion\/124217) by [Luca Massaron](https:\/\/www.kaggle.com\/lucamassaron)\n\n\n","a4c52cfc":"# Evaluate","1bdd3f99":"# References\n- [Pandas Get Dummies](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.get_dummies.html)\n- [Kernel Logistic Regression by Martin Matta](https:\/\/www.kaggle.com\/martin1234567890\/logistic-regression)\n","6145751f":"## Categorical Feature Encoding Challenge 2 WITH MEMES&CATS\n### Come on, come learn too!\n![](https:\/\/media1.giphy.com\/media\/E0cyxhawhe9dm\/200.webp?cid=790b7611f3ad87c38ca93cd44145076323983ac377bddc6c&rid=200.webp)\n[Nyan Cat [original]](https:\/\/youtu.be\/QH2-TGUlwu4)\n\n[Crisl\u00e2nio Mac\u00eado](https:\/\/medium.com\/sapere-aude-tech) - **Kernel Created** - January, 08th, 2019. **Last Update**- January, 08th, 2019\n\n Learn Logistic Regression with Cats \ud83d\udc31: [ \ud83d\ude35 Logistic Regression & \ud83d\ude3a Random Cats ](https:\/\/www.kaggle.com\/caesarlupum\/learn-logistic-regression-with-random-cats)\n\n\n\n- [**Github**](https:\/\/github.com\/crislanio)\n- [**Linkedin**](https:\/\/www.linkedin.com\/in\/crislanio\/)\n- [**Medium**](https:\/\/medium.com\/sapere-aude-tech)\n- [**Quora**](https:\/\/www.quora.com\/profile\/Crislanio)\n- [**Ensina.AI**](https:\/\/medium.com\/ensina-ai\/an%C3%A1lise-dos-dados-abertos-do-governo-federal-ba65af8c421c)\n- [**Hackerrank**](https:\/\/www.hackerrank.com\/crislanio_ufc?hr_r=1)\n- [**Blog**](https:\/\/medium.com\/@crislanio.ufc)\n- [**Personal Page**](https:\/\/crislanio.wordpress.com\/about)\n- [**Twitter**](https:\/\/twitter.com\/crs_macedo)\n\n----------\n\n"}}