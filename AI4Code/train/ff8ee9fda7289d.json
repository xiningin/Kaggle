{"cell_type":{"e9d23b06":"code","7799a99c":"code","c2277a2d":"code","3680ba43":"code","29b31454":"code","ae903602":"code","a7d21c7a":"code","fccdadaf":"code","ff69914d":"code","f07af528":"code","617e2a19":"code","4d61aed2":"code","70005257":"code","7955bf36":"code","679e6a26":"code","75721964":"code","4ccbc1c6":"code","4ef86117":"code","3fc69711":"markdown","97de918e":"markdown","81f1ef2c":"markdown","3c16e8a0":"markdown","fc89549d":"markdown","f6fae957":"markdown","06bdefc8":"markdown","52dada93":"markdown","f513b02c":"markdown","5ea19230":"markdown","33601ddf":"markdown","039c3051":"markdown","7ff05242":"markdown","12387e8a":"markdown","fe8a01d8":"markdown","d1cbe01f":"markdown"},"source":{"e9d23b06":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","7799a99c":"import plotly\nimport plotly.graph_objs as go\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nfrom matplotlib_bar_util import groupby_operation\n\ndf = pd.read_csv('\/kaggle\/input\/vendas\/tudo.csv')","c2277a2d":"df.head()","3680ba43":"df.isnull().sum()","29b31454":"groupby_operation(\n    df,\n    groupbycolumn='product',\n    operation_column='price_x',\n    operation='sum',\n    size=20,\n    title='Os 20 produtos de maior receita',\n    height=7,\n    width=10,\n    index=None,\n)","ae903602":"groupby_operation(\n    df,\n    groupbycolumn='name',\n    operation_column='name',\n    operation='count',\n    size=20,\n    title='Os clientes mais frequentes',\n    height=7,\n    width=10,\n    index=None,\n)","a7d21c7a":"groupby_operation(\n    df,\n    groupbycolumn='name',\n    operation_column='quantity',\n    operation='sum',\n    size=20,\n    title='Os clientes que compram mais',\n    height=7,\n    width=10,\n    index=None,\n)","fccdadaf":"groupby_operation(\n    df,\n    groupbycolumn='name',\n    operation_column='price_x',\n    operation='sum',\n    size=20,\n    title='Os clientes que gastam mais',\n    height=7,\n    width=10,\n    index=None,\n)","ff69914d":"df2 = df.copy()\ndf2['updated_at'] = df['updated_at'].str[:7]","f07af528":"groupby_operation(\n    df2,\n    groupbycolumn='updated_at',\n    operation_column='price_x',\n    operation='sum',\n    size=20,\n    title='Hist\u00f3rico de vendas por m\u00eas',\n    height=7,\n    width=10,\n    index=None,\n)","617e2a19":"df['updated_at'] = pd.to_datetime(df['updated_at'], utc=True)\n\n# df.updated_at.max()\n# df.updated_at.min()\n# df.updated_at.mean()","4d61aed2":"df.index = df.updated_at\n\ndf.head()","70005257":"vendas_por_mes = df.groupby([df.index.year, df.index.month]).price_x.sum()\nvendas_por_mes.index = pd.Series(vendas_por_mes.index.values).apply(lambda x:str(x[0])+'-'+str(x[1]))\n\nlayout = dict(title = 'Vendas por m\u00eas',\n              xaxis = dict(title = 'M\u00eas'),\n              yaxis = dict(title = 'Vendas ($)'),\n              )\ndata = [go.Scatter(x=vendas_por_mes.index, y=vendas_por_mes, mode='lines+markers',\n                 marker=dict(color='blue'))]\nfig = dict(data=data, layout=layout)\niplot(fig)","7955bf36":"vendas_por_ano = df.groupby(df.index.year).price_x.sum()\n\nlayout = dict(title = 'Vendas por ano',\n              xaxis = dict(title = 'Ano'),\n              yaxis = dict(title = 'Vendas ($)'),\n              )\ndata = [go.Scatter(x=vendas_por_ano.index, y=vendas_por_ano, mode='lines+markers',\n                 marker=dict(color='blue'))]\nfig = dict(data=data, layout=layout)\niplot(fig)","679e6a26":"dias = {0: 'Segunda', 1: 'Ter\u00e7a', 2: 'Quarta', 3: 'Quinta', 4: 'Sexta', 5: 'S\u00e1bado', 6: 'Domingo'}\nreceita_por_dia = df.groupby([df.index.weekday]).price_x.sum()\n\nlist(map(lambda x: dias[x], receita_por_dia.index))","75721964":"layout = dict(title = 'Vendas por dia da semana',\n              xaxis = dict(title = 'Dia da semana'),\n              yaxis = dict(title = 'Vendas ($)'),\n              )\ndata = [go.Scatter(x=list(map(lambda x: dias[x], receita_por_dia.index)),\n                   y=receita_por_dia, mode='lines+markers',\n                 marker=dict(color='blue'))]\nfig = dict(data=data, layout=layout)\niplot(fig)","4ccbc1c6":"receita_por_hora = df.groupby([df.index.hour]).price_x.sum()\n\nlayout = dict(title = 'Soma das vendas por hora do dia',\n              xaxis = dict(title = 'Horas do dia'),\n              yaxis = dict(title = 'Vendas ($)'),\n              )\ndata = [go.Scatter(x=receita_por_hora.index,\n                   y=receita_por_hora, mode='lines+markers',\n                 marker=dict(color='blue'))]\nfig = dict(data=data, layout=layout)\niplot(fig)","4ef86117":"quantidade_por_hora = df.groupby([df.index.hour]).quantity.sum()\n\nlayout = dict(title = 'Quantidade de vendas por hora do dia',\n              xaxis = dict(title = 'Horas do dia'),\n              yaxis = dict(title = 'Quantidade ($)'),\n              )\ndata = [go.Scatter(x=quantidade_por_hora.index,\n                   y=quantidade_por_hora, mode='lines+markers',\n                 marker=dict(color='blue'))]\nfig = dict(data=data, layout=layout)\niplot(fig)","3fc69711":"# Top #20 Sales history for year","97de918e":"### Looking for null values","81f1ef2c":"# Top #20 products highest revenue","3c16e8a0":"### Type 2","fc89549d":"### In quantity","f6fae957":"### Verifying dataframe","06bdefc8":"### Type 1","52dada93":"# Top #20 Sales history for day hour","f513b02c":"# Top #20 Sales history for month","5ea19230":"### In spending","33601ddf":"# Top #20 customer most frequent","039c3051":"# Top #20 customer most consumerist","7ff05242":"### In spending","12387e8a":"# Import & Read file","fe8a01d8":"### In quantity","d1cbe01f":"# Top #20 Sales history for week"}}