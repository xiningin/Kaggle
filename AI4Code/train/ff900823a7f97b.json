{"cell_type":{"8f822c31":"code","60d54db9":"code","15c1428f":"code","7354ee04":"code","3ab1b81b":"code","388a0ad8":"code","268b7d4b":"code","f49a54e1":"code","f7ecacc5":"code","f2f3c320":"code","05fe9c65":"code","2a7f4b99":"code","a737ce32":"code","57da5a6a":"code","8c62c078":"code","1b28e336":"code","c5b6cefe":"code","479feabd":"code","a146b783":"code","b4f6f57d":"code","4c950673":"code","0ef10712":"code","b075ab92":"code","353cf3c7":"code","d1b18645":"code","5b120b40":"code","bbca8f3b":"code","819a16c7":"code","6ee028bc":"code","f48b46f0":"code","75b1fdbe":"code","7fe9a969":"code","d1b63d3f":"code","629454b4":"code","9c07aabf":"code","31f37d1c":"code","7a4a8f32":"code","25f20382":"code","647e2f62":"code","993d5526":"code","5bd8a74e":"code","be124fce":"code","934b8e01":"code","c26bc614":"code","463de7b8":"code","4085c38a":"code","be90d574":"code","1870c052":"code","a864719c":"code","2004b4a0":"code","6710669e":"code","864dad2c":"code","30762bc0":"code","8b85dde6":"code","b5cd6e0a":"code","c0b2627a":"code","7dde9449":"code","be571fef":"code","dad3ec58":"code","2521419e":"code","88d62096":"markdown"},"source":{"8f822c31":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","60d54db9":"df = pd.read_csv('..\/input\/titanic\/train.csv')\ndf.head()","15c1428f":"#Checking for null values","7354ee04":"df.isnull().sum()","3ab1b81b":"sns.heatmap(data = df.isnull(),yticklabels=False)","388a0ad8":"df['Embarked']=df.Embarked.fillna('Missing_Embarked')","268b7d4b":"median = df.Age.median()","f49a54e1":"#Replacing the Null values in Age column with median\ndf['Age'] = df['Age'].fillna(median)","f7ecacc5":"sns.heatmap(data = df.isnull(),yticklabels=False)","f2f3c320":"#As we can see the null values in the Age column have been filled","05fe9c65":"df['Cabin']=df.Cabin.fillna('Missing')","2a7f4b99":"sns.heatmap(data = df.isnull(),yticklabels=False)","a737ce32":"#All the null values have be sorted now","57da5a6a":"df.head(10)","8c62c078":"#Getting to know the data visually now","1b28e336":"sns.set_style('whitegrid')\nsns.countplot(df['Survived'])","c5b6cefe":"sns.set_style('whitegrid')\nsns.countplot(df['Survived'],hue=df['Sex'])","479feabd":"sns.set_style('whitegrid')\nsns.countplot(df['Survived'],hue=df['Pclass'])","a146b783":"sns.countplot(df['SibSp'])","b4f6f57d":"\ndf['Fare'].hist(color='green',bins=40,figsize=(8,4))","4c950673":"#Removing categorical values","0ef10712":"#As the name and ticket column does not help in any prediction, we will drop those columns from df","b075ab92":"df.drop(columns=['Name','Ticket'],inplace = True)","353cf3c7":"#Checking the categorical data\nfor i in df:\n    object_list = [i for i in df if df[i].dtype=='O']","d1b18645":"object_list","5b120b40":"for i in object_list:\n    print('.................\\n',df[i].value_counts(),'\\n.................')","bbca8f3b":"#As we can see Embarked and Sex have less no. of value count so we can apply one hot encoding here","819a16c7":"sex_embarked = pd.get_dummies(df[['Sex','Embarked']],drop_first = True)","6ee028bc":"#Merge sex_embarked with df\ndf = pd.concat([df,sex_embarked],axis = 1)","f48b46f0":"df.head()","75b1fdbe":"#Drop the original columns\ndf.drop(['Sex','Embarked'],inplace = True, axis = 1)","7fe9a969":"df","d1b63d3f":"#Handling Cabin. As Cabin hai multiple values. We would use a method where we will take only the first\n#inital of the word and replace the original value with it first.\n#After that, we will apply one hot encoding","629454b4":"df['Cabin'] = df['Cabin'].str[0]","9c07aabf":"df.head()","31f37d1c":"Cabin_one = pd.get_dummies(df['Cabin'],drop_first=True)","7a4a8f32":"df = pd.concat([df,Cabin_one],axis = 1)\n","25f20382":"#The Fare column is not important thus dropping it. Also dropping original cabin\ndf.drop(['Fare','Cabin'],inplace = True, axis = 1)","647e2f62":"df.head()","993d5526":"#Great! Our data is ready for our model!\n\n#Building a Logistic Regression model\u00b6","5bd8a74e":"#Train test split","be124fce":"X = df.drop('Survived',axis=1)","934b8e01":"X.head()","c26bc614":"Y = df['Survived']\nY.head()","463de7b8":"from sklearn.model_selection import train_test_split","4085c38a":"X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.30, random_state=101)","be90d574":"# Training and Predicting","1870c052":"from sklearn.linear_model import LogisticRegression","a864719c":"logmodel = LogisticRegression()\nlogmodel.fit(X_train,y_train)","2004b4a0":"predictions = logmodel.predict(X_test)","6710669e":"from sklearn.metrics import confusion_matrix","864dad2c":"accuracy=confusion_matrix(y_test,predictions)","30762bc0":"accuracy","8b85dde6":"from sklearn.metrics import accuracy_score","b5cd6e0a":"accuracy=accuracy_score(y_test,predictions)\naccuracy","c0b2627a":"predictions","7dde9449":"#Let's move on to evaluate our model!\n\n#Evaluation\n\n#We can check precision,recall,f1-score using classification report!","be571fef":"from sklearn.metrics import classification_report","dad3ec58":"print(classification_report(y_test,predictions))","2521419e":"#Not so bad! You might want to explore other feature engineering and the other titanic_text.csv file, some suggestions for feature engineering:\n\n#Try grabbing the Title (Dr.,Mr.,Mrs,etc..) from the name as a feature\n#Is there any info you can get from the ticket?","88d62096":"Roughly 20 percent of the Age data is missing. The proportion of Age missing is likely small enough for reasonable replacement with some form of imputation. Looking at the Cabin column, it looks like we are just missing too much of that data to do something useful with at a basic level. We'll probably drop this later, or change it to another feature like \"Cabin Known: 1 or 0\""}}