{"cell_type":{"9969752c":"code","6b3177dc":"code","359649f4":"code","9fb27c68":"code","c4a5d2c6":"code","5c7664b5":"code","e8c9f44c":"code","c81d9054":"code","36c66fdc":"code","2899d4b8":"code","eabfaef6":"markdown","46d4a520":"markdown","a1f0693a":"markdown"},"source":{"9969752c":"import keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense,Conv2D,MaxPooling2D,Flatten\nfrom keras.preprocessing.image import ImageDataGenerator","6b3177dc":"train_data=ImageDataGenerator(rescale=1.\/255)\ntest_data=ImageDataGenerator(rescale=1.\/255)","359649f4":"# reading data for train data\ntrain_path='..\/input\/cat-and-dogs\/dataset\/training_set'\ntrain_set=train_data.flow_from_directory(directory=train_path,target_size=(128,128),batch_size=32,color_mode=\"rgb\",class_mode = 'binary')","9fb27c68":"# reading data  for validation data from test data set.\ntest_path='..\/input\/cat-and-dogs\/dataset\/test_set'\nvalidation_set=test_data.flow_from_directory(directory=test_path,target_size=(128,128),batch_size=30,shuffle=True,class_mode = 'binary',color_mode=\"rgb\")","c4a5d2c6":"cnn = Sequential()\n\n# first layer \ncnn.add(Conv2D(32,(3,3),input_shape=(128,128,3),activation='relu'))\ncnn.add(MaxPooling2D(pool_size=(2,2)))\n\n# second layer\ncnn.add(Conv2D(64,(3,3),activation='relu'))\ncnn.add(MaxPooling2D(pool_size=(2,2)))\n\n# flattern layer\ncnn.add(Flatten())\n\n# Dense layer\ncnn.add(Dense(256,activation='relu'))\ncnn.add(Dense(1,activation='sigmoid'))","5c7664b5":"# summary of the model\ncnn.summary()","e8c9f44c":"# compile the model\ncnn.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])","c81d9054":"model_history=cnn.fit(train_set,validation_data=validation_set,epochs=10)","36c66fdc":"import matplotlib.pyplot as plt\nimport numpy as np\nN = 10\nplt.style.use(\"ggplot\")\nplt.figure()\nH=model_history\n\nplt.plot(np.arange(0, N), H.history[\"accuracy\"], label=\"train_acc\")\nplt.plot(np.arange(0, N), H.history[\"val_accuracy\"], label=\"val_accuracy\")\n\nplt.title(\"Training and validation Accuracy on Dataset\")\nplt.xlabel(\"Epoch #\")\nplt.ylabel(\"Loss\/Accuracy\")\nplt.legend(loc=\"lower left\")","2899d4b8":"# checking the Prediction with a single image.\n# its a Dog Image.\nimport numpy as np\nfrom keras.preprocessing import image\ntest_image = image.load_img('..\/input\/cat-and-dogs\/dataset\/single_prediction\/cat_or_dog_1.jpg', target_size = (128,128))\ntest_image = image.img_to_array(test_image)\ntest_image = np.expand_dims(test_image, axis = 0)\nresult = cnn.predict(test_image)\ntrain_set.class_indices\nif result[0][0] == 1:\n    prediction = 'dog'\nelse:\n    prediction = 'cat'\nprint(prediction)","eabfaef6":"# Making model for classification ","46d4a520":"# Binary Classification.\n# Cat and dog image classification","a1f0693a":"Dataset\nThe dataset is already splitted into test_set and training_set.\nWe have 2000 images to test (1k cats and 1k dogs) and 8000 images to train (4k cats and 4k dogs)"}}