{"cell_type":{"9c1323da":"code","6dbe5f9f":"code","a40541e3":"code","62326a43":"code","a655d703":"code","1e935c7d":"code","236e6539":"code","d6e69360":"code","cdb22522":"code","eafd5689":"code","42500195":"code","4ca6ee24":"code","73c815f0":"code","2ebb587b":"code","97747911":"code","d06cf256":"code","e511507b":"code","4d9faa45":"code","f288673f":"code","4cb87396":"code","bcca85c0":"code","67d5064b":"code","0a7e66fe":"code","1badc7ca":"code","52ccb294":"code","1b09a6d3":"code","14fcc0a4":"code","8569de76":"code","360be8ab":"code","3db6b94c":"code","6dbf8622":"code","d1e4c2a9":"code","fc023724":"code","74e98955":"code","0ba16575":"markdown","a06f523d":"markdown","9bf8768f":"markdown","824f8510":"markdown","20266db7":"markdown","05cef305":"markdown","a102b159":"markdown"},"source":{"9c1323da":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n ","6dbe5f9f":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport plotly.express as px","a40541e3":"\ndataset=pd.read_excel('\/kaggle\/input\/sevilla-housing\/Sevilla_housing.xlsx', index_col=0)  ","62326a43":"dataset.info()","a655d703":"dataset.reset_index(level=0, inplace=True)","1e935c7d":"dataset.head()","236e6539":"dataset.tittle.unique()","d6e69360":"dataset.drop_duplicates( keep=\"last\") ","cdb22522":"#price has to be multiplied by 1000, as it was indicated by the description of the dataset\ndataset['price'] = dataset['price'].apply(lambda x: x*1000)\n#year of construction was 0 if there wasnt any information-gonna put instead the median \ndataset['year']=dataset['year'].replace(0,dataset['year'].median())\n","eafd5689":"dataset.tittle.unique()","42500195":"Piso  = ['piso']\nChalet_adosado  = ['chalet adosado']\nChalet_pareado = ['chalet pareado']\nCasa = ['casa o chalet independiente']# casa o chalet independiente are the same so that's why I'm calling both casa\nD\u00faplex = ['d\u00faplex']\nCortijo = ['cortijo']\nEstudio = ['estudio']\nPalacio = ['palacio']\n\u00c1tico = ['\u00e1tico']","4ca6ee24":"d = {'Piso' : Piso,\n     '\u00c1tico' : \u00c1tico,\n     'Chalet_adosado' : Chalet_adosado,\n     'Chalet_pareado': Chalet_pareado,\n     'Casa': Casa,\n      'D\u00faplex': D\u00faplex,\n    'Cortijo': Cortijo,\n     'Estudio':Estudio,\n      'Palacio': Palacio}\n\nd1 = {k: oldk for oldk, oldv in d.items() for k in oldv}\n\n","73c815f0":"for k, v in d1.items():\n    dataset.loc[dataset['tittle'].str.contains(k, case=False), 'type'] = v","2ebb587b":"dataset.type.unique()","97747911":"dataset['neighbourhood']=dataset.tittle.str.extract('-(.*)')   ","d06cf256":"dataset.head()","e511507b":"dataset['neighbourhood'] = dataset['neighbourhood'].str.replace('Sevilla', '')\ndataset['neighbourhood'] = dataset['neighbourhood'].str.replace(',', '')","4d9faa45":"dataset.head()","f288673f":"#With this line of code I will rename the columns tittle, meters and hotels for making the dataset more understandable\ndataset.columns = ['description', 'rooms' , 'price', 'size', 'bathrooms', 'garage', 'terrace', 'zipcode', 'year', 'hotelsNear', 'type', 'neighbourhood']","4cb87396":"dataset.info()","bcca85c0":"#because I have NaN values in type I have to fill them. For now, we will not touch the column 'neighbourhood'\nfor column in ['type']:\n     dataset[column].fillna(dataset[column].value_counts().index[0], inplace=True)\n    ","67d5064b":"dataset.info()","0a7e66fe":"#using Plotly\nfig = px.histogram(dataset, x=\"type\",title=\"Type of housing\")\nfig.show()","1badc7ca":"fig = px.histogram(dataset, x=\"price\", color=\"type\", marginal=\"violin\", \n                         hover_data=dataset.columns, title=\"Price distribution according to type\")\nfig.show()","52ccb294":"dataset['type'][dataset.description == 'Chalet en Puerta de la Carne - Juder\u00eda, Sevilla'] = \"Chalet\"","1b09a6d3":"dataset['type'][dataset.description == 'Chalet adosado en calle Palacios Malaver, Feria, Sevilla'] = 'Chalet_adosado'","14fcc0a4":"#plot again and fixed\nfig = px.histogram(dataset, x=\"price\", color=\"type\", marginal=\"violin\", \n                         hover_data=dataset.columns, title=\"Price distribution according to type\")\nfig.show()","8569de76":"fig = px.histogram(dataset, x=\"neighbourhood\",title=\"Neighbourhood with more houses to sale\")\nfig.show() #without filling the nan values ","360be8ab":"dataset.zipcode.unique()","3db6b94c":"def f(row):\n    if row['zipcode'] == 41001:\n        val = 'Arenal-Museo'\n    if row['zipcode'] ==41011:\n        val = 'Tablada'\n    if row['zipcode'] ==41018:\n        val = 'La Buhaira'\n    if row['zipcode'] ==41004:\n        val = 'San Bernardo'\n    if row['zipcode'] ==41004:\n        val = 'San Bernardo'\n    if row['zipcode'] ==41010:\n        val = 'Triana\/Los Remedios'\n    if row['zipcode'] ==41003:\n        val = 'Feria'\n    if row['zipcode'] ==41009:\n        val = 'Pol\u00edgono Norte'\n    if row['zipcode'] ==41013:\n        val = 'La Palmera-Los Bermejales-Prado San Sebasti\u00e1n-Felipe II-Bueno Monreal'\n    if row['zipcode'] ==41002:\n        val = 'San Vicente-San Lorenzo-San Gil-Alameda'\n    if row['zipcode'] ==41014:\n        val = 'Bellavista'\n    if row['zipcode'] ==41012:\n        val = 'Heli\u00f3polis'\n    if row['zipcode'] ==41005:\n        val = 'Nervi\u00f3n'\n    if row['zipcode'] ==41008:\n        val = 'La Rosaleda'\n    if row['zipcode'] ==41020:\n        val = 'Valdezorras'\n    if row['zipcode'] ==41015:\n        val = 'Sevilla Norte'\n    if row['zipcode'] ==41007:\n        val = 'San Pablo-Santa Clara'\n    if row['zipcode'] ==41006:\n        val = 'Cerro-Amate'\n    if row['zipcode'] ==41016:\n        val = 'Torreblanca'\n    if row['zipcode'] ==41019:\n        val = 'Sevilla Este'\n    return val","6dbf8622":"dataset['District'] = dataset.apply(f, axis=1)","d1e4c2a9":"dataset.head()","fc023724":"dataset.info()","74e98955":"fig = px.histogram(dataset, x=\"District\",title=\"Houses on sale by districts\")\nfig.show() ","0ba16575":"Each of this zipcode refers to a specific district of Seville. A district is a group of neighbourhoods. So instead of filling the nan values on neighbourhood using the mode or the most frequent value,\nI'm going to create a column called District, to see a more realistic distributions of the houses on sell in Seville.","a06f523d":"Now I want to create a column 'neighbourhood'. This step is also complicated for non-Spanish speakers. The neighbourhood is the text which appears in tittle after '-'. Example: Museo, Sevilla. Museo is the neighbourhood. ","9bf8768f":"Keep in mind that in the dataset there are houses with the same name but different price. This is because the owners published the house twice but changing the price to a new one. That is why I'm keeping the house with the latest price published for it. ","824f8510":"There is an outlier. A chalet of 8 rooms has been labeled as Piso. Gonna fix that. There is another one, a chalet adosado labeled as palacio.\n","20266db7":"I want to create a column 'Type'. It will reference the type of the house. For that, I will look at the values of tittle to see all the type of house listed. \nThis step may be complicated for one who doesn't speak Spanish. So here's a tip: in title all the words before 'en' refers to the type of the house. ","05cef305":"Why did I not fill the NaN values in the column 'neighbourhood' before? There are a lot of NaN values in that column, so if I would have fill them using the most_frequent value or the mode, all these NaN values would have been the most frequent neighbourhood, Museo. \n","a102b159":"What can we do then to fill the NaN values? The key is the zipcode. "}}