{"cell_type":{"7d5dd495":"code","99d46f9e":"code","177d299c":"code","39f9fb72":"code","b9cfaf43":"code","95bab4a4":"code","a71f2179":"code","8335d018":"code","ca5fa628":"code","9462a1ae":"code","ecf8b3c7":"code","7a507dec":"code","49628ff4":"code","cc405c31":"code","09885c2a":"code","29858138":"code","c0d8df0a":"code","f599eb57":"code","a833f5e0":"code","90ffde83":"code","23c09969":"code","5aa800e9":"code","b4e8dfc0":"code","98befb64":"code","788dabf0":"code","55813c1f":"code","922db6fc":"code","c8926000":"code","c30c9894":"code","245022ee":"code","3d696d20":"code","62085ef6":"code","52558d2e":"code","bf5fcea6":"code","d533dd2a":"code","cfeb1a9e":"code","bdeffbca":"code","d6dcfaa9":"code","f856a789":"code","45d7fd5c":"markdown","3f9dd895":"markdown","6f07c603":"markdown","04204bce":"markdown","fdbecd5d":"markdown","00f39af7":"markdown","e48765e9":"markdown","e1e2e7bb":"markdown","6ba83353":"markdown","b9f4f67a":"markdown","c1b93e1a":"markdown","3b2930a1":"markdown","3ab38af6":"markdown","63892e0c":"markdown","30adb768":"markdown","8d8c8ce4":"markdown","76813244":"markdown","f155c656":"markdown","3cf1fadb":"markdown","bf73c7e4":"markdown","b696ada4":"markdown","fc366935":"markdown","b35556f1":"markdown","5c21df1a":"markdown","8522626b":"markdown","0c9064c2":"markdown","d4ce5ead":"markdown","822f9bbb":"markdown","42a8621c":"markdown"},"source":{"7d5dd495":"import pandas as pd\n\nimport my_dao\nimport process\nimport pretties\nimport time_utils\nimport stats\nimport plotter\n\nimport warnings\nfrom bokeh.plotting import show, output_notebook","99d46f9e":"pretties.max_data_frame_columns()\npretties.decimal_notation()\noutput_notebook()\nwarnings.filterwarnings('ignore')","177d299c":"train = my_dao.load_dataset(\"train\")\ntrain = train.groupby(\"store_dept\").apply(process.train_sales_semantic_enrichment)\n\nfeat = my_dao.load_features()\nfeat = process.features_semantic_enrichment(feat)\n\nstores = my_dao.load_stores()","39f9fb72":"train = train.merge(feat, how=\"left\", left_on=[\"Store\", \"Date\"], right_on=[\"Store\", \"Date\"], suffixes=[\"\", \"_y\"])\ndel train[\"IsHoliday_y\"]\ndel train[\"timestamp_y\"]\ntrain = train.merge(stores, how=\"left\", left_on=[\"Store\"], right_on=[\"Store\"])","b9cfaf43":"cols = ['Date', 'Store', 'Dept', 'Weekly_Sales', 'pre_holiday', 'IsHoliday', 'pos_holiday', 'Fuel_Price', \n        'CPI', 'Unemployment', 'celsius', 'datetime', 'Type', 'sales_diff', 'sales_diff_p',\n        'MarkDown1', 'MarkDown2', 'MarkDown3', 'MarkDown4', 'MarkDown5', \n        'Size', 'Temperature', 'timestamp', 'store_dept', \"day_n\", \"week_n\", \"month_n\", \"year\", \"wm_date\", \"up_diff\", \"celsius_diff\"]\n\ntrain = train[cols].sort_values(\"timestamp\")\ntrain.sample(6)","95bab4a4":"train[\"Date\"].head(1).append(train[\"Date\"].tail(1))","a71f2179":"grouped_sales = train.groupby(\"Date\")[\"Weekly_Sales\"].median()\np = plotter.plot_time_series_count(grouped_sales.index, grouped_sales, color=\"navy\", title=\"Weekly_Sales median vs Datetime\", legend=\"All depts sales median\", relative_y_axis=True, height=300)\np = plotter.time_series_count_painted_holidays(train, p=p, color=\"cyan\", alpha=0.9)\nshow(p)","8335d018":"p = plotter.time_series_count_painted(train, title=\"Weekly_Sales median vs Datetime - Diamonds repesents Holidays\", height=300, width=900)\np = plotter.time_series_count_painted_holidays(train, p=p, color=\"cyan\", alpha=0.9)\nshow(p)","ca5fa628":"from statsmodels.tsa.filters.hp_filter import hpfilter\n\ngdp_cycle, gdp_trend = hpfilter(grouped_sales, lamb=10)\np = plotter.plot_time_series_count(grouped_sales.index, grouped_sales, color=\"navy\", title=\"Weekly_Sales median vs Datetime\", legend=\"All depts sales median\", relative_y_axis=True, height=300)\n\ngrouped_sales = train.groupby(\"Date\")[\"Weekly_Sales\"].median()\np = plotter.plot_time_series_count(grouped_sales.index, gdp_trend, color=\"magenta\", title=\"Weekly_Sales vs Datetime\", legend=\"Hodrick-Prescott filter\", relative_y_axis=True, height=300, p=p)\nshow(p)","9462a1ae":"p = plotter.plot_error_values(train, \"week_n\", \"sales_diff_p\", drop_quantile=0.15, \n                           title=\"Weekly_Sales errors grouped by week_n\")\nshow(p)","ecf8b3c7":"p = plotter.plot_error_values(train, \"wm_date\", \"Weekly_Sales\", drop_quantile=0.25, \n                           title=\"Weekly_Sales errors grouped by wm_date\", width=1200)\nshow(p)","7a507dec":"p = plotter.plot_error_values(train, \"wm_date\", \"sales_diff_p\", drop_quantile=0.25, \n                           title=\"sales_diff_p errors grouped by wm_date\", width=1400)\nshow(p)","49628ff4":"train.groupby(\"Store\")[\"Weekly_Sales\"].mean().sort_values().plot.bar(title=\"Sales amout per store\", figsize=(10, 3))","cc405c31":"train.drop_duplicates([\"Store\", \"Date\"]).groupby(\"Store\")[\"IsHoliday\"].value_counts().plot.bar(title=\"Holidays count by store\",figsize=(18,3))","09885c2a":"stats.freq(train.drop_duplicates([\"Store\", \"Date\"])[\"IsHoliday\"])","29858138":"train.groupby(\"IsHoliday\")[\"Weekly_Sales\"].median().plot.bar(title=\"Weekly_Sales grouped by Holidays\")","c0d8df0a":"p = plotter.plot_error_values(train, \"IsHoliday\", \"Weekly_Sales\", drop_quantile=0.25, \n                           title=\"Weekly_Sales errors grouped by IsHoliday\")\nshow(p)","f599eb57":"train.groupby(\"pre_holiday\")[\"Weekly_Sales\"].median().plot.bar(title=\"Weekly_Sales BEFORE Holidays\", figsize=(5,2))","a833f5e0":"p = plotter.plot_error_values(train, \"pre_holiday\", \"Weekly_Sales\", drop_quantile=0.25, \n                           title=\"Weekly_Sales errors grouped by pre_holiday\", width=350, height=200)\nshow(p)","90ffde83":"train.groupby(\"pos_holiday\")[\"Weekly_Sales\"].median().plot.bar(title=\"Weekly_Sales AFTER Holidays\", figsize=(5,2))","23c09969":"p = plotter.plot_error_values(train, \"pos_holiday\", \"Weekly_Sales\", drop_quantile=0.25, \n                           title=\"Weekly_Sales errors grouped by pos_holiday\", width=350, height=200)\nshow(p)","5aa800e9":"train.groupby([\"Store\", \"wm_date\"]).apply(lambda g : g[\"Fuel_Price\"].corr(g[\"Weekly_Sales\"])).hist(bins=20)","b4e8dfc0":"train.groupby([\"Store\", \"wm_date\"]).apply(lambda g : g[\"CPI\"].corr(g[\"Weekly_Sales\"])).hist(bins=20)","98befb64":"train.groupby([\"Store\", \"wm_date\"]).apply(lambda g : g[\"Unemployment\"].corr(g[\"Weekly_Sales\"])).hist(bins=20)","788dabf0":"train.plot.scatter(\"celsius\", \"Weekly_Sales\")","55813c1f":"grouped_sales = train.groupby(\"Date\")[\"celsius\"].median()\np = plotter.plot_time_series_count(grouped_sales.index, grouped_sales, color=\"magenta\", title=\"Temperature vs Datetime\", legend=\"celsius\", relative_y_axis=True, height=200)\np.legend.location = 'bottom_center'\nshow(p)","922db6fc":"grouped_sales = train.groupby(\"Date\")[\"Weekly_Sales\"].median()\np = plotter.plot_time_series_count(grouped_sales.index, grouped_sales, color=\"navy\", title=\"Weekly_Sales vs Datetime\", legend=\"overall median\", relative_y_axis=True, height=200)\nshow(p)","c8926000":"train[\"celsius\"].corr(train[\"Weekly_Sales\"])","c30c9894":"train[\"celsius_diff\"].corr(train[\"Weekly_Sales\"])","245022ee":"size_sales = train.groupby(\"Size\")[\"Weekly_Sales\"].median().reset_index()\nprint(size_sales[\"Size\"].corr(size_sales[\"Weekly_Sales\"]))\nsize_sales.plot.scatter(\"Size\", \"Weekly_Sales\", title=\"Weekly_Sales median vs Size\")","3d696d20":"mds = [\"MarkDown1\", \"MarkDown2\", \"MarkDown3\", \"MarkDown4\", \"MarkDown5\"]","62085ef6":"for md in mds:\n    print(md+\":\", round(train[md].corr(train[\"Weekly_Sales\"]), 4))","52558d2e":"from statsmodels.tsa.filters.hp_filter import hpfilter","bf5fcea6":"store_dept = train[\"store_dept\"].sample().iloc[0]\nstore_dept","d533dd2a":"store_dept_sales = train[train[\"store_dept\"] == store_dept].set_index(\"Date\")\nyears = store_dept_sales[\"year\"].drop_duplicates().to_list()[0:2]\nyears","cfeb1a9e":"dy1 = store_dept_sales[store_dept_sales[\"year\"] == years[0]]\ndy2 = store_dept_sales[store_dept_sales[\"year\"] == years[1]].reset_index()\ndy2[\"Date\"] = dy2[\"Date\"].str.slice(4,10).apply(lambda dt : str(years[0]) + str(dt))\ndy2 = dy2.set_index(\"Date\")","bdeffbca":"pretties.display_md(\"#### Store-Dept: {}\".format(store_dept))","d6dcfaa9":"p = plotter.plot_time_series_count(dy1.index, dy1[\"Weekly_Sales\"], color=\"navy\", title=\"Weekly_Sales vs Datetime for store_dept {}\".format(store_dept), \n                                relative_y_axis=True, height=300, legend=str(years[0]), p=None)\np = plotter.plot_time_series_count(dy2.index, dy2[\"Weekly_Sales\"], color=\"magenta\", title=\"Weekly_Sales vs Datetime for store_dept {}\".format(store_dept), \n                                relative_y_axis=True, height=300, legend=str(years[1]), p=p)\n\nshow(p)","f856a789":"cycle1, trend1 = hpfilter(dy1[\"Weekly_Sales\"], lamb=0.5)\ncycle2, trend2 = hpfilter(dy2[\"Weekly_Sales\"], lamb=0.5)\n\np = plotter.plot_time_series_count(dy1.index, trend1, color=\"cyan\", title=\"Weekly_Sales vs Datetime\", \n                                relative_y_axis=True, height=300, line_width=3, legend=\"hp \" + str(years[0]), p=p)\np = plotter.plot_time_series_count(dy2.index, trend2, color=\"#FFC0C8\", title=\"Weekly_Sales vs Datetime\", \n                                relative_y_axis=True, height=300, line_width=3, legend=\"hp \" + str(years[1]), p=p)\n\np.legend.location = 'top_center'\nshow(p)","45d7fd5c":"## Notes\nThe positive peaks up is always followed by one or more negative peaks. <br>\nWeek_n is the order of the week within a month.","3f9dd895":"## Notes\nHodrick-Prescott filter gave us an interesting smoothing.","6f07c603":"# Hello\nThis notebook is followed by the Forecasting one <br>\nin which everything it more organized. <br>\n\nThis notebook was made within free creative, brain <br>\nstormer environment. The less the mind was concern <br>\nabout formal aesthetics the more creative it is :)<br>\n\nBut don't worry, the lack of text and explanation <br>\nhere is covered at Forecasting notebook.<br>\nHowever, the art and beauty on charts are here :)<br>\n\nEnjoy!","04204bce":"#### Before Holiday","fdbecd5d":"# Exploring Transformations","00f39af7":"# <font color=\"navy\">Markdown<\/font>","e48765e9":"Overlaying year Store-Dept Sales Plot","e1e2e7bb":"# <font color=\"navy\">Unemployment<\/font>","6ba83353":"## Notes\nThese error bars are seem to represent few, but interesting, <br>\ndifferences in Sales between ordered month weeks.","b9f4f67a":"## Notes\nIt seems that Fuel_Price variation for the same date over years is not strong related to Weekly_Sales variation","c1b93e1a":"## Notes\nDespite these both time series have different years, <br>\nthey were placed together in order to check if there <br>\nevidence of Week_n and Month_n explaining shopping behavior.","3b2930a1":"#### After Holiday","3ab38af6":"## Notes\nWeekly_Sales difference seems to show that people use to make bigger <br>\nshoppings at the first week of month. <br>\nPeople are the same no matter where in the world  :)","63892e0c":"# <font color=\"navy\">Size<\/font>","30adb768":"# <font color=\"navy\">Temperature<\/font>","8d8c8ce4":"## Notes\nNot interesting to say... A peak in Thanksgiving day and Crhistmas","76813244":"# <font color=\"navy\">Store<\/font>","f155c656":"## Notes\nInteresting spread :) <br>\nAlso a good correlation","3cf1fadb":"## Notes\nIt seems that Fuel_Price variation for the same date over years is not strong related to Weekly_Sales variation","bf73c7e4":"## Notes\n:(","b696ada4":"# <font color=\"navy\">CPI<\/font>","fc366935":"## Notes\nStore sizes dispersion","b35556f1":"## Notes\nPlotting two years data with Hodrick-Prescott filter each one <br>\nHP filter seem to stand between them.","5c21df1a":"# <font color=\"navy\">Fuel_Price<\/font>","8522626b":"## Notes\nIt seems that Fuel_Price variation for the same date over years is not strong related to Weekly_Sales variation","0c9064c2":"# <font color=\"darkred\">Relations<\/font>\nwith target variable","d4ce5ead":"# <font color=\"navy\">IsHoliday<\/font>\nholiday evaluation weight = 5 <br>\nnot holiday evaluation weight = 1","822f9bbb":"# <font color=\"navy\">Date<\/font>","42a8621c":"# walmart-recruiting-store-sales-forecasting\nhttps:\/\/www.kaggle.com\/c\/walmart-recruiting-store-sales-forecasting"}}