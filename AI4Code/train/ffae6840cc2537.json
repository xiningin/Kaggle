{"cell_type":{"82157892":"code","f4128c12":"code","a9955eef":"code","98601534":"code","1c87ff92":"code","736ba77e":"code","56ab3dc2":"code","c8752d72":"code","135ea344":"code","2a1cbbb6":"code","8079faac":"code","c68173c6":"code","f09a1c52":"code","8829ee00":"code","b384b2ff":"code","f0339e5e":"code","e826a4ad":"markdown","98a23efb":"markdown","121c2de1":"markdown","7890c613":"markdown","e22bfce5":"markdown","9b04b8b1":"markdown","a5b3045c":"markdown","aa5f3c66":"markdown","695255da":"markdown","a1dba769":"markdown","20a2658b":"markdown","4ed9b414":"markdown","7fbd6400":"markdown","955e002d":"markdown","13e20340":"markdown","484cca4f":"markdown"},"source":{"82157892":"#First import necessary libraries\nimport pandas as pd\nimport numpy as np","f4128c12":"#import data into df\ndf =pd.read_csv(\"..\/input\/Decisiontree.csv\")","a9955eef":"#Look at initial df\ndf.head()","98601534":"#Get info regarding df\nprint(df.info())","1c87ff92":"#Seperating dtypes into own df\nprint(df.select_dtypes(include=['object']).head())\n","736ba77e":"print(df['Fastfood'].value_counts())  ","56ab3dc2":"##Check categories for unique values and counts to find out cardinality \nprint(df['Do_you_want_to_eat?'].value_counts())","c8752d72":"label = {'y':1, 'n':0}\ndf['Do_you_want_to_eat?'] = df['Do_you_want_to_eat?'].map(label)\ndf.head()","135ea344":"#Importing category encoder library\nimport category_encoders as ce","2a1cbbb6":"##Check categories for unique values and counts to find out cardinality \nprint(df['What_do_you_want_to_eat?'].value_counts())","8079faac":"encoder = ce.OneHotEncoder(cols=['What_do_you_want_to_eat?'])\ndf= encoder.fit_transform(df)\ndf.head()","c68173c6":"##Check categories for unique values and counts to find out cardinality \nprint(df['Fastfood'].value_counts())","f09a1c52":"encoder = ce.BinaryEncoder(cols=['Fastfood'])\ndf = encoder.fit_transform(df)\n\ndf.head()","8829ee00":"##Check categories for unique values and counts to find out cardinality \nprint(df['Restaurant'].value_counts())","b384b2ff":"encoder = ce.OrdinalEncoder(cols = ['Restaurant'])\n# ce_leave.fit(X3, y3['outcome'])        \n# ce_leave.transform(X3, y3['outcome']) \ndf = encoder.fit_transform(df)\n\ndf.head()","f0339e5e":"##Check categories for unique values and counts to find out cardinality \nprint(df['Choice'].value_counts())","e826a4ad":"As you can see most of data is categorical.  We need to deal with this.","98a23efb":"## Will continue progress with working with this and building a model to hopefully get better predictions of what a hungry gf wants to eat but current findings is the final choice seems to be favoring IDLT with this small sample set.\n\nIDLT means after all those decisions the result was I Don't like that.\n","121c2de1":"As you can see there are 4 unique values I will use one of the classic encoders called Onehot to encode this.\nOne hot will give each value a column and it will either be 1 or a 0 depending if it is true or false.","7890c613":"Another classic encoder that is used is Ordinal encoder. Ordinal encorder will use a single column of integers to represent classes. Classes are assumed to have not true order and selected at random unless indicated.","e22bfce5":"Getting data regarding asking gf what she wanted to eat\nGathered from years of experience of asking gf what she wanted to eat","9b04b8b1":"Next column I will be checking out the column, What_do_you_want_to_eat?, for unique values and cardinality","a5b3045c":"## Dealing with categorical data ","aa5f3c66":"4 possible decisions","695255da":"We will deal with the Restuarant column and find unique values","a1dba769":"As you can see most info is objects or categorical data","20a2658b":"Another classic encoder that is used is binary encoder.  Binary encoder converts each integer to binary digits.  Each binary digit gets one column.   Some loss but fewer dimensions.","4ed9b414":"Seeing as there are only 2 unique values I could encode this the old fashion way using pandas.","7fbd6400":"3 decisions for fast food and has a lower cardinality then the column asking What do you want to eat?\nWe need to encode these categorical data into something we can use for any modeling we wish to do.\nI decided to show some different encoding techniques to deal with this categorical data","955e002d":"It made 5 new one hot encoded columns for the 4 options and a 5th for Null value if no option was chosen","13e20340":"Category encoder is a set of scikit-learn-style transformers for encoding categorical variables into numeric with different techniques.  Easy to use and works well with modeling.  Will be showing classic encoders as examples.\nWould install using  \n```pip install category_encoders```  \nor  \n```conda install -c conda-forge category_encoders```","484cca4f":"Assigned an integer to the 7 different unique vales into a single column"}}