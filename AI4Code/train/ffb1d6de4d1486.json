{"cell_type":{"dfd9776d":"code","7ef66f08":"code","36854701":"code","f84e9067":"code","35697a21":"code","fb97b421":"code","2585247d":"code","3716fe44":"code","f971510c":"code","a1c09c59":"code","78613144":"code","a6b5bafe":"code","227be8a8":"code","2ecbb4fe":"code","8ce8b44e":"code","857cba4c":"code","298bb350":"code","4c39424d":"code","2688be92":"code","924ac9d5":"code","078228bd":"code","42ef8186":"code","3a11cc1a":"code","308895ba":"code","dd38b9a2":"code","a55a0b7c":"code","bb4629b7":"code","0a3bf3ec":"code","bdab292e":"code","b66b8cf8":"code","17df7bd3":"code","bd472e40":"code","04f0b5b0":"code","1e8e518b":"code","242f6965":"code","ac8f8405":"code","f7a882c8":"code","9560ec41":"code","795e235b":"code","223e0855":"code","8327adbe":"code","5fcc8f2a":"code","2cfc38f2":"code","f44f3da7":"code","159dfc41":"code","fc20a2d9":"code","5a112956":"code","8355b63b":"code","2c1de2f9":"code","d8f231be":"code","297a8756":"code","1a19837d":"code","e619ab6b":"code","005ceb09":"code","6200a2f2":"code","28428332":"code","6f164757":"code","a3cb5506":"code","66978a1f":"code","740bf73e":"code","3a733d3d":"code","8c7f9641":"code","30536d06":"code","07e301a4":"code","285d53af":"code","4c75fe7b":"code","0195a5fb":"code","a5559a5a":"code","4ea92939":"code","ec075867":"code","55272b40":"code","aa6bd53c":"code","639acfc1":"code","81369f24":"code","8b979266":"code","5456333f":"code","9681acae":"code","b97ee973":"code","79824e42":"code","c9384520":"code","6d384a37":"code","21415cf4":"code","6a4eeeb2":"code","645aa80b":"code","4a5f4135":"code","90e0fbb5":"code","d3c7983b":"code","b44c5e26":"code","058cedc6":"code","be4c4eae":"code","5246789b":"code","81296419":"code","67c996e3":"code","bf3c0b93":"code","0dd60d2d":"code","572e6d1f":"code","d490b374":"code","8d8c7af5":"code","e570ec90":"code","d0b41250":"code","6c21df41":"code","0a9c3c98":"code","7be5ea6c":"code","e9f60fbb":"code","190cc59c":"code","02234d0e":"code","40f5bd02":"code","9b47f744":"code","38b9b01e":"code","4b4e5909":"code","8b825bd2":"code","9b3ec1fa":"code","c80f3106":"code","940a738b":"code","7a414d23":"code","eeac2f3f":"code","936af639":"code","ebeefded":"code","810165ba":"code","9c627169":"code","cd884536":"code","0793e833":"code","c259d992":"code","94dcd69d":"code","879bc5b2":"code","0b30f6b1":"code","4aaeeb99":"code","6519ab78":"code","8a64a946":"code","2c16deb1":"code","81d65a56":"code","35c028c5":"code","01dc419e":"code","6c48bc34":"code","c283b630":"code","a8eba873":"code","e505cfee":"code","27f88172":"code","34833934":"code","e739b4af":"code","39e2bfa8":"code","f001df76":"code","2de13963":"code","0ea593e4":"code","2840f4f9":"code","66793bd8":"code","60dba3a6":"code","e1081699":"code","e83ddcc0":"code","3f5a0fff":"code","975060ab":"code","3b11460e":"code","8b3fb1a1":"code","2d00fa5f":"code","dd061e58":"code","c41381a9":"code","39bc7aba":"code","f56152af":"code","62ae879f":"code","71b51f6e":"code","3ca4125f":"code","e3b0e933":"code","b05ade05":"code","46dceebe":"code","bb89584c":"code","09e05f7c":"code","a132e979":"code","40fd494e":"code","11d72b48":"code","e3850cad":"code","ce9095c2":"code","1d342ec3":"code","b63248a4":"code","d0ac227d":"code","060a501e":"code","1d83f080":"code","ffb9917b":"code","87d508e5":"code","2ccbf621":"code","c52673f5":"code","05e70f90":"code","71de1596":"code","4280093c":"code","3c2c83e1":"code","77dc96ab":"markdown","dc6e2ac2":"markdown","b3c2124b":"markdown","9bcd8544":"markdown","b65b4afc":"markdown","4cbc040e":"markdown","665d794d":"markdown","348fd917":"markdown","b0e80bc1":"markdown","768f770f":"markdown","584b708f":"markdown","bab3d044":"markdown","95975733":"markdown","834d6aac":"markdown","7139e520":"markdown","e29f9b27":"markdown","5070db49":"markdown","3ea8887d":"markdown","448dee7c":"markdown","53d1a590":"markdown","7a49d284":"markdown","3a6e88c9":"markdown","f2a2c7cf":"markdown","0c8f5694":"markdown","a8a58747":"markdown","cb13be4c":"markdown","cf6211f7":"markdown","3d4be7d0":"markdown","e75433de":"markdown","56102e0f":"markdown","dca4bfab":"markdown","569c1cc4":"markdown","0693449f":"markdown","0ddf28eb":"markdown","8c9c16a7":"markdown","b4531280":"markdown","3f6b658d":"markdown","4b141013":"markdown","f5d3493a":"markdown","67a82d09":"markdown","f49690ae":"markdown","5fac6b27":"markdown","ca204731":"markdown","757349e2":"markdown","30cdb5e5":"markdown","950ffda0":"markdown","ee4ae56b":"markdown","53eb63ce":"markdown","ebe97f48":"markdown","a76b1eab":"markdown","04dbbbec":"markdown","0b667e65":"markdown","03f35d44":"markdown","4c4f7cad":"markdown","aa5e59e7":"markdown","ee9efed8":"markdown","cad127ae":"markdown","cbc26abd":"markdown","d68ab336":"markdown","5dfcb77b":"markdown","38b2f8e1":"markdown","2da0d7b8":"markdown","b5f6644b":"markdown","b663a99d":"markdown","2e9edd51":"markdown","e6919df0":"markdown","bb7b3cc2":"markdown","77a2a015":"markdown","89863b4b":"markdown","0b6c68fe":"markdown","26cb6993":"markdown","acc66bb7":"markdown","2d966f16":"markdown","efd3d349":"markdown","75d0c5d3":"markdown","814e6b87":"markdown","27b33146":"markdown","e0b843e2":"markdown","92753b89":"markdown","60b4cfb5":"markdown","5dfd3e2f":"markdown","ef3180d6":"markdown","9a0a0c73":"markdown","4b4f5f34":"markdown","19cac7d6":"markdown","b25549ca":"markdown","c75182a1":"markdown","908a3d43":"markdown","6f573888":"markdown","149d84eb":"markdown","14ad4afa":"markdown","336324c0":"markdown","3436d1ec":"markdown","208d3423":"markdown","dbe62289":"markdown","837f1621":"markdown","03aa5aab":"markdown","1aa470ee":"markdown","7ceaa413":"markdown","31409fe2":"markdown","9bbe8127":"markdown","50d74cb3":"markdown","ae4fef04":"markdown","70c8abd6":"markdown","cec27bf3":"markdown","c4aaf76f":"markdown","699afb45":"markdown","0c02215d":"markdown","adde6443":"markdown","59d7ec24":"markdown","946b4ece":"markdown","67d2534f":"markdown","201fb280":"markdown","50c27fa5":"markdown","6edd513b":"markdown","5fe68d3f":"markdown","bb994fbf":"markdown","f7e1dece":"markdown","05a57b17":"markdown","03a83a36":"markdown","5e31ace0":"markdown","d5a18907":"markdown","ec8e4bd3":"markdown","90561e93":"markdown","78cd10b6":"markdown","3ca50def":"markdown","040c9b07":"markdown","feba19df":"markdown","88afbb57":"markdown","55b85997":"markdown","72ccebe0":"markdown","7be6e970":"markdown","60b01bb4":"markdown","bca2f28d":"markdown","fe4d5063":"markdown","3c0403d3":"markdown","0a2edb88":"markdown","4fd53a54":"markdown","a005252d":"markdown","1ff3eb77":"markdown","2b28c3cb":"markdown","dcfc2997":"markdown","5733c732":"markdown","b2a6c20b":"markdown","e715bf6e":"markdown","ccd3d045":"markdown","5399aa3e":"markdown","f21283c8":"markdown","8115f442":"markdown","6f03888b":"markdown","4734c3fd":"markdown","ead86a73":"markdown","32b349e4":"markdown","9d0592f3":"markdown","833adc48":"markdown","ae7ebcc4":"markdown","0935dad2":"markdown","bc9ac2fe":"markdown","ec6830b8":"markdown","cc46f698":"markdown","113084f1":"markdown","03e7e53e":"markdown","d5408408":"markdown","16ecd233":"markdown","9523758f":"markdown","c275c2f4":"markdown"},"source":{"dfd9776d":"import numpy as np\nimport pandas as pd\npd.set_option('max_columns', 120)\npd.set_option('max_colwidth', 5000)\nimport matplotlib.pyplot as plt\nfrom matplotlib import style\nimport seaborn as sns\n%matplotlib inline\nplt.rcParams['figure.figsize'] = (12,8)","7ef66f08":"loan = pd.read_csv(\"..\/input\/lending-club\/loan.csv\",encoding = \"ISO-8859-1\", low_memory=False)\nloan.head(3)","36854701":"loan.shape","f84e9067":"loan.describe()","35697a21":"loan.head()","fb97b421":"missing = round(100*(loan.isnull().sum()\/len(loan.id)), 2)\nmissing.loc[missing > 0]","2585247d":"columns_with_missing_values = list(missing[missing >= 50].index)\nlen(columns_with_missing_values)","3716fe44":"loan = loan.drop(columns_with_missing_values,axis=1)\nloan.shape","f971510c":"missing = round(100*(loan.isnull().sum()\/len(loan.id)), 2)\nmissing[missing != 0]","a1c09c59":"loan = loan.drop('desc',axis=1)","78613144":"print(\"unique emp_title : %d\"  % len(loan.emp_title.unique()))\nprint(\"unique emp_length : %d\"  % len(loan.emp_length.unique()))\nprint(\"unique title : %d\"  % len(loan.title.unique()))\nprint(\"unique revol_util : %d\"  % len(loan.revol_util.unique()))\nprint(\"unique title : %d\"  % len(loan.title.unique()))\nprint(\"unique last_pymnt_d : %d\"  % len(loan.last_pymnt_d.unique()))\nprint(\"unique last_credit_pull_d : %d\"  % len(loan.last_credit_pull_d.unique()))\nprint(\"unique collections_12_mths_ex_med : %d\"  % len(loan.collections_12_mths_ex_med.unique()))\nprint(\"unique chargeoff_within_12_mths : %d\"  % len(loan.chargeoff_within_12_mths.unique()))\nprint(\"unique pub_rec_bankruptcies : %d\"  % len(loan.pub_rec_bankruptcies.unique()))\nprint(\"unique tax_liens : %d\"  % len(loan.tax_liens.unique()))","a6b5bafe":"loan.emp_length.unique()","227be8a8":"loan.collections_12_mths_ex_med.unique()","2ecbb4fe":"loan.chargeoff_within_12_mths.unique()","8ce8b44e":"loan.pub_rec_bankruptcies.unique()","857cba4c":"loan.tax_liens.unique()","298bb350":"drop_columnlist = ['collections_12_mths_ex_med', 'chargeoff_within_12_mths', 'tax_liens']\nloan = loan.drop(drop_columnlist,axis=1)","4c39424d":"loan.shape","2688be92":"loan.pub_rec_bankruptcies.value_counts()","924ac9d5":"loan=loan[~loan.pub_rec_bankruptcies.isnull()]","078228bd":"missing = round(100*(loan.isnull().sum()\/len(loan.id)), 2) \nmissing[missing != 0]","42ef8186":"loan=loan[~loan.emp_title.isnull()]\nloan=loan[~loan.emp_length.isnull()]","3a11cc1a":"loan.shape","308895ba":"missing = round(100*(loan.isnull().sum()\/len(loan.id)), 2) \nmissing[missing != 0]","dd38b9a2":"loan=loan[~loan.title.isnull()]\nloan=loan[~loan.revol_util.isnull()]\nloan=loan[~loan.last_pymnt_d.isnull()]","a55a0b7c":"loan.shape","bb4629b7":"missing =round(100*(loan.isnull().sum()\/len(loan.id)), 2) \nmissing[missing != 0]","0a3bf3ec":"loan.to_csv('clean_loan.csv', encoding='utf-8', index=False)","bdab292e":"clean_loan = loan[:]","b66b8cf8":"clean_loan.nunique().sort_values()","17df7bd3":"columns_tobe_dropped = ['id','member_id','funded_amnt','funded_amnt_inv','pymnt_plan','url','zip_code','initial_list_status','policy_code','application_type','acc_now_delinq','delinq_amnt',]\nclean_loan= clean_loan.drop(columns_tobe_dropped,axis=1)","bd472e40":"clean_loan.shape","04f0b5b0":"clean_loan.total_pymnt.value_counts().tail()","1e8e518b":"clean_loan.total_rec_late_fee.value_counts().tail()","242f6965":"clean_loan.collection_recovery_fee.value_counts().tail()","ac8f8405":"clean_loan.total_pymnt= round(clean_loan.total_pymnt,2)\nclean_loan.total_rec_late_fee= round(clean_loan.total_rec_late_fee,2)\nclean_loan.collection_recovery_fee= round(clean_loan.collection_recovery_fee,2)","f7a882c8":"datetime_colmns=['issue_d','earliest_cr_line','last_pymnt_d','last_credit_pull_d']\nclean_loan[datetime_colmns].info()","9560ec41":"clean_loan.issue_d = pd.to_datetime(clean_loan.issue_d, format='%b-%y')\nclean_loan.earliest_cr_line = pd.to_datetime(clean_loan.earliest_cr_line, format='%b-%y')\nclean_loan.last_pymnt_d = pd.to_datetime(clean_loan.last_pymnt_d, format='%b-%y')\nclean_loan.last_credit_pull_d = pd.to_datetime(clean_loan.last_credit_pull_d, format='%b-%y')","795e235b":"clean_loan[datetime_colmns].info()","223e0855":"clean_loan=clean_loan.drop_duplicates()\nclean_loan.shape","8327adbe":"clean_loan.int_rate.describe()","5fcc8f2a":"clean_loan.revol_util.describe()","2cfc38f2":"clean_loan['int_rate'] = clean_loan['int_rate'].str.strip('%').astype('float')\nclean_loan['revol_util'] = clean_loan['revol_util'].str.strip('%').astype('float')","f44f3da7":"clean_loan[['int_rate','revol_util']].info()","159dfc41":"clean_loan.emp_length.value_counts()","fc20a2d9":"emp_length_dict = {\n    '< 1 year' : 0,\n    '1 year' : 1,\n    '2 years' : 2,\n    '3 years' : 3,\n    '4 years' : 4,\n    '5 years' : 5,\n    '6 years' : 6,\n    '7 years' : 7,\n    '8 years' : 8,\n    '9 years' : 9,\n    '10+ years' : 10\n}","5a112956":"clean_loan = clean_loan.replace({\"emp_length\": emp_length_dict })","8355b63b":"clean_loan.emp_length.value_counts()","2c1de2f9":"clean_loan.term.value_counts()","d8f231be":"clean_loan['term'] = clean_loan.term.apply(lambda x: x.split()[0])\nclean_loan.term.value_counts()","297a8756":"clean_loan['earliest_cr_line_month'] = clean_loan['earliest_cr_line'].dt.month\nclean_loan['earliest_cr_line_year'] = clean_loan['earliest_cr_line'].dt.year\nlen(clean_loan[clean_loan['earliest_cr_line_year'] > 2011 ])","1a19837d":"clean_loan[clean_loan['earliest_cr_line_year'] > 2011 ]['earliest_cr_line_year'].unique()","e619ab6b":"clean_loan.loc[clean_loan['earliest_cr_line_year'] > 2011 , 'earliest_cr_line_year'] = clean_loan['earliest_cr_line_year'] - 100\nclean_loan.groupby('earliest_cr_line_year').loan_amnt.count()","005ceb09":"clean_loan['issue_d_month'] = clean_loan['issue_d'].dt.month\nclean_loan['issue_d_year'] = clean_loan['issue_d'].dt.year","6200a2f2":"clean_loan.to_csv('final_loan.csv', encoding='utf-8', index=False)","28428332":"final_loan = clean_loan[:]\nfinal_loan.shape","6f164757":"final_loan.loan_status.value_counts()","a3cb5506":"final_loan = final_loan[final_loan['loan_status'].isin(['Fully Paid','Charged Off'])]\nfinal_loan.shape","66978a1f":"## Found this solution to show labels in bar plots from https:\/\/stackoverflow.com\/a\/48372659 and edited\n\ndef showLabels(ax, d=None):\n    plt.margins(0.2, 0.2)\n    rects = ax.patches\n    i = 0\n    locs, labels = plt.xticks() \n    counts = {}\n    if not d is None:\n        for key, value in d.items():\n            counts[str(key)] = value\n\n    # For each bar: Place a label\n    for rect in rects:\n        # Get X and Y placement of label from rect.\n        y_value = rect.get_height()\n        x_value = rect.get_x() + rect.get_width() \/ 2\n\n        # Number of points between bar and label. Change to your liking.\n        space = 5\n        # Vertical alignment for positive values\n        va = 'bottom'\n\n        # If value of bar is negative: Place label below bar\n        if y_value < 0:\n            # Invert space to place label below\n            space *= -1\n            # Vertically align label at top\n            va = 'top'\n\n        # Use Y value as label and format number with one decimal place\n        if d is None:\n            label = \"{:.1f}%\".format(y_value)\n        else:\n            try:\n                label = \"{:.1f}%\".format(y_value) + \"\\nof \" + str(counts[str(labels[i].get_text())])\n            except:\n                label = \"{:.1f}%\".format(y_value)\n        \n        i = i+1\n\n        # Create annotation\n        plt.annotate(\n            label,                      # Use `label` as label\n            (x_value, y_value),         # Place label at end of the bar\n            xytext=(0, space),          # Vertically shift label by `space`\n            textcoords=\"offset points\", # Interpret `xytext` as offset in points\n            ha='center',                # Horizontally center label\n            va=va)                      # Vertically align label differently for\n                                        # positive and negative values.","740bf73e":"# This function plots a given column buckets against loan_status (default = 'Charged Off')\n# The plots are in percentages \n# (absolute numbers do not make sense -> category values can have very different absolute numbers)\n# We want to see what are the chances of some category leading to loan default\n# Absolute numbers are also printed to assess level of confidence in a % value. \n\ndef plotLoanStatus(dataframe, by, loanstatus='Charged Off'):\n    grp = dataframe.groupby(['loan_status',by])[by].count()\n    cnt = dataframe.groupby(by)[by].count()\n    #print(grp)\n    percentages = grp.unstack() * 100 \/ cnt.T\n    #print(percentages)\n    ax = percentages.loc[loanstatus].plot.bar(color=sns.color_palette('husl', 16))\n    ax.set_ylabel('% of loans ' + loanstatus)\n    showLabels(ax, grp[loanstatus].to_dict())\n    plt.margins(0.2, 0.2)\n    plt.tight_layout()\n    return ax","3a733d3d":"# This method plots a distribution of target column, and its boxplot against loan_status column\n\ndef plot_distribution(dataframe, col):\n    plt.figure(figsize=(15,5))\n    plt.subplot(1, 2, 1)\n    ax = sns.distplot(dataframe[col])\n    plt.subplot(1, 2, 2)\n    sns.boxplot(x=dataframe[col], y=dataframe['loan_status'], data=dataframe)\n    plt.show()","8c7f9641":"# This method prints two plots side by side \n# Left one is percentage of a categorical variable in the entire dataset \n# Right one is percentage for Charged Off loans \n# Significant changes in percentage from left to right can indicate a value of interest\n\ndef plot_percentages(dataframe, by, sortbyindex=False):\n    plt.subplot(1, 2, 1)\n    values = (final_loan[by].value_counts(normalize=True)*100)\n    if sortbyindex:\n        values = values.sort_index()\n    ax = values.plot.bar(color=sns.color_palette('husl', 16))\n    ax.set_ylabel('% in dataset', fontsize=16)\n    ax.set_xlabel(by, fontsize=12)\n    showLabels(ax)\n    plt.subplot(1, 2, 2)\n    values = (final_loan.loc[final_loan['loan_status']=='Charged Off'][by].value_counts(normalize=True)*100)\n    if sortbyindex:\n        values = values.sort_index()\n    ax = values.plot.bar(color=sns.color_palette('husl', 16))\n    ax.set_ylabel('% in Charged Off loans', fontsize=16)\n    showLabels(ax)","30536d06":"(final_loan['grade'].value_counts(normalize=True)*100).sort_index()","07e301a4":"plt.figure(figsize=(5,7))\nax = final_loan.groupby('loan_status').loan_amnt.count().plot.bar()\nshowLabels(ax)\nplt.show()","285d53af":"print(\"%.2f\" % (final_loan.loc[final_loan['loan_status'] == 'Charged Off'].loan_status.count() * 100\/len(final_loan)))","4c75fe7b":"plt.figure(figsize=(5,7))\nax = (final_loan.groupby('loan_status').total_pymnt.sum() * 100 \/ final_loan.groupby('loan_status').loan_amnt.sum()).plot.bar()\nax.set_ylabel('% loan recovered', fontsize=16)\nplt.margins(0.2, 0.2)\nshowLabels(ax)","0195a5fb":"plot_distribution(final_loan, 'loan_amnt')","a5559a5a":"final_loan.groupby('loan_status')['loan_amnt'].describe()","4ea92939":"#Create Derived categorical variable\nfinal_loan['loan_amnt_bin'] = pd.cut(final_loan['loan_amnt'], \n                                      [x for x in range(0, 36000, 5000)], labels=[str(x)+'-'+str(x+5)+'k' for x in range (0, 35, 5)])","ec075867":"plotLoanStatus(final_loan, 'loan_amnt_bin')","55272b40":"def categoricalBarPlots(df, arr):\n    rows = int(len(arr)\/2)\n    for idx, val in enumerate(arr, start=1):\n        plt.subplot(rows, 2, idx)\n        ax = df.groupby(val).loan_amnt.count().plot.bar(color=sns.color_palette('husl', 16))\n        showLabels(ax)\n\n    plt.tight_layout()","aa6bd53c":"plt.figure(figsize=(15,15))\n\ncategoricalBarPlots(final_loan, ['home_ownership', 'term', 'verification_status', 'purpose', 'grade', 'pub_rec_bankruptcies'])","639acfc1":"plt.figure(figsize=(10,5))\nplot_percentages(final_loan, 'term')","81369f24":"plt.figure(figsize=(15,5))\nplot_percentages(final_loan, 'purpose')","8b979266":"plt.figure(figsize=(10, 5))\nplotLoanStatus(final_loan, 'purpose')","5456333f":"plt.figure(figsize=(7,5))\nplotLoanStatus(final_loan, 'pub_rec_bankruptcies')","9681acae":"final_loan.int_rate.describe()","b97ee973":"plt.figure(figsize=(15,5))\nplot_distribution(final_loan, 'int_rate')","79824e42":"final_loan.groupby('loan_status')['int_rate'].describe()","c9384520":"final_loan['interest_rate_buckets'] = round(final_loan['int_rate'])","6d384a37":"plt.figure(figsize=(12,5))\nplotLoanStatus(final_loan, 'interest_rate_buckets')","21415cf4":"final_loan.installment.describe()","6a4eeeb2":"plt.figure(figsize=(15,5))\nplot_distribution(final_loan, 'installment')","645aa80b":"final_loan.grade.value_counts()","4a5f4135":"final_loan.sub_grade.value_counts(normalize=True).head()","90e0fbb5":"plt.figure(figsize=(10,5))\nsns.countplot(final_loan['sub_grade'], order=sorted(final_loan.sub_grade.unique()))\nplt.show()","d3c7983b":"plt.figure(figsize=(15,5))\nplot_percentages(final_loan, 'grade', True)","b44c5e26":"plt.figure(figsize=(10,5))\nplotLoanStatus(final_loan, 'grade')","058cedc6":"fig, ax = plt.subplots(figsize=(10,5))\nfinal_loan.boxplot(column=['int_rate'],by='grade', ax=ax, rot=90)","be4c4eae":"# top 10 employee\ntop_10_emp_title = final_loan.emp_title.value_counts(normalize=False).head(10)","5246789b":"plt.figure(figsize=(10,5))\na=sns.barplot(x=top_10_emp_title.index, y=top_10_emp_title.values)\na.set_ylabel('Count of emp_title')\nplt.show()","81296419":"plotLoanStatus(final_loan[final_loan['emp_title'].isin(top_10_emp_title.index.values)], 'emp_title')","67c996e3":"final_loan.emp_length.value_counts(normalize=True)","bf3c0b93":"plt.figure(figsize=(10,5))\nsns.countplot(final_loan['emp_length'], order=sorted(final_loan.emp_length.unique()))\nplt.show()","0dd60d2d":"plt.figure(figsize=(15, 5))\nplot_percentages(final_loan, 'emp_length')","572e6d1f":"plt.figure(figsize=(10,5))\nplot_percentages(final_loan, 'home_ownership')","d490b374":"final_loan.annual_inc.describe(percentiles=[0.1, 0.25, 0.5, 0.75, 0.9])","8d8c7af5":"# Let's get rid of outliers to analyze annual income. \n# Keep only the ones that are within +3 to -3 standard deviations in the column 'Data'.\ndataframe = final_loan[np.abs(final_loan.annual_inc-final_loan.annual_inc.mean()) <= (3*final_loan.annual_inc.std())]","e570ec90":"dataframe.annual_inc.describe()","d0b41250":"plt.figure(figsize=(15, 5))\nsns.distplot(final_loan['annual_inc'], hist_kws={'log':False})\nplt.xticks(np.arange(0, 260000, 20000))\nplt.show()","6c21df41":"#Create Derived categorical variable\nfinal_loan['income_bin'] = (final_loan['annual_inc']\/20000).astype(int)","0a9c3c98":"plt.figure(figsize=(10,5))\nax = plotLoanStatus(final_loan.loc[final_loan['income_bin']<21], 'income_bin')\nax.set_xticklabels([(str(int(x.get_text())*10)+'-'+str(int(x.get_text())*10+10)+'k') for x in ax.get_xticklabels()])","7be5ea6c":"final_loan.verification_status.value_counts()","e9f60fbb":"plt.figure(figsize=(20,5))\nplot_percentages(final_loan, 'verification_status', True)","190cc59c":"plt.figure(figsize=(15,5))\nplt.subplot(1, 3, 1)\nsns.countplot(final_loan['issue_d_year'], order=sorted(final_loan.issue_d_year.unique()))\n\nplt.subplot(1, 3, 2)\nsns.countplot(final_loan['issue_d_month'], order=sorted(final_loan.issue_d_month.unique()))\n\n#Fraction of loans charged off and fully Paid\nplt.subplot(1, 3, 3)\nplotLoanStatus(final_loan, 'issue_d_year')\n\nplt.show()","02234d0e":"plt.figure(figsize=(10, 5))\nplotLoanStatus(final_loan, 'issue_d_month')","40f5bd02":"final_loan.title.describe()","9b47f744":"final_loan.title.value_counts().head(10)","38b9b01e":"final_loan = final_loan.drop('title',axis =1 )","4b4e5909":"final_loan.addr_state.value_counts(normalize=True).head(10)","8b825bd2":"plt.figure(figsize=(30,5))\nplt.subplot(1, 2, 1)\nsns.countplot(final_loan['addr_state'], order=sorted(final_loan.addr_state.unique()))\n\n#Fraction of loans charged off and fully Paid\ncharge_off_count = final_loan.groupby('addr_state')['loan_status'].value_counts(normalize=True).loc[:,'Charged Off']  \nFully_paid_count = final_loan.groupby('addr_state')['loan_status'].value_counts(normalize=True).loc[:,'Fully Paid']  \n\nplt.figure(figsize=(30,10))\nplt.subplot(2, 2, 1)\na=sns.barplot(x=charge_off_count.index, y=charge_off_count.values)\na.set_ylabel('portion of Loans Charged-off')\n\nplt.show()","9b3ec1fa":"final_loan.dti.describe()","c80f3106":"plt.figure(figsize=(10,5))\n\nplot_distribution(final_loan, 'dti')","940a738b":"# Create derived variable \nfinal_loan['dti_bin'] = pd.cut(final_loan['dti'], [0,5,10,15,20,25,30], labels=['0-5','5-10','10-15','15-20','20-25','25-30'])\nplt.figure(figsize=(10,5))\nplotLoanStatus(final_loan, 'dti_bin')","7a414d23":"final_loan.delinq_2yrs.value_counts(normalize=True)","eeac2f3f":"plt.figure(figsize=(10,5))\nplotLoanStatus(final_loan, 'delinq_2yrs')","936af639":"final_loan.earliest_cr_line_year.value_counts(normalize=True).head()","ebeefded":"plt.figure(figsize=(20,5))\nplt.subplot(1, 2, 1)\n\nsns.distplot(final_loan['earliest_cr_line_year'])\n\nplt.figure(figsize=(40,10))\nplt.subplot(2, 2, 1)\nplotLoanStatus(final_loan.loc[final_loan['earliest_cr_line_year'] > 1969], 'earliest_cr_line_year')\nplt.show()","810165ba":"final_loan.inq_last_6mths.value_counts(normalize=True)","9c627169":"plt.figure(figsize=(10,10))\nplt.subplot(2, 1, 1)\nc=sns.countplot(final_loan['inq_last_6mths'], order=sorted(final_loan.delinq_2yrs.unique()))\nc.set_yscale('log')\n\nplt.subplot(2, 1, 2)\nplotLoanStatus(final_loan, 'inq_last_6mths')\nplt.show()","cd884536":"final_loan.open_acc.describe()","0793e833":"plt.figure(figsize=(15,5))\nplot_distribution(final_loan, 'open_acc')\nplt.show()","c259d992":"final_loan.groupby('loan_status')['open_acc'].describe()","94dcd69d":"final_loan.pub_rec.value_counts(normalize=True)","879bc5b2":"plt.figure(figsize=(15,5))\nplt.subplot(1, 2, 1)\nc=sns.countplot(final_loan['pub_rec'], order=sorted(final_loan.delinq_2yrs.unique()))\nc.set_yscale('log')\n\nplt.subplot(1, 2, 2)\nplotLoanStatus(final_loan, 'pub_rec')\nplt.show()","0b30f6b1":"final_loan.revol_bal.describe()","4aaeeb99":"# keep only the ones that are within +3 to -3 standard deviations in the column 'Data'.\nfinal_loan = final_loan[np.abs(final_loan.revol_bal-final_loan.revol_bal.mean()) <= (3*final_loan.revol_bal.std())]\nfinal_loan['revol_bal_log'] = final_loan['revol_bal'].apply(lambda x : np.log(x+1))","6519ab78":"plt.figure(figsize=(15,5))\n\nplt.subplot(1, 2, 1)\nsns.distplot(final_loan['revol_bal'])\n\nplt.subplot(1, 2, 2)\nsns.boxplot(x=final_loan['revol_bal'], y=final_loan['loan_status'], data=final_loan)\n\nplt.show()\n\nplt.subplot(2, 1, 1)\nsns.boxplot(x=final_loan['revol_bal'], data=final_loan)\nplt.show()","8a64a946":"final_loan.groupby('loan_status')['revol_bal'].describe()","2c16deb1":"final_loan.revol_util.describe()","81d65a56":"fig, ax = plt.subplots(figsize=(5,5))\nfinal_loan.boxplot(column=['revol_util'],by='loan_status', ax=ax, rot=90)","35c028c5":"final_loan['revol_util_bin'] = round(final_loan['revol_util']\/5)","01dc419e":"plt.figure(figsize=(14,5))\nax = plotLoanStatus(final_loan, 'revol_util_bin')\nax.set_xticklabels([(str(float(x.get_text())*5)+'%') for x in ax.get_xticklabels()])\nplt.show()","6c48bc34":"final_loan.total_acc.describe()","c283b630":"plt.figure(figsize=(15,5))\n\nplot_distribution(final_loan, 'total_acc')","a8eba873":"final_loan.out_prncp.value_counts()","e505cfee":"final_loan.groupby('loan_status')['out_prncp'].describe()","27f88172":"final_loan = final_loan.drop('out_prncp',axis=1)","34833934":"final_loan.out_prncp_inv.value_counts()","e739b4af":"final_loan.groupby('loan_status')['out_prncp_inv'].describe()","39e2bfa8":"final_loan = final_loan.drop('out_prncp_inv',axis=1)","f001df76":"final_loan.total_pymnt.describe()","2de13963":"# keep only the ones that are within +3 to -3 standard deviations in the column 'Data'.\nfinal_loan = final_loan[np.abs(final_loan.total_pymnt-final_loan.total_pymnt.mean()) <= (3*final_loan.total_pymnt.std())]\nfinal_loan['total_pymnt'] = final_loan['total_pymnt'].apply(lambda x : np.log(x))","0ea593e4":"plt.figure(figsize=(15,5))\nplot_distribution(final_loan, 'total_pymnt')\nplt.show()","2840f4f9":"final_loan = final_loan.drop('total_pymnt',axis=1)","66793bd8":"final_loan.last_pymnt_d.value_counts().head()","60dba3a6":"final_loan['last_pymnt_d_month']= final_loan['last_pymnt_d'].dt.month\nfinal_loan['last_pymnt_d_year']= final_loan['last_pymnt_d'].dt.year","e1081699":"plt.figure(figsize=(10,10))\nplt.subplot(2, 1, 1)\n\nsns.distplot(final_loan['last_pymnt_d_year'])\n\nplt.subplot(2, 1, 2)\nplotLoanStatus(final_loan, 'last_pymnt_d_year')\nplt.show()","e83ddcc0":"final_loan.last_pymnt_amnt.describe()","3f5a0fff":"final_loan['last_pymnt_amnt_log'] = final_loan['last_pymnt_amnt'].apply(lambda x : np.log(x+1))","975060ab":"plt.figure(figsize=(15,5))\n\nplot_distribution(final_loan, 'last_pymnt_amnt_log')\nplt.show()","3b11460e":"final_loan.last_credit_pull_d.value_counts().head()","8b3fb1a1":"final_loan['last_credit_pull_d_month']= final_loan['last_credit_pull_d'].dt.month\nfinal_loan['last_credit_pull_d_year']= final_loan['last_credit_pull_d'].dt.year","2d00fa5f":"final_loan.last_credit_pull_d_year.value_counts(normalize=True)","dd061e58":"plt.figure(figsize=(10,5))\nsns.distplot(final_loan['last_credit_pull_d_year'])\nplt.show()","c41381a9":"final_loan['ratio'] = final_loan['loan_amnt'] * 10 \/ final_loan['annual_inc']\nsns.distplot(final_loan['ratio'])","39bc7aba":"final_loan['ratio_bin'] = (final_loan['ratio'].astype(int)) * 10\nplt.figure(figsize=(7,5))\nplotLoanStatus(final_loan, 'ratio_bin')","f56152af":"plt.figure(figsize=(10,5))\nfinal_loan.groupby('issue_d_year').loan_amnt.count().plot(kind='line', fontsize=7)\nplt.show()","62ae879f":"plt.figure(figsize=(10,5))\nfinal_loan.groupby('issue_d_year').loan_amnt.mean().plot(kind='line', fontsize=7)\nplt.show()","71b51f6e":"sns.jointplot('annual_inc', 'loan_amnt', final_loan.loc[final_loan['annual_inc']<260000])\nplt.show()","3ca4125f":"final_loan.boxplot(column='loan_amnt', by='grade')\nplt.show()","e3b0e933":"final_loan.loc[final_loan['annual_inc']<260000].boxplot(column='annual_inc', by='grade')\nplt.show()","b05ade05":"sns.barplot(x='verification_status', y='loan_amnt', hue=\"loan_status\", data=final_loan, estimator=np.mean)","46dceebe":"final_loan.boxplot(column='int_rate', by='term')\nplt.show()","bb89584c":"final_loan.boxplot(column='int_rate', by='sub_grade',figsize=(10,5))\nplt.show()","09e05f7c":"final_loan.boxplot(column='int_rate', by='loan_status',figsize=(7,5))","a132e979":"sns.barplot(x='grade', y='loan_amnt', hue=\"term\", data=final_loan, estimator=np.mean)\nplt.show()","40fd494e":"sns.barplot(x='term', y='loan_amnt', hue=\"loan_status\", data=clean_loan, estimator=np.mean)\nplt.show()","11d72b48":"sns.barplot(x='grade', y='revol_util', hue=\"loan_status\", data=final_loan, estimator=np.mean)\nplt.show()","e3850cad":"plt.figure(figsize=(20,5))\nsns.barplot(x='addr_state', y='loan_amnt', hue='loan_status',data=final_loan, estimator=np.mean)\nplt.show()","ce9095c2":"sns.jointplot('revol_util', 'int_rate', final_loan)","1d342ec3":"plt.figure(figsize=(20,5))\nfinal_loan.boxplot(column='revol_util', by='grade',figsize=(10,5))\nplt.show()","b63248a4":"corr=final_loan.corr()\ncorr['loan_amnt']","d0ac227d":"plt.figure(figsize=(15,15))\ncont_var= ['loan_amnt', 'int_rate', 'installment',\n       'emp_length', 'annual_inc',\n       'dti', 'delinq_2yrs', 'earliest_cr_line',\n       'inq_last_6mths', 'open_acc', 'pub_rec', 'revol_bal', 'revol_util',\n       'total_acc', 'last_pymnt_d', 'last_pymnt_amnt', 'last_credit_pull_d',\n       'pub_rec_bankruptcies']\ncorr = final_loan[cont_var].corr()\nsns.heatmap(corr, annot=True, center=0.5)","060a501e":"sns.jointplot('revol_util', 'loan_amnt', final_loan)","1d83f080":"sns.jointplot('int_rate', 'loan_amnt', final_loan)","ffb9917b":"final_loan['dti_bin']\nfinal_loan.groupby('dti_bin').int_rate.mean()","87d508e5":"plt.figure(figsize=(20,5))\nsns.barplot(x='dti_bin', y='open_acc', hue='loan_status',data=final_loan, estimator=np.mean)\nplt.show()","2ccbf621":"plt.figure(figsize=(20,5))\nsns.barplot(x='delinq_2yrs', y='loan_amnt', hue='grade',data=final_loan, estimator=np.mean)\nplt.show()","c52673f5":"plt.figure(figsize=(20,5))\nsns.barplot(x='delinq_2yrs', y='int_rate', hue='loan_status',data=final_loan, estimator=np.mean)\nplt.show()","05e70f90":"sns.jointplot('loan_amnt', 'int_rate', final_loan.loc[final_loan.pub_rec_bankruptcies > 0])","71de1596":"sns.jointplot('loan_amnt', 'int_rate', final_loan.loc[final_loan.pub_rec > 0])","4280093c":"final_loan[['pub_rec', 'pub_rec_bankruptcies']].corr()","3c2c83e1":"sns.jointplot('dti', 'int_rate', final_loan)","77dc96ab":"The median of the distribution sugests that by large the borrower's seem to have 9 open credit lines.","dc6e2ac2":"**Observation** :\n\n- The category *small_business* percentage __doubles from 3.8 to 7.2__ for Charged Off loans. Let's see how the categories of this variable behave.","b3c2124b":"The value vary a lot. Lets conver it to log scale and plot to find trend.","9bcd8544":"**title** : The loan title provided by the borrower","b65b4afc":"It is better to let missing values be and continue with the analysis rather than extrapolate the available information.\n\nLet us summarise how to deal with missing values:\n\n1. Set values as missing values: Identify values that indicate missing data, and yet are not recognised by the software as such, e.g treat blank strings, \"NA\", \"XX\", \"999\", etc. as missing.\n\n2. Adding is good, exaggerating is bad: You should try to get information from reliable external sources as much as possible, but if you can\u2019t, then it is better to keep missing values as such rather than exaggerating the existing rows\/columns.\n\n3. Delete rows, columns: Rows could be deleted if the number of missing values are significant in number, as this would not impact the analysis. Columns could be removed if the missing values are quite significant in number.\n\n4. Fill partial missing values using business judgement: Missing time zone, century, etc. These values are easily identifiable.","4cbc040e":"**Observation** :\n\n- __loan_amnt__ is correlated to last_payment_amount with r factor.44, as expected\n- __int_rate__ is correlated to revol_util with r factor of .47 - This is good, as company is charging higher interest from riskier loan.\n- __loan_amnt revol_bal__ are correlated with r factor .35 - This is not good as it suggests that higher loan amount is being approved to riskier borrowers.\n- __delinq_2yrs__ is totally un-correlated with public record of bankruptcy. Therefore they represent distinct features with individual predictive value.","665d794d":"final_loan.groupby('loan_status')['installment'].describe()","348fd917":"There were **57 columns** with more than 50% values as missing. Removing such columns as these columns clearly add noise and wont help in analysis.","b0e80bc1":"pub_rec_bankruptcies can be seen to have taking values like [0,1,2]. Almost 35000 records with 0 record of bankrupcies, 1500 records having one bankrupcies case and 7 records with two bankrupcies case.\nWhile we could have taken the mode representation of the data which is 0 bankrupcies to impute the missing values. But, we decide to remove the rows instead so that we ensure we dont add any bais to the data.","768f770f":"**installment** : The monthly payment owed by the borrower if the loan originates.","584b708f":"Dropping Duplicated rows if any,","bab3d044":"We have been provided with the Private Data of Lending Club. The complete loan data for all loans issued through the time period __2007 to 2011__.\n\nWe also have a data dictionary which describes the meaning of these variables.","95975733":"Let's remove the desc column because purpose and title column will do same for the data.","834d6aac":"**earliest_cr_line** : The month the borrower's earliest reported credit line was opened. Let's split the date column into earliest_cr_line_month and earliest_cr_line_year","7139e520":"Converting the dtype of these columns to datetime","e29f9b27":"This seems to be a result of y2k like error. Year stored in two digits being interpreted as year in 21st century. Let's fix the entries. ","5070db49":"**issue_d** : The month which the loan was funded","3ea8887d":"**home_ownership** : The home ownership status provided by the borrower during registration. Our values are: __RENT, OWN, MORTGAGE, OTHER.__","448dee7c":"Now, we have now reduced the data set to have 36433 loan records and 50 attributes with no missing values. Let's write it into another file and use that file for further analysis.","53d1a590":"**emp_title** : The job title supplied by the Borrower when applying for the loan. Employer Title replaces Employer Name for all loans listed after 9\/23\/2013","7a49d284":"**emp_length** : Employment length in years. Possible values are between 0 and 10 where 0 means less than one year and 10 means ten or more years.","3a6e88c9":"Next, let's standardize the precision of the data. There are certain columns with need rounding of the values up until two decimal places.\n\nThese columns are:\n\n1. __total_pymnt__\n2. __total_rec_late_fee__\n3. __collection_recovery_fee__","f2a2c7cf":"The columns __collections_12_mths_ex_med, chargeoff_within_12_mths and tax_liens__ has either value of 0 or nan(no entry\/blank). The range of values that these categorical columns can take is not of any significant impact to the analysis.\n<br> We can decide to drop these columns for analysis.","0c8f5694":"### Fix invalid values","a8a58747":"**purpose** : A category provided by the borrower for the loan request.","cb13be4c":"**Observation** :\n\n- There is no impact of home_ownership to default on loan.","cf6211f7":"**revol_bal** : Total credit revolving balance","3d4be7d0":"**Observation** :\n\n- Max of the loan takers are from the US Army, then Bank of America follwed by IBM and AT&T.\n- Kaiser Permanents, wells Fargo, UPS, USAF, US Air Force and Walmart are also among the top 10 emp_title loans.\n- The numbers per employer are quite low, and this variable is unlikely to have an impact on default rates.","e75433de":"Next, there are few columns expressing % like int_rate and revol_util.\nThese has values like '15.27%' and '9.40%'.\nFurther these columns has dtype as 'object'. Let's convert these columns to have just the value withoout '%' and typecast it to float.","56102e0f":"**grade and sub_grade** : LC assigned loan grade and subgrade.","dca4bfab":"**open_acc** : The number of open credit lines in the borrower's credit file.","569c1cc4":"### Let us see graphs of some other important variables","0693449f":"You work for a __consumer finance company__ which specialises in lending various types of loans to urban customers. When the company receives a loan application, the company has to make a decision for loan approval based on the applicant\u2019s profile. Two __types of risks__ are associated with the bank\u2019s decision:\n\n- If the applicant is __likely to repay the loan__, then not approving the loan results in a __loss of business__ to the company\n\n- If the applicant is __not likely to repay the loan__, i.e. he\/she is likely to default, then approving the loan may lead to a __financial loss__ for the company\n\n \n\nThe data given below contains the information about past loan applicants and whether they \u2018defaulted\u2019 or not. The aim is to identify patterns which indicate if a person is likely to default, which may be used for taking actions such as denying the loan, reducing the amount of loan, lending (to risky applicants) at a higher interest rate, etc.","0ddf28eb":"**loan_amnt over time**","8c9c16a7":"## Data Cleaning","b4531280":"**loan_amnt and annual_inc**","3f6b658d":"Since we need to understand differences in the features between loans that have been fully paid or charged off. Let's not consider loans that are current. So we only keep the loans with status \"Fully Paid\" or \"Charged Off.\"","4b141013":"**Observation** :\n\n- The % of charged off loans increases substancially as we go up the loan amount buckets. Most loans are below 20000 amount. The higher loans, though lesser in number, carry a substantially higher risk of default.","f5d3493a":"**inq_last_6mths** : The number of inquiries in past 6 months (excluding auto and mortgage inquiries)","67a82d09":"## Problem Statement","f49690ae":"**Observation:**\n\n- Overall, the applied loan amount distribution is slightly __right-skewed__ with mean greater than the median. Most of the loans granted are below 15000 (75 percentile value)\n- Funding amounts see a spike around each 5000 boundary. <mark>We will use 5000 as bucket size for later analysis.<\/mark>\n- Charged off loans are shifted towards higher average loan amount request.","5fac6b27":"Next, the columns emp_title, emp_length have 6.19% and 2.71% missing value. These columns have information about the customer\/borrower like their job title and their employment length in years. Let's remove the rows with nan\/blank values for these varaibles.","ca204731":"**Observation** :\n\n- 94% have no Public derogatory records. 5% have 1 derogatory record.\n- Having even 1 derogatory record increases the chances of Charge Off significantly.","757349e2":"A data dictionary file is also been provided along with the loan data. This file gives a brief describtion about all the columns of the loan transaction file.\nLet's use this file to get a better understanding of the 50 columns we are left with.\nThis will help to further narrow down on the columns.","30cdb5e5":"**Observation** :\n\n- In genral, intrest rate offered inceases with the number of deliquency of the borrower.","950ffda0":"**dti** : A ratio calculated using the borrower\u2019s total monthly debt payments on the total debt obligations, excluding mortgage and the requested LC loan, divided by the borrower\u2019s self-reported monthly income.","ee4ae56b":"**Observation** :\n\n- As long as loan amount is less than 20% of annual income, defaults are low.\n- Loan amounts of 30% of annual income or higher see a high rate of default.","53eb63ce":"Let's find the relative frequencies of the unique sub_grade.","ebe97f48":"According to the data_dictionary file description for this field,\nemp_length: Employment length in years. Possible values are between 0 and 10 where 0 means less than one year and 10 means ten or more years.\nLet's convert the column to have values between 0 and 10.","a76b1eab":"**Observation** :\n\n- There is no large difference in revolving balance mean for charged off an fully Paid loans","04dbbbec":"# Lending Club Case Study - Exploratory Data Analysis","0b667e65":"**Observation** :\n\n- The number of 30+ days past-due incidences of delinquency in the borrower's credit file for the past 2 years values ranges between 0 and 11.\n- There are higher chances of default if this variable is greater than 1.","03f35d44":"**Observation** :\n\n- Overall, it appears that there are more **'Non Verified'** loans than the **'Source Verified'** and **'Verified'** loans. LC should take steps to verify these loans income so as to reduce the Charge Off percentage.\n- Verified loans show more charged Off percentage as compared to Not verified loans. This is unexpected and will be investigated later in bivariate analysis","4c4f7cad":"**Observation** :\n\n- Higher loan amounts are Verified more often.\n- We already know that larger loans are less in number, but see a higher charge off rate.\n- This, combined with previous observation, explains why verfied loans see a higher rate of default. It's not the verified status per se, it's the fact that higher loan amounts are riskier and are also verified more often by Lending Club.","aa5e59e7":"**annual_inc** : The self-reported annual income provided by the borrower during registration.","ee9efed8":"**Loan amount vs Grade vs Term**","cad127ae":"**Observation** :\n\n- Around 75% of the total loans are given for duration of 3 years. while just 25% of the loans are those given for 5 years.\n- Among Charged Off loans, percentage of term 60 months rises to 45%. The higher term loans have a higher chance of default.","cbc26abd":"**Interest Rate and Sub Grade**","d68ab336":"**earliest_cr_line** : The month the borrower's earliest reported credit line was opened.","5dfcb77b":"There are a few columns having a single unique value or all unique values. These may have nothing much to contribute to the analysis i.e. columns which are far from being the driving columns towards loan default. Some other columns are redundant.\n\nThese columns are:\n\n1. **id** : is a random number given to the loan, does not contribute to analysis\n2. **member_id** : is a random number given to the member, does not contribute to analysis\n3. **pymnt_plan** : value for entire dataset is 'n', therefore can be removed.\n4. **url** : is a URL for LC page for corresponding to each memberid, nothing to do with loan default.\n5. **zip_code** : first 3 digits of the 5 digit zip code are visible, also is redundant with addr_state, does not contribute to analysis\n6. **initial_list_status** : value for entire dataset is 'f' out of the possible values, therefore can be removed.\n7. **policy_code** : value for entire dataset is '1', indicating all are publicly available, therefore nothing to contribute for analysis, to be removed.\n8. **application_type** : value for entire dataset is 'INDIVIDUAL', indicating all are individual applications not joint, therefore nothing to contribute for analysis, to be removed.\n9. **acc_now_delinq** : value for entire dataset is '0', therefore can be removed.\n10. **delinq_amnt** : value for entire dataset is '0', therefore can be removed.\n11. **funded_amnt** : value for this column is almost equivalent to loan_amnt. removing to avoid multi colinearity.\n12. **funded_amnt_inv** : value for this column is almost equivalent to funded_amnt. removing to avoid multi colinearity. Also this wont be available at the time of decision making of funding a loan.","38b2f8e1":"**last_pymnt_d** : Last month payment was received.","2da0d7b8":"Columns for analysis reduced to 38 columns.","b5f6644b":"Approximately 14% of loans in the dataset are defaulted.\nAny variable that increases percentage of default to higher than 16.5% should be considered a business risk. (16.5 is 18% higher than 13.97 - a large enough increase)","b663a99d":"**Loan amount Vs addr_state vs loan Status**","2e9edd51":"**Observation** :\n\n- Intrest rates varies directly with the subgrade. Larger or worst the sub grade, higher are the rate of intrest for the loan","e6919df0":"**last_credit_pull_d** : The most recent month LC pulled credit for this loan.","bb7b3cc2":"**Observation** :\n\n- Over the years, LC as an organisation has been giving more loans. From __Aug,2007 to 2011__ the loans issued have risen significantly.\n- Within a year, the number of loan issued rises over the month from jan to Dec. Dcember is the month of the year were the maximum number of loans are being issued. Is the company trying to meet targets in the later months of the year?\n- Year of loan has no significant effect on likelihood of default.","77a2a015":"Define a few methods to aid in plotting graphs","89863b4b":"**loan_status** : Current status of the loan","0b6c68fe":"**Observation** :\n\n- The are approx. 22 average credit lines for the borrower's.\n- There is no big difference between the Charged Off and Fully Paid credit lines","26cb6993":"**Observation** :\n\n- The last Payment amount received is significantly lower for Charged Off loans as compared to the Fully Paid loans. - This is expected in case of charged of loans","acc66bb7":"Lets split the available date into month and year column.","2d966f16":"## Bivariate Analysis","efd3d349":"**dti vs open_acc**","75d0c5d3":"**int_rate** : Interest Rate on the loan.","814e6b87":"**Reading the loan data file**","27b33146":"## Analysis","e0b843e2":"Now, we are left with 3 columns title, revol_util and last_pymnt_d which account for a very small % of missing value of 0.02%, 0.13% and 0.18% respectively.\ntitle gives the title of the loan specified by the borrower in the application.\nrevol_util gives the revolving line utelization and\nlast_pymnt_d gives the month in which last payment was received.\n\nLet's again remove the rows with null value for these variables.","92753b89":"**loan_amnt vs grade**","60b4cfb5":"**Observation** :\n\n- 48.5% of the borrowers do not make any inquiry\n- Those with more than 2 inquiries default at higher rates.\n- This is probably correlated to having more loans and can be ignored. The revolving line utilization will cover this.","5dfd3e2f":"**Observation** :\n\n- 8% of the loan applicants have 2000 as the year of earliest credit line.\n- Newer borrowers are defauling more often. This is possibly related to the 2008 subprime crisis.\n- There was another economic crisis in US beginning in 1978 with double digit inflation. Newer borrowers of that time too defaulted more often. In general, those who take their first loans at times of recession, presumably young people, default more often. But this variable can be ignored in our analysis.\n","ef3180d6":"**last_pymnt_amnt** : Last total payment amount received.","9a0a0c73":"__Lending Club only recovers 57% of the loan amount when loans are defaulted. On fully paid up loans, the company makes 17% profit.__","4b4f5f34":"**addr_state** : The state provided by the borrower in the loan application","19cac7d6":"There are many columns in the data with 100% missing values. Remove all the columns with more than 50% missing values.","b25549ca":"There are various types of quality issues when it comes to data, and that\u2019s why data cleaning is one of the most time-consuming steps of data analysis. For example, there could be formatting errors (e.g. rows and columns are ill-formatted, unclearly named etc.), missing values, repeated rows, spelling inconsistencies etc. These issues could make it difficult to analyse data and could lead to errors or irrelevant results. Thus, these issues need to be corrected before data is analysed.\n\nThough data cleaning is often done in a somewhat haphazard way and it is too difficult to define a \u2018single structured process\u2019, we will process data cleaning in the following steps:\n\n1. Fix rows and columns\n2. Fix missing values\n3. Standardise values\n4. Fix invalid values\n5. Filter data","c75182a1":"Next, there are few columns which denote date or month information but are of the type object in the dataframe. Let's change the dtype of all such columns to datetime. Doing so will help in further using these column values to its best for analysis.\n\nThese columns are:\n\n1. issue_d\n2. earliest_cr_line\n3. last_pymnt_d\n4. last_credit_pull_d","908a3d43":"### Fix Missing Values","6f573888":"**Observation** :\n\n- Loan defaults are higher for lower income, and progressively reduce as incomes go up.\n- It will be interesting to see a bivariate analysis of defaults by income buckets and loan amounts later.","149d84eb":"**revol_rate Vs int_rate**","14ad4afa":"**Observation** :\n\n- When the dti or dept payment to income ratio is higher than 20, higher percentage of loans are Charged Off\n- Higher the dti higher the chances of loan being Charged Off","336324c0":"**Observation** :\n\n- 26% of loans for small business are Charged Off. Making them the most risky purpose.\n- Approximately ~49% of the loans are issued for the purpose of dept consolidation.\n- 17% of the loans for renewable_enrgy are charged Off, but the number is too less to be of significance.","3436d1ec":"**Observation** :\n\n- As we are studying how the Fully paid loan are different from the Charged off loans, loan_status = current, has been ignored for analysis. Therefore out_prncp_inv variable can be removed or dropped.","208d3423":"Columns __emp_length, collections_12_mths_ex_med, chargeoff_within_12_mths, pub_rec_bankruptcies and tax_liens__ are clearly **Categorical** with values belonging to a range.\n\nLet's take a look at all the different values of these Categorical columns","dbe62289":"**Observation** :\n\n- Overall, the intrest rate varies from **5.42% to 24.4%** with average intrest rate of **11.8%**.\n- The intrest rate for Charged Off loans appear to be higher than for Fully paid. This is naturally expected. As, the risk increases the rate of interest imposed on the loan also increases. Let's analyze this more","837f1621":"**Observation** :\n\n- 22.7% of the of loan taker have an employment length of more than 10 years.\n- There is no impact of employment length to chance of loan default.","03aa5aab":"**Observation** :\n\n- __States WY:__ Wyoming has the the highest average loan amount that was charged off. whats happening in this state is somthing LC can investigate into for this state.","1aa470ee":"**out_prncp_inv** : Remaining outstanding principal for portion of total amount funded by investors","7ceaa413":"**issue_d:** The month which the loan was funded .Lets split the available date into month and year column.","31409fe2":"**verification_status** : Indicates if income was verified by LC, not verified, or if the income source was verified","9bbe8127":"**Observation** :\n\n- revol_util and grade(and therefore int_rate) are correlated in some way. The revol_util is positivly correlated to the grade. As the grade goes from A to E the revol_util also increases. This may be because higer loan amounts are accosiated with higher grades.","50d74cb3":"**revol_util vs Grade**","ae4fef04":"**Observation** :\n\n- There are people with average income lower than 50000 taking loans of 25000 or higher. These would be risky loans","70c8abd6":"**term** : The number of payments on the loan. Values are in months and can be either 36 or 60.","cec27bf3":"**Avg. loan_amnt over time**","c4aaf76f":"### Filter data","699afb45":"The revolving bal varies from min 0 to max of 150,000. The median revol_bal is of **~9000**.","0c02215d":"**Observation** :\n\n- Not many loans receive invstment with higher number of delinquencies(>3). Despite the low loan amount request, these loans are considered risky and are not invested much in.\n- Lending club should further restrict their investment. We see loan amounts of >15000 on average for people having >=2 delinquencies.","adde6443":"Let us now take a look at the __emp_length__ column.","59d7ec24":"**Loan amount Vs term Vs Loan Status**","946b4ece":"**Observation** :\n\n- The percentage of Charged Off loans is markedly higher when the borrower has a prior record of bankruptcy.","67d2534f":"**Observation** :\n\n- Lending Club is pulling more credit reports in recent years, suggesting that the company is taking bad loans more seriously\n- This variable can be ignored in our analysis.","201fb280":"This company is the largest online loan marketplace, facilitating personal loans, business loans, and financing of medical procedures. Borrowers can easily access lower interest rate loans through a fast online interface. \n\n \n\nLike most other lending companies, lending loans to \u2018risky\u2019 applicants is the largest source of financial loss (called credit loss). The credit loss is the amount of money lost by the lender when the borrower refuses to pay or runs away with the money owed. In other words, borrowers who default cause the largest amount of loss to the lenders. In this case, the customers labelled as 'charged-off' are the 'defaulters'. \n\n \n\nIf one is able to identify these risky loan applicants, then such loans can be reduced thereby cutting down the amount of credit loss. Identification of such applicants using EDA is the aim of this case study.\n\nIn other words, the company wants to understand the __driving factors (or driver variables)__ behind loan default, i.e. the variables which are strong indicators of default.  The company can utilise this knowledge for its portfolio and risk assessment.","50c27fa5":"**Observation** :\n\n- Our assumption made during univariate analysis is more evident with this plot. Higher loan amount are associated with longer terms and see higher Charge Offs.","6edd513b":"**Observation** :\n\n- Here we see that Lending Club is, correctly, charging higher interest rates for lower grade loans.","5fe68d3f":"The **dti** index varies from min 0 to max of 30. The median dti is of 13.5","bb994fbf":"Count the number of missing values in each column of the dataset 'loan'.","f7e1dece":"**delinq_2yr VS int_rate VS loan_status**","05a57b17":"**Observation:**\n\n-  Month of loan is spread out and has no significant effect on likelihood of default. ","03a83a36":"**Observation** :\n\n- Average loan amount dropped sharply when subprime mortgage crisis hit","5e31ace0":"**delinq_2yrs** : The number of 30+ days past-due incidences of delinquency in the borrower's credit file for the past 2 years.","d5a18907":"**Observation** :\n\n- Overall, around 75% of the last payment dates are during 2012-2014 period.\n- 40% of loans with a last payment date of 2009 are Charged Off. This is due to the 2008 subprime crisis.\n- This variable does not affect analysis and will be ignored.","ec8e4bd3":"**Observation** :\n\n- The average utilization rate is around 49%\n- Average revolving Utilisation rate is seen to be higher for Charged Off loans than the Fully Paid loans. This requires more analysis.","90561e93":"**loan_amnt vs verification_status vs loan status**","78cd10b6":"### Univariate and Segmented Univariate Analysis","3ca50def":"**Observation** :\n\n- Intrest rates are besed on term. Larger amounts were seen to be given for higher term. Ther rate of intrest associated with them is also high.","040c9b07":"Writing the ready to analyse data to a csv. We will use this new csv for ease in further analysis.","feba19df":"**Observation** :\n\n- Grade A and B loans are safe. The percentages in full dataset are much higher than percentages in Charged Off loans.\n- Grade D, E, F, G loans are less safe. We should plot grade by percentage Charged Off by category\n- Lending Clubs grading system is working well.","88afbb57":"**Observation** :\n\n- The dti increses with the number of open credit line in borrowers credit file.","55b85997":"**Observation** :\n\n- As we are studying how the Fully paid loan are different from the Charged off loans, loan_status = current, has been ingnored for analysis. Therefore out_prncp variable can be removed or droped.","72ccebe0":"**annual income with grade**","7be6e970":"Load the final data for further anaysis.","60b01bb4":"**Observation** :\n\n- Maximum loans ~18% are from California following that is 9.5% from New york state and Florida with 7%. This is to be expected as these are also the three most populous US states\n- States with higher Charge Off rates have very low number of loans. The percentage is therefore NOT significant and should be ignored. Overall, this variable does not affect propensity to default.","bca2f28d":"**Observation** :\n\n- The median of the distribution suggests that by large the borrower's seem to have 9 open credit lines.\n- There is no significant difference in the credit lines of charged off and fully paid loans.","fe4d5063":"**Other categorical variables distribution**\n\nLet's see how some other categorical variables of interest are distributed within the dataset ","3c0403d3":"We see that there are 50 records with the earliest credit line date greater than 2011(which is the max range of the data we have).\nLets see the data to understand why.","0a2edb88":"**pub_rec_bankruptcy** : Number of public record bankruptcies","4fd53a54":"**loan_amnt** : The listed amount of the loan applied for by the borrower. If at some point in time, the credit department reduces the loan amount, then it will be reflected in this value.","a005252d":"### Further shortlist and narrow down the columns for analysis ","1ff3eb77":"### Standardise values","2b28c3cb":"**out_prncp** : Remaining outstanding principal for total amount funded.","dcfc2997":"**Observation** :\n\n- installment amount varies largely between 170.08 to 420 with median of 280\n- loans Charged Off have high installment on average","5733c732":"**pub_rec** : Number of derogatory public records.","b2a6c20b":"### Fix rows and columns","e715bf6e":"After removing such columns. 54 columns remain.\nLet's examin further for missing values.","ccd3d045":"Dropping the above columns from the clean_loan dataframe.","5399aa3e":"**total_pymnt** : Payments received to date for total amount funded.","f21283c8":"### Derived variable - ratio of loan amount to annual income","8115f442":"**Interest Rate and Term**","6f03888b":"**Observation** :\n\n- Our assumption made during univariate analysis is more evident with this plot. Higher loan amount are associated with lower grade for longer terms.","4734c3fd":"**Observation** :\n\n- The average payment received to date for the Charged Off loan is comparatively less than Fully Paid loans.\n- This variable may not be avaialble at the time of loan funding. We can drop this varaible from analysis.","ead86a73":"Loans **'Verified'** and **'Source Verified'** status both imply that LC has cross checked the income value specified by the borrower and thus both status can be treated as one.","32b349e4":"**Observation** :\n\n- 10000 seems to be a good bin size to further analyze income as categories","9d0592f3":"**Observation** :\n\n- Loans at a higher intrest rate are more likely to be Charged Off.","833adc48":"**Observation** :\n\n- Larger loans generally appear to be given a lower grade, with the median loan amount for a grade G loan being almost 10000 higher than that of a grade A, B, or C loan.","ae7ebcc4":"**Observation** :\n\n- Nearly 30% of all loans in Grades F and G see a default.\n- Grade E onwards are risky, and less numerous. Lending Club should either refuse loans or charge high interest rates.","0935dad2":"The values vary a lot. Transforming to a log scale will help analyse better.","bc9ac2fe":"## Data Understanding","ec6830b8":"Next, lets look at the pub_rec_bankruptcies categorical column with 1.76% missing data. It tells us about the past number of public record bankruptcies of that borrower.","cc46f698":"**Observation** :\n\n- title column has 17662 unique values describing the loan by the borrower. This information is already captured with purpose column under 14 catergories of purpose. We can choose to drop this column.","113084f1":"**total_acc** : The total number of credit lines currently in the borrower's credit file.","03e7e53e":"**revol_util Vs grade Vs Loan Status**","d5408408":"## Business Objectives","16ecd233":"The column term: The number of payments on the loan. Values are in months and can be either 36 or 60.\n<br> removing the months string from within the column term.","9523758f":"**delinq_2yr VS loan amount VS grade**","c275c2f4":"**revol_util** : Revolving line utilization rate, or the amount of credit the borrower is using relative to all available revolving credit."}}