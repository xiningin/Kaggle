{"cell_type":{"cab43b7c":"code","f2609881":"code","15cebd1d":"code","f3f9612f":"code","858195b4":"code","bad18213":"code","87afbe43":"code","9728e9c6":"code","6dee7ab8":"code","8b1b10aa":"code","e99dbe32":"code","821094fe":"code","07de6f93":"code","ed27971d":"code","012e7e8e":"code","c5d904dd":"code","50d3b2e7":"code","3ff831ca":"code","4a689290":"code","87e7cbdc":"code","7e5d4f9b":"code","f6c99f96":"code","f7c93200":"code","7fe2d7f0":"code","6b0d70cf":"code","adf2e1a0":"code","14ff8b53":"code","3d3a6163":"code","4ff25ec4":"code","0cbfab30":"code","6bc959ab":"code","3f353750":"code","4b060804":"code","a334f330":"code","8b492cfe":"code","223adcd3":"code","d85abfa1":"code","30e2e124":"code","4a3c362e":"code","b1574c6e":"code","428f2699":"code","0fe7db66":"code","6eb87a51":"code","e10ddb18":"code","aa40db3b":"code","91324773":"code","5d06ba03":"code","21a8005d":"code","358b056a":"code","6416d987":"code","e119b1c8":"code","09f03b36":"code","575207c5":"code","27c225c9":"code","229aad09":"markdown","8ab0d47b":"markdown","a07b7a6e":"markdown","0f56aacc":"markdown","72affec6":"markdown","0fab43be":"markdown","e8ec3e09":"markdown","270cc968":"markdown","4a9b3f07":"markdown","2c79caa7":"markdown","0bfb9e46":"markdown","28cec990":"markdown","caad24dd":"markdown","7dbfec0d":"markdown","59bf16d4":"markdown","48b83ded":"markdown","8ac4643f":"markdown","1e80d781":"markdown","39d97d51":"markdown","4debc955":"markdown","b06a1989":"markdown","379ffe83":"markdown","8792b4e2":"markdown","d2238ed2":"markdown","e5ea8cf3":"markdown","c254e542":"markdown","01d71426":"markdown","06ba9b27":"markdown","5d014d72":"markdown","4951c28c":"markdown","0bb6deb3":"markdown","57dea086":"markdown"},"source":{"cab43b7c":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport os\nimport matplotlib.pyplot as plt\n%matplotlib inline","f2609881":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","15cebd1d":"gplay_df = pd.read_csv('\/kaggle\/input\/google-play-store-apps\/googleplaystore.csv')","f3f9612f":"gplay_df.info()","858195b4":"gplay_df.head()","bad18213":"gplay_df.shape","87afbe43":"gplay_df.isna().sum()","9728e9c6":"duplicate_ser = gplay_df[gplay_df.duplicated()]\nlen(duplicate_ser)","6dee7ab8":"gplay_df.drop_duplicates(inplace=True)","8b1b10aa":"gplay_df.rename(columns={'Reviews':'ReviewCount','Size':'AppSize'},inplace=True)","e99dbe32":"def strip_cols(col_name):\n    col_name=col_name.str.replace('$','')\n    col_name=col_name.str.replace('+','')\n    col_name=col_name.str.replace(',','')\n    col_name=col_name.str.replace('M','e+6')\n    col_name=col_name.str.replace('k','e+3')\n    col_name=col_name.str.replace(' and up','')\n    #col_name=col_name.str.strip('.GP','')\n    #col_name=col_name.str.strip('W','')\n    #col_name=col_name.str.strip('-prod','')\n    \n    return col_name\n    \n    \ndef change_dtype(col_name):\n    col_name=col_name.astype('float')\n    return col_name\n\ndef change_intdtype(col_name):\n    col_name=col_name.astype('int64')\n    return col_name\n\ndef replace_nan(col):\n    col = col.replace('Varies with device',np.nan)\n    return col\n    \n    ","821094fe":"gplay_df.App.value_counts()","07de6f93":"gplay_df.App.nunique()","ed27971d":"gplay_df['Rating'].value_counts()","012e7e8e":"# taking the Rating as 1.9 instead of 19\ngplay_df['Rating'].replace('19.0','1.9',inplace=True)","c5d904dd":"gplay_df.Price.value_counts().sort_index()","50d3b2e7":"gplay_df.drop(gplay_df[gplay_df['Price']=='Everyone'].index,inplace=True)","3ff831ca":"\ngplay_df['Price'] = strip_cols(gplay_df['Price'])\ngplay_df['Price'] = change_dtype(gplay_df['Price'])","4a689290":"gplay_df.Price.value_counts().sort_index()","87e7cbdc":"gplay_df.AppSize.value_counts()","7e5d4f9b":"gplay_df['AppSize'] = replace_nan(gplay_df['AppSize'])","f6c99f96":"gplay_df['AppSize'] = strip_cols(gplay_df['AppSize'])\ngplay_df['AppSize'] = change_dtype(gplay_df['AppSize'])","f7c93200":"gplay_df['AppSize'].value_counts()","7fe2d7f0":"gplay_df['Installs'].value_counts()","6b0d70cf":"gplay_df['Installs'] = strip_cols(gplay_df['Installs'])\ngplay_df['Installs'] = change_intdtype(gplay_df['Installs'])","adf2e1a0":"gplay_df['Installs'].value_counts().sort_index()","14ff8b53":"gplay_df.ReviewCount.value_counts()","3d3a6163":"gplay_df['ReviewCount'] = strip_cols(gplay_df['ReviewCount'])\ngplay_df['ReviewCount'] = change_intdtype(gplay_df['ReviewCount'])","4ff25ec4":"gplay_df.ReviewCount.value_counts().sort_index()","0cbfab30":"gplay_df['Genres'].value_counts().sort_values()","6bc959ab":"prim = gplay_df.Genres.apply(lambda x:x.split(';')[0])\ngplay_df['Prim_Genre']=prim\ngplay_df['Prim_Genre'].tail()","3f353750":"sec = gplay_df.Genres.apply(lambda x:x.split(';')[-1])\ngplay_df['Sec_Genre']=sec\ngplay_df['Sec_Genre'].tail()","4b060804":"group_gen=gplay_df.groupby(['Prim_Genre','Sec_Genre'])\ngroup_gen.size().head(20)","a334f330":"gplay_df.drop(['Genres'],axis=1,inplace=True)","8b492cfe":"gplay_df['Last Updated'].value_counts().sort_values()","223adcd3":"gplay_df['Last Updated'] = pd.to_datetime(gplay_df['Last Updated'])","d85abfa1":"gplay_df['Last Updated'].value_counts().sort_index()","30e2e124":"gplay_df['Current Ver'].value_counts().sort_values()","4a3c362e":"gplay_df.drop(gplay_df[gplay_df['Current Ver']=='MONEY'].index,inplace=True)","b1574c6e":"gplay_df['Current Ver'] = replace_nan(gplay_df['Current Ver'])","428f2699":"gplay_df['Current Ver'].sample(20)","0fe7db66":"gplay_df['Android Ver'].value_counts().sort_values()","6eb87a51":"gplay_df['Android Ver'] = strip_cols(gplay_df['Android Ver'])\ngplay_df['Android Ver'] = replace_nan(gplay_df['Android Ver'])\ngplay_df['Android Ver'].replace('4.4W','4.4',inplace=True)","e10ddb18":"gplay_df['Android Ver'].value_counts().sort_values()","aa40db3b":"gplay_df['Category'].value_counts().sort_values()","91324773":"gplay_df['Type'].value_counts() ","5d06ba03":"gplay_df['Content Rating'].value_counts() ","21a8005d":"gplay_df.info()","358b056a":"# categorical and Numerical Values:\nnum_var = gplay_df.select_dtypes(include=['int64','float64']).columns\ncat_var = gplay_df.select_dtypes(include=['object','datetime64','timedelta64']).columns\nnum_var,cat_var","6416d987":"gplay_df.isna().sum()","e119b1c8":"missing_perc = (gplay_df.isna().sum()*100)\/len(gplay_df)\nmissing_df = pd.DataFrame({'columns':gplay_df.columns,'missing_percent':missing_perc})\nmissing_df","09f03b36":"col_cat = ['Type','Current Ver','Android Ver'] #Categorical Var.\nfor col in col_cat:\n    gplay_df[col].fillna(gplay_df[col].mode()[0],inplace=True)\n    \ncol_num=['Rating','AppSize'] #Numerical Var.\nfor col in col_num:\n    gplay_df[col].fillna(gplay_df[col].median(),inplace=True)","575207c5":"gplay_df.isna().sum()","27c225c9":"clean_df=gplay_df\nclean_df.to_csv('Clean_GplayApps.csv')","229aad09":"#### Validating the Columns after Cleaning","8ab0d47b":"#### Dropping the incorrect Value 'MONEY' and Replacing the 'Varies with Device' to 'NaN'","a07b7a6e":"#### Import the Libraries","0f56aacc":"Check for Duplicate Rows","72affec6":"#### Validating the Column after cleaning","0fab43be":"### Cleaning 'Price' column","e8ec3e09":"#### Stripping 'and up' and 'Varies with Device' to 'NAN'","270cc968":"### Reusable Methods","4a9b3f07":"#### Dropping the Price value 'Everyone'","2c79caa7":"### Cleaning 'Last Updated' Column","0bfb9e46":"### Cleaning 'AppSize' column","28cec990":"### Cleaning 'Android Ver' column","caad24dd":"#### Replacing the Varies with Device to NaN, Changing the Datatype to float and Replacing the 'M' and 'k'","7dbfec0d":"### Cleaning 'ReviewCount' Column","59bf16d4":"### Quality Issues:\n> ##### Dropping the Rating NaN values and Taking '19.0' Rating as incorrect entry and changing it to '1.9'\n> ##### Changing the datatype of 'Installs' column to Int and Replacing '+' with ''\n> ##### Changing the Datatype of  'Price' Column from Object to Float\n> ##### Changing the datatype of 'Reviews' column to Int and Replacing 'M' with ''\n> ##### 'Last Updated' Column changed to appropriate datatype 'datetime'\n> ##### Android Ver and Current Ver stripping of 'and up', and replacing 'Varies with Device' with 'NaN'\n> ##### Imputation of the NaN with Median in Numeric Columns and Mode in Categorical Columns\n\n\n### Tidiness Issues:\n> ##### Renaming the columns: Size and Reviews\n> ##### 'Genre' column splitted to 'Primary Genre' and 'Secondary Genre'\n","48b83ded":"### Assess the dataset\n> Two types of assessment done are:\n\n> ###### Visually with both Excel and Pandas\n> During the gathering stage, dataset is opened in pandas with df.head() and df.info() in order to get a feel for the datasets.The dataset with around  rows was manageable in Excel and using the filters function gave a good feel of the data inside each of the three datasets. From Excel it was quickly identified the many incorrect details in the dataset for the Apps and the strange rating scores being used.\n\n> ##### Programmatically using Pandas\nSome further sampling and investigation was done in pandas using df.info(), df.head(), df.sample(), df['column'].value_counts()","8ac4643f":"### Cleaning App Column","1e80d781":"#### missing values are less than 30% hence imputation can be applied- MODE(Categorical), MEDIAN(Numeric)\n#### Applying Imputation","39d97d51":"#### Validate","4debc955":"### Cleaning Rating Column","b06a1989":"#### Validate","379ffe83":"### Cleaning Install column","8792b4e2":"## Cleaning the Google Play Store Dataset\n> #### Objective\n> ##### This task relates to the data cleaning aspect of the analysis. The requirement is to find the attributes that needs to be handled based on the data visualization task.It is preferred that functions are created as a part of the data cleaning pipeline and dataset is prepared for further analysis.","d2238ed2":"#### Stripping the '+' and changing the Datatype to 'INT'","e5ea8cf3":"### Cleaning 'Current Ver' Column","c254e542":"####  Price In Dollars:  Remove the 'Dollar' symbol","01d71426":"#### Validate","06ba9b27":"#### Changing the Datatype of Column 'Last updated' to Datetime","5d014d72":"### Storing Clean Dataset to 'Clean_GplayApps.csv'","4951c28c":"#### Splitting the Genres with ';' into Primary and Seconday Genres","0bb6deb3":"### Cleaning 'Genres' column","57dea086":"#### Validating the Column after Cleaning"}}