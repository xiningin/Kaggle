{"cell_type":{"5315f022":"code","16a4adf4":"code","eba562ab":"code","c56c9aa0":"code","0654dc20":"code","467571b1":"code","560b8a40":"code","7f0bd650":"code","25c3f0b9":"code","ce6ca992":"code","a2140875":"code","a820b94f":"code","874d0c40":"code","34a8e5ce":"code","bef0a41a":"code","dcb0e73d":"code","5e901f08":"code","904970f2":"code","1a322787":"code","68213902":"code","7da54fd9":"code","c5c9389a":"markdown","8b95bfed":"markdown","2eaeea41":"markdown"},"source":{"5315f022":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns","16a4adf4":"train_data = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest_data = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')","eba562ab":"# missing values\ntrain_data.head()\nprint(pd.isnull(train_data).sum())","c56c9aa0":"# missing values\ntrain_data.head()\nprint(pd.isnull(train_data).sum())","0654dc20":"train_data.describe()","467571b1":"sns.barplot(x='OverallQual',y='SalePrice', data=train_data) # quality proportional to SalePrice ","560b8a40":"plt.figure(figsize=(12,6))\nsns.distplot(train_data['SalePrice']) # range of prices and their distribution ","7f0bd650":"train_data.info() ","25c3f0b9":"corr = train_data.corr()\nprint(corr['SalePrice'].sort_values(ascending=False)[:5],'\\n') # highly correlated attributes","ce6ca992":"plt.scatter(x='GrLivArea',y='SalePrice',data= train_data)\nplt.ylabel('Sale Price')\nplt.xlabel('Living area square feet')\nplt.show()","a2140875":"# listing all the null columns properly \nnull_data=pd.DataFrame(train_data.isnull().sum().sort_values(ascending=False)[:20])\nnull_data.columns=[\"Count\"]\nnull_data.index.name='Feature'\nnull_data\n# 19 coulumns have null values","a820b94f":"# getting dummy data for street \ntrain_data['street_new']=pd.get_dummies(train_data.Street, drop_first=True)\ntest_data['street_new']=pd.get_dummies(test_data.Street, drop_first=True)\n\ntrain_data.drop(['Street'],axis=1,inplace=True)\ntest_data.drop(['Street'],axis=1,inplace=True)","874d0c40":"# encoding slae condition coulmn\ndef encode(x):\n    return 1 if x == 'Partial' else 0\ntrain_data['salecondition_encoded']=train.SaleCondition.apply(encode)\ntest_data['salecondition_encoded']=test.SaleCondition.apply(encode)\n\ntrain_data.drop(['SaleCondition'],axis=1,inplace=True)\ntest_data.drop(['SaleCondition'],axis=1,inplace=True)","34a8e5ce":"# selecting numeric values only and dropping null columns \nnew_data = train_data.select_dtypes(include=[np.number]).interpolate().dropna()\nsum(new_data.isnull().sum()!=0)","bef0a41a":"new_data.head() #all numerics","dcb0e73d":"y=np.log(train_data.SalePrice)\nX=new_data.drop(['SalePrice','Id'],axis=1)","5e901f08":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,random_state=42,test_size=.30)","904970f2":"# Logistic Regression\nfrom sklearn.linear_model import LinearRegression\n\nlr = LinearRegression()\nlr.fit(X_train, y_train)\ny_pred = lr.predict(X_test)\n\n","1a322787":"from sklearn.metrics import mean_squared_error\nprint('RMSE is: ', mean_squared_error(y_test,y_pred))\n","68213902":"plt.scatter(y_pred,y_test,alpha=.7)\nplt.xlabel('Predicted Price')\nplt.ylabel('Actual Price')\nplt.title('Linear Regression')\nplt.show()","7da54fd9":"'''\nfor submitting to kaggle \n# first predict on given test data\n\ntid = test_data['Id']\ntest_new= test_data.select_dtypes(include=[np.number]).drop(['Id'],axis=1).interpolate()\ntest_new.head()\n\npredictions=model.predict(test_new)\npredictions = np.exp(predictions)\n\n\n#sconvert to csv file named submission.csv\n\nsubmit = pd.DataFrame({ 'Id' : tid, 'SalePrice': predictions })\nsubmit.head()\nsubmit.to_csv('house_price_prediction.csv', index=False)\n\n'''\n\n","c5c9389a":"**Test Train Split**","8b95bfed":"# **Data Exploration & Visualisation**","2eaeea41":"# **Data Cleaning**"}}