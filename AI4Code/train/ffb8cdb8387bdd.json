{"cell_type":{"19c271cf":"code","01407fc3":"code","87755b2b":"code","f07e56a1":"code","d815169f":"code","9eaff729":"code","e1ac792a":"code","24c0562d":"code","ed55bbcd":"code","b2e6fad1":"code","52ab1a58":"code","946dec10":"code","3c10930e":"code","7fcfc787":"code","8c34b5be":"markdown","6c0885a7":"markdown","933ba15f":"markdown","aab5d280":"markdown","4506c4b2":"markdown","d47ad1c5":"markdown","3c4fb4c2":"markdown"},"source":{"19c271cf":"#No need of running this,lol\nNotebook details:\n  * created on:6.5.2020\n  * created by:Ashwani Rathee\n  * last updated:6.5.2020\n  * Suggestions for improvements and feedback is appreciated.\n  * Also ask for update if it stops working,I'll update it\n  * UPVOTE!!It helps in maintaining my momentum and faster updates:)","01407fc3":"Hi,this is my first tutorial ever.\nSo, Ill try my best to keep the tutorials short and intuitive for beginners.\nMy aim is to make a series of kernels, starting from this one, which is a quick approach of loading,understanding by visualization of audio data.\nI will gradually add more tutorials on more advanced techniques. \nI hope it is useful, thanks!\n","87755b2b":"!pip install librosa #installing our librosa-the sound director\n!apt-get install -y ffmpeg libasound2-dev libsndfile1-dev libjack-dev #some other boring packages that help to make it runn well","f07e56a1":"%matplotlib inline\nimport matplotlib.pyplot as plt        #for plotting purposes\nimport librosa.display\nimport librosa                         #our sound director\nimport IPython.display as ipd          #our sound director-2","d815169f":"#librosa.load to load an audio file into an audio array\nx,sr=librosa.load('..\/input\/Misir.mp3') \nipd.Audio('..\/input\/Misir.mp3')          #ipd.Audio to show the audio in notebook","9eaff729":"y,sr=librosa.load('..\/input\/Gnossienne-no-1.mp3')\nipd.Audio('..\/input\/Gnossienne-no-1.mp3')","e1ac792a":"print(x.shape)\nprint(sr)\nprint(y.shape)\nprint(sr)","24c0562d":"#Misirlou by Dick dale\nplt.figure(figsize=(14, 5))                     #setting the size\nlibrosa.display.waveplot(x, sr=sr)              #using librosa.display to plot the graph","ed55bbcd":"#Gnossienne-no-1 by Eric satie\nplt.figure(figsize=(14, 5))\nlibrosa.display.waveplot(y, sr=sr)","b2e6fad1":"X = librosa.stft(x)\nXdb = librosa.amplitude_to_db(abs(X))\nplt.figure(figsize=(14, 5))\nlibrosa.display.specshow(Xdb, sr=sr, x_axis='time', y_axis='hz')","52ab1a58":"Y = librosa.stft(y)\nYdb = librosa.amplitude_to_db(abs(Y))\nplt.figure(figsize=(14, 5))\nlibrosa.display.specshow(Ydb, sr=sr, x_axis='time', y_axis='hz')","946dec10":"import numpy\nimport librosa\nsr = 22050 # sample rate\nT = 2.0    # seconds\nt = numpy.linspace(0, T, int(T*sr), endpoint=False) # time variable\nx = 0.5*numpy.sin(2*numpy.pi*440*t)                # pure sine wave at 440 Hz","3c10930e":"import IPython.display as ipd\nipd.Audio(x, rate=sr) # load a NumPy array","7fcfc787":"#Writting to audio using function\nlibrosa.output.write_wav('audio\/tone_440.wav', x, sr)","8c34b5be":"Printing length of the **audio array** and **sample rate**:","6c0885a7":"# Loading the Music:\n*  Misirlou by Dick Dale\n*  Gnossiene-no-1 by Eric Satie","933ba15f":"I am mainly interested in two libraries for this:\n* **Librosa**:a python package for music and audio processing By Brian MacFee.\nAnd Another Interesting Library is **IPython.display.Audio** that lets you play audio directly in an IPython notebook.\n\n* Librosa:[Website](http:\/\/https:\/\/librosa.github.io\/)\n* Ipython:[Website](https:\/\/ipython.org\/ipython-doc\/3\/api\/generated\/IPython.display.html)\n* Site I am learning from :[Website](https:\/\/musicinformationretrieval.com\/)","aab5d280":"If you like my notebook, I would appreciate an upvote, which will keep me motivated for additional content, thanks!","4506c4b2":"**SPECTROGRAM**:","d47ad1c5":"Visualization of **audio array**:","3c4fb4c2":"Excellent, here we conclude our intro tutorial, but this is just the start!"}}