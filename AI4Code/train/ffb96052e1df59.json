{"cell_type":{"0a174c9a":"code","5f5c0803":"code","a4cf160f":"code","28667d9b":"code","4cd421aa":"code","12d8616d":"code","a0591798":"code","c63226e8":"code","1620fdea":"markdown","cd9da794":"markdown"},"source":{"0a174c9a":"!cp \/kaggle\/input\/decord\/install.sh . && chmod  +x install.sh && .\/install.sh ","5f5c0803":"import os, sys\nsys.path.insert(0,'\/kaggle\/working\/reader\/python')\n\nfrom decord import VideoReader\nfrom decord import cpu, gpu\nfrom decord.bridge import set_bridge\nimport glob","a4cf160f":"set_bridge('torch')","28667d9b":"filenames = glob.glob('..\/input\/deepfake-detection-challenge\/test_videos\/*.mp4')","4cd421aa":"%%time\n## Be carefull GPU memory leak\nshapes = []\nfor filename in filenames:\n    video = VideoReader(filename, ctx=gpu())\n    data = video.get_batch(range(len(video)))\n    shapes += [data.size()]\n    del video, data","12d8616d":"%%time\n## slower but stable\nshapes = []\nfor filename in filenames:\n    video = VideoReader(filename, ctx=cpu())\n    data = video.get_batch(range(len(video)))\n    shapes += [data.size()]\n    del video, data","a0591798":"!rm -r reader && rm install.sh","c63226e8":"!cp \/kaggle\/input\/deepfake-detection-challenge\/sample_submission.csv .\/submission.csv","1620fdea":"### CPU version. Return torch.uint8","cd9da794":"### GPU version. Return torch.uint8 located on gpu. Have proble with memory"}}