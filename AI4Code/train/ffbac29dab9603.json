{"cell_type":{"1fe50a9b":"code","011418ad":"code","44a962f7":"code","cf645434":"code","3cf01060":"code","7e3018ba":"code","00a92d79":"code","8e7b7a9a":"code","4189f594":"code","02ff11c4":"code","1372daa1":"code","1913aed9":"code","ec24ad68":"code","7e0a85cd":"code","c53658bc":"code","f8c7e20b":"code","8d16f7b1":"code","e9a0edf9":"code","1e7b4bba":"code","421dd2bd":"code","ac86eac0":"code","0150a4dd":"code","4c94d608":"markdown"},"source":{"1fe50a9b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","011418ad":"import matplotlib.pyplot as plt\nimport seaborn as sns","44a962f7":"df = pd.read_csv('\/kaggle\/input\/fish-market\/Fish.csv')\ndf.head()","cf645434":"\ndf.info()\n","3cf01060":"#handling species column categorical data","7e3018ba":"df['Species'].unique()","00a92d79":"cat_df = pd.get_dummies(df['Species'], drop_first=True)","8e7b7a9a":"df=pd.concat([df, cat_df], axis=1)","4189f594":"df.head()","02ff11c4":"df.drop(['Species'], axis=1 ,inplace=True)","1372daa1":"df.head()","1913aed9":"sns.pairplot(df)","ec24ad68":"from sklearn.model_selection import train_test_split","7e0a85cd":"X = df.drop('Weight', axis=1)\ny=df.Weight","c53658bc":"X.head()","f8c7e20b":"X_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.33, random_state=42)","8d16f7b1":"from sklearn.linear_model import LinearRegression","e9a0edf9":"model = LinearRegression()\nreg=model.fit(X_train, y_train)","1e7b4bba":"pred = reg.predict(X_test)","421dd2bd":"from sklearn.metrics import r2_score\nr2_score(y_test, pred)","ac86eac0":"from sklearn.model_selection import cross_val_score\ncorss_val = cross_val_score(reg, X_train, y_train, cv=10, scoring='r2')","0150a4dd":"print(corss_val.mean())","4c94d608":"**No missing data**"}}