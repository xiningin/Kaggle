{"cell_type":{"3f9d765c":"code","bffc770d":"code","bafe270f":"code","58cbe060":"code","dd452516":"code","944d30be":"code","9eb8fd8c":"code","c66b8580":"code","7e8e84a2":"code","446b50b2":"code","680d6845":"code","5b2b5a44":"code","83cb63ed":"code","8091b6dd":"code","73cac961":"code","bdd8896e":"code","f8795b1d":"code","28c50ff8":"code","f5a139cf":"code","10ba2efd":"code","062437b7":"code","d2d7da93":"code","aaea1973":"code","ee5603ae":"code","b2849980":"code","a3bbc527":"code","50145b44":"markdown","3b63eccb":"markdown","79dbbe05":"markdown","2f940570":"markdown","55cdb762":"markdown","3dfebf5f":"markdown","ac203962":"markdown"},"source":{"3f9d765c":"from warnings import filterwarnings\nfilterwarnings('ignore')\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression, Lasso, Ridge, ElasticNet, RidgeCV, LassoCV, ElasticNetCV\nfrom sklearn.metrics import mean_squared_error, r2_score","bffc770d":"df=pd.read_csv(\"\/kaggle\/input\/tvradionewspaperadvertising\/Advertising.csv\")","bafe270f":"data=df.copy()","58cbe060":"df.head()","dd452516":"#summary of the dataframe\ndf.info()","944d30be":"df.describe().T","9eb8fd8c":"#finding the count of missing values\ndf.isnull().sum()","c66b8580":"df.corr()","7e8e84a2":"sns.heatmap(df.corr(), annot = True)\nplt.title(\"Correlation Matrix\")\nplt.show()","446b50b2":"sns.pairplot(df, x_vars=['TV','Radio','Newspaper'], y_vars='Sales', size = 4)","680d6845":"sns.pairplot(df, kind=\"reg\")","5b2b5a44":"sns.jointplot(x='TV', y='Sales', data=df, kind='reg')","83cb63ed":"sns.regplot(df['TV'], df['Sales'])","8091b6dd":"sns.distplot(df['Sales'])","73cac961":"sns.distplot(df['Sales'], fit=stats.norm)","bdd8896e":"X=df.drop('Sales', axis=1)\nY=df[['Sales']]","f8795b1d":"def model(X, Y, algo, split_share=0.33):\n    X_train, X_test, Y_train, Y_test=train_test_split(X, Y, test_size=split_share, random_state=42)\n    m=algo.fit(X_train, Y_train)\n    train_rmse=np.sqrt(mean_squared_error(Y_train, m.predict(X_train)))\n    test_rmse=np.sqrt(mean_squared_error(Y_test, m.predict(X_test)))\n    return type(m).__name__, train_rmse, test_rmse","28c50ff8":"models=[LinearRegression(), Lasso(), Ridge(), ElasticNet()]\nresults={'model':[], 'train_rmse':[], 'test_rmse':[]}","f5a139cf":"for i in models:\n    res=model(X, Y, i)\n    results['model'].append(res[0])\n    results['train_rmse'].append(res[1])\n    results['test_rmse'].append(res[2])","10ba2efd":"results=pd.DataFrame(results)\nresults","062437b7":"results.set_index('model').plot(kind='barh')","d2d7da93":"def model_tuning(X, Y, algo, algocv, alphas, split_share=0.33):\n    X_train, X_test, Y_train, Y_test=train_test_split(X, Y, test_size=split_share, random_state=42)\n    algo_cv=algocv(alphas=alphas, cv=10, normalize=True)\n    algo_cv.fit(X_train, Y_train)\n    algo_tuned=algo(alpha=algo_cv.alpha_)\n    algo_tuned.fit(X_train, Y_train)\n    train_rmse=np.sqrt(mean_squared_error(Y_train, algo_tuned.predict(X_train)))\n    test_rmse=np.sqrt(mean_squared_error(Y_test, algo_tuned.predict(X_test)))\n    return type(algo()).__name__, train_rmse, test_rmse","aaea1973":"models={Ridge: RidgeCV, Lasso:LassoCV, ElasticNet:ElasticNetCV}\nalphas=10**np.linspace(10, -2, 100)*0.5\nresults_tuned={'model':[], 'train_rmse':[], 'test_rmse':[]}","ee5603ae":"for model in models.keys():\n    res=model_tuning(X, Y, model, models[model], alphas)\n    results_tuned['model'].append(res[0])\n    results_tuned['train_rmse'].append(res[1])\n    results_tuned['test_rmse'].append(res[2])","b2849980":"results_tuned=pd.DataFrame(results_tuned)\nresults_tuned","a3bbc527":"results_tuned.set_index('model').plot(kind='barh')","50145b44":"# Get the data","3b63eccb":"# Exploratory Data Analysis","79dbbe05":"# Model","2f940570":"# Model Tuning","55cdb762":"# Import libraries","3dfebf5f":"# Feature Engineering","ac203962":"## Correlation"}}