{"cell_type":{"7aaaa5ca":"code","be129e31":"code","785ea5eb":"code","0b012e6b":"code","a2a6b885":"code","e60382ab":"code","fc6f9224":"code","92b4fc7d":"code","35f92d3d":"code","269e5bc5":"code","7027b269":"code","95c452fc":"code","5d54ab6b":"code","fe03972f":"markdown","f9d5f7a2":"markdown","ee3c2688":"markdown"},"source":{"7aaaa5ca":"# packages\n\n# standard\nimport numpy as np\nimport pandas as pd\n\n# plots\nimport matplotlib.pyplot as plt\nimport seaborn as sns","be129e31":"# load data \/ preview\ndf = pd.read_excel('..\/input\/the-great-bicycle-boom-of-2020\/RailsToTrails_National Count Data_week.xlsx'\n                   ,sheet_name='Weekly Data')\n\ndf.head()","785ea5eb":"# define \"shortcuts\" for column names\nbikes = 'Bikes (14 counters)'\npeds = 'Pedestrians (14 counters)'\ncts = 'Counts (31 counters)'","0b012e6b":"# extract years to separate tables\ndf_2019 = df[df.Year==2019].copy()\ndf_2020 = df[df.Year==2020].copy().reset_index(drop=True)\n# covid phase also separately\ndf_2020_c = df_2020.loc[df['Covid Period']=='Y'].copy()","a2a6b885":"# plot bikes\nplt.figure(figsize=(14,5))\nplt.plot(df_2019.Timeframe, df_2019[bikes], label='2019')\nplt.plot(df_2020.Timeframe, df_2020[bikes], label='2020')\nplt.plot(df_2020_c.Timeframe, df_2020_c[bikes], c='red', label='2020 Covid') # highlight Covid period\nplt.grid()\nplt.xticks(rotation=90)\nplt.legend()\nplt.title('Bikes')\nplt.show()","e60382ab":"# plot pedestrians\nplt.figure(figsize=(14,5))\nplt.plot(df_2019.Timeframe, df_2019[peds], label='2019')\nplt.plot(df_2020.Timeframe, df_2020[peds], label='2020')\nplt.plot(df_2020_c.Timeframe, df_2020_c[peds], c='red', label='2020 Covid') # highlight Covid period\nplt.grid()\nplt.xticks(rotation=90)\nplt.legend()\nplt.title('Pedestrians')\nplt.show()","fc6f9224":"# plot counts\nplt.figure(figsize=(14,5))\nplt.plot(df_2019.Timeframe, df_2019[cts], label='2019')\nplt.plot(df_2020.Timeframe, df_2020[cts], label='2020')\nplt.plot(df_2020_c.Timeframe, df_2020_c[cts], c='red', label='2020 Covid') # highlight Covid period\nplt.grid()\nplt.xticks(rotation=90)\nplt.legend()\nplt.title('Counts')\nplt.show()","92b4fc7d":"# calc ratios 2020 vs 2019\ndf_2020['RatioBikes'] = np.asarray(df_2020[bikes]) \/ np.asarray(df_2019[bikes])\ndf_2020['RatioPeds'] = np.asarray(df_2020[peds]) \/ np.asarray(df_2019[peds])\n\n# and plot them\nplt.figure(figsize=(14,5))\nplt.plot(df_2020.Timeframe, df_2020.RatioBikes, label='Bikes')\nplt.plot(df_2020.Timeframe, df_2020.RatioPeds, label='Pedestrians')\nplt.plot(df_2020.Timeframe, np.ones(50), label='Level of 2019', color='green')\nplt.grid()\nplt.xticks(rotation=90)\nplt.legend()\nplt.title('Ratio 2020 \/ 2019')\nplt.show()","35f92d3d":"# same for counts\ndf_2020['RatioCounts'] = np.asarray(df_2020[cts]) \/ np.asarray(df_2019[cts])\n\n# and plot them\nplt.figure(figsize=(14,5))\nplt.plot(df_2020.Timeframe, df_2020.RatioCounts, label='Counts', color='magenta')\nplt.plot(df_2020.Timeframe, np.ones(50), label='Level of 2019', color='green')\nplt.grid()\nplt.xticks(rotation=90)\nplt.legend()\nplt.title('Ratio 2020 \/ 2019')\nplt.show()","269e5bc5":"# show colors for the following plots\nplt.figure(figsize=(12,4))\nplt.scatter(df_2020['Timeframe'], np.ones(df_2020.shape[0]), \n            c=df_2020.index, s=150)\nplt.title('Color encoding of weeks for the following')\nplt.xticks(rotation=90)\nax = plt.gca()\nax.axes.yaxis.set_visible(False) # hide y-axis\nplt.grid()\nplt.show()","7027b269":"# bikes 2020\/2019\nval_max = 140000\nfig, ax = plt.subplots(figsize=(7,7))\nax.set_aspect('equal')\nplt.scatter(df_2019[bikes], df_2020[bikes], c=df_2020.index)\nplt.plot([0,val_max], [0,val_max], color='green', lw=2)\nplt.xlim(0,val_max)\nplt.ylim(0,val_max)\nplt.xlabel('2019')\nplt.ylabel('2020')\nplt.title('Bikes 2020 vs 2019')\nplt.grid()\nplt.show()","95c452fc":"# pedestrians 2020\/2019\nval_max = 190000\nfig, ax = plt.subplots(figsize=(7,7))\nax.set_aspect('equal')\nplt.scatter(df_2019[peds], df_2020[peds], c=df_2020.index)\nplt.plot([0,val_max], [0,val_max], color='green', lw=2)\nplt.xlim(0,val_max)\nplt.ylim(0,val_max)\nplt.xlabel('2019')\nplt.ylabel('2020')\nplt.title('Pedestrians 2020 vs 2019')\nplt.grid()\nplt.show()","5d54ab6b":"# counts 2020\/2019\nval_max = 500000\nfig, ax = plt.subplots(figsize=(7,7))\nax.set_aspect('equal')\nplt.scatter(df_2019[cts], df_2020[cts], c=df_2020.index)\nplt.plot([0,val_max], [0,val_max], color='green', lw=2)\nplt.xlim(0,val_max)\nplt.ylim(0,val_max)\nplt.xlabel('2019')\nplt.ylabel('2020')\nplt.title('Counts 2020 vs 2019')\nplt.grid()\nplt.show()","fe03972f":"### Ratios","f9d5f7a2":"# Scatter Plots","ee3c2688":"# Plot Development"}}