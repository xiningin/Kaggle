{"cell_type":{"d0043feb":"code","a958fa40":"code","8dc5598b":"code","2c881b58":"code","25dfbc9f":"code","e76eaac9":"code","fd433280":"code","21043aef":"code","a73e02e4":"code","9b6d2e79":"code","70085554":"markdown","43c8e5f3":"markdown","8ab10475":"markdown","24d4ba95":"markdown","de441803":"markdown","996a1872":"markdown","617793ff":"markdown","7ce6214a":"markdown"},"source":{"d0043feb":"# Generic\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os, warnings, gc\nwarnings.filterwarnings(\"ignore\")\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler\nfrom sklearn.model_selection import train_test_split","a958fa40":"url = '..\/input\/all-datasets-for-practicing-ml\/Class\/Class_Abalone.csv'\ndata = pd.read_csv(url, header='infer')\nprint(\"Total Records: \", data.shape[0])","8dc5598b":"# Inspect\ndata.head()","2c881b58":"fig_size = plt.rcParams[\"figure.figsize\"]\nfig_size[0] = 15\nfig_size[1] = 10\nplt.rcParams[\"figure.figsize\"] = fig_size\n\ndata.Sex.value_counts().plot(kind='pie', autopct='%1.0f%%', colors=['beige','khaki','wheat'])","25dfbc9f":"# Scaling\nsc = StandardScaler()\ncols = data.columns [1:]\n\nfor col in cols:\n    data[col] = sc.fit_transform(data[col].values.reshape(-1,1))\n    \n\n# Encoding\nencoder = LabelEncoder()\ndata['Sex'] = encoder.fit_transform(data['Sex'])\n\n# Inspect\ndata.head()","e76eaac9":"# Libraries\nimport tensorflow as tf\nfrom tensorflow.keras.layers import Input, Dense, Activation, Dropout\nfrom tensorflow.keras.models import Model","fd433280":"# Feature & Target Selection\ncolumns = data.columns\ntarget = ['Sex']\nfeatures = columns[1:]\n\nX = data[features]\ny = data[target]\n\n# Dataset Split \n''' Training = 90% & Validation = 10%  '''\ntest_size = 0.1\nX_train, X_val, y_train, y_val = train_test_split(X, y, test_size=test_size, random_state=42, shuffle=True) \n","21043aef":"# Build Model\ninput_layer = Input(shape=(X.shape[1],))\ndense_layer1 = Dense(256, activation='relu')(input_layer)\ndense_layer2 = Dense(128, activation='relu')(dense_layer1)\ndense_layer3 = Dense(64, activation='relu')(dense_layer2)\noutput = Dense(y.shape[1], activation='softmax')(dense_layer3)\n\nmodel = Model(inputs=input_layer, outputs=output)\nmodel.compile(loss='categorical_crossentropy', optimizer='adamax', metrics=['acc'])\n\nmodel.summary()","a73e02e4":"# Train Model\nhistory = model.fit(X_train, y_train, batch_size=8, epochs=50, verbose=1, validation_split=0.1)","9b6d2e79":"#Evaluation\nscore = model.evaluate(X_val, y_val, verbose=0)\n\nprint(\"TensorFlow Model Accuracy:\", '{:.2%}'.format(score[1]))","70085554":"# Data","43c8e5f3":"# Data Prep\n\nScaling the Data & Encoding the Category(Sex) Column","8ab10475":"We've achieved an accuracy of ~ 32% which is not good & will need fine-tuning. However, fine-tuning is a topic for another day.","24d4ba95":"# Libraries","de441803":"The model contains four dense layers. \n\nDense Layer#1 - Contains 256 nodes with relu activation\n\nDense Layer#2 - Contains 128 nodes with relu activation\n\nDense Layer#3 - Contains 64 nodes with  relu activation\n\nDense Layer#4 - Contains 3 nodes with softmax activation  [Classification Layer]\n\nThe model is trained using **categorical_crossentropy** loss function and **adamax** optimizer. The evaluation metric is **accuracy**.","996a1872":"# TensorFlow for Classification\n\nUsually, TensorFlow(Google) & PyTorch(Facebook) libraries are commonly used for **deep learning**, However, in this notebook we're going to look at using TensorFlow  for **machine learning classification problems**. \n\nClassification problems belong to the category of machine learning problems where given the set of features, the task is to predict a discrete value. For example, predicting whether a tumour is cancerous or not, or whether a flower belongs to a specific species, are some of the common examples of classification problems.\n\nIn this notebook, we're going to use the [Abalone Dataset](https:\/\/archive.ics.uci.edu\/ml\/datasets\/abalone) for the classification problem.\n\nFollowing are the details:\n\n### Name \/ Data Type \/ Measurement Unit \/ Description\n\nSex \/ nominal \/ -- \/ M, F, and I (infant)\n\nLength \/ continuous \/ mm \/ Longest shell measurement\n\nDiameter \/ continuous \/ mm \/ perpendicular to length\n\nHeight \/ continuous \/ mm \/ with meat in shell\n\nWhole weight \/ continuous \/ grams \/ whole abalone\n\nShucked weight \/ continuous \/ grams \/ weight of meat\n\nViscera weight \/ continuous \/ grams \/ gut weight (after bleeding)\n\nShell weight \/ continuous \/ grams \/ after being dried\n\nRings \/ integer \/ -- \/ +1.5 gives the age in years\n\n\n\nAs always, I will keep the notebook fairely organized & well commented for easy reading. Please do consider it to **UPVOTE** if you've been enlightened just like me :-)","617793ff":"# Basic EDA","7ce6214a":"# TensorFlow"}}