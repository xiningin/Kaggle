{"cell_type":{"916cc91c":"code","fb2a5bdf":"code","8cb1526e":"code","38993326":"code","cbb97717":"code","7af3a86d":"code","6d38486b":"code","60ecc1a9":"code","dfe9f869":"code","6c27a420":"code","20237f21":"code","3fbb6042":"code","f880116f":"code","42bf27e7":"code","5052b045":"markdown","2ed8e437":"markdown","f0997762":"markdown","2e7bbb4d":"markdown","4b5944fe":"markdown","62de0b03":"markdown","4c5ce789":"markdown","8dc608c9":"markdown","826dee5f":"markdown"},"source":{"916cc91c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fb2a5bdf":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\nfrom PIL import Image","8cb1526e":"df_players = pd.read_csv('..\/input\/esports-earnings-for-players-teams-by-game\/highest_earning_players.csv')\ndf_teams = pd.read_csv('..\/input\/esports-earnings-for-players-teams-by-game\/highest_earning_teams.csv')\ndf_country = pd.read_csv('..\/input\/esports-earnings-for-players-teams-by-game\/country-and-continent-codes-list.csv')","38993326":"df_players[['Game','Genre','TotalUSDPrize']].sort_values(by='TotalUSDPrize', ascending=False).head(20).reset_index(drop=True)","cbb97717":"games_prizes = df_players.groupby(['Game']).TotalUSDPrize.agg(sum)\ngames_prizes = pd.DataFrame(games_prizes)\nplt.figure(figsize=(14,7))\nplot_1 = sns.barplot(data=games_prizes, y=games_prizes.TotalUSDPrize, x=games_prizes.index )\nplt.setp(plot_1.get_xticklabels(), rotation=45)\nplt.title('Total prizes for games')\nplot_1","7af3a86d":"pd.DataFrame(df_players['Game']).drop_duplicates().reset_index(drop=True)","6d38486b":"df_players[['NameFirst', 'NameLast', 'CurrentHandle', 'TotalUSDPrize']].sort_values(by='TotalUSDPrize', ascending=False).head(10).reset_index(drop=True)","60ecc1a9":"players_prizes = df_players[['CurrentHandle', 'TotalUSDPrize']].sort_values(by='TotalUSDPrize', ascending=False).head(10).reset_index(drop=True)\nplt.figure(figsize=(14,7))\nplot_2 = sns.barplot(data=players_prizes, x=players_prizes.CurrentHandle, y=players_prizes.TotalUSDPrize)\nplt.setp(plot_2.get_xticklabels(), rotation=45)\n\nplt.title('Players with higher prizes')\nplot_2","dfe9f869":"df_teams[['TeamName','TotalUSDPrize', 'Game']].sort_values(by='TotalUSDPrize', ascending=False).head(20).reset_index(drop=True)","6c27a420":"teams_prizes = df_teams[['TeamName','TotalUSDPrize']]\nteams_prizes = teams_prizes.groupby(['TeamName']).TotalUSDPrize.agg(sum)\nteams_prizes = pd.DataFrame(teams_prizes).sort_values(by='TotalUSDPrize', ascending=False).head(20)\nplt.figure(figsize=(14,7))\nplot_3 = sns.lineplot(data=teams_prizes, y=teams_prizes.TotalUSDPrize, x=teams_prizes.index)\nplt.setp(plot_3.get_xticklabels(), rotation=45)\nplt.title('Total team prizes')\nplot_3","20237f21":"teams = df_teams.TeamName.to_list()\n\nteam_string = ', '.join(map(str, teams))\n\n","3fbb6042":"stopwords = set(STOPWORDS)\nstopwords.update(['Gaming', 'Esport', 'National', 'Esports', 'Team', 'Sports', 'e', 'Club'])","f880116f":"wordcloud = WordCloud(stopwords=stopwords,background_color=\"white\",\n                      width=1900, height=1200).generate(team_string)","42bf27e7":"fig, ax = plt.subplots(figsize=(10,6))\nax.imshow(wordcloud, interpolation='bilinear')\nax.set_axis_off()\n \nplt.imshow(wordcloud)","5052b045":"#### Turning the TeamName column into a string to be able to wordcloud the names.","2ed8e437":"More info about team prizes.","f0997762":"# Top 20 teams according to the awards\n#### A team can appear more than once but note that it is a different game.","2e7bbb4d":"# Wordcloud with team names","4b5944fe":"# Top 10 players according to the prizes","62de0b03":"# Games in dataset\n#### Each game appears 100 times in the dataset.","4c5ce789":"#### Importing the data sets, more informations about datasets are in Input section.","8dc608c9":"More info about prizes.","826dee5f":"# Top 20 game prizes\n#### Here the players are being ranked according to the value of the prize. We can see that the game with the highest payout is DOTA 2."}}