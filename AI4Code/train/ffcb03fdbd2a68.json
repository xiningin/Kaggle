{"cell_type":{"d1f1d20a":"code","9af56c53":"code","58481a85":"code","7d15662e":"code","877fd79a":"code","bb6cdff7":"code","a67a8a71":"code","37b39867":"code","5f16d74e":"code","86b8968b":"code","c0241c71":"code","114ec057":"code","5d190eda":"code","7ddf3654":"code","7a471f3a":"code","6cdbdcab":"code","d1a27f7e":"code","7317aa1c":"code","2febae72":"code","6812afc5":"code","8401d032":"code","fb193ec0":"code","3b400b27":"code","640320a5":"code","e76ef72f":"code","18d2606a":"code","3e6fe773":"code","b4c63819":"code","d7fcfe8b":"code","2277b0cd":"code","3286cc2e":"code","f0e790c0":"code","617b0461":"code","4e9c7955":"code","0e4d2113":"code","409982c1":"code","cdb6fbd4":"markdown","e0f440cd":"markdown","b0effd5b":"markdown","4f6ff795":"markdown","6adc05fc":"markdown","5ff4ee91":"markdown"},"source":{"d1f1d20a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9af56c53":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\npd.pandas.set_option('display.max_columns', None)\n","58481a85":"df = pd.read_csv('..\/input\/netflix-shows\/netflix_titles.csv')\ndf.head()","7d15662e":"df.isnull().sum()","877fd79a":"df.shape","bb6cdff7":"#To plot pie chart\n\ncounts = df['type'].value_counts().sort_index()\nprint(counts)\n# Plot a pie chart\nplt.figure(figsize = (10,7))\nplt.pie(df['type'].value_counts(), labels = df['type'].value_counts().index, autopct=\"%.1f%%\")\n\nplt.show()\n","a67a8a71":"#To plot pie chart\n\ncounts = df['rating'].value_counts().sort_index()\nprint(counts)\n# Plot a pie chart\nplt.figure(figsize = (15,10))\nplt.pie(df['rating'].value_counts(), labels = df['rating'].value_counts().index, autopct=\"%.1f%%\")\n\nplt.show()\n","37b39867":"#Top 20 categories in a col based on value_counts\n\nplt.figure(figsize = (10,7))\nchains = df['country'].value_counts()[:10] #top 10\nsns.barplot(x = chains, y = chains.index)\nplt.title(\"Countries\")\nplt.xlabel(\"Count\")\n","5f16d74e":"#Top 20 categories in a col based on value_counts\n\nplt.figure(figsize = (10,7))\nsns.barplot(x = df['release_year'].value_counts().index[:10], y = df['release_year'].value_counts()[:10])\nplt.title(\"release_year\")\nplt.xlabel(\"release_year\")\n","86b8968b":"#To see the bar graph of a col(never for continuous data)\nplt.figure(figsize = (10,7))\n\nsns.distplot(df['release_year'])\n","c0241c71":"#Top 20 categories in a col based on value_counts\n\nplt.figure(figsize = (10,7))\nchains = df['director'].value_counts()[:10] #top 10\nsns.barplot(x = chains, y = chains.index)\nplt.title(\"director\")\nplt.xlabel(\"Count\")\n","114ec057":"dftv = df[df['type'] == 'TV Show']\ndftv.head()\n","5d190eda":"dftv.shape","7ddf3654":"dfm = df[df['type'] == 'Movie']\ndfm.head()","7a471f3a":"dfm.shape","6cdbdcab":"\nplt.figure(figsize = (10,7))\nchains = dftv['country'].value_counts()[:10] #top 10\nsns.barplot(x = chains, y = chains.index)\nplt.title(\"Countries (TV Show)\")\nplt.xlabel(\"Count\")\n","d1a27f7e":"\nplt.figure(figsize = (10,7))\nchains = dfm['country'].value_counts()[:10] #top 10\nsns.barplot(x = chains, y = chains.index)\nplt.title(\"Countries (Movie)\")\nplt.xlabel(\"Count\")\n","7317aa1c":"\nplt.figure(figsize = (10,7))\nsns.barplot(x = dftv['release_year'].value_counts().index[:10], y = dftv['release_year'].value_counts()[:10])\nplt.title(\"release_year (TV Show)\")\nplt.xlabel(\"release_year\")\n","2febae72":"\nplt.figure(figsize = (10,7))\nsns.barplot(x = dfm['release_year'].value_counts().index[:10], y = dfm['release_year'].value_counts()[:10])\nplt.title(\"release_year (Movie)\")\nplt.xlabel(\"release_year\")\n","6812afc5":"#To plot pie chart\n\ncounts = dftv['rating'].value_counts().sort_index()\nprint(counts)\n# Plot a pie chart\nplt.figure(figsize = (15,10))\nplt.pie(dftv['rating'].value_counts(), labels = dftv['rating'].value_counts().index, autopct=\"%.1f%%\")\n\nplt.show()\n","8401d032":"#To plot pie chart\n\ncounts = dfm['rating'].value_counts().sort_index()\nprint(counts)\n# Plot a pie chart\nplt.figure(figsize = (15,10))\nplt.pie(dfm['rating'].value_counts(), labels = dfm['rating'].value_counts().index, autopct=\"%.1f%%\")\n\nplt.show()\n","fb193ec0":"\nplt.figure(figsize = (10,7))\nchains = dftv['director'].value_counts()[:10] #top 10\nsns.barplot(x = chains, y = chains.index)\nplt.title(\"Director (TV Show)\")\nplt.xlabel(\"Count\")\n","3b400b27":"\nplt.figure(figsize = (10,7))\nchains = dfm['director'].value_counts()[:10] #top 10\nsns.barplot(x = chains, y = chains.index)\nplt.title(\"Director (Movies)\")\nplt.xlabel(\"Count\")\n","640320a5":"#Replace Seasons with '', and convert column to numeric\n\ndftv.duration = dftv.duration.apply(lambda x: x.replace('Seasons',''))\ndftv.duration = dftv.duration.apply(lambda x: x.replace('Season',''))\n\ndftv['duration'] = dftv['duration'].apply(lambda x: float(x))\n","e76ef72f":"dftv.head()","18d2606a":"#Replace mins with '', and convert column to numeric\n\ndfm.duration = dfm.duration.apply(lambda x: x.replace('min',''))\n\ndfm['duration'] = dfm['duration'].apply(lambda x: float(x))\n","3e6fe773":"dfm.head()","b4c63819":"#To see the bar graph of a col(never for continuous data)\nplt.figure(figsize = (10,7))\n\nsns.distplot(dftv['duration'])\n","d7fcfe8b":"#To see the bar graph of a col(never for continuous data)\nplt.figure(figsize = (10,7))\n\nsns.distplot(dfm['duration'])\n","2277b0cd":"dfm_ind = dfm[dfm['country'] == 'India']\ndfm_ind.shape","3286cc2e":"dfm_ind.head()","f0e790c0":"dfm_ind.isnull().sum()","617b0461":"#To plot pie chart\n\ncounts = dfm_ind['rating'].value_counts().sort_index()\nprint(counts)\n# Plot a pie chart\nplt.figure(figsize = (15,10))\nplt.pie(dfm_ind['rating'].value_counts(), labels = dfm_ind['rating'].value_counts().index, autopct=\"%.1f%%\")\n\nplt.show()\n","4e9c7955":"\nplt.figure(figsize = (10,7))\nchains = dfm_ind['director'].value_counts()[:10] #top 10\nsns.barplot(x = chains, y = chains.index)\nplt.title(\"Director (IND Movie)\")\nplt.xlabel(\"Count\")\n","0e4d2113":"#To see the bar graph of a col(never for continuous data)\nplt.figure(figsize = (10,7))\n\nsns.distplot(dfm_ind['duration'])\n","409982c1":"\nplt.figure(figsize = (10,7))\nsns.barplot(x = dfm_ind['release_year'].value_counts().index[:10], y = dfm_ind['release_year'].value_counts()[:10])\nplt.title(\"release_year (IND Movie)\")\nplt.xlabel(\"release_year\")\n","cdb6fbd4":"# INDIA","e0f440cd":"# Duration distribution (TV)","b0effd5b":"# Duration distribution (Movie)","4f6ff795":"# TV Rating Pie Chart","6adc05fc":"# Movies Rating Pie chart ","5ff4ee91":"# TV vs Movie"}}