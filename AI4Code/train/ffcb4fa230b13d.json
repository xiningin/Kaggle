{"cell_type":{"7f80f555":"code","c807b613":"code","88a4f3e9":"code","0c761e19":"code","dba45ecd":"code","7ad80e6a":"code","25662b26":"code","d4bc70d5":"code","9ddc3d1d":"code","1c73bf62":"code","3c627a5f":"code","6d8fd6a1":"code","335eb6a1":"code","8ff56547":"code","c93dab87":"code","711962ec":"code","5fa55d47":"code","ac64ba15":"code","8d3d06ae":"code","3a83b3ca":"code","c9e5aaa0":"code","673b1eac":"code","ea98772c":"code","7fe83504":"markdown","77648284":"markdown","061a805f":"markdown"},"source":{"7f80f555":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","c807b613":"import warnings\nwarnings.filterwarnings('ignore')","88a4f3e9":"df=pd.read_csv('\/kaggle\/input\/kinematics-motion-data\/Kinematics_Data.csv')","0c761e19":"df.head()","dba45ecd":"pip install pycaret --ignore-installed llvmlite numba","7ad80e6a":"from pycaret.classification import *","25662b26":"df=df.drop(['date','time','username','wrist'],axis=1)","d4bc70d5":"exp_clf = setup(df, target = 'activity',silent=True,session_id=1)","9ddc3d1d":"compare_models()","1c73bf62":"catboost=create_model('catboost')","3c627a5f":"plot_model(catboost)","6d8fd6a1":"plot_model(catboost, plot = 'confusion_matrix')","335eb6a1":"import matplotlib.pyplot as plt\nfrom matplotlib.colors import ListedColormap\n%matplotlib inline\n\nimport tensorflow as tf\n\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Activation, Dropout\nfrom tensorflow.keras.optimizers import SGD\nfrom tensorflow.keras.optimizers import Adam\nfrom keras.utils import np_utils\nfrom keras.callbacks import EarlyStopping \n\nfrom sklearn import datasets\nfrom sklearn import preprocessing\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import plot_confusion_matrix\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn.model_selection import StratifiedKFold","8ff56547":"df_X=df.drop(['activity'],axis=1)\ny=df['activity']","c93dab87":"df_X","711962ec":"sc = preprocessing.StandardScaler()\nX_sc = sc.fit_transform(df_X)\n\ndf_X_sc = pd.DataFrame(X_sc,columns=df_X.columns)\ndf_X_sc.head()","5fa55d47":"y_T = np_utils.to_categorical(y) ","ac64ba15":"X_train, X_test, y_train, y_test = train_test_split(df_X, y_T,\n                                                    test_size=0.2,\n                                                    random_state=0,\n                                                    stratify=y)\n\nX_train, X_eval, y_train, y_eval = train_test_split(X_train, y_train,\n                                                    test_size=0.2,\n                                                    random_state=0,\n                                                    stratify=y_train)","8d3d06ae":"np.random.seed(0)\ntf.random.set_seed(1)\n\nmodel = Sequential()\nmodel.add(Dense(units=10, activation='relu', input_dim=6))\nmodel.add(Dense(units=5, activation='relu',))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(units=2, activation='sigmoid'))\nmodel.summary()","3a83b3ca":"model.compile(\n    loss='binary_crossentropy',     \n    optimizer=Adam(lr=0.01),\n    metrics=['accuracy']) ","c9e5aaa0":"early_stopping = EarlyStopping(patience=10, verbose=0) \n\nhistory = model.fit(X_train, y_train,                  \n                    epochs=500,\n                    batch_size=30,\n                    verbose=1,\n                    validation_data=(X_eval, y_eval),\n                    callbacks=[early_stopping])","673b1eac":"acc = history.history['accuracy']\nval_acc = history.history['val_accuracy']\nloss = history.history['loss']\nval_loss = history.history['val_loss']\nepochs_range = range(len(history.history['val_loss']))\nplt.figure(figsize=(15, 10))\nplt.subplot(1, 2, 1)\nplt.plot(epochs_range, acc, label='Training Binary Accuracy')\nplt.plot(epochs_range, val_acc, label='Validation Binary Accuracy')\nplt.legend(loc='lower right')\nplt.title('Training and Validation Binary Accuracy')\nplt.subplot(1, 2, 2)\nplt.plot(epochs_range, loss, label='Training Loss')\nplt.plot(epochs_range, val_loss, label='Validation Loss')\nplt.legend(loc='upper right')\nplt.title('Training and Validation Loss')\nplt.show()","ea98772c":"y_pred = model.predict(X_test)\ny_pred_max = np.argmax(y_pred, axis=1)\n\n_, y_test_acc = np.where(y_test > 0) \n\naccuracy = accuracy_score(y_test_acc, y_pred_max)\nprint('Test Accuracy:', accuracy)","7fe83504":"# 3. Basic Neural Network Modeling","77648284":"# 2. Catboost modeling","061a805f":"# 1. Find the best ML model by PyCaret"}}