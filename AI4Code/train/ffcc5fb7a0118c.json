{"cell_type":{"f3415db7":"code","a53d98d9":"code","35d03bb7":"code","277e94bd":"code","e49cbaa9":"code","9a966b1c":"code","a61e93ba":"code","56f4bbba":"code","4d6fc810":"code","7d155781":"code","785bf5cb":"code","50f4c6d9":"code","30b2500d":"code","89c23c52":"code","8eed1d60":"code","72f61bbb":"code","ee3f6d1f":"code","07a07184":"markdown","475b7973":"markdown","0aa8b935":"markdown","4fc66127":"markdown","b3b319ab":"markdown","df728600":"markdown","f4a368d4":"markdown"},"source":{"f3415db7":"from tensorflow.keras.preprocessing.image import ImageDataGenerator\n\nfrom tensorflow.keras.models import Sequential, Model\nfrom tensorflow.keras import layers\nfrom tensorflow.keras.optimizers import SGD\nfrom tensorflow.keras.optimizers import RMSprop\nfrom sklearn.utils import shuffle\nfrom tensorflow.keras import optimizers\nfrom sklearn.neighbors import KNeighborsClassifier\n\nfrom tensorflow.keras.applications.vgg16 import VGG16\nfrom tensorflow.keras.applications.nasnet import NASNetLarge\nfrom tensorflow.keras import models\n\nimport numpy as np\n\nfrom datetime import datetime\n\n","a53d98d9":"BATCH = 128\nimage_size = 150\ndef generator():\n    datagen = ImageDataGenerator(rescale=1.\/255)\n    \n    train_data = datagen.flow_from_directory('\/kaggle\/input\/intel-image-classification\/seg_train\/seg_train\/',\n                                        target_size=(image_size, image_size),\n                                        batch_size=BATCH,\n                                        class_mode='categorical',\n                                        shuffle=True)\n\n    test_data = datagen.flow_from_directory('\/kaggle\/input\/intel-image-classification\/seg_test\/seg_test\/',\n                                        target_size=(image_size, image_size),\n                                        batch_size=BATCH,\n                                        class_mode='categorical',\n                                        shuffle=True)\n\n    return train_data, test_data\ntrain_data, test_data = generator()\ntrain_images, train_labels = train_data.next()\ntest_images, test_labels = test_data.next()","35d03bb7":"print(len(test_data))\nprint(test_data[23][0].shape)\n\nprint(len(train_data))\nprint(train_data[109][0].shape)","277e94bd":"train_data[0][0].shape","e49cbaa9":"train_data.class_indices","9a966b1c":"import subprocess\nimport pprint\n\nsp = subprocess.Popen(['nvidia-smi'], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n\nout_str = sp.communicate()\nout_list = str(out_str[0]).split('\\\\n')\n\nout_dict = {}\n\nfor item in out_list:\n    print(item)","a61e93ba":"ACTIVATION='relu'\nKERNEL_INIT='he_normal'\nvgg_model = Sequential()\nvgg_model.add(VGG16(include_top=False, weights=None, input_shape=(image_size, image_size, 3), classes=6))\nvgg_model.add(layers.Flatten())\nvgg_model.add(layers.Dense(1000, activation=ACTIVATION, input_dim=4*4*512, kernel_initializer=KERNEL_INIT))\nvgg_model.add(layers.Dense(6, activation='softmax'))\n\nvgg_model.summary()","56f4bbba":"EPOCHS = 20\nvgg_model.compile(optimizer='rmsprop', \n              loss='categorical_crossentropy',\n              metrics=['accuracy'])\ntime_start = datetime.now()\nhistory = vgg_model.fit_generator(train_data, steps_per_epoch=len(train_data), shuffle=True, epochs=EPOCHS, validation_steps=len(test_data), validation_data=test_data)\ntime = datetime.now() - time_start\nprint('Time: ', time)","4d6fc810":"vgg_model = VGG16(include_top=False, weights='imagenet', input_shape=(image_size, image_size, 3), classes=1000)\nvgg_model.summary()","7d155781":"def extract_features(sample_count, vgg_model, generat):\n    features = np.zeros(shape=(sample_count, 4, 4, 512))\n    labels = np.zeros(shape=(sample_count, 6))\n    i=0\n    for inputs_batch, labels_batch in generat:\n        #\u0432\u044b\u0434\u0435\u043b\u044f\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0438\u0437 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439\n        features_batch = vgg_model.predict(inputs_batch)\n        features[i * BATCH : (i + 1) * BATCH] = features_batch\n        labels[i * BATCH : (i + 1) * BATCH] = labels_batch\n        i = i + 1\n        if (i + 1) * BATCH >= sample_count:\n            return features, labels\n    return features, labels","785bf5cb":"time_start = datetime.now()\ntrain_sample_count = 14034\ntest_sample_count = 3000\ngenerat = generator()\n#\u0432\u044b\u0434\u0435\u043b\u044f\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\ntrain_features, train_y = extract_features(train_sample_count, vgg_model, generat[0])\ntest_features, test_y = extract_features(test_sample_count, vgg_model, generat[1])\n\ntime = datetime.now() - time_start\nprint('Time: ', time)","50f4c6d9":"print(train_features.shape)\nprint(train_y.shape)\n\nprint(test_features.shape) \nprint(test_y.shape)","30b2500d":"train_features = np.reshape(train_features, (train_sample_count, 4*4*512))\ntest_features = np.reshape(test_features, (test_sample_count, 4*4*512))","89c23c52":"print(train_features.shape)\nprint(train_y.shape)","8eed1d60":"#\u043f\u0435\u0440\u0435\u0434\u0430\u0434\u0438\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043d\u0430 \u0432\u0445\u043e\u0434 \u043f\u043e\u043b\u043d\u043e\u0441\u0432\u044f\u0437\u043d\u043e\u043c\u0443 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0443\nEPOCHS = 20\nACTIVATION='relu'\nKERNEL_INIT='he_normal'\n\nmodel = Sequential()\nmodel.add(layers.Dense(1000, activation=ACTIVATION, input_dim=4*4*512, kernel_initializer=KERNEL_INIT))\n\nmodel.add(layers.Dense(6, activation='softmax'))\nmodel.summary()\n\nmodel.compile(optimizer='rmsprop', \n              loss='categorical_crossentropy',\n              metrics=['accuracy'])\ntime_start = datetime.now()\nhistory = model.fit(train_features, train_y, epochs=EPOCHS, batch_size = 128, shuffle=True, validation_data=(test_features, test_y))\ntime = datetime.now() - time_start\nprint('Time: ', time)","72f61bbb":"vgg_model = VGG16(include_top=False, weights='imagenet', input_shape=(image_size, image_size, 3), classes=1000)\nvgg_model.summary()","ee3f6d1f":"EPOCHS = 20\nACTIVATION='relu'\nKERNEL_INIT='he_normal'\n\nmodel = Sequential()\nmodel.add(vgg_model)\nvgg_model.trainable = False\nmodel.add(layers.Flatten())\nmodel.add(layers.Dense(1000, activation=ACTIVATION, input_dim=4*4*512, kernel_initializer=KERNEL_INIT))\n\nmodel.add(layers.Dense(6, activation='softmax'))\nmodel.summary()\n\nmodel.compile(optimizer='rmsprop', \n              loss='categorical_crossentropy',\n              metrics=['accuracy'])\ntime_start = datetime.now()\nhistory =  model.fit_generator(train_data, steps_per_epoch=len(train_data), shuffle=True, epochs=EPOCHS, validation_steps=len(test_data), validation_data=test_data)\ntime = datetime.now() - time_start\nprint('Time: ', time)","07a07184":"\u0412\u043e\u0437\u044c\u043c\u0435\u043c \u0437\u0430 \u043e\u0441\u043d\u043e\u0432\u0443 \u0441\u0432\u0435\u0440\u0442\u043e\u0447\u043d\u0443\u044e \u043d\u0435\u0439\u0440\u043e\u043d\u043d\u0443\u044e \u0441\u0435\u0442\u044c VGG16, \u043e\u0431\u0443\u0447\u0435\u043d\u043d\u0443\u044e \u043d\u0430 \u043d\u0430\u0431\u043e\u0440\u0435 ImageNet (1,4 \u043c\u0438\u043b\u043b\u0438\u043e\u043d\u0430 \u0438\u0437\u043e\u0431\u0440, \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043d\u0430 1000 \u043a\u043b\u0430\u0441\u0441\u043e\u0432).\n\n\u041f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u043c \u043d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 intel-image \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043e\u0431\u0443\u0447\u0435\u043d\u043d\u0443\u044e \u0441\u0432\u0435\u0440\u0442\u043e\u0447\u043d\u0443\u044e \u043e\u0441\u043d\u043e\u0432\u0443 VGG16, \u0437\u0430\u043f\u0438\u0448\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.\n\n\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u0430\u043a \u0432\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u043d\u043e\u0441\u0432\u044f\u0437\u043d\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0430.","475b7973":"### \u042d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442 3\n\u0422\u043e\u043d\u043a\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u043c\u043e\u0434\u0435\u043b\u0438, \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0439 \u0434\u043b\u044f \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0439 \u00ab\u0417\u0430\u0434\u0430\u0447\u0438 \u0410\u00bb, \u0441 \u0446\u0435\u043b\u044c\u044e \u0440\u0435\u0448\u0435\u043d\u0438\u044f\n\u00ab\u0417\u0430\u0434\u0430\u0447\u0438 \u0412\u00bb\n* \u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 \u0441\u043b\u043e\u0438 \u0433\u043b\u0443\u0431\u043e\u043a\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0443, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0440\u0435\u0448\u0430\u0435\u0442 \u00ab\u0417\u0430\u0434\u0430\u0447\u0443 \u0410\u00bb, \u0437\u0430\u043c\u0435\u043d\u044f\u044e\u0442\u0441\u044f\n\u043d\u043e\u0432\u044b\u043c \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u043e\u043c (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043d\u0430\u0431\u043e\u0440\u043e\u043c \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0445 \u0441\u043b\u043e\u0435\u0432 \u0441 \u0434\u0440\u0443\u0433\u0438\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u0432\u044b\u0445\u043e\u0434\u043e\u0432)\n* \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u0430\u044f \u043c\u043e\u0434\u0435\u043b\u044c \u043e\u0431\u0443\u0447\u0430\u0435\u0442\u0441\u044f \u043a\u0430\u043a \u0435\u0434\u0438\u043d\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \n* \u042d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442 \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u0442 \u043f\u0435\u0440\u0435\u043d\u043e\u0441 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435\n\u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u0432","0aa8b935":"### GPU Info","4fc66127":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c VGG16 - \u043c\u043e\u0434\u0435\u043b\u044c \u0434\u043b\u044f \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u0447\u0438 ImageNet.","b3b319ab":"### \u042d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442 2\n\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438, \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0439 \u0434\u043b\u044f \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0439 \u00ab\u0417\u0430\u0434\u0430\u0447\u0438 \u0410\u00bb, \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e\n\u043c\u0435\u0442\u043e\u0434\u0430 \u0438\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043f\u0440\u0438 \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0438 \u043c\u043e\u0434\u0435\u043b\u0438, \u0440\u0435\u0448\u0430\u044e\u0449\u0435\u0439 \u00ab\u0417\u0430\u0434\u0430\u0447\u0443 \u0412\u00bb\n* \u0418\u0434\u0435\u044f \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u0430 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e\u0431\u044b \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0438\u0437 \u0433\u043b\u0443\u0431\u043e\u043a\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 (\u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e\n\u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u0441\u043b\u043e\u0438) \u0438 \u0440\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u0441\u0435\u0442\u0438 \u043a\u0430\u043a \u043c\u0435\u0442\u043e\u0434 \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\n* \u0412\u0437\u0430\u043c\u0435\u043d \u0441\u0442\u0430\u0440\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0430 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043c\u0435\u0441\u0442\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0434\u0440\u0443\u0433\u043e\u0439 \u043d\u0430\u0431\u043e\u0440 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e\n\u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0445 \u0441\u043b\u043e\u0435\u0432 \u0438\u043b\u0438 \u043c\u0430\u0448\u0438\u043d\u0443 \u043e\u043f\u043e\u0440\u043d\u044b\u0445 \u0432\u0435\u043a\u0442\u043e\u0440\u043e\u0432) \u0438 \u043e\u0431\u0443\u0447\u0438\u0442\u044c \u0435\u0433\u043e \u043d\u0430 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u0445, \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0445 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0439\n\u0447\u0430\u0441\u0442\u0438 \u0441\u0435\u0442\u0438\n* \u042d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442 \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u0442 \u043f\u0435\u0440\u0435\u043d\u043e\u0441 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\u043e\u0433\u043e \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f","df728600":"### \u042d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442 1\n\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b \u0433\u043b\u0443\u0431\u043e\u043a\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438, \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0439 \u0434\u043b\u044f \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0439 \u00ab\u0417\u0430\u0434\u0430\u0447\u0438 \u0410\u00bb, \u0441 \u0446\u0435\u043b\u044c\u044e \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u043b\u044f \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u00ab\u0417\u0430\u0434\u0430\u0447\u0438 \u0412\u00bb\n* \u041f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u043c\u043e\u0434\u0435\u043b\u044c, \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u0430\u044f \u0434\u043b\u044f \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0438, \u043e\u0431\u0443\u0447\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0445, \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0434\u043b\u044f\n\u0440\u0435\u0448\u0435\u043d\u0438\u044f \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0438\n* \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u0432\u0435\u0441\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c\n* \u042d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442 \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u0442 \u043f\u0435\u0440\u0435\u043d\u043e\u0441 \u0437\u043d\u0430\u043d\u0438\u0439 \u0434\u043b\u044f \u0440\u043e\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0445 \u0434\u043e\u043c\u0435\u043d\u043e\u0432","f4a368d4":"### \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445"}}