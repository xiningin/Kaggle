{"cell_type":{"3e6a9fef":"code","38040398":"code","e0746900":"code","857aaa9c":"code","feece002":"code","4d0e7453":"code","019153f6":"code","72e4952a":"code","93914f6d":"code","ec495a7e":"code","34af9d27":"code","d35bebfa":"code","4f74bea0":"code","422e2f12":"code","a8d68143":"code","572df88a":"code","7631175a":"code","ce4bd0d3":"code","b2d75bc5":"code","ca4b7481":"code","545c008e":"code","b06226e2":"code","ef595110":"code","7c9fac3a":"code","98f8d793":"code","c4ab7b18":"code","bafd9e9a":"code","9ec9cbc5":"code","326fa92a":"code","582162a2":"code","e2e4203b":"code","4fb0fb29":"code","f7b80da2":"code","786dd9f0":"code","7ab0a510":"code","12f6d03b":"code","a8235e63":"code","ac23205c":"code","6422bf21":"code","b86769bc":"code","f81f6bbf":"code","e5de32fe":"code","53a320c9":"markdown","47b9b27f":"markdown","40c4dfc6":"markdown","5594ab40":"markdown","52c1de55":"markdown","4114fe63":"markdown","9c33236e":"markdown","c8347122":"markdown","abcee9b2":"markdown","0eafa763":"markdown","0b1e18c6":"markdown","266c8070":"markdown","5d090db1":"markdown","eec744f9":"markdown","f08bd682":"markdown","71645761":"markdown","a29b0d84":"markdown","0400f8e4":"markdown","b8b52333":"markdown","1c243175":"markdown","29e5e328":"markdown","f666afb3":"markdown","13aff470":"markdown","b1d2faaf":"markdown","3857c7f4":"markdown","bbef41dd":"markdown","297b62db":"markdown","5f87eaec":"markdown","9d191cef":"markdown","6a3a6a82":"markdown","dff8d6f3":"markdown","3a6b3afb":"markdown","6015d6ff":"markdown","e52a9d9c":"markdown","259b010d":"markdown","b65f780d":"markdown","4d2a8b40":"markdown","6efe8a4c":"markdown","641e758d":"markdown","226ca759":"markdown","6394e4a8":"markdown","68737e2a":"markdown","c2e03e29":"markdown","e451ba29":"markdown","e17ce480":"markdown","3944d098":"markdown","92719bfa":"markdown","e4dddfde":"markdown","5797111e":"markdown","b35dd679":"markdown","c7db1c3b":"markdown","7ae4fd98":"markdown","f7e72005":"markdown","2fb31a9c":"markdown"},"source":{"3e6a9fef":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n!pip install imblearn\nfrom imblearn.over_sampling import SMOTE\nfrom random import shuffle\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score, precision_score, recall_score, confusion_matrix, ConfusionMatrixDisplay\nfrom sklearn.ensemble import RandomForestClassifier","38040398":"data = pd.read_csv(\"..\/input\/amex-competition\/dataset\/train.csv\")\ndata","e0746900":"data.isna().sum()","857aaa9c":"data.no_of_children.hist()\ndata.no_of_children.fillna(np.median(data.no_of_children.dropna()), inplace=True)","feece002":"data.no_of_days_employed.hist()\ndata.no_of_days_employed.fillna(np.median(data.no_of_days_employed.dropna()), inplace=True)","4d0e7453":"data.total_family_members.hist()\ndata.total_family_members.fillna(np.median(data.total_family_members.dropna()), inplace=True)","019153f6":"data.yearly_debt_payments.hist()\ndata.yearly_debt_payments.fillna(np.median(data.yearly_debt_payments.dropna()), inplace=True)","72e4952a":"data.credit_score.hist()\ndata.credit_score.fillna(np.median(data.credit_score.dropna()), inplace=True)","93914f6d":"data.isna().sum()","ec495a7e":"data.owns_car.fillna(data.owns_car.mode().values[0],inplace=True)\ndata.migrant_worker.fillna(data.migrant_worker.mode().values[0],inplace=True)","34af9d27":"def get_profit_category(value):\n    if value < 0 :\n        return \"Loss\"\n    elif value == 0 : \n        return \"Zero\"\n    else:\n        return \"Profit\"\n\ndata[\"in_hand_balance\"] = (data.net_yearly_income - data.yearly_debt_payments)\ndata[\"in_profit\"] = [get_profit_category(i) for i in data[\"in_hand_balance\"].values]\ndata[\"total_income_received\"] = data.net_yearly_income * data.no_of_days_employed\ndata[\"employment_years\"] = (data.no_of_days_employed \/ 365.0)","d35bebfa":"data.employment_years.clip(upper = np.median(data.employment_years), inplace=True)","4f74bea0":"cnames = {\n'antiquewhite':         '#FAEBD7',\n'aqua':                 '#00FFFF',\n'aquamarine':           '#7FFFD4',\n'beige':                '#F5F5DC',\n'bisque':               '#FFE4C4',\n'black':                '#000000',\n'blanchedalmond':       '#FFEBCD',\n'blue':                 '#0000FF',\n'blueviolet':           '#8A2BE2',\n'brown':                '#A52A2A',\n'burlywood':            '#DEB887',\n'cadetblue':            '#5F9EA0',\n'chartreuse':           '#7FFF00',\n'chocolate':            '#D2691E',\n'coral':                '#FF7F50',\n'cornflowerblue':       '#6495ED',\n'crimson':              '#DC143C',\n'cyan':                 '#00FFFF',\n'darkblue':             '#00008B',\n'darkcyan':             '#008B8B',\n'darkgoldenrod':        '#B8860B',\n#'darkgray':             '#A9A9A9',\n'darkgreen':            '#006400',\n'darkkhaki':            '#BDB76B',\n'darkmagenta':          '#8B008B',\n'darkolivegreen':       '#556B2F',\n'darkorange':           '#FF8C00',\n'darkorchid':           '#9932CC',\n'darkred':              '#8B0000',\n'darksalmon':           '#E9967A',\n'darkseagreen':         '#8FBC8F',\n'darkslateblue':        '#483D8B',\n#'darkslategray':        '#2F4F4F',\n'darkturquoise':        '#00CED1',\n'darkviolet':           '#9400D3',\n'deeppink':             '#FF1493',\n'deepskyblue':          '#00BFFF',\n#'dimgray':              '#696969',\n'dodgerblue':           '#1E90FF',\n'firebrick':            '#B22222',\n'forestgreen':          '#228B22',\n'fuchsia':              '#FF00FF',\n'gainsboro':            '#DCDCDC',\n'gold':                 '#FFD700',\n'goldenrod':            '#DAA520',\n#'gray':                 '#808080',\n'green':                '#008000',\n'greenyellow':          '#ADFF2F',\n'honeydew':             '#F0FFF0',\n'hotpink':              '#FF69B4',\n'indianred':            '#CD5C5C',\n'indigo':               '#4B0082',\n'ivory':                '#FFFFF0',\n'khaki':                '#F0E68C',\n'lavender':             '#E6E6FA',\n'lawngreen':            '#7CFC00',\n'lemonchiffon':         '#FFFACD',\n'lightblue':            '#ADD8E6',\n'lightcoral':           '#F08080',\n'lightcyan':            '#E0FFFF',\n'lightgoldenrodyellow': '#FAFAD2',\n'lightgreen':           '#90EE90',\n#'lightgray':            '#D3D3D3',\n'lightpink':            '#FFB6C1',\n'lightsalmon':          '#FFA07A',\n'lightseagreen':        '#20B2AA',\n'lightskyblue':         '#87CEFA',\n#'lightslategray':       '#778899',\n'lightsteelblue':       '#B0C4DE',\n'lime':                 '#00FF00',\n'limegreen':            '#32CD32',\n'magenta':              '#FF00FF',\n'maroon':               '#800000',\n'mediumaquamarine':     '#66CDAA',\n'mediumblue':           '#0000CD',\n'mediumorchid':         '#BA55D3',\n'mediumpurple':         '#9370DB',\n'mediumseagreen':       '#3CB371',\n'mediumslateblue':      '#7B68EE',\n'mediumspringgreen':    '#00FA9A',\n'mediumturquoise':      '#48D1CC',\n'mediumvioletred':      '#C71585',\n'midnightblue':         '#191970',\n'mintcream':            '#F5FFFA',\n'moccasin':             '#FFE4B5',\n'navajowhite':          '#FFDEAD',\n'navy':                 '#000080',\n'olive':                '#808000',\n'olivedrab':            '#6B8E23',\n'orange':               '#FFA500',\n'orangered':            '#FF4500',\n'orchid':               '#DA70D6',\n'palegoldenrod':        '#EEE8AA',\n'palegreen':            '#98FB98',\n'paleturquoise':        '#AFEEEE',\n'palevioletred':        '#DB7093',\n'papayawhip':           '#FFEFD5',\n'peachpuff':            '#FFDAB9',\n'peru':                 '#CD853F',\n'pink':                 '#FFC0CB',\n'plum':                 '#DDA0DD',\n'powderblue':           '#B0E0E6',\n'purple':               '#800080',\n'red':                  '#FF0000',\n'rosybrown':            '#BC8F8F',\n'royalblue':            '#4169E1',\n'saddlebrown':          '#8B4513',\n'salmon':               '#FA8072',\n'sandybrown':           '#FAA460',\n'seagreen':             '#2E8B57',\n'sienna':               '#A0522D',\n'silver':               '#C0C0C0',\n'skyblue':              '#87CEEB',\n'slateblue':            '#6A5ACD',\n#'slategray':            '#708090',\n'springgreen':          '#00FF7F',\n'steelblue':            '#4682B4',\n'tan':                  '#D2B48C',\n'teal':                 '#008080',\n'thistle':              '#D8BFD8',\n'tomato':               '#FF6347',\n'turquoise':            '#40E0D0',\n'violet':               '#EE82EE',\n'wheat':                '#F5DEB3',\n'white':                '#FFFFFF',\n'yellow':               '#FFFF00',\n'yellowgreen':          '#9ACD32'}\n\ncolors = list(cnames.keys())","422e2f12":"data.columns","a8d68143":"plt.figure(figsize=(10,8))\nshuffle(colors)\nplt.subplot(2,2,1)\nplt.hist(data.age,color=colors[0])\nplt.xlabel(\"Age group\")\nplt.ylabel(\"Count\")\nplt.title(\"Which age group is dominant?\")\n\nshuffle(colors)\nplt.subplot(2,2,2)\nplt.hist(data[data.credit_card_default == 0].age,color=colors[0])\nplt.xlabel(\"Age group\")\nplt.ylabel(\"Count\")\nplt.title(\"Which age group is dominant among the non-defaulters?\")\n\nshuffle(colors)\nplt.subplot(2,2,3)\nplt.hist(data[data.credit_card_default == 1].age,color=colors[0])\nplt.xlabel(\"Age group\")\nplt.ylabel(\"Count\")\nplt.title(\"Which age group is dominant among the defaulters?\")\nplt.tight_layout()","572df88a":"plt.figure(figsize=(10,9))\nplt.subplot(2,2,1)\nshuffle(colors)\nun, count = np.unique(data.gender, return_counts=True)\nplt.bar(un, count, color=colors)\nplt.xlabel(\"Gender\")\nplt.ylabel(\"Count\")\nplt.title(\"Which gender group is dominant?\")\n\nplt.subplot(2,2,2)\nshuffle(colors)\nun, count = np.unique(data[data.credit_card_default == 1].gender, return_counts=True)\nplt.bar(un, count, color=colors)\nplt.xlabel(\"Gender\")\nplt.ylabel(\"Count\")\nplt.title(\"Which gender group is dominant among the defaulters?\")\n\nplt.subplot(2,2,3)\nshuffle(colors)\nun, count = np.unique(data[data.credit_card_default == 0].gender, return_counts=True)\nplt.bar(un, count, color=colors)\nplt.xlabel(\"Gender\")\nplt.ylabel(\"Count\")\nplt.title(\"Which gender group is dominant among the non-defaulters?\")\nplt.tight_layout()","7631175a":"plt.figure(figsize=(10,9))\nplt.subplot(2,2,1)\nshuffle(colors)\nun, count = np.unique(data.owns_car.dropna(), return_counts=True)\nun = [\"Yes\" if i.lower() == \"y\" else \"No\" for i in un]\nplt.bar(un, count, color=colors)\nplt.xlabel(\"Vehicle Ownership\")\nplt.ylabel(\"Count\")\nplt.title(\"How many own a car?\")\n\nplt.subplot(2,2,2)\nshuffle(colors)\nun, count = np.unique(data[data.credit_card_default == 1].owns_car.dropna(), return_counts=True)\nun = [\"Yes\" if i.lower() == \"y\" else \"No\" for i in un]\nplt.bar(un, count, color=colors)\nplt.xlabel(\"Vehicle Ownership\")\nplt.ylabel(\"Count\")\nplt.title(\"How many own a car among the defaulters?\")\n\nplt.subplot(2,2,3)\nshuffle(colors)\nun, count = np.unique(data[data.credit_card_default == 0].owns_car.dropna(), return_counts=True)\nun = [\"Yes\" if i.lower() == \"y\" else \"No\" for i in un]\nplt.bar(un, count, color=colors)\nplt.xlabel(\"Vehicle Ownership\")\nplt.ylabel(\"Count\")\nplt.title(\"How many own a car among the non-defaulters?\")\nplt.tight_layout()","ce4bd0d3":"plt.figure(figsize=(10,9))\nplt.subplot(2,2,1)\nshuffle(colors)\nun, count = np.unique(data.owns_house.dropna(), return_counts=True)\nun = [\"Yes\" if i.lower() == \"y\" else \"No\" for i in un]\nplt.bar(un, count, color=colors)\nplt.xlabel(\"House Ownership\")\nplt.ylabel(\"Count\")\nplt.title(\"How many owns a residence?\")\n\nplt.subplot(2,2,2)\nshuffle(colors)\nun, count = np.unique(data[data.credit_card_default == 1].owns_house.dropna(), return_counts=True)\nun = [\"Yes\" if i.lower() == \"y\" else \"No\" for i in un]\nplt.bar(un, count, color=colors)\nplt.xlabel(\"House Ownership\")\nplt.ylabel(\"Count\")\nplt.title(\"How many owns a residence among the defaulters?\")\n\nplt.subplot(2,2,3)\nshuffle(colors)\nun, count = np.unique(data[data.credit_card_default == 0].owns_house.dropna(), return_counts=True)\nun = [\"Yes\" if i.lower() == \"y\" else \"No\" for i in un]\nplt.bar(un, count, color=colors)\nplt.xlabel(\"House Ownership\")\nplt.ylabel(\"Count\")\nplt.title(\"How many owns a residence among the non-defaulters?\")\nplt.tight_layout()","b2d75bc5":"plt.figure(figsize=(10,9))\nplt.subplot(2,2,1)\nplt.hist(data.no_of_children,color='brown')\nplt.xlabel(\"No of Children\")\nplt.ylabel(\"Count\")\nplt.title(\"How many children do they have?\")\nplt.subplot(2,2,2)\nplt.hist(data[data.credit_card_default == 1].no_of_children,color='brown')\nplt.xlabel(\"No of Children\")\nplt.ylabel(\"Count\")\nplt.title(\"How many children do defaulters have?\")\nplt.subplot(2,2,3)\nplt.hist(data[data.credit_card_default == 0].no_of_children,color='brown')\nplt.xlabel(\"No of Children\")\nplt.ylabel(\"Count\")\nplt.title(\"How many children do defaulters have?\")\nplt.tight_layout()","ca4b7481":"plt.figure(figsize=(10,9))\nplt.subplot(2,2,1)\nplt.hist(data.net_yearly_income,color='aqua')\nplt.xlabel(\"Income group\")\nplt.ylabel(\"Count\")\nplt.title(\"How much do they earn?\")\nplt.subplot(2,2,2)\nplt.hist(data[data.credit_card_default == 1].net_yearly_income,color='aqua')\nplt.xlabel(\"Income group\")\nplt.ylabel(\"Count\")\nplt.title(\"How much do defaulters earn?\")\nplt.subplot(2,2,3)\nplt.hist(data[data.credit_card_default == 0].net_yearly_income,color='aqua')\nplt.xlabel(\"Income group\")\nplt.ylabel(\"Count\")\nplt.title(\"How much do non-defaulters earn?\")\nplt.tight_layout()","545c008e":"plt.figure(figsize=(10,9))\nplt.subplot(2,2,1)\nplt.hist(data.employment_years,color='blue')\nplt.xlabel(\"Time Span\")\nplt.ylabel(\"Count\")\nplt.title(\"How long have they been working?\")\nplt.subplot(2,2,2)\nplt.hist(data[data.credit_card_default == 1].employment_years,color='blue')\nplt.xlabel(\"Time Span\")\nplt.ylabel(\"Count\")\nplt.title(\"How long have the defaulters been working?\")\nplt.subplot(2,2,3)\nplt.hist(data[data.credit_card_default == 0].employment_years,color='blue')\nplt.xlabel(\"Time Span\")\nplt.ylabel(\"Count\")\nplt.title(\"How long have the non-defaulters been working?\")\nplt.tight_layout()","b06226e2":"shuffle(colors)\nplt.figure(figsize=(15,12))\nplt.subplot(2,2,1)\nun, count = np.unique(data.occupation_type.dropna(), return_counts=True)\nplt.barh(un, count, color=colors)\nplt.xlabel(\"Occupation Type\")\nplt.ylabel(\"Count\")\nplt.title(\"What profession do they do?\")\n\nplt.subplot(2,2,2)\nun, count = np.unique(data[data.credit_card_default == 1].occupation_type.dropna(), return_counts=True)\nplt.barh(un, count, color=colors)\nplt.xlabel(\"Occupation Type\")\nplt.ylabel(\"Count\")\nplt.title(\"What profession do defaulters do?\")\n\nplt.subplot(2,2,3)\nun, count = np.unique(data[data.credit_card_default == 0].occupation_type.dropna(), return_counts=True)\nplt.barh(un, count, color=colors)\nplt.xlabel(\"Occupation Type\")\nplt.ylabel(\"Count\")\nplt.title(\"What profession do non-defaulters do?\")\nplt.tight_layout()","ef595110":"plt.figure(figsize=(10,9))\nplt.subplot(2,2,1)\nplt.hist(data.total_family_members,color='seagreen')\nplt.xlabel(\"Family Member Count\")\nplt.ylabel(\"Count\")\nplt.title(\"How big family do they have?\")\nplt.subplot(2,2,2)\nplt.hist(data[data.credit_card_default == 1].total_family_members,color='seagreen')\nplt.xlabel(\"Family Member Count\")\nplt.ylabel(\"Count\")\nplt.title(\"How big family do defaulters have?\")\nplt.subplot(2,2,3)\nplt.hist(data[data.credit_card_default == 0].total_family_members,color='seagreen')\nplt.xlabel(\"Family Member Count\")\nplt.ylabel(\"Count\")\nplt.title(\"How big family do non-defaulters have?\")\nplt.tight_layout()","7c9fac3a":"shuffle(colors)\nplt.figure(figsize=(10,9))\nplt.subplot(2,2,1)\nun, count = np.unique(data.migrant_worker.dropna(), return_counts=True)\nun = [str(int(i)) for i in un]\nplt.bar(un, count, color = colors)\nplt.xlabel(\"Migration Status\")\nplt.ylabel(\"Count\")\nplt.title(\"Are they an outsider?\")\nplt.subplot(2,2,2)\nun, count = np.unique(data[data.credit_card_default == 0].migrant_worker.dropna(), return_counts=True)\nun = [str(int(i)) for i in un]\nplt.bar(un, count, color = colors)\nplt.xlabel(\"Migration Status\")\nplt.ylabel(\"Count\")\nplt.title(\"Are they non-defaulters an outsider?\")\nplt.subplot(2,2,3)\nun, count = np.unique(data[data.credit_card_default == 1].migrant_worker.dropna(), return_counts=True)\nun = [str(int(i)) for i in un]\nplt.bar(un, count, color = colors)\nplt.xlabel(\"Migration Status\")\nplt.ylabel(\"Count\")\nplt.title(\"Are they defaulters an outsider?\")\nplt.tight_layout()","98f8d793":"plt.figure(figsize=(15,9))\nplt.subplot(2,2,1)\nplt.hist(data.yearly_debt_payments, color=\"lightblue\")\nplt.xlabel(\"Debt Amount Range\")\nplt.ylabel(\"Count\")\nplt.title(\"How much debt do they have?\")\nplt.subplot(2,2,2)\nplt.hist(data[data.credit_card_default == 1].yearly_debt_payments, color=\"lightblue\")\nplt.xlabel(\"Debt Amount Range\")\nplt.ylabel(\"Count\")\nplt.title(\"How much debt do defaulters have?\")\nplt.subplot(2,2,3)\nplt.hist(data[data.credit_card_default == 0].yearly_debt_payments, color=\"lightblue\")\nplt.xlabel(\"Debt Amount Range\")\nplt.ylabel(\"Count\")\nplt.title(\"How much debt do non-defaulters have?\")\nplt.tight_layout()","c4ab7b18":"plt.figure(figsize=(20,9))\nplt.subplot(2,2,1)\nplt.ticklabel_format(useOffset=False)\nplt.hist(data.credit_limit, color=\"skyblue\")\nplt.xlabel(\"Available Credit Limit Range\")\nplt.ylabel(\"Count\")\nplt.title(\"How much credit limit do they have?\")\n\nplt.subplot(2,2,2)\nplt.ticklabel_format(useOffset=False)\nplt.hist(data[data.credit_card_default == 1].credit_limit, color=\"skyblue\")\nplt.xlabel(\"Available Credit Limit Range\")\nplt.ylabel(\"Count\")\nplt.title(\"How much credit limit do defaulters have?\")\n\nplt.subplot(2,2,3)\nplt.ticklabel_format(useOffset=False)\nplt.hist(data[data.credit_card_default == 0].credit_limit, color=\"skyblue\")\nplt.xlabel(\"Available Credit Limit Range\")\nplt.ylabel(\"Count\")\nplt.title(\"How much credit limit do non-defaulters have?\")\nplt.tight_layout()","bafd9e9a":"plt.figure(figsize=(10,9))\nplt.subplot(2,2,1)\nplt.hist(data['credit_limit_used(%)'], color=\"darkgreen\")\nplt.xlabel(\"Used Credit Limit Range\")\nplt.ylabel(\"Count\")\nplt.title(\"How much credit limit have they used?\")\nplt.subplot(2,2,2)\nplt.hist(data[data.credit_card_default == 1]['credit_limit_used(%)'], color=\"darkgreen\")\nplt.xlabel(\"Used Credit Limit Range\")\nplt.ylabel(\"Count\")\nplt.title(\"How much credit limit have defaulters used?\")\nplt.subplot(2,2,3)\nplt.hist(data[data.credit_card_default == 0]['credit_limit_used(%)'], color=\"darkgreen\")\nplt.xlabel(\"Used Credit Limit Range\")\nplt.ylabel(\"Count\")\nplt.title(\"How much credit limit have non-defaulters used?\")\nplt.tight_layout()","9ec9cbc5":"shuffle(colors)\nplt.figure(figsize=(10,9))\nplt.subplot(2,2,1)\nplt.hist(data.credit_score, color=colors[0])\nplt.xlabel(\"Credit Score Range\")\nplt.ylabel(\"Count\")\nplt.title(\"How much credit score do they have?\")\nplt.subplot(2,2,2)\nplt.hist(data[data.credit_card_default == 1].credit_score, color=colors[0])\nplt.xlabel(\"Credit Score Range\")\nplt.ylabel(\"Count\")\nplt.title(\"How much credit score do defaulters have?\")\nplt.subplot(2,2,3)\nplt.hist(data[data.credit_card_default == 0].credit_score, color=colors[0])\nplt.xlabel(\"Credit Score Range\")\nplt.ylabel(\"Count\")\nplt.title(\"How much credit score do non-defaulters have?\")\nplt.tight_layout()","326fa92a":"shuffle(colors)\nplt.figure(figsize=(10,9))\nplt.subplot(2,2,1)\nun, count = np.unique(data.prev_defaults, return_counts=True)\nun = [str(int(i)) for i in un]\nplt.bar(un, count, color=colors)\nplt.xlabel(\"Previous Default Count\")\nplt.ylabel(\"Count\")\nplt.title(\"How many times have they defaulted before?\")\nplt.subplot(2,2,2)\nun, count = np.unique(data[data.credit_card_default == 1].prev_defaults, return_counts=True)\nun = [str(int(i)) for i in un]\nplt.bar(un, count, color=colors)\nplt.xlabel(\"Previous Default Count\")\nplt.ylabel(\"Count\")\nplt.title(\"How many times have the defaulters defaulted before?\")\nplt.subplot(2,2,3)\nun, count = np.unique(data[data.credit_card_default == 0].prev_defaults, return_counts=True)\nun = [str(int(i)) for i in un]\nplt.bar(un, count, color=colors)\nplt.xlabel(\"Previous Default Count\")\nplt.ylabel(\"Count\")\nplt.title(\"How many times have the non-defaulters defaulted before?\")\nplt.tight_layout()","582162a2":"shuffle(colors)\nplt.figure(figsize=(10,9))\nplt.subplot(2,2,1)\nun, count = np.unique(data.default_in_last_6months, return_counts=True)\nun = [str(int(i)) for i in un]\nplt.bar(un, count, color=colors)\nplt.xlabel(\"Recent Default Count\")\nplt.ylabel(\"Count\")\nplt.title(\"Have they defaulted recently?\")\nplt.subplot(2,2,2)\nun, count = np.unique(data[data.credit_card_default == 1].default_in_last_6months, return_counts=True)\nun = [str(int(i)) for i in un]\nplt.bar(un, count, color=colors)\nplt.xlabel(\"Recent Default Count\")\nplt.ylabel(\"Count\")\nplt.title(\"Have the defaulters defaulted recently?\")\nplt.subplot(2,2,3)\nun, count = np.unique(data[data.credit_card_default == 0].default_in_last_6months, return_counts=True)\nun = [str(int(i)) for i in un]\nplt.bar(un, count, color=colors)\nplt.xlabel(\"Recent Default Count\")\nplt.ylabel(\"Count\")\nplt.title(\"Have the non-defaulters defaulted recently?\")\nplt.tight_layout()","e2e4203b":"plt.figure(figsize=(20,9))\nplt.subplot(2,2,1)\nshuffle(colors)\nplt.xlabel(\"In hand profit range\")\nplt.ylabel(\"Count\")\nplt.title(\"In what range does loss occur to defaulters?\")\nplt.ticklabel_format(useOffset=False)\nplt.hist([i for i in data[data.credit_card_default == 1].in_hand_balance if i < 0], color=colors[0])\n\nplt.subplot(2,2,2)\nplt.xlabel(\"In hand profit range\")\nplt.ylabel(\"Count\")\nplt.title(\"In what range does profit occur to defaulters?\")\nplt.ticklabel_format(useOffset=False)\nplt.hist([i for i in data[data.credit_card_default == 1].in_hand_balance if i >= 0], color=colors[0])\n\nplt.subplot(2,2,3)\nplt.xlabel(\"In hand profit range\")\nplt.ylabel(\"Count\")\nplt.title(\"In what range does loss occur to non-defaulters?\")\nplt.ticklabel_format(useOffset=False)\nplt.hist([i for i in data[data.credit_card_default == 0].in_hand_balance if i < 0], color=colors[0])\n\nplt.subplot(2,2,4)\nplt.xlabel(\"In hand profit range\")\nplt.ylabel(\"Count\")\nplt.title(\"In what range does profit occur to non-defaulters?\")\nplt.ticklabel_format(useOffset=False)\nplt.hist([i for i in data[data.credit_card_default == 0].in_hand_balance if i >= 0], color=colors[0])\n\nplt.tight_layout()","4fb0fb29":"shuffle(colors)\nplt.figure(figsize=(10,9))\nplt.subplot(2,2,1)\nun, count = np.unique(data.in_profit, return_counts=True)\nplt.bar(un, count, color=colors)\nplt.title(\"How many are able to save money?\")\nplt.xlabel(\"Profit status\")\nplt.ylabel(\"Count\")\nplt.subplot(2,2,2)\nun, count = np.unique(data[data.credit_card_default == 1].in_profit, return_counts=True)\nplt.bar(un, count, color=colors)\nplt.title(\"How many defaulters are able to save money?\")\nplt.xlabel(\"Profit status\")\nplt.ylabel(\"Count\")\nplt.subplot(2,2,3)\nun, count = np.unique(data[data.credit_card_default == 0].in_profit, return_counts=True)\nplt.bar(un, count, color=colors)\nplt.title(\"How many non-defaulters are able to save money?\")\nplt.xlabel(\"Profit status\")\nplt.ylabel(\"Count\")\nplt.tight_layout()","f7b80da2":"shuffle(colors)\nplt.figure(figsize=(15,9))\nplt.subplot(2,2,1)\nplt.hist(data.total_income_received, color=colors[0])\nplt.xlabel(\"Income Range\")\nplt.ylabel(\"Count\")\nplt.title(\"How much do they earn?\")\n\nplt.subplot(2,2,2)\nplt.hist(data[data.credit_card_default == 1].total_income_received, color=colors[0])\nplt.xlabel(\"Income Range\")\nplt.ylabel(\"Count\")\nplt.title(\"How much do defaulters earn?\")\n\nplt.subplot(2,2,3)\nplt.hist(data[data.credit_card_default == 0].total_income_received, color=colors[0])\nplt.xlabel(\"Income Range\")\nplt.ylabel(\"Count\")\nplt.title(\"How much do non-defaulters earn?\")\nplt.tight_layout()","786dd9f0":"shuffle(colors)\nun, count = np.unique(data.credit_card_default, return_counts=True)\nun = [str(int(i)) for i in un]\nplt.bar(un, count, color = colors)\nplt.xlabel(\"Default\")\nplt.ylabel(\"Count\")\nplt.title(\"How many were defaulters?\")\nplt.show()","7ab0a510":"data.drop([\"customer_id\",\"name\"],inplace=True,axis=1)","12f6d03b":"enc = LabelEncoder()\ndata.gender = enc.fit_transform(data.gender)\ndata.owns_house = enc.fit_transform(data.owns_house)\ndata.owns_car = enc.fit_transform(data.owns_car)\ndata.occupation_type = enc.fit_transform(data.occupation_type)\ndata.migrant_worker = enc.fit_transform(data.migrant_worker)\ndata.in_profit = enc.fit_transform(data.in_profit)\ndata.credit_card_default = enc.fit_transform(data.credit_card_default)","a8235e63":"data","ac23205c":"features, labels = SMOTE().fit_resample(data.drop([\"credit_card_default\"],axis=1), data.credit_card_default)","6422bf21":"X_train, X_test, Y_train, Y_test = train_test_split(features,\n                                                    labels,\n                                                    test_size = 0.2,\n                                                    shuffle=True)","b86769bc":"from sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import cross_val_score\nrf = RandomForestClassifier(random_state=0,n_estimators=1000)\nrf.fit(X_train, Y_train)","f81f6bbf":"print(\"Train Accuracy  : {:.2f}%\".format(accuracy_score(rf.predict(X_train),Y_train)*100))\nprint(\"Test Accuracy   : {:.2f}%\".format(accuracy_score(rf.predict(X_test),Y_test)*100))\nprint(\"Precision       : {:.2f}%\".format(precision_score(rf.predict(X_test),Y_test)*100))\nprint(\"Recall          : {:.2f}%\".format(recall_score(rf.predict(X_test),Y_test)*100))","e5de32fe":"cm = confusion_matrix(Y_test,rf.predict(X_test))\ndisp = ConfusionMatrixDisplay(cm, display_labels=[\"1\",\"0\"])\ndisp.plot()","53a320c9":"<h1>Have they defaulted recently?<\/h1>","47b9b27f":"<p><b>Inference : <\/b>The debt status of both classes are similar with negligible variation.<\/p>","40c4dfc6":"<h2>Metrics<\/h2>","5594ab40":"<h2>Label Encode Categorical Values<\/h2>","52c1de55":"<h1>Are they a migrant?<\/h1>","4114fe63":"<p><b>Inference : <\/b>Majority <b>Own<\/b> a residence among the defaulters while the opposite happens in the case of <b>Non-defaulters<\/b>.<\/p>","9c33236e":"<h1 style=\"margin:auto;text-align:center;background-color:rgb(232, 230, 223);border-radius : 5px;padding-top : 25px;padding-bottom : 25px; width : 80%;font-size : 25px;\">Thank you for reading! Upvote and share my notebook if you liked it<\/h1>","c8347122":"<h1>How many children do they have?<\/h1>","abcee9b2":"<p>Check the dataset distribution and replace with mean or median<\/p>","0eafa763":"<h1>How big is their family<\/h1>","0b1e18c6":"<p><b>Inference : <\/b><b>Females<\/b> tend to be more <b>Non-defaulters<\/b> while <b>Males<\/b> tend to be more in number in <b>Defaulters<\/b>.<\/p>","266c8070":"<p><b>Inference : <\/b>There is a small variation in the migration status for <b>Defaulters<\/b>, where there are comparatively more <b>Outsiders<\/b>.<\/p>","5d090db1":"<p><b>Inference : <\/b><b>Defaulters<\/b> have a <b>higher<\/b> credit limit in comparison with <b>Non-Defaulters<\/b> <\/p>","eec744f9":"<h1>How much do they earn?<\/h1>\n","f08bd682":"<p><b>Inference : <\/b>Comparatively, <b>Defaulters<\/b> have <b>Low-income<\/b> jobs compared to <b>Non-Defaulters<\/b>.<\/p>","71645761":"<h2>Confusion Matrix<\/h2>","a29b0d84":"<p><b>Inference : <\/b><b>Defaulters<\/b> have used a major part of their credit limit- <b>70%<\/b> or more in comparison with <b>Non-Defaulters<\/b> where there is a minimum usage of <b>0%<\/b>.<\/p>","0400f8e4":"<h1>How much time did they default before?<\/h1>","b8b52333":"<p><b>Inference : <\/b>Counter Intuitively, <b>Defaulters<\/b> earn in higher amount in comparison with <b>Non-defaulters<\/b><\/p>","1c243175":"<p><b>Inference : <\/b>Similar distributions with neglible variations.<\/p>","29e5e328":"<p><b>Inference : <\/b> All of them are making a <b>profit<\/b>, with negligibly less <b>Loss<\/b> makers.<\/p>","f666afb3":"<h1>Credit Card Defualt Risk Prediction<\/h1>\n<p>EDA and Modelling of Credit Card Default Risk Prediction Dataset.<\/p>\n<img src=\"https:\/\/i0.wp.com\/blog.bankbazaar.com\/wp-content\/uploads\/2016\/03\/Surviving-a-Credit-Card-Default-thumb-nail.png?fit=435%2C267&ssl=1\" style=\"width : 100%;\">","13aff470":"<h1>What is their work?<\/h1>","b1d2faaf":"<h1>Modelling<\/h1>\n<ul>\n    <li>Encoding Categorical Values<\/li>\n    <li>Oversampling using SMOTE<\/li>\n    <li>Modelling using Random Forest<\/li>\n<\/ul>","3857c7f4":"<h1>How much credit limit they used?<\/h1>","bbef41dd":"<h1>How many are saving?<\/h1>","297b62db":"<h1>What is their credit limit?<\/h1>","5f87eaec":"<h1>How much do they earn?<\/h1>","9d191cef":"<h2>Modelling<\/h2>","6a3a6a82":"<h1>Data Engineering<\/h1>","dff8d6f3":"<h1>How many defaulted?<\/h1>","3a6b3afb":"<p><b>Inference : <\/b>Majority of the <b>Defaulters<\/b> have defaulted <b>Atleast<\/b> previously.<\/p>","6015d6ff":"<p><b>Inference : <\/b>Among both classes, majority do not <b>own<\/b> a car.<\/p>","e52a9d9c":"<h1>How old are they?<\/h1>","259b010d":"<p><b>Inference : <\/b>For <b>Defaulters<\/b>, the loss seems to be a higher number in comparison with <b>Non-Defaulters<\/b>, but counter intuitively, In hand profit appears <b>Higher<\/b> for <b>Defaulters<\/b>.<\/p>","b65f780d":"<h2>Oversampling using SMOTE<\/h2>","4d2a8b40":"<h1>How many have a residence ownership?<\/h1>","6efe8a4c":"<h1>How long is their work experience?<\/h1>","641e758d":"<h2>Synthetic features<\/h2>\n<p>Generating meaningful synthetic features from the data<\/p>","226ca759":"<p><b>Inference : <\/b>Majority of the defaulters have <b>Defaulted<\/b> in the last 6 months.<\/p>","6394e4a8":"<h1>Exploratory Data Analysis<\/h1>","68737e2a":"<p><b>Inference : <\/b>Among both classes, <b>25<\/b> <b>40<\/b> and <b>55<\/b> tend to be the dominant ages.<\/p>","c2e03e29":"<h1>Data Loading<\/h1>","e451ba29":"<h1>How much is their debt?<\/h1>","e17ce480":"<h1>How many owns a vehicle?<\/h1>","3944d098":"<p><b>Inference : <\/b>Somewhat similar distribution with <b>Moderate Work Experience<\/b> higher among defaulters.<\/p>","92719bfa":"<h2>Drop columns that are not required<\/h2>","e4dddfde":"<p><b>Inference : <\/b><b>Defaulters<\/b> are having a slightly higher income range in comparison with <b>Non-Defaulters<\/b>.<\/p>","5797111e":"<h1>What is their credit score?<\/h1>","b35dd679":"<p><b>Inference : <\/b>The distribution stays the <b>same<\/b> among both classes with negligible variations.<\/p>","c7db1c3b":"<p><b>Inference : <\/b>The credit score of <b>Defaulters<\/b> range from <b>500 - 700<\/b> while for <b>Non-Defaulters<\/b> range from <b>650 - 950<\/b>.<\/p>","7ae4fd98":"<h1>Which gender is dominant?<\/h1>","f7e72005":"<p><b>Inference : <\/b>Majority of them were <b>Non-Defaulters<\/b>.<\/p>","2fb31a9c":"<h1>How much Profit \/ Loss occurs to them?<\/h1>"}}