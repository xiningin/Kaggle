{"cell_type":{"58a44923":"code","c49490f6":"code","f166cd7c":"code","ff2ed8e1":"code","667d5f8b":"code","66b19939":"code","d09f1865":"code","36bccc32":"code","ded26a23":"code","0ea6860f":"code","d683da0a":"code","8e8713df":"markdown","808e79bf":"markdown","62c31749":"markdown","0fb21004":"markdown","a693d6d8":"markdown","4aeeb676":"markdown","d9994cbd":"markdown","383f8b1b":"markdown","daf9eea6":"markdown","30581412":"markdown"},"source":{"58a44923":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport statsmodels.api as sm","c49490f6":"data = pd.DataFrame([[1, 60000, '4GB', '128GB', 3],\n                     [1, 60000, '8GB', '512GB', 9],\n                     [1, 80000, '4GB', '512GB', 5],\n                     [1, 80000, '8GB', '128GB', 7],\n                     [2, 60000, '4GB', '128GB', 4]],\n                    columns=['ans_id', 'price', 'memory', 'storage', 'rating'])\ndata.head()","f166cd7c":"data.to_csv('conjoint_sample')","ff2ed8e1":"X = data[[col for col in data.columns if col != 'rating']]\ny = data['rating']","667d5f8b":"X = X.drop('ans_id', axis=1)\nX.head()","66b19939":"X_dum = pd.get_dummies(X, columns=X.columns)\nX_dum.head()","d09f1865":"model = sm.OLS(y, sm.add_constant(X_dum))\nresult = model.fit()\nresult.summary()","36bccc32":"data_res = pd.DataFrame({'name': result.params.keys(),\n                         'weight': result.params.values,\n                         'p_val': result.pvalues})\ndata_res = data_res[1:]\ndata_res","ded26a23":"data_res['abs_weight'] = np.abs(data_res['weight'])\ndata_res = data_res.sort_values(by='abs_weight')\ndata_res","0ea6860f":"sns.set()","d683da0a":"xbar = np.arange(len(data_res['weight']))\nplt.barh(xbar, data_res['abs_weight'])\nplt.yticks(xbar, labels=data_res['name'])\nplt.xlabel('weight')\nplt.show()","8e8713df":"\u30fbcoef\uff1a\u76ee\u7684\u5909\u6570\uff08\u8a55\u4fa1\uff09\u306b\u5bfe\u3059\u308b\u504f\u56de\u5e30\u4fc2\u6570<br>\n\u30fbP>|t|\uff1aP\u5024\u3001\u6709\u610f\u6c34\u6e96\u3092\u4e0b\u56de\u308c\u3070\u3001\u305d\u306e\u8aac\u660e\u5909\u6570\u304c\u76ee\u7684\u5909\u6570\uff08\u8a55\u4fa1\uff09\u306b\u5f71\u97ff\u3092\u53ca\u307c\u3059\u8981\u7d20\u3067\u3042\u308b\u3068\u5224\u65ad\u3067\u304d\u308b\n\n\u30fb\u91cd\u8981\u306a\u8981\u7d20\u3060\u3051\u3092\u629c\u304d\u53d6\u308a\u3001\u4e0b\u8a18\u306b\u307e\u3068\u3081\u308b","808e79bf":"# Preprocess","62c31749":"# Modeling","0fb21004":"\u30fb\u30b3\u30f3\u30b8\u30e7\u30a4\u30f3\u30c8\u5206\u6790\u3068\u306f\u3001\u6700\u9069\u306a\u5546\u54c1\u30b3\u30f3\u30bb\u30d7\u30c8\u3092\u6c7a\u5b9a\u3059\u308b\u305f\u3081\u306e\u591a\u5909\u91cf\u89e3\u6790\u3092\u4f7f\u7528\u3057\u305f\u5206\u6790\u624b\u6cd5\u3067\u3042\u308b<br>\n\u3000\u5546\u54c1\u5168\u4f53\u306e\u8a55\u4fa1\uff08\u5168\u4f53\u52b9\u7528\u5024\uff09\u3092\u3059\u308b\u3053\u3068\u3067\u3001\u500b\u3005\u306e\u8981\u7d20\u306e\u8cfc\u8cb7\u306b\u5f71\u97ff\u3059\u308b\u5ea6\u5408\u3044\uff08\u90e8\u5206\u52b9\u7528\u5024\uff09\u3092\u7b97\u51fa\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b<br>\n\n\u3000\u4f8b\u3048\u3070\u3001\u30e6\u30fc\u30b6\u304cPC\u3092\u8cfc\u5165\u3059\u308b\u969b\u306b\u3001\u3069\u306e\u8981\u7d20\u304c\u3069\u306e\u304f\u3089\u3044\u5f71\u97ff\u3059\u308b\u306e\u304b\uff08\u91cd\u8981\u3067\u3042\u308b\u306e\u304b\uff09\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b","a693d6d8":"# Overview","4aeeb676":"# Datasets","d9994cbd":"#### \u30fbdata\uff1aPC\u3068\u30b9\u30da\u30c3\u30af\u306e\u30c7\u30fc\u30bf","383f8b1b":"\u30fb\u8a55\u4fa1\u306b\u5bfe\u3057\u3066\u3001\u6700\u3082\u5bc4\u4e0e\u5ea6\u304c\u9ad8\u3044\u306e\u304c\u30e1\u30e2\u30ea\u3001\u6b21\u306b\u30b9\u30c8\u30ec\u30fc\u30b8\u3067\u3042\u308b\u3068\u5224\u65ad\u3067\u304d\u308b","daf9eea6":"# Module","30581412":"\u30fb\u6709\u610f\u6c34\u6e96\u30925%\u3068\u3059\u308b\u3068\u3001\u5168\u3066\u306e\u8981\u7d20\u304c\u7d71\u8a08\u7684\u306b\u6709\u610f\u3067\u306a\u3044\u3053\u3068\u304c\u5206\u304b\u308b"}}