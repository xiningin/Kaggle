{"cell_type":{"54d0a50f":"code","73a1d3dc":"code","c1285ac4":"code","afacde69":"code","87e43f92":"code","28eef60c":"code","696b7f9f":"code","bf8cae27":"code","d79b0e8c":"code","e810720e":"code","f54f2ed8":"code","47ab15be":"code","0878b408":"code","5b982f3a":"code","6d51078b":"code","49ef28de":"code","b101fc62":"code","e21a26c4":"code","95d99a92":"code","8b190d07":"code","83e415c5":"code","0b93c0e0":"code","6482a25d":"code","18b84dae":"code","63047a57":"code","61bfa725":"code","3f68d901":"code","bd35d962":"code","e08028c7":"code","6b439b45":"markdown","143f2437":"markdown","27aa620b":"markdown","c46f3ecf":"markdown","6c7d31ea":"markdown","f9cc6da9":"markdown","c3e1da1b":"markdown","d2170566":"markdown","fc14669c":"markdown","5285c193":"markdown","1b332727":"markdown","4d57c22e":"markdown","dab49a8b":"markdown","98a1ae90":"markdown","8201a43d":"markdown","24dad81c":"markdown","9f3a1c4b":"markdown","d7e97833":"markdown","76b9cd77":"markdown","3828e846":"markdown","a5b0793f":"markdown","8fe5db80":"markdown","48521e5d":"markdown","cc71ed3b":"markdown","0597d2f5":"markdown","e4693895":"markdown","dcbd417a":"markdown","39ea230a":"markdown","018bacc9":"markdown","1b5e5cb5":"markdown","714a5e9e":"markdown","27af7bcd":"markdown","7d9c9091":"markdown","4e658b58":"markdown","183539e6":"markdown","961c3043":"markdown","605ed50d":"markdown","7576a201":"markdown","55302853":"markdown","9935a002":"markdown","f666c5d8":"markdown","846fe7b4":"markdown"},"source":{"54d0a50f":"# Importing necessary libraries\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\nimport plotly.express as px","73a1d3dc":"# The dataset\n\ndata = pd.read_csv('..\/input\/creditcardfraud\/creditcard.csv')\ndata","c1285ac4":"# Statistical descriptions of the features\n\nfeatures = data.drop(['Class'], axis = 1)\nfeatures.describe()","afacde69":"# Splitting of the data by authenticity of transactions\n\ndata_authentic = data[data['Class'] == 0] # authentic transactions only\ndata_fraud = data[data['Class'] == 1] # fraud transactions only\n\n# Class frequencies\n\nclass_label = ['Authentic', 'Fraud']\nclass_frequency = [len(data_authentic), len(data_fraud)]\n\nfig1 = px.pie(values = class_frequency,\n             names = class_label,\n             title = 'Frequency comparison of authentic and fraudulent transactions',\n             template = 'ggplot2'\n            )\nfig1.show()","87e43f92":"# Transaction frequency over time\n\nfig1 = px.histogram(data,\n                   x = 'Time',\n                   nbins = 200,\n                   title = 'Distribution of transactions over time',\n                   template = 'ggplot2'\n                  )\nfig1.show()","28eef60c":"# Histogram for fraudulent transactions\n\nfig1 = px.histogram(data_fraud,\n                   x = 'Time',\n                   nbins = 200,\n                   title = 'Distribution of fraudulent transactions over time',\n                   template = 'ggplot2'\n                  )\nfig1.show()","696b7f9f":"# Transaction amount\n\nfig1 = px.histogram(data,\n                   x = 'Amount',\n                   nbins = 200,\n                   title = 'Distribution of transaction amount',\n                   #log_y = True,\n                   template = 'ggplot2'\n                  )\nfig1.show()\n\nfig2 = px.histogram(data,\n                   x = 'Amount',\n                   nbins = 200,\n                   title = 'Distribution of transaction amount on logarithmic scale',\n                   log_y = True,\n                   template = 'ggplot2'\n                  )\nfig2.show()","bf8cae27":"# Transaction amount after log transformation\n\nnp.seterr(divide = 'ignore')\n#np.seterr(divide = 'warn')\n\ndf = pd.DataFrame(columns = ['Class','log_amount'])\ndf['Class'] = data['Class']\ndf['log_amount'] = np.log2(data['Amount'])\n\nfig1 = px.histogram(df,\n                   x = 'log_amount',\n                   nbins = 200,\n                   title = 'Distribution of transaction amount after log transformation',\n                   #log_y = True,\n                   template = 'ggplot2'\n                  )\nfig1.show()","d79b0e8c":"# Visualizations of authentic and fraudulent transactions after log transformation\n\nclass_list = list(data['Class'])\nfraud_status = []\nfor i in range(len(class_list)):\n    fraud_status.append(bool(class_list[i]))\n\nfig1 = px.violin(df,\n             x = 'Class',\n             y = 'log_amount',\n             color = fraud_status,\n             title = 'Distribution of Amount for Authentic and Fraudulent transactions after log transformation',\n             template = 'ggplot2'\n            )\nfig1.show()","e810720e":"# Function to print histogram of a chosen feature\n\ndef hist(data, feature):\n    fig1 = px.histogram(data,\n                   x = feature,\n                   nbins = 200,\n                   title = 'Distribution of {}'.format(feature),\n                   template = 'ggplot2'\n                  )\n    fig1.show()\n    \n# Function to print boxplot and violinplot of a chosen feature\n\ndef box_violin(data, feature):\n    fig, (ax1, ax2) = plt.subplots(1,2, figsize=(16.1, 6))\n    sns.boxplot(x = data[feature], ax = ax1)\n    sns.violinplot(x = data[feature], ax = ax2)\n    plt.show()\n    \n# Function to combine the above two functions\n\ndef eda(data, feature):\n    hist(data, feature)\n    box_violin(data, feature)","f54f2ed8":"# List of features obtained by PCA transformation\n\nfeatures_pca = list(data.columns)\nfeatures_pca.remove('Time')\nfeatures_pca.remove('Amount')\nfeatures_pca.remove('Class')","47ab15be":"# Visualizations and statistical descriptions of the features obtained by PCA transformation\n\nfor feature in features_pca:\n    eda(data, feature)","0878b408":"fig1 = px.scatter(data,\n                 x = 'Time',\n                 y = 'Amount',\n                 color = fraud_status,\n                 #marginal_x = 'rug',\n                 #marginal_y = 'rug',\n                 #size = class_rescaled,\n                 title = 'Amount vs Time',\n                 template = 'ggplot2'\n                )\nfig1.show()","5b982f3a":"fig1 = px.scatter(data,\n                 x = 'Time',\n                 y = 'Amount', \n                 facet_col = fraud_status,\n                 color = fraud_status,\n                 title = 'Amount vs Time',\n                 template = 'ggplot2'\n                )\nfig1.show()","6d51078b":"# Amount vs Time for fraudulent transactions - scatterplot\n\nfig1 = px.scatter(data_fraud,\n                 x = 'Time',\n                 y = 'Amount',\n                 title = 'Amount vs Time for fraudulent transactions',\n                 template = 'ggplot2'\n                )\nfig1.show()","49ef28de":"print('Correlation coefficient between Time and Amount')\nprint('\\n')\nprint('For all transactions: {}'.format(data['Time'].corr(data['Amount'])))\nprint('For authentic transactions: {}'.format(data_authentic['Time'].corr(data_authentic['Amount'])))\nprint('For fraudulent transactions: {}'.format(data_fraud['Time'].corr(data_fraud['Amount'])))","b101fc62":"fig1 = px.scatter(data,\n                 x = 'Time',\n                 y = 'V3', \n                 facet_col = fraud_status,\n                 color = fraud_status,\n                 title = 'V3 vs Time',\n                 template = 'ggplot2'\n                )\nfig1.show()","e21a26c4":"print('Correlation coefficient between V3 and Time')\nprint('\\n')\nprint('For all transactions: {}'.format(data['V3'].corr(data['Time'])))\nprint('For authentic transactions: {}'.format(data_authentic['V3'].corr(data_authentic['Time'])))\nprint('For fraudulent transactions: {}'.format(data_fraud['V3'].corr(data_fraud['Time'])))","95d99a92":"fig1 = px.scatter(data,\n                 x = 'V20',\n                 y = 'Amount', \n                 facet_col = fraud_status,\n                 color = fraud_status,\n                 title = 'Amount vs V20',\n                 template = 'ggplot2'\n                )\nfig1.show()","8b190d07":"print('Correlation coefficient between Amount and V20')\nprint('\\n')\nprint('For all transactions: {}'.format(data['Amount'].corr(data['V20'])))\nprint('For authentic transactions: {}'.format(data_authentic['Amount'].corr(data_authentic['V20'])))\nprint('For fraudulent transactions: {}'.format(data_fraud['Amount'].corr(data_fraud['V20'])))","83e415c5":"fig1 = px.scatter(data,\n                 x = 'V1',\n                 y = 'V2', \n                 facet_col = fraud_status,\n                 color = fraud_status,\n                 title = 'V2 vs V1',\n                 template = 'ggplot2'\n                )\nfig1.show()","0b93c0e0":"print('Correlation coefficient between V1 and V2')\nprint('\\n')\nprint('For all transactions: {}'.format(data['V1'].corr(data['V2'])))\nprint('For authentic transactions: {}'.format(data_authentic['V1'].corr(data_authentic['V2'])))\nprint('For fraudulent transactions: {}'.format(data_fraud['V1'].corr(data_fraud['V2'])))","6482a25d":"fig1 = px.scatter(data,\n                 x = 'V2',\n                 y = 'V3', \n                 facet_col = fraud_status,\n                 color = fraud_status,\n                 title = 'V3 vs V2',\n                 template = 'ggplot2'\n                )\nfig1.show()","18b84dae":"print('Correlation coefficient between V2 and V3')\nprint('\\n')\nprint('For all transactions: {}'.format(data['V2'].corr(data['V3'])))\nprint('For authentic transactions: {}'.format(data_authentic['V2'].corr(data_authentic['V3'])))\nprint('For fraudulent transactions: {}'.format(data_fraud['V2'].corr(data_fraud['V3'])))","63047a57":"fig1 = px.scatter(data,\n                 x = 'V1',\n                 y = 'V3', \n                 facet_col = fraud_status,\n                 color = fraud_status,\n                 title = 'V3 vs V1',\n                 template = 'ggplot2'\n                )\nfig1.show()","61bfa725":"print('Correlation coefficient between V1 and V3')\nprint('\\n')\nprint('For all transactions: {}'.format(data['V1'].corr(data['V3'])))\nprint('For authentic transactions: {}'.format(data_authentic['V1'].corr(data_authentic['V3'])))\nprint('For fraudulent transactions: {}'.format(data_fraud['V1'].corr(data_fraud['V3'])))","3f68d901":"# Heat map of the feature variables\n\nfeatures = data.drop(['Class'], axis = 1)\n\nfig, ax = plt.subplots(figsize=(16, 12))\nsns.heatmap(features.corr(), center = 0, cmap = 'Blues')\nax.set_title('Heat map of the feature variables')","bd35d962":"# Heat map of the feature variables for fraudulent transactions\n\nfeatures_authentic = data_authentic.drop(['Class'], axis = 1)\n\nfig, ax = plt.subplots(figsize=(16, 12))\nsns.heatmap(features_authentic.corr(), center = 0, cmap = 'Blues')\nax.set_title('Heat map of the feature variables for authentic transactions')","e08028c7":"# Heat map of the feature variables for fraudulent transactions\n\nfeatures_fraud = data_fraud.drop(['Class'], axis = 1)\n\nfig, ax = plt.subplots(figsize=(16, 12))\nsns.heatmap(features_fraud.corr(), center = 0, cmap = 'Blues')\nax.set_title('Heat map of the feature variables for fraudulent transactions')","6b439b45":"## Class","143f2437":"First we analyze how the amount of transaction behaves with respect to time.","27aa620b":"## V3 vs V2","c46f3ecf":"It is evident that the data is extremely imbalanced with authentic transactions being the majority class and fraudulent transactions being the minority class. Next we analyze the frequency of transactions made over time elapsed starting from the first transaction.","6c7d31ea":"# 3. Relationships among the features","f9cc6da9":"It is clear from the plots that most of the large-amount transactions are authentic, which maybe caused by the extra security measures given to high-amount transactions in form of multiple passwords and OTPs.","c3e1da1b":"Note that the analysis involving the transformed variables **V1-V28** do not reflect any relationship among the original variables from which those are engineered. We have included EDA for these variables for the sake of completeness.","d2170566":"Next we examine bivariate scatterplots and linear relationships between certain pairs of feature variables, which exhibit contrasting correlation structures for authentic and fraudulent transactions. Such a phenomenon occurs for a number of pairs, but we analyze $5$ specific pairs among these for the sake of brevity.","fc14669c":"Note that *facet_col=False* corresponds to the authentic transactions and *facet_col=True* corresponds to the fraudulent transactions. We zoom into the second subplot a bit to get a clearer picture.","5285c193":"## V3 vs V1","1b332727":"**Observation:** The number of transactions are particularly high in certain time intervals and low in between.","4d57c22e":"# 2. Visualizing individual features","dab49a8b":"## Objectives of the project\n\n### Primary objective:\n\n**Classification of transactions as authentic or fraudulent**. To be prcise, given the data on **Time**, **Amount** and transformed features **V1** to **V28** for a particular transaction, our goal is to correctly classify the transaction as **authentic** or **fraudulent**. We employ different techniques to build classification models and compare them by various evaluation metrics.\n\n### Secondary objectives:\n\nAnswering the following questions using machine learning and statistical tools and techniques.\n\n- When a fraudulent transaction is made, is it followed soon by one or more such fraudulent transactions? In other words, do the attackers make consecutive fraudulent transactions in a short span of time?\n\n\n- Is the amount of a fraudulent transaction generally larger than that of an authentic transaction?\n\n\n- Is there any indication in the data that fraudulent transactions occur at high-transaction period?\n\n\n- It is seen from the data that the number of transactions are high in some time intervals and low in between. Does the occurance of fraudulent transactions related to these time intervals?\n\n\n- There are a few time-points which exhibits high number of fraud transactions. Is it due to high number of total transactions or due to some other reason?\n\n#### In this part we carry out exploratory data analysis for the features in the dataset.","98a1ae90":"#### Observations:\n\n- V1 and V3 are approximately uncorrelated for authentic transactions.\n- However, they have significant positive correlation for fraudulent transactions.","8201a43d":"#### Observations:\n\n- V2 and V3 are approximately uncorrelated for authentic transactions.\n- However, they have significant negative correlation for fraudulent transactions.","24dad81c":"# 1. Introduction","9f3a1c4b":"Next we visualize the distribution of transaction amount. It is seen from the data that this feature is positively skewed to a great extent. Hence we use log-scale in the y-axis to produce a nondegenerate visualization of the same.","d7e97833":"We split up the scatterplot into two different subplots, one for authentic transactions and the other for fraudulent tranactions.","76b9cd77":"#### Observations:\n\n- V1 and V2 are approximately uncorrelated for authentic transactions.\n- However, they have significant negative correlation for fraudulent transactions.","3828e846":"The high positive skewness even after taking the log-scale motivates us to map the amount data using log transformation.","a5b0793f":"#### Observations:\n\n- Amount and V20 have moderate positive correlation for authentic transactions.\n- However, they are approximately uncorrelated for fraudulent transactions.","8fe5db80":"## Amount","48521e5d":"**Observation:** Time and Amount appear to be approximately uncorrelated, which is echoed even when authentic and fraudulent transactions are considered separately.","cc71ed3b":"However, the fraudulent transactions show a significantly different correlation structure among the features.","0597d2f5":"## V1-V28","e4693895":"### **NOTE:** Section 2 and Section 3, which contain a large number of _plotly_ and _seaborn_ diagrams, used for visualizing distributions of the feature variables in the dataset, as well as their interrelationships, may take a minute to load.","dcbd417a":"If one considers only the authentic transactions, then the overall structure of the heat map remains the same, although moderate changes are visible.","39ea230a":"## V3 vs Time","018bacc9":"#### Observations:\n\n- As expected, the PCA-engineered features are uncorrelated.\n- There exists non-zero correlations between time and some PCA-engineered features as well as between amount and some PCA-engineered features.","1b5e5cb5":"## Data","714a5e9e":"**Observation:** There are certain spikes in the data that indicates high number of fraud transactions at certain time points.","27af7bcd":"First we analyze the feature which is the main object of the study: The class variable, which indicates if a particular transaction is authentic or fraudulent.","7d9c9091":"<h1><center> Credit Card Fraud Detection <\/center><\/h1>\n<h2><center> Part 1. Exploratory Data Analysis <\/center><\/h2>\n<h2><center> Sugata Ghosh and Shyambhu Mukherjee <\/center><\/h2>","4e658b58":"# Contents\n\n- [Introduction](#1.-Introduction)\n- [Visuaizing individual features](#2.-Visualizing-individual-features)\n- [Relationships among the features](#3.-Relationships-among-the-features)","183539e6":"## Amount vs Time","961c3043":"## Amount vs V20","605ed50d":"#### Observations:\n\n- V3 and Time have moderate negative correlation for authentic transactions.\n- However, they have slightly positive correlation for fraudulent transactions.","7576a201":"## Time","55302853":"## Multicollinearity\n\nWe check for multicollinearity among the features through the heat map which plots the correlation coefficient of each pair of features via color density.","9935a002":"Since this gives a more symmetric output, we are motivated to work with this transformed amount data, from which the original amount data can easily be converted back to.","f666c5d8":"Source: https:\/\/www.kaggle.com\/mlg-ulb\/creditcardfraud\n\nThe dataset contains information on the transactions made using credit cards by European cardholders, in two particular days of September $2013$. It presents a total of $284807$ transactions, of which $492$ were fraudulent. Clearly, the dataset is highly imbalanced, the positive class (fraudulent transactions) accounting for only $0.173\\%$ of all transactions.\n\nFor a particular transaction, the feature **Time** represents the time (in seconds) elapsed between the transaction and the very first transaction, **Amount** represents the amount of the transaction and **Class** represents the status of the transaction with respect to authenticity. The class of an authentic (resp. fraudulent) transaction is taken to be $0$ (resp. $1$). Rest of the variables (**V1** to **V28**) are obtained from principle component analysis (PCA) transformation on original features that are not available due to confidentiality.","846fe7b4":"## V2 vs V1"}}