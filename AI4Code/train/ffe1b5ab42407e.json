{"cell_type":{"3eb96c2b":"code","eabaabfd":"code","ada67b43":"code","265b03db":"code","9ddf9daf":"code","a32f5d84":"code","f9737794":"code","8decf13f":"code","b1918c19":"code","cc01c008":"code","118f3c07":"code","4160eb3d":"code","8dc287cc":"code","4a6f7327":"code","740e1ef4":"code","e1725995":"code","171dc3fe":"code","cc541c96":"code","ccc8eb12":"code","ab7a49e2":"code","d2480e1a":"code","6ae39b88":"code","6f72fa64":"code","2976a580":"code","c93f4e67":"code","42bd6b1e":"code","d4d38511":"code","c8d3351b":"code","46bd6bfe":"code","c4793516":"code","ab8d1766":"code","fd4bf32b":"code","24b1fc0a":"code","206015d8":"code","76ccd9ab":"code","1f41a25e":"markdown","89cd22fa":"markdown","12122450":"markdown","c68d1e49":"markdown","9d08948e":"markdown","44cd8e7d":"markdown","ecda2c0e":"markdown","809ddf08":"markdown","ec00829e":"markdown"},"source":{"3eb96c2b":"import pandas as pd","eabaabfd":"data=pd.read_csv('..\/input\/predicting-a-pulsar-star\/pulsar_stars.csv')","ada67b43":"data.head()","265b03db":"data.columns","9ddf9daf":"data.isnull().sum()","a32f5d84":"data.info()","f9737794":"data.describe()","8decf13f":"data['target_class'].unique()","b1918c19":"import seaborn as sns\nimport matplotlib.pyplot as plt","cc01c008":"sns.countplot(data['target_class'])","118f3c07":"data[data['target_class']==1].count()","4160eb3d":"data[data['target_class']==0].count()","8dc287cc":"data.head()","4a6f7327":"correlation=data.corr()\nfig = plt.figure(figsize=(12, 10))\n\nsns.heatmap(correlation, annot=True, center=1)","740e1ef4":"y=data['target_class']","e1725995":"X=data.drop(['target_class'],axis=1)","171dc3fe":"X.head()","cc541c96":"X.describe()","ccc8eb12":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression","ab7a49e2":"model=LogisticRegression()","d2480e1a":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20)","6ae39b88":"model.fit(X_train,y_train)","6f72fa64":"model.score(X_test,y_test)","2976a580":"from sklearn.ensemble import RandomForestClassifier","c93f4e67":"rfc = RandomForestClassifier(n_estimators=200)\nrfc.fit(X_train, y_train)\npred_rfc = rfc.predict(X_test)","42bd6b1e":"from sklearn.metrics import confusion_matrix, classification_report\n","d4d38511":"print(classification_report(y_test, pred_rfc))","c8d3351b":"rfc.score(X_test,y_test)","46bd6bfe":"from sklearn.svm import SVC","c4793516":"clf = SVC() ","ab8d1766":"clf.fit(X_train, y_train) ","fd4bf32b":"pred_svc=clf.predict(X_test)","24b1fc0a":"print(classification_report(y_test, pred_svc))","206015d8":"clf.score(X_test,y_test)","76ccd9ab":"print('Accuracy from Support Vector Classification is '+str(clf.score(X_test,y_test)*100)+\"%\")\nprint('Accuracy from Random forest classifier is '+str(rfc.score(X_test,y_test)*100)+'%')\nprint('Accuracy from Logistic regression is '+str(model.score(X_test,y_test)*100)+'%')","1f41a25e":"###### SUPPORT VECTOR CLASSIFICATION :","89cd22fa":"###### LOGISTIC REGRESSION:","12122450":"###### CORRELATION BETWEEN THE FEATURES","c68d1e49":"**If you find this kernel useful please upvote.**","9d08948e":"###### TARGET  CLASS","44cd8e7d":"###### Attribute Information:\n\nEach candidate is described by 8 continuous variables, and a single class variable. \n\nThe first four are simple statistics obtained from the integrated pulse profile (folded profile).\n\nThis is an array of continuous variables that describe a longitude-resolved version of the signal that has been averaged in both time and frequency .\n\nThe remaining four variables are similarly obtained from the DM-SNR curve . These are summarised below:\n\nMean of the integrated profile.\n\nStandard deviation of the integrated profile.\n\nExcess kurtosis of the integrated profile.\n\nSkewness of the integrated profile.\n\nMean of the DM-SNR curve.\n\nStandard deviation of the DM-SNR curve.\n\nExcess kurtosis of the DM-SNR curve.\n\nSkewness of the DM-SNR curve.\n\nClass","ecda2c0e":"###### RANDOM FOREST CLASSIFIER :","809ddf08":"###### SOME BASIC INFORMATION ABOUT THE DATA SET","ec00829e":"# PREDICTING A PULSAR STAR\n\nMachine learning tools are now being used to automatically label pulsar candidates to facilitate rapid analysis. Classification systems in particular are being widely adopted, which treat the candidate data sets as binary classification problems. Here the legitimate pulsar examples are a minority positive class, and spurious examples the majority negative class.\n\nThe data set shared here contains 16,259 spurious examples caused by RFI\/noise, and 1,639 real pulsar examples. These examples have all been checked by human annotators.\n\nEach row lists the variables first, and the class label is the final entry. The class labels used are 0 (negative) and 1 (positive).\n\nMachine Learning algorithms used to predict the target in the following dataset are\n\n1-Logistic Regression\n\n2-Random Forest Classifier \n\n3-Support Vector Classification\n\nthe github repo to this same dataset can be found here https:\/\/github.com\/sid26ranjan\/pulsar-star\n\nalso check out my other kernels and github repos https:\/\/github.com\/sid26ranjan"}}