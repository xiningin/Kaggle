{"cell_type":{"2a8c3177":"code","9d8ecabd":"code","874eb650":"code","f283ce89":"code","039ded9c":"code","669dc305":"code","54011203":"code","9cef990b":"code","5f451f7c":"code","e1bd5e9a":"code","d4cab3fd":"code","80c50a4a":"code","86401dda":"code","fe3ad831":"code","e059e289":"code","5f0eda12":"code","fd56bfb6":"code","183b32d4":"code","020208bb":"code","978a19ab":"code","c2c21b5d":"code","0351c748":"code","5e77694c":"markdown","fd8fbd2e":"markdown","4315ae4d":"markdown","8a7cd8b6":"markdown","15b3b15f":"markdown","164c5d79":"markdown","b97ddc6a":"markdown","15b005e8":"markdown","2650f47c":"markdown"},"source":{"2a8c3177":"import numpy as np\nimport pandas as pd","9d8ecabd":"data = np.random.randint(0, 1000, size=(1000000, 8))","874eb650":"df = pd.DataFrame(data=data, columns=list('abcdefgh'))","f283ce89":"%%timeit\ndf.sample(100, replace=False)","039ded9c":"%%timeit\ndf.sample(100, replace=True)","669dc305":"import random","54011203":"def dumb_sample(df, n):\n    chosen = set()\n    max_i = df.shape[0] - 1\n    size = 0\n    while size < n:\n        i = random.randint(0, max_i)\n        if i not in chosen:\n            chosen.add(i)\n            size += 1\n    return df.iloc[list(chosen)]","9cef990b":"df2 = dumb_sample(df, 5)\ndf2","5f451f7c":"%%timeit\ndumb_sample(df, 100)","e1bd5e9a":"%%timeit\ndf.sample(10000, replace=False)","d4cab3fd":"%%timeit\ndf.sample(10000, replace=True)","80c50a4a":"%%timeit\ndumb_sample(df, 10000)","86401dda":"%%timeit\ndf.sample(100000, replace=False)","fe3ad831":"%%timeit\ndf.sample(100000, replace=True)","e059e289":"%%timeit\ndumb_sample(df, 100000)","5f0eda12":"df2 = pd.DataFrame(data=np.random.randint(0, 1000, size=(50000000, 8)), columns=list('abcdefgh'))","fd56bfb6":"%%timeit\ndf2.sample(100, replace=False)","183b32d4":"%%timeit\ndf2.sample(100, replace=True)","020208bb":"%%timeit\ndumb_sample(df2, 100)","978a19ab":"%%timeit\ndf2.sample(100000, replace=False)","c2c21b5d":"%%timeit\ndf2.sample(100000, replace=True)","0351c748":"%%timeit\ndumb_sample(df2, 100000)","5e77694c":"Our dumb sampling function is now comparable to the native one. Let's try an even bigger sample.","fd8fbd2e":"And with a larger sample size...","4315ae4d":"Our dumb sampling function is now slower than the native Pandas one. Note how the native function takes roughly the same time no matter the size of our sample, suggesting that it's doing some step which is O(len(df)). Let's try a bigger dataframe!","8a7cd8b6":"Yikes.","15b3b15f":"As expected, sampling with replacement is faster than sampling without replacement, but the difference seems surprisingly high. Let's try the simplest implementation of sampling-without-replacement that's not completely stupid.","164c5d79":"All three functions display the scaling behaviour we've come to expect.\n\nI think the takeaway is clear: using Pandas' native `sample` method to sample without replacement from large dataframes performs horribly, especially when the sample is small.","b97ddc6a":"Much faster than the native Pandas method - nice! Let's try taking a bigger sample :-)","15b005e8":"@RokoMijicDev was trying to sample from a large Pandas dataframe, but found it was unexpectedly very slow (https:\/\/twitter.com\/RokoMijicDev\/status\/1280089196926054400). I decided to take a look for myself.\n\nLet's start by importing the necessary libraries.","2650f47c":"Now let's create some random data to sample from."}}