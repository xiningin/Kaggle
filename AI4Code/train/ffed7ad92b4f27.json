{"cell_type":{"52e0010a":"code","4bd178e0":"code","e019952f":"code","711a3020":"code","61fa415c":"code","9e20bae0":"code","981f2ecb":"code","6bbd018d":"code","d45b6570":"code","e790dd68":"code","4f72ef1d":"code","f9709465":"code","c37a824d":"code","fb62a9d8":"code","45fdb767":"code","b6ffa8c8":"code","78a09b58":"code","e301f328":"code","37840443":"code","530556a2":"code","76403153":"code","37b59452":"code","6e924806":"code","f5befc37":"code","c5d4b646":"code","105c8b37":"code","7a7fe098":"code","580f06b0":"code","95c144bd":"code","8df6d971":"code","c5506679":"code","03f71dda":"code","217f02c1":"code","9486c1e4":"code","72848517":"code","5ae658d3":"code","eadda513":"code","ee04a97b":"code","7c775dcd":"code","3c3c46e8":"code","cdd0ba67":"code","8cbb3ce9":"code","624be4aa":"code","4f195e37":"code","fbb62504":"code","d697e6d9":"markdown","00359d3e":"markdown","a11189e3":"markdown","a3d7c550":"markdown","412f4c6c":"markdown","9ae73c04":"markdown"},"source":{"52e0010a":"import numpy as np\nimport pandas as pd\npd.set_option('display.max_columns', 20)","4bd178e0":"df_M=pd.read_csv(\"\/kaggle\/input\/movielens-20m-dataset\/movie.csv\")\ndf_M.shape","e019952f":"df_R=pd.read_csv('\/kaggle\/input\/movielens-20m-dataset\/rating.csv')\ndf_R.shape","711a3020":"df=df_M.merge(df_R,\"left\",on=\"movieId\")\ndf.head()","61fa415c":"df[\"title\"].value_counts().sort_values(ascending=False).describe()","9e20bae0":"rating_count=pd.DataFrame(df[\"title\"].value_counts())\nrating_count.head()","981f2ecb":"exc_movies=rating_count[rating_count[\"title\"]<=8000].index\nexc_movies","6bbd018d":"common_movies=df[~df[\"title\"].isin(exc_movies)]\ncommon_movies.head()","d45b6570":"user_movie_df=common_movies.pivot_table(index=\"userId\",columns=\"title\",values=\"rating\")\n","e790dd68":"user_movie_df.head()","4f72ef1d":"def item_based_recommender(movie_name,user_movie_df):\n    movie_name_df=user_movie_df[movie_name]\n    return list(user_movie_df.corrwith(movie_name_df).sort_values(ascending=False).head(6).index)\n","f9709465":"random_user = int(pd.Series(user_movie_df.index).sample(1, random_state=10).values)\nrandom_user","c37a824d":"movie_code=df_R[df_R[\"userId\"]==random_user].sort_values(\"timestamp\", ascending=False).\\\nsort_values(\"rating\", ascending=False).iloc[0,1]\nmovie_code","fb62a9d8":"movie_name=\"\"\nfor i in (df_M[df_M[\"movieId\"]==movie_code][\"title\"]):\n    movie_name+=i\n\nmovie_name","45fdb767":"item_based_recommender(movie_name,user_movie_df)","b6ffa8c8":"recommend_5_df=pd.DataFrame({i:item_based_recommender(i,user_movie_df) for i in user_movie_df.columns.tolist()}).drop(index=0)\nrecommend_5_df","78a09b58":"recommend_5_df[movie_name]","e301f328":"user_movie_df.head()","37840443":"random_user # the user to recommend movie","530556a2":"random_user_df = user_movie_df[user_movie_df.index == random_user]\nrandom_user_df","76403153":"movies_watched = random_user_df.columns[random_user_df.notna().any()].tolist() # list of movies watched by the user\nmovies_watched[0:20]                  # 20 sample from the list","37b59452":"len(movies_watched)              # how many movies the user watched?","6e924806":"movies_watched_df = user_movie_df[movies_watched] # Those who watched at least one of the movies the user watched\nmovies_watched_df.head()","f5befc37":"movies_watched_df=movies_watched_df[~movies_watched_df[movie_name].isnull()]#the highest rated by random user is in variable=>movie_name\n                                                        # if the other users havent seen this movie, it would be excluded.","c5d4b646":"user_movie_count = movies_watched_df.T.notnull().sum().reset_index() #Discarding null values and making some index corrections\nuser_movie_count.columns = [\"userId\", \"movie_count\"]\nuser_movie_count","105c8b37":"k=len(movies_watched)*0.60   # this variable is used for detect the similarity, it is depended number of movies watched.\nk # the users that watched the movies below k are excluded ","7a7fe098":"users_same_movies=user_movie_count[user_movie_count[\"movie_count\"] > k][\"userId\"]\nusers_same_movies","580f06b0":"users_same_movies.index","95c144bd":"final_df = pd.concat([movies_watched_df[movies_watched_df.index.isin(users_same_movies)],\n                      random_user_df[movies_watched]])\nfinal_df.head()","8df6d971":"corr_df=final_df.T.corr().unstack().sort_values().drop_duplicates() #Correlation for UserA X UserB\ncorr_df","c5506679":"corr_df = pd.DataFrame(corr_df, columns=[\"corr\"])\ncorr_df","03f71dda":"corr_df.index.names = ['user_id_1', 'user_id_2']","217f02c1":"corr_df = corr_df.reset_index()\ncorr_df","9486c1e4":"top_users=corr_df[(corr_df[\"user_id_1\"] == random_user) & (corr_df[\"corr\"] >= 0.50)][[\"user_id_2\",\"corr\"]].reset_index(drop=True)","72848517":"top_users = top_users.sort_values(by='corr', ascending=False)\ntop_users.rename(columns={\"user_id_2\": \"userId\"}, inplace=True)\ntop_users=top_users[top_users[\"userId\"]!=random_user]\ntop_users","5ae658d3":"df_R.head()","eadda513":"top_users_ratings = top_users.merge(df_R[[\"userId\", \"movieId\", \"rating\"]], how='inner')\ntop_users_ratings","ee04a97b":"top_users_ratings['weighted_rating'] = top_users_ratings['corr'] * top_users_ratings['rating']\n\n\ntop_users_ratings.head()","7c775dcd":"recommendation_df=top_users_ratings.groupby('movieId').agg({\"weighted_rating\": \"mean\"})","3c3c46e8":"recommendation_df = recommendation_df.reset_index()","cdd0ba67":"recommendation_df[[\"movieId\"]].nunique()","8cbb3ce9":"recommendation_df[recommendation_df[\"weighted_rating\"] > 2]","624be4aa":"movies_to_be_recommend = recommendation_df[recommendation_df[\"weighted_rating\"] > 2].\\\nsort_values(\"weighted_rating\", ascending=False)","4f195e37":"movies_to_be_recommend.merge(df_M[[\"movieId\", \"title\"]])[\"title\"].head()","fbb62504":"recommend_5_df[movie_name]","d697e6d9":"75% of all movie ratings are below 194, for modeling these underrated movies are excluded","00359d3e":"# USER BASED RECOMMENDER","a11189e3":"Top five recommendation movie list, getting from item based recommender model. \nIt is  considered to similar random user's top ranked movie => Singin' in the Rain (1952)","a3d7c550":"--------------------------------------------------------------------------------------------------------------","412f4c6c":"Top five recommendation movie list, getting from user based recommender model. ","9ae73c04":"# ITEM BASED RECOMMENDER"}}