{"cell_type":{"370944d4":"code","0cdffdcb":"code","ed64d4d5":"code","33b669d8":"code","74f4a119":"code","6796d955":"code","6134b42d":"code","1fa0e4b2":"code","c3467ece":"code","99ee6dd8":"code","700c7917":"code","ac66fc30":"code","19c46928":"code","38ec76f3":"code","2c879eed":"code","60452ecb":"markdown","b1044b53":"markdown","7069a0ab":"markdown","28c98e4e":"markdown","b68baa4e":"markdown","7e69aa4f":"markdown"},"source":{"370944d4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0cdffdcb":"df = pd.read_csv('\/kaggle\/input\/iris\/Iris.csv')\ndf.head()","ed64d4d5":"print(\"features\")\nprint(df.columns)\nprint(\"Species\")\nprint(df.Species.unique())","33b669d8":"df.info()","74f4a119":"#n\u00fcmerik istatistikler\n\ndf.describe().T # okumay\u0131 kolayla\u015ft\u0131rmak i\u00e7in matrisin sat\u0131rlar\u0131 ile s\u00fctunlar\u0131n\u0131n yerlerini de\u011fi\u015ftir","6796d955":"# t\u00fcr\u00fc setosa olanlar i\u00e7in \nsetosa = df[df.Species == \"Iris-setosa\"]\n\nprint(setosa.describe())","6134b42d":"versicolor = df[df.Species == \"Iris-versicolor\"]\n\nprint(versicolor.describe())","1fa0e4b2":"# id bir \u00f6zellik i\u00e7ermedi\u011finden \n\ndf1 = df.drop([\"Id\"],axis=1)","c3467ece":"import matplotlib.pyplot as plt","99ee6dd8":"# plot un defaultunda line plot vard\u0131r\ndf1.plot()\nplt.show()   # g\u00f6sterimi sa\u011flar\n ","700c7917":"setosa = df[df.Species == \"Iris-setosa\"]\nversicolor = df[df.Species == \"Iris-versicolor\"]\nvirginica = df[df.Species == \"Iris-virginica\"]\n\n# plt.plot(x, y, color, label ) \n\nplt.plot(setosa.Id,setosa.PetalLengthCm,color=\"red\",label= \"setosa\")\nplt.plot(versicolor.Id,versicolor.PetalLengthCm,color=\"green\",label= \"versicolor\")\nplt.plot(virginica.Id,virginica.PetalLengthCm,color=\"blue\",label= \"virginica\")\n\nplt.legend()     # etiketi en uygun yere yerle\u015ftir\n\nplt.xlabel(\"Id\")\nplt.ylabel(\"PetalLengthCm\")\nplt.show()\n\n\n","ac66fc30":"df1.plot(grid=True,alpha= 0.9, linestyle = \":\") # alpha -> saydaml\u0131k, 0 a yakla\u015ft\u0131k\u00e7a saydaml\u0131k artar\nplt.show() ","19c46928":"# scatter plot genelde iki \u00f6zelli\u011fi kar\u015f\u0131la\u015ft\u0131rmak i\u00e7in kullan\u0131l\u0131r\n\nsetosa = df[df.Species == \"Iris-setosa\"]\nversicolor = df[df.Species == \"Iris-versicolor\"]\nvirginica = df[df.Species == \"Iris-virginica\"]\n\n\nplt.scatter(setosa.PetalLengthCm,setosa.PetalWidthCm,color=\"red\",label=\"setosa\")\nplt.scatter(versicolor.PetalLengthCm,versicolor.PetalWidthCm,color=\"green\",label=\"versicolor\")\nplt.scatter(virginica.PetalLengthCm,virginica.PetalWidthCm,color=\"blue\",label=\"virginica\")\n\nplt.legend()\n\nplt.xlabel(\"PetalLengthCm\")\nplt.ylabel(\"PetalWidthCm\")\nplt.title(\"scatter plot\")\nplt.show()","38ec76f3":"# histogram de\u011ferlerin frekans\u0131n\u0131 g\u00f6sterir.\n\nplt.hist(setosa.PetalLengthCm,bins= 20) #bins barlar\u0131n say\u0131s\u0131\nplt.xlabel(\"PetalLengthCm values\")\nplt.ylabel(\"frekans\")\nplt.title(\"hist\")\nplt.show()","2c879eed":"# subplots ayn\u0131 \u00e7er\u00e7eve i\u00e7indeki \u00e7izimlerin ayr\u0131lmas\u0131  \n\ndf1.plot(grid=True,alpha= 0.9,subplots = True)\nplt.show()","60452ecb":"yukar\u0131daki iki t\u00fcr i\u00e7in ta\u00e7 yapraklara ait ortalama de\u011ferleri ay\u0131r\u0131c\u0131 olabilir.","b1044b53":"bu grafi\u011fe g\u00f6re setosa ve di\u011ferleri aras\u0131nda g\u00f6zle g\u00f6r\u00fcl\u00fcr bir fark var","7069a0ab":"## H\u0131zl\u0131 Bak\u0131\u015f","28c98e4e":"## Okuma","b68baa4e":"\u0130ris veri seti 150 \u00f6rnekten olu\u015fur. Ayn\u0131 t\u00fcre ait 3 farkl\u0131 alt t\u00fcr\u00fcn her birine ait 50 g\u00f6zlem i\u00e7erir. \nHer numuneden \u00e7anak yapraklar\u0131 ve ta\u00e7 yapraklar\u0131n\u0131n santimetre cinsinden uzunlu\u011fu ve geni\u015fli\u011fi olmak \u00fczere d\u00f6rt \u00f6zellik bulunur. \nEksik veri i\u00e7ermez","7e69aa4f":"## Matplotlib"}}