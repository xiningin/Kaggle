{"cell_type":{"dea9beeb":"code","5bceee18":"code","c7c51657":"code","37812616":"code","98bf40a2":"code","2dbf2b71":"code","279d920f":"code","7b296945":"markdown","52a9f2f7":"markdown","99d04c7d":"markdown","28fad7e3":"markdown","d772fef3":"markdown","c503776d":"markdown","3590f5dc":"markdown","1e1b2f33":"markdown","f21c639f":"markdown","f0126566":"markdown"},"source":{"dea9beeb":"from matplotlib import pyplot\nimport matplotlib.pyplot as plt \nfrom pandas import read_csv\ndata = read_csv(\"..\/input\/pima-indians-diabetes-database\/diabetes.csv\")\ndata.hist(figsize = (10,10), color = \"#5F9EA0\")\nplt.show() \n","5bceee18":"plt.savefig('fig_1.png')","c7c51657":"data.plot(kind='density', subplots=True, layout=(3,3), sharex=False , figsize =(10,10))\nplt.show()","37812616":"plt.savefig('fig_2.png')","98bf40a2":"data.plot(kind='box', subplots=True, layout=(3,3), sharex=False,sharey=False ,figsize =(10,10))\nplt.show()","2dbf2b71":"from matplotlib import pyplot\nfrom pandas import read_csv\nimport numpy\n\nnames = ['preg', 'plas', 'pres', 'skin', 'test', 'mass', 'pedi', 'age', 'class']\nnames = data.columns.tolist()\ncorrelations = data.corr()\nfig = pyplot.figure(figsize =(22,22))\nax = fig.add_subplot(111)\ncax = ax.matshow(correlations, vmin=-1, vmax=1)\nfig.colorbar(cax)\nticks = numpy.arange(0,9,1)\nax.set_xticks(ticks)\nax.set_yticks(ticks)\nax.set_xticklabels(names)\nax.set_yticklabels(names)\npyplot.show()","279d920f":"\nfrom matplotlib import pyplot\nfrom pandas import read_csv\nfrom pandas.plotting import scatter_matrix\n\nscatter_matrix(data ,figsize = (20,20))\npyplot.show()","7b296945":"![image.png](attachment:image.png)\n","52a9f2f7":"# Correlation Matrix Plot","99d04c7d":"* ***Univariate Plots:*** \n\nUnderstanding Attributes Independently\nThe simplest type of visualization is single-variable or \u201cunivariate\u201d visualization. With the help of univariate visualization, we can understand each attribute of our dataset independently. The following are some techniques in Python to implement univariate visualization \u2212\n\n* **Histograms****\nHistograms group the data in bins and is the fastest way to get idea about the distribution of each attribute in dataset. The following are some of the characteristics of histograms \u2212\n\n\nIt provides us a count of the number of observations in each bin created for visualization.\n\n\nFrom the shape of the bin, we can easily observe the distribution i.e. weather it is Gaussian, skewed or exponential.\n\n\nHistograms also help us to see possible outliers.","28fad7e3":"# Scatter Matrix Plot","d772fef3":"# **What is Data Visualization?****\n![image.png](attachment:image.png)\n\nin ordet to paint a picture of the data we collected from our primary or secondary sources , we can **interpret** it.\nData visualization gives us a clear idea of what the information means by giving it visual context through maps or graphs ,we can see how the data looks like and what kind of correlation is held by the attributes of data.\nThis makes the data more natural for the human mind to comprehend and therefore makes it easier to identify trends, patterns, and outliers within large data sets.  ","c503776d":"* **Box and Whisker Plots****\n\nBox and Whisker plots, also called boxplots in short, is another useful technique to review the distribution of each attribute\u2019s distribution. The following are the characteristics of this technique \u2212\n\nIt is univariate in nature and summarizes the distribution of each attribute.\n\nIt draws a line for the middle value i.e. for median.\n\nIt draws a box around the 25% and 75%.\n\nIt also draws whiskers which will give us an idea about the spread of the data.\n\nThe dots outside the whiskers signifies the outlier values. Outlier values would be 1.5 times greater than the size of the spread of the middle data.\n\n","3590f5dc":"**if you write (((from pandas.tools.plotting import scatter_matrix))) you will get an error. **\n\n\n\n*the answer is here :* \nTraceback (most recent call last):\n  File \"brod.py\", line 3, in <module>\n    from pandas.tools.plotting import scatter_matrix\nModuleNotFoundError: No module named 'pandas.tools'\nThis happens in new version pandas. This\n\nfrom pandas.tools.plotting import scatter_matrix\nis for old version pandas if you using new version pandas then write code\n\nfrom pandas.plotting import scatter_matrix\ninstead of\n\nfrom pandas.tools.plotting import scatter_matrix","1e1b2f33":"What is Data Visualization?\nThere's a story behind your numbers. Visualizing data brings them to life.","f21c639f":"* ****Density Plots**\n\nAnother quick and easy technique for getting each attributes distribution is Density plots. It is also like histogram but having a smooth curve drawn through the top of each bin. We can call them as abstracted histograms.","f0126566":"**The dataset :**\n\n\n* **Context**\nThis dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima Indian heritage.\n\n* **Content**\nThe datasets consists of several medical predictor variables and one target variable, Outcome. Predictor variables includes the number of pregnancies the patient has had, their BMI, insulin level, age, and so on.\n\n"}}