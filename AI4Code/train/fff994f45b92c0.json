{"cell_type":{"c0042ba8":"code","2a68e7fa":"code","0e6f6c53":"code","de15260e":"code","eec7e300":"code","15e5a2cf":"code","5e8bc560":"code","97c2b138":"code","c0c39080":"code","167ab4ed":"code","19f0fac2":"code","eefb4cff":"markdown","ffeb2bc8":"markdown","994b2340":"markdown","a469c4a5":"markdown"},"source":{"c0042ba8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2a68e7fa":"import bs4\nfrom bs4 import BeautifulSoup\nimport requests\nimport re\nimport time\nfrom datetime import datetime\n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","0e6f6c53":"df = pd.read_csv('\/kaggle\/input\/paralmpic-2020\/Paralympic_Medal_Count.csv')\ndf.head()","de15260e":"df.drop_duplicates(keep='first',inplace=True)","eec7e300":"df.info()","15e5a2cf":"count = df[['Gold','silver','bronze']].sum().reset_index().rename(columns={'index':'Medal',0:'Count'})","5e8bc560":"plt.figure(figsize=(9,5),facecolor='black')\nplt.xticks(rotation=0,fontsize=12,color='white',fontweight='bold')\nplt.yticks(fontsize=12,color='black',fontweight='bold')\ncolors=['gold','silver','#CD7F32']\na = sns.barplot(x='Medal',y='Count',data=count,palette=colors)\nfor p in a.patches:\n    a.annotate(format(p.get_height(),'.1f'),(p.get_x()+p.get_width()\/2.,p.get_height()),ha='center',\n              va='center',xytext=(0,7.2),textcoords='offset points',fontsize=14,color='white')\na.set_facecolor('black')\na.set_xlabel(\"Total Medals\", fontsize = 20,color='pink')\na.spines['left'].set_color('black')\na.spines['top'].set_color('black')\na.spines['bottom'].set_color('white')\na.spines['right'].set_color('black')\nplt.grid(False)","97c2b138":"cols= ['Team\/Npc','rank by total','total medals']\nby_rank = df.sort_values('rank by total',ascending=True).reset_index().head(10)\nby_rank = by_rank[cols].head(10)","c0c39080":"sns.set(rc={'figure.figsize':(14,7)})\nplt.figure(facecolor='black')\nplt.xticks(rotation=0,fontsize=16,color='white',fontweight='bold')\nplt.yticks(fontsize=16,color='white',fontweight='bold')\na = sns.barplot(y='Team\/Npc',x='total medals',data = by_rank,palette='spring',edgecolor='none')\nfor p in a.patches:\n    width = p.get_width()\n    plt.text(6+p.get_width(),p.get_y()+0.55*p.get_height(),'{:1.1f}'.format(width),ha='center',va='center',\n             fontsize=14,color='gold',fontweight='bold')\na.set_xlabel(\"Number of Medals\", fontsize = 20,color='pink')\nplt.title(\"Top 10 teams with highest medals\",fontsize=28,color='pink')\na.set_facecolor('black')\na.spines['left'].set_color('white')\na.spines['top'].set_color('black')\na.spines['bottom'].set_color('black')\na.spines['right'].set_color('black')\nplt.grid(False)\n","167ab4ed":"plt.figure(figsize=(11,7),facecolor='black')\nplt.xticks(rotation=0,fontsize=12,color='white',fontweight='bold')\nplt.yticks(fontsize=12,color='white',fontweight='bold')\nsns.heatmap(df.corr(),annot=True,cmap='Spectral')","19f0fac2":"by_rank = df.sort_values('rank by total',ascending=True).reset_index().head(10)\nby_rank = by_rank.drop('index',axis=1)\nplt.figure(figsize=(16,7))\nxpos = np.arange(len(by_rank['Team\/Npc'].head(10)))\nplt.xticks(xpos,by_rank['Team\/Npc'],rotation=90,fontweight='bold',fontsize=13)\nplt.bar(xpos-0.3,'Gold',data=by_rank.head(10),color='gold',width=0.3)\nplt.bar(xpos,'silver',data=by_rank.head(10),color='#C0C0C0',width=0.3,label='Silver')\nplt.bar(xpos+0.3,'bronze',data=by_rank.head(10),color='#C39B77',width=0.3,label='Bronze')\nplt.yticks(fontsize=12,color='black',fontweight='bold')\nplt.grid(False)\nplt.legend()\nplt.show()","eefb4cff":"# Top 10 Teams with highest medals","ffeb2bc8":"# Top 10 Teams different medals","994b2340":"# Correlation","a469c4a5":"# Total number of Gold, Silver, Bronze medals"}}