{"cell_type":{"ed11610d":"code","ed7430a9":"code","8ec51fd1":"code","43055a07":"code","24ef076e":"code","1da90d72":"code","1aa4227c":"code","96d09818":"code","2da21921":"code","ac090c9e":"code","e23a08bf":"code","c3f86539":"code","1e6072a6":"code","1194f4dd":"code","74bb47e8":"code","93fbd3dc":"code","7bed4da2":"code","4a4f31c9":"code","85fd5d40":"code","5b849819":"code","1fcae6e1":"code","5585f7f4":"code","2804a202":"code","01ea3416":"code","340fc1e9":"code","e0233673":"markdown","fc0c9251":"markdown","d19a01dd":"markdown","97ade5c1":"markdown","cc9bcd7f":"markdown","8c575b3e":"markdown","8629ecc9":"markdown"},"source":{"ed11610d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ed7430a9":"#LOADING DATA","8ec51fd1":"import pandas as pd\nimport seaborn as sns","43055a07":"heart_attack = pd.read_csv('..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv')\nheart_attack.head()\nheart_attack.tail()\n#pd.set_option(\"display.max_rows\", None, \"display.max_columns\", None)\n\n#print(heart_attack)","24ef076e":"sns.displot(heart_attack, x=\"age\", hue=\"output\", multiple=\"dodge\")\n#sns.displot(penguins, x=\"flipper_length_mm\", hue=\"species\", element=\"step\")\n\n#sns.barplot(x=heart_attack.output,y= heart_attack.age)","1da90d72":"\nsns.displot(heart_attack, x=\"sex\", hue=\"output\", multiple=\"dodge\")\n","1aa4227c":"sns.displot(heart_attack, x=\"trtbps\", hue=\"output\", multiple=\"dodge\")\n#sns.barplot(x=heart_attack.output,y= heart_attack.trtbps)","96d09818":"sns.displot(heart_attack, x=\"cp\", hue=\"output\", multiple=\"dodge\")\n","2da21921":"\nsns.displot(heart_attack, x=\"chol\", hue=\"output\", multiple=\"dodge\")\n","ac090c9e":"sns.displot(heart_attack, x=\"fbs\", hue=\"output\", multiple=\"dodge\")\n","e23a08bf":"sns.displot(heart_attack, x=\"restecg\", hue=\"output\", multiple=\"dodge\")\n","c3f86539":"sns.displot(heart_attack, x=\"thalachh\", hue=\"output\", multiple=\"dodge\")\n","1e6072a6":"sns.displot(heart_attack, x=\"exng\", hue=\"output\", multiple=\"dodge\")\n","1194f4dd":"sns.displot(heart_attack, x=\"oldpeak\", hue=\"output\", multiple=\"dodge\")\n","74bb47e8":"\nsns.displot(heart_attack, x=\"slp\", hue=\"output\", multiple=\"dodge\")\n","93fbd3dc":"\nsns.displot(heart_attack, x=\"caa\", hue=\"output\", multiple=\"dodge\")\n","7bed4da2":"\nsns.displot(heart_attack, x=\"thall\", hue=\"output\", multiple=\"dodge\")\n","4a4f31c9":"\nsns.displot(heart_attack, x=\"exng\", hue=\"output\", multiple=\"dodge\")","85fd5d40":"y= heart_attack.output","5b849819":"heart_attack_features = [\"age\", \"sex\", \"trtbps\",\"fbs\", \"chol\", \"thalachh\"]\n\nX = heart_attack[heart_attack_features]","1fcae6e1":"from sklearn.model_selection import train_test_split\nX_train, X_valid, y_train, y_valid = train_test_split(X, y, train_size=0.8, test_size=0.2,\n                                                                random_state=0)\n\n\n\n\n\n#train_X, val_X, train_y, val_y = train_test_split(X, y,random_state = 0)","5585f7f4":"from sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_absolute_error\n\nheart_attack_model = RandomForestRegressor(random_state=1, n_estimators=1000)\nheart_attack_model.fit(X_train, y_train)\nheart_attack_pred1 = heart_attack_model.predict(X_valid)\nprint(mean_absolute_error(y_valid, heart_attack_pred1))","2804a202":"from sklearn.ensemble import RandomForestClassifier\n\nheart_attack_model3 = RandomForestClassifier(random_state=1, n_estimators=1000)\nheart_attack_model3.fit(X_train, y_train)\nheart_attack_pred3 = heart_attack_model3.predict(X_valid)\nprint(mean_absolute_error(y_valid, heart_attack_pred3))\n\n\n","01ea3416":"from xgboost import XGBRegressor\nheart_attack_model2 = XGBRegressor(n_estimators=500)\nheart_attack_model2.fit(X_train, y_train, \n             early_stopping_rounds=5, \n             eval_set=[(X_valid, y_valid)],\n             verbose=False)\nheart_attack_pred2 = heart_attack_model2.predict(X_valid)\nmae_2 = mean_absolute_error(heart_attack_pred2, y_valid)\nprint(\"Mean Absolute Error:\" , mae_2)","340fc1e9":"\n\nprint(heart_attack_pred3)","e0233673":"#Choosing features","fc0c9251":"#Splitting data in to training and test","d19a01dd":"#RandomForestClassifier MAE","97ade5c1":"#choosing target\n","cc9bcd7f":"#DATA VISUALISATION","8c575b3e":"#XGBRegresssor Mae","8629ecc9":"#Random forest MAE\n"}}