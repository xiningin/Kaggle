{"cell_type":{"ff1ea6a0":"code","a01ce9b3":"code","bf92a015":"code","095812e6":"code","aa32a700":"code","06d8c952":"code","400ceb37":"code","55fa544e":"code","f8e7d47e":"code","7102897a":"code","a3a47643":"code","ebd32b52":"code","53caf4d9":"code","b314d9e3":"code","2986b5e1":"code","7eb7350d":"code","f083e1de":"code","704b3ee9":"code","eb887c6c":"code","4faf1ad7":"code","6122a91f":"code","015cff34":"code","ddfef603":"markdown","f4a0492a":"markdown","a8e79846":"markdown","681c0d9b":"markdown","3ba953ee":"markdown","53125cfe":"markdown","63340e73":"markdown","09727c0c":"markdown","d3647ac8":"markdown"},"source":{"ff1ea6a0":"import warnings\nwarnings.filterwarnings('ignore')\n\nimport numpy as np\nimport pandas as pd\n\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\n%matplotlib inline\n\nimport sklearn\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.linear_model import LinearRegression\n\nimport tensorflow as tf\nfrom tensorflow import keras\n\nfrom sklearn import preprocessing\ntf.__version__","a01ce9b3":"weather_df = pd.read_csv('..\/input\/weatherHistory.csv')","bf92a015":"weather_df.head()","095812e6":"weather_df.columns\nweather_df.shape\nweather_df.describe()\nweather_df.info()\nweather_df.isnull().any()\nweather_df.isnull().all()","aa32a700":"round(100*(weather_df.isnull().sum()\/len(weather_df.index)),2)","06d8c952":"weather_df['Precip Type'].value_counts()","400ceb37":"weather_df.loc[weather_df['Precip Type'].isnull(),'Precip Type']='rain'","55fa544e":"round(100*(weather_df.isnull().sum()\/len(weather_df.index)),2)","f8e7d47e":"plt.scatter(x = 'Wind Speed (km\/h)',y = 'Wind Bearing (degrees)',data=weather_df)","7102897a":"plt.figure(figsize = (10,10))\nplt.subplot()\nplt.subplot(2,3,1)\nplt.title('Wind Speed (km\/h)')\nplt.hist(x = 'Wind Speed (km\/h)',bins =20,data = weather_df)\n\nplt.subplot(2,3,2)\nplt.title('Apparent Temperature (C)')\nplt.hist(x = 'Apparent Temperature (C)',bins =20,data = weather_df)\n\nplt.subplot(2,3,3)\nplt.title('Humidity')\nplt.hist(x = 'Humidity',bins =20,data = weather_df)\n\nplt.subplot(2,3,4)\nplt.title('Wind Bearing (degrees)')\nplt.hist(x = 'Wind Bearing (degrees)',bins =100,data = weather_df)\n\nplt.subplot(2,3,5)\nplt.title('Pressure (millibars)')\nplt.hist(x = 'Pressure (millibars)',bins =20,data = weather_df)\n\nplt.subplot(2,3,6)\nplt.title('Visibility (km)')\nplt.hist(x = 'Visibility (km)',bins =20,data = weather_df)\n\n\nplt.show()","a3a47643":"## Creating corellation metrics\nweather_corr = weather_df[list(weather_df.dtypes[weather_df.dtypes!='object'].index)].corr()","ebd32b52":"sns.heatmap(weather_corr,annot=True)","53caf4d9":"sns.pairplot(weather_df)","b314d9e3":"# Imputing binary values in type column \nweather_df.loc[weather_df['Precip Type']=='rain','Precip Type']=1\nweather_df.loc[weather_df['Precip Type']=='snow','Precip Type']=0","2986b5e1":"weather_df_num=weather_df[list(weather_df.dtypes[weather_df.dtypes!='object'].index)]","7eb7350d":"weather_y = weather_df_num.pop('Temperature (C)')\nweather_X = weather_df_num","f083e1de":"train_X,test_X,train_y,test_y = train_test_split(weather_X,weather_y,test_size = 0.2,random_state=4)","704b3ee9":"train_X.head()","eb887c6c":"model = LinearRegression()\nmodel.fit(train_X,train_y)","4faf1ad7":"prediction = model.predict(test_X)","6122a91f":"## Calculating the error \nnp.mean((prediction-test_y)**2)","015cff34":"pd.DataFrame({'actual':test_y,\n             'prediction':prediction,\n             'diff':(test_y-prediction)})","ddfef603":"#### Importing the dataframe","f4a0492a":"#### Doing basic checks on the dataframe","a8e79846":"#### Building the model","681c0d9b":"#### Spliting the data for training and testing purpose","3ba953ee":"#### Checking the dataframe","53125cfe":"#### Checking the number of nulls in percentage","63340e73":"#### Now we will try to impute null with the maximum occured values","09727c0c":"#### Importing necessary libraries","d3647ac8":"#### Doing some exploratory data analysis"}}