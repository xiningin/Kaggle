{"cell_type":{"7e6266ad":"code","d8281fc5":"code","3e0e4a47":"code","21387fc8":"code","baed9c8b":"code","d1bb21aa":"code","82979992":"code","eba4fa9e":"code","7e1a6588":"code","c090bd72":"code","26374693":"code","5098ff9a":"code","ef42f19d":"code","b47bacee":"code","0fad41c8":"code","4b254efa":"code","7c33c5b2":"code","9a2cdb85":"code","1fd0781b":"code","ff949d21":"code","a16411ac":"code","777b3fc0":"code","f90ee056":"code","83dce89a":"code","74802b2f":"markdown","d4ffcaef":"markdown","0bf4ab17":"markdown","cc229f9a":"markdown","c97e268d":"markdown","7168afec":"markdown","7a1b4718":"markdown","fb7456dd":"markdown","055e0d2e":"markdown","4f671884":"markdown","28f8bc15":"markdown","65f95dad":"markdown"},"source":{"7e6266ad":"import os\nGPU_id = 0\nos.environ['CUDA_VISIBLE_DEVICES'] = str(GPU_id)","d8281fc5":"import warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport fastai\nprint(fastai.__version__)\nfrom fastai.vision import *\nfrom fastai.callbacks import SaveModelCallback\nimport time","3e0e4a47":"path = Path('..\/input\/hymenoptera-data\/hymenoptera_data')\nprint(type(path))\npath.ls()","21387fc8":"(path\/'train').ls()","baed9c8b":"il = ImageList.from_folder(path)\nil.items[0]","d1bb21aa":"il","82979992":"il[0].show()","eba4fa9e":"sd = il.split_by_folder(train='train', valid='val')\nsd","7e1a6588":"ll = sd.label_from_folder()\nll","c090bd72":"%%time\nx,y = ll.train[0]\nx.show()\nprint(y,x.shape)","26374693":"tfms = get_transforms(max_rotate=25); len(tfms)","5098ff9a":"ll = ll.transform(tfms,size=224)","ef42f19d":"%%time\nx,y = ll.train[0]\nx.show()\nprint(y,x.shape)","b47bacee":"%%time\nbs = 32\ndata = ll.databunch(bs=bs).normalize(imagenet_stats)","0fad41c8":"x,y = data.train_ds[0]\nx.show()\nprint(y)","4b254efa":"def _plot(i,j,ax): data.train_ds[0][0].show(ax)\nplot_multi(_plot, 3, 3, figsize=(8,8))","7c33c5b2":"xb,yb = data.one_batch()\nprint(xb.shape,yb.shape)\ndata.show_batch(rows=3, figsize=(10,8))","9a2cdb85":"%%time\nlearn = cnn_learner(data, models.resnet18, metrics=accuracy)\nlearn.model_dir = '\/kaggle\/working\/models'","1fd0781b":"!pwd","ff949d21":"learn.lr_find()","a16411ac":"learn.recorder.plot()","777b3fc0":"learn.fit_one_cycle(10,max_lr=slice(0.007),callbacks=[\n            SaveModelCallback(learn, every='improvement', monitor='accuracy'),\n            ])","f90ee056":"pred, truth = learn.get_preds()","83dce89a":"pred = pred.numpy()\ntruth = truth.numpy()\nacc = np.mean(np.argmax(pred,axis=1) == truth)\nprint('Validation Accuracy %.4f'%acc)","74802b2f":"### show a batch of images with labels","d4ffcaef":"### Create a Path instance","0bf4ab17":"### Apply transformations","cc229f9a":"### Create an ImageList instance","c97e268d":"### Create a label list","7168afec":"### Create a CNN learner","7a1b4718":"### training","fb7456dd":"### find a proper learning rate","055e0d2e":"### Show an image with label","4f671884":"### Show random transformations of the same image","28f8bc15":"### Create a databunch instance","65f95dad":"### Create item lists for train and valid"}}